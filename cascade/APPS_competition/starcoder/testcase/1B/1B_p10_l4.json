[
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2 3\") == \"5\", \"The first test case is incorrect.\"\nassert solution(\"8\\n( 2 ( 2 1 ) ) 3\") == \"9\", \"The second test case is incorrect.\"\nassert solution(\"4\\n( 12 3 )\") == \"36\", \"The third test case is incorrect.\"\nassert solution(\"6\\n( 2 ) ( 3 )\") == \"5\", \"The fourth test case is incorrect.\"\nassert solution(\"6\\n( ( 2 3 ) )\") == \"5\", \"The fifth test case is incorrect.\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n2 3\") == \"5\"\nassert solution(\"8\\n( 2 ( 2 1 ) ) 3\") == \"9\"\nassert solution(\"4\\n( 12 3 )\") == \"36\"\nassert solution(\"6\\n( 2 ) ( 3 )\") == \"5\"\nassert solution(\"6\\n( ( 2 3 ) )\") == \"5\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == \"5\", \"Incorrect output for sample input 1\"\nassert solution(sample_input_2) == \"9\", \"Incorrect output for sample input 2\"\nassert solution(sample_input_3) == \"36\", \"Incorrect output for sample input 3\"\nassert solution(sample_input_4) == \"5\", \"Incorrect output for sample input 4\"\nassert solution(sample_input_5) == \"5\", \"Incorrect output for sample input 5\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '5'\nassert solution(input()) == '9'\nassert solution(input()) == '36'\nassert solution(input()) == '5'\nassert solution(input()) == '5'"
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n2\n2 3\n''') == '5'\n\nassert solution('''\n8\n( 2 ( 2 1 ) ) 3\n''') == '9'\n\nassert solution('''\n4\n( 12 3 )\n''') == '36'\n\nassert solution('''\n6\n( 2 ) ( 3 )\n''') == '5'\n\nassert solution('''\n6\n( ( 2 3 ) )\n''') == '5'"
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n2 3\") == \"5\", \"Input 2\"\nassert solution(\"8\\n( 2 ( 2 1 ) ) 3\") == \"9\", \"Input 3\"\nassert solution(\"4\\n( 12 3 )\") == \"36\", \"Input 4\"\nassert solution(\"6\\n( 2 ) ( 3 )\") == \"5\", \"Input 5\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n2 3\\n') == 5\nassert solution('8\\n( 2 ( 2 1 ) ) 3\\n') == 9\nassert solution('4\\n( 12 3 )\\n') == 36\nassert solution('6\\n( 2 ) ( 3 )\\n') == 5\nassert solution('6\\n( ( 2 3 ) )\\n') == 5\n\nfrom functools import reduce"
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n2 3\\n\") == \"5\"\nassert solution(\"8\\n( 2 ( 2 1 ) ) 3\\n\") == \"9\"\nassert solution(\"4\\n( 12 3 )\\n\") == \"36\"\nassert solution(\"6\\n( 2 ) ( 3 )\\n\") == \"5\"\nassert solution(\"6\\n( ( 2 3 ) )\\n\") == \"5\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test Case {t} failed: Expected {output}, got {solution(input())}\" for t, input, output in [\n    (1, \"2 3\", 5),\n    (2, \"8 ( 2 ( 2 1 ) ) 3\", 9),\n    (3, \"4 ( 12 3 )\", 36),\n    (4, \"6 ( 2 ) ( 3 )\", 5),\n    (5, \"6 ( ( 2 3 ) )\", 5),\n]"
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, \"Test failed.\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Output goes here\", \"Test failed. Please fix the code or test case.\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0\") == \"0\", \"Test case 1: Expected output 0, actual output: {}\".format(solution(\"0\"))\nassert solution(\"009990001\") == \"3\", \"Test case 2: Expected output 3, actual output: {}\".format(solution(\"009990001\"))\nassert solution(\"29998\") == \"5\", \"Test case 3: Expected output 5, actual output: {}\".format(solution(\"29998\"))\nassert solution(\"610\") == \"4\", \"Test case 4: Expected output 4, actual output: {}\".format(solution(\"610\"))\nassert solution(\"981\") == \"2\", \"Test case 5: Expected output 2, actual output: {}\".format(solution(\"981\"))\n\nfrom typing import List"
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0\") == 0\nassert solution(\"009990001\") == 3\nassert solution(\"29998\") == 5\nassert solution(\"610\") == 4\nassert solution(\"981\") == 2"
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"0\\n\") == \"0\\n\"\nassert solution(stdin=\"009990001\\n\") == \"3\\n\"\nassert solution(stdin=\"29998\\n\") == \"5\\n\"\nassert solution(stdin=\"610\\n\") == \"4\\n\"\nassert solution(stdin=\"981\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0\") == \"0\", \"Test 1 failed\"\nassert solution(\"009990001\") == \"3\", \"Test 2 failed\"\nassert solution(\"29998\") == \"5\", \"Test 3 failed\"\nassert solution(\"610\") == \"4\", \"Test 4 failed\"\nassert solution(\"981\") == \"2\", \"Test 5 failed\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"009990001\") == \"3\"\nassert solution(\"29998\") == \"5\"\nassert solution(\"610\") == \"4\"\nassert solution(\"981\") == \"2\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0\") == \"0\", \"Test Case 1\"\nassert solution(\"009990001\") == \"3\", \"Test Case 2\"\nassert solution(\"29998\") == \"5\", \"Test Case 3\"\nassert solution(\"610\") == \"4\", \"Test Case 4\"\nassert solution(\"981\") == \"2\", \"Test Case 5\"\n\nprint(\"All Test Cases Passed!\")\n"
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(610) == 4, \"The solution is incorrect.\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"009990001\") == \"3\"\nassert solution(\"29998\") == \"5\"\nassert solution(\"610\") == \"4\"\nassert solution(\"981\") == \"2\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(0) == 0, \"Solution should return 0 for input 0\"\nassert solution(009990001) == 3, \"Solution should return 3 for input 009990001\"\nassert solution(29998) == 5, \"Solution should return 5 for input 29998\"\nassert solution(610) == 4, \"Solution should return 4 for input 610\"\nassert solution(981) == 2, \"Solution should return 2 for input 981\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\") == \"seems legit\\n\"\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\") == \"insufficient service\\n\"\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\") == \"tampered odometer\\n\"\nassert solution(\"2\\n2013 1 0\\n2013 2 0\") == \"seems legit\\n\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\\n\") == \"seems legit\"\nassert solution(\"2\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\\n\") == \"insufficient service\"\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\\n\") == \"tampered odometer\"\nassert solution(\"2\\n2013 1 0\\n2013 2 0\\n\") == \"seems legit\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\") == \"seems legit\"\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\") == \"insufficient service\"\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\") == \"tampered odometer\"\nassert solution(\"2\\n2013 1 0\\n2013 2 0\") == \"seems legit\"\n"
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\") == \"seems legit\"\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\") == \"insufficient service\"\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\") == \"tampered odometer\"\nassert solution(\"2\\n2013 1 0\\n2013 2 0\") == \"seems legit\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\") == \"seems legit\"\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\") == \"insufficient service\"\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\") == \"tampered odometer\"\nassert solution(\"2\\n2013 1 0\\n2013 2 0\") == \"seems legit\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    '3\\n'\n    '2017 4 0\\n'\n    '2017 8 12000\\n'\n    '2018 8 42000\\n'\n) =='seems legit'\n\nassert solution(\n    '3\\n'\n    '2017 4 0\\n'\n    '2017 8 12000\\n'\n    '2018 8 42001\\n'\n) == 'insufficient service'\n\nassert solution(\n    '2\\n'\n    '2017 11 0\\n'\n    '2018 1 1000\\n'\n) == 'tampered odometer'\n\nassert solution(\n    '2\\n'\n    '2013 1 0\\n'\n    '2013 2 0\\n'\n) =='seems legit'"
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"3\n2017 4 0\n2017 8 12000\n2018 8 42000\n\"\"\") == \"seems legit\"\n\nassert solution(\"\"\"3\n2017 4 0\n2017 8 12000\n2018 8 42001\n\"\"\") == \"insufficient service\"\n\nassert solution(\"\"\"2\n2017 11 0\n2018 1 1000\n\"\"\") == \"tampered odometer\"\n\nassert solution(\"\"\"2\n2013 1 0\n2013 2 0\n\"\"\") == \"seems legit\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\") == \"seems legit\"\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\") == \"insufficient service\"\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\") == \"tampered odometer\"\nassert solution(\"2\\n2013 1 0\\n2013 2 0\") == \"seems legit\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    3\n    2017 4 0\n    2017 8 12000\n    2018 8 42000\n    ''') =='seems legit'\n\nassert solution('''\n    3\n    2017 4 0\n    2017 8 12000\n    2018 8 42001\n    ''') == 'insufficient service'\n\nassert solution('''\n    2\n    2017 11 0\n    2018 1 1000\n    ''') == 'tampered odometer'\n\nassert solution('''\n    2\n    2013 1 0\n    2013 2 0\n    ''') =='seems legit'"
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == \"3\"\nassert solution(open('input2.txt', 'r')) == \"2\"\nassert solution(open('input3.txt', 'r')) == \"2\"\nassert solution(open('input4.txt', 'r')) == \"4\"\n"
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2\\n0 2 3\\n0 1\\n1\") == \"3\"\nassert solution(\"5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\") == \"2\"\nassert solution(\"6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\") == \"2\"\nassert solution(\"4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\") == \"4\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution_input1) == solution_output1\nassert solution(solution_input2) == solution_output2\nassert solution(solution_input3) == solution_output3\nassert solution(solution_input4) == solution_output4\n\nsolution_input1 = '''\n4\n1 2\n0 2 3\n0 1\n1\n'''\n\nsolution_output1 = '''\n3\n'''\n\nsolution_input2 = '''\n5\n2 3 4\n2 3 4\n0 1\n0 1\n0 1\n'''\n\nsolution_output2 = '''\n2\n'''\n\nsolution_input3 = '''\n6\n1 3\n0 2 4\n1 5\n0 4\n1 3 5\n2 4\n'''\n\nsolution_output3 = '''\n2\n'''\n\nsolution_input4 = '''\n4\n1 2 3\n0 2 3\n0 1 3\n0 1 2\n'''\n\nsolution_output4 = '''\n4\n'''"
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"3\\n\"\nassert solution(2) == \"2\\n\"\nassert solution(3) == \"2\\n\"\nassert solution(4) == \"4\\n\"\nassert solution(5) == \"2\\n\"\nassert solution(6) == \"2\\n\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2\\n0 2 3\\n0 1\\n1\\n\") == \"3\"\nassert solution(\"5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n\") == \"2\"\nassert solution(\"6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\") == \"2\"\nassert solution(\"4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n\") == \"4\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Test failed for input {input()}, output {output()}\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == '3', \"Test failed for sample input 1.\"\nassert solution(sample_input2) == '2', \"Test failed for sample input 2.\"\nassert solution(sample_input3) == '2', \"Test failed for sample input 3.\"\nassert solution(sample_input4) == '4', \"Test failed for sample input 4.\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2\nassert solution(sample_input3) == sample_output3\nassert solution(sample_input4) == sample_output4"
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2\\n0 2 3\\n0 1\\n1\\n4\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n\\n5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n\\n6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\") == \"3\"\nassert solution(\"5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n\\n6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\") == \"2\"\nassert solution(\"6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n\") == \"4\"\n"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\nBLUE 1 5000\\nRED 5001 10000\\n\") == \"2\\n\"\nassert solution(\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\n\") == \"3\\n\"\nassert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\n\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\") == \"3\"\nassert solution(\"2\\nBLUE 1 5000\\nRED 5001 10000\") == \"2\"\nassert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\nBLUE 1 5000\\nRED 5001 10000\") == \"2\\n\"\nassert solution(\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\") == \"3\\n\"\nassert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\") == \"IMPOSSIBLE\\n\"\nassert solution(\"2\\nBLUE 1 4000\\nRED 4002 10000\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\nBLUE 1 5000\\nRED 5001 10000\\n') == '2\\n'\nassert solution('3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\n') == '3\\n'\nassert solution('4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\n') == 'IMPOSSIBLE\\n'\nassert solution('2\\nBLUE 1 4000\\nRED 4002 10000\\n') == 'IMPOSSIBLE\\n'"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\nBLUE 1 5000\\nRED 5001 10000\") == \"2\"\nassert solution(\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\") == \"3\"\nassert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"TODO\"\n"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\").read()) == \"2\\n\"\nassert solution(open(\"input.txt\").read()) == \"3\\n\"\nassert solution(open(\"input.txt\").read()) == \"IMPOSSIBLE\\n\"\nassert solution(open(\"input.txt\").read()) == \"IMPOSSIBLE\\n\"\nassert solution(open(\"input.txt\").read()) == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 'IMPOSSIBLE'"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\n\") == \"3\"\nassert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\n\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\"\nassert solution(\"GGGGGGGGG\") == \"1\"\nassert solution(\"PRIME\") == \"5\"\nassert solution(\"BABBABABBABBA\") == \"6\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Input 1\"\nassert solution(\"GGGGGGGGG\") == \"1\", \"Input 2\"\nassert solution(\"PRIME\") == \"5\", \"Input 3\"\nassert solution(\"BABBABABBABBA\") == \"6\", \"Input 4\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Wrong output for sample input 1\"\nassert solution(\"GGGGGGGGG\") == \"1\", \"Wrong output for sample input 2\"\nassert solution(\"PRIME\") == \"5\", \"Wrong output for sample input 3\"\nassert solution(\"BABBABABBABBA\") == \"6\", \"Wrong output for sample input 4\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\"\nassert solution(\"GGGGGGGGG\") == \"1\"\nassert solution(\"PRIME\") == \"5\"\nassert solution(\"BABBABABBABBA\") == \"6\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Expected '6', got '{}'\".format(solution(\"PRATTATTATTIC\"))\nassert solution(\"GGGGGGGGG\") == \"1\", \"Expected '1', got '{}'\".format(solution(\"GGGGGGGGG\"))\nassert solution(\"PRIME\") == \"5\", \"Expected '5', got '{}'\".format(solution(\"PRIME\"))\nassert solution(\"BABBABABBABBA\") == \"6\", \"Expected '6', got '{}'\".format(solution(\"BABBABABBABBA\"))"
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"PRATTATTATTIC\") == 6\nassert solution(\"GGGGGGGGG\") == 1\nassert solution(\"PRIME\") == 5\nassert solution(\"BABBABABBABBA\") == 6"
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Incorrect answer for sample input 1\"\nassert solution(\"GGGGGGGGG\") == \"1\", \"Incorrect answer for sample input 2\"\nassert solution(\"PRIME\") == \"5\", \"Incorrect answer for sample input 3\"\nassert solution(\"BABBABABBABBA\") == \"6\", \"Incorrect answer for sample input 4\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Input 1: The weight of the maximal factoring of the input string is incorrect. Expected 6, got \" + str(solution(\"PRATTATTATTIC\"))\n\nassert solution(\"GGGGGGGGG\") == \"1\", \"Input 2: The weight of the maximal factoring of the input string is incorrect. Expected 1, got \" + str(solution(\"GGGGGGGGG\"))\n\nassert solution(\"PRIME\") == \"5\", \"Input 3: The weight of the maximal factoring of the input string is incorrect. Expected 5, got \" + str(solution(\"PRIME\"))\n\nassert solution(\"BABBABABBABBA\") == \"6\", \"Input 4: The weight of the maximal factoring of the input string is incorrect. Expected 6, got \" + str(solution(\"BABBABABBABBA\"))"
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"PRATTATTATTIC\") == 6, \"Incorrect output for the first example.\"\nassert solution(\"GGGGGGGGG\") == 1, \"Incorrect output for the second example.\"\nassert solution(\"PRIME\") == 5, \"Incorrect output for the third example.\"\nassert solution(\"BABBABABBABBA\") == 6, \"Incorrect output for the fourth example.\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"PRATTATTATTIC\") == 6, \"Output 1: Should be 6\"\nassert solution(\"GGGGGGGGG\") == 1, \"Output 2: Should be 1\"\nassert solution(\"PRIME\") == 5, \"Output 3: Should be 5\"\nassert solution(\"BABBABABBABBA\") == 6, \"Output 4: Should be 6\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n') == '0\\n'\nassert solution('D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n') == '1\\n'\nassert solution('I 1 X\\nD 1\\nE\\nE\\n') == '0\\n'\nassert solution('I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n') == '0\\n'"
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\") == \"0\\n\", \"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\") == \"1\\n\", \"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\") == \"0\\n\", \"I 1 X\\nD 1\\nE\\nE\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\") == \"0\\n\", \"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\") == \"0\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\") == \"1\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\") == \"0\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\") == \"0\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n\") == \"0\\n\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n\") == \"1\\n\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\\n\") == \"0\\n\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == \"0\\n\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n') == '0\\n'\nassert solution('D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n') == '1\\n'\nassert solution('I 1 X\\nD 1\\nE\\nE\\n') == '0\\n'\nassert solution('I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n') == '0\\n'"
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\") == \"0\\n\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\") == \"1\\n\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\") == \"0\\n\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\") == \"0\\n\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\") == \"0\", \"Sample Input 1 does not pass\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\") == \"1\", \"Sample Input 2 does not pass\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\") == \"0\", \"Sample Input 3 does not pass\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\") == \"0\", \"Sample Input 4 does not pass\"\n\nfrom typing import List\n"
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"D 1\\nD 2\\nE\") == \"0\", \"Expected 0, got \" + solution(\"D 1\\nD 2\\nE\")\nassert solution(\"D 2\\nD 1\\nE\") == \"1\", \"Expected 1, got \" + solution(\"D 2\\nD 1\\nE\")\nassert solution(\"I 1 X\\nD 1\\nE\\nE\") == \"0\", \"Expected 0, got \" + solution(\"I 1 X\\nD 1\\nE\\nE\")\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == \"0\", \"Expected 0, got \" + solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n\")"
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\nr\"\"\"\nD 1\nD 2\nE\nD 3\nD 1\nE\n\"\"\"\n) == \"0\"\n\nassert solution(\nr\"\"\"\nD 2\nD 1\nE\nD 1\nD 2\nE\n\"\"\"\n) == \"1\"\n\nassert solution(\nr\"\"\"\nI 1 X\nD 1\nE\nE\n\"\"\"\n) == \"0\"\n\nassert solution(\nr\"\"\"\nI 14 B\nI 14 A\nE\nI 14 A\nI 15 B\nE\n\"\"\"\n) == \"0\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\"\nassert solution(\"10 399 0 0 0 0\") == \"399\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\"\nassert solution(\"10 399 0 0 0 0\") == \"399\"\n"
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == output1, \"Incorrect output for sample case 1\"\nassert solution(input2) == output2, \"Incorrect output for sample case 2\"\nassert solution(input3) == output3, \"Incorrect output for sample case 3\"\nassert solution(input4) == output4, \"Incorrect output for sample case 4\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\"\nassert solution(\"10 399 0 0 0 0\") == \"399\"\nassert solution(\"4 10 1 1 0 0\") == \"300\"\nassert solution(\"4 0 2 0 1 0\") == \"600\"\nassert solution(\"2 0 1 0 1 0\") == \"600\"\nassert solution(\"2 0 1 0 0 1\") == \"1800\"\nassert solution(\"5 10 0 0 1 0\") == \"3900\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 300, \"Please implement the solution\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Expected: {output()}, Actual: {solution(input())}\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\\n\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\\n\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\\n\"\nassert solution(\"10 399 0 0 0 0\") == \"399\\n\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test failed.\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\nassert solution(input3) == output3\nassert solution(input4) == output4"
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Solution does not match.\\nInput: {input()}\\nOutput: {output}\\n\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 10\\n1 12\\n1 13\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 12\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 4\") == \"2\\n\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 12\\n1 13\") == \"2\"\nassert solution(\"2 10\\n1 5\\n1 12\") == \"2\"\nassert solution(\"2 10\\n1 5\\n4 1\") == \"2\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 10\\n1 12\\n1 13\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 12\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 4\") == \"2\\n\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected Output: {expected_output}, but got {solution(input())}\"\n\nfrom typing import List"
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 10\\n1 12\\n1 13\\n') == '2'\nassert solution('2 10\\n1 5\\n1 12\\n') == '2'\nassert solution('2 10\\n1 5\\n1 4\\n') == '2'\nassert solution('2 10\\n1 5\\n4 1\\n') == '2'"
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '2\\n'\n\nfor i in range(int(stdin.readline())):\n    a, b = map(int, stdin.readline().split())\n    max_ranks = max(1, min(a+b, a+K+b, b+K+a))\n    print(max_ranks)"
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input"
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 10\\n1 12\\n1 13\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 12\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n4 1\") == \"2\\n\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 32"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_1) == \"28\"\nassert solution(input_2) == \"36.2842712475\"\nassert solution(input_3) == \"28.970562748\"\nassert solution(input_4) == \"32\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\") == \"28\"\nassert solution(\"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\") == \"36.2842712475\"\nassert solution(\"6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\") == \"28.970562748\"\nassert solution(\"8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\") == \"32\"\n\nfrom typing import List"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input1) == \"28\"\nassert solution(input2) == \"36.2842712475\"\nassert solution(input3) == \"28.970562748\"\nassert solution(input4) == \"32\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\nassert solution(input3) == output3\nassert solution(input4) == output4"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == \"28\", \"Incorrect answer for sample input 1.\"\nassert solution(sample_input_2) == \"36.2842712475\", \"Incorrect answer for sample input 2.\"\nassert solution(sample_input_3) == \"28.970562748\", \"Incorrect answer for sample input 3.\"\nassert solution(sample_input_4) == \"32\", \"Incorrect answer for sample input 4.\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == '28'\nassert solution(sample_input2) == '36.2842712475'\nassert solution(sample_input3) == '28.970562748'\nassert solution(sample_input4) == '32'"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3\nassert solution(sample_input_4) == sample_output_4"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('sample_input.txt', 'r')) == 28\nassert solution(open('sample_input.txt', 'r')) == 36.2842712475\nassert solution(open('sample_input.txt', 'r')) == 32"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(input())) == \"28\"\n\nassert solution(str(input())) == \"36.2842712475\"\n\nassert solution(str(input())) == \"32\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '1\\n', \"Invalid output\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\\n') == '3\\n'\nassert solution('3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8\\n') == '1\\n'\nassert solution('3\\n2 1 6 5\\n2 5 5 4\\n5 1 7 7\\n') == '1\\n'\nassert solution('2\\n-1 -2 -1 -1\\n-1 2 -1 -1\\n') == '1\\n'"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\") == \"3\\n\\n1\\n\"\nassert solution(\"3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8\") == \"1\\n\"\nassert solution(\"3\\n2 1 6 5\\n2 5 5 4\\n5 1 7 7\") == \"1\\n\"\nassert solution(\"2\\n-1 -2 -1 -1\\n-1 2 -1 -1\") == \"1\\n\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(b'3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\\n') == '3\\n'\nassert solution(b'3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8\\n') == '1\\n'\nassert solution(b'3\\n2 1 6 5\\n2 5 5 4\\n5 1 7 7\\n') == '1\\n'\nassert solution(b'2\\n-1 -2 -1 -1\\n-1 2 -1 -1\\n') == '1\\n'"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\") == \"3\"\nassert solution(\"3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8\") == \"1\"\nassert solution(\"3\\n2 1 6 5\\n2 5 5 4\\n5 1 7 7\") == \"1\"\nassert solution(\"2\\n-1 -2 -1 -1\\n-1 2 -1 -1\") == \"1\"\n\nfrom typing import List"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '3\\n', \"The output of the program should be: 3\\n\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''3\n1 3 9 5\n2 2 6 8\n4 8 9 3''') == '''1\n'''\n\nassert solution('''3\n5 2 7 10\n7 4 4 10\n2 4 10 8''') == '''1\n'''\n\nassert solution('''3\n2 1 6 5\n2 5 5 4\n5 1 7 7''') == '''1\n'''\n\nassert solution('''2\n-1 -2 -1 -1\n-1 2 -1 -1''') == '''1\n'''"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\\n1\\n1\\n1\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\") == \"3\\n1\\n1\\n1\"\nassert solution(\"3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8\") == \"1\\n1\\n1\"\nassert solution(\"3\\n2 1 6 5\\n2 5 5 4\\n5 1 7 7\") == \"1\\n1\\n1\"\nassert solution(\"2\\n-1 -2 -1 -1\\n-1 2 -1 -1\") == \"1\\n1\\n1\""
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(10) == \"10\"\nassert solution(55) == \"55\"\nassert solution(101) == \"-1\"\nassert solution(1234321) == \"94708\""
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(10) == 10, \"10\"\nassert solution(55) == 55, \"55\"\nassert solution(101) == -1, \"101\"\nassert solution(1234321) == 94708, \"1234321\""
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\") == \"10\"\nassert solution(\"55\") == \"55\"\nassert solution(\"101\") == \"-1\"\nassert solution(\"1234321\") == \"94708\""
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\") == \"10\"\nassert solution(\"55\") == \"55\"\nassert solution(\"101\") == \"-1\"\nassert solution(\"1234321\") == \"94708\"\n"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708\n"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(10) == 10, \"Test 1: 10 is not a hill number.\"\nassert solution(55) == 55, \"Test 2: 55 is a hill number.\"\nassert solution(101) == -1, \"Test 3: 101 is not a hill number.\"\nassert solution(1234321) == 94708, \"Test 4: 1234321 is a hill number.\""
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(10) == 10, \"Test 1 failed.\"\nassert solution(55) == 55, \"Test 2 failed.\"\nassert solution(101) == -1, \"Test 3 failed.\"\nassert solution(1234321) == 94708, \"Test 4 failed.\""
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3 0 0 0 3) == 6\nassert solution(1 2 0 0 5) == 2\nassert solution(1 2 0 0 4) == 4\nassert solution(1 2 0 0 6) == 0"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n3 0 0 0 3\n1 2 0 0 5\n1 2 0 0 4\n1 2 0 0 6\n''') == '6\\n2\\n4\\n0'\nassert solution('''\n2 0 0 0 2\n1 2 0 0 5\n1 2 0 0 4\n''') == '2\\n4'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 4\n''') == '4"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"6\", \"Expected output: 6\"\n"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 0 0 0 3\") == \"6\"\nassert solution(\"1 2 0 0 5\") == \"2\"\nassert solution(\"1 2 0 0 4\") == \"4\"\nassert solution(\"1 2 0 0 6\") == \"0\""
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 5, \"Expected output: 5, but got: {}.\".format(solution)"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 0 0 0 3') == '6'\nassert solution('1 2 0 0 5') == '2'\nassert solution('1 2 0 0 4') == '4'\nassert solution('1 2 0 0 6') == '0'"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 0 0 0 3') == 6, \"Output 1 is incorrect\"\nassert solution('1 2 0 0 5') == 2, \"Output 2 is incorrect\"\nassert solution('1 2 0 0 4') == 4, \"Output 3 is incorrect\"\nassert solution('1 2 0 0 6') == 0, \"Output 4 is incorrect\""
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"Output the number of length-N sequences of moves, modulo 1000000007.\""
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 0 0 0 3') == '6'\nassert solution('1 2 0 0 5') == '2'\nassert solution('1 2 0 0 4') == '4'\nassert solution('1 2 0 0 6') == '0'\n\nprint(1 + 2 + 4 + 6)  # output: 2267759340\n"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3 0 0 0 3) == 6\nassert solution(1 2 0 0 5) == 2\nassert solution(1 2 0 0 4) == 4\nassert solution(1 2 0 0 6) == 0\n\nfrom typing import List"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt').read()) == '\\n'.join([str(round(1.26167861, 5)) +'' + str(round(3.88425357, 5))]) + '\\n'\nassert solution(open('input2.txt').read()) == '\\n'.join([str(round(9.21068947, 5)) +'' + str(round(2.56226688, 5))]) + '\\n'\nassert solution(open('input3.txt').read()) == '\\n'.join([str(round(6.22375968, 5)) +'' + str(round(-0.31921472, 5))]) + '\\n'\nassert solution(open('input4.txt').read()) == '\\n'.join([str(round(-4.36385220, 5)) +'' + str(round(9.46891588, 5))]) + '\\n'"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\", \"The solution should be -1.26167861 3.88425357\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\", \"The solution should be 9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\", \"The solution should be 6.22375968 -0.31921472\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\", \"The solution should be -4.36385220 9.46891588\"\n"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0.5 -5.301 3.098\\n0.5 8 8\\n0.5 -8 8\\n1 8 8\\n0.5 0.5 1\") == \"9.21068947 2.56226688\\n-4.36385220 9.46891588\\n\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == output, f\"Output mismatch: expected '{output}', got '{solution(stdin)}' (with input '{stdin}')\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input(\"b: \")) == input(\"Output: \")"
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\\n\") == \"1\\n2\\n\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\\n\") == \"1\\n1\\n\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n\") == \"0\\n2\\n4\\n5\\n\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n2\\n1\\n2\\n3\\n3\\n1\\n2\\n1\\n3\\n2\\n1\\n4\\n2\\n1\\n4\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n"
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\") == \"1\\n2\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\") == \"1\\n1\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\") == \"0\\n2\\n4\\n5\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\\n\") == \"1\\n2\\n\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\\n\") == \"1\\n1\\n\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n\") == \"0\\n2\\n4\\n\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n"
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 2\\n1 2\\n2 1\\n') == '1\\n2\\n'\nassert solution('3 3\\n1 2\\n2 3\\n3 1\\n') == '1\\n1\\n'\nassert solution('4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n') == '0\\n2\\n4\\n5\\n'"
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\\n\") == \"1\\n2\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\\n\") == \"1\\n1\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n\") == \"0\\n2\\n4\\n5\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(b\"3 3\\n1 2\\n2 3\\n3 1\\n4 5\\n1 2\\n2 3\\n2 4\\n3 1\\n4 1\\n\") == b\"0\\n2\\n4\\n5\\n\"\nassert solution(b\"5 4\\n1 2\\n2 3\\n2 4\\n3 1\\n4 1\\n1 2\\n2 3\\n2 4\\n3 1\\n4 1\\n\") == b\"2\\n4\\n5\\n\"\nassert solution(b\"5 4\\n1 2\\n2 3\\n3 2\\n2 4\\n3 4\\n1 2\\n2 3\\n2 4\\n3 1\\n4 1\\n\") == b\"2\\n4\\n5\\n\"\nassert solution(b\"5 4\\n1 2\\n2 3\\n3 1\\n4 1\\n1 2\\n2 3\\n2 4\\n3 1\\n4 1\\n\") == b\"2\\n4\\n5\\n\"\nassert solution(b\"5 4\\n1 2\\n2 3\\n3 2\\n2 4\\n3 4\\n1 2\\n2 3\\n4 1\\n\") == b\"2\\n4\\n5\\n\"\nassert solution(b\"5 4\\n1 2\\n2 3\\n3 1\\n4 1\\n1 2\\n2 3\\n4 1\\n\") == b\"2\\n4\\n5\\n\"\nassert solution(b\"5 4\\n1 2\\n2 3\\n3 2\\n2 4\\n3 4\\n1 2\\n4 1\\n\") == b\"2\\n4\\n5\\n\"\nassert solution(b\"5 4\\n1 2\\n2 3\\n3 1\\n4 1\\n1 2\\n2 3\\n4 1\\n1 2\\n2 3\\n4 1\\n\") == b\"2\\n4\\n5\\n\"\nassert solution(b\"5 4\\n1 2\\n2 3\\n3 2\\n2 4\\n3 4\\n1 2\\n4 1\\n1 2\\n2 3\\n4 1\\n\") == b\"2\\n4\\n5\\n\"\nassert solution(b\"5 4\\n1 2\\n2 3\\n3 1\\n4 1\\n1 2\\n2 3\\n4 1\\n1 2\\n2 3\\n4 1\\n1 2\\n2 3\\n4 1\\n\") == b\"2\\n4\\n5\\n\"\nassert solution(b\"5 4\\n1 2\\n2 3\\n3 2\\n2 4\\n3 4\\n1 2\\n4 1\\n1 2\\n2 3\\n4 1\\n1 2\\n2 3\\n4 1\\n\") == b\"2\\n4\\n5\\n\"\nassert solution(b\"5 4\\n1 2\\n2 3\\n3 1\\n4 1\\n1 2\\n2 3\\n4 1\\n1 2\\n2 3\\n4 1\\n1 2\\n2 3\\n4 1\\n1 2\\n2 3\\n4 1\\n\") == b\"2\\n4\\n5\\n\"\nassert solution(b\"5 4\\n1 2\\n2 3\\n3 2\\n2 4\\n3 4\\n1 2\\n4 1\\n1 2\\n2 3\\n4 1\\n1 2\\n2 3\\n4 1\\n1 2\\n2 3\\n4 1\\n1 2\\n2 3\\n4 1\\n\") == b\"2\\n4"
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\\n\") == \"1\\n2\\n\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\\n\") == \"1\\n1\\n\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n\") == \"0\\n2\\n4\\n\"\nassert solution(\"4 5\\n1 2\\n2 3\\n2 4\\n3 1\\n4 1\\n\") == \"2\\n4\\n5\\n\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Sample Input 1') == '1\\n2'\nassert solution('Sample Input 2') == '1\\n1'\nassert solution('Sample Input 3') == '0'\nassert solution('Sample Input 4') == '2\\n4'\nassert solution('Sample Input 5') == '1'\n\nfrom typing import List"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\") == \"11\\n\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\") == \"infinity\\n\"\nassert solution(\"2 1 0 1\\n0 1 2\") == \"2\\n\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\") == \"infinity\\n\"\nassert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\") == \"11\\n\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\") == \"infinity\\n\"\nassert solution(\"2 1 0 1\\n0 1 2\") == \"2\\n\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\") == \"infinity\\n\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected output: '{output}', got: '{solution(input())}'\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == "
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n\") == \"11\\n\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n\") == \"infinity\\n\"\nassert solution(\"2 1 0 1\\n0 1 2\\n\") == \"2\\n\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"infinity\\n\"\nassert solution(\"5 4 1 2\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"2\\n\"\nassert solution(\"4 4 1 2\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"infinity\\n\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n\") == \"11\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n\") == \"infinity\"\nassert solution(\"2 1 0 1\\n0 1 2\\n\") == \"2\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"infinity\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n\") == \"11\\n\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n\") == \"infinity\\n\"\nassert solution(\"2 1 0 1\\n0 1 2\\n\") == \"2\\n\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"infinity\\n\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\nSample Input 1:\\n4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\nSample Output 1:\\n11\\n\\n\\n\\n\\n\\n\\n\\nSample Input 2:\\n5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\nSample Output 2:\\ninfinity\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nSample Input 3:\\n2 1 0 1\\n0 1 2\\nSample Output 3:\\n2\\n\\n\\n\\n\\n\\n\\n\\n\\nSample Input 4:\\n3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\nSample Output 4:\\ninfinity') == '11\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n\") == 11, \"Example 1 failed\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n\") == \"infinity\", \"Example 2 failed\"\nassert solution(\"2 1 0 1\\n0 1 2\\n\") == 2, \"Example 3 failed\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"infinity\", \"Example 4 failed\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"11\"\nassert solution() == \"infinity\"\nassert solution() == \"2\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == output1, \"Test case 1 failed\"\nassert solution(input2) == output2, \"Test case 2 failed\"\nassert solution(input3) == output3, \"Test case 3 failed\"\nassert solution(input4) == output4, \"Test case 4 failed\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == output1, f\"Test case {1} failed. Expected: {output1}, got: {solution(input1)}\"\nassert solution(input2) == output2, f\"Test case {2} failed. Expected: {output2}, got: {solution(input2)}\"\nassert solution(input3) == output3, f\"Test case {3} failed. Expected: {output3}, got: {solution(input3)}\"\nassert solution(input4) == output4, f\"Test case {4} failed. Expected: {output4}, got: {solution(input4)}\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"6\"\n"
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 2 1 2 1\\n2 1 2\\n2 3 4\\n') == '6\\n'\nassert solution('3 3 1 1\\n1 1\\n2 2 3\\n') == '0\\n'\nassert solution('3 2 2 3\\n1 1\\n2 2 3\\n') == '18\\n'\nassert solution('3 1 2 3\\n2 1 2\\n0\\n') == '12\\n'"
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"6\", \"Incorrect output\"\n"
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\") == \"6\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\") == \"0\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\") == \"18\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\") == \"12\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n4 2 1 2 1\n2 1 2\n2 3 4\n''') == '6'\nassert solution('''\n3 3 1 1\n1 1\n2 2 3\n''') == '0'\nassert solution('''\n3 2 2 3\n1 1\n2 2 3\n''') == '18'\nassert solution('''\n3 1 2 3\n2 1 2\n0\n''') == '12'\n"
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0\", \"Please implement the solution function\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output() for input, output in [\n    (\n        \"4 2 1 2 1\\n2 1 2\\n2 3 4\\n\",\n        \"6\\n\",\n    ),\n    (\n        \"3 3 1 1\\n1 1\\n2 2 3\\n\",\n        \"0\\n\",\n    ),\n    (\n        \"3 2 2 3\\n1 1\\n2 2 3\\n\",\n        \"18\\n\",\n    ),\n    (\n        \"3 1 2 3\\n2 1 2\\n0\\n\",\n        \"12\\n\",\n    ),\n]\n"
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 2 1 2 1\\n2 1 2\\n2 3 4') == '6\\n'\nassert solution('3 3 1 1\\n1 1\\n2 2 3') == '0\\n'\nassert solution('3 2 2 3\\n1 1\\n2 2 3') == '18\\n'\nassert solution('3 1 2 3\\n2 1 2\\n0') == '12\\n'"
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1000000 1\") == \"468559\"\nassert solution(\"1000000 5\") == \"49401\"\nassert solution(\"1000000 16\") == \"20\"\nassert solution(\"9000000000000000000 62\") == \"1\"\n"
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1000000 1\\n1000000 5\\n1000000 16\\n9000000000000000000 62\\n\") == \"20\\n\"\nassert solution(\"1000000 0\\n1000000 0\\n1000000 0\\n9000000000000000000 0\\n\") == \"1\\n\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Solution doesn't match expected output. Expected: {output}, Got: {solution(input())}\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Output a single integer that is equal to the number of distinct integers k whose decimal representation contains the digits of 2^e as a substring.\"\n\nimport re\n\nn, e = map(int, input().split())"
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1000000 1\") == 468559\nassert solution(\"1000000 5\") == 49401\nassert solution(\"1000000 16\") == 20\nassert solution(\"9000000000000000000 62\") == 1"
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1000000 1\\n') == '468559\\n'\nassert solution('1000000 5\\n') == '49401\\n'\nassert solution('1000000 16\\n') == '20\\n'\nassert solution('9000000000000000000 62\\n') == '1\\n'\n"
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1000000 1') == '468559'\nassert solution('1000000 5') == '49401'\nassert solution('1000000 16') == '20'\nassert solution('9000000000000000000 62') == '1'"
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1000000 1\") == \"468559\"\nassert solution(\"1000000 5\") == \"49401\"\nassert solution(\"1000000 16\") == \"20\"\nassert solution(\"9000000000000000000 62\") == \"1\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Incorrect output: expected '{output()}' but got '{solution(input())}'\"\n"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 9\\n5 4 1\") == \"1\"\nassert solution(\"4 13\\n2 2 2 2\") == \"3\"\nassert solution(\"18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\") == \"12\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('test_input.txt', 'r')) == '1\\n3\\n12\\n'\n\nfrom typing import List"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n3 9\n5 4 1\n''') == '''1'''\n\nassert solution('''\n4 13\n2 2 2 2\n''') == '''3'''\n\nassert solution('''\n18 90\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\n''') == '''12'''\n\nassert solution('''\n3 9\n5 4 1\n''') == '''1'''\n\nassert solution('''\n4 13\n2 2 2 2\n''') == '''3'''\n\nassert solution('''\n18 90\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\n''') == '''12'''"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 9\\n5 4 1\") == \"1\"\nassert solution(\"4 13\\n2 2 2 2\") == \"3\"\nassert solution(\"18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\") == \"12\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, but got {solution(stdin)}\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == sample_output1, \"Test 1 Failed\"\nassert solution(sample_input2) == sample_output2, \"Test 2 Failed\"\nassert solution(sample_input3) == sample_output3, \"Test 3 Failed\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\\n\", \"Your solution is incorrect\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Your solution is incorrect. Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 9\\n5 4 1\") == 1\nassert solution(\"4 13\\n2 2 2 2\") == 3\nassert solution(\"18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\") == 12\n\nfrom typing import List"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 3\nassert solution(4) == 3\nassert solution(5) == 5\n\nfrom math import isqrt"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == 'Output the maximum revenue you can achieve by selling all N pieces of data.'"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 0\nassert solution(5) == 5"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1\\n2\\n3\\n4\\n5\") == 0\nassert solution(\"3\\n4 7 8\\n5\") == 3\nassert solution(\"5\\n2 3 4 5 8\") == 5"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"0\""
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 3\nassert solution(5) == 5\n"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"3\"\nassert solution(5) == \"5\"\nassert solution(10) == \"0\"\nassert solution(11) == \"0\""
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"5\""
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 0\nassert solution(2) == 0\nassert solution(3) == 3\nassert solution(4) == 3\nassert solution(5) == 5"
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\"\n"
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\") == \"4\\n\"\nassert solution(\"149\") == \"17\\n\"\nassert solution(\"123476544\") == \"11112\\n\"\nassert solution(\"-1\") == \"-1\\n\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\") == \"4\\n\"\nassert solution(\"149\") == \"17\\n\"\nassert solution(\"123476544\") == \"11112\\n\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\") == \"4\\n\"\nassert solution(\"149\") == \"17\\n\"\nassert solution(\"123476544\") == \"11112\\n\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"4\"\nassert solution(149) == \"17\"\nassert solution(123476544) == \"11112\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"4\", \"Wrong answer 1\"\nassert solution(\"149\") == \"17\", \"Wrong answer 2\"\nassert solution(\"123476544\") == \"11112\", \"Wrong answer 3\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\") == \"4\", \"Drat! cursed Charles. This stupid carry bar is not working in my Engine! I just tried to calculate the square of a number, but it's wrong; all of the carries are lost.\"\n\nassert solution(\"149\") == \"17\", \"Hmm, Ada, arithmetic without carries! I wonder if I can figure out what your original input was, based on the result I see on the Engine.\"\n\nassert solution(\"123476544\") == \"11112\", \"Given N, find the smallest positive integer a such that a aotimes a = N.\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\") == \"adcb\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\") == \"IMPOSSIBLE\"\nassert solution(\"f 2\\ndea\\ncfb\") == \"AMBIGUOUS\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\") == \"adcb\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\") == \"IMPOSSIBLE\"\nassert solution(\"f 2\\ndea\\ncfb\") == \"AMBIGUOUS\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('d 4\\n'\n                   'cab\\n'\n                   'cda\\n'\n                   'ccc\\n'\n                   'badca') == 'adcb'\n\nassert solution('c 4\\n'\n                   'abc\\n'\n                   'bca\\n'\n                   'cab\\n'\n                   'aca') == 'IMPOSSIBLE'\n\nassert solution('f 2\\n'\n                   'dea\\n'\n                   'cfb') == 'AMBIGUOUS'"
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('sample_input.txt', 'r')) == 'adcb\\n'\nassert solution(open('sample_input2.txt', 'r')) == 'IMPOSSIBLE\\n'\nassert solution(open('sample_input3.txt', 'r')) == 'AMBIGUOUS\\n'"
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\") == \"adcb\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\") == \"IMPOSSIBLE\"\nassert solution(\"f 2\\ndea\\ncfb\") == \"AMBIGUOUS\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\\n\") == \"adcb\\n\"\n\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\\n\") == \"IMPOSSIBLE\\n\"\n\nassert solution(\"f 2\\ndea\\ncfb\\n\") == \"AMBIGUOUS\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\\n\") == \"adcb\\n\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"f 2\\ndea\\ncfb\\n\") == \"AMBIGUOUS\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\\n\") == \"adcb\"\n\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\\n\") == \"IMPOSSIBLE\"\n\nassert solution(\"f 2\\ndea\\ncfb\\n\") == \"AMBIGUOUS\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\") == \"adcb\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\") == \"IMPOSSIBLE\"\nassert solution(\"f 2\\ndea\\ncfb\") == \"AMBIGUOUS\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == 'adcb', \"Expected output: 'adcb', got: '{}'\".format(solution(sample_input_1))\nassert solution(sample_input_2) == 'IMPOSSIBLE', \"Expected output: 'IMPOSSIBLE', got: '{}'\".format(solution(sample_input_2))\nassert solution(sample_input_3) == 'AMBIGUOUS', \"Expected output: 'AMBIGUOUS', got: '{}'\".format(solution(sample_input_3))\n\nsample_input_1 = '''d 4\ncab\ncda\nccc\nbadca'''\n\nsample_input_2 = '''c 4\nabc\nbca\ncab\naca'''\n\nsample_input_3 = '''f 2\ndea\ncfb'''"
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_1) == output_1, f\"Input 1 is invalid. Expected: {output_1}, Received: {solution(input_1)}\"\nassert solution(input_2) == output_2, f\"Input 2 is invalid. Expected: {output_2}, Received: {solution(input_2)}\"\nassert solution(input_3) == output_3, f\"Input 3 is invalid. Expected: {output_3}, Received: {solution(input_3)}\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"\"\"\n    2 3 3 3\n    Sample Output 1:\n    9\n    \"\"\") == \"9\\n\"\n\nassert solution(stdin=\"\"\"\n    10 20 0 0\n    Sample Output 2:\n    10\n    \"\"\") == \"10\\n\"\n\nassert solution(stdin=\"\"\"\n    100 20 543 12\n    Sample Output 3:\n    164\n    \"\"\") == \"164\\n\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"164\"\nassert solution(input()) == \"10\"\nassert solution(input()) == \"9\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    2 3 3 3\n    \"\"\"\n) == \"9\\n\"\n\nassert solution(\n    \"\"\"\n    10 20 0 0\n    \"\"\"\n) == \"10\\n\"\n\nassert solution(\n    \"\"\"\n    100 20 543 12\n    \"\"\"\n) == \"164\\n\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3 3 3\") == \"9\\n\", \"Test case 1 failed\"\nassert solution(\"10 20 0 0\") == \"10\\n\", \"Test case 2 failed\"\nassert solution(\"100 20 543 12\") == \"164\\n\", \"Test case 3 failed\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3 3 3\") == 9\nassert solution(\"10 20 0 0\") == 10\nassert solution(\"100 20 543 12\") == 164"
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test case failed!\"\n"
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3 3 3\") == 9, \"Failed for test case 1\"\nassert solution(\"10 20 0 0\") == 10, \"Failed for test case 2\"\nassert solution(\"100 20 543 12\") == 164, \"Failed for test case 3\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '164', 'Solution does not match the expected output'"
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n2 3 3 3\n\"\"\"\n) == \"9\\n\"\n\nassert solution(\n    \"\"\"\n10 20 0 0\n\"\"\"\n) == \"10\\n\"\n\nassert solution(\n    \"\"\"\n100 20 543 12\n\"\"\"\n) == \"164\\n\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0') == 'yes'\nassert solution('4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0') == 'no'\nassert solution('3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12') == 'yes'"
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\\n\", \"Test 1 failed\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\\n\", \"Test 2 failed\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\\n\", \"Test 3 failed\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\\n\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\\n\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\\n\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"yes\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\\n\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\\n\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\\n\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'no' # Wrong solution."
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"652526\") == \"4\", \"The given string does not form a palindrome after splitting it into 4 parts.\"\nassert solution(\"12121131221\") == \"7\", \"The given string does not form a palindrome after splitting it into 7 parts.\"\nassert solution(\"123456789\") == \"1\", \"The given string does not form a palindrome after splitting it into 1 parts.\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"652526\") == \"4\", \"The function should return 4 for the given input.\"\n\nassert solution(\"12121131221\") == \"7\", \"The function should return 7 for the given input.\"\n\nassert solution(\"123456789\") == \"1\", \"The function should return 1 for the given input.\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"652526\") == \"4\", \"Sample Input 1\"\nassert solution(\"12121131221\") == \"7\", \"Sample Input 2\"\nassert solution(\"123456789\") == \"1\", \"Sample Input 3\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('652526') == '4'\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'"
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"652526\") == \"4\", \"Sample Input 1: The maximal value of k for the given string is not 4\"\nassert solution(\"12121131221\") == \"7\", \"Sample Input 2: The maximal value of k for the given string is not 7\"\nassert solution(\"123456789\") == \"1\", \"Sample Input 3: The maximal value of k for the given string is not 1\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n1\n1 2\n2 3\n1 3\n''') == '0\\n'\n\nassert solution('''\n4 4\n24 10\n1 3\n2 3\n2 4\n1 4\n''') == '24\\n'\n\nassert solution('''\n6 8\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6\n''') == '800\\n'"
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == 0, f\"Expected 0, but got {solution(sample_input_1)}\"\nassert solution(sample_input_2) == 24, f\"Expected 24, but got {solution(sample_input_2)}\"\nassert solution(sample_input_3) == 800, f\"Expected 800, but got {solution(sample_input_3)}\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\\n\") == 0\nassert solution(\"4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n\") == 24\nassert solution(\"6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\n\") == 800"
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\\n\") == \"0\\n\"\nassert solution(\"4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n\") == \"24\\n\"\nassert solution(\"6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\n\") == \"800\\n\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('bandit.in').read()) == '0'\nassert solution(open('bandit.in').read()) == '24'\nassert solution(open('bandit.in').read()) == '800'"
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"Output a single integer, indicating the maximum amount of gold that the bandits can purloin and still get safely home.\", \"The function is incorrect\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\n1\\n1 2\\n2 3\\n1 3\\n') == '0\\n'\nassert solution('4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n') == '24\\n'\nassert solution('6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\n') == '800\\n'"
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\\n\") == \"0\\n\"\nassert solution(\"4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n\") == \"24\\n\"\nassert solution(\"6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\n\") == \"800\\n\"\n"
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\\n\") == \"0\\n\"\nassert solution(\"4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n\") == \"24\\n\"\nassert solution(\"6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\n\") == \"800\\n\"\nassert solution(\"3 2\\n1 2\\n1 3\\n2 2\\n3 2\\n3 3\\n2 3\\n2 4\\n\") == \"0\\n\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\\n\") == \"0\"\nassert solution(\"4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n\") == \"24\"\nassert solution(\"6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\n\") == \"800\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '1 4\\n'\nassert solution(open('input1.txt', 'r')) == '1 4\\n'\nassert solution(open('input2.txt', 'r')) == '1 2 3 4 5\\n'\nassert solution(open('input3.txt', 'r')) == '-1\\n'"
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1 4\\n\", \"Test case 1 failed.\"\nassert solution() == \"1 4\\n\", \"Test case 2 failed.\"\nassert solution() == \"1 4\\n\", \"Test case 3 failed.\"\nassert solution() == \"-1\\n\", \"Test case 4 failed.\"\nassert solution() == \"1 4\\n\", \"Test case 5 failed.\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 3 2 4\\n\") == \"1 4\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"1 2 3 4 5\\n\"\nassert solution(\"4\\n2 1 4 3\\n\") == \"-1\\n\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 3 2 4\") == \"1 4\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1 2 3 4 5\\n\"\nassert solution(\"4\\n2 1 4 3\") == \"-1\\n\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 3 2 4\") == \"1 4\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1 2 3 4 5\\n\"\nassert solution(\"4\\n2 1 4 3\") == \"-1\\n\"\n"
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Incorrect solution for sample_input_1\"\nassert solution(sample_input_2) == sample_output_2, \"Incorrect solution for sample_input_2\"\nassert solution(sample_input_3) == sample_output_3, \"Incorrect solution for sample_input_3\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 1, \"The solution function is incorrect.\"\nassert solution(input()) == output, \"The solution function is incorrect.\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n1 3 2 4\\n') == '1 4\\n'\nassert solution('5\\n1 2 3 4 5\\n') == '1 2 3 4 5\\n'\nassert solution('4\\n2 1 4 3\\n') == '-1\\n'"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(r\"4 8\n..#..#..\n.######.\n.######.\n..#..#..\") == 8\n\nassert solution(r\"3 3\n...\n.#.\n...\n\") == 1\n\nassert solution(r\"2 6\n.#####\n#####.\n\") == 5"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Test {i+1} failed. Expected: {expected}, Received: {solution(input())}\"\n"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 8\\n..#..#..\\n.######.\\n.######.\\n..#..#..\\n\") == 8\n\nassert solution(\"3 3\\n...\\n.#.\\n...\\n\") == 1\n\nassert solution(\"2 6\\n.#####\\n#####.\\n\") == 5"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r'4 8\\n..#..#..\\n.######.\\n.######.\\n..#..#..\\n') == '8\\n'\n\nassert solution(r'3 3\\n...\\n.#.\\n...\\n') == '1\\n'\n\nassert solution(r'2 6\\n.#####\\n#####.\\n') == '5\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n4 8\n..#..#..\n.######.\n.######.\n..#..#..\n''') == '8'\n\nassert solution('''\n3 3\n...\n.#.\n...\n''') == '1'\n\nassert solution('''\n2 6\n.#####\n#####.\n''') == '5'"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 8\nassert solution() == 1\nassert solution() == 5"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"8\""
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == '8'\nassert solution(open('input.txt', 'r')) == '8'\nassert solution(open('input.txt', 'r')) == '8'\nassert solution(open('input.txt', 'r')) == '8'\nassert solution(open('input.txt', 'r')) == '8'\nassert solution(open('input.txt', 'r')) == '8'"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == 8, \"Incorrect output. Expected 8, but got {}.\".format(solution(stdin))"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 8\nprint(8)"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == 6\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\") == 13\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == -1"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == 6\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\") == 13\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == -1"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n\") == \"6\\n19 12 2 18 5 5\""
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == \"6\"\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\") == \"13\"\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == \"-1\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == solution(open(\"sample_input1.txt\", \"r\").read())\nassert solution(open(\"input.txt\", \"r\").read()) == solution(open(\"sample_input2.txt\", \"r\").read())\nassert solution(open(\"input.txt\", \"r\").read()) == solution(open(\"sample_input3.txt\", \"r\").read())"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n\") == \"6\\n19 12 2 18 5 5\\n\"\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\\n\") == \"13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\\n\"\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\\n\") == \"-1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == \"6\\n19 12 2 18 5 5\"\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\") == \"13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\"\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == \"-1\"\n"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n\") == \"6\\n19 12 2 18 5 5\\n\"\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\\n\") == \"13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\\n\"\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\\n\") == \"-1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n4 5 5\n2 1 1 1 2\n5 3 4 4 3\n4 3 3 3 2\n3 1 3 3 1\n\"\"\"\n) == \"6\\n19 12 2 18 5 5\"\n\nassert solution(\n    \"\"\"\n3 3 3\n3 1 1\n1 3 2\n3 2 3\n\"\"\"\n) == \"13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\"\n\nassert solution(\n    \"\"\"\n3 2 2\n1 2\n2 1\n1 2\n\"\"\"\n) == \"-1\""
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n\\tpass\\n\\n'\n\nprint('All tests passed!')"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"1 1\"\nassert solution(\"5\\n3\\n3\\n3\\n3\\n3\\n1\\n2\\n3\\n4\\n\") == \"5 1\"\nassert solution(\"5\\n4\\n3\\n2\\n1\\n0\\n1\\n2\\n3\\n4\\n\") == \"1 5\"\nassert solution(\"4\\n1\\n5\\n3\\n6\\n1\\n2\\n3\\n\") == \"3 2\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Expected output: {expected_output}, Got: {solution(input())}\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    5\n    3\n    3\n    3\n    3\n    3\n    1\n    2\n    3\n    4\n''') == '''\n1 5\n'''\n\nassert solution('''\n    5\n    4\n    3\n    2\n    1\n    0\n    1\n    2\n    3\n    4\n''') == '''\n3 2\n'''"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n3\\n3\\n3\\n3\\n3\\n1\\n2\\n3\\n4\\nSample Input 1:\\n5\\n3\\n3\\n3\\n3\\n3\\n1\\n2\\n3\\n4\\nSample Output 1:\\n5 1\\n\\nSample Input 2:\\n5\\n4\\n3\\n2\\n1\\n0\\n1\\n2\\n3\\n4\\nSample Output 2:\\n1 5\\n\\nSample Input 3:\\n4\\n1\\n5\\n3\\n6\\n1\\n2\\n3\\nSample Output 3:\\n3 2\\n') == '1 5\\n'"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2\nassert solution(sample_input3) == sample_output3"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n3\\n3\\n3\\n3\\n3\\n1\\n2\\n3\\n4\\n\\n\\n\\n') == '5 1\\n'\nassert solution('5\\n4\\n3\\n2\\n1\\n0\\n1\\n2\\n3\\n4\\n\\n\\n\\n') == '1 5\\n'\nassert solution('4\\n1\\n5\\n3\\n6\\n1\\n2\\n3\\n\\n\\n\\n') == '3 2\\n'"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"5 1\"\nassert solution(4) == \"1 5\"\nassert solution(5) == \"3 2\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n3\\n3\\n3\\n3\\n3\\n1\\n2\\n3\\n4\\n') == '5 1'\nassert solution('5\\n4\\n3\\n2\\n1\\n0\\n1\\n2\\n3\\n4\\n') == '1 5'\nassert solution('4\\n1\\n5\\n3\\n6\\n1\\n2\\n3\\n') == '3 2'"
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"output\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 1\nassert solution(4) == 5\nassert solution(5) == 5"
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3 0\\n3 1\\n3 2\\n3 3\\n3 4\") == \"1\"\nassert solution(\"5\\n4 0\\n3 1\\n2 2\\n1 3\\n0 4\") == \"5\"\nassert solution(\"6\\n3 0\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\") == \"5\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 1, \"Test 1 failed\"\nassert solution() == 5, \"Test 2 failed\"\nassert solution() == 5, \"Test 3 failed\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2 0\\n3 1\\n3 2\\n3 3\\n3 4\\n\") == \"1\\n\"\nassert solution(\"5\\n3 0\\n3 1\\n3 2\\n3 3\\n3 4\\n\") == \"5\\n\"\nassert solution(\"6\\n3 0\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n\") == \"5\\n\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n3 0\\n3 1\\n3 2\\n3 3\\n3 4\") == \"1\\n\"\nassert solution(\"5\\n4 0\\n3 1\\n2 2\\n1 3\\n0 4\") == \"5\\n\"\nassert solution(\"6\\n3 0\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\") == \"5\\n\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"1\"\nassert solution(4) == \"5\"\nassert solution(5) == \"5\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"tests/test1.txt\", \"r\")) == 1\nassert solution(open(\"tests/test2.txt\", \"r\")) == 5\nassert solution(open(\"tests/test3.txt\", \"r\")) == 5"
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"5\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == expected_output, f\"Test case {test_case_num} failed. Expected output: {expected_output}, got: {solution(sample_input)}\""
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == ['4', '3', '4', '5', '6', '7', '8']"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '''\n0\n'''"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n8\n1 3 1\n2 3 1\n3 4 3\n4 5 4\n5 6 3\n6 7 2\n6 8 2\n\"\"\"\n) == \"\"\"\n4\n3\n4\n5\n6\n\"\"\"\n\nassert solution(\n    \"\"\"\n8\n1 2 2\n1 3 1\n2 4 3\n2 7 1\n3 5 2\n5 6 2\n7 8 1\n\"\"\"\n) == \"\"\"\n0\n\"\"\"\n\nassert solution(\n    \"\"\"\n9\n1 2 2\n1 3 1\n1 4 5\n1 5 5\n2 6 3\n3 7 3\n4 8 1\n5 9 2\n\"\"\"\n) == \"\"\"\n5\n1\n2\n3\n6\n7\n\"\"\""
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == [\"3\"]\nassert solution(2) == [\"4\", \"5\"]\nassert solution(3) == [\"4\", \"5\", \"6\"]\nassert solution(4) == [\"6\", \"7\"]\nassert solution(5) == [\"6\", \"7\", \"8\"]\nassert solution(6) == [\"6\", \"7\", \"8\", \"9\"]\nassert solution(7) == [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"]\nassert solution(8) == [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"]"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution\n\nclass Solution:\n    def is_rainbow(self, a, b, c, d):\n        if a == b or a == d or b == d:\n            return False\n        a_set = set([a, b, c, d])\n        b_set = set([b, c, d])\n        return len(a_set.intersection(b_set)) == 3\n    \n    def is_good(self, a, b, c, d):\n        if self.is_rainbow(a, b, c, d):\n            return False\n        for i in range(4):\n            if self.is_rainbow(a, b + i, c + i, d):\n                return False\n        return True\n\n    def get_good_nodes(self, n, edges):\n        good_nodes = set()\n        for a, b, c, d in edges:\n            if self.is_good(a, b, c, d):\n                good_nodes.add(a)\n                good_nodes.add(b)\n                good_nodes.add(c)\n                good_nodes.add(d)\n        return good_nodes\n\n    def solve(self, stdin: str) -> str:\n        n = int(stdin.strip())\n        edges = []\n        for _ in range(n-1):\n            a, b, c, d = map(int, stdin.strip().split())\n            edges.append((a, b, c, d))\n        good_nodes = self.get_good_nodes(n, edges)\n        return str(len(good_nodes)) + '\\n' +''.join(str(i) for i in sorted(list(good_nodes)))"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"\"\"\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\"\"\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\n# Test case 1\\n# Test case 2\\n# Test case 3\\n# Test case 4\\n# Test case 5\\n# Test case 6\\n# Test case 7\\n# Test case 8\\n# Test case 9\"\n"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '0\\n5\\n1\\n2\\n3\\n6\\n7\\n', 'Test 1 failed'\nassert solution() == '4\\n3\\n4\\n5\\n6\\n', 'Test 2 failed'\nassert solution() == '0\\n0\\n0\\n0\\n0\\n', 'Test 3 failed'"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8\\n1 3 1\\n2 3 1\\n3 4 3\\n4 5 4\\n5 6 3\\n6 7 2\\n6 8 2\") == \"4\\n3\\n4\\n5\\n6\\n\", \"Test Case 1 failed\"\nassert solution(\"8\\n1 3 1\\n2 3 1\\n3 4 3\\n4 5 4\\n5 6 3\\n6 7 2\\n6 8 2\") == \"0\\n\", \"Test Case 2 failed\"\nassert solution(\"9\\n1 2 2\\n1 3 1\\n1 4 5\\n1 5 5\\n2 6 3\\n3 7 3\\n4 8 1\\n5 9 2\\n\") == \"5\\n1\\n2\\n3\\n6\\n7\\n\", \"Test Case 3 failed\""
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == '''\n5\n1 3 1\n2 3 1\n3 4 3\n4 5 4\n5 6 3\n6 7 2\n6 8 2\n'''"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\nV1 V2 V1 V1 V2\\n\") == \"5\"\nassert solution(\"2 1\\nV1 V2 V1 V1 V2\\n\") == \"6\"\nassert solution(\"1 2\\nR10 V1 V2 V1 E\\n\") == \"30\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\nV1 V2 V1 V1 V2\\n\") == \"5\"\nassert solution(\"2 1\\nV1 V2 V1 V1 V2\\n\") == \"6\"\nassert solution(\"1 2\\nR10 V1 V2 V1 E\\n\") == \"30\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\nV1 V2 V1 V1 V2\\n\") == \"5\\n\"\nassert solution(\"2 1\\nV1 V2 V1 V1 V2\\n\") == \"6\\n\"\nassert solution(\"1 2\\nR10 V1 V2 V1 E\\n\") == \"30\\n\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\nV1 V2 V1 V1 V2\\n\") == \"5\\n\"\nassert solution(\"2 1\\nV1 V2 V1 V1 V2\\n\") == \"6\\n\"\nassert solution(\"1 2\\nR10 V1 V2 V1 E\\n\") == \"30\\n\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    1 2\n    V1 V2 V1 V1 V2\n    \"\"\"\n) == \"5\"\n\nassert solution(\n    \"\"\"\n    2 1\n    V1 V2 V1 V1 V2\n    \"\"\"\n) == \"6\"\n\nassert solution(\n    \"\"\"\n    1 2\n    R10 V1 V2 V1 E\n    \"\"\"\n) == \"30\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\nV1 V2 V1 V1 V2\") == \"5\\n\"\nassert solution(\"2 1\\nV1 V2 V1 V1 V2\") == \"6\\n\"\nassert solution(\"1 2\\nR10 V1 V2 V1 E\") == \"30\\n\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\nV1 V2 V1 V1 V2\\nSample Input 2\\nSample Output 2\\n\") == \"6\"\nassert solution(\"1 2\\nR10 V1 V2 V1 E\\nSample Input 3\\nSample Output 3\\n\") == \"30\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\nV1 V2 V1 V1 V2\\nSample Output 1: 5\\n\\nSample Input 2: 2 1\\nV1 V2 V1 V1 V2\\nSample Output 2: 6\\n\\nSample Input 3: 1 2\\nR10 V1 V2 V1 E\\nSample Output 3: 30\") == \"5\\n6\\n30\"\nassert solution(\"1 2\\nV1 V2 V1 V1 V2\\nSample Output 1: 5\\n\\nSample Input 2: 2 1\\nV1 V2 V1 V1 V2\\nSample Output 2: 6\\n\\nSample Input 3: 1 2\\nR10 V1 V2 V1 E\\nSample Output 3: 30\") == \"5\\n6\\n30\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Output goes here\", \"Testcase 1 failed\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 24\") == \"38\"\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == \"546\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 24\") == \"38\"\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == \"546\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10 24') == '38'\nassert solution('10 11') == 'impossible'\nassert solution('9 216') == '546'"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10, 24) == 38\nassert solution(10, 11) == 'impossible'\nassert solution(9, 216) == 546"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '38'\nassert solution(stdin) == '546'\n"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 24) == 38\nassert solution(3, 16) == 16\nassert solution(3, 80) == 16\nassert solution(10, 216) == 546\nassert solution(10, 11) == 'impossible'\nassert solution(9, 216) == 'impossible'"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=sample_input) == sample_output, f\"The function solution({stdin}) returned {solution(stdin)}, but expected {sample_output}.\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 24\") == \"38\"\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == \"546\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'impossible'\nassert solution(input()) == '38'\nassert solution(input()) == '546'\n"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"20 60 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10\") == \"466.662\"\nassert solution(\"3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2\") == \"10.00005\"\nassert solution(\"3 4 1 0\\n0 2 0.25 8\") == \"2.0\"\n"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == 466.662\nassert solution(open(\"input2.txt\", \"r\").read()) == 10.00005\nassert solution(open(\"input3.txt\", \"r\").read()) == 2.0"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 466.662, \"Test Case 1: Expected output 466.662 but got {}\".format(solution())"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('example_input.txt', 'r')) == 466.662\nassert solution(open('input.txt', 'r')) == 10.00005"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"20 60 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10\") == \"466.662\"\nassert solution(\"3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2\") == \"10.00005\"\nassert solution(\"3 4 1 0\\n0 2 0.25 8\") == \"2.0\""
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == \"466.662\", \"Incorrect output for sample input 1\"\nassert solution(sample_input_2) == \"10.00005\", \"Incorrect output for sample input 2\"\nassert solution(sample_input_3) == \"2.0\", \"Incorrect output for sample input 3\""
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '466.662'"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_string) == expected_output, f\"Test failed for input: {input_string}, expected output: {expected_output}\""
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '466.662'"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, Got: {solution(stdin)}\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\nblue pink 1.0\\nred pink 1.5\\nblue red 1.0\\n') == '1.500000000000000'\nassert solution('2\\nblue red 1.0\\nred pink 1.5\\n') == '0.000000000000000'\nassert solution('4\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\\n') == '10.000000000000000'\n"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\nblue pink 1.0\\nred pink 1.5\\nblue red 1.0\\n\") == \"1.500000000000000\"\nassert solution(\"2\\nblue red 1.0\\nred pink 1.5\\n\") == \"0.000000000000000\"\nassert solution(\"4\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\\n\") == \"10.000000000000000\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1.500000000000000\", \"Solution should return 1.500000000000000\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\nblue pink 1.0\\nred pink 1.5\\nblue red 1.0\") == \"1.500000000000000\\n\"\nassert solution(\"2\\nblue red 1.0\\nred pink 1.5\") == \"0.000000000000000\\n\"\nassert solution(\"4\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\") == \"10.000000000000000\\n\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"blue pink 1.0\\nred pink 1.5\\nblue red 1.0\") == \"1.500000000000000\"\nassert solution(\"blue pink 1.0\\nblue red 1.0\\nblue pink 1.5\") == \"1.500000000000000\"\nassert solution(\"blue pink 1.0\\nblue red 1.0\\nblue pink 1.5\\nblue pink 1.0\") == \"1.500000000000000\"\nassert solution(\"orange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\") == \"10.000000000000000\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Sample Input 1\") == \"1.5000000000000000\\n\"\nassert solution(\"Sample Input 2\") == \"0.000000000000000\\n\"\nassert solution(\"Sample Input 3\") == \"10.000000000000000\\n\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('sample_input_1.txt').read()) == '1.500000000000000'\nassert solution(open('sample_input_2.txt').read()) == '0.000000000000000'\nassert solution(open('sample_input_3.txt').read()) == '10.000000000000000'\n\nfrom typing import List"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"blue pink 1.0\\nred pink 1.5\\nblue red 1.0\\n\") == \"1.5000000000000000\\n\"\nassert solution(\"blue pink 1.0\\nred pink 1.5\\nblue red 1.0\\nred yellow 1.5\\n\") == \"0.0000000000000000\\n\"\nassert solution(\"blue pink 1.0\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\\n\") == \"10.0000000000000000\\n\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Test cases don't match\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\n\") == \"180\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\n\") == \"22\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n\") == \"0\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 180\nprint(\"Too many\")\n"
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r').read()) == '180'\nassert solution(open('input2.txt', 'r').read()) == '22'\nassert solution(open('input3.txt', 'r').read()) == '0'"
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\n\") == \"180\\n\"\n\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\n\") == \"22\\n\"\n\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n\") == \"0\\n\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"too many\"\nprint(\"success\")"
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\") == \"180\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\") == \"22\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\") == \"0\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\n\") == \"180\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\n\") == \"22\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n\") == \"0\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\n\") == \"180\\n\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\n\") == \"22\\n\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n\") == \"0\\n\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\") == \"180\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\n\") == \"22\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n\") == \"0\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\") == \"20 20\"\nassert solution(\"6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\") == \"17 17\"\nassert solution(\"3 3 2\\n...\\n.#.\\n...\\nup 2\\nright 2\") == \"-1 -1\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\n') == '20 20'\nassert solution('6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\n') == '17 17'\nassert solution('3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\n') == '-1 -1'"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"20 20\"\nassert solution() == \"17 17\"\nassert solution() == \"-1 -1\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"6 8 5\n........\n...#....\n########\n"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\n\") == \"20 20\"\nassert solution(\"6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\n\") == \"17 17\"\nassert solution(\"3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\n\") == \"-1 -1\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Input 1:\\n6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1:\\n20 20\\n\\n\\n\\n\\nSample Input 2:\\n6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2:\\n17 17\\n\\n\\n\\n\\n\\nSample Input 3:\\n3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\n\\n\\n\\n\\n\\n\\n\\nSample Output 3:\\n-1 -1') == '20 20\\n17 17\\n'\nassert solution('6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Input 1:\\n6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1:\\n20 20\\n\\n\\n\\n\\n\\nSample Input 2:\\n6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2:\\n17 17\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1: 20 20\\n\\nSample Input 2: 6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2: 17 17\\n\\nSample Input 3: 3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3: -1 -1\\ndef solution(stdin: str) -> str:\n    pass"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1: 20 20\\nSample Input 2: 6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2: 17 17\\nSample Input 3: 3 3 2\\n...\\n.#.\\n...\\nup 2\\nright 2\\nSample Output 3: -1 -1') == '20 20\\n17 17\\n-1 -1'\n"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1:\\n20 20\\n\\nSample Input 2:\\n6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2:\\n17 17\\n\\nSample Input 3:\\n3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3:\\n-1 -1\") == \"20 20\\n17 17\"\nassert solution(\"6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2:\\n17 17\\n\\nSample Input 3:\\n3 3 2\\n... \\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3:\\n-1 -1\") == \"-1 -1\"\nassert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2:\\n17 17\\n\\nSample Input 3:\\n3 3 2\\n... \\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3:\\n-1 -1\") == \"-1 -1\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 8 5\\n......\\n#....#\\n########\\n#.####.\\n#.#####\\n.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\n\") == \"20 20\\n\"\nassert solution(\"6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\n\") == \"17 17\\n\"\nassert solution(\"3 3 2\\n...\\n.#.\\n...\\nup 2\\nright 2\\n\") == \"-1 -1\\n\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 'impossible', \"Expected impossible, got {} instead\".format(solution())"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n\") == \"impossible\\n\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n\") == \"impossible\"\n\nassert solution(\"310\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n\") == \"300\"\n\nassert solution(\"90\\n2\\n2 20 35\\n2 88 200\\n\") == \"88\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''371\n3\n2 40 65\n2 100 150\n2 300 320''') == 'impossible'\n\nassert solution('''310\n3\n2 40 65\n2 100 150\n2 300 320''') == '300'\n\nassert solution('''90\n2\n2 20 35\n2 88 200''') == '88'"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n\") == \"impossible\"\nassert solution(\"310\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n\") == \"300\"\nassert solution(\"90\\n2\\n2 20 35\\n2 88 200\\n\") == \"88\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(371) == \"impossible\"\nassert solution(310) == \"300\"\nassert solution(90) == \"88\"\n"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n\") == \"impossible\"\\n\nassert solution(\"310\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n\") == \"300\"\\n\nassert solution(\"90\\n2\\n2 20 35\\n2 88 200\\n\") == \"88\"\\n\n"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 'impossible'"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == expected_output, f\"Test case failed for input {input_data}, expected output {expected_output}\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"..#..\") == \"cannot fold\"\nassert solution(\"..#..##\") == \"cannot fold\"\nassert solution(\"#.#..\") == \"cannot fold\"\nassert solution(\"..#..#\") == \"cannot fold\"\nassert solution(\"..##..\") == \"can fold\"\nassert solution(\"...#..\") == \"can fold\"\nassert solution(\"...#..#\") == \"can fold\"\nassert solution(\"...##..\") == \"can fold\"\nassert solution(\"##..#.\") == \"can fold\"\nassert solution(\"..#.#\") == \"can fold\"\nassert solution(\"..#..#.\") == \"can fold\"\nassert solution(\"..##.#\") == \"can fold\"\nassert solution(\"...#.#\") == \"can fold\"\nassert solution(\"..#..##\") == \"can fold\"\nassert solution(\"..###..\") == \"can fold\"\nassert solution(\"..#..#..\") == \"can fold\"\nassert solution(\"...#.#.#\") == \"can fold\"\nassert solution(\"....#..\") == \"can fold\"\nassert solution(\"..#.#..#\") == \"can fold\"\nassert solution(\"..###.#.\") == \"can fold\"\nassert solution(\"...##..#\") == \"can fold\"\nassert solution(\"..#.#.#.\") == \"can fold\"\nassert solution(\"......\") == \"can fold\"\nassert solution(\"....#..#\") == \"can fold\"\nassert solution(\"........\") == \"can fold\"\nassert solution(\".....#..\") == \"can fold\"\nassert solution(\"....#.#.\") == \"can fold\"\nassert solution(\"....#.#..#\") == \"can fold\"\nassert solution(\"...........\") == \"can fold\"\nassert solution(\"..........\") == \"can fold\"\nassert solution(\"...........\") == \"can fold\"\nassert solution(\"..........\") == \"can fold\"\nassert solution(\"...........\") == \"can fold\"\nassert solution(\"..........\") == \"can fold\"\nassert solution(\"...........\") == \"can fold\"\nassert solution(\"..........\") == \"can fold\"\nassert solution(\"...........\") == \"can fold\"\nassert solution(\"..........\") == \"can fold\"\nassert solution(\"...........\") == \"can fold\"\nassert solution(\"..........\") == \"can fold\"\nassert solution(\"...........\") == \"can fold\"\nassert solution(\"..........\") == \"can fold\"\nassert solution(\"...........\") == \"can fold\"\nassert solution(\"..........\") == \"can fold\"\nassert solution(\"...........\") == \"can fold\"\nassert solution(\"..........\") == \"can fold\"\nassert solution(\"...........\") == \"can fold\"\nassert solution(\"..........\") == \"can fold\"\nassert solution(\"...........\") == \"can fold\"\nassert solution(\"..........\") == \"can fold\"\nassert solution(\"...........\") == \"can fold\"\nassert solution(\"..........\") == \"can fold\"\nassert solution(\"...........\") == \"can fold\"\nassert solution(\"..........\") == \"can fold\"\nassert solution(\"...........\") == \"can fold\"\nassert solution(\"..........\") == \"can fold\"\nassert solution(\"...........\") == \"can fold\"\nassert solution(\"..........\") == \"can fold\"\nassert solution(\"...........\") == \"can fold\"\nassert solution(\"..........\") == \"can fold\"\nassert solution(\"...........\") == \"can fold\"\nassert solution(\"..........\") == \"can fold\"\nassert solution(\"...........\") == \"can fold\"\nassert solution(\"..........\") == \"can fold\"\nassert solution(\"...........\") == \"can fold\"\nassert solution(\"..........\") == \"can fold\"\nassert solution(\"...........\") == \"can fold\"\nassert solution(\"..........\") == \"can fold\"\nassert solution(\"...........\") == \"can fold\"\nassert solution(\"..........\") == \"can fold\"\nassert solution(\"...........\") == \"can fold\"\nassert solution(\"..........\") == \"can fold\"\nassert solution(\"...........\") == \"can fold\"\nassert solution(\"..........\") == \"can fold\"\nassert solution(\"...........\") == \"can fold\"\nassert solution(\"..........\") == \"can fold\"\nassert solution(\"...........\") == \"can fold\"\nassert solution(\"..........\") == \"can fold\"\nassert solution(\"...........\") == \"can fold\"\nassert solution(\"..........\") == \"can fold\"\nassert solution(\"...........\") == \"can fold\"\nassert solution(\"..........\") == \"can fold\"\nassert solution(\"...........\") == \"can fold\"\nassert solution(\"..........\") == \"can fold\"\nassert solution(\"...........\") == \"can"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\") == \"can fold\"\nassert solution(\"......\\n......\\n######\\n......\\n......\\n......\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\") == \"can fold\"\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\") == \"cannot fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('##.##.#..#.###.#.#.') == 'cannot fold'\nassert solution('..#.#..#.#.#.#.#.#.') == 'cannot fold'\nassert solution('..#.#..#.#.#.#.#.#.') == 'cannot fold'\nassert solution('##.##.#..#.###.#.#.') == 'cannot fold'\nassert solution('......#....#......#......') == 'can fold'"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\") == \"can fold\"\n\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\") == \"cannot fold\"\n\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\") == \"cannot fold\"\n\nassert solution(\"......\\n......\\n......\\n......\\n......\\n......\") == \"can fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\") == \"cannot fold\"\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\") == \"can fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\\n\") == \"cannot fold\"\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\\n......\\n\") == \"can fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n......\\n\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('......\\n......\\n######\\n......\\n......\\n......') == 'can fold'\nassert solution('......\\n#.....\\n####..\\n#.....\\n......\\n......\\n......') == 'cannot fold'\nassert solution('..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n......') == 'cannot fold'"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\\n\") == \"can fold\"\nassert solution(\"......\\n......\\n#.....\\n####..\\n#.....\\n......\\n......\\n\") == \"cannot fold\"\n\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n......\\n\") == \"cannot fold\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\"\n"
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abcefgabc\") == \"abc\", \"Expected abc but got {}\".format(solution(\"abcefgabc\"))\nassert solution(\"abcbabcba\") == \"abcba\", \"Expected abcba but got {}\".format(solution(\"abcbabcba\"))\nassert solution(\"aaaa\") == \"aaa\", \"Expected aaa but got {}\".format(solution(\"aaaa\"))"
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'"
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('abcefgabc') == 'abc', 'Test 1'\nassert solution('abcbabcba') == 'abcba', 'Test 2'\nassert solution('aaaa') == 'aaa', 'Test 3'"
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abcefgabc\") == \"abc\", \"Sample Input 1: abcefgabc\"\nassert solution(\"abcbabcba\") == \"abcba\", \"Sample Input 2: abcbabcba\"\nassert solution(\"aaaa\") == \"aaa\", \"Sample Input 3: aaaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abcefgabc\") == \"abc\", \"Sample Input 1\"\nassert solution(\"abcbabcba\") == \"abcba\", \"Sample Input 2\"\nassert solution(\"aaaa\") == \"aaa\", \"Sample Input 3\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '4\\n'"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"tests/test_solution.txt\", \"r\")) == 4, \"Output not as expected.\"\nassert solution(open(\"tests/test_solution2.txt\", \"r\")) == 6, \"Output not as expected.\"\nassert solution(open(\"tests/test_solution3.txt\", \"r\")) == 4, \"Output not as expected.\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n1 4\\n2 5\\n') == '4\\n'\nassert solution('2\\n1 4\\n2 10005\\n') == '6\\n'\nassert solution('3\\n1 4\\n2 10\\n0 15\\n') == '4\\n'\nassert solution('') == ''\n"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"4\"\nassert solution() == \"6\"\nassert solution() == \"4\"\nassert solution() == \"4\"\nassert solution() == \"4\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 4\\n2 5\\n\") == \"4\\n\"\nassert solution(\"2\\n1 4\\n2 10005\\n\") == \"6\\n\"\nassert solution(\"3\\n1 4\\n2 10\\n0 15\\n\") == \"4\\n\"\nassert solution(\"2\\n3 5\\n4 20\\n6 30\\n\") == \"8\\n\"\nassert solution(\"3\\n0 5\\n3 30\\n2 10\\n1 35\\n\") == \"4\\n\"\nassert solution(\"4\\n0 5\\n3 30\\n2 10\\n1 35\\n5 45\\n7 50\\n\") == \"14\\n\"\nassert solution(\"1\\n2 3\\n4 5\\n6 7\\n8 9\\n10 11\\n12 13\\n14 15\\n16 17\\n18 19\\n20 21\\n22 23\\n24 25\\n26 27\\n28 29\\n30 31\\n32 33\\n34 35\\n36 37\\n38 39\\n40 41\\n42 43\\n44 45\\n46 47\\n48 49\\n50 51\\n52 53\\n54 55\\n56 57\\n58 59\\n60 61\\n62 63\\n64 65\\n66 67\\n68 69\\n70 71\\n72 73\\n74 75\\n76 77\\n78 79\\n80 81\\n82 83\\n84 85\\n86 87\\n88 89\\n90 91\\n92 93\\n94 95\\n96 97\\n98 99\\n100 101\\n102 103\\n104 105\\n106 107\\n108 109\\n110 111\\n112 113\\n114 115\\n116 117\\n118 119\\n120 121\\n122 123\\n124 125\\n126 127\\n128 129\\n130 131\\n132 133\\n134 135\\n136 137\\n138 139\\n140 141\\n142 143\\n144 145\\n146 147\\n148 149\\n150 151\\n152 153\\n154 155\\n156 157\\n158 159\\n160 161\\n162 163\\n164 165\\n166 167\\n168 169\\n170 171\\n172 173\\n174 175\\n176 177\\n178 179\\n180 181\\n182 183\\n184 185\\n186 187\\n188 189\\n190 191\\n192 193\\n194 195\\n196 197\\n198 199\\n200 201\\n202 203\\n204 205\\n206 207"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 4\\n2 5\") == \"4\"\nassert solution(\"2\\n1 4\\n2 10005\") == \"6\"\nassert solution(\"3\\n1 4\\n2 10\\n0 15\") == \"4\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == output, f\"Expected: {output}, got: {solution(stdin)}\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 4\\n2 5\") == 4\nassert solution(\"2\\n1 4\\n2 10005\") == 6\nassert solution(\"3\\n1 4\\n2 10\\n0 15\") == 4"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n1 4\\n2 5\\n') == '4\\n'\nassert solution('2\\n1 4\\n2 10005\\n') == '6\\n'\nassert solution('3\\n1 4\\n2 10\\n0 15\\n') == '4\\n'"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 4\n"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3\" # Solution 1\nassert solution() == \"2\" # Solution 2\nassert solution() == \"0\" # Solution 3"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 2\nassert solution(4) == 1\nassert solution(5) == 0"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(read_input()) == \"2\\n\", \"Incorrect output for the first example\"\nassert solution(read_input()) == \"3\\n\", \"Incorrect output for the second example\"\nassert solution(read_input()) == \"0\\n\", \"Incorrect output for the third example\""
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\""
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\n2 3 4 4 8 12 24\") == \"2\"\nassert solution(\"3\\n7 7 7\") == \"3\"\nassert solution(\"5\\n1 2 3 2 1\") == \"0\""
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\n2 3 4 4 8 12 24\") == \"2\"\nassert solution(\"3\\n7 7 7\") == \"3\"\nassert solution(\"5\\n1 2 3 2 1\") == \"0\"\n"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'Output the number of ways to arrange the given nodes into an LCM tree, modulo 10^9 + 7.\\n'\n"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '2', \"Output should be 2\"\nassert solution() == '3', \"Output should be 3\"\nassert solution() == '0', \"Output should be 0\""
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\", \"Test 1 Failed\"\nassert solution() == \"3\", \"Test 2 Failed\"\nassert solution() == \"0\", \"Test 3 Failed\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\") == \"3\"\nassert solution(\"1 2 1\\nGS\") == \"1\"\nassert solution(\"2 2 10\\nS#\") == \"-1\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\\n\") == \"3\"\nassert solution(\"1 2 1\\nGS\\n\") == \"1\"\nassert solution(\"2 2 10\\nS#\\n#G\\n\") == \"-1\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\") == \"3\"\nassert solution(\"1 2 1\\nGS\") == \"1\"\nassert solution(\"2 2 10\\nS#\") == \"-1\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 5 4\\nS#.F.\\n.MFMG') == '3'\nassert solution('1 2 1\\nGS') == '1'\nassert solution('2 2 10\\nS#') == '-1'"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\") == \"3\"\nassert solution(\"1 2 1\\nGS\") == \"1\"\nassert solution(\"2 2 10\\nS#\") == \"-1\"\n\nfrom typing import List"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\") == \"3\"\nassert solution(\"1 2 1\\nGS\") == \"1\"\nassert solution(\"2 2 10\\nS#\") == \"-1\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\") == \"3\\n\"\nassert solution(\"1 2 1\\nGS\") == \"1\\n\"\nassert solution(\"2 2 10\\nS#\") == \"-1\\n\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3\" # expected output: 3\nassert solution() == \"1\" # expected output: 1\nassert solution() == \"-1\" # expected output: -1"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\") == \"3\"\nassert solution(\"1 2 1\\nGS\") == \"1\"\nassert solution(\"2 2 10\\nS#\") == \"-1\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    2 5 4\nS#.F.\n.MFMG''') == '3'\n\nassert solution('''\n    1 2 1\nGS''') == '1'\n\nassert solution('''\n    2 2 10\nS#\n"
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\\n\") == \"1\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\\n\") == \"1\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\\n\") == \"2\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\") == \"1\\n\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\") == \"1\\n\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\") == \"2\\n\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\") == \"1\\n\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\") == \"1\\n\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\") == \"2\\n\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\") == 1\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\") == 1\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\") == 2"
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\\n\", \"Output should be 1, but is %s\" % solution(input())"
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"sample_input1.txt\", \"r\").read()) == \"1\\n\"\nassert solution(open(\"sample_input2.txt\", \"r\").read()) == \"1\\n\"\nassert solution(open(\"sample_input3.txt\", \"r\").read()) == \"2\\n\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\\n\") == \"2\\n\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\nS..#\\n.#.G\\n..GDRRDD\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.......#G#S...\\n.......G.L.D.R\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.#.....#G#S...\\n.#.....G.L.D.R\\n\") == \"2\\n\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\nS..\\n.#. \\n..G\\nDRRDD\") == \"1\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\") == \"1\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\") == \"2\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1\", \"The solution is incorrect.\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"\"\"\n1000200 799\n\"\"\"\n\nassert solution == \"\"\"\nuncertain\n\"\"\"\n\nassert solution == \"\"\"\nimpossible\n\"\"\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n999999 0 1000\\n999900 950 451\\n987654 123 13222\") == \"1000200 799\"\nassert solution(\"2\\n100 0 101\\n0 200 199\") == \"uncertain\"\nassert solution(\"2\\n100 0 100\\n0 200 199\") == \"impossible\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1000999999 0 1000\\n999900 950 451\\n987654 123 13222\") == \"1000200 799\"\nassert solution(\"2 100 0 101\\n0 200 199\") == \"uncertain\"\nassert solution(\"2 100 0 100\\n0 200 199\") == \"impossible\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n999999 0 1000\\n999900 950 451\\n987654 123 13222\") == \"1000200 799\\n\", \"Test 1\"\nassert solution(\"2\\n100 0 101\\n0 200 199\") == \"uncertain\\n\", \"Test 2\"\nassert solution(\"2\\n100 0 100\\n0 200 199\") == \"impossible\\n\", \"Test 3\"\n"
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == expected_output, f\"Input data {input_data} is invalid, expected output {expected_output}\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution, \"No test cases provided\"\n"
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test {i + 1} failed: Expected '{output}', got '{solution(input())}'\"\nprint(\"Test {i + 1} passed\".format(i=i + 1))\n"
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"999999 0 1000\\n999900 950 451\\n987654 123 13222\") == \"1000200 799\\n\"\nassert solution(\"2\\n100 0 101\\n0 200 199\") == \"uncertain\\n\"\nassert solution(\"2\\n100 0 100\\n0 200 199\") == \"impossible\\n\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1000200 799\"\nassert solution() == \"uncertain\"\nassert solution() == \"impossible\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n999999 0 1000\\n999900 950 451\\n987654 123 13222\") == \"1000200 799\\n\"\nassert solution(\"2\\n100 0 101\\n0 200 199\") == \"uncertain\\n\"\nassert solution(\"2\\n100 0 100\\n0 200 199\") == \"impossible\\n\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 7\\n9 8\\n14 17\\n19 18\") == \"2\"\nassert solution(\"2\\n4 7\\n14 17\\n9 8\\n19 18\") == \"1\"\nassert solution(\"2\\n4 8\\n9 7\\n14 18\\n19 17\") == \"syntax error\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 7\\n9 8\\n14 17\\n19 18\") == \"2\\n1\\n\"\nassert solution(\"2\\n4 7\\n14 17\\n9 8\\n19 18\") == \"1\\n2\\n\"\nassert solution(\"2\\n4 8\\n9 7\\n14 18\\n19 17\") == \"syntax error\"\n"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == [2]\nassert solution(input()) == [1, 2]\nassert solution(input()) == [1, 2]\nassert solution(input()) == [1]\nassert solution(input()) == [1, 2]\nassert solution(input()) == []"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '2\\n1'\nassert solution() == '1\\n2'"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n4 7\\n9 8\\n14 17\\n19 18\\n\") == [2, 1]\nassert solution(\"2\\n4 7\\n14 17\\n9 8\\n19 18\\n\") == [1, 2]"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 7\\n9 8\\n14 17\\n19 18\") == \"1\\n2\"\nassert solution(\"2\\n4 7\\n14 17\\n9 8\\n19 18\") == \"1\\n2\"\nassert solution(\"2\\n4 8\\n9 7\\n14 18\\n19 17\") == \"syntax error\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1\\n2\\n\"\n\nassert solution(open(\"input2.txt\", \"r\")) == \"1\\n2\\n\"\n\nassert solution(open(\"input3.txt\", \"r\")) == \"syntax error\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n4 7\\n9 8\\n14 17\\n19 18') == ['2\\n1\\n', '1\\n2\\n']\nassert solution('2\\n4 7\\n14 17\\n9 8\\n19 18') == ['1\\n2\\n', '2\\n1\\n']\nassert solution('2\\n4 8\\n9 7\\n14 18\\n19 17') == ['syntax error\\n', 'def solution(stdin: str) -> str:\\n    pass\\n']"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Solution is incorrect. Expected {expected_output}, got {solution(input())}.\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, \"Test case failed. Expected: {}, Received: {}. Your code is incorrect.\".format(output, solution(input()))"
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == \"1\", \"Output 1 is not correct\"\nassert solution(input2) == \"1\", \"Output 2 is not correct\"\nassert solution(input3) == \"8640\", \"Output 3 is not correct\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\", \"Expected output: 1, but got: \" + solution(stdin)\n"
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\") == \"1\"\nassert solution(\"85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\") == \"1\"\nassert solution(\"160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\") == \"8640\"\n"
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\") == \"1\"\nassert solution(\"85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\") == \"1\"\nassert solution(\"160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\") == \"8640\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\") == \"1\"\nassert solution(\"85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\") == \"1\"\nassert solution(\"160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\") == \"8640\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"85 55 _ 99 51 _ _ _ _ _\") == \"1\"\nassert solution(\"_ 90 22 _ 6 _ _ _ _ 81\") == \"1\"\nassert solution(\"_ _ _ _ _ 6 _ _ _ 12 60 _ 90 _\") == \"8640\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n_ 90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\") == \"1\"\nassert solution(\"85\\n_ _ _ _ _ 85 63 153\") == \"1\"\nassert solution(\"160\\n_ _ _ _ 120 _ _ 144 _ _\") == \"8640\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"many\"  # test for empty input"
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\"\n"
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n1 2\\n1 3\\n') == '2\\n'\nassert solution('5\\n2 1\\n1 5\\n3 1\\n4 3\\n') == '8\\n'\nassert solution('10\\n1 2\\n2 3\\n2 4\\n1 5\\n3 6\\n2 7\\n7 8\\n5 9\\n5 10\\n') == '24\\n'"
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2\\n1 3\") == \"2\\n\"\nassert solution(\"5\\n2 1\\n1 5\\n3 1\\n4 3\") == \"8\\n\"\nassert solution(\"10\\n1 2\\n2 3\\n2 4\\n1 5\\n3 6\\n2 7\\n7 8\\n5 9\\n5 10\") == \"24\\n\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\"\nassert solution() == \"8\"\nassert solution() == \"24\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\\n\", \"The number of optimal paths of length 2 should be 2.\\n\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"kanto.in\", \"r\")) == \"2\\n\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, \"The solution is incorrect. Please check the problem statement.\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n1\\n3\\n1\\n3\\n1\\n5\\n3\\n1\\n4\\n3\\n1\\n5\\n5\\n5\\n10\\n1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\"
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r').read()) == '24'"
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2\\n1 3\\n\") == \"2\\n\"\nassert solution(\"5\\n2 1\\n1 5\\n3 1\\n4 3\\n\") == \"8\\n\"\nassert solution(\"10\\n1 2\\n2 3\\n2 4\\n1 5\\n3 6\\n2 7\\n7 8\\n5 9\\n5 10\\n\") == \"24\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == \"essa\"\nassert solution(open(\"sample_input_2.txt\", \"r\")) == \"3\"\nassert solution(open(\"sample_input_3.txt\", \"r\")) == \"0\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"secretmessage\") == \"essa\", \"Wrong output for sample input 1.\"\nassert solution(\"treetreetreetree\") == \"3\", \"Wrong output for sample input 2.\"\nassert solution(\"oranges\") == \"0\", \"Wrong output for sample input 3.\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"secretmessage\") == \"essa\", \"Sample Input 1: secretmessage\"\nassert solution(\"treetreetreetree\") == \"3\", \"Sample Input 2: treetreetreetree\"\nassert solution(\"orangesapples\") == \"0\", \"Sample Input 3: orangesapples\"\n\nfrom typing import List"
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"secretmessage\") == \"essa\"\nassert solution(\"treetreetreetreetree\") == \"3\"\nassert solution(\"oranges\") == \"0\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"secretmessage\") == \"essa\"\nassert solution(\"treetreetreetree\") == \"3\"\nassert solution(\"oranges\") == \"0\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('secretmessage') == 'essa'\nassert solution('treetreetreetree') == '3'\nassert solution('oranges') == '0'"
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"secretmessage\\nboot\") == \"essa\"\nassert solution(\"treetreetreetree\\nwood\") == \"3\"\nassert solution(\"oranges\\naples\") == \"0\"\n\nfrom typing import List"
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"secretmessage\") == \"essa\"\nassert solution(\"treetreetreetree\") == \"3\"\nassert solution(\"oranges\") == \"0\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('secretmessage') == 'essa'\nassert solution('treetreetreetree') == '3'\nassert solution('oranges') == '0'"
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"secretmessage\\nboot\") == \"essa\"\nassert solution(\"treetreetreetree\\nwood\") == \"3\"\nassert solution(\"oranges\\napples\") == \"0\""
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '1'\nassert solution(stdin) == '4'"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n>^<^\\n######\\n#.#..#\\n#....#\\n#..R#\\n#....#\\n######') == 2\nassert solution('4\\nv<^>\\n####\\n#.R#\\n#..#\\n####') == 4\nassert solution('4\\n<<<\\n####\\n#.R#\\n#..#\\n####') == 1\n\nsolution = '''\n"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n>^<^\\n######\\n#.#..#\\n#....#\\n#..R.#\\n#....#\\n######\") == \"2\"\nassert solution(\"4\\nv<^>\\n####\\n#.R#\\n#..#\\n####\") == \"4\"\nassert solution(\"4\\n<<<\\n####\\n#.R#\\n#..#\\n####\") == \"1\""
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"6\n>^<^\n######\n"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == \"2\"\nassert solution(sample_input_2) == \"4\"\nassert solution(sample_input_3) == \"1\""
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"6\n>^<^\n######\n"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '2'\nassert solution(open('sample_output.txt', 'r')) == '4'\nassert solution(open('sample_input.txt', 'r')) == '4'\nassert solution(open('sample_output.txt', 'r')) == '1'"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n    6\n     >^<^\n######\n"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\nv<^>\") == \"4\"\nassert solution(\"4\\n<<<\") == \"1\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\") == \"3\\n\", \"Solution not correct.\"\nassert solution(\"3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\") == \"6\\n\", \"Solution not correct.\"\nassert solution(\"2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7\") == \"11\\n\", \"Solution not correct.\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\\n2\\n3 4 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n\") == \"3\\n\"\nassert solution(\"3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n\") == \"6\\n\"\nassert solution(\"2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7\\n\") == \"11\\n\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == \"3\"\nassert solution(sample_input2) == \"6\"\nassert solution(sample_input3) == \"11\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_str) == expected_output, f\"Solution does not match. Expected: {expected_output}, Received: {solution(input_str)}\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected_solution"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, \"Test failed\"\n"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\") == \"3\"\nassert solution(\"3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\") == \"6\"\nassert solution(\"2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7\") == \"11\"\n"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\\n') == '3\\n'\nassert solution('3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n') == '6\\n'\nassert solution('2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7\\n') == '11\\n'"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin: str) == \"Output\", \"Incorrect output\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\\nSample Output 1: 3\\n\\nSample Input 2:3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\nSample Output 2: 6\\n\\nSample Input 3:2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7\\nSample Output 3: 11\\n\\ndef solution(stdin: str) -> str: \\n    n = int(stdin.readline().strip()) \\n    nets = [] \\n    for _ in range(n): \\n        params = [int(x) for x in stdin.readline().strip().split()] \\n        nets.append(Net(*params)) \\n    count = 0 \\n    for net in nets: \\n        count += sum(net.missed) \\n    return str(count)"
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"168.7916512460\", \"The output should be 168.7916512460, but got {}.\".format(solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\"))\n\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\", \"The output should be 163.5274740179, but got {}.\".format(solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\"))\n\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\") == \"3.7320508076\", \"The output should be 3.7320508076, but got {}.\".format(solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\"))"
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"168.7916512460\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"168.7916512460\\n\", \"Test 1\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\\n\", \"Test 2\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\") == \"3.7320508076\\n\", \"Test 3\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution) == \"3.7320508076\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\\n60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == 168.791651246\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == 163.5274740179\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\\n60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\\n60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == 3.7320508076"
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"168.7916512460\\n\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\\n\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\") == \"3.7320508076\\n\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"168.7916512460\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\\n\") == \"168.7916512460\\n\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\\n\") == \"163.5274740179\\n\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\\n\") == \"3.7320508076\\n\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str) == output_str, f\"Test failed for input: {input_str}, expected: {output_str}, got: {solution(input_str)}\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\\n\") == \"168.7916512460\", \"Testcase 1 failed\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\\n\") == \"163.5274740179\", \"Testcase 2 failed\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\\n\") == \"3.7320508076\", \"Testcase 3 failed\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'rarity'\nassert solution(stdin) == 'canterlot'\nassert solution(stdin) =='madam'"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 5 3\") == \"rarity\"\nassert solution(\"9 8 1\") == \"canterlot\"\nassert solution(\"5 3 5\") == \"madam\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1 1 1\") == \"rarity\"\nassert solution(\"2 3 4 5 6\") == \"canterlot\"\nassert solution(\"2 2 2 2 2\") == \"madam\"\nassert solution(\"5 3 5\") == \"madam\"\nassert solution(\"5 3 3\") == \"defied\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'rarity'"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'rarity'\nprint(\"Sample Output 1:\", solution())"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1()) == 'rarity'\nassert solution(sample_input2()) == 'canterlot'\nassert solution(sample_input3()) =='madam'"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"rarity\"\nassert solution(stdin) == \"canterlot\"\nassert solution(stdin) == \"madam\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(100) == \"rarity\"\nassert solution(1000) == \"madam\"\nassert solution(1000000) == \"canterlot\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"rarity\\n\"\nassert solution(stdin) == \"canterlot\\n\"\nassert solution(stdin) == \"madam\\n\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"def\"\nassert solution(5) == \"madam\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International contest- motivation high Programmers have fun!\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"Input string is empty.\"\nassert solution(\"  \") == \"Input string is empty.\"\n\nassert solution(\"foo\") == \"Input string is empty.\"\nassert solution(\"foo  \") == \"Input string is empty.\"\n\nassert solution(\"hello world\") == \"Input string is empty.\"\nassert solution(\"hello world  \") == \"Input string is empty.\"\n\nassert solution(\"A haiku is a three-line poem in which the first and third lines contain $5$ syllables each, and the second line contains $7$ syllables.\") == \"Input string is empty.\"\nassert solution(\"  A haiku is a three-line poem in which the first and third lines contain $5$ syllables each, and the second line contains $7$ syllables.\") == \"Input string is empty.\"\n\nassert solution(\"Leaves, glowing in autumn sun, fall in Virginia.\") == \"Input string is empty.\"\nassert solution(\"  Leaves, glowing in autumn sun, fall in Virginia.\") == \"Input string is empty.\"\n\nassert solution(\"Who would know if we had too few syllables?\") == \"Input string is empty.\"\nassert solution(\"  Who would know if we had too few syllables?\") == \"Input string is empty.\"\n\nassert solution(\"International contest- motivation high Programmers have fun!.\") == \"Input string is empty.\"\nassert solution(\"  International contest- motivation high Programmers have fun!.\") == \"Input string is empty.\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. \\nLeaves, glowing in autumn sun, \\nfall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!. def solution(stdin: str) -> str: pass\") == \"International\\ncontest- motivation high\\nProgrammers have fun!. \""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\n\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\n\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International contest- motivation high Programmers have fun!\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road.Leaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International contest- motivation high Programmers have fun!\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road\\nLeaves, glowing in autumn sun\\nfall in Virginia.\\n\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\\n\"\nassert solution(\"International contest- motivation high Programmers have fun!.\") == \"International\\ncontest- motivation high\\nProgrammers have fun!.\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\n\nassert solution(\"International contest- motivation high Programmers have fun!. def solution(stdin: str) -> str: pass\") == \"International contest- motivation high Programmers have fun!. def solution(stdin: str) -> str: pass\"\n\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\n\nassert solution(\"International contest- motivation high Programmers have fun! def solution(stdin: str) -> str: pass\") == \"International contest- motivation high Programmers have fun! def solution(stdin: str) -> str: pass\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!. \") == \"International\\ncontest- motivation high\\nProgrammers have fun!.\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International contest- motivation high Programmers have fun!\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\nThoreTiemann\\nThoreHusfeldt\\n\") == \"ThoreH\\n\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\\n\") == \"Thore is awesome\\n\"\nassert solution(\"2\\nThoreHusfeldter\\nThoreHusfeldt\\n\") == \"Thore sucks\\n\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"ThoreH\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\nThoreTiemann\\nThoreHusfeldt\\n') == 'ThoreH'\nassert solution('2\\nThoreHusfeldt\\nJohanSannemo\\n') == 'Thore is awesome'\nassert solution('2\\nThoreHusfeldter\\nThoreHusfeldt\\n') == 'Thore sucks'"
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\nThoreTiemann\\nThoreHusfeldt\\n\") == \"ThoreH\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\\n\") == \"Thore is awesome\"\nassert solution(\"2\\nThoreHusfeldter\\nThoreHusfeldt\\n\") == \"Thore sucks\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\").read()) == \"Thore is awesome\"\nassert solution(open(\"input_2.txt\").read()) == \"Thore is awesome\"\nassert solution(open(\"input_3.txt\").read()) == \"Thore sucks\"\n"
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('ThoreTiemann\\nThoreHusfeldt') == 'ThoreH'\nassert solution('ThoreHusfeldt\\nJohanSannemo') == 'Thore is awesome'\nassert solution('ThoreHusfeldter\\nThoreHusfeldt') == 'Thore sucks'"
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2) == \"Thore is awesome\", \"Expected 'Thore is awesome', but got '{}'.\".format(solution(2))\nassert solution(3) == \"Thore sucks\", \"Expected 'Thore sucks', but got '{}'.\".format(solution(3))"
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\nThoreTiemann\\nThoreHusfeldt\\n\") == \"ThoreH\\n\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\\n\") == \"Thore is awesome\\n\"\nassert solution(\"2\\nThoreHusfeldter\\nThoreHusfeldt\\n\") == \"Thore sucks\\n\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ThoreTiemann\\nThoreHusfeldt\\n\") == \"ThoreH\\n\"\nassert solution(\"ThoreHusfeldt\\nThoreHusfeldter\\nThoreHusfeldt\\n\") == \"Thore sucks\\n\"\nassert solution(\"ThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHus"
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\nThoreTiemann\\nThoreHusfeldt\\n\") == \"ThoreH\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\\n\") == \"Thore is awesome\"\nassert solution(\"2\\nThoreHusfeldter\\nThoreHusfeldt\\n\") == \"Thore sucks\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"P*P\") == \"6\", \"Test 1 failed.\"\nassert solution(\"L*R\") == \"25\", \"Test 2 failed.\"\nassert solution(\"**\") == \"33\", \"Test 3 failed.\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('P*P') == 6, \"Error: Incorrect output for the sample input 'P*P'.\"\nassert solution('L*R') == 25, \"Error: Incorrect output for the sample input 'L*R'.\"\nassert solution('**') == 33, \"Error: Incorrect output for the sample input '**'.\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"P*P\") == 6, \"Incorrect value of the solution.\"\nassert solution(\"L*R\") == 25, \"Incorrect value of the solution.\"\nassert solution(\"**\") == 33, \"Incorrect value of the solution.\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"P*P\") == \"6\", \"Incorrect output\"\nassert solution(\"L*R\") == \"25\", \"Incorrect output\"\nassert solution(\"**\") == \"33\", \"Incorrect output\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"P*P\") == \"6\\n\", \"Solution 1 is incorrect\"\nassert solution(\"L*R\") == \"25\\n\", \"Solution 2 is incorrect\"\nassert solution(\"**\") == \"33\\n\", \"Solution 3 is incorrect\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"P*P\") == 6, \"Incorrect output for P*P\"\nassert solution(\"L*R\") == 25, \"Incorrect output for L*R\"\nassert solution(\"**\") == 33, \"Incorrect output for **\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"P*P\") == 6, \"Incorrect output for P*P\"\nassert solution(\"L*R\") == 25, \"Incorrect output for L*R\"\nassert solution(\"**\") == 33, \"Incorrect output for **\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"P*P\") == \"6\", \"Incorrect output for Sample Input 1\"\nassert solution(\"L*R\") == \"25\", \"Incorrect output for Sample Input 2\"\nassert solution(\"**\") == \"33\", \"Incorrect output for Sample Input 3\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"P*P\") == 6\nassert solution(\"L*R\") == 25\nassert solution(\"**\") == 33"
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('P*P') == '6', 'Expected 6, got {}'.format(solution('P*P'))\nassert solution('L*R') == '25', 'Expected 25, got {}'.format(solution('L*R'))\nassert solution('**') == '33', 'Expected 33, got {}'.format(solution('**'))\n\nfrom typing import List"
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"herp is derp\\nderp is herp\\nherp is herp\\nderp is derp\") == \"yes\"\nassert solution(\"oskar not lukas\\noskar is poptart\\nlukas is smart\") == \"wait what?\"\nassert solution(\"moo not foo\") == \"yes\"\n"
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == \"yes\", \"Please check your input\"\nassert solution(sample_input_2) == \"wait what?\", \"Please check your input\"\nassert solution(sample_input_3) == \"yes\", \"Please check your input\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"herp is derp\") == \"yes\"\nassert solution(\"derp is herp\") == \"yes\"\nassert solution(\"herp is herp\") == \"yes\"\nassert solution(\"derp is derp\") == \"yes\"\nassert solution(\"oskar not lukas\") == \"wait what?\"\nassert solution(\"oskar is poptart\") == \"yes\"\nassert solution(\"lukas is smart\") == \"wait what?\"\n\nsolution(\"moo not foo\") == \"yes\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\nherp is derp\\nderp is herp\\nherp is herp\\nderp is derp\") == \"yes\\n\"\nassert solution(\"3\\noskar not lukas\\noskar is poptart\\nlukas is smart\") == \"wait what?\\n\"\nassert solution(\"1\\nmoo not foo\") == \"yes\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4) == 'yes', \"Please use the correct form of statements.\"\nassert solution(3) == 'wait what?', \"Please use the correct form of statements.\"\nassert solution(1) == 'yes', \"Please use the correct form of statements.\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'yes'"
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"yes\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'yes', \"The statements are inconsistent with each other.\"\n"
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"wait what?\", \"Solution is incorrect\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('herp is derp\\nderp is herp\\nderp is herp\\nderp is derp') == 'yes'\nassert solution('oskar not lukas\\nostrak is poptart\\nlukas is smart') == 'wait what?'"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"impossible\""
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == 'impossible\\n'\n"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == 'impossible'\nassert solution(open('input.txt', 'r').readlines()) == 'impossible'\n\nfrom collections import defaultdict"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == \"1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\"\nassert solution(sample_input2) == \"impossible\"\nassert solution(sample_input3) == \"impossible\""
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\nAACCMMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\\n') == '''\n1 4\nMM\nA\nAA\nACA\nACMAA\n'''\n\nassert solution('3\\nACMA\\ACM\\ACA\\AMA\\n') == 'impossible'\n\nassert solution('1\\nAM\\nMA\\n') == 'impossible'"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\nAACCMMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\\nSample Input 1:\n5\\nAACCMMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\\nSample Output 1:\n1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n\\nSample Input 2:\n3\\nACMA\\ACM\\ACA\\nAMA\\nSample Output 2:\nimpossible\\n\\nSample Input 3:\n1\\nAM\\MA\\Sample Output 3:\nimpossible\\ndef solution(stdin: str) -> str:\n    pass"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'impossible' # You can use assert to test your code's correctness."
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\nAACCMMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\\n\") == \"1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\"\nassert solution(\"3\\nACMA\\ACM\\ACA\\AMA\\n\") == \"impossible\\nimpossible\\nimpossible\\n\\n\"\nassert solution(\"1\\nAM\\nMA\\n\") == \"impossible\\nimpossible\\nimpossible\\n\\n\"\n"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n5\nAACCMMAA\nACA\nMM\nACMAA\nAA\nA\n''') == '''\n1 4\nMM\nA\nAA\nACA\nACMAA\n'''\n\nassert solution('''\n3\nACMA\nACM\nACA\nAMA\n''') == '''\nimpossible\n'''\n\nassert solution('''\n1\nAM\nMA\n''') == '''\nimpossible\n'''"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"impossible\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100 111 5\\n20 0.5 10\\n80 0.5 2\\n85 0.5 2\\n90 0.5 2\\n95 0.5 2\") == \"124\"\nassert solution(\"2 4 1\\n1 0.5 5\") == \"3\"\nassert solution(\"10 20 3\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3\") == \"18.9029850746\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"100 111 5\\n20 0.5 10\\n80 0.5 2\\n85 0.5 2\\n90 0.5 2\\n95 0.5 2\") == \"124\"\nassert solution(\"2 4 1\\n1 0.5 5\") == \"3\"\nassert solution(\"10 20 3\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3\") == \"18.9029850746\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"100 111 5\\n20 0.5 10\\n80 0.5 2\\n85 0.5 2\\n90 0.5 2\\n95 0.5 2\") == \"124\"\nassert solution(\"2 4 1\\n1 0.5 5\\n\") == \"3\"\nassert solution(\"10 20 3\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3\") == \"18.9029850746\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('100 111 5\\n20 0.5 10\\n80 0.5 2\\n85 0.5 2\\n90 0.5 2\\n95 0.5 2\\n') == '124'\nassert solution('2 4 1\\n1 0.5 5\\n') == '3'\nassert solution('10 20 3\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3\\n') == '18.9029850746'"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('100 111 5\\n20 0.5 10\\n80 0.5 2\\n85 0.5 2\\n90 0.5 2\\n95 0.5 2\\n') == '124\\n'\nassert solution('2 4 1\\n1 0.5 5\\n') == '3\\n'\nassert solution('10 20 3\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3\\n') == '18.9029850746\\n'"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"100 111 5\\n20 0.5 10\\n80 0.5 2\\n85 0.5 2\\n90 0.5 2\\n95 0.5 2\") == \"124\"\nassert solution(\"2 4 1\\n1 0.5 5\") == \"3\"\nassert solution(\"10 20 3\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3\") == \"18.9029850746\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"18.9029850746\"\n"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"100 111 5\\n20 0.5 10\\n80 0.5 2\\n85 0.5 2\\n90 0.5 2\\n95 0.5 2\") == \"124\"\nassert solution(\"2 4 1\\n1 0.5 5\") == \"3\"\nassert solution(\"10 20 3\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3\") == \"18.9029850746\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input1) == expected_output1, f\"Expected output: {expected_output1}, Received output: {solution(input1)}\"\nassert solution(input2) == expected_output2, f\"Expected output: {expected_output2}, Received output: {solution(input2)}\"\nassert solution(input3) == expected_output3, f\"Expected output: {expected_output3}, Received output: {solution(input3)}\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\"\"\") == \"124\"\n\nassert solution(\"\"\"2 4 1\n1 0.5 5\"\"\") == \"3\"\n\nassert solution(\"\"\"10 20 3\n5 0.3 8\n6 0.8 3\n8 0.9 3\"\"\") == \"18.9029850746\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input(\"n = \")) == \"Output\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\") == \"2 1 2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"5 22\") == \"4 3 4 2\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n2 1\\n\") == \"2 1 2\\n\"\nassert solution(\"2 1\\n\") == \"1\\n\"\nassert solution(\"5 22\\n\") == \"4 3 4 2\\n\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4, 3) == \"2 1 2\"\nassert solution(2, 1) == \"1\"\nassert solution(5, 22) == \"4 3 4 2\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(solution(stdin=solution(stdin=stdin))) == solution(stdin=stdin)"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '2 1 2\\n'\nprint('All test cases passed.')"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n2 1\\n\") == \"2 1 2\\n\"\nassert solution(\"2 1\\n\") == \"1\\n\"\nassert solution(\"5 22\\n\") == \"4 3 4 2\\n\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\") == \"2 1 2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"5 22\") == \"4 3 4 2\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\") == \"2 1 2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"5 22\") == \"4 3 4 2\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"0\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\", \"The answer is incorrect\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n3 4\\n2 4\\n\") == \"2\\n\"\nassert solution(\"7 6\\n1 2\\n2 3\\n2 5\\n6 3\\n7 2\\n3 4\\n\") == \"2\\n\"\nassert solution(\"7 5\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\\n\") == \"0\\n\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == '2'\nassert solution(sample_input2) == '2'\nassert solution(sample_input3) == '0'"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\", \"Test 1 failed\"\nassert solution(input()) == \"2\", \"Test 2 failed\"\nassert solution(input()) == \"0\", \"Test 3 failed\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\", \"Expected output: 2, actual output: {}\".format(solution())"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n3 4\\n2 4\\n\") == \"2\\n\"\nassert solution(\"7 6\\n1 2\\n2 3\\n2 5\\n6 3\\n7 2\\n3 4\\n\") == \"2\\n\"\nassert solution(\"7 5\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\\n\") == \"0\\n\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\\n\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"TODO: implement solution\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n4 4\n1 2\n1 3\n3 4\n2 4\n''') == '2'\n\nassert solution('''\n7 6\n1 2\n2 3\n2 5\n6 3\n7 2\n3 4\n''') == '2'\n\nassert solution('''\n7 5\n1 2\n2 3\n3 4\n5 6\n6 7\n''') == '0'"
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3.14159265\", \"Expected result: 3.14159265, got: \" + solution(stdin)"
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"20 0\\n1.00 0.10\\n\") == \"20.00000000\"\nassert solution(\"-10 10\\n10.00 1.00\\n\") == \"3.14159265\"\nassert solution(\"0 20\\n1.00 0.10\\n\") == \"28.26445910\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"20 0\\n1.00 0.10\") == 20.00000000\nassert solution(\"-10 10\\n10.00 1.00\") == 3.14159265\nassert solution(\"0 20\\n1.00 0.10\") == 28.26445910"
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"20 0\\n1.00 0.10\") == \"20.00000000\"\nassert solution(\"0 20\\n1.00 0.10\") == \"28.26445910\"\nassert solution(\"-10 10\\n10.00 1.00\") == \"3.14159265\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"20 0\\n1.00 0.10\\n\") == \"20.00000000\", \"Sample Output 1\"\nassert solution(\"-10 10\\n10.00 1.00\\n\") == \"3.14159265\", \"Sample Output 2\"\nassert solution(\"0 20\\n1.00 0.10\\n\") == \"28.26445910\", \"Sample Output 3\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"20 0\\n1.00 0.10\") == \"20.00000000\"\nassert solution(\"-10 10\\n10.00 1.00\") == \"3.14159265\"\nassert solution(\"0 20\\n1.00 0.10\") == \"28.26445910\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"20 0\\n1.00 0.10\\n\") == \"20.00000000\"\nassert solution(\"-10 10\\n10.00 1.00\\n\") == \"3.14159265\"\nassert solution(\"0 20\\n1.00 0.10\\n\") == \"28.26445910\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"20 0\\n1.00 0.10\") == \"20.00000000\\n\", \"Test case 1\"\nassert solution(\"-10 10\\n10.00 1.00\") == \"3.14159265\\n\", \"Test case 2\"\nassert solution(\"0 20\\n1.00 0.10\") == \"28.26445910\\n\", \"Test case 3\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Solution is incorrect. Expected: {expected}, Received: {solution(stdin)}\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('20 0\\n1.00 0.10\\n') == '20.00000000\\n'\nassert solution('-10 10\\n10.00 1.00\\n') == '3.14159265\\n'\nassert solution('0 20\\n1.00 0.10\\n') == '28.26445910\\n'"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_data) == output_data, f\"Test Case {i+1} failed. Expected Output: {output_data}, Actual Output: {solution(input_data)}\"\n\ninput_data = \"\"\"\n4\n2 100\n1 100\n4 70\n3 70\n\"\"\"\n\noutput_data = \"\"\"\n170\n\"\"\"\n\ninput_data = \"\"\"\n3\n2 120\n3 50\n2 80\n\"\"\"\n\noutput_data = \"\"\"\n150\n\"\"\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Test {test_case} failed: {solution(input())}!= {output()}\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n2 100\\n1 100\\n4 70\\n3 70\\n') == '170\\n'\nassert solution('3\\n2 120\\n3 50\\n2 80\\n') == '150\\n'"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 100\\n1 100\\n4 70\\n3 70\") == 170, \"The solution is incorrect.\"\nassert solution(\"3\\n2 120\\n3 50\\n2 80\") == 150, \"The solution is incorrect.\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"4\\n2 100\\n1 100\\n4 70\\n3 70\\n\") == \"170\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"170\\n\", \"Your solution is incorrect\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=''), \"Test case 1 failed\"\nassert solution(stdin='4\\n2 100\\n1 100\\n4 70\\n3 70\\n'), \"Test case 2 failed\"\nassert solution(stdin='3\\n2 120\\n3 50\\n2 80\\n'), \"Test case 3 failed\"\n"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"170\\n\", \"Test case 1 failed\"\nassert solution(stdin) == \"150\\n\", \"Test case 2 failed\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 170, \"The output should be 170, not {}\".format(solution())"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2 100\\n1 100\\n4 70\\n3 70\") == \"170\"\nassert solution(\"3\\n2 120\\n3 50\\n2 80\") == \"150\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n4 3\n1 2\n1 3\n2 4\n''') == '2'\n\nassert solution('''\n6 6\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6\n''') == '5'"
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\\n\", \"Your code is incorrect.\"\nassert solution(stdin) == \"5\\n\", \"Your code is incorrect.\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Your solution is incorrect. Expected {expected_output}, got {solution(stdin)}\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '2\\n'\nassert solution(open('sample_input.txt', 'r')) == '5\\n'"
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4, 3) == 2\nassert solution(6, 6) == 5"
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(None) == \"No solution found\"\nassert solution(\"1 1 2 3 4 5\\n1 2 3 4 5\\n1 2 4 5\\n1 3 4\\n1 3 5\\n1 4 5\\n1 5 6\\n1 6 7\\n1 7 8\\n1 8 9\\n1 9 10\\n1 10 11\\n1 11 12\\n1 12 13\\n1 13 14\\n1 14 15\\n1 15 16\\n1 16 17\\n1 17 18\\n1 18 19\\n1 19 20\\n1 20 21\\n1 21 22\\n1 22 23\\n1 23 24\\n1 24 25\\n1 25 26\\n1 26 27\\n1 27 28\\n1 28 29\\n1 29 30\\n1 30 31\\n1 31 32\\n1 32 33\\n1 33 34\\n1 34 35\\n1 35 36\\n1 36 37\\n1 37 38\\n1 38 39\\n1 39 40\\n1 40 41\\n1 41 42\\n1 42 43\\n1 43 44\\n1 44 45\\n1 45 46\\n1 46 47\\n1 47 48\\n1 48 49\\n1 49 50\\n1 50 51\\n1 51 52\\n1 52 53\\n1 53 54\\n1 54 55\\n1 55 56\\n1 56 57\\n1 57 58\\n1 58 59\\n1 59 60\\n1 60 61\\n1 61 62\\n1 62 63\\n1 63 64\\n1 64 65\\n1 65 66\\n1 66 67\\n1 67 68\\n1 68 69\\n1 69 70\\n1 70 71\\n1 71 72\\n1 72 73\\n1 73 74\\n1 74 75\\n1 75 76\\n1 76 77\\n1 77 78\\n1 78 79\\n1 79 80\\n1 80 81\\n1 81 82\\n1 82 83\\n1 83 84\\n1 84 85\\n1 85 86\\n1 86 87\\n1 87 88\\n1 88 89\\n1 89 90\\n1 90 91\\n1 91 92\\n1 92 93\\n1 93 94\\n1 94 95\\n1 95 96\\n1 96 97\\n1 97 98\\n1 98 99\\n1 99 100\\n1 100 101\\n1 101 102\\n1 102 103\\n1 103 104\\n1 104 105\\n1 105 106\\n1 106 107\\n1 107 108\\n1 108 109\\n1 109 110\\n"
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n1 2\\n1 3\\n2 4\\n\") == \"2\\n\"\nassert solution(\"6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\\n\") == \"5\\n\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == '2'\nassert solution(sample_input2) == '5'"
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r'4 3\\n1 2\\n1 3\\n2 4\\n\\n6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\\n') == 2\nassert solution(r'6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\\n') == 5"
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n1 2\\n1 3\\n2 4\\n\") == \"2\"\nassert solution(\"6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\\n\") == \"5\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(data) == expected, f\"Expected {expected}, got {solution(data)}\"\n"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == 0.5, \"Your solution is incorrect\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected_solution, f\"The given solution '{solution}' is incorrect. It should be '{expected_solution}'.\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    3\n    1\n    0\n    2 1 2\n    1 0\n    1 0\n    ''') == '0.5'\n\nassert solution('''\n    8\n    6\n    1 0 2 3 0 1\n    7 1 2 3 4 5 6 7\n    1 0\n    2 0 3\n    2 0 2\n    1 0\n    1 0\n    1 0\n    1 0\n    ''') == '0.0446429'"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '0.5', \"The correct output is 0.5, but it is: \" + str(solution())"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1\\n0\\n2 1 2\\n1 0\\n1 0\") == \"0.5\"\nassert solution(\"8\\n6\\n1 0 2 3 0 1\\n7 1 2 3 4 5 6 7\\n1 0\\n2 0 3\\n2 0 2\\n1 0\\n1 0\\n1 0\\n1 0\") == \"0.0446429\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='3\\n1\\n0\\n2 1 2\\n1 0\\n1 0\\n') == '0.5'\nassert solution(stdin='8\\n6\\n1 0 2 3 0 1\\n7 1 2 3 4 5 6 7\\n1 0\\n2 0 3\\n2 0 2\\n1 0\\n1 0\\n1 0\\n1 0\\n') == '0.0446429'"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n        3\n        1\n        0\n        2 1 2\n        1 0\n        1 0\n        ''') == '0.5'\n\nassert solution('''\n        8\n        6\n        1 0 2 3 0 1\n        7 1 2 3 4 5 6 7\n        1 0\n        2 0 3\n        2 0 2\n        1 0\n        1 0\n        1 0\n        1 0\n        ''') == '0.0446429'"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1\\n0\\n2 1 2\\n1 0\\n1 0\\n\") == \"0.5\"\nassert solution(\"8\\n6\\n1 0 2 3 0 1\\n7 1 2 3 4 5 6 7\\n1 0\\n2 0 3\\n2 0 2\\n1 0\\n1 0\\n1 0\\n1 0\\n\") == \"0.0446429\"\n"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6\\n1 2 3 3 2 1\\n') == '3\\n1 6 1\\n2 5 2\\n3 4 3\\n'\nassert solution('4\\n1 2 1 2\\n') == 'IMPOSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    6\n    1 2 3 3 2 1\n    \"\"\"\n) == \"3\\n1 6 1\\n2 5 2\\n3 4 3\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    1 2 1 2\n    \"\"\"\n) == \"IMPOSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    1 2 2 1\n    \"\"\"\n) == \"IMPOSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    1 1 1 2\n    \"\"\"\n) == \"IMPOSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    1 1 2 2\n    \"\"\"\n) == \"IMPOSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    1 2 2 2\n    \"\"\"\n) == \"IMPOSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    1 1 1 1\n    \"\"\"\n) == \"IMPOSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    1 1 1 1\n    \"\"\"\n) == \"IMPOSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    1 1 1 1\n    \"\"\"\n) == \"IMPOSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    1 1 1 1\n    \"\"\"\n) == \"IMPOSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    1 1 1 1\n    \"\"\"\n) == \"IMPOSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    1 1 1 1\n    \"\"\"\n) == \"IMPOSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    1 1 1 1\n    \"\"\"\n) == \"IMPOSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    1 1 1 1\n    \"\"\"\n) == \"IMPOSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    1 1 1 1\n    \"\"\"\n) == \"IMPOSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    1 1 1 1\n    \"\"\"\n) == \"IMPOSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    1 1 1 1\n    \"\"\"\n) == \"IMPOSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    1 1 1 1\n    \"\"\"\n) == \"IMPOSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    1 1 1 1\n    \"\"\"\n) == \"IMPOSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    1 1 1 1\n    \"\"\"\n) == \"IMPOSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    1 1 1 1\n    \"\"\"\n) == \"IMPOSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    1 1 1 1\n    \"\"\"\n) == \"IMPOSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    1 1 1 1\n    \"\"\"\n) == \"IMPOSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    1 1 1 1\n    \"\"\"\n) == \"IMPOSSIBLE\\ndef solution("
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n1 2 3 3 2 1\") == \"3\\n1 6 1\\n2 5 2\\n3 4 3\"\nassert solution(\"4\\n1 2 1 2\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n1 2 3 3 2 1\\n\") == \"3\\n1 6 1\\n2 5 2\\n3 4 3\\nIMPOSSIBLE\"\n\nfrom typing import List"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(6, 1, 2, 3, 3, 2, 1, 2, 3) == \"3\\n1 6 1\\n2 5 2\\n3 4 3\"\nassert solution(4, 1, 2, 1, 2, 1) == \"IMPOSSIBLE\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"tests/sample_input_1.txt\", \"r\")) == \"3\\n1 6 1\\n2 5 2\\n3 4 3\"\nassert solution(open(\"tests/sample_input_2.txt\", \"r\")) == \"IMPOSSIBLE\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == expected, f\"Expected: {expected}, Received: {solution(stdin=input())}\"\nfor i in range(n):\n    c = input()\n    tape_art = [int(x) for x in input().split()]\n    instructions = []\n    for j in range(len(tape_art)):\n        tape_color = tape_art[j]\n        for k in range(c):\n            l = j - k\n            r = j + 1\n            if l < 0 or r > n:\n                continue\n            instructions.append(f\"{l}{r}{tape_color}\")\n    print(\" \".join(instructions))\n"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n1 2 3 3 2 1\") == \"3\\n1 6 1\\n2 5 2\\n3 4 3\\n\"\nassert solution(\"4\\n1 2 1 2\") == \"IMPOSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == \"1 2 100\\n1 100 1\\n\"\nassert solution(stdin=\"3\\n1 2\\n1 100\\n1 1\\n2\\n5 10 20 30 40 50\\n2 28 27\\n\") == \"10 20 28 27 30 40 50\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1 2 100\", \"Your code is incorrect\" # Corrected solution\n"
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1 2 100\\n\", \"Your solution should return the correct output.\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('Input') == 'Output', \"Your solution is incorrect. Please check the example inputs and submit the correct code.\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2\\n1 100\\n1 1\\n\") == \"1 2 100\"\nassert solution(\"2\\n5 10 20 30 40 50\\n2 28 27\\n\") == \"10 20 28 27 30 40 50\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2\\n1 100\\n1 1\\n2\\n5 10 20 30 40 50\\n2 28 27\") == \"1 2 100\\n1 100 20 30 40 50\\n1 100 28 27 30 40 50\"\n"
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1, 2) == \"1 2\"\nassert solution(2, 5, 10, 20, 30, 40, 50) == \"10 20 28 27 30 40 50\"\nassert solution(1, 100) == \"1 100\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2\\n1 100\\n1 1\\n2\\n5 10 20 30 40 50\\n2 28 27\") == \"1 2 100\\n1 1 28 27 30 40 50\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == '1 2 100'\nassert solution(2) == '10 20 28 27 30 40 50'\n\nfrom collections import deque\nfrom itertools import combinations, permutations\nfrom random import randrange"
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n1 100\\n1 1\") == \"1 2 100\", \"Test 1\"\nassert solution(\"2\\n5 10 20 30 40 50\\n2 28 27\") == \"10 20 28 27 30 40 50\", \"Test 2\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('0\\nSample Output 1:\\n2600\\n\\nSample Input 2:\\n3\\nAB 1 1\\nAC 2 1\\nBC 2 1\\nSample Output 2:\\n506') == 506\nassert solution('3\\nAB 1 1\\nAC 2 1\\nBC 2 1\\nSample Output 2:\\n506') == 506\nassert solution('0\\nSample Output 1:\\n2600\\n\\nSample Input 2:\\n3\\nAB 1 1\\nAC 2 1\\nBC 2 1\\nSample Output 2:\\n506') == 506\nassert solution('1\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\nSample Output 2:\\n506') == 506\nassert solution('2\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\nSample Output 2:\\n506') == 506\nassert solution('1\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\nSample Output 2:\\n506') == 506\nassert solution('1\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\nSample Output 2:\\n506') == 506"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"506\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution_input1) == \"2600\", \"The solution for sample input 1 is incorrect.\"\nassert solution(solution_input2) == \"506\", \"The solution for sample input 2 is incorrect.\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == '2600'\nassert solution(sample_input_2) == '506'"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == \"2600\"\nassert solution(sample_input2) == \"506\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Expected {expected_output}, got {solution(stdin)}\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2600\"\n\nfrom typing import List\nimport itertools"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'def solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt')) == '2600'"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"(())\") == \"possible\"\nassert solution(\"(())()\") == \"impossible\"\nassert solution(\"(())()()\") == \"impossible\"\nassert solution(\"(())()()\") == \"possible\"\nassert solution(\"(())()()()\") == \"impossible\"\nassert solution(\"()()()()\") == \"impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('()))') == 'possible'\nassert solution('())())') == 'possible'\nassert solution('((()))') == 'possible'\nassert solution('())') == 'impossible'\nassert solution('()))()') == 'impossible'\nassert solution('(())') == 'impossible'"
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"()))\"\"\") == \"possible\"\nassert solution(\"\"\")))\"\"\")) == \"impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"()))\") == \"possible\"\nassert solution(\"())))\") == \"possible\"\nassert solution(\"(()())\") == \"impossible\"\nassert solution(\"(()())(())()\") == \"impossible\"\nassert solution(\"((()))\") == \"possible\"\nassert solution(\"))\") == \"impossible\"\nassert solution(\"())\") == \"possible\"\n\nfrom typing import List"
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"())\") == \"possible\"\nassert solution(\"()())\") == \"possible\"\nassert solution(\"(()())()\") == \"possible\"\nassert solution(\"(()())\") == \"possible\"\nassert solution(\"()())\") == \"possible\"\nassert solution(\"(()())()\") == \"possible\"\nassert solution(\"()))\") == \"impossible\"\nassert solution(\"())()\") == \"impossible\"\nassert solution(\"(()())()\") == \"impossible\"\nassert solution(\"())()\") == \"impossible\"\nassert solution(\"()))\") == \"impossible\"\nassert solution(\"()))()\") == \"impossible\"\nassert solution(\"(()())()\") == \"impossible\"\nassert solution(\"()()))\") == \"impossible\"\nassert solution(\"(()())()\") == \"impossible\"\nassert solution(\"()()(\") == \"impossible\"\nassert solution(\"()()))\") == \"impossible\"\nassert solution(\"()))()))\")) == \"impossible\"\nassert solution(\"()())(\") == \"impossible\"\nassert solution(\"()())())\") == \"impossible\"\nassert solution(\"()())()(\") == \"impossible\"\nassert solution(\"()())())\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\"()())())(\") == \"impossible\"\nassert solution(\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('()))') == 'possible'\nassert solution('())))') == 'impossible'\n"
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"(()))\") == \"possible\"\nassert solution(\"(())\") == \"possible\"\nassert solution(\"(()())\") == \"possible\"\nassert solution(\"(()\")) == \"possible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"(())\\n(())\") == \"possible\"\nassert solution(\"()())\\n(())\") == \"possible\"\nassert solution(\"(()())()\\n(())\") == \"possible\"\nassert solution(\"()()\\n(()())\\n(())\") == \"possible\"\nassert solution(\"(()())\\n(())\") == \"possible\"\nassert solution(\"()()\\n(()())\") == \"impossible\"\nassert solution(\"(())\\n()\") == \"impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"()))\") == \"possible\"\nassert solution(\")))(\") == \"impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"()))\") == \"possible\"\nassert solution(\"())))\") == \"impossible\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == '1800'\nassert solution(sample_input2) == 'impossible'\n\nfrom typing import List"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=r'''\n2 3\n1 1800 9000 1800\n1 2000 9200 1600\n1 2200 9400 1400\n''') == 1800\n\nassert solution(stdin=r'''\n2 2\n1 1800 3600 1800\n1 1900 3600 1600\n''') == 'impossible'"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1800\"\nprint(\"All assertions passed!\")"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '1800'\nassert solution() == 'impossible'"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"2 3\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400\"\n) == \"1800\"\n\nassert solution(\n    \"2 2\\n1 1800 3600 1800\\n1 1900 3600 1600\"\n) == \"impossible\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400\") == \"1800\"\nassert solution(\"2 2\\n1 1800 3600 1800\\n1 1900 3600 1600\") == \"impossible\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_str=\"2 3\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400\") == \"1800\"\nassert solution(input_str=\"2 2\\n1 1800 3600 1800\\n1 1900 3600 1600\") == \"impossible\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n2 3\n1 1800 9000 1800\n1 2000 9200 1600\n1 2200 9400 1400\n''') == '1800'\n\nassert solution('''\n2 2\n1 1800 3600 1800\n1 1900 3600 1600\n''') == 'impossible'"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '1800\\n'"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1800\"\nassert solution(open(\"input.txt\", \"r\")) == \"impossible\""
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == [\"A1-B2 B1-A2 A3-B3\", \"A2-B3 B2-A3 A1-B1\", \"A3-B1 B3-A1 A2-B2\"]\nassert solution(\"2 3\") == [\"A1-B1 A2-C2 B2-C1\", \"A1-C1 A2-B1 B2-C2\", \"A1-B2 A2-C1 B1-C2\", \"A1-C2 A2-B2 B1-C1\"]"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 2\\n') == 'A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\n'\nassert solution('2 3\\n') == 'A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\\n'"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"A1-B2 B1-A2 A3-B3 A2-B3 B2-A3 A1-B1 A3-B1 A2-B2 A1-B1 A3-B2 A2-B1 A1-B2 A3-B3 A2-B1 A1-B1 A3-B1 A2-B2 A1-B1 A3-B2 A2-B1 A1-B2 A3-B3 A2-B1 A1-B1 A3-B1 A2-B2 A1-B1 A3-B2 A2-B1 A1-B2 A3-B3 A2-B1 A1-B1 A3-B1 A2-B2 A1-B1 A3-B2 A2-B1 A1-B2 A3-B3 A2-B1 A1-B1 A3-B1 A2-B2 A1-B1 A3-B2 A2-B1 A1-B2 A3-B3 A2-B1 A1-B1 A3-B1 A2-B2 A1-B1 A3-B2 A2-B1 A1-B2 A3-B3 A2-B1 A1-B1 A3-B1 A2-B2 A1-B1 A3-B2 A2-B1 A1-B2 A3-B3 A2-B1 A1-B1 A3-B1 A2-B2 A1-B1 A3-B2 A2-B1 A1-B2 A3-B3 A2-B1 A1-B1 A3-B1 A2-B2 A1-B1 A3-B2 A2-B1 A1-B2 A3-B3 A2-B1 A1-B1 A3-B1 A2-B2 A1-B1 A3-B2 A2-B1 A1-B2 A3-B3 A2-B1 A1-B1 A3-B1 A2-B2 A1-B1 A3-B2 A2-B1 A1-B2 A3-B3 A2-B1 A1-B1 A3-B1 A2-B2 A1-B1 A3-B2 A2-B1 A1-B2 A3-B3 A2-B1 A1-B1 A3-B1 A2-B2 A1-B1 A3-B2 A2-B1 A1-B2 A3-B3 A2-B1 A1-B1 A3-B1 A2-B2 A1-B1 A3-B2 A2-B1 A1-B2 A3-B3 A2-B1 A1-B1 A3-B1 A2-B2 A1-B1 A3-B2 A2-B1 A1-B2 A3-B3 A2-B1 A1-B1 A3-B1 A2-B2 A1-B1 A3-B2 A2-B1 A1-B2 A3-B3 A2-B1 A1-B1 A3-B1 A2-B2 A1-B1 A3-B2 A2-B1 A1-B2 A3-B3 A2-B1 A1-B1 A3-B1 A2-B2 A1-B1 A3-B2 A2-B1 A1-B2 A3-B3 A2-B1 A1-B1 A3-B1 A2-B2 A1-B1 A3-B2 A2-B1 A1-B2 A3-B3 A2-B1 A1-B1 A3-B1 A2-B2 A1-B1 A3-B2 A2-B1 A1-B2 A3-B3 A2-B1 A1-B1 A3-B1 A2-B2 A1-B1 A3-B2 A2-B1 A1-B2 A3-B3 A2-B1 A1-B1 A3-B1 A2-B2 A1-B1 A3-B2 A2-B1 A1-B2 A3-B3 A2-B1 A1-B"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\n'\n\nfrom typing import List"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n2 3\\n\") == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\n\""
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\n\", \"Test Case 1\""
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n2 3\") == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\n\"\nassert solution(\"2 3\\n2 3\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\\n\""
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\n\"\nassert solution(\"2 3\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\\n\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n..\\n..\") == 7\nassert solution(\"4 4\\nX.XX\\nX..X\\n..X.X\\n..XX\") == 9"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n..\\n..\") == \"7\"\nassert solution(\"4 4\\nX.XX\\nX..X\\n..X. \\n..XX\") == \"9\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"7\\n9\", \"Incorrect output\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt').read()) == '7\\n'\nprint('All tests passed!')"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n..\\n..\") == \"7\\n\"\nassert solution(\"4 4\\nX.XX\\nX..X\\n..X.\\n..XX\") == \"9\\n\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(str(2, 2) + \"\\n..\") == \"7\\n\"\nassert solution(str(4, 4) + \"\\nX.XX\\nX..X\\n..X.X\\n..XX\") == \"9\\n\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 7, \"Expected Output 1: 7, got {}\".format(solution())\nassert solution() == 9, \"Expected Output 2: 9, got {}\".format(solution())"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 2\\n..\\n..') == '7\\n'\nassert solution('4 4\\nX.XX\\nX..X\\n..X. \\n..XX\\n') == '9\\n'"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n3 3 2 2 100\\n1 1 1 1 500\") == \"600\"\nassert solution(\"2\\n2 0 2 1 100\\n6 0 8 1 1\") == \"100\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n3 3 2 2 100\\n1 1 1 1 500\\n\") == \"600\\n\"\nassert solution(\"2\\n2 0 2 1 100\\n6 0 8 1 1\\n\") == \"100\\n\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n3 3 2 2 100\\n1 1 1 1 500\\n\") == \"600\"\nassert solution(\"2\\n2 0 2 1 100\\n6 0 8 1 1\\n\") == \"100\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n3 3 2 2 100\\n1 1 1 1 500\\n') == '600'\nassert solution('2\\n2 0 2 1 100\\n6 0 8 1 1\\n') == '100'\n"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='2\\n3 3 2 2 100\\n1 1 1 1 500\\n') == '600\\n'\nassert solution(stdin='2\\n2 0 2 1 100\\n6 0 8 1 1\\n') == '100\\n'\n"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n3 3 2 2 100\\n1 1 1 1 500\\n2\\n2 0 2 1 100\\n6 0 8 1 1\") == 600\n\nassert solution(\"2\\n2 0 2 1 100\\n6 0 8 1 1\") == 100"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n3 3 2 2 100\\n1 1 1 1 500\\n\") == \"600\"\nassert solution(\"2\\n2 0 2 1 100\\n6 0 8 1 1\\n\") == \"100\"\nassert solution(\"2\\n1 1 1 1 100\\n1 2 2 2 100\\n\") == \"-1\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n3 3 2 2 100\\n1 1 1 1 500\") == 600\nassert solution(\"2\\n2 0 2 1 100\\n6 0 8 1 1\") == 100\n\nfrom typing import List"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    3\n    361\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n    2\n    11\n    \"\"\"\n) == \"0\""
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 3\nassert solution(2) == 0"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 3\n"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(read_input()) == 3\nassert solution(read_input()) == 0"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n361\") == 3\nassert solution(\"2\\n11\") == 0"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n361\") == \"3\"\nassert solution(\"2\\n11\") == \"0\""
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 3\nassert solution(2) == 0"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(10) == 0\nassert solution(100) == 1\nassert solution(1000) == 2\nassert solution(100000000) == 1000000000\nassert solution
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n361') == '3'\nassert solution('2\\n11') == '0'\n\nfrom typing import List"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(int(input()))) == int(input())"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 10\\n2 100\\n1 10\\n11 5\\n\") == \"10\"\nassert solution(\"3 10\\n2 100\\n1 10\\n13 5\\n\") == \"cancel road trip\""
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == '10'"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 10\\n2 100\\n1 10\\n11 5\\n') == '10'\nassert solution('3 10\\n2 100\\n1 10\\n13 5\\n') == 'cancel road trip'"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 10\\n2 100\\n1 10\\n11 5\\n') == '10'\nassert solution('3 10\\n2 100\\n1 10\\n13 5\\n') == 'cancel road trip'"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == expected_solution, f\"Incorrect solution. Expected: {expected_solution}, Received: {solution}\""
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_sample1) == output_sample1\nassert solution(input_sample2) == output_sample2"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 10\\n2 100\\n1 10\\n11 5\\n\") == \"10\"\nassert solution(\"3 10\\n2 100\\n1 10\\n13 5\\n\") == \"cancel road trip\""
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    3 10\n    2 100\n    1 10\n    11 5\n    \"\"\"\n) == \"10\"\n\nassert solution(\n    \"\"\"\n    3 10\n    2 100\n    1 10\n    13 5\n    \"\"\"\n) == \"cancel road trip\"\n\nfrom typing import List"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Testcase failed. Expected: {}, Received: {}\".format(output(), solution(input()))"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n4 9\n2 8\n1 1\n3 4\n5 100\n\"\"\"\n) == \"\"\"\n1 8 9 9 100 101 108 109 109\n\"\"\"\n\nassert solution(\n    \"\"\"\n5 7\n2 2\n3 8\n2 7\n2 4\n3 8\n\"\"\"\n) == \"\"\"\n0 7 8 11 15 16 19\n\"\"\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 9\\n2 8\\n1 1\\n3 4\\n5 100\") == \"1 8 9 9 100 101 108 109 109\"\nassert solution(\"5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\") == \"0 7 8 11 15 16 19\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 9\\n2 8\\n1 1\\n3 4\\n5 100') == '1 8 9 9 100 101 108 109 109'\nassert solution('5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8') == '0 7 8 11 15 16 19'"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 9\\n2 8\\n1 1\\n3 4\\n5 100\") == \"1 8 9 9 100 101 108 109 109\\n0 7 8 11 15 16 19\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == # Your solution here"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 9\\n2 8\\n1 1\\n3 4\\n5 100\") == \"1 8 9 9 100 101 108 109 109\"\nassert solution(\"5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\") == \"0 7 8 11 15 16 19\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 9\\n2 8\\n1 1\\n3 4\\n5 100\") == \"1 8 9 9 100 101 108 109 109\"\nassert solution(\"5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\") == \"0 7 8 11 15 16 19\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Your solution is incorrect. Please check the sample input and output.\"\nfor i in range(5):\n    assert solution(input()) == output(), f\"Your solution is incorrect. Please check the sample input and output.\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 9\\n2 8\\n1 1\\n3 4\\n5 100\") == \"1 8 9 9 100 101 108 109 109\\n\"\nassert solution(\"5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\") == \"0 7 8 11 15 16 19\\n\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3') == '1\\n'"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == 1, \"Expected 1, but got {}\".format(solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\"))\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == 3, \"Expected 3, but got {}\".format(solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\"))"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == 1\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == 3"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == 1\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == 3"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == 1, \"Expected: 1, Actual: {}\".format(solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\"))\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == 3, \"Expected: 3, Actual: {}\".format(solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\"))"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == 1, \"Sample Input 1 should return 1\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == 3, \"Sample Input 2 should return 3\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == 1, \"Error: Incorrect solution.\"\n\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 0\\n0 3\") == 3, \"Error: Incorrect solution.\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == \"1\\n\", \"Test 1 failed\"\nassert solution(sample_input_2) == \"3\\n\", \"Test 2 failed\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n') == 1\nassert solution('1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n') == 3"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == 1\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == 3"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\\n\") == \"4\\n4\\n2\\n2\\n0\\n\"\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\\n\") == \"2\\n0\\n0\\n2\\n0\\n\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\") == \"4\\n4\\n2\\n2\\n0\\n\"\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\") == \"2\\n0\\n0\\n2\\n0\\n\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '''2\n2\n2\n2\n2'''\n"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\\n\") == \"4\\n4\\n2\\n2\\n0\\n\"\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\\n\") == \"2\\n0\\n0\\n2\\n0\\n\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\") == \"4\\n4\\n2\\n2\\n0\\n\"\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\") == \"2\\n0\\n0\\n2\\n0\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == solution(stdin)\n"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\") == \"4\\n4\\n2\\n2\\n0\"\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\") == \"2\\n0\\n0\\n2\\n0\"\n"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 10000\\n1\\n1\\n1\\n1\\n1\\n\\nSample Output 1:\\n4\\n4\\n2\\n2\\n0\\n\\nSample Input 2:\\n5 9\\n1\\n1\\n10\\n1\\n9\\n\\nSample Output 2:\\n2\\n0\\n0\\n2\\n0\\n\\n') == '\\n2\\n0\\n0\\n2\\n0\\n\\n'"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\\n\") == [\"4\", \"4\", \"2\", \"2\", \"0\"]\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\\n\") == [\"2\", \"0\", \"0\", \"2\", \"0\"]\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: {expected_output}!= {solution(input())}\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"NE\"\nassert solution() == \"DA\"\nassert solution() == \"NE\"\nassert solution() == \"DA\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\nne\\n\") == \"NE\\n\"\nassert solution(\"4\\nkava\\n\") == \"DA\\nak\\ndef solution(stdin: str) -> str:\n    pass\"\n\nfrom typing import List"
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    2\n    4\n    6\n    \"\"\"\n) == \"DA\"\n\nassert solution(\n    \"\"\"\n    3\n    2\n    \"\"\"\n) == \"NE\"\n\nassert solution(\n    \"\"\"\n    6\n    4\n    2\n    \"\"\"\n) == \"NE\"\n\nassert solution(\n    \"\"\"\n    8\n    3\n    2\n    \"\"\"\n) == \"DA\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"NE\", \"Incorrect output\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Sample Input 1:\\n2\\nSample Output 1:\\nNE\\nn\\nSample Input 2:\\n4\\nkava\\nSample Output 2:\\nDA\\nak\\ndef solution(stdin: str) -> str:\\n    pass\\n\") == \"NE\\n\"\nassert solution(\"Sample Input 1:\\n2\\nSample Output 1:\\nNE\\nn\\nSample Input 2:\\n4\\nabc\\nSample Output 2:\\nNE\\n\\n\") == \"NE\\n\\n\"\nassert solution(\"Sample Input 1:\\n3\\nSample Output 1:\\nNE\\nno\\nSample Input 2:\\n5\\nabcabc\\nSample Output 2:\\nNE\\nno\\n\") == \"NE\\nno\\n\"\nassert solution(\"Sample Input 1:\\n4\\nSample Output 1:\\nNE\\nno\\no\\nSample Input 2:\\n5\\nabcabcabc\\nSample Output 2:\\nNE\\nno\\no\\n\") == \"NE\\nno\\no\\n\"\nassert solution(\"Sample Input 1:\\n5\\nSample Output 1:\\nNE\\nno\\no\\nno\\nSample Input 2:\\n6\\nabcabcabcabc\\nSample Output 2:\\nNE\\nno\\no\\nno\\n\") == \"NE\\nno\\no\\nno\\n\"\nassert solution(\"Sample Input 1:\\n6\\nSample Output 1:\\nNE\\nno\\no\\nno\\nno\\nSample Input 2:\\n7\\nabcabcabcabcabc\\nSample Output 2:\\nNE\\nno\\no\\nno\\nno\\n\") == \"NE\\nno\\no\\nno\\nno\\nno\\n\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Sample Input 1:\\n2\\n\") == \"NE\\nn\\n\"\nassert solution(\"Sample Input 2:\\n4\\n\") == \"DA\\nak\\ndef solution(stdin: str) -> str:\\n\\tpass\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\nne') == 'NE'\nassert solution('4\\nkava') == 'DA'"
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\nne\\n\") == \"NE\"\nassert solution(\"4\\nkava\\n\") == \"DA\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\nne\\n\") == \"NE\\nn\"\nassert solution(\"4\\nkava\\n\") == \"DA\\nak\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\nne\\n\") == \"NE\\n\"\nassert solution(\"4\\nkava\\n\") == \"DA\\nak\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 2, \"The solution should return 2, but it returns {}\".format(solution())"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"\"\"2\n0\n2\n1\"\"\""
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\\n0\\n2\\n1\\n\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"0\\n0\\n3\\n2\\n\""
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    4 4 4\n    1 2\n    1 3\n    2 4\n    3 4\n    1 1 4\n    2 1 4\n    1 1 3\n    2 2 3 2\n    \"\"\"\n) == \"2\\n0\\n2\\n1\\n\"\n\nassert solution(\n    \"\"\"\n    8 10 4\n    1 2\n    2 3\n    1 3\n    3 6\n    6 8\n    2 4\n    2 5\n    4 7\n    5 7\n    7 8\n    2 3 4 5 6\n    2 2 6 8\n    1 1 6\n    1 1 8\n    \"\"\"\n) == \"0\\n0\\n3\\n2\\n\""
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\\n0\\n2\\n1\\n\", \"Expected output is 2\\n0\\n2\\n1\\n, but got {}\".format(solution())"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2\\n0\\n2\\n1\\n\"\nassert solution(open(\"input2.txt\", \"r\")) == \"0\\n0\\n3\\n2\\n\"\n"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n''') == '2\\n0\\n2\\n1\\n'\n\nassert solution('''\n8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '0\\n0\\n3\\n2\\n'"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test Case {test_case} failed. Expected Output: {expected_output}, Actual Output: {solution(input())}\"\n\ntest_case = 1\ninput_ = \"\"\"\n4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n\"\"\"\nexpected_output = \"2\\n0\\n2\\n1\\n\"\n\nsolution(input_)"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2\") == \"2\\n0\\n2\\n1\\n\\n0\\n0\\n3\\n2\\n\\n0\\n0\\n2\\n1\\n\\n0\\n0\\n1\\n\"\nassert solution(\"8 10 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8\") == \"0\\n0\\n3\\n2\\n\\n0\\n0\\n1\\n0\\n0\\n0\\n1\\n\\n0\\n0\\n0\\n1\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2\") == \"2\\n0\\n2\\n1\"\nassert solution(\"4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2\") == \"2\\n0\\n2\\n1\"\nassert solution(\"8 10 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8\") == \"0\\n0\\n3\\n2\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\\n2 1 3\\n\") == \"2\\n\"\nassert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\\n2 1 3\\n\") == \"1\\n\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\\n2 1 3\") == 2"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == \"2\", \"sample_input1\"\nassert solution(sample_input2) == \"1\", \"sample_input2\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\\n\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([2, 2]) == 2\nassert solution([2, 2]) == 2"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '2\\n'"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\\n2 1 3\") == \"2\\n\"\nassert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 3\\n\") == \"2\\n\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\\n2 1 3\") == 2"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, Received: {solution(stdin)}\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, but got {solution(stdin)}\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"40.500000000\", \"The solution should return 40.500000000.\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 15\\nD 4 10 1\\nC 6 1\\nSample Output 1:\\n40.500000000\\n\\nSample Input 2:\\n3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\nSample Output 2:\\n49.000000000\\n\\n\") == \"40.500000000\\n49.000000000\\n\"\n"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"40.500000000\\n\", \"Expected: 40.500000000\\nGot: \" + solution(stdin)"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 15\\nD 4 10 1\\nC 6 1\\n') == '40.500000000'\nassert solution('3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\n') == '49.000000000'"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"40.500000000\", \"Test 1 Failed\"\nassert solution() == \"49.000000000\", \"Test 2 Failed\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 15\\nD 4 10 1\\nC 6 1\\n\") == \"40.500000000\\n\"\nassert solution(\"3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\n\") == \"49.000000000\\n\"\nassert solution(\"1 10\\nC 1 10\\nC 2 5\\nC 3 10\\nD 2 10 2\\nD 3 5 2\\n\") == \"15.000000000\\n\"\nassert solution(\"2 15\\nD 4 10 1\\nC 6 1\\nD 10 20 5\\nC 20 30\\n\") == \"45.000000000\\n\"\nassert solution(\"3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\nC 12 15\\nC 15 20\\n\") == \"50.000000000\\n\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == '40.5'\nassert solution(open('input.txt', 'r')) == '49'\nprint('All test cases passed')"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 15\\nD 4 10 1\\nC 6 1\\n\") == \"40.500000000\\n\"\nassert solution(\"3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\n\") == \"49.000000000\\n\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '40.500000000'\nassert solution(stdin) == '49.000000000'\n"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 15\\nD 4 10 1\\nC 6 1\\n\") == \"40.500000000\"\nassert solution(\"3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\n\") == \"49.000000000\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\n\") == \"5 4 9 3 1 10 7 6 2\\n\"\nassert solution(\"10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\n\") == \"fail\\n\"\n"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_1) == expected_output_1\nassert solution(input_2) == expected_output_2\n\ninput_1 = \"\"\"10\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n\"\"\"\n\ninput_2 = \"\"\"10\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n\"\"\"\n\nexpected_output_1 = \"\"\"5 4 9 3 1 10 7 6 2\"\"\"\nexpected_output_2 = \"\"\"fail\"\"\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == \"5 4 9 3 1 10 7 6 2\\n\"\nassert solution(\"10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == \"fail\\n\"\nassert solution(\"10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\n\") == \"fail\\n\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == \"5 4 9 3 1 10 7 6 2\"\nassert solution(\"10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\n\") == \"fail\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"5 4 9 3 1 10 7 6 2\\n\", \"The solution is incorrect.\"\n"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == \"5 4 9 3 1 10 7 6 2\"\nassert solution(\"10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == \"fail\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"5 4 9 3 1 10 7 6 2\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(None) == 'fail'"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"5 4 9 3 1 10 7 6 2\"\nassert solution(open(\"input2.txt\", \"r\")) == \"fail\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\n\") == \"5 4 9 3 1 10 7 6 2\"\nassert solution(\"10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\n\") == \"fail\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('00:00') == '3\\n00:00\\n01:01'\nassert solution('00:08') == '3\\n00:08\\n00:09\\n00:00'\n"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"00:00\\n01:01\") == \"3\\n00:00\\n01:00\\n01:01\"\nassert solution(\"00:08\\n00:00\") == \"3\\n00:08\\n00:09\\n00:00\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"00:00\\n01:01\") == \"3\\n00:00\\n01:00\\n01:01\"\nassert solution(\"00:08\\n00:00\") == \"3\\n00:08\\n00:09\\n00:00\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"00:00\") == \"00:00\\n00:00\\n\"\nassert solution(\"01:01\") == \"00:00\\n01:01\\n\"\nassert solution(\"00:08\") == \"00:08\\n00:09\\n00:08\\n\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == \"3\\n00:00\\n01:00\\n01:01\"\nassert solution(sample_input_2) == \"3\\n00:08\\n00:09\\n00:00\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"00:00\") == \"3\\n00:00\\n01:00\\n\", \"Test 1 failed\"\nassert solution(\"00:08\") == \"3\\n00:08\\n00:09\\n00:00\\n\", \"Test 2 failed\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"00:00\\n01:01\") == \"3\\n00:00\\n01:00\\n01:01\\n\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('00:00\\n01:01') == '3\\n00:00\\n01:00\\n01:01\\n'\nassert solution('00:08\\n00:00') == '3\\n00:08\\n00:09\\n00:00\\n'"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"00:00\") == \"3\\n00:00\\n01:00\"\nassert solution(\"00:08\") == \"3\\n00:08\\n00:09\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('00:00\\n01:01') == '3\\n00:00\\n01:00\\n01:01'\nassert solution('00:08\\n00:00') == '3\\n00:08\\n00:09\\n00:00'"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('(())') == '4,8:8,8:'\nassert solution('()') == '4,4:'"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"(())\") == \"4,4:4,4:\"\nassert solution(\"()())\") == \"4,4:4,4:\"\nassert solution(\"(())())\") == \"4,4:4,4:\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('(())') == '4,8:8,8:'\nassert solution('()') == '4,4:'\nassert solution('(())') == '4,8:8,8:'\n\nfrom typing import List"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('(())') == '4,8:8,8:'\nassert solution('()') == '4,4:'"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"(())\") == \"4,4:4,4:\"\nassert solution(\"(())()\") == \"4,8:8,8:4,8:8,8:\"\nassert solution(\"()()\") == \"4,4:4,4:4,4:\"\nassert solution(\"(())(()\")) == \"4,8:8,8:4,8:8,8:4,8:8,8:\"\nassert solution(\"()()()\") == \"4,4:4,4:4,4:4,4:\"\nassert solution(\"(()))()\") == \"4,8:8,8:4,8:8,8:4,8:8,8:4,8:8,8:\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('(())') == '4,8:8,8:'\nassert solution('()') == '4,4:'"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\"\nassert solution(\"(ab))\") == \"4,10:10,10:\"\nassert solution(\"(abcd))\") == \"4,13:13,13:\"\nassert solution(\"(ab(c)def))\") == \"4,15:15,15:\"\nassert solution(\"(ab))\") == \"4,8:8,8:\"\nassert solution(\"(ab)cd\")) == \"4,8:8,8:\"\nassert solution(\"(ab)cd)ef\")) == \"4,8:8,8:16,16:\"\nassert solution(\"(ab)cd)efg\")) == \"4,8:8,8:16,16:24,24:\"\nassert solution(\"(ab)cd)efg(h))\") == \"4,8:8,8:16,16:24,24:32,32:\"\nassert solution(\"(ab)cd)efg(h)i\")) == \"4,8:8,8:16,16:24,24:32,32:40,40:\"\nassert solution(\"(ab)cd)efg(h)ij))\") == \"4,8:8,8:16,16:24,24:32,32:40,40:48,48:\"\nassert solution(\"(ab)cd)efg(h)ijk))\") == \"4,8:8,8:16,16:24,24:32,32:40,40:48,48:56,56:\"\nassert solution(\"(ab)cd)efg(h)ijkl))\") == \"4,8:8,8:16,16:24,24:32,32:40,40:48,48:56,56:64,64:\"\nassert solution(\"(ab)cd)efg(h)ijklm))\") == \"4,8:8,8:16,16:24,24:32,32:40,40:48,48:56,56:64,64:72,72:\"\nassert solution(\"(ab)cd)efg(h)ijklmn))\") == \"4,8:8,8:16,16:24,24:32,32:40,40:48,48:56,56:64,64:72,72:80,80:\"\nassert solution(\"(ab)cd)efg(h)ijklmno))\") == \"4,8:8,8:16,16:24,24:32,32:40,40:48,48:56,56:64,64:72,72:80,80:88,88:\"\nassert solution(\"(ab)cd)efg(h)ijklmnop))\") == \"4,8:8,8:16,16:24,24:32,32:40,40:48,48:56,56:64,64:72,72:80,80:88,88:96,96:\"\nassert solution(\"(ab)cd)efg(h)ijklmnopq))\") == \"4,8:8,8:16,16:24,24:32,32:40,40:48,48:56,56:64,64:72,72:80,80:88,88:96,96:104,104:\"\nassert solution(\"(ab)cd)efg(h)ijklmnopqrs))\") == \"4,8:8,8:16,16:24,24:32,32:40,40:48,48:56,56:64,64:72,72:80,80:88,88:96,96:104,104:112,112:\"\nassert solution(\"(ab)cd)efg(h)ijklmnopq"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('(())') == '4,8:8,8:'\nassert solution('()') == '4,4:'\nassert solution('()') == '4,4:'\nassert solution('(())') == '4,8:8,8:'\nassert solution('((()))') == '4,8:8,8:'\nassert solution('())(') == '4,8:8,8:'\nassert solution('((()()()')) == '4,8:8,8:'\nassert solution('())((()))') == '4,8:8,8:'"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '5'"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n26 02 03 03 1\\nSample Input 1:\\n1 1\\nSample Output 1:\\n5\\n\\nSample Input 2:\\n1 1\\n26 02 03 03 2\\nSample Output 2:\\n185\\n\") == \"5\\n185\\n\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''1 1\n26 02 03 03 1\n26 02 03 03 2\n26 02 03 03 3\n26 02 03 03 4\n26 02 03 03 5\n26 02 03 03 6\n26 02 03 03 7\n26 02 03 03 8\n26 02 03 03 9\n26 02 03 03 10\n26 02 03 03 11\n26 02 03 03 12\n26 02 03 03 13\n26 02 03 03 14\n26 02 03 03 15\n26 02 03 03 16\n26 02 03 03 17\n26 02 03 03 18\n26 02 03 03 19\n26 02 03 03 20\n26 02 03 03 21\n26 02 03 03 22\n26 02 03 03 23\n26 02 03 03 24\n26 02 03 03 25\n26 02 03 03 26\n26 02 03 03 27\n26 02 03 03 28\n26 02 03 03 29\n26 02 03 03 30\n26 02 03 03 31\n26 02 03 03 32\n26 02 03 03 33\n26 02 03 03 34\n26 02 03 03 35\n26 02 03 03 36\n26 02 03 03 37\n26 02 03 03 38\n26 02 03 03 39\n26 02 03 03 40\n26 02 03 03 41\n26 02 03 03 42\n26 02 03 03 43\n26 02 03 03 44\n26 02 03 03 45\n26 02 03 03 46\n26 02 03 03 47\n26 02 03 03 48\n26 02 03 03 49\n26 02 03 03 50\n26 02 03 03 51\n26 02 03 03 52\n26 02 03 03 53\n26 02 03 03 54\n26 02 03 03 55\n26 02 03 03 56\n26 02 03 03 57\n26 02 03 03 58\n26 02 03 03 59\n26 02 03 03 60\n26 02 03 03 61\n26 02 03 03 62\n26 02 03 03 63\n26 02 03 03 64\n26 02 03 03 65\n26 02 03 03 66\n26 02 03 03 67\n26 02 03 03 68\n26 02 03"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n26 02 03 03 1\\n26 02 03 03 2\\n\") == \"5\\n185\\n\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"5\\n185\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"5\", \"Incorrect result\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 1\\n26 02 03 03 1\\n26 02 03 03 2\\n') == '5\\n185\\n'\nassert solution('1 1\\n26 02 03 03 1\\n26 02 03 03 3\\n') == '-1\\n'\nassert solution('1 1\\n26 02 03 03 1\\n26 02 03 03 4\\n') == '-1\\n'\nassert solution('1 1\\n26 02 03 03 1\\n26 02 03 03 1\\n') == '-1\\n'"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\\n26 02 03 03 1\\n26 02 03 03 2\") == \"5\\n185\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 2\\n3 4 5 6 1 2\\n4 2\\n3 4 1 2\\n') == '5 6 1 2 3 4'\nassert solution('4 2\\n3 4 1 2\\n') == '2 3 4 1'\n"
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"\"\"5 6 1 2 3 4\"\"\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\\n\") == \"5 6 1 2 3 4\\n\"\nassert solution(\"4 2\\n3 4 1 2\\n\") == \"2 3 4 1\\n\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\"\nassert solution(\"4 2\\n3 4 1 2\") == \"2 3 4 1\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, Received: {solution(stdin)}\"\n"
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\\n\") == \"5 6 1 2 3 4\"\nassert solution(\"4 2\\n3 4 1 2\\n\") == \"2 3 4 1\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '''\n5 6 1 2 3 4\n2 3 4 1\n'''"
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '''5 6 1 2 3 4 '''\nassert solution() == '''2 3 4 1 '''"
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n    6 2\n    3 4 5 6 1 2\n    ''') == '5 6 1 2 3 4 \\n'\n\nassert solution('''\n    4 2\n    3 4 1 2\n    ''') == '2 3 4 1 \\n'"
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"Impossible\"\n"
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Solution does not match the expected output. Received: {output}, Expected: {output}\"\n"
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, \"Your code is incorrect.\"\n\nn = int(input())\nk = int(input())\n\nresult = n\nfor _ in range(k):\n    # Generate all pairs of digits\n    digits = [int(d) for d in str(n)]\n    \n    # Find the pair of digits with the highest order digit\n    max_order_digit = max(digits)\n    max_pair = [d for d in digits if d!= max_order_digit][0], [d for d in digits if d!= max_order_digit][1]\n    \n    # Perform the swap by swapping the digits at different positions\n    for i in range(len(max_pair[0])):\n        for j in range(len(max_pair[1])):\n            if i < len(max_pair[0])-1 and j < len(max_pair[1])-1:\n                digits[i], digits[i+1] = digits[i+1], digits[i]\n            else:\n                break\n    \n    # Remove leading zeros from the digits and convert them to an integer\n    n = int(''.join(map(str, digits)))\n    \n    # Update the result if the new number is greater\n    if n > result:\n        result = n\n\nprint(result)"
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Output: {output()}, Error: {input()}\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1374 2\\n210 1\") == \"7413\"\nassert solution(\"5 1\\n2 3\\n4 5\") == \"254\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1374 2') == '7413'\nassert solution('210 1') == '201'"
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"7413\", \"Incorrect output\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Solution error: {solution(input())}!= {output}\"\n"
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1374 2\") == \"7413\"\nassert solution(\"210 1\") == \"201\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(None) == '0.666666666666667'\nassert solution(open('input.txt', 'r')) == '0.733333333333333'"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == output, f\"Test {i+1} failed: Expected {output}, got {solution(input)}\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == '0.666666666666667'\nassert solution(sample_input_2) == '0.733333333333333'\n\nsample_input_1 = '''\n4\n0 0\n0 1\n1 1\n1 0\n'''\n\nsample_input_2 = '''\n3\n0 0\n1 1\n2 0\n'''"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"0.666666666666667\"\nassert solution() == \"0.733333333333333\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == output, f\"Test failed: Expected {output}, got {solution(stdin)}\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '0.666666666666667'\nassert solution() == '0.733333333333333'"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input1) == \"0.666666666666667\"\nassert solution(input2) == \"0.733333333333333\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 1\\n1 0\") == \"0.666666666666667\"\nassert solution(\"3\\n0 0\\n1 1\\n2 0\") == \"0.733333333333333\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n0 0\\n0 1\\n1 1\\n1 0') == '0.666666666666667'\nassert solution('3\\n0 0\\n1 1\\n2 0') == '0.733333333333333'"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3 4\\n10 1 3\\n0 1 20\") == \"9\"\nassert solution(\"2 3 100\\n10 1 10\\n10 1 10\") == \"21\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == \"9\"\nassert solution(sample_input_2) == \"21\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution, \"No solution provided\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"9\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"9\"\n"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3 4\\n10 1 3\\n0 1 20\") == \"9\"\nassert solution(\"2 3 100\\n10 1 10\\n10 1 10\") == \"21\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3 4\\n10 1 3\\n0 1 20\") == \"9\"\nassert solution(\"2 3 100\\n10 1 10\\n10 1 10\") == \"21\"\n"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Output the minimum total cost (in dollars) to provide a wireless network that covers every corridor.\\n\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\\n# Example usage:\\n# solution()\\n\\n# Example solution:\\n# solution()\\n\\n# Expected output:\\n# solution()\\n\\n# Please ensure the function signature matches the expected output signature.\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == 9\nassert solution(open(\"input2.txt\", \"r\")) == 21"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    8 2 7 -\n    1 1 1 2\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    9 2 7 -\n    1 1 1 2\n    \"\"\"\n) == \"4\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\") == \"4\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n8 2 7 -\n1 1 1 2\n\"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n9 2 7 -\n1 1 1 2\n\"\"\"\n) == \"4\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == 2\nassert solution(sample_input_2) == 4"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\"\nassert solution() == \"4\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\\n\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\\n\") == \"4\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\\n\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\\n\") == \"4\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('8 2 7 -\\n1 1 1 2\\n') == '2\\n'\nassert solution('9 2 7 -\\n1 1 1 2\\n') == '4\\n'\n"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\") == \"4\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\") == \"4\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8') == '3\\n4\\n3\\n2\\n1'\nassert solution('4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8') == '2\\n3\\n2\\n1'"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 3\\n1 2 5\\n2 3 5\\n3 4 5') == '3\\n4\\n3\\n2\\n1'\nassert solution('4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8') == '2\\n3\\n2\\n1'"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\") == \"3\\n4\"\nassert solution(\"4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\") == \"2\\n3\\n2\\n1\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\\n\") == \"3\\n4\\n3\\n2\\n1\\n\"\nassert solution(\"4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 2 5\\n2 3 5\\n3 4 5\\n\") == \"2\\n3\\n2\\n1\\n\"\nassert solution(\"1 2 5\\n2 3 5\\n3 4 5\\n4 3 5\\n5 2 5\\n6 1 5\\n7 1 5\\n8 1 5\\n9 1 5\\n10 1 5\\n11 1 5\\n12 1 5\\n13 1 5\\n14 1 5\\n15 1 5\\n16 1 5\\n17 1 5\\n18 1 5\\n19 1 5\\n20 1 5\\n21 1 5\\n22 1 5\\n23 1 5\\n24 1 5\\n25 1 5\\n26 1 5\\n27 1 5\\n28 1 5\\n29 1 5\\n30 1 5\\n31 1 5\\n32 1 5\\n33 1 5\\n34 1 5\\n35 1 5\\n36 1 5\\n37 1 5\\n38 1 5\\n39 1 5\\n40 1 5\\n41 1 5\\n42 1 5\\n43 1 5\\n44 1 5\\n45 1 5\\n46 1 5\\n47 1 5\\n48 1 5\\n49 1 5\\n50 1 5\\n51 1 5\\n52 1 5\\n53 1 5\\n54 1 5\\n55 1 5\\n56 1 5\\n57 1 5\\n58 1 5\\n59 1 5\\n60 1 5\\n61 1 5\\n62 1 5\\n63 1 5\\n64 1 5\\n65 1 5\\n66 1 5\\n67 1 5\\n68 1 5\\n69 1 5\\n70 1 5\\n71 1 5\\n72 1 5\\n73 1 5\\n74 1 5\\n75 1 5\\n76 1 5\\n77 1 5\\n78 1 5\\n79 1 5\\n80 1 5\\n81 1 5\\n82 1 5\\n83 1 5\\n84 1 5\\n85 1 5\\n86 1 5\\n87 1 5\\n88 1 5\\n89 1 5\\n90 1 5\\n91 1 5\\n92 1 5\\n93 1 5\\n94 1 5\\n95 1 5\\n96 1 5\\n97 1 5\\n98 1 5\\n99 1 5\\n100 1 5\\n101 1 5\\n102 1 5\\n103 1 5\\n104 1 5\\n105 1 5\\n106 1 5\\n107 1 5\\n108 1 5\\n109 1 5\\n1"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"test\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 3\\n1 2 5\\n2 3 5\\n3 4 5') == '3\\n4\\n3\\n2\\n1'\nassert solution('4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8') == '2\\n3\\n2\\n1'"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n\") == \"3\\n4\\n3\\n\"\nassert solution(\"4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\") == \"2\\n3\\n2\\n1\\n\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == '3\\n4\\n3\\n2\\n1\\n'\nassert solution(sample_input2) == '2\\n3\\n2\\n1\\n'\n\nfrom typing import List"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(1000000007)) == \"3\\n4\"\nassert solution(str(1000000005)) == \"3\\n4\"\nassert solution(str(1000000003)) == \"2\\n3\"\nassert solution(str(1000000001)) == \"2\\n3\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3\\n2 1') == 6\nassert solution('3 4\\n2 3 1') == 24"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"6\", \"The output should be 6.\"\n"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == expected_output_1, \"Test case 1 failed\"\nassert solution(sample_input_2) == expected_output_2, \"Test case 2 failed\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"24\\n\"\n"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n2 1\") == \"6\\n\"\nassert solution(\"3 4\\n2 3 1\") == \"24\\n\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(r\"2 3\\n2 1\\n\") == \"6\"\nassert solution(r\"3 4\\n2 3 1\\n\") == \"24\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"24\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"6\\n\", \"The solution is incorrect\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n2 1\") == \"6\"\nassert solution(\"3 4\\n2 3 1\") == \"24\"\n\nfrom typing import List\n"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n2 1\\n\") == \"6\\n\"\nassert solution(\"3 4\\n2 3 1\\n\") == \"24\\n\"\n"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"5\\n3 4 5 1 2\\n\") == \"1\\n\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(stdin=\"5\\n3 4 5 1 2\\n\") == \"1\\n\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_string) == expected_output, f\"Expected {expected_output}, got {solution(input_string)}\"\n"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"5\\n3 4 5 1 2\\n\") == \"1\\n\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '2\\n', \"The solution is incorrect.\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\\n\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"5\\n3 4 5 1 2\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test failed: {solution(input())}!= {output}\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 2\") == \"2\\n\"\nassert solution(\"5\\n3 4 5 1 2\") == \"1\\n\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"5\\n3 4 5 1 2\\n\") == \"1\\n\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == # your solution here\nassert # other test cases"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 4 10\\n5 2 6\\n11 1 3\\n\") == \"9\"\nassert solution(\"3 3\\n1 3 1\\n2 1 2\\n1 1 1\\n\") == \"4\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == expected, f\"Test {test_case} failed\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 9\nassert solution(3) == 9\nassert solution(3) == 9\nassert solution(3) == 9\nassert solution(3) == 9"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"9\\n\"\nassert solution(open(\"input1.txt\", \"r\").read()) == \"9\\n\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"4\\n\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n1 4 10\\n5 2 6\\n11 1 3\\n\") == \"9\"\nassert solution(\"3 3\\n1 3 1\\n2 1 2\\n1 1 1\\n\") == \"4\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 'function'"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 4 10\\n5 2 6\\n11 1 3\\n\") == \"9\"\nassert solution(\"3 3\\n1 3 1\\n2 1 2\\n1 1 1\\n\") == \"4\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 0 # Solution not provided\n"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 4 10\\n5 2 6\\n11 1 3\\n\") == \"9\\n\"\nassert solution(\"3 3\\n1 3 1\\n2 1 2\\n1 1 1\\n\") == \"4\\n\"\nassert solution(\"2 2\\n3 1\\n4 5\\n\") == \"0\\n\"\nassert solution(\"1 1\\n2 2\\n3 3\\n\") == \"0\\n\"\nassert solution(\"1 1\\n1 1\\n1 1\\n\") == \"0\\n\"\n"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 1 3 4\\n1 2\\n1 3\\n3 4\\n\") == \"6\\n\"\n\nassert solution(\"4\\n3 4 5 6\\n1 2\\n1 3\\n2 4\\n\") == \"3\\n\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, \"The solution for the given input does not match the expected output.\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"6\", \"Incorrect output\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 1 3 4\\n1 2\\n1 3\\n3 4\\n\") == 6\nassert solution(\"4\\n3 4 5 6\\n1 2\\n1 3\\n2 4\\n\") == 3"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n2 1 3 4\\n1 2\\n1 3\\n3 4\\n') == '6'\nassert solution('4\\n3 4 5 6\\n1 2\\n1 3\\n2 4\\n') == '3'"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 1 3 4\\n1 2\\n1 3\\n3 4\\n\") == \"6\\n\"\nassert solution(\"4\\n3 4 5 6\\n1 2\\n1 3\\n2 4\\n\") == \"3\\n\"\n"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Solution is incorrect. Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"example1.txt\").read()) == \"6\\n\"\nassert solution(open(\"example2.txt\").read()) == \"3\\n\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 1 3 4\\n1 2\\n1 3\\n3 4\\n\") == \"6\"\nassert solution(\"4\\n3 4 5 6\\n1 2\\n1 3\\n2 4\\n\") == \"3\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == \"6\", \"Invalid output\"\nassert solution(sample_input2) == \"3\", \"Invalid output\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"2\n1 10\n5 8\"\"\"\n) == \"18\\n8\"\n\nassert solution(\n    \"\"\"3\n17 144\n121 121\n89 98\"\"\"\n) == \"265\\n25\\n10\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n1 10\\n5 8\\n') == '18\\n8\\n'\nassert solution('3\\n17 144\\n121 121\\n89 98\\n') == '265\\n25\\n10\\n'"
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"Test Input 1\") == \"Test Output 1\\n18\"\nassert solution(stdin=\"Test Input 2\") == \"Test Output 2\\n265\"\n"
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == \"18\"\nassert solution(sample_input_2) == \"265\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"18\\n8\\n\"\nassert solution(stdin) == \"265\\n25\\n10\\n\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 10\\n5 8\") == \"18\\n8\\n\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\") == \"265\\n25\\n10\\n\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 10\\n5 8\\n\") == \"18\\n8\\n\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\\n\") == \"265\\n25\\n10\\n\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for solution {solution.__name__}\"\n\ninput_str = \"\"\"\n2\n1 10\n5 8\n\"\"\"\n\nexpected_output = \"18\\n8\\n\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1 10\\n5 8\\n17 144\\n121 121\\n89 98\\n\") == \"18\\n8\\n265\\n25\\n10\\n\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0.50000000\\n\"\nassert solution(stdin) == \"12.50000000\\n\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"4 3\\n0 0\\n1 1\\n2 1\\n1 0\\n\"\n) == \"0.50000000\\n\"\n\nassert solution(\n    \"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\\n\"\n) == \"12.50000000\\n\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Your solution is incorrect. Expected: {expected}, but got: {solution(stdin)}\"\n"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '0.50000000', 'Output should be 0.50000000'\nassert solution(input()) == '12.50000000', 'Output should be 12.50000000'"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\\n\") == 0.5\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\\n\") == 12.5"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_str1) == expected_output1, f\"Test case 1 failed. Expected output: {expected_output1}, got: {solution(input_str1)}\"\nassert solution(input_str2) == expected_output2, f\"Test case 2 failed. Expected output: {expected_output2}, got: {solution(input_str2)}\"\nassert abs(solution(input_str3) - expected_output3) <= 1e-6, f\"Test case 3 failed. Expected output: {expected_output3}, got: {solution(input_str3)}\"\nassert abs(solution(input_str4) - expected_output4) <= 1e-6, f\"Test case 4 failed. Expected output: {expected_output4}, got: {solution(input_str4)}\"\nassert abs(solution(input_str5) - expected_output5) <= 1e-6, f\"Test case 5 failed. Expected output: {expected_output5}, got: {solution(input_str5)}\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output\n"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 0.50000000, \"The expected output is incorrect.\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 3\\n0 0\\n1 1\\n2 1\\n1 0') == 0.50000000\nassert solution('5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4') == 12.50000000"
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution_input) == solution_output, f\"The solution for the given input is incorrect. Expected: {solution_output}, Received: {solution(solution_input)}\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, but got {solution(input())}\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\") == \"2\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\") == \"1\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\\n4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\") == 2\nprint(\"All tests passed!\")"
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == output, f\"Test failed for the given input: {input}, expected output: {output}\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\") == \"2\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\") == \"1\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '2\\n'"
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution_1) == 2"
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\\n\") == \"2\", \"Test case 1 failed\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\\n\") == \"1\", \"Test case 2 failed\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 1\") == \"6\"\nassert solution(\"2 2 2\") == \"30\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 1\") == 6\nassert solution(\"2 2 2\") == 30"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 1\") == 6\nassert solution(\"2 2 2\") == 30"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"6\"\nprint(0)"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Output the number of different possible arrangements of delivery, modulo a prime number 10^9+7.\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 1\") == \"6\\n\"\nassert solution(\"2 2 2\") == \"30\\n\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"The function should return {expected_output}, but it returns {solution(input())}\"\n"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1, 2, 1) == 6\nassert solution(2, 2, 2) == 30\n\nfrom typing import List"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 1\") == 6\nassert solution(\"2 2 2\") == 30"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2020 2020 2020\\n\") == \"2021 2020 2020\"\nassert solution(\"2\\n1 9999999\\n\") == \"impossible\"\n\nfrom typing import List"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"2021 2020 2020\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2020 2020 2020\") == \"2021 2020 2020\"\nassert solution(\"2\\n1 9999999\") == \"impossible\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, got: {solution(input())}\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n3\n2020 2020 2020\n2\n1 9999999\n''') == ['2021', '2020', '2020']\n\nassert solution('''\n2\n1 9999999\n''') == ['impossible']\n\nassert solution('''\n5\n123 456 789 012 345\n10\n900 900 900 900 900\n1000\n999\n99999999\n''') == ['2000', '3000', '4000', '5000', '6000', '9000']"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2021 2020 2020\"\nassert solution(open(\"input2.txt\", \"r\")) == \"impossible\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2020 2020 2020\") == \"2021 2020 2020\"\nassert solution(\"2\\n1 9999999\") == \"impossible\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == sample_output1, \"Incorrect output for sample input 1\"\nassert solution(sample_input2) == sample_output2, \"Incorrect output for sample input 2\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('30 70') == '11', 'Sample Input 1'\nassert solution('66 69') == '2', 'Sample Input 2'"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"30 70\") == \"11\"\nassert solution(\"66 69\") == \"2\"\n"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"30 70\") == \"11\"\nassert solution(\"66 69\") == \"2\"\n"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {case_number} failed: {solution(stdin)}!= {expected_output}\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"30 70\") == \"11\", \"Incorrect output\"\nassert solution(\"66 69\") == \"2\", \"Incorrect output\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"30 70\") == \"11\"\nassert solution(\"66 69\") == \"2\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"11\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"30 70\") == \"11\"\nassert solution(\"66 69\") == \"2\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"30 70\") == \"11\"\nassert solution(\"66 69\") == \"2\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(30, 70) == 11\nassert solution(66, 69) == 2\n"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\n\nfrom typing import List"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2\n\nfrom typing import List"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 0\\n>@\\n>~\") == \"2\\n\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\") == \"4\\n\""
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 2 0\\n>@\\n>~') == '2\\n'\nassert solution('3 5 1\\n>>@<<\\n>~#~<\\n>>>>~') == '4\\n'"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"4\""
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 0\\n>@\\n>~\") == \"2\\n\"\nassert solution(\"2 2 0\\n>@\\n>~\") == \"2\\n\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\") == \"4\\n\""
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 2 0\\n>@\\n>~') == '2\\n'\nassert solution('3 5 1\\n>>@<<\\n>~#~<\\n>>>>~') == '4\\n'\nassert solution('2 2 1\\n>@\\n>~') == 'begin repairs\\n'"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 0\\n>@\\n>~\") == \"2\\n\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\") == \"4\\n\"\nassert solution(\"4 1 1\\n<>#<>~@<>#\") == \"begin repairs\\n\"\n"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == \"2\", \"Sample Input 1\"\nassert solution(sample_input_2) == \"4\", \"Sample Input 2\""
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\\n\"\nassert solution() == \"4\\n\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('143175=120') == '14+31+75=120'\nassert solution('5025=30') == '5+025=30'\n\nfrom typing import List"
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('143175=120\\n5025=30') == '14+31+75=120\\n5+025=30'\nassert solution('143175=120\\n5025=30\\n345678=90\\n') == '14+31+75=120\\n5+025=30\\n34+56+78=90\\n'\nassert solution('143175=120\\n5025=30\\n345678=90\\n345678=90') == '14+31+75=120\\n5+025=30\\n34+56+78=90\\n34+56+78=90'\nassert solution('143175=120\\n5025=30\\n345678=90\\n345678=90\\n') == '14+31+75=120\\n5+025=30\\n34+56+78=90\\n34+56+78=90'\nassert solution('143175=120\\n5025=30\\n345678=90\\n345678=90\\n345678=90') == '14+31+75=120\\n5+025=30\\n34+56+78=90\\n34+56+78=90\\n34+56+78=90\\n'"
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\", \"The given equation is not correct.\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\"\n"
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\"\n\nfrom typing import List"
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('143175=120') == '14+31+75=120\\n', \"The equation '143175=120' is not correct.\"\nassert solution('5025=30') == '5+025=30\\n', \"The equation '5025=30' is not correct.\""
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '-1\\n'\nassert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '-1\\n'\nassert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '-1\\n'\nassert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '-1\\n'\nassert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '-1\\n'\nassert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '-1\\n'\nassert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '-1\\n'\nassert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '-1\\n'\nassert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '-1\\n'\nassert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '-1\\n'\nassert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '-1\\n'\nassert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '-1\\n'\nassert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '-1\\n'\nassert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '-1\\n'\nassert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '-1\\n'\nassert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '-1\\n'\nassert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '-1\\n'\nassert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '-1\\n'\nassert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '-1\\n'\nassert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '-1\\n'\nassert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '-1\\n'\nassert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '1 2\\n'\nassert solution(str(8)) == '-1\\n'\nassert solution(str(8)) == '1 2\\n"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n\") == \"1 2\\n\"\nassert solution(\"8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n1\\n\") == \"-1\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '1 2', 'The output should be \"1 2\".'"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == sample_output, \"Test failed\""
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == output(), f\"The expected output is: {output()}, but the output is: {solution(stdin=input())}\""
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 5 lines of code to test the correctness of solution:\n\nYou are the boss of Wi Know, an upstanding company in information theory, especially in message encryption.\n\nThe counter-counter-intelligence branch of your upstanding company managed to intercept a message sent by the counter-intelligence agency of the local Helsinkian government. This message is, of course, of utmost importance, and its content can probably be used for the \u201cgreater good\u201d later. The message is a sequence $S$ of $N$ positive integers not greater than $N$, indexed from $1$ to $N$. Let $S_ i$ be the $i^\\textrm {th}$ integer of $S$.\n\nAs the first step to mine useful information from this message, you first have to find patterns in it. At the moment, the pattern we\u2019re interested in is whether there exists two different integers $A$ and $B$ such that the pattern $A, B, A, B$ appears as a (not necessarily contiguous) subsequence of the original message. That is, whether there exists four indices $1 \\le c < d < e < f \\le N$ such that $S_ c = S_ e$, $S_ d = S_ f$, and $S_ c \\not= S_ d$.\n\nYour task is to find such a pattern, if any, and print both $A$ and $B$. If there are multiple such pairs $(A, B)$, find the lexicographically smallest one. That is, if there are multiple such pairs $(A, B)$, print the one whose $A$ is minimized. If there are still multiple such patterns, print the one whose $B$ is minimized.\n\n-----Input-----\nThe first line contains a non-negative integer $4 \\leq N \\leq 400000$, giving the number of integers in $S$. Thereafter follow\u00a0$N$ lines, the $i^\\textrm {th}$ line contains a single integer $1 \\le S_ i \\le N$.\n\n-----Output-----\nIf $A \\not= B$ exists and the pattern $A, B, A, B$ appears as a subsequence of $S$, you should print two integers $A$ and $B$ on a single line separated by a single space, denoting the lexicographically smallest pair of $(A, B)$ as described in the problem statement. Otherwise, if there is no such pair, you should print a single integer $-1$.\n\n-----Examples-----\nSample Input 1:\n8\n1\n3\n2\n4\n1\n5\n2\n4\nSample Output 1:\n1 2\n\nSample Input 2:\n8\n1\n2\n3\n4\n5\n6\n7\n1\nSample Output 2:\n-1\n"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1 2\""
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1 2\""
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '''1 2'''"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('8\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n') == '1 2\\n'\nassert solution('8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n1\\n') == '-1\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1101\") == \"1\\n\"\nassert solution(\"1\") == \"0\\n\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1101\") == \"1\"\nassert solution(\"1\") == \"0\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1101\") == 1\nassert solution(\"1\") == 0"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1101\") == \"1\"\nassert solution(\"1\") == \"0\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1101\") == \"1\\n\", \"Output incorrect\"\nassert solution(\"1\") == \"0\\n\", \"Output incorrect\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1101\") == \"1\"\nassert solution(\"1\") == \"0\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1101') == 1\nassert solution('1') == 0\n"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1101\") == \"1\\n\"\nassert solution(\"1\") == \"0\\n\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=None) == \"not implemented\"\n\nclass Solution:\n    def count_encounters(self, routes: List[List[int]], pairs: List[Tuple[int, int]]) -> List[int]:\n        pass"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected_output, f\"Your solution is not correct. Expected: {expected_output}, Received: {solution}\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == expected, f\"The function returned {solution()}, which is not the expected output. Expected {expected}, but got {solution()}\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=sample_input_1) == expected_output_1, f\"Sample Input 1: {stdin}\"\nassert solution(stdin=sample_input_2) == expected_output_2, f\"Sample Input 2: {stdin}\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"TODO\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == [\"1\", \"0\", \"2\"]"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1\") == [\"1\\n0\\n2\\n\"]\nassert solution(\"2 1\\n4 1 6 3 6\\n7 3 4 2 6 5 6 1\\n1 2\\n\") == [\"3\\n\"]"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1\\n2 2\\n3 3\\n1 2\\n2 3\\n3 1\\n2 2\\n3 3\\n1 2\\n2 3\\n3 1\\n2 2\\n3 3\\n1 2\\n2 3\\n3 1\\n2 2\\n3 3\\n1 2\\n2 3\\n3 1\\n2 2\\n3 3\\n1 2\\n2 3\\n3 1\\n2 2\\n3 3\\n1 2\\n2 3\\n3 1\\n2 2\\n3 3\\n1 2\\n2 3\\n3 1\\n2 2\\n3 3\\n1 2\\n2 3\\n3 1\\n2 2\\n3 3\\n1 2\\n2 3\\n3 1\\n2 2\\n3 3\\n1 2\\n2 3\\n3 1\\n2 2\\n3 3\\n1 2\\n2 3\\n3 1\\n2 2\\n3 3\\n1 2\\n2 3\\n3 1\\n2 2\\n3 3\\n1 2\\n2 3\\n3 1\\n2 2\\n3 3\\n1 2\\n2 3\\n3 1\\n2 2\\n3 3\\n1 2\\n2 3\\n3 1\\n2 2\\n3 3\\n1 2\\n2 3\\n3 1\\n2 2\\n3 3\\n1 2\\n2 3\\n3 1\\n2 2\\n3 3\\n1 2\\n2 3\\n3 1\\n2 2\\n3 3\\n1 2\\n2 3\\n3 1\\n2 2\\n3 3\\n1 2\\n2 3\\n3 1\\n2 2\\n3 3\\n1 2\\n2 3\\n3 1\\n2 2\\n3 3\\n1 2\\n2 3\\n3 1\\n2 2\\n3 3\\n1 2\\n2 3\\n3 1\\n2 2\\n3 3\\n1 2\\n2 3\\n3 1\\n2 2\\n3 3\\n1 2\\n2 3\\n3 1\\n2 2\\n3 3\\n1 2\\n2 3\\n3 1\\n2 2\\n3 3\\n1 2\\n2 3\\n3 1\\n2 2\\n3 3\\n1 2\\n2 3\\n3 1\\n2 2\\n3 3\\n1 2\\n2 3\\n3 1\\n2 2\\n3 3\\n1 2\\n2 3\\n3 1\\n2 2\\n3 3\\n1 2\\n2 3\\n3 1\\n2 2\\n3 3\\n1 2\\n2 3\\n3 1\\n2 2\\n3 3\\n1 2\\n2 3\\n3 1\\n2 2\\n3 3\\n1 2\\n2 3\\n3 1\\n2 2\\n3 3\\n1 2\\n2 3\\n3 1\\n2 2\\n3 3\\n1 2\\n2 3\\n3 1\\n2 2\\n3 3\\n1 2\\n2 3\\n3 1\\n2 2\\n3 3\\n1 2\\n2 3\\n3 1\\n2 2\\n3 3\\n1 2\\n2 3\\n3 1\\n2 2"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1') == '1\\n0\\n2\\n'\nassert solution('2 1\\n4 1 6 3 6\\n7 3 4 2 6 5 6 1\\n1 2\\n') == '3\\n'"
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 1\\n1 2 3 4\") == \"4.000000\\n\"\nassert solution(\"4 2\\n2 4 3 4\") == \"3.666666\\n\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '4.000000\\n'\nassert solution(open('input.txt', 'r')) == '3.666666\\n'\n"
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 1\\n1 2 3 4\\n\") == \"4.000000\\n\"\nassert solution(\"4 2\\n2 4 3 4\\n\") == \"3.666666\\n\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"4.000000\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '4.000000\\n'"
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 1\\n1 2 3 4\\n\") == \"4.000000\"\nassert solution(\"4 2\\n2 4 3 4\\n\") == \"3.666666\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 1\\n1 2 3 4\\n4 2\\n2 4 3 4\") == \"4.000000\"\nassert solution(\"4 2\\n2 4 3 4\\n4 2\\n2 4 3 4\") == \"3.666666\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 1\\n1 2 3 4\\n4 2\\n2 4 3 4\") == \"4.000000\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 1\\n1 2 3 4\\n\") == \"4.000000\"\nassert solution(\"4 2\\n2 4 3 4\\n\") == \"3.666666\""
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0.750\""
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"0.750\""
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.0 0.0\n0.0 2.0\n\"\"\") == 0.75\n\nassert solution(\"\"\"\n2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n\"\"\") == 0.625"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\\n') == '0.750'\nassert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\\n') == '0.625'"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\").read()) == \"0.750\"\nassert solution(open(\"input2.txt\").read()) == \"0.625\""
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 0.625, \"Expected output 0.625, got {}\".format(solution())"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\") == \"0.750\\n\", \"Test case 1 failed\"\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\") == \"0.625\\n\", \"Test case 2 failed\""
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\") == 0.75\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\") == 0.625"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 0.750, \"Your solution is incorrect. Please check the function and test cases provided.\""
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"0.750\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == \"2\\n\", \"Test Case 1: Incorrect Output\"\nassert solution(sample_input2) == \"37\\n\", \"Test Case 2: Incorrect Output\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\\n\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == \"2\\n\"\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == \"37\\n\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == \"2\\n\"\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == \"37\\n\"\n"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == \"2\"\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == \"37\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin: str) == expected_output, f\"Expected output: {expected_output}, but got: {solution(stdin)}\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == \"2\\n\", \"The solution should be '2', but it is '{}'\".format(solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\"))\n\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == \"37\\n\", \"The solution should be '37', but it is '{}'\".format(solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\"))"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3\\n1 2 4\\n0 3 6\\n4 0 3') == '2'\nassert solution('3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0') == '37'"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed: expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 3\\n1234\\n1 4\\n1 4\\n1 4\\n') == '10\\n14\\n18\\n'\nassert solution('4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\\n') == '1\\n4\\n9\\n16\\n'"
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == \"10\\n14\\n18\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == [\"10\", \"14\", \"18\"]\nassert solution() == [\"1\", \"4\", \"9\", \"16\"]"
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 3\\n1234\\n1 4\\n1 4\\n1 4') == '10\\n14\\n18\\n'\nassert solution('4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4') == '1\\n4\\n9\\n16\\n'"
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\\n\") == \"10\\n14\\n18\\n\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == \"10\\n14\\n18\\n\"\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\") == \"1\\n4\\n9\\n16\\n\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == \"10\\n14\\n18\\n\"\n\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\") == \"1\\n4\\n9\\n16\\n\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == \"10\\n14\\n18\\n\"\nassert solution(sample_input2) == \"1\\n4\\n9\\n16\\n\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == \"10\\n14\\n18\\n\", \"The solution is incorrect. Please check the input and output.\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\\n\"\nassert solution(input()) == \"1\\n\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == \"2\\n\"\nassert solution(sample_input_2) == \"1\\n\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n4 2 3\\n1 3\\n2 3\\n3 4\\n2\\n1\\n5 2 4\\n1 3\\n3 4\\n2 4\\n4 5\\n\") == \"2\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2 3\\n1 3\\n2 3\\n3 4\") == \"2\"\nassert solution(\"5 2 4\\n1 3\\n3 4\\n2 4\\n4 5\") == \"1\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n4 2 3\\n1 3\\n2 3\\n3 4\\n2\\n\") == \"2\"\nassert solution(\"2\\n5 2 4\\n1 3\\n3 4\\n2 4\\n4 5\\n\") == \"1\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2 3\\n1 3\\n2 3\\n3 4\\n4 5\") == 2\nassert solution(\"5 2 4\\n1 3\\n3 4\\n2 4\\n4 5\") == 1"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\\n\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 2, \"Expected 2, got {}.\".format(solution())"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"TODO\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    4 2 3\n    1 3\n    2 3\n    3 4\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    5 2 4\n    1 3\n    3 4\n    2 4\n    4 5\n    \"\"\"\n) == \"1\\n\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"no\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\") == \"no\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\") == \"no\"\n"
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\\n\") == \"no\"\n\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\\n\") == \"no\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\") == \"no\", \"Test 1 failed\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\") == \"no\", \"Test 2 failed\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\\n') == 'no\\n'\n\nassert solution('2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\\n') == 'no\\n'\n\nprint('All tests passed!')"
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\") == \"no\\n\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\") == \"no\\n\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"yes\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"no\"\nassert solution(input()) == \"no\"\nassert solution(input()) == \"no\"\nassert solution(input()) == \"no\"\nassert solution(input()) == \"yes\"\n\nprint(\"yes\")"
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\\n2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\") == \"no\"\n\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\\n9999 0 10000 0 0 1\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n9996 0 9997 0 0 1\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\") == \"no\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 2\\n2 3\\n1 3\\n\") == \"YES\\n1 3\\n2 1\\n3 2\\n\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"NO\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 2\\n2 3\\n1 3\\n\") == \"YES\\n1 3\\n2 1\\n3 2\\n\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"NO\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 2\\n2 3\\n1 3\\n\") == \"YES\\n1 3\\n2 1\\n3 2\\n\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"NO\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1 2\\n2 3\\n1 3\\n\") == \"YES\\n1 3\\n2 1\\n3 2\\n\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"NO\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='3 3\\n1 2\\n2 3\\n1 3\\n\\n4 3\\n1 2\\n1 3\\n1 4\\n') == 'YES\\n1 3\\n2 1\\n3 2'\n\nassert solution(stdin='4 3\\n1 2\\n1 3\\n1 4\\n\\n5 4\\n2 3\\n2 4\\n3 4\\n') == 'NO\\n2 3\\n2 4\\n3 4'"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n1 2\\n2 3\\n1 3\") == \"YES\\n1 3\\n2 1\\n3 2\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\") == \"NO\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\n1 2\\n2 3\\n1 3\\n') == 'YES\\n1 3\\n2 1\\n3 2\\n'\nassert solution('4 3\\n1 2\\n1 3\\n1 4\\n') == 'NO'"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n2 3\\n1 3\\n1 4\") == \"YES\\n1 3\\n2 1\\n3 2\"\nassert solution(\"1 2\\n2 3\\n1 4\\n1 5\") == \"NO\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n5 5\") == \"YES\\n1 1\\n2 2\\n3 3\\n4 4\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output, f\"Test case failed. Expected output: {expected_output}, actual output: {solution(stdin)}\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == 'YES\\n1 3\\n2 1\\n3 2'"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"consistent\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3\\n0 > 1\\n1 = 2\\n0 = 2\\n') == 'inconsistent'\nassert solution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\\n') == 'consistent'"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"consistent\", \"The solution is not consistent\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    3 3\n    0 > 1\n    1 = 2\n    0 = 2\n''') == 'inconsistent'\n\nassert solution('''\n    5 5\n    0 = 1\n    1 = 2\n    3 = 4\n    0 > 3\n    1 > 4\n''') == 'consistent'"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n0 > 1\\n1 = 2\\n0 = 2\\n\") == \"inconsistent\"\nassert solution(\"5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\\n\") == \"consistent\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 'consistent'"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"consistent\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"consistent\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3\\n0 > 1\\n1 = 2\\n0 = 2\\n') == 'inconsistent'\nassert solution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\\n') == 'consistent'"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('inconsistent_matches.txt', 'r')) == 'inconsistent'"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n4\n1 0 0\n1 1 0\n0 0 0\n0 0 1\n''') == 1.57079633\nassert solution('''\n4\n-100 0 0\n10 0 10\n-10 -10 -10\n0 0 0\n''') == 41938.65135885"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 1.57079633"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == \"1.57079633\", \"Sample Input 1\"\nassert solution(sample_input2) == \"41938.65135885\", \"Sample Input 2\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1\") == 1.57079633\nassert solution(\"4\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0\") == 41938.65135885"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1\\n') == 1.57079633\nassert solution('4\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0\\n') == 41938.65135885\n\nprint(\"All tests passed.\")"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1') == 1.57079633\nassert solution('4\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0') == 41938.65135885"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Solution is incorrect. Output: {output}, Input: {stdin}\"\n\nfor i in range(4):\n    x, y, z = list(map(int, input().split()))\n    assert -1000 <= x <= 1000\n    assert -1000 <= y <= 1000\n    assert -1000 <= z <= 1000\n    if i > 0:\n        assert x!= 0\n        assert y!= 0\n        assert z!= 0\n        assert abs(x * x + y * y + z * z) <= 1\n    if i > 1:\n        assert x!= 0\n        assert y!= 0\n        assert z!= 0\n        assert abs(x * x + y * y + z * z) <= 1\n    if i > 2:\n        assert x!= 0\n        assert y!= 0\n        assert z!= 0\n        assert abs(x * x + y * y + z * z) <= 1\n    if i > 3:\n        assert x!= 0\n        assert y!= 0\n        assert z!= 0\n        assert abs(x * x + y * y + z * z) <= 1"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input1) == expected1, \"Test case 1 failed\"\nassert solution(input2) == expected2, \"Test case 2 failed\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1\") == 1.57079633\nassert solution(\"4\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0\") == 41938.65135885"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"test_cases/sample_input_1.txt\", \"r\")) == \"3\\n\"\nassert solution(open(\"test_cases/sample_input_2.txt\", \"r\")) == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(read_input(1)) == \"3\"\nassert solution(read_input(2)) == \"4\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('11\\nsabcabcfabc') == '3', 'Ivana won the bet (Zvonko hadn\\'t foreseen this and suspects that it is due to outside interference) and now Zvonko is waiting for her at the movies. While he is waiting, he is observing messages on a screen above him.'\n\nassert solution('18\\ntrutrutiktiktappop') == '4', 'As Ivana is running late, Zvonko has been looking at the screen for a while and noticed that some messages appeared on the screen more than once. Naturally, he\\'s been writing down all messages on a piece of paper. He wants to know the length of the longest string that appears twice (appears in two different positions on the paper).'"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"test.in\", \"r\")) == \"3\\n\"\nassert solution(open(\"test.in\", \"r\")) == \"4\\n\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Solution is not correct. Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'output', \"Please provide the correct input.\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(11,'sabcabcfabc') == 3\nassert solution(18, 'trutrutiktiktappop') == 4"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11\\nsabcabcfabc\") == \"3\\n\"\nassert solution(\"18\\ntrutrutiktiktappop\") == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 3 1\\n3 1 2\") == \"2\\n\"\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\") == \"5\\n\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 3 1\\n3 1 2\") == \"2\"\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\") == \"5\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Expected: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\\n\"\n"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 3 1\\n3 1 2\") == \"2\"\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\") == \"5\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 3 1\\n3 1 2\") == \"2\\n\"\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\") == \"5\\n\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case_number} failed: expected output '{expected_output}', but got '{solution(input())}'\"\n\nfor test_case_number in range(1, 4):\n    # Sample Input\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    # Sample Output\n    expected_output = int(input())\n    # Test case\n    print(solution(f\"3\\n{a}\\n{b}\"))"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 3 1\\n3 1 2\") == \"2\"\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\") == \"5\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 3 1\\n3 1 2\") == \"2\\n\"\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\") == \"5\\n\""
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 1\\n0 10 20\\n0 10') == '4\\n'\nassert solution('6 1\\n0 10 20 26 40 50\\n0 40') == '9\\n'"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == '''\n'''"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 1\\n0 10 20\\n0 10\\n') == '4\\n'\nassert solution('6 1\\n0 10 20 26 40 50\\n0 40\\n') == '9\\n'"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:pass\""
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected, f\"Solution: {solution}, expected: {expected}\"\n"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"22\", \"Expected output: 22, got: {}\".format(solution())"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\\n\", \"Incorrect output\"\nprint(\"Correct output\")"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 1\\n0 10 20\\n0 10\\n') == '4\\n'\nassert solution('6 1\\n0 10 20 26 40 50\\n0 40\\n') == '9\\n'\nassert solution('10 1\\n0 10 20 26 40 50\\n0 40\\n') == '50\\n'\nassert solution('3 1\\n0 10 20 26 40 50\\n0 40\\n') == '4\\n'"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 4"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n0 10 20\\n0 10\\n\") == \"4\"\nassert solution(\"6 1\\n0 10 20 26 40 50\\n0 40\\n\") == \"9\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\") == \"equal\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\") == \"equal\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\n\\nshuffle([1,2,1,2])\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\"
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\") == \"equal\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\\n') == 'not equal\\n'\nassert solution('sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\\n') == 'equal\\n'"
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\") == \"equal\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\") == \"equal\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\") == \"not equal\\n\"\nassert solution(\"concat(sorted([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\") == \"equal\\n\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n\"concat(shuffle([1,2]),shuffle([1,2]))\\n\"\n\"shuffle([1,2,1,2])\\n\"\n) == \"not equal\\n\"\n\nassert solution(\n\"sorted(concat([3,2,1],[4,5,6]))\\n\"\n\"[1,2,3,4,5,6]\\n\"\n) == \"equal\\n\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\") == \"not equal\\n\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\") == \"equal\\n\"\n"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == \"Oh no\", \"The solution is incorrect.\"\nassert solution(sample_input_2) == \"1\", \"The solution is incorrect.\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 2\\n3 2\\n1 2 1 2\\n2 3 1 2') == 'Oh no'\nassert solution('1 3\\n3 2\\n1 2 1 2\\n2 3 1 2') == '1'\n"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"1 2\n3 2\n1 2 1 2\n2 3 1 2\"\"\") == \"Oh no\"\n\nassert solution(\"\"\"1 3\n3 2\n1 2 1 2\n2 3 1 2\"\"\") == \"1\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"Oh no\"\nassert solution(\"1 3\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"1\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"Oh no\"\nassert solution(\"1 3\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"1\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"Oh no\"\n\nassert solution(\"1 3\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"1\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {input()}, expected {expected_output}\"\n"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"Oh no\"\nassert solution(\"1 3\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"1\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n1 2\n3 2\n1 2 1 2\n2 3 1 2\n''') == 'Oh no'\n\nassert solution('''\n1 3\n3 2\n1 2 1 2\n2 3 1 2\n''') == '1'"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1 2\n3 2\n1 2 1 2\n2 3 1 2\n\"\"\") == \"Oh no\"\n\nassert solution(\"\"\"\n1 3\n3 2\n1 2 1 2\n2 3 1 2\n\"\"\") == \"1\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2') == '3\\n'\nassert solution('5 5\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1') == 'impossible\\n'"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\") == \"3\\n\"\nassert solution(\"5 5\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\") == \"impossible\\n\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 5\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\\n') == '3\\n'\nassert solution('4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\\n') == '3\\n'\nassert solution('4 5\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\\n') == 'impossible\\n'"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 'impossible'"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n4 4\n1 2 2\n2 3 1\n3 4 1\n4 1 2\n''') == '3'\nassert solution('''\n5 5\n1 2 1\n2 3 1\n2 4 1\n2 5 1\n4 5 1\n''') == 'impossible'"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input1) == \"3\\n\"\nassert solution(input2) == \"impossible\\n\"\n\nfrom typing import List\n"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\") == \"3\"\nassert solution(\"5 5\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\") == \"impossible\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\\n\") == \"3\"\nassert solution(\"5 5\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\\n\") == \"impossible\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(None) == \"impossible\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"4\\n\", \"Expected output: 4\\n\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Output mismatch for {input()}\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 1 1 1 3\") == \"2\"\nassert solution(\"1\\n22\") == \"4\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 1 1 1 3\\n\") == \"2\", \"The solution should return '2'.\"\nassert solution(\"1\\n22\\n\") == \"4\", \"The solution should return '4'.\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '2'\nassert solution(open('sample_input.txt', 'r')) == '4'\n\nfrom typing import List"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    5\n    2 1 1 1 3\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    1\n    22\n    \"\"\"\n) == \"4\"\n\nfrom typing import List"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 1 1 1 3\") == \"2\"\nassert solution(\"1\\n22\") == \"4\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('Sample Input 1') == '2\\n'\nassert solution('Sample Input 2') == '4\\n'"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 1 1 1 3\") == \"2\"\nassert solution(\"1\\n22\") == \"4\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, Got: {solution(stdin)}\"\n"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 1 5\\n\") == \"3\\n\", \"Sample Output 1\"\nassert solution(\"4\\n1 2 3 4\\n\") == \"2\\n\", \"Sample Output 2\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 3\nassert solution(4) == 2\nassert solution(3, 1, 5) == 3\nassert solution(4, 1, 2, 3, 4) == 2\nassert solution(1, 2, 3, 4) == 0\n"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 3\nassert solution(4) == 2"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 1 5\\n\") == 3\nassert solution(\"4\\n1 2 3 4\\n\") == 2"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"3\", \"Test failed\"\nprint(\"Test passed\")"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"3\", \"Test case 1\"\nassert solution(4) == \"2\", \"Test case 2\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    '''\n    3\n    3 1 5\n    '''\n) == '3\\n'\n\nassert solution(\n    '''\n    4\n    1 2 3 4\n    '''\n) == '2\\n'"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n3\n3 1 5\n''') == '3\\n'\nassert solution('''\n4\n1 2 3 4\n''') == '2\\n'"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\") == \"3\"\nassert solution(\"20\") == \"2\"\nassert solution(\"100\") == \"2\"\nassert solution(\"101\") == \"3\"\nassert solution(\"50\") == \"1\"\nassert solution(\"60\") == \"2\"\nassert solution(\"80\") == \"4\"\nassert solution(\"1000\") == \"2\"\nassert solution(\"1001\") == \"3\"\n"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1), \"Solution is incorrect\"\nassert solution(2), \"Solution is incorrect\"\nassert solution(3), \"Solution is incorrect\"\nassert solution(4), \"Solution is incorrect\"\nprint(solution(5))  # Should print 5"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\""
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"a+b-c\") == \"- +d-\"\nassert solution(\"a-b+d-c\") == \"a-b+d-\"\nassert solution(\"knuth-morris-pratt\") == \"<empty> <any>\"\nassert solution(\"\") == \"corrupted\"\nassert solution(\"abcdefg\") == \"<any> <empty> <any> <any> <any>\""
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"a+b-c\\na-b+d-c\") == \"- +d-\"\nassert solution(\"knuth-morris-pratt\\knuthmorrispratt\") == \"<any> <empty>\"\n\nfrom typing import List"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('a+b-c\\na-b+d-c') == '- - + -'\nassert solution('knuth-morris-pratt\\knuthmorrispratt') == '<empty> <any>'"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('a+b-c\\na-b+d-c') == '- +d-'\nassert solution('knuth-morris-pratt\\knuthmorrispratt') == '<any> <empty>'"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"a+b-c\\na-b+d-c\") == [\"- +d-\", \"<empty>\"]\nassert solution(\"knuth-morris-pratt\\knuthmorrispratt\") == [\"<any> <empty>\", \"def solution(stdin: str) -> str: pass\"]"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('a+b-c\\na-b+d-c') == ['- +d-', 'def']\n\nimport re"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('') == 'corrupted'\nassert solution('a+b-c') == '- +d-'\nassert solution('knuth-morris-pratt') == '<any> <empty>'\nassert solution('a+b-c\\nknuth-morris-pratt\\n') == '- +d- <empty> <any>'"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('a+b-c\\na-b+d-c') == '- +d-'\nassert solution('knuth-morris-pratt\\knuthmorrispratt') == '<any> <empty>'"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    a+b-c\n    a-b+d-c\n    \"\"\"\n) == [\"- +d-\", \"def\"]\n\nassert solution(\n    \"\"\"\n    knuth-morris-pratt\n    knuthmorrispratt\n    \"\"\"\n) == [\"<any> <empty>\", \"def\"]"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''1 1\n0\n7\nt 0\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6''') == '0\\n1\\n3\\n2\\n3\\n5\\n3\\n'\n\nassert solution('''3 0\n2 6 6\n10\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10''') == '11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10'"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\nassert solution(\"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\") == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\"\n"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == output, f\"Test failed for solution(stdin) with input {stdin} and output {output}\"\n"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\nassert solution(\"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\") == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\"\n"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n1 1\n0\n7\nt 0\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\n''') == '0\\n1\\n3\\n2\\n3\\n5\\n3\\n'\nassert solution('''\n3 0\n2 6 6\n10\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10\n''') == '11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n'"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\nassert solution(\"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\") == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {solution(input())}!= {expected_output}\"\n"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\nassert solution(sample_input2) == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\nassert solution(\"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\") == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\"\nassert solution(\"1 2 3\") == \"Invalid input format\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == solution(\"5 6\\n1 2 2\\n2 3 2\\n3 5 2\\n1 4 3\\n4 5 3\\n1 5 6\") # expected output"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_str) == expected_output, f\"Solution does not match the expected output.\\nInput: {input_str}\\nExpected output: {expected_output}\"\n"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1\n''') == '''\n2\n4 6\n'''\nassert solution('''\n5 6\n1 2 2\n2 3 2\n3 5 2\n1 4 3\n4 5 3\n1 5 6\n''') == '''\n0\n'''"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == \"2\\n4 6\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == [2, 4, 6]"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == ['2', '4 6']"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == \"2\\n4 6\"\nassert solution(\"5 6\\n1 2 2\\n2 3 2\\n3 5 2\\n1 4 3\\n4 5 3\\n1 5 6\") == \"0\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == \"2\\n4 6\\n\"\nassert solution(\"5 6\\n1 2 2\\n2 3 2\\n3 5 2\\n1 4 3\\n4 5 3\\n1 5 6\") == \"0\\n0\\n\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == 2\nassert solution(\"5 6\\n1 2 2\\n2 3 2\\n3 5 2\\n1 4 3\\n4 5 3\\n1 5 6\") == 0"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '2\\n4 6'\n"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n\\tpass\\n\\n'"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r').read()) == '''\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4\n5\n6\n1\n2\n3\n4"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == expected_output, f\"Expected Output: {expected_output}\\nActual Output: {solution(open('input.txt', 'r'))}\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_data) == expected_output, f\"Test case {index+1} failed\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"4\\n5\\n6\\n1\\n2\\n3\\n\"\nassert solution(2) == \"1\\n2\\n3\\n\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"12\\n1 1\\n1 2\\n1 3\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\") == \"4\\n5\\n6\\n1\\n2\\n3\\n\"\nassert solution(\"6\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n\") == \"1\\n2\\n3\\n\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"12\\n1 1\\n1 2\\n1 3\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\") == \"4\\n5\\n6\\n1\\n2\\n3\"\nassert solution(\"6\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\") == \"1\\n2\\n3\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == \"4\\n5\\n6\\n1\\n2\\n3\\n\"\nassert solution(open(\"sample_input.txt\", \"r\")) == \"1\\n2\\n3\\n\"\nassert solution(open(\"sample_input.txt\", \"r\")) == \"4\\n5\\n6\\n1\\n2\\n3\\n\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution( \"\"\"12\n1 1\n1 2\n1 3\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n\"\"\") == \"\"\"4\n5\n6\n1\n2\n3\n\"\"\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"CPCC\") == \"1\\n\", \"Sample Input 1\"\nassert solution(\"PPPPCCCC\") == \"8\\n\", \"Sample Input 2\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"CPCC\") == 1\nassert solution(\"PPPPCCCC\") == 8"
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"CPCC\") == \"1\", \"Input 1\"\nassert solution(\"PPPPCCCC\") == \"8\", \"Input 2\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"CPCC\") == 1\nassert solution(\"PPPPCCCC\") == 8"
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"CPCC\") == 1\nassert solution(\"PPPPCCCC\") == 8"
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"CPCC\") == 1\nassert solution(\"PPPPCCCC\") == 8"
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    'CPCC'\n) == 1\n\nassert solution(\n    'PPPPCCCC'\n) == 8"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2 1\\n1 2\\n2 3\\n2\\n3\\n\") == \"1 2 3\\n\"\nassert solution(\"3 2 1\\n1 3\\n2 3\\n3\\n\") == \"3\\n\"\nassert solution(\"3 2 1\\n1 2\\n2 3\\n4\\n\") == \"3\\n\""
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output() for input, output in zip(sample_input(), sample_output())"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2 1\\n1 2\\n2 3\\n2\\n\") == [\"1\", \"2\", \"3\"]\nassert solution(\"3 2 1\\n1 3\\n2 3\\n3\\n\") == [\"3\"]\nassert solution(\"3 2 1\\n1 2\\n2 3\\n4\\n\") == []\nassert solution(\"3 2 1\\n1 3\\n2 4\\n3\\n\") == [\"1\", \"2\", \"3\"]\nassert solution(\"3 2 1\\n1 2\\n2 3\\n3\\n\") == [\"1\", \"2\", \"3\"]\nassert solution(\"3 2 1\\n1 3\\n2 3\\n4\\n\") == [\"1\", \"2\", \"3\"]\nassert solution(\"3 2 1\\n1 2\\n2 3\\n1\\n\") == [\"1\", \"2\", \"3\"]\nassert solution(\"3 2 1\\n1 3\\n2 3\\n2\\n\") == [\"1\", \"2\", \"3\"]\nassert solution(\"3 2 1\\n1 2\\n2 3\\n3\\n\") == [\"1\", \"2\", \"3\"]\nassert solution(\"3 2 1\\n1 3\\n2 4\\n3\\n\") == [\"1\", \"2\", \"3\"]\nassert solution(\"3 2 1\\n1 2\\n2 3\\n3\\n\") == [\"1\", \"2\", \"3\"]\nassert solution(\"3 2 1\\n1 3\\n2 3\\n4\\n\") == [\"1\", \"2\", \"3\"]\nassert solution(\"3 2 1\\n1 2\\n2 3\\n1\\n\") == [\"1\", \"2\", \"3\"]\nassert solution(\"3 2 1\\n1 3\\n2 3\\n2\\n\") == [\"1\", \"2\", \"3\"]\nassert solution(\"3 2 1\\n1 2\\n2 3\\n3\\n\") == [\"1\", \"2\", \"3\"]\nassert solution(\"3 2 1\\n1 3\\n2 4\\n3\\n\") == [\"1\", \"2\", \"3\"]\nassert solution(\"3 2 1\\n1 2\\n2 3\\n3\\n\") == [\"1\", \"2\", \"3\"]\nassert solution(\"3 2 1\\n1 3\\n2 3\\n4\\n\") == [\"1\", \"2\", \"3\"]\nassert solution(\"3 2 1\\n1 2\\n2 3\\n1\\n\") == [\"1\", \"2\", \"3\"]\nassert solution(\"3 2 1\\n1 3\\n2 3\\n2\\n\") == [\"1\", \"2\", \"3\"]\nassert solution(\"3 2 1\\n1 2\\n2 3\\n3\\n\") == [\"1\", \"2\", \"3\"]\nassert solution(\"3 2 1\\n1 3\\n2 4\\n3\\n\") == [\"1\", \"2\", \"3\"]\nassert solution(\"3 2 1\\n1 2\\n2 3\\n1\\n\") == [\"1\", \"2\", \"3\"]\nassert solution(\"3 2 1\\n1 3\\n2 3\\n2\\n\") == [\"1\", \"2\", \"3\"]\nassert solution(\"3 2 1\\n1 2\\n2 3\\n3\\n\") == [\"1\", \"2\", \"3\"]\nassert solution(\"3 2 1\\n1 3\\n2 4\\n3\\n\") == [\"1\", \"2\", \"3\"]\nassert solution(\"3 2 1\\n1 2\\n2 3\\n1\\n\") == [\"1\", \"2\", \"3\"]\nassert solution(\"3 2 1\\n1 3\\n2 3\\n2\\n\") == [\"1\", \"2\", \"3\"]\nassert solution(\"3 2 1\\n1 2\\n2 3\\n3\\n\") == [\"1\", \"2\", \"3\"]\nassert solution(\"3 2 1\\n1 3\\n2 4\\n3\\n\") =="
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"sherlock_holmes.in\", \"r\")) == open(\"sherlock_holmes.out\", \"r\").read()\n"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == ['1 2 3']"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"sherlock_holmes.in\", \"r\")) == expected, \"Test failed\"\n"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\") == \"39\", \"Test case 1 failed\"\nassert solution(\"5 1\\n1 0 1 1 1\") == \"4\", \"Test case 2 failed\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\\n\") == \"39\"\nassert solution(\"5 1\\n1 0 1 1 1\\n\") == \"4\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\\n\") == \"39\"\nassert solution(\"5 1\\n1 0 1 1 1\\n\") == \"4\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''5 3\n2 4 2 3 4''') == '39'\nassert solution('''5 1\n1 0 1 1 1''') == '4'"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\") == \"39\\n\", \"Test case 1 failed\"\nassert solution(\"5 1\\n1 0 1 1 1\") == \"4\\n\", \"Test case 2 failed\"\n\nfrom typing import List"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"39\", \"Your implementation is incorrect. Please fix it and try again.\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"39\"\nassert solution() == \"4\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''5 3\n2 4 2 3 4''') == '39'\nassert solution('''5 1\n1 0 1 1 1''') == '4'"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\") == \"39\"\nassert solution(\"5 1\\n1 0 1 1 1\") == \"4\"\n"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\\n\") == \"39\"\nassert solution(\"5 1\\n1 0 1 1 1\\n\") == \"4\"\nassert solution(\"5 1\\n1 0 1 1 0\\n\") == \"1\"\nassert solution(\"3 1\\n2 2 3\\n\") == \"2\"\nassert solution(\"1000000007 0\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 "
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == 'def solution(stdin: str) -> str:\\n    pass\\n\\ndef solution2(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('sample_input_1.txt', 'r')) == '1 1 2\\n2 3 1\\n'\nassert solution(open('sample_input_2.txt', 'r')) == '1 1 2\\n2 4 3\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\nxx.\\nxxx\\n...\\n') == '1 1 2\\n2 3 1\\n'\nassert solution('4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx\\n') == '1 1 2\\n2 4 3\\ndef solution(stdin: str) -> str: \\n    pass'"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\nxx.\\nxxx\\n...\\n') == '1 1 2\\n2 3 1\\n'\n\nassert solution('4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx\\n') == '1 1 2\\n2 4 3\\ndef solution(stdin: str) -> str: pass'"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt')) == '''1 1 2\n2 3 1'''\n\nassert solution(open('input2.txt')) == '''1 1 2\n2 4 3\n"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output() for input, output in [\n    (input1, output1),\n    (input2, output2),\n]"
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == \"indistinguishable\"\nassert solution(sample_input2) == \"0\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\") == \"indistinguishable\\n\"\n\nsolution = \"\"\"\nfrom typing import List"
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 1 2\\n1 2 1\\n0 2 0\\n0 1 0') == 'indistinguishable'"
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\") == \"indistinguishable\"\nassert solution(\"2 0 1\\n1 1 1\\n0 0 0\") == \"0\"\n\nfrom typing import List"
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\") == \"indistinguishable\"\nassert solution(\"2 0 1\\n1 1 1\\n0 0 0\") == \"0\"\n"
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"indistinguishable\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"indistinguishable\"\n"
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\") == \"indistinguishable\\n\"\nassert solution(\"2 0 1\\n1 1 1\\n0 0 0\") == \"0\\n\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"indistinguishable\"\n"
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('0110\\n1001') == '1111\\n0111\\n1110\\n1111'\nassert solution('0\\n1') == '-1'"
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('0110\\n1001') == '1111\\n0111\\n1110\\n1111'\nassert solution('0\\n1') == '-1'\n"
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('0110') == '1111\\n0111\\n1110\\n1111', 'Sample Input 1'\nassert solution('0') == '1\\n0\\n1\\n0', 'Sample Input 2'\nassert solution('0111') == '1111\\n0111\\n1110\\n1111', 'Sample Input 2'"
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\") == \"-1\"\n"
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1111\\n0111\\n1110\\n1111\\n\"\n"
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Test failed: {solution(input())}!= {output()}\"\n"
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Incorrect output. Expected '{expected_output}', got '{solution(input())}'\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Solution({input()})!= {expected_output}\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10000\") == \"+0000\", \"10000\"\nassert solution(\"1111\") == \"+000-\", \"1111\"\n\nfrom typing import List\n"
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Solution is incorrect. Expected: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"The output '{solution(input())}' is not correct. It should be '{output}'.\"\n"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\") == \"9\"\nassert solution(\"2 1 1 1\\n2 2\\n1\\n1\\n1 2 1\") == \"2\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\\n\") == \"9\\n\"\nassert solution(\"2 1 1 1\\n2 2\\n1\\n1\\n1 2 1\\n\") == \"2\\n\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"output\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\\n\") == \"9\\n\"\n"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\") == \"9\"\n\nassert solution(\"2 1 1 1\\n2 2\\n1\\n1\\n1 2 1\") == \"2\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\") == 2, \"Test failed\"\nassert solution(\"3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\") == 7, \"Test failed\""
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\") == 2\nassert solution(\"3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\") == 7"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\") == 2\nassert solution(\"3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\") == 7"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\\n\") == 2\nassert solution(\"3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\\n\") == 7"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 2\nassert solution() == 7"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n3 3 1\n2 2\n1 1 R\n010\n000\n000\n''') == 2\n\nassert solution('''\n3 4 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301\n''') == 7"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000') == '2\\n'\nassert solution('3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301') == '7\\n'"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 2\nprint(\"Test Passed!\")"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000') == 2\nassert solution('3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301') == 7"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='5\\n2 2 1 2 3\\n8\\n1 2 4 1 1 2 5 1\\n') == '2\\n'"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 2 1 2 3\\n\") == \"2\\n\"\nassert solution(\"8\\n1 2 4 1 1 2 5 1\\n\") == \"4\\n\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == \"2\", \"Test case 1 should return 2\"\nassert solution(sample_input_2) == \"4\", \"Test case 2 should return 4\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Your solution is incorrect\"\n"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 1 2 3\") == \"2\"\nassert solution(\"8 1 2 4 1 1 2 5 1\") == \"4\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution( \"\"\"5\n2 2 1 2 3\"\"\") == \"\"\"2\n\"\"\"\n\nassert solution( \"\"\"8\n1 2 4 1 1 2 5 1\"\"\") == \"\"\"4\n\"\"\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 2 1 2 3\") == \"2\\n\"\nassert solution(\"8\\n1 2 4 1 1 2 5 1\") == \"4\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\\n\", \"Expected output: 2\\nActual output: {}\".format(solution())"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('D 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\n') == 'NE\\nNE\\nNE\\n'"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"NE\"\nassert solution(stdin) == \"NE\"\nassert solution(stdin) == \"NE\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"D 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\") == \"NE\\nNE\\nNE\"\nassert solution(\"D 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\") == \"3\\n1\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"D 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\n\") == \"NE\\nNE\\nNE\"\n\nassert solution(\"D 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\\n\") == \"3\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('D 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\n') == ['NE']\nassert solution('D 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\\n') == ['3', '1']"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"D 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\n\") == [\"NE\", \"NE\", \"NE\"]\nassert solution(\"D 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\\n\") == [\"3\", \"1\", \"def solution(stdin: str) -> str:\"]\nassert solution(\"D 3 2\\nD 2 3\\nP 1\\nP 2\\nP 3\\n\") == [\"1\", \"2\", \"3\"]\nassert solution(\"D 5 6\\nD 2 4\\nP 1\\nP 2\\nP 3\\n\") == [\"3\", \"2\", \"1\"]"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"NE\\nNE\\nNE\\n1\\n3\\n\"\nassert solution(input()) == \"1\\n3\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"D 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\n\") == \"NE\\nNE\\nNE\\n\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"NE\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"D 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\n\") == \"NE\\nNE\\nNE\\n\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == \"2\"\nassert solution(input2) == \"5\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n2 2 1 10\n0 0\n1 4\n3 2\n\"\"\") == \"2\\n\"\n\nassert solution(\"\"\"\n2 3 5 6\n1 1\n1 1 6\n1 2 2\n\"\"\") == \"5\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution_input) == solution_output, \"The given solution is incorrect.\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == '2'\nassert solution(sample_input_2) == '5'"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 1 10\\n0 0\\n1 4\\n3 2\") == 2\nassert solution(\"2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\") == 5\n"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 1 10\\n0 0\\n1 4\\n3 2\") == \"2\\n\"\nassert solution(\"2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\") == \"5\\n\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == '2'\nassert solution(sample_input_2) == '5'"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''2 2 1 10\n0 0\n1 4\n3 2''') == '2\\n'\n\nassert solution('''2 3 5 6\n1 1\n1 1 6\n1 2 2''') == '5\\n'\n\nassert solution('''4 4 1 10\n0 0\n1 4\n3 2''') == '2\\n'\n\nassert solution('''2 2 1 10\n0 0\n1 4\n3 2''') == '2\\n'\n\nassert solution('''2 3 5 6\n1 1\n1 1 6\n1 2 2''') == '5\\n'\n\nassert solution('''4 4 1 10\n0 0\n1 4\n3 2''') == '2\\n'"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2.0000000000\", \"The output is incorrect.\""
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\n# for t in range(1, 3):\\n#     if t == 1:\\n#         x, y, z = map(float, stdin.readline().split())\\n#     elif t == 2:\\n#         x, y, z = map(float, stdin.readline().split())\\n#         x, y, z = -x, -y, -z\\n#     elif t == 3:\\n#         x, y, z = map(float, stdin.readline().split())\\n#         x, y, z = x, -y, z\\n#     elif t == 4:\\n#         x, y, z = map(float, stdin.readline().split())\\n#         x, y, z = -x, y, -z\\n#     elif t == 5:\\n#         x, y, z = map(float, stdin.readline().split())\\n#         x, y, z = x, -y, -z\\n#         x, y, z = x, -y, z\\n#     else:\\n#         x, y, z = map(float, stdin.readline().split())\\n#         x, y, z = -x, y, z\\n#         x, y, z = y, x, z\\n#     print(solution(x, y, z))\\n\\n# Test case 1\\n# x, y, z = 1.0, 0.0, 1.4\\n# print(solution(x, y, z))\\n# Test case 2\\n# x, y, z = -1.0, 0.0, -1.4\\n# print(solution(x, y, z))\\n# Test case 3\\n# x, y, z = 0.0, 1.0, -0.2\\n# print(solution(x, y, z))\\n# Test case 4\\n# x, y, z = -0.4, -1.0, 0.0\\n# print(solution(x, y, z))\\n# Test case 5\\n# x, y, z = -1.2, 0.0, 0.9\\n# print(solution(x, y, z))\\n# Test case 6\\n# x, y, z = 0.2, 0.5, 0.5\\n# print(solution(x, y, z))'\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\n# for t in range(1, 6):\\n#     if t == 1:\\n#         x, y, z = map(float, stdin.readline().split())\\n#     elif t == 2:\\n#         x, y, z = map(float, stdin.readline().split())\\n#         x, y, z = -x, -y, -z\\n#     elif t == 3:\\n#         x, y, z = map(float, stdin.readline().split())\\n#         x, y, z = x, -y, z\\n#     elif t == 4:\\n#         x, y, z = map(float, stdin.readline().split())\\n#         x, y, z = -x, y, -z\\n#     elif t == 5:\\n#         x, y, z = map(float, stdin.readline().split())\\n#         x, y, z = x, -y, -z\\n#         x, y, z = x, -y, z\\n#     elif t == 6:\\n#         x, y, z = map(float, stdin.readline().split())\\n#         x, y, z = y, x, z\\n#     print(solution(x, y, z))\\n\\n# Test case 1\\n# x, y, z = 1.0, 0.0, 1.4\\n# print(solution(x, y, z))\\n# Test case 2\\n# x, y, z = -1.0, 0.0, -1.4\\n# print(solution(x, y, z))\\n# Test case 3\\n# x, y, z = 0"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\") == \"2.0000000000\"\nassert solution(\"5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5\") == \"2.0000000000\""
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution\nfrom typing import List"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\") == 2.0\nassert solution(\"5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5\") == 2.0\n\nimport math"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\\n\") == \"2.0000000000\\n\"\nassert solution(\"5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5\\n\") == \"2.0000000000\\n\""
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(solution(stdin)) == solution(stdin)"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"2.0000000000\"\nassert abs(solution - \"2.0000000000\") < 1e-4\n\nfrom typing import List"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\") == \"2.0000000000\"\nassert solution(\"5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5\") == \"2.0000000000\"\n"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2.0000000000\", \"Sample Output 2\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\\n\", \"Sample Input 1\"\nassert solution(\"1 100 10\") == \"9\\n19\\n\", \"Sample Input 2\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 9 5\\n1 100 10\") == \"1\\n9\\n19\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 9 5\\n1 100 10\") == \"1\\n9\\n19\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\"\nassert solution(\"1 100 10\") == \"9\\n19\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt').read()) == '19\\n'\nprint(solution(open('input.txt').read()))"
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\\n\", \"Test case 1 failed\"\nassert solution(\"1 100 10\") == \"9\\n19\\n\", \"Test case 2 failed\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Input: {input()}, Expected Output: {expected_output}\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\"\nassert solution(\"1 100 10\") == \"9\\n19\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input(\"Enter the values of A, B, and S: \")) == \"19\\n\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n1\\n1\") == \"1\\n1\\n\"\nassert solution(\"4 5\\n4 1 2 4 4\\n4 3 2 1\") == \"7\\n4 4 2 4 4 1 4\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '1\\n1\\n1'"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 1\\n1\\n1') == '1\\n1'\nassert solution('4 5\\n4 1 2 4 4\\n4 3 2 1') == '7\\n4 4 2 4 4 1 4'\n"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n1\\n1\\n\") == \"1\\n1\"\nassert solution(\"4 5\\n4 1 2 4 4\\n4 3 2 1\\n\") == \"7\\n4 4 2 4 4 1 4\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''1 1\n1\n1''') == '''1\n1 \n'''\n\nassert solution('''4 5\n4 1 2 4 4\n4 3 2 1''') == '''7\n4 4 2 4 4 1 4\n'''"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n1\\n1\\n\") == \"1\\n1 \"\nassert solution(\"4 5\\n4 1 2 4 4\\n4 3 2 1\\n\") == \"7\\n4 4 2 4 4 1 4\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 1\\n1\\n1\\n') == '1\\n1'\nassert solution('4 5\\n4 1 2 4 4\\n4 3 2 1\\n') == '7\\n4 4 2 4 4 1 4'"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test case {test_case} failed. Expected output: {output}, but got: {solution(input())}\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\\n1\\n1\\n\") == \"1\\n1\\n\"\nassert solution(\"4 5\\n4 1 2 4 4\\n4 3 2 1\\n\") == \"7\\n4 4 2 4 4 1 4\\n\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n1\\n1\\n\") == \"1\\n1 \\n\"\nassert solution(\"4 5\\n4 1 2 4 4\\n4 3 2 1\\n\") == \"7\\n4 4 2 4 4 1 4\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 10, \"Expected output 10, but got {}\".format(solution())\n"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"4\\n\"\nassert solution(stdin) == \"10\\n\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='2 10 3 2\\n') == '4\\n'\nassert solution(stdin='10 10 5 0\\n') == '10\\n'"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 10 3 2\") == \"4\\n\"\nassert solution(\"10 10 5 0\") == \"10\\n\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed for input {stdin}, expected output {expected_output}, but got {solution(stdin)}\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 10 3 2') == '4', 'Sample Input 1'\nassert solution('10 10 5 0') == '10', 'Sample Input 2'"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 10 3 2\") == \"4\\n\"\nassert solution(\"10 10 5 0\") == \"10\\n\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='2 10 3 2\\n') == '4\\n'\nassert solution(stdin='10 10 5 0\\n') == '10\\n'"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 10 3 2') == '4\\n', 'Test 1'\nassert solution('10 10 5 0') == '10\\n', 'Test 2'"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1 20\\n0123456789\") == \"10\"\nassert solution(\"6 100 9294\\n23689\") == \"111\"\n"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == expected1, f\"Test failed for example 1, got {solution(input1)}, expected {expected1}\"\nassert solution(input2) == expected2, f\"Test failed for example 2, got {solution(input2)}, expected {expected2}\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 1 20\\n0123456789') == '10\\n'\nassert solution('6 100 9294\\n23689') == '111\\n'"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"sample_input1.txt\").read()) == \"10\\n\"\nassert solution(open(\"sample_input2.txt\").read()) == \"111\\n\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1 20\\n0123456789\") == 10\nassert solution(\"6 100 9294\\n23689\") == 111"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input1) == output1, f\"Expected {output1}, got {solution(input1)}\"\nassert solution(input2) == output2, f\"Expected {output2}, got {solution(input2)}\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, \"0123456789\") == \"10\"\nassert solution(3, \"23689\") == \"111\"\n\nfrom typing import List\n"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '111'"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1 20\\n0123456789\\n\") == \"10\"\nassert solution(\"6 100 9294\\n23689\\n\") == \"111\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n\") == \"1.500000 2.666667\"\nassert solution(\"5 2\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n\") == \"1.500000 3.666667\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1.500000 2.666667\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected_result, f\"Solution does not match expected result. Output: {solution}, Expected Output: {expected_result}\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1') == '1.5 2.666667'\nassert solution('5 2\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1') == '1.5 3.666667'\nassert solution('5 1\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1') == '0 1.0'\nassert solution('5 2\\n1 R 5\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1') == '1.5 3.666667'\nassert solution('5 3\\n1 R 4\\n2 R 3\\n3 R 2\\n4 S 2\\n5 S 1') == '0 1.5'\n\nfrom typing import List\nimport math"
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Test case {test_case} failed. Expected: {expected}, Actual: {solution(stdin)}\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.500000 2.666667\"\nassert solution(\"5 2\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.500000 3.666667\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Solution does not match the expected output.\\nInput: {stdin}\\nExpected: {expected}\"\n"
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    5 3\n    1 R 4\n    2 R 2\n    3 R 2\n    4 S 2\n    5 S 1\n    \"\"\"\n) == \"1.500000 2.666667\\n\"\n\nassert solution(\n    \"\"\"\n    5 2\n    1 R 4\n    2 R 2\n    3 R 2\n    4 S 2\n    5 S 1\n    \"\"\"\n) == \"1.500000 3.666667\\n\""
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == \"3\\n\"\nassert solution(sample_input2) == \"3\\n\""
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 6\n101010\n111001\n101001\n\"\"\") == \"3\\n\"\n\nassert solution(\"\"\"\n4 5\n10010\n01010\n10101\n01001\n\"\"\") == \"-1\\n\""
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 6\\n101010\\n111001\\n101001\\n\") == \"3\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\\n\") == \"3\""
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input1) == output1, \"The solution for the first example is incorrect.\"\nassert solution(input2) == output2, \"The solution for the second example is incorrect.\"\n\ninput1 = \"\"\"\n3 6\n101010\n111001\n101001\n\"\"\"\noutput1 = \"3\"\n\ninput2 = \"\"\"\n4 5\n10010\n01010\n10101\n01001\n\"\"\"\noutput2 = \"3\""
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 6\\n101010\\n111001\\n101001\\n') == '3\\n'\nassert solution('4 5\\n10010\\n01010\\n10101\\n01001\\n') == '3\\n'"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 6\\n101010\\n111001\\n101001\") == 3\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\") == 3"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 6\\n101010\\n111001\\n101001\\n\") == \"3\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\\n\") == \"3\"\nassert solution(\"3 5\\n1111\\n1001\\n0011\\n0101\\n\") == \"-1\""
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 6\\n101010\\n111001\\n101001\") == \"3\\n\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\") == \"3\\n\"\nassert solution(\"4 7\\n10111\\n00101\\n11110\\n00001\\n00111\") == \"-1\\n\""
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 6\\n101010\\n111001\\n101001\") == \"3\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\") == \"3\"\nassert solution(\"5 5\\n00110\\n11101\\n00000\\n00000\") == \"-1\"\nassert solution(\"3 6\\n101010\\n111001\\n101001\\n101001\\n101001\") == \"3\"\nassert solution(\"3 6\\n101010\\n111001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n101001\\n10"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '''\n-3 -1\n3 1\n'''\n\nassert solution(stdin) == '''\n3 4\n3 -1\n'''"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '3 4\\n3 -1'\n"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\") == \"-3 -1\\n3 1\"\nassert solution(\"4\\n2 4\\n6 -1\\n3 5\\n-1 -1\") == \"3 4\\n3 -1\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0') == '-3 -1\\n3 1'\nassert solution('4\\n2 4\\n6 -1\\n3 5\\n-1 -1') == '3 4\\n3 -1'"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\\n') == '-3 -1\\n3 1\\n'\nassert solution('4\\n2 4\\n6 -1\\n3 5\\n-1 -1\\n') == '3 4\\n3 -1\\n'\nassert solution('5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\\n') == '-3 -1\\n3 1\\n'\nassert solution('4\\n2 4\\n6 -1\\n3 5\\n-1 -1\\n') == '3 4\\n3 -1\\n'\nassert solution('5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\\n') == '-3 -1\\n3 1\\n'\nassert solution('4\\n2 4\\n6 -1\\n3 5\\n-1 -1\\n') == '3 4\\n3 -1\\n'\nassert solution('5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\\n') == '-3 -1\\n3 1\\n'\nassert solution('4\\n2 4\\n6 -1\\n3 5\\n-1 -1\\n') == '3 4\\n3 -1\\n'\nassert solution('5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\\n') == '-3 -1\\n3 1\\n'\nassert solution('4\\n2 4\\n6 -1\\n3 5\\n-1 -1\\n') == '3 4\\n3 -1\\n'\nassert solution('5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\\n') == '-3 -1\\n3 1\\n'\nassert solution('4\\n2 4\\n6 -1\\n3 5\\n-1 -1\\n') == '3 4\\n3 -1\\n'\nassert solution('5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\\n') == '-3 -1\\n3 1\\n'\nassert solution('4\\n2 4\\n6 -1\\n3 5\\n-1 -1\\n') == '3 4\\n3 -1\\n'\nassert solution('5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\\n') == '-3 -1\\n3 1\\n'\nassert solution('4\\n2 4\\n6 -1\\n3 5\\n-1 -1\\n') == '3 4\\n3 -1\\n'\nassert solution('5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\\n') == '-3 -1\\n3 1\\n'\nassert solution('4\\n2 4\\n6 -1\\n3 5\\n-1 -1\\n') == '3 4\\n3 -1\\n'\nassert solution('5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\\n') == '-3 -1\\n3 1\\n'\nassert solution('4\\n2 4\\n6 -1\\n3 5\\n-1 -1\\n') == '3 4\\n3 -1\\n'\nassert solution('5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\\n') == '-3 -1\\n3 1\\n'\nassert solution('4\\n2 4\\n6 -1\\n3 5\\n-1 -1\\n') == '3 4\\n3 -1\\n'\nassert solution('5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\\n') == '-3 -1\\n3 1\\n'\n"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == '3 4\\n3 -1'"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    5\n    0 0\n    0 1\n    1 0\n    0 -1\n    -1 0\n    \"\"\"\n) == \"\"\"\n-3 -1\n3 1\n\"\"\"\n\nassert solution(\n    \"\"\"\n    4\n    2 4\n    6 -1\n    3 5\n    -1 -1\n    \"\"\"\n) == \"\"\"\n3 4\n3 -1\n\"\"\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(None) == \"Invalid input\"  # Test case 1\nassert solution(\"\") == \"Invalid input\"  # Test case 2\nassert solution(\"5\") == \"Invalid input\"  # Test case 3\nassert solution(\"3\") == \"Invalid input\"  # Test case 4\n\nstdin = \"\"\"\n5\n0 0\n0 1\n1 0\n0 -1\n-1 0\n\"\"\"\n\nstdin = '\\n'.join(stdin.splitlines()[:2]).strip()\nn, *swimmers = map(int, stdin.split())\n\nx, y = -10**18, -10**18\n\nfor i in range(n):\n    x, y = min(x, swimmers[i][0]), min(y, swimmers[i][1])\n\nprint(x, y)\n\nstdin = \"\"\"\n4\n2 4\n6 -1\n3 5\n-1 -1\n\"\"\"\n\nstdin = '\\n'.join(stdin.splitlines()[:2]).strip()\nn, *swimmers = map(int, stdin.split())\n\nx, y = -10**18, -10**18\n\nfor i in range(n):\n    x, y = min(x, swimmers[i][0]), min(y, swimmers[i][1])\n\nprint(x, y)"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\") == \"3 -1\\n3 1\\n\"\nassert solution(\"4\\n2 4\\n6 -1\\n3 5\\n-1 -1\") == \"3 4\\n3 -1\\n\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"\"\"-3 -1\n3 1\"\"\"\n\nassert solution() == \"\"\"3 4\n3 -1\"\"\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\") == \"2 5.086781\"\nassert solution(\"3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5\") == \"1 12.715255\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected_result, f\"The solution does not match the expected result. The given code is {solution} but the expected result is {expected_result}. Please check your code.\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == output, \"Solution doesn't match expected output\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\\n\") == \"2 5.086781\\n\"\nassert solution(\"3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5\\n\") == \"1 12.715255\\n\"\nassert solution(\"1000000000\\n500\\n1000\\n2000\\n\") == \"0 0\\n\"\nassert solution(\"1 1 2 3 4 5 6 7 8 9\\n\") == \"4 3.162277660168379\\n\"\nassert solution(\"1 1 2 3 4 5 6 7 8 9 0\\n\") == \"4 0.1622776601683797\\n\"\nassert solution(\"1 1 2 3 4 5 6 7 8 9 0 0\\n\") == \"4 0.1622776601683797\\n\"\nassert solution(\"1 1 2 3 4 5 6 7 8 9 0 0 0\\n\") == \"4 0.1622776601683797\\n\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n3 6 5 45 20\n0 0\n2 0\n1 1.5\n''') == '2 5.086781'\n\nassert solution('''\n3 0.25 2 45 20\n0 0\n2 0\n1 1.5\n''') == '1 12.715255'"
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"Sample Output 1: 2 5.086781\\n\"\nassert solution() == \"Sample Output 2: 1 12.715255\\n\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\\n\") == \"2 5.086781\\n\"\nassert solution(\"3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5\\n\") == \"1 12.715255\\n\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\") == \"2 5.086781\"\nassert solution(\"3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5\") == \"1 12.715255\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\") == \"2 5.086781\"\nassert solution(\"3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5\") == \"1 12.715255\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n    3 6 5 45 20\n    0 0\n    2 0\n    1 1.5\n\"\"\") == \"\"\"\n2 5.086781\n\"\"\"\n\nassert solution(\"\"\"\n    3 0.25 2 45 20\n    0 0\n    2 0\n    1 1.5\n\"\"\") == \"\"\"\n1 12.715255\n\"\"\""
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed. Expected output: {expected_output}, got: {solution(input())}\"\n"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6\\n0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n') == '8\\n', 'Sample Input 1'\nassert solution('4\\n5 1 7 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4\\n') == '1\\n', 'Sample Input 2'"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n6\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n''') == '8\\n'\n\nassert solution('''\n4\n5 1 7 1\n1 1 5 1\n4 0 4 4\n7 0 3 4\n''') == '1\\n'"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r'6\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1') == 8, \"Test case 1 failed\"\n\nassert solution(r'4\n5 1 7 1\n1 1 5 1\n4 0 4 4\n7 0 3 4') == 1, \"Test case 2 failed\""
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 8\nassert solution() == 1"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1') == 8, \"Expected 8, got {}\".format(solution('0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1'))\n\nassert solution('4\\n5 1 7 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4') == 1, \"Expected 1, got {}\".format(solution('4\\n5 1 7 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4'))"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n6\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n''') == '8\\n'\n\nassert solution('''\n4\n5 1 7 1\n1 1 5 1\n4 0 4 4\n7 0 3 4\n''') == '1\\n'"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 0 1 1\\n0 1 1 1\\n1 0 0 1\\n0 1 1 1\\n1 0 0 1\\n') == '8\\n'\nassert solution('1 0 1 1\\n0 1 1 1\\n1 0 0 1\\n0 1 1 1\\n1 0 0 1\\n5 1 7 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4\\n') == '1\\n'"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6\\n0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1') == 8\n\nassert solution('4\\n5 1 7 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4') == 1"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"8\\n\"\nassert solution() == \"1\\n\"\n"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(7) == \"4 3\"\nassert solution(10) == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(7) == \"4 3\"\nassert solution(10) == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == \"impossible\"\nassert solution(2) == \"impossible\"\nassert solution(3) == \"impossible\"\nassert solution(4) == \"impossible\"\nassert solution(5) == \"impossible\"\nassert solution(6) == \"impossible\"\nassert solution(7) == \"impossible\"\nassert solution(8) == \"impossible\"\nassert solution(9) == \"impossible\"\nassert solution(10) == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\n\") == \"4 3\\n\"\nassert solution(\"10\\n\") == \"impossible\\n\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"impossible\"\nassert solution(5) == \"impossible\"\nassert solution(9) == \"impossible\"\nassert solution(10) == \"4 3\"\nassert solution(12) == \"impossible\"\n\nfrom typing import List"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"impossible\"\n"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == \"impossible\"\nassert solution(7) == \"impossible\"\nassert solution(10) == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"impossible\"\nassert solution(10) == \"impossible\"\nassert solution(7) == \"impossible\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"16\"\nassert solution(input()) == \"109\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"109\"\n"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 16, \"Incorrect output 1\"\nassert solution() == 109, \"Incorrect output 2\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"109\", \"Your solution should return the last 9 digits of the required sum from the task.\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == expected_output\nprint(\"All tests passed!\")"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"16\"\n"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([2, 1, 3]) == '16'\nassert solution([4, 2, 4, 1, 4]) == '109'"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"16\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n3\\n4\\n2\\n4\\n1\\n4\") == \"109\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '16', \"The solution is incorrect. Expected: 16, but got: {}\".format(solution())"
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected_output, f\"Test case {tc} failed\"\nfor tc, (n, m) in enumerate(test_cases):\n    assert solution(n, m) == expected_output[tc], f\"Test case {tc} failed\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n5 1\\n1 2\\n1 2\\n1 2\\n\") == \"3\\n1 2 1\\n1 2 2\\n1 2 2\\n\"\nassert solution(\"4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n\") == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\\n\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\\n1 2 1\\n1 2 2\\n1 2 2\"\nassert solution() == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n5 1\\n1 2\\n1 2\\n1 2\") == [\"3\", \"1 2 1\", \"1 2 2\", \"1 2 2\"]\nassert solution(\"4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\") == [\"5\", \"1 3 1\", \"2 3 2\", \"4 1 0\"]"
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"This is a solution\"\n"
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n5 1\\n1 2\\n1 2\\n1 2\") == \"3\\n1 2 1\\n1 2 2\\n1 2 2\"\nassert solution(\"4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\") == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(str(input())) == str(input()), \"Please provide the solution as a string.\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\", \"Test case 1 failed\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n    2 3\n    5 1\n    1 2\n    1 2\n    1 2\n    ''') == '''\n3\n1 2 1\n1 2 2\n1 2 2\n'''"
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n5 1\\n1 2\\n1 2\\n1 2\\n\") == \"3\\n1 2 1\\n1 2 2\\n1 2 2\""
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"impossible\" # Change this line to implement the solution"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '1 2'\n"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(samples[0]) == '1 2'\nassert solution(samples[1]) == 'impossible'"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1 2\\n\", \"Expected Output: 1 2\\nGot: \" + solution()"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n6 7\\n0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1\") == \"1 2\\n\"\nassert solution(\"2 1\\n20 3\\n0 1 1\\n10 1 0\\n10 2 1\") == \"impossible\""
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    2 3\n    6 7\n    0 1 1\n    0 2 2\n    1 1 3\n    2 1 2\n    2 2 1\n    3 2 3\n    4 2 1\n    \"\"\"\n) == [1, 2]\n\nassert solution(\n    \"\"\"\n    2 1\n    20 3\n    0 1 1\n    10 1 0\n    10 2 1\n    \"\"\"\n) == \"impossible\""
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1 2\"\nassert solution() == \"impossible\""
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n6 7\\n0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1\") == \"1 2\\n\"\nassert solution(\"2 1\\n20 3\\n0 1 1\\n10 1 0\\n10 2 1\") == \"impossible\""
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''2 3\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1''') == '''1 2'''\n\nassert solution('''2 1\n20 3\n0 1 1\n10 1 0\n10 2 1''') == '''impossible'''\n\nassert solution('''2 3\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1''') == '''1 2'''\n\nassert solution('''2 1\n20 3\n0 1 1\n10 1 0\n10 2 1''') == '''impossible'''"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n6 7\\n0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1\") == [\"1 2\"]\nassert solution(\"2 1\\n20 3\\n0 1 1\\n10 1 0\\n10 2 1\") == [\"impossible\"]"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(10) == (5, 2)\nassert solution(2020) == (2020, 1)"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == \"5 2\"\nassert solution(2020) == \"2020 1\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(10) == 5, \"Input 1 failed\"\nassert solution(2020) == 2020, \"Input 2 failed\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\") == \"5 2\", \"Sample Input 1 failed\"\nassert solution(\"2020\") == \"2020 1\", \"Sample Input 2 failed\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(10) == 5 2\nassert solution(2020) == 2020 1"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10) == \"5 2\"\nassert solution(2020) == \"2020 1\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(10) == \"5 2\", \"Sample Input 1\"\nassert solution(2020) == \"2020 1\", \"Sample Input 2\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == \"5 2\"\nassert solution(2020) == \"2020 1\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(10) == (5, 2)\nassert solution(2020) == (2020, 1)"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(10) == \"5 2\"\nassert solution(2020) == \"2020 1\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\n') == 'impossible'\n\nassert solution('3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\n') == 'unique'\n\nassert solution('3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\n') == 'impossible'\n\nassert solution('3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\n') == 'unique'\n\nassert solution('3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\n') == 'ambiguous'"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('tests/test_input_1.txt', 'r')) == 'impossible'\nassert solution(open('tests/test_input_2.txt', 'r')) == 'unique'"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\nSample Output 1: impossible\\nSample Input 2:3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\nSample Output 2:unique\\ndef solution(stdin: str) -> str: # Write your code here\\n    pass\\n\\n# Test the function\\n# Test the function with input values\\n#...\\n# Test the function with input values again\\n#...\") == \"impossible\"\nassert solution(\"3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\nSample Output 2:unique\\ndef solution(stdin: str) -> str: # Write your code here\\n    pass\\n\\n# Test the function\\n# Test the function with input values\\n#...\\n# Test the function with input values again\\n#...\") == \"unique\"\nassert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\nSample Output 1: impossible\\nSample Input 2:3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\nSample Output 2:unique\\ndef solution(stdin: str) -> str: # Write your code here\\n    pass\\n\\n# Test the function\\n# Test the function with input values\\n#...\\n# Test the function with input values again\\n#...\") == \"ambiguous\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''3\n3\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\ncookies\nicecream''') == 'unique'\nassert solution('''3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream''') == 'ambiguous'\nassert solution('''3\n2\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\ncookies\nicecream''') == 'impossible'\nassert solution('''3\n2\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\ncookies\nicecream''') == 'impossible'\nassert solution('''3\n2\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\ncookies\nicecream''') == 'impossible'"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(solution) == \"impossible\"\nassert solution(solution2) == \"ambiguous\"\nassert solution(solution3) == \"unique\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3\\n0 chocolate 1 icecream 2 cookies\\n3\\nchocolate 3 cookies\\nicecream\") == \"impossible\"\nassert solution(\"3\\n4\\n0 chocolate 1 icecream 2 cookies\\n2 chocolate 3 cookies\") == \"unique\"\nassert solution(\"3\\n3\\n0 chocolate 1 icecream 2 cookies\\n0 chocolate 2 icecream 3 cookies\\n1 chocolate 1 icecream\\n2 cookies 1 icecream\\n\") == \"ambiguous\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"inputs/input1.txt\").read()) == \"impossible\"\nassert solution(open(\"inputs/input2.txt\").read()) == \"unique\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\n') == 'impossible'\nassert solution('3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\n') == 'unique'\nassert solution('3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\n') == 'impossible'\nassert solution('3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\n') == 'ambiguous'"
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 0 10\") == \"0\"\nassert solution(\"1 2 10\") == \"1\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test {test_case} failed. Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"0\", \"Incorrect output\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 0 10\") == \"0\\n\"\nassert solution(\"1 2 10\") == \"1\\n\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 0 10\") == \"0\"\nassert solution(\"1 2 10\") == \"1\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test failed: {solution(input())}!= {output}\"\n"
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 0 10\") == 0\nassert solution(\"1 2 10\") == 1"
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 0 10\") == \"0\"\nassert solution(\"1 2 10\") == \"1\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test {i+1} failed: expected {output}, got {solution(input())}\""
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"1 pan\\n\""
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == \"1 pan\"\nassert solution(sample_input_2) == \"3 zoom out\""
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('............................................................\\n............................................................\\n....XXXX....................................................\\n....XXXX..................................XXXX..............\\n....XXXX...................................XXX..............\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n............................................................\n............................................................\n....XXXX....................................................\n....XXXX..................................XXXX..............\n....XXXX...................................XXX..............\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"............................................................\\n\"\n                   \"............................................................\\n\"\n                   \"....XXXX....................................................\\n\"\n                   \"....XXXX..................................XXXX..............\\n\"\n                   \"....XXXX...................................XXX..............\\n\"\n                   \"............................................................\\n\"\n                   \"............................................................\\n\"\n                   \"............................................................\\n\"\n                   \"............................................................\\n\"\n                   \"............................................................\\n\"\n                   \"............................................................\\n\"\n                   \"............................................................\\n\"\n                   \"............................................................\\n\"\n                   \"............................................................\\n\"\n                   \"............................................................\\n\") == 1\n\nassert solution(\"............................................................\\n\"\n               \"............................................................\\n\"\n               \"...............................................XX...........\\n\"\n               \".....................................XXX......XXXX..........\\n\"\n               \"....................................XXXX........X...........\\n\"\n               \"........XXX....XXX....................X.....................\\n\"\n               \".........XXX...XX...........................................\\n\"\n               \"............................................................\\n\"\n               \"............XX..............................................\\n\"\n               \"...........XXX..............................................\\n\"\n               \"............................................................\\n\"\n               \"............................................XX..............\\n\"\n               \"...........................................XXXX.............\\n\"\n               \".............................................XX.............\\n\"\n               \"............................................................\") == 3"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('............................................................\\n'\n                     '............................................................\\n'\n                     '....XXXX....................................................\\n'\n                     '....XXXX..................................XXXX..............\\n'\n                     '....XXXX...................................XXX..............\\n'\n                     '............................................................\\n'\n                     '............................................................\\n'\n                     '............................................................\\n'\n                     '............................................................\\n'\n                     '............................................................\\n'\n                     '............................................................\\n'\n                     '............................................................\\n'\n                     '............................................................\\n'\n                     '............................................................\\n'\n                     '............................................................\\n'\n                     '............................................................\\n'\n                     '............................................................\\n'\n                     '............................................................\\n'\n                     '............................................................\\n'\n                     '............................................................\\n'\n                     '............................................................\\n') == 1, 'pan'\n\nassert solution('............................................................\\n'\n                     '............................................................\\n'\n                     '...............................................XX...........\\n'\n                     '.....................................XXX......XXXX..........\\n'\n                     '....................................XXXX........X...........\\n'\n                     '........XXX....XXX....................X.....................\\n'\n                     '.........XXX...XX...........................................\\n'\n                     '............................................................\\n'\n                     '............XX..............................................\\n'\n                     '...........XXX..............................................\\n'\n                     '............................................................\\n'\n                     '............................................XX..............\\n'\n                     '...........................................XXXX.............\\n'\n                     '.............................................XX.............\\n'\n                     '............................................................\\n'\n                     '............................................................\\n'\n                     '............................................................\\n'\n                     '............................................................\\n'\n                     '............................................................\\n'\n                     '............................................................\\n'\n                     '............................................................\\n'\n                     '............................................................\\n'\n                     '............................................................\\n'\n                     '............................................................\\n'\n                     '............................................................\\n'\n                     '............................................................\\n'\n                     '............................................................\\n'\n                     '............................................................\\n'\n                     '............................................................\\n'\n                     '............................................................\\n'\n                     '............................................................\\n'\n                     '............................................................\\n') == 3, 'zoom out'"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"....XXXX....................................................\\n\"\n    \"....XXXX..................................XXXX..............\\n\"\n    \"....XXXX...................................XXX..............\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"............................................................\\n\"\n    \"......................................................"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"............................................................\\n............................................................\\n....XXXX....................................................\\n....XXXX..................................XXXX..............\\n....XXXX...................................XXX..............\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 1\") == \"1 1\"\nassert solution(\"1 1\\n1 1\") == \"1 1\\n1 1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are      +\\n+ way better!      +\\n+ #oranges>apples  +\\n++++++++++++++++++++\\n check out our    \\n fresh apples!\\n\") == \" apples are great!\\n check out our     fresh apples!\\n\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are      +\\n+ way better!      +\\n+ #oranges>apples  +\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\n fresh apples!\\n\"\n\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n\"\n\nassert solution(\"10 20\\n+ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\n fresh apples!\\n') =='apples are great!\\n fresh apples!\\n'\nassert solution('7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n') =='   \\n    \\n    \\n    \\n    \\n'"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are +\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\n fresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"    \\n\"\nassert solution(\"5 10\\n
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are      +\\n+ way better!      +\\n+ #oranges>apples  +\\n++++++++++++++++++++\\n check out our\\n fresh apples!\\n\") == \"apples are great!\\n check out our\\n fresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n+++++++\\n+++++++\\n+++++++\\n\"\nassert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are      +\\n+ way better!      +\\n+ #oranges>apples  +\\n++++++++++++++++++++\\n check out our\\n fresh apples!\\n\") == \"apples are great!\\n check out our\\n fresh apples!\\n\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\n check out our\\nfresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"    \\n    \\n    \\n    \\n    \\n    \\n    \\n\"\nassert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\n check out our\\nfresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"    \\n    \\n    \\n    \\n    \\n    \\n    \\n    \\n\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are +\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our fresh apples!\\n\") == \" apples are great!\\n check out our fresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"  \\n  \\n  \\n  \\n  \\n\"\nassert solution(\"1 2\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n\") == \"\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('8 20\\n apples are great!\\n++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n') =='apples are great!\\n fresh apples!\\n', \"Input 1 failed.\"\nassert solution('7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n') == '+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 20\\n apples are great!\\n++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\n fresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \" = = = = =\\n+  =  +\\n+++++++\\n\"\n\nassert solution(\"8 20\\n apples are great!\\n++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\n fresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \" = = = = =\\n+  =  +\\n+++++++\\n\"\n\nassert solution(\"8 20\\n apples are great!\\n++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\n fresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \" = = = = =\\n+  =  +\\n+++++++\\n\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='HH\\n') == '2.0\\n'\nassert solution(stdin='H?\\n') == '1.5\\n'"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"HH\") == \"2.0\", \"Your solution is incorrect.\"\nassert solution(\"H?\") == \"1.5\", \"Your solution is incorrect.\"\n\nfrom typing import List"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('HH') == '2.0'\nassert solution('H?') == '1.5'"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == '2.0', \"Your solution should return '2.0', but it returns '{}'\".format(solution(sample_input_1))\nassert solution(sample_input_2) == '1.5', \"Your solution should return '1.5', but it returns '{}'\".format(solution(sample_input_2))\n\nfrom typing import List\nimport math"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('HH') == '2.0', 'The input is not correct'\nassert solution('H?') == '1.5', 'The input is not correct'\n\nfrom typing import List"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"HH\") == \"2.0\", \"Expected '2.0', got: \" + solution(\"HH\")\nassert solution(\"H?\") == \"1.5\", \"Expected '1.5', got: \" + solution(\"H?\")"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('HH') == '2.0'\nassert solution('H?') == '1.5'"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"HH\") == \"2.0\"\nassert solution(\"H?\") == \"1.5\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('HH') == '2.0', 'Your solution is incorrect.'\nassert solution('H?') == '1.5', 'Your solution is incorrect.'\n\nfrom typing import List"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"HH\") == 2.0, \"The answer is incorrect\"\nassert solution(\"H?\") == 1.5, \"The answer is incorrect\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\") == \"1\\n0001\\n0001\\n0011\\n1111\\n\", \"Expected output: '1\\n0001\\n0001\\n0011\\n1111\\n', but got: '{}'\".format(solution(\"4\\n0001\\n0001\\n0011\\n1110\")))"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0001\\n0001\\n0011\\n1110\") == \"1\\n0001\\n0001\\n0011\\n1111\\n\"\nassert solution(\"1111\\n1111\\n1111\\n1111\") == \"6\\n0011\\n0011\\n0111\\n1101\\n\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\") == \"1\\n0001\\n0001\\n0011\\n1111\"\nassert solution(\"4\\n1111\\n1111\\n1111\\n1111\") == \"6\\n0011\\n0011\\n0111\\n1101\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('test_input.txt', 'r').read()) == 'Sample Output 1\\n0001\\n0001\\n0011\\n1111'\nassert solution(open('test_input2.txt', 'r').read()) == 'Sample Output 2\\n0011\\n0011\\n0111\\n1101'"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\") == \"1\\n0001\\n0001\\n0011\\n1111\"\nassert solution(\"4\\n1111\\n1111\\n1111\\n1111\") == \"6\\n0011\\n0011\\n0111\\n1101\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\") == \"1\\n0001\\n0001\\n0011\\n1111\"\nassert solution(\"4\\n1111\\n1111\\n1111\\n1111\") == \"6\\n0011\\n0011\\n0111\\n1101\"\n"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\") == \"1\\n0001\\n0001\\n0011\\n1111\"\nassert solution(\"4\\n1111\\n1111\\n1111\\n1111\") == \"6\\n0011\\n0011\\n0111\\n1101\"\n"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\") == 0, \"No Input\"\nassert solution(\"h 1 4 1\\n\") == 0, \"No Input\"\nassert solution(\"v 2 4 2\\n\") == 0, \"No Input\"\nassert solution(\"h 10 2 2\\n\") == 0, \"No Input\"\nassert solution(\"v 11 2 3\\n\") == 0, \"No Input\"\nassert solution(\"h 1 10 1\\n\") == 1, \"No Input\"\nassert solution(\"h 5 10 2\\n\") == 2, \"No Input\"\nassert solution(\"v 1 10 1\\n\") == 4, \"No Input\"\nassert solution(\"v 5 10 3\\n\") == 5, \"No Input\"\n\nfrom typing import List"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected_output, f\"Solution: {solution}, Expected Output: {expected_output}\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == \"2\", \"Sample Input 1: 4\\nh 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\"\nassert solution(sample_input_2) == \"4\", \"Sample Input 2: 4\\nh 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\"2\n\"\"\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\\n\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"h 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\") == \"2\"\nassert solution(\"h 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\") == \"4\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"4\nh 1 4 1\nv 2 4 2\nh 10 2 2\nv 11 2 3\"\"\") == \"2\\n\"\nassert solution(\"\"\"4\nh 1 10 1\nh 5 10 2\nv 1 10 1\nv 5 10 3\"\"\") == \"4\\n\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('h 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3') == 2\nassert solution('h 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3') == 4"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\nh 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\\n\") == \"2\\n\"\nassert solution(\"4\\nh 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\\n\") == \"4\\n\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == \"2\\n\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == expected_output1, f\"Test 1 failed: {solution(sample_input1)}!= {expected_output1}\"\nassert solution(sample_input2) == expected_output2, f\"Test 2 failed: {solution(sample_input2)}!= {expected_output2}\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\") == \"2\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\") == \"4\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\\n\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\\n') == '2\\n'\nassert solution('3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\\n') == '4\\n'"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, got {solution(input())}.\"\n"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\") == \"2\\n\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\") == \"4\\n\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\") == \"2\\n\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\") == \"4\\n\"\nassert solution(\"1 1 2 1 2\\n3 4 5 6 7\\n8 9 10 11 12\\n13 14 15 16 17\\n18 19 20 21 22\") == \"2\\n\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n16 16\\n17 17\\n18 18\\n19 19\\n20 20\") == \"-1\\n\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n16 16\\n17 17\\n18 18\\n19 19\\n20 20\\n21 21\\n22 22\\n23 23\\n24 24\\n25 25\\n26 26\\n27 27\\n28 28\\n29 29\\n30 30\\n31 31\\n32 32\\n33 33\\n34 34\\n35 35\\n36 36\\n37 37\\n38 38\\n39 39\\n40 40\\n41 41\\n42 42\\n43 43\\n44 44\\n45 45\\n46 46\\n47 47\\n48 48\\n49 49\\n50 50\\n51 51\\n52 52\\n53 53\\n54 54\\n55 55\\n56 56\\n57 57\\n58 58\\n59 59\\n60 60\\n61 61\\n62 62\\n63 63\\n64 64\\n65 65\\n66 66\\n67 67\\n68 68\\n69 69\\n70 70\\n71 71\\n72 72\\n73 73\\n74 74\\n75 75\\n76 76\\n77 77\\n78 78\\n79 79\\n80 80\\n81 81\\n82 82\\n83 83\\n84 84\\n85 85\\n86 86\\n87 87\\n88 88\\n89 89\\n90 90\\n91 91\\n92 92\\n93 93\\n94 94\\n95 95\\n96 96\\n97 97\\n98 98\\n99 99\\n100 100\\n101 101\\n102 102\\n103 103"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '2'\nassert solution() == '4'"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\\n\") == \"2\\n\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\\n\") == \"4\\n\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 2 3 3 4 2\\n\") == \"2\"\n\nassert solution(\"8\\n1 2 1 3 1 3 1 2\\n\") == \"4\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n1 2 3 3 4 2\\n\") == \"2\\n\"\nassert solution(\"8\\n1 2 1 3 1 3 1 2\\n\") == \"4\\n\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n3\\n3\\n4\\n2\") == 2\nassert solution(\"1\\n2\\n3\\n3\\n4\\n2\\n\") == 2\nassert solution(\"1\\n2\\n3\\n3\\n4\\n2\\n5\") == 5\nassert solution(\"1\\n2\\n3\\n3\\n4\\n2\\n5\\n\") == 5"
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    '6\\n1 2 3 3 4 2\\n'\n) == \"2\\n\"\n\nassert solution(\n    '8\\n1 2 1 3 1 3 1 2\\n'\n) == \"4\\n\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"Solution 1\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"Solution 2\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\\n\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"Output the length of the longest sub-array so that each element in the sub-array appears exactly twice.\\n\", \"Test Failed\"\nassert solution(stdin) == \"2\\n\", \"Test Failed\"\nassert solution(stdin) == \"4\\n\", \"Test Failed\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n1 2 3 3 4 2\") == 2\nassert solution(\"8\\n1 2 1 3 1 3 1 2\") == 4"
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'output.txt', \"Please provide the correct solution.\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed for {stdin}\"\nprint(\"Test passed\")"
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"4\\n0\\n\"\nassert solution(open(\"sample_input_1.txt\", \"r\")) == \"4\\n0\\n\"\nassert solution(open(\"sample_input_2.txt\", \"r\")) == \"4\\n2\\n\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == \"4\\n0\\n\"\nassert solution(stdin=input()) == \"4\\n2\\n\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\") == \"4\\n0\\n\"\nassert solution(\"2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\") == \"4\\n2\\n\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Solution {solution(input())} is incorrect. Expected {expected}, received {solution(input())}\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\\n') == '4\\n0\\n'\nassert solution('2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\\n') == '4\\n2\\n'"
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"4\\n0\"\nassert solution() == \"4\\n2\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '0\\n4\\n2\\n'\n"
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Test case {index} failed. Expected: {expected}, got: {solution(stdin)}\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Solution does not match expected output: {solution(stdin)}!= {expected}\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"impossible\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\\n\") == \"1\"\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\\n\") == \"impossible\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\") == 1\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\") == \"impossible\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\") == \"1\"\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\") == \"impossible\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input1) == output1, f\"Error 1: {solution(input1)}!= {output1}\"\nassert solution(input2) == output2, f\"Error 2: {solution(input2)}!= {output2}\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2') == 1\nassert solution('4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2') == 'impossible'"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\\n\") == \"1\\n\"\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\\n\") == \"impossible\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1\\n\", \"Output should be 1\\n\"\n"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == '35\\n18\\n3\\n\\n8\\n2\\n1\\n'\nassert solution(input2) == '8\\n2\\n1\\n'"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"35\\n18\\n3\\n\", \"Your code is incorrect!\"\n"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\\n\") == \"35\\n18\\n3\\n\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test case failed.\" for input, output in zip(input_data, expected_output)"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for solution({input()})\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == solution_1(10, 4, 1, [1, 1, 2, 1], [0, 9], [2, 6], [7, 7])"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, \"Test failed. Expected output: {}\\nGot output: {}\".format(output, solution(input()))\n"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7') == '35\\n18\\n3\\n\\n8\\n2\\n1'"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\") == \"35\\n18\\n3\\n\\n8\\n2\\n1\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '35\\n18\\n3\\n8\\n2\\n1\\n'"
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"\"\"0\n1\n3\n6\n\"\"\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Output: {output()}, Expected: {output()}\"\n"
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1\\n2\\n3\\n4\\n\") == \"0\\n1\\n3\\n6\\n\"\nassert solution(\"5\\n3\\n2\\n4\\n1\\n5\\n\") == \"0\\n1\\n2\\n4\\n6\\n\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4) == \"0\\n1\\n3\\n6\"\nassert solution(5) == \"0\\n1\\n2\\n4\\n6\"\n\nfrom typing import List\n\nclass TreeNode:\n    def __init__(self, val=0, left=None, right=None):\n        self.val = val\n        self.left = left\n        self.right = right"
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == expected_output, f\"Expected output: {expected_output}\\nGot: {solution(open('input.txt', 'r'))}\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == output_1, f\"Expected {output_1}, but got {solution(sample_input_1)}\"\nassert solution(sample_input_2) == output_2, f\"Expected {output_2}, but got {solution(sample_input_2)}\"\n\nsample_input_1 = \"4\\n1\\n2\\n3\\n4\"\nsample_input_2 = \"5\\n3\\n2\\n4\\n1\\n5\"\noutput_1 = \"0\\n1\\n3\\n6\"\noutput_2 = \"0\\n1\\n2\\n4\\n6\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1\\n2\\n3\\n4\\n\") == \"0\\n1\\n3\\n6\\n\", \"Sample Input 1\"\nassert solution(\"5\\n3\\n2\\n4\\n1\\n5\\n\") == \"0\\n1\\n2\\n4\\n6\\n\", \"Sample Input 2\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '''\n0\n1\n3\n6\n'''"
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\\n\") == \"2 4 1 3\"\nassert solution(\"4\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\\n\") == \"4 3 1 2\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3') == '2 4 1 3'\nassert solution('0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1') == '4 3 1 2'\n"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\") == \"2 4 1 3\\n\"\nassert solution(\"4\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\") == \"4 3 1 2\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"The solution for the given input is: {solution(input())}\"\n"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r').read()) == '2 4 1 3\\n4 3 1 2'"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\") == \"2 4 1 3\"\nassert solution(\"4\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\") == \"4 3 1 2\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\") == [\"2 4 1 3\", \"4 3 1 2\"]\nassert solution(\"4\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\") == [\"4 3 1 2\"]"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '2 4 1 3'"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin: str) == \"4 3 1 2\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\", \"The solution should output 'Theta wins'.\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\", \"The solution should output 'Theta wins'.\"\n\nsolution = \"\"\"def solution(stdin: str) -> str:\n    # Sample Input 1\n    deck = \"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\"\n\n    # Sample Output 1\n    if deck == \"123456789T246897253T5982347T76Q9487T543Q9725K49\":\n        return \"Theta wins\"\n\n    # Sample Input 2\n    deck = \"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\"\n\n    # Sample Output 2\n    if deck == \"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\":\n        return \"Theta wins\"\n\n    return \"Theta loses\"\n\"\"\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\", \"Input 1 is incorrect.\"\n\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\", \"Input 2 is incorrect.\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\"\n\nfrom typing import List"
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\", \"Expected 'Theta wins', but got: \" + solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\")\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\", \"Expected 'Theta wins', but got: \" + solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\")"
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\"\nassert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5123456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49123456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49123456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5123456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5123456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5123456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5123456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5123456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5123456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5123456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5123456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5123456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5123456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5123456"
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Theta wins\", \"Test case 1 failed\"\n\nassert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\", \"Test case 2 failed\"\n\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\", \"Test case 3 failed\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == 'Theta wins'\nassert solution('89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49') == 'Theta wins'"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input) == expected, f\"Test failed for input {input} and expected output {expected}\"\nfor i in range(1, 10):\n    print(f\"Test {i}:\")\n    solution(input) == expected, f\"Test failed for input {input}\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\n\nsample_input_1 = \"\"\"1 2\n1 charlatan 1\n1 not charlatan 1\"\"\"\nsample_output_1 = \"charlatan\\n\"\n\nsample_input_2 = \"\"\"2 1\n1 and fabulist 1 fabulist 2\"\"\"\nsample_output_2 = \"fabulist\\ntruther\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n1 2\n1 charlatan 1\n1 not charlatan 1\n''') == ['charlatan']\n\nassert solution('''\n2 1\n1 and fabulist 1 fabulist 2\n''') == ['fabulist', 'truther']"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 2\\n1 charlatan 1\\n1 not charlatan 1\\n') == ['charlatan']\nassert solution('2 1\\n1 and fabulist 1 fabulist 2\\n') == ['fabulist']\nassert solution('2 1\\n1 and truther 2 charlatan\\n1 xor truther charlatan\\n') == ['truther', 'charlatan']\nassert solution('2 3\\n1 and truther 2 charlatan\\n1 xor truther charlatan\\n1 xor not truther charlatan\\n') == ['truther', 'charlatan']"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n1 charlatan 1\\n1 not charlatan 1\\n\") == \"charlatan\\n\"\nassert solution(\"2 1\\n1 and fabulist 1 fabulist 2\\n\") == \"fabulist\\ntruther\\ndef solution(stdin: str) -> str: pass\"\n"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r').read()) == ['charlatan']\n"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n1 charlatan 1\\n1 not charlatan 1\") == \"charlatan\\n\"\nassert solution(\"2 1\\n1 and fabulist 1 fabulist 2\") == \"fabulist\\ntruther\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n1 charlatan 1\\n1 not charlatan 1\\n\") == \"charlatan\\n\"\nassert solution(\"2 1\\n1 and fabulist 1 fabulist 2\\n\") == \"fabulist\\ntruther\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 2\\n1 charlatan 1\\n1 not charlatan 1\\n') == 'charlatan\\n'\nassert solution('2 1\\n1 and fabulist 1 fabulist 2\\n') == 'fabulist\\ntruther\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\\n\") == \"4\\n\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\\n\") == \"4\"\nassert solution(\"3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\\n\") == \"3\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output() for input, output in zip(sample_input, sample_output)"
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\\n\") == \"4\"\nassert solution(\"3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\\n\") == \"3\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed: expected '{expected_output}', got '{solution(stdin)}'\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Test failed: expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == output, f\"Your solution is incorrect. Please see the examples in the problem statement.\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == \"4\", \"Incorrect output\"\nassert solution(sample_input2) == \"3\", \"Incorrect output\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\\n\") == \"4\\n\"\nassert solution(\"3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\\n\") == \"3\\n\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5.00 3.00 4.00 6.00 7.00\") == \"4\", \"John's game works\"\n\nassert solution(\"1 1.00 1.00 0.00\") == \"3\", \"John's game works\"\n\nassert solution(\"1 2.00 -1.00 3.00\") == \"3\", \"John's game works\"\n\nassert solution(\"1 3.00 0.00 0.00\") == \"2\", \"John's game works\"\n\nassert solution(\"1 4.00 0.00 0.00\") == \"2\", \"John's game works\"\n\nassert solution(\"1 0.00 1.00 1.00\") == \"3\", \"John's game works\"\n\nassert solution(\"1 0.00 1.00 0.00\") == \"3\", \"John's game works\"\n\nassert solution(\"1 0.00 0.00 0.00\") == \"3\", \"John's game works\""
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8\\nSample Input 1:\\n2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8\\nSample Output 1:\\n16\\n\\nSample Input 2:\\n2 3 1\\nX..\\n.?.\\n10 1000 1\\nSample Output 2:\\n10\\n\") == 16, \"The output should be 16, but it is \" + str(solution(\"2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8\\nSample Input 1:\\n2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8\\nSample Output 1:\\n16\\n\\nSample Input 2:\\n2 3 1\\nX..\\n.?.\\n10 1000 1\\nSample Output 2:\\n10\\n\"))"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution( \"\"\"\n2 5 2\nR..?.\n.X...\n100 100 7 100 8\n\"\"\") == \"16\"\n\nassert solution( \"\"\"\n2 3 1\nX..\n.?.\n10 1000 1\n\"\"\") == \"10\"\n\nfrom typing import List"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 5 2\\nR..?\\n.X...\\n100 100 7 100 8') == '16\\n'\nassert solution('2 3 1\\nX..\\n.?.\\n10 1000 1') == '10\\n'"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2\n\nfrom typing import List"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 5 2\\nR..?\\n.X...\\n100 100 7 100 8') == '16'\nassert solution('2 3 1\\nX..\\n.?.\\n10 1000 1') == '10'"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8\") == \"16\"\nassert solution(\"2 3 1\\nX..\\n.?.\\n10 1000 1\") == \"10\""
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == output, \"Your solution is incorrect.\"\n"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"16\"\nassert solution(open(\"input_2.txt\", \"r\").read()) == \"10\""
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8\\n\") == \"16\"\nassert solution(\"2 3 1\\nX..\\n.?.\\n10 1000 1\\n\") == \"10\""
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '16', 'Your solution is incorrect'"
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Error: {input()}!= {output}\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3\\n0 4 4\\n1 5 1\\n2 6 1') == '1.414\\n'\nassert solution('6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10') == '5.657\\n'"
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n0 4 4\\n1 5 1\\n2 6 1\") == \"1.414\"\nassert solution(\"6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\") == \"5.657\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"3 3\\n0 4 4\\n1 5 1\\n2 6 1\") == \"1.414\"\nassert solution(stdin=\"6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\") == \"5.657\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"3 3\\n0 4 4\\n1 5 1\\n2 6 1\\n\") == \"1.414\"\nassert solution(stdin=\"6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\\n\") == \"5.657\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n0 4 4\\n1 5 1\\n2 6 1\") == \"1.414\"\nassert solution(\"6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\") == \"5.657\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n0 4 4\\n1 5 1\\n2 6 1\\n\") == \"1.414\"\nassert solution(\"6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\\n\") == \"5.657\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n0 4 4\\n1 5 1\\n2 6 1\\n\") == \"1.414\\n\"\nassert solution(\"6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\\n\") == \"5.657\\n\"\n\nfrom collections import Counter"
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n0 4 4\\n1 5 1\\n2 6 1\") == \"1.414\\n\"\nassert solution(\"6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\") == \"5.657\\n\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n0 4 4\\n1 5 1\\n2 6 1\") == \"1.4140000000000001\"\nassert solution(\"6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\") == \"5.6570000000000003\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 1 1 1 1\") == 1.0\nassert solution(\"3 1 1 1\") == 0.433"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 1 1 1 1\\n3 1 1 1') == '1.0\\n0.433'"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 1.0, \"The solution is incorrect\"\nprint(0)"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '1.0', 'Output is incorrect'\n"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 1.0, \"Output: 1.0\"\n"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == \"1.0\"\nassert solution(sample_input2) == \"0.433\"\n\nfrom typing import List"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"4 1 1 1 1\") == \"1.0\\n\"\nassert solution(stdin=\"3 1 1 1\") == \"0.433\\n\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1.0\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '1.0\\n'  # correct\n\nimport math"
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\\n\", \"The solution should return '5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\\n'.\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\") == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\"\n\nassert solution(\"8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15\") == \"36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"barica should travel\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\") == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\"\nassert solution(\"8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15\") == \"36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"The sequence of plants Barica should travel to achieve her goal.\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\"
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    6 5\n    1 1 5\n    2 1 5\n    1 2 4\n    2 3 5\n    3 2 30\n    3 3 5\n    8 10\n    1 1 15\n    2 2 30\n    1 2 8\n    2 1 7\n    3 2 8\n    2 3 7\n    4 2 100\n    3 3 15\n    ''') == '''\n    5\n    4\n    1 1\n    2 1\n    2 3\n    3 3\n    36\n    5\n    1 1\n    1 2\n    2 2\n    3 2\n    3 3\n'''\n"
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_data) == output_data, f\"Test cases: {input_data}, expected output: {output_data}\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\") == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\\n\") == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\\n\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\\n') == '5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\\n'"
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Input {input()} does not match expected output {output()}\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(' arrange \\n2 1\\n2 1\\n1 2\\n') == '1'\nassert solution(' arrange \\n3 2\\n2 1 3\\n1 3\\n2 3\\n') == '3'"
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Sample Input 1\") == \"1\\n\", \"The solution should be 1\\n\"\nassert solution(\"Sample Input 2\") == \"3\\n\", \"The solution should be 3\\n\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"output\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('Input:\\n2 1\\n2 1\\n1 2\\n\\nOutput:\\n1\\n\\nInput:\\n3 2\\n2 1 3\\n1 3\\n2 3\\n\\nOutput:\\n3\\n\\nInput:\\n3 2\\n1 3\\n3 2\\n\\nOutput:\\n2\\n\\nInput:\\n5 3\\n1 2 3 4 5\\n1 2 4 3 5\\n2 3 4 5 1\\n2 3 5 1 4\\n3 4 5 1 2\\n3 4 2 5 1\\n4 5 1 2 3\\n4 5 3 2 1\\n\\nOutput:\\n2') == 'Output:\\n1\\n\\n'\nassert solution('Input:\\n2 1\\n1 2\\n2 1\\n\\nOutput:\\n1\\n\\nInput:\\n3 2\\n1 3\\n3 2\\n\\nOutput:\\n3\\n\\nInput:\\n3 2\\n1 3\\n3 2\\n\\nOutput:\\n2\\n\\nInput:\\n5 3\\n1 2 3 4 5\\n1 2 4 3 5\\n2 3 4 5 1\\n2 3 5 1 4\\n3 4 5 1 2\\n3 4 2 5 1\\n4 5 1 2 3\\n4 5 3 2 1\\n\\nOutput:\\n2') == 'Output:\\n1\\n\\n'"
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\\n\") == \"1\\n\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"3\\n\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\" arrange 2 1\\n2 1\\n1 2\\n arrange 3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"1\"\nassert solution(\" arrange 2 1\\n2 1\\n1 2\\n arrange 3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"3\"\nassert solution(\" arrange 2 1\\n2 1\\n1 2\\n arrange 3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"2\""
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('test_input.txt', 'r')) == 5, \"Your code is incorrect!\"\nprint(\"Test Passed!\")"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5') == -1\nassert solution('6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6') == 5"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\") == -1, \"Test case 1 failed.\"\nassert solution(\"6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\") == 5, \"Test case 2 failed.\""
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('Peter\\'s favorite season is winter. Caught up in the festivities, Peter would like to decorate his city.\n\nThe city has many areas for things like ice skating, skiing, and snowball fights. There are roads connecting some pairs of areas. Peter would like to put a special decoration along each of these roads. There are three types of decorations of costs $0$, $1$, and $2$, respectively.\n\nPeter would like his decoration to meet some properties:\n - For any pair of distinct roads adjacent to an area, let $a$ and $b$ be the costs of decorations along those roads. It must hold that $(a+b) \\bmod 3 \\neq 1$.\n - The sum of costs along any cycle must be an odd number.\n\nA cycle is a sequence of areas connected by roads that form a loop. Each area may appear exactly once in the loop.\n\nPeter would like to know: What is the cheapest amount he can pay to decorate his city the way he wants?') == -1, \"Output should be -1\"\n\nsolution('Peter\\'s favorite season is winter. Caught up in the festivities, Peter would like to decorate his city.\n\nThe city has many areas for things like ice skating, skiing, and snowball fights. There are roads connecting some pairs of areas. Peter would like to put a special decoration along each of these roads. There are three types of decorations of costs $0$, $1$, and $2$, respectively.\n\nPeter would like his decoration to meet some properties:\n - For any pair of distinct roads adjacent to an area, let $a$ and $b$ be the costs of decorations along those roads. It must hold that $(a+b) \\bmod 3 \\neq 1$.\n - The sum of costs along any cycle must be an odd number.\n\nA cycle is a sequence of areas connected by roads that form a loop. Each area may appear exactly once in the loop.\n\nPeter would like to know: What is the cheapest amount he can pay to decorate his city the way he wants?')"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\").read()) == \"5\\n\"\n"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {i+1} failed: expected {expected_output}, got {solution(stdin)}\" for i, (stdin, expected_output) in enumerate(tests)"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\") == -1\n\nassert solution(\"6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\") == 5"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\") == -1\nassert solution(\"6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\") == 5"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"Output\"\nassert solution(open(\"input2.txt\", \"r\")) == \"-1\""
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == -1"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 9.0, \"Test case 2 failed\"\nassert solution() == 4.0, \"Test case 1 failed\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([4, 1, 5, 1, 5, 5, 4, 2]) == 4.0, \"Expected 4.0, got {}\".format(solution([4, 1, 5, 1, 5, 5, 4, 2]))\nassert solution([6, 3, -8, -8, 0, -1, 8, -8, 1, 0, 0, -1]) == 9.0, \"Expected 9.0, got {}\".format(solution([6, 3, -8, -8, 0, -1, 8, -8, 1, 0, 0, -1]))"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n4 1\n1 1\n5 1\n5 5\n4 2\n''') == '4.00'\nassert solution('''\n6 3\n-8 -8\n0 -1\n8 -8\n1 0\n0 10\n-1 0\n''') == '9.00'"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 1\\n1 1\\n5 1\\n5 5\\n4 2\\n\") == 4.00\nassert solution(\"6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\\n\") == 9.00"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 1\\n1 1\\n5 1\\n5 5\\n4 2\") == \"4.00\"\nassert solution(\"6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\") == \"9.00\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == expected, f\"Solution {solution} is not correct. Expected: {expected}\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, \"Incorrect output. Expected: {}, Got: {}.\".format(output, solution(input()))"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 1\\n1 1\\n5 1\\n5 5\\n4 2\") == \"4.00\\n\", \"Your solution is incorrect. Please check your code.\"\nassert solution(\"6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\") == \"9.00\\n\", \"Your solution is incorrect. Please check your code.\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, \"Input and output do not match\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    4 1\n    1 1\n    5 1\n    5 5\n    4 2\n    \"\"\"\n) == 4.0\n\nassert solution(\n    \"\"\"\n    6 3\n    -8 -8\n    0 -1\n    8 -8\n    1 0\n    0 10\n    -1 0\n    \"\"\"\n) == 9.0"
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\"\nassert solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n\") == \"3 1 1\\n1 3 1\\n1 1 1\"\n"
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n\"\nassert solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n\") == \"3 1 1\\n1 3 1\\n1 1 1\\n\"\n"
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\"\n"
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\"\nassert solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n\") == \"3 1 1\\n1 3 1\\n1 1 1\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n\"\nassert solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n\") == \"3 1 1\\n1 3 1\\n1 1 1\\n\"\nassert solution(\"5\\n\") == \"Error: Invalid command.\"\n"
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('sample_input.txt', 'r')) == solution(open('sample_input.txt', 'r'))\n"
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n') == '2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n'\nassert solution('3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n') == '3 1 1\\n1 3 1\\n1 1 1\\n'\n"
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n') == '2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n'"
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n') == '2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n'\nassert solution('3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n') == '3 1 1\\n1 3 1\\n1 1 1\\n'\n"
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n\"\nassert solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n\") == \"3 1 1\\n1 3 1\\n1 1 1\\n\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '1 4 2 3\\n'\nassert solution(input()) == '-1\\n'"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Output: {solution(input())}, Expected Output: {expected_output}\"\n"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == \"1\"\nassert solution(2) == \"2\"\nassert solution(3) == \"3\"\nassert solution(4) == \"1 2\"\nassert solution(5) == \"1 2 3\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\") == [\"1\", \"4\", \"2\", \"3\"]\nassert solution(\"5 1\") == [-1]"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\") == \"1 4 2 3\"\nassert solution(\"5 1\") == \"-1\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 3\\n5 1\\n') == '1 4 2 3\\n'\nassert solution('5 1\\n') == '-1\\n'\n"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin: str) == expected_output, f\"Test case {i+1} failed\"\n"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1 4 2 3\", \"Output should be 1 4 2 3, but got {}\".format(solution(stdin))"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\", \"Test failed\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n4 2\\n2 1\\n1 3\") == \"1\\n\"\nassert solution(\"4\\n5 0\\n2 6\\n8 6\\n5 7\") == \"0\\n\"\n"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n4 2\\n2 1\\n1 3') == 1\n\nassert solution('4\\n5 0\\n2 6\\n8 6\\n5 7') == 0"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\\n\"  # Test case 1\nassert solution(stdin) == \"0\\n\"  # Test case 2\n"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n4 2\\n2 1\\n1 3') == '1\\n'\nassert solution('4\\n5 0\\n2 6\\n8 6\\n5 7') == '0\\n'"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 1\\n1 3\\n\") == \"1\\n\"\nassert solution(\"4\\n5 0\\n2 6\\n8 6\\n5 7\\n\") == \"0\\n\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n4 2\\n2 1\\n1 3\") == 1"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n4 2\\n2 1\\n1 3\\n\") == \"1\\n\"\nassert solution(\"4\\n5 0\\n2 6\\n8 6\\n5 7\\n\") == \"0\\n\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\") == \"4 140\\n\", \"Incorrect output for example 1\"\n\nassert solution(\"2 1 0 1\\n0 1 1000 100\") == \"1000 100000\\n\", \"Incorrect output for example 2\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\") == \"4 140\"\nassert solution(\"2 1 0 1\\n0 1 1000 100\") == \"1000 100000\"\n"
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\\n\") == \"4 140\\n\"\nassert solution(\"2 1 0 1\\n0 1 1000 100\\n\") == \"1000 100000\\n\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\") == \"4 140\\n\"\nassert solution(\"2 1 0 1\\n0 1 1000 100\") == \"1000 100000\\n\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10') == '4 140'\nassert solution('2 1 0 1\\n0 1 1000 100') == '1000 100000'"
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\") == \"4 140\"\nassert solution(\"2 1 0 1\\n0 1 1000 100\") == \"1000 100000\"\n\nfrom typing import List"
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''4 4 0 3\n0 1 4 10\n1 2 2 10\n0 2 4 30\n2 3 4 10''') == '4 140\\n'\n\nassert solution('''2 1 0 1\n0 1 1000 100''') == '1000 100000\\n'"
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\") == \"4 140\\n\"\nassert solution(\"2 1 0 1\\n0 1 1000 100\") == \"1000 100000\\n\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\\n') == '4 140\\n'\nassert solution('2 1 0 1\\n0 1 1000 100\\n') == '1000 100000\\n'"
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20\\n\") == \"3\"\nassert solution(\"8 2\\n8 3\\n5 7\\n\") == \"impossible\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3\\n\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20\") == \"3\"\nassert solution(\"8 2\\n8 3\\n5 7\") == \"impossible\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20') == '3\\nimpossible\\n'\n\nassert solution('8 2\\n8 3\\n5 7') == 'impossible\\n'"
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([100, 7, 1, 50, 50, 70, 70, 90, 90, 40, 20, 60, 60, 80, 80, 20]) == 3\nassert solution([8, 2, 8, 3, 5, 7]) == \"impossible\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test case failed: {input()}!= {output}\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20\") == 3\nassert solution(\"8 2\\n8 3\\n5 7\") == \"impossible\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(120) == 5, \"Sample Input 1: 120\"\nassert solution(51090942171709440000) == 21, \"Sample Input 2: 51090942171709440000\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"120\") == \"5\"\nassert solution(\"51090942171709440000\") == \"21\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(120) == 5, \"Test 1 failed\"\nassert solution(51090942171709440000) == 21, \"Test 2 failed\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"120\") == \"5\", \"Test 1 failed\"\nassert solution(\"51090942171709440000\") == \"21\", \"Test 2 failed\"\n"
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(120) == 5\nassert solution(51090942171709440000) == 21"
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(120) == 5, \"Test case 1 failed\"\nassert solution(51090942171709440000) == 21, \"Test case 2 failed\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(120) == 5\nassert solution(51090942171709440000) == 21"
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"120\") == \"5\", \"Error: Incorrect output for sample input 1\"\nassert solution(\"51090942171709440000\") == \"21\", \"Error: Incorrect output for sample input 2\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(120) == 5, \"Output: 5, Expected: 5\"\nassert solution(51090942171709440000) == 21, \"Output: 21, Expected: 21\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 1 2\\n3 3 3\\n\") == 45, \"Error 1\"\nassert solution(\"10 1 1\\n5 5 5\\n\") == 10, \"Error 2\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 45, \"The code is not correct.\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Sample Input #1 and Output #1 are not matching.\"\nassert solution(input()) == output(), \"Sample Input #2 and Output #2 are not matching.\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\nfor i in range(len(tests)):\n    input(), output = tests[i]\n    assert solution(input()) == output()"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 1 2\") == 45\nassert solution(\"3 3 3\") == 10"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 1 2\") == \"45\"\nassert solution(\"3 3 3\") == \"10\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 1 2\") == 45\nassert solution(\"3 3 3\") == 10"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"45\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed for input: {input()}, expected output: {expected_output}\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n\") == \"18\\n\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n\") == \"20\\n\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n\") == \"impossible\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n10\\n\") == \"18\\n\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n\") == \"20\\n\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n\") == \"impossible\\n\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n10\\n10\\n\") == \"impossible\\n\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n10\\n5\\n10\\n\") == \"impossible\\n\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n10\\n\") == \"impossible\\n\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    5\n    3 1\n    4 1\n    5 9\n    2 6\n    5 3\n    5\n''') == '''\n    20\n'''"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n') == '20'\nassert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n') == 'impossible'\nassert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n10\\n') == '18'"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n5''') == '20\\n'"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n\") == \"18\\n\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n\") == \"20\\n\"\n"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n5\n3 1\n4 1\n5 9\n2 6\n5 3\n5\n\"\"\") == \"impossible\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r'5\n3 1\n4 1\n5 9\n2 6\n5 3\n5') == '20'\n\nassert solution(r'5\n3 1\n4 1\n5 9\n2 6\n5 3\n3') == 'impossible'\n\nassert solution(r'5\n3 1\n4 1\n5 9\n2 6\n5 3\n10') == '18'"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n10\") == \"18\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\") == \"20\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('100000') == '3\\n'\nassert solution('1') == '3\\n'\nassert solution('1 5 10 7 8 2') == '3\\n'\nassert solution('5 -1 1 5 5 5 10 10 10') == '11\\n'"
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\\n11\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n1 5 10\\n7 8 2\\n') == '3\\n'\nassert solution('3\\n-1 -1 -1\\n5 5 5\\n10 10 10\\n') == '11\\n'"
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 5 10\\n7 8 2\") == \"3\\n\"\nassert solution(\"3\\n-1 -1 -1\\n5 5 5\\n10 10 10\") == \"11\\n\"\n"
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"11\\n\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3\\n\", \"Incorrect output\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n2\n1 5 10\n7 8 2\n''') == '3'\nassert solution('''\n3\n-1 -1 -1\n5 5 5\n10 10 10\n''') == '11'"
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=None) == \"\"\"11\"\"\"\nassert solution(stdin=open('input.txt', 'r')) == \"\"\"11\"\"\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 5 10\\n7 8 2\\n3\\n-1 -1 -1\\n5 5 5\\n10 10 10\") == \"3\\n\", \"The correct answer is: 3\"\nassert solution(\"3\\n-1 -1 -1\\n5 5 5\\n10 10 10\") == \"11\\n\", \"The correct answer is: 11\"\nassert solution(\"1\\n0 0 0\\n0 0 0\\n0\") == \"0\\n\", \"The correct answer is: 0\"\nassert solution(\"100\\n0 0 0\\n0 0 0\\n0\") == \"100\\n\", \"The correct answer is: 100\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == \"3\\n\"\nassert solution(sample_input2) == \"11\\n\"\n\nfrom typing import List\nimport math"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n110\\n011\") == \"2\"\nassert solution(\"4 2\\n1000\\n1000\\n0000\\n0010\") == \"0\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n110\\n011\") == \"2\\n\"\nassert solution(\"4 2\\n1000\\n1000\\n0000\\n0010\") == \"0\\n\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test case {case} failed: {solution(input())}!= {output}\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"0\"\n"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\n110\\n011\\n\") == \"2\"\nassert solution(\"4 2\\n1000\\n1000\\n0000\\n0010\\n\") == \"0\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, but got {solution(input())}\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\n110\\n011\") == \"2\"\nassert solution(\"4 2\\n1000\\n1000\\n0000\\n0010\") == \"0\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution_input) == solution_output, f\"Your solution is incorrect. Please check your code and the input.\"\n\nfrom typing import List"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 2\nassert solution() == 0"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"0\\n\"  # All wirings are consistent with all photographs"
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n\") == \"1\"\nassert solution(\"3\\n1 3 2\\n2\\n\") == \"5\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\"
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n\") == \"1\\n\"\nassert solution(\"3\\n1 3 2\\n2\\n\") == \"5\\n\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n1 3 2\\n2\\n\") == \"1\\n\"\nassert solution(\"3\\n1 3 2\\n2\\n\") == \"5\\n\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '1\\n'\nassert solution(stdin) == '5\\n'"
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1\", \"Your solution is incorrect.\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\\n\", \"The output should be '1'.\"\n"
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"3\\n1 2 3\\n3\\n1 3 2\\n2\\n\") == \"1\\n\"\nassert solution(stdin=\"3\\n1 3 2\\n2\\n\") == \"5\\n\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Crash\"\nprint(0)\n\nimport sys"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abc\") == \"abc\"\nassert solution(\"defg\") == \"defg\"\nassert solution(\"hijkl\") == \"hijkl\"\nassert solution(\"nopqrstuvwxyz\") == \"nopqrstuvwxyz\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == 'crashing line found'"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input().split()) == '0', 'Solution should return 0'\n"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abc\") == \"abc\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 100 20') == '0'\nassert solution('10 10 1') == '19'"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 0\n\nimport sys"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 0\n\nfor _ in range(int(input())):\n    time1 = time.time()\n    solution(input())\n    time2 = time.time()\n    if time2 - time1 > 50:\n        break\n\nprint(time2 - time1)"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 0, \"Expected 0, but got {}\".format(solution())  # Correct"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"1 100 20\") == \"0\"\nassert solution(stdin=\"10 10 1\") == \"19\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\na b c d\\na 1\\nimport d, b, c\\nb 2\\nimport d\\nimport c\\nc 1\\nimport c\\nd 0\\n\") == \"c\\n\"\nassert solution(\"5\\nclassa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\\n\") == \"SHIP IT\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input(\"Enter the number of files: \")) == \"SHIP IT\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"4\\na b c d\\na 1\\nimport d, b, c\\nb 2\\nimport d\\nimport c\\nc 1\\nimport c\\nd 0\\n\") == \"c\"\nassert solution(stdin=\"5\\nclassa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\\n\") == \"SHIP IT\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'SHIP IT'"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"a b c d\\na 1\\nimport d, b, c\\nb 2\\nimport d\\nimport c\\nc 1\\nimport c\\nd 0\") == \"c\"\nassert solution(\"classa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\") == \"SHIP IT\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input())}\"\n"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\na b c d\\na 1\\nimport d, b, c\\nb 2\\nimport d\\nimport c\\nc 1\\nimport c\\nd 0\") == \"c\"\nassert solution(\"5\\nclassa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\") == \"SHIP IT\"\n"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('a b c d') == 'c'\nassert solution('a 1\\nimport d, b, c\\nb 2\\nimport d\\nimport c\\nc 1\\nimport c\\nd 0') == 'c'\nassert solution('classa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0') == 'SHIP IT'\n"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'SHIP IT'"
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test failed with input: {stdin}, expected output: {expected_output}\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5+3+x') == '1\\n', 'Invalid input 1'\nassert solution('9 10') == '1\\n', 'Invalid input 2'"
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5+3+x\\n9 10') == '1\\n'\nassert solution('20+3+x\\n0 5') == '2\\n'\n"
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5+3+x\\n9 10\") == \"1\\n\"\nassert solution(\"20+3+x\\n0 5\") == \"2\\n\"\nassert solution(\"5+3-x\\n9 10\") == \"3\\n\"\nassert solution(\"20+3-x\\n0 5\") == \"5\\n\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5+3+x\\n9 10\") == \"1\"\nassert solution(\"20+3+x\\n0 5\") == \"2\"\nassert solution(\"5+3+x\\n9 10\") == \"1\"\nassert solution(\"20+3+x\\n0 5\") == \"2\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 1, \"Please provide the correct answer for the given input.\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5+3+x\\n9 10\") == \"1\\n\"\nassert solution(\"20+3+x\\n0 5\") == \"2\\n\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5+3+x') == '1\\n', \"Invalid expression\"\nassert solution('20+3+x') == '2\\n', \"Invalid expression\"\nassert solution('x+3*x+4*((5+3*2)-(2*x-4*x))') == '1\\n', \"Invalid expression\"\nassert solution('x+3*x') == '0\\n', \"Invalid expression\"\nassert solution('x+4*x') == '0\\n', \"Invalid expression\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5+3+x\\n9 10\") == \"1\"\nassert solution(\"20+3+x\\n0 5\") == \"2\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5+3+x\\n9 10\") == \"1\"\nassert solution(\"20+3+x\\n0 5\") == \"2\"\nassert solution(\"5+3+x\\n5+5\") == \"Invalid input: The expression contains an invalid operator.\"\nassert solution(\"x+3*x\\nx\") == \"Invalid input: The expression contains an invalid operator.\"\nassert solution(\"2*x+x\\nx\") == \"Invalid input: The expression contains an invalid operator.\"\nassert solution(\"x*2+x*3\") == \"Invalid input: The expression contains an invalid operator.\"\n"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 10\\n0 15\\n5 20\") == \"yes\"\nassert solution(\"2 10\\n1 15\\n0 20\") == \"no\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"yes\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 10\\n0 15\\n5 20\\n\") == \"yes\"\nassert solution(\"2 10\\n1 15\\n0 20\\n\") == \"no\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 10\\n0 15\\n5 20\") == \"yes\\n\"\nassert solution(\"2 10\\n1 15\\n0 20\") == \"no\\n\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"yes\" or solution(input()) == \"no\"\n"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 10\\n0 15\\n5 20\") == \"yes\"\nassert solution(\"2 10\\n1 15\\n0 20\") == \"no\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 10\\n0 15\\n5 20\") == \"yes\\n\"\nassert solution(\"2 10\\n1 15\\n0 20\") == \"no\\n\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"yes\" # expected output: \"yes\"\nassert solution() == \"no\" # expected output: \"no\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 10\\n0 15\\n5 20\") == \"yes\"\nassert solution(\"2 10\\n1 15\\n0 20\") == \"no\"\n"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0.25\", \"Incorrect solution\""
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green\") == 0.25\nassert solution(\"4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red\") == 0.0\n"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected_output, f\"The solution function is incorrect. Expected: {expected_output}, Received: {solution}\""
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green\\n') == '0.25\\n'"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_1) == expected_output_1\nassert solution(input_2) == expected_output_2"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green\\n') == '0.25\\n'\nassert solution('4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red\\n') == '0\\n'"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == output\n"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green\") == \"0.25\"\nassert solution(\"4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red\") == \"0\""
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green\\n') == '0.25'\nassert solution('4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red\\n') == '0'"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green') == '0.25\\n'\nassert solution('4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red') == '0\\n'"
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n') == '3'\nassert solution('6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n') == 'inf'\n"
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"3\\n\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"inf\\ndef solution(stdin: str) -> str: pass\\n\"\nassert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n\") == \"inf\\ndef solution(stdin: str) -> str: pass\\n\"\nassert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n\\n\") == \"inf\\ndef solution(stdin: str) -> str: pass\\n\"\nassert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n\\n\\n\") == \"inf\\ndef solution(stdin: str) -> str: pass\\n\"\nassert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n\\n\\n\\n\") == \"inf\\ndef solution(stdin: str) -> str: pass\\n\"\nassert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n\\n\\n\\n\\n\\n\") == \"inf\\ndef solution(stdin: str) -> str: pass\\n\"\nassert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('sample_input.txt').read()) == '3'"
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '3', \"Incorrect output\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3\", \"Expected output: 3\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"3\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n4 3\") == \"inf\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"Solution for {stdin} is incorrect. Expected output: {expected_output}, got {solution(stdin)}\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == 3\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n4 2\") == \"inf\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"day16/sample_input1.txt\", \"r\")) == \"3\"\nassert solution(open(\"day16/sample_input2.txt\", \"r\")) == \"inf\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == \"__main__\":\\n    solution(input())'\nassert isinstance(solution, str)\n"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\") == \"4\\n\"\nassert solution(\"12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\\n\") == \"2\\n\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\") == 4\nassert solution(\"12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\\n\") == 2"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 2, \"The solution is incorrect.\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"4\"\nassert solution() == \"2\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"4\\n\", \"The output is incorrect.\\n\"\nassert solution() == \"2\\n\", \"The output is incorrect.\\n\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\nSample Output 1: 4\\n\\nSample Input 2: 12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\\nSample Output 2: 2\\n\") == \"4\\n\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\") == \"4\"\nassert solution(\"12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\\n\") == \"2\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\nSample Output 1: 4\\n\") == \"4\\n\"\nassert solution(\"12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\\nSample Output 2: 2\\n\") == \"2\\n\""
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\nhoose\\nhose\\nnose\\nnoises\\nnoise\") == \"hoose\\noises\\noise\"\nassert solution(\"4\\nhose\\nhoose\\oose\\moose\") == \"hoose\\moose\"\nassert solution(\"10\\nhoose\\nhose\\nnose\\nnoises\\nnoise\") == \"hoose\\noises\\noise\""
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([\n    'hoose',\n    'hose',\n    'nose',\n    'noises',\n    'noise'\n]) == ['hoose', 'noises', 'noise']\n\nassert solution([\n    'hoose',\n    'hose',\n    'nose',\n    'noises',\n    'noise',\n    'noise'\n]) == ['hoose', 'noises', 'noise']\n\nassert solution([\n    'hose',\n    'hoose',\n    'nose',\n    'noises',\n    'noise',\n    'noise'\n]) == ['hose', 'noises', 'noise']\n\nassert solution([\n    'hoose',\n    'hose',\n    'nose',\n    'noises',\n    'noise',\n    'no',\n    'noise'\n]) == ['hoose', 'noises', 'noise']\n\nassert solution([\n    'hose',\n    'hoose',\n    'nose',\n    'noises',\n    'noise',\n    'noise',\n    'noise'\n]) == []"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\nhoose\\nhose\\nnose\\nnoises\\nnoise\\n\") == \"hoose\\nnoises\\nnoise\\n\", \"Test 1 failed\"\nassert solution(\"4\\nhose\\nhoose\\oose\\nSample Output 2\\nhoose\\nmoose\\ndef solution(stdin: str) -> str:\\n    pass\") == \"hoose\\nmoose\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test 2 failed\""
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == sample_output1, \"sample_output1\"\nassert solution(sample_input2) == sample_output2, \"sample_output2\"\n\nfrom typing import List"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'hoose\\nnoises\\nnoise'"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'hoose\\nnoises\\nnoise\\n', \"Incorrect output\""
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2\n\nsample_input_1 = \"\"\"\n5\nhoose\nhose\nnose\nnoises\nnoise\n\"\"\"\n\nsample_input_2 = \"\"\"\n4\nhose\nhoose\noose\nmoose\n\"\"\"\n\nexpected_output_1 = \"\"\"\nhoose\nnoises\nnoise\n\"\"\"\n\nexpected_output_2 = \"\"\"\nhoose\nmoose\n"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\nhoose\\n\\n\\n\\n\\n\\n\") == \"hoose\\nnoises\\nnoise\\n\", \"Test 1 failed.\"\nassert solution(\"4\\n\\nhose\\n\\n\\nmoose\\n\") == \"hoose\\nmoose\\ndef solution(stdin: str) -> str: pass\\n\", \"Test 2 failed.\""
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\nhoose\\nhose\\nnose\\nnoises\\nnoise\\n\") == \"hoose\\nnoises\\nnoise\\n\"\nassert solution(\"4\\nhose\\nhoose\\oose\\moose\\n\") == \"hoose\\moose\\n\""
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"5\\nhoose\\nhose\\nose\\noises\\noise\\n\"\n) == \"hoose\\noises\\noise\\n\"\n\nassert solution(\n    \"4\\nhose\\nhoose\\oose\\moose\\n\"\n) == \"hoose\\moose\\n\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n3\\n\") == \"2\\n2\\n5\\n\"\nassert solution(\"2 3\\n4\\n\") == \"0\\n16\\n8\\n\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n3\\nSample Output 1:\\n2\\n2\\n5\\n\") == \"2\\n2\\n5\\n\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n3\\nSample Input 1: 1 1\\n3\\nSample Output 1: 2\\n2\\nSample Input 2: 2 3\\n4\\nSample Output 2: 0\\n16\\n8\\n\") == \"2\\n2\\n5\\n\"\n"
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n3\") == \"2\\n2\\n5\\n\"\nassert solution(\"2 3\\n4\") == \"0\\n16\\n8\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 2, \"Your solution is incorrect. Expected output: 2, but got: {}.\".format(solution)"
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Expected: {output()}, Received: {solution(input())}\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 1\\n3\\n') == '2\\n2\\n5\\n'\nassert solution('2 3\\n4\\n') == '0\\n16\\n8\\n'"
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n3\\n\") == \"2\\n2\\n5\\n\", \"The output should be '2\\n2\\n5\\n', but it's actually '{}'.\".format(solution(\"1 1\\n3\\n\"))\n\nassert solution(\"2 3\\n4\\n\") == \"0\\n16\\n8\\n\", \"The output should be '0\\n16\\n8\\n', but it's actually '{}'.\".format(solution(\"2 3\\n4\\n\"))"
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 68.52419365, \"The correct answer is 68.52419365, but it is {}\".format(solution())"
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\nSample Input 1:\\n2\\n50 45 45\\nSample Output 2:\\n68.52419365\") == 68.52419365\nassert solution(\"2\\nSample Input 2:\\n50\\n45\\n45\\nSample Output 2:\\n68.52419365\") == 68.52419365\nassert solution(\"1\\nSample Input 1:\\n1000\\n450\\nSample Output 1:\\n1000\\n\") == 1000\nassert solution(\"1\\nSample Input 1:\\n-1\\n450\\nSample Output 1:\\n-1\\n\") == -1"
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == output, f\"The expected output is {output}, but got {solution(stdin)}\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='1\\nSample Output 1:44.72135955\\n2\\n50 45 45\\nSample Output 2:68.52419365\\n') == '44.72135955\\n68.52419365\\n'\n"
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"44.72135955\"\n"
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == expected, f\"Expected {expected}, got {solution(stdin=input())}\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"44.72135955\", \"Sample Output 2\"\n"
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 44.72135955\nassert solution(2) == 68.52419365"
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r').read()) == '44.72135955\\n'"
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'Output the minimum time required to reach the end of the road.\\n', 'Test failed'"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3 1 5\\n1 2\\n') == '1\\n3\\n2\\n'\nassert solution('3 4 2 3\\n1 3 1\\n') == '1\\n1\\n0\\n2\\n'\n"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\nassert solution(input()) == output()\nassert solution(input()) == output()\nassert solution(input()) == output()\nassert solution(input()) == output()"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''2 3 1 5\n1 2''') == '1\\n3\\n2\\n'\n\nassert solution('''3 4 2 3\n1 3 1''') == '1\\n1\\n0\\n2\\n'\n\nassert solution('''5\n1 2 3 4 5''') == '1\\n2\\n3\\n4\\n5\\n'\n\nassert solution('''2 3 4 5 6 7\n1 1 1 1 1 1''') == '1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n'\n\nassert solution('''1 2 3 4 5 6 7\n1 2 3 4 5 6 7''') == '1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n'\n\nassert solution('''3 4 5 6\n1 2 3 4 5 6''') == '1\\n1\\n1\\n2\\n2\\n2\\n3\\n3\\n3\\n4\\n4\\n4\\n5\\n5\\n5\\n5\\n6\\n6\\n6\\n6\\n'\n\nassert solution('''3 2 5 7 8\n1 2 3 4 5 6 7 8''') == '1\\n1\\n1\\n2\\n2\\n2\\n3\\n3\\n3\\n4\\n4\\n4\\n5\\n5\\n5\\n5\\n6\\n6\\n6\\n6\\n7\\n7\\n7\\n7\\n8\\n8\\n8\\n8\\n'\n\nassert solution('''5\n1 2 3 4 5''') == '1\\n2\\n3\\n4\\n5\\n'\n\nassert solution('''5\n2 3 4 5 6''') == '1\\n2\\n3\\n4\\n5\\n6\\n'"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3 1 5\\n1 2\\n\") == \"1\\n3\\n2\\n\"\nassert solution(\"3 4 2 3\\n1 3 1\\n\") == \"1\\n1\\n0\\n2\\n\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3 1 5\\n1 2\") == \"1\\n3\\n2\\n\"\nassert solution(\"3 4 2 3\\n1 3 1\") == \"1\\n1\\n0\\n2\\n\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"Test case failed: \\n{stdin}\\nExpected output: {expected_output}\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3 1 5\\n1 2\") == \"1\\n3\\n2\\n\"\nassert solution(\"3 4 2 3\\n1 3 1\") == \"1\\n1\\n0\\n2\\n\"\nassert solution(\"1 2 3 4 5\\n6 7 8 9 10\") == \"2\\n4\\n6\\n8\\n10\\n\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 3 1 5\\n1 2') == '1\\n3\\n2'\nassert solution('3 4 2 3\\n1 3 1') == '1\\n1\\n0\\n2'"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3 1 5\\n1 2\\n3 4 2 3\\n1 3 1\\n\") == \"1\\n1\\n0\\n2\\n\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 5\\n1 1\\n\") == \"3\"\nassert solution(\"5 3\\n2 2 3 2 2\\n\") == \"2\"\nassert solution(\"\") == \"0\"\nassert solution(\"2 1\\n3 4\\n5 6\\n\") == \"3\"\nassert solution(\"1 2\\n3 4\\n5 6\\n\") == \"2\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 5\\n1 1\\n\") == \"3\\n\", \"Test 1 failed\"\nassert solution(\"5 3\\n2 2 3 2 2\\n\") == \"2\\n\", \"Test 2 failed\"\n\nfrom typing import List"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\", \"Test case 1 failed\"\nassert solution() == \"2\", \"Test case 2 failed\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 5\\n1 1\") == \"3\\n\"\nassert solution(\"5 3\\n2 2 3 2 2\") == \"2\\n\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\") == \"3\\n\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 5\\n1 1\") == \"3\"\nassert solution(\"5 3\\n2 2 3 2 2\") == \"2\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 5\\n1 1\\n\") == \"3\\n\"\nassert solution(\"5 3\\n2 2 3 2 2\\n\") == \"2\\n\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == expected_output1, \"Test 1 failed\"\nassert solution(sample_input2) == expected_output2, \"Test 2 failed\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 5\\n1 1\\n\") == \"3\\n\", \"Test 1\"\nassert solution(\"5 3\\n2 2 3 2 2\\n\") == \"2\\n\", \"Test 2\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 5\\n1 1\") == 3, \"Expected output: 3, actual output: {}.\".format(solution(\"2 5\\n1 1\"))\nassert solution(\"5 3\\n2 2 3 2 2\") == 2, \"Expected output: 2, actual output: {}.\".format(solution(\"5 3\\n2 2 3 2 2\"))"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == \"50\", \"Incorrect output for sample input 1.\"\nassert solution(sample_input_2) == \"25\", \"Incorrect output for sample input 2.\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n100 100\\n50 50\\n') == '50\\n'\nassert solution('2\\n0 50\\n50 0\\n') == '25\\n'"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n100 100\\n50 50\\n') == '50\\n', 'Sample Input 1: Expected Output: 50\\nActual Output: {}'.format(solution('2\\n100 100\\n50 50\\n'))\n\nassert solution('2\\n0 50\\n50 0\\n') == '25\\n', 'Sample Input 2: Expected Output: 25\\nActual Output: {}'.format(solution('2\\n0 50\\n50 0\\n'))"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 50, \"Incorrect solution\"\n"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n100 100\\n50 50\\n\") == \"50\\n\"\nassert solution(\"2\\n0 50\\n50 0\\n\") == \"25\\n\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(solution_1) == 50, \"The output is incorrect\"\nassert solution(solution_2) == 25, \"The output is incorrect\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '50', 'Your solution is not correct.'"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 100, 50, 50) == 50"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n100 100\\n50 50\\n') == '50\\n'\nassert solution('2\\n0 50\\n50 0\\n') == '25\\n'"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"50\"\n"
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, but got {solution(stdin)}\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 250, \"Expected output 250, got {}\".format(solution(3))"
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == output, f\"Error: {output}!= {solution(stdin)}\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"160\\n\", \"Expected output: '160', got: '{}'\".format(solution())"
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"250\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '160', 'Test 1 failed'\nassert solution() == '250', 'Test 2 failed'"
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2') == 160\nassert solution('3') == 250"
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n100\\n200\\n3\\n100\\n200\\n2010\\n') == '160'\nassert solution('3\\n100\\n200\\n2010\\n') == '250'"
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"160\", \"Incorrect output for sample case 1\"\nassert solution() == \"250\", \"Incorrect output for sample case 2\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"160\"\n"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n0 1 1\\n2 3 1\") == \"2\"\nassert solution(\"5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\") == \"0\"\n"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n0 1 1\\n2 3 1\\n\") == \"2\"\nassert solution(\"5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n\") == \"0\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '0', \"Expected: 0, Actual: {}\".format(solution())"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"\"\"\n"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 2\\n0 1 1\\n2 3 1\\n\\n5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n') == '2\\n'\n"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n0 1 1\\n2 3 1\\n\") == \"2\"\nassert solution(\"5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n\") == \"0\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n0 1 1\\n2 3 1\\n\") == \"2\"\nassert solution(\"5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n\") == \"0\"\n\nfrom typing import List"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    4 2\n    0 1 1\n    2 3 1\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    5 5\n    0 1 3\n    1 2 3\n    2 3 3\n    3 4 3\n    4 0 3\n    \"\"\"\n) == \"0\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n4 2\n0 1 1\n2 3 1\n''') == '2\\n'\n\nassert solution('''\n5 5\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3\n''') == '0\\n'"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    '''\n    4 3\n    3 3 2 1\n    3 3 3\n    '''\n) == '''\n1 1\n1 2\n2 3 4\n'''\n\nassert solution(\n    '''\n    4 2\n    3 3 2 2\n    6 3\n    '''\n) == '''\n-1\n'''"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '1 1\\n1 2\\n2 3 4'\n"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 3\\n3 3 2 1\\n3 3 3\\n') == '1 1\\n1 2\\n2 3 4\\n'\nassert solution('4 2\\n3 3 2 2\\n6 3\\n') == '-1'"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '''1 1\n1 2\n2 3 4\n'''"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Test failed for input {input()}, expected {expected}\"\n"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n3 3 2 1\\n3 3 3\") == \"1 1\\n1 2\\n2 3 4\"\nassert solution(\"4 2\\n3 3 2 2\\n6 3\") == \"-1\"\nassert solution(\"4 2\\n3 3 2 2\\n6 3\\n3 3 2 2\") == \"2 3 4\""
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n4 3\n3 3 2 1\n3 3 3\n\"\"\"\n) == [1, 1]\n\nassert solution(\n    \"\"\"\n4 2\n3 3 2 2\n6 3\n\"\"\"\n) == [-1]"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 3\\n3 3 2 1\\n3 3 3\\n') == ['1 1', '1 2', '2 3 4']\nassert solution('4 2\\n3 3 2 2\\n6 3\\n') == [-1]"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output() for input, output in zip(samples, expected_outputs)"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\\n\") == \"10.0\\n10.0\\n0.0\\n\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\\n\") == \"10.0\\n10.0\\n0.0\"\nassert solution(\"4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\\n\") == \"10.0\\n4.0\\n1.0\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"10.0\\n10.0\\n0.0\\n\"\nassert solution() == \"10.0\\n4.0\\n1.0\\n\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\\n\") == \"10.0\\n10.0\\n0.0\\n\"\nassert solution(\"4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\\n\") == \"10.0\\n4.0\\n1.0\\n\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3 10\\n0 0 D\\n10 1 L') == 10.0\nassert solution('4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D') == 10.0"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"10.0\\n10.0\\n0.0\\n\"\n"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\") == \"10.0\\n10.0\\n0.0\"\nassert solution(\"4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\") == \"10.0\\n4.0\\n1.0\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {i+1} failed: Expected output: {expected_output}, but got: {solution(stdin)}\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"test.txt\").read()) == \"10.0\\n10.0\\n0.0\\n\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\"\n\nfrom typing import List"
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('ex eoii jpxbmx cvz uxju sjzzcn jzz') == 'we will avenge our dead parrot arr'\nassert solution('wl jkd') == 'Impossible'"
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\"\n"
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\"\n\nfrom typing import List"
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Hamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120') == 68.3, \"Output 1 incorrect\"\n\nassert solution('Amsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10') == \"IMPOSSIBLE\", \"Output 2 incorrect\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Hamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120\") == 68.3\nassert solution(\"Amsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('Hamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120\\n') == 68.3\nassert solution('Amsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10\\n') == 'IMPOSSIBLE'"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Hamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120\") == 68.3, \"Invalid output\"\nassert solution(\"Amsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10\") == \"IMPOSSIBLE\", \"Invalid output\"\n\nfrom typing import List, Tuple"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Hamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120\") == 68.3, \"Output not as expected.\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 'def solution(stdin: str) -> str: pass\\n'"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 68.3\nprint(\"PASS\")"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Hamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120\") == \"68.3\"\nassert solution(\"Amsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 68.3"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Hamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120') == '68.3'\nassert solution('Amsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10') == 'IMPOSSIBLE'\n\nfrom typing import List\nimport math"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n3\n*-*.*\n|.|.|\n*.*-*\n|...|\n*.*.*\n\"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"\n2\n*.*\n...\n*.*\n\"\"\"\n) == \"4\\n\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*') == '3\\n'\nassert solution('2\\n*.*\\n...\\n*.*\\n') == '4\\n'"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 3\nassert solution(2) == 4"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input(1)) == \"3\"\nassert solution(sample_input(2)) == \"4\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '4'\nassert solution() == '2'"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*\") == \"3\\n\"\nassert solution(\"2\\n*.*\\n...\\n*.*\\n\") == \"4\\n\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*\") == \"3\\n\"\nassert solution(\"2\\n*.*\\n...\\n*.*\") == \"4\\n\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == \"4\\n\"\n"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*\") == 3\nassert solution(\"2\\n*.*\\n...\\n*.*\") == 4"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"3\"\nassert solution(2) == \"4\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Sample Input 1\\n8\\n12210020\\nSample Output 1\\n4\\n\\nSample Input 2\\n4\\n1111\\nSample Output 2\\nimpossible\\n') == '4'\n\nfrom typing import List"
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8\\n12210020\\n\") == \"4\\n\", \"Test Case 1 Failed\"\nassert solution(\"4\\n1111\\n\") == \"impossible\\n\", \"Test Case 2 Failed\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"impossible\" # Add your solution here"
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8\\n12210020\\n4\\n1111\\n\") == \"4\\n\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('8\\n12210020\\n4\\n1111') == '4'\nassert solution('4\\n1111') == 'impossible'"
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == expected_output, \"Test case failed\"\n"
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8\\n12210020\") == \"4\", \"The solution is incorrect\"\nassert solution(\"4\\n1111\") == \"impossible\", \"The solution is incorrect\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('8\\n12210020\\n4\\n1111') == '4\\n'\nassert solution('4\\n1111') == 'impossible'"
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r'8\\n12210020') == '4\\n', \"Test 1 failed.\"\nassert solution(r'4\\n1111') == 'impossible\\n', \"Test 2 failed.\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 'impossible' # Solution does not exist yet\n"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n500 500 499\\n0 0 999\\n1000 1000 200\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n\"\n\nassert solution(\"4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300\") == \"Bill will be bitten.\\n\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n500 500 499\\n0 0 999\\n1000 1000 200\\n\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\"\nassert solution(\"4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300\\n\") == \"Bill will be bitten.\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n500 500 499\\n0 0 999\\n1000 1000 200\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n\"\nassert solution(\"4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300\") == \"Bill will be bitten.\\n\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n500 500 499\n0 0 999\n1000 1000 200\n\"\"\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n\"\n\nassert solution(\"\"\"\n4\n250 250 300\n750 250 300\n250 750 300\n750 750 300\n\"\"\") == \"Bill will be bitten.\\n\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n3\n500 500 499\n0 0 999\n1000 1000 200\n''') == '''\nBill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\n'''\n\nassert solution('''\n4\n250 250 300\n750 250 300\n250 750 300\n750 750 300\n''') == '''\nBill will be bitten.\n'''"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n500 500 499\\n0 0 999\\n1000 1000 200\\n') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n'\n\nassert solution('4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300\\n') == 'Bill will be bitten.\\n'"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n500 500 499\\n0 0 999\\n1000 1000 200\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n\"\nassert solution(\"4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300\") == \"Bill will be bitten.\\n\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''3\n500 500 499\n0 0 999\n1000 1000 200''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n'\n\nassert solution('''4\n250 250 300\n750 250 300\n250 750 300\n750 750 300''') == 'Bill will be bitten.\\n'"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n3\n500 500 499\n0 0 999\n1000 1000 200\n''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n'\nassert solution('''\n4\n250 250 300\n750 250 300\n250 750 300\n750 750 300\n''') == 'Bill will be bitten.\\n'"
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == sample_output1, \"Test case 1 failed\"\nassert solution(sample_input2) == sample_output2, \"Test case 2 failed\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"xxoooooo\"\nassert solution(\"8 3\\n++xx+x++\") == \"xxoooooo\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 3\\n++xx+x++\") == \"++xx+o++\"\nassert solution(\"8 3\\nxxxxxxxx\") == \"xxoooooo\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 3\\n++xx+x++\") == \"++xx+o++\", \"Test Case 1\"\nassert solution(\"8 3\\nxxxxxxxx\") == \"xxoooooo\", \"Test Case 2\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"xxoooooo\"\n"
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(Solution().maximizePower(8, 3)) == \"++xx+o++\"\nassert solution(Solution().maximizePower(8, 3)) == \"xxoooooo\"\nassert solution(Solution().maximizePower(1, 1)) == \"x\"\nassert solution(Solution().maximizePower(1, 2)) == \"x\"\nassert solution(Solution().maximizePower(1, 3)) == \"x\"\nassert solution(Solution().maximizePower(1, 4)) == \"x\"\nassert solution(Solution().maximizePower(1, 5)) == \"x\"\nassert solution(Solution().maximizePower(1, 6)) == \"x\"\nassert solution(Solution().maximizePower(1, 7)) == \"x\"\nassert solution(Solution().maximizePower(1, 8)) == \"x\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 3\\n++xx+x++\") == \"++xx+o++\"\nassert solution(\"8 3\\nxxxxxxxx\") == \"xxoooooo\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 3\\n++xx+x++\\n\") == \"++xx+o++\"\nassert solution(\"8 3\\nxxxxxxxx\\n\") == \"xxoooooo\"\n"
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 3\\n++xx+x++\") == \"++xx+o++\\n\"\nassert solution(\"8 3\\nxxxxxxxx\") == \"xxoooooo\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 3\\n++xx+x++\\nSample Output 1:\\n++xx+o++\") == \"++xx+o++\"\nassert solution(\"8 3\\nxxxxxxxx\\nSample Output 2:\\nxxoooooo\") == \"xxoooooo\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Lost is Close to Lose\\n\\nBetter Documents Inc. wants to add Typo Checking in to the next generation of word processors, and now BDI, however, is looking forward to replacing that with a true Typo Checker.\\n\\n\\nAs a first step in this process, they want to see how common such similar words really are in ordinary text.\\n\\n\\nWrite a program to read in paragraphs of text and to produce a list of similarly spelled words occurring in that text.\\n\\n\\nFor the purpose of this program, a word is any maximal string of non-whitespace characters containing at least one alphabetic character. Whitespace can be either blanks or line terminators (\\\\r or \\\\n). The core of a word is what you have left after removing any non-alphabetic characters and replacing any upper-case alphabetic characters to their lower-case equivalents.\\n\\n\\nTwo words are considered to be similarly spelled if the core of one word can be converted to the core of the other word by a single application of any one of the following transformations:\\n - Delete a single character.\\n - Insert a single alphabetic character.\\n - Replace a single character by a different alphabetic character.\\n - Transpose (exchange) any two adjacent characters.\\n\\n-----Input-----\\nInput consists of $1$ to $100$ lines of text, followed by an end of input marker in the form of a line containing only the string \\\"***\\\".\\n\\nEach line of text will contain $0$ to $80$ ASCII characters (not counting line terminators).\\n\\n-----Output-----\\nFor each word core in the text that has one or more similarly spelled words, print a line consisting of\\n - That word core\\n - A colon (\\\":\\\") followed by a blank\\n - A list of all similarly spelled word cores (with no duplicates and not containing the core to the left of the colons), in alphabetic order, separated by single spaces.\\n\\nThe lines printed should be in alphabetic order of the word cores to the left of the colon.\\n\\nIf there are no similarly spelled words in the input, print a single line containing the string \\\"***\\\".\\n\\n-----Examples-----\\nSample Input 1:\\nLost is Close to Lose\\n\\n\\\"Better Documents Inc. wants to add Typo Checking in to the\\nnext generation of word processors,\\\" he said.\\n***\\nSample Output 1:\\nclose: lose\\nhe: the\\ninc: inc is\\ninc: in\\nis: in\\nlose: close lost\\nllost: lose\\nthe: he\\n\\nSample Input 2:\\nThe fox said, \\\"When?\\n\\\"Not till 12 o'clock\\\", replied the hen.\\n\\\"That clock is stopped, it will never strike.\\\", he said.\\n***\\nSample Output 2:\\nclock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\nthe: he\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef main():\\n    input_str = input()\\n    output_list = []\\n    for line in input_str.split('\\n'):\\n        if not line.strip():\\n            output_list.append('***')\\n        else:\\n            words = line.strip().split()  # split into words\\n            core = ''.join(words)\\n            output_list.append(f'{core}: {core}\\n')\\n    output_str = '\\n'.join(output_list)\\n    print(output_str)\\n\\nif __name__ == '__main__':\\n    main()\\n\\n# The above code will produce the following output:\\n\\nclose: lose\\nhe: the\\ninc: inc is\\ninc: in\\nis: in\\nlose: close lost\\nllost: lose\\nthe: he\\n\\n\\nclose: lose\\nhe: the\\ninc: inc is\\ninc: in\\nis: in\\nlose: close lost\\nllost: lose\\nthe: he\\n\\n# The program outputs the following output:\\n\\nclose: lose\\nhe: the\\ninc: inc is\\ninc: in\\nis: in\\nlose: close lost\\nllost: lose\\nthe: he\\n\\n# The program"
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"close: lose\\nhe: the\\ninc: inc is\\ninc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\\n\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_1) == output_1, \"Test 1 failed\"\nassert solution(input_2) == output_2, \"Test 2 failed\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_str) == expected_output, f\"Expected output: {expected_output}\\nGot: {solution(input_str)}\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\nLost is Close to Lose\n\n\"Better Documents Inc. wants to add Typo Checking in to the\nnext generation of word processors,\" he said.\n\n***\n\nLost is Close to Lose\n\n\"Better Documents Inc. wants to add Typo Checking in to the\nnext generation of word processors,\" he said.\n\n***\n\n***\n\n''') == 'close: lose\\nhe: the\\nin: inc is\\ninc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\\n\\n'\n\nassert solution('''\nThe fox said, \"When?\"\n\"Not till 12 o'clock\", replied the hen.\n\"That clock is stopped, it will never strike.\", he said.\n\n***\n\nThe fox said, \"When?\"\n\"Not till 12 o'clock\", replied the hen.\n\"That clock is stopped, it will never strike.\", he said.\n\n***\n\n***\n\n''') == 'clock: oclock\\nhe: hen the\\nen: it\\nhe: hen the\\nis: it\\nhe: hen the\\nwhen: it\\nhe: hen the\\nwill: till\\ntill: will\\nden: it\\nden: it\\nden: it\\nden: it\\nhe: hen the\\n\\n'"
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Lost is Close to Lose\\n\\nBetter Documents Inc. wants to add Typo Checking in to the next generation of word processors,\\nhe said.\\n\\nSample Input 1:\\nLost is Close to Lose\\n\\nSample Output 1:close: lose\\nhe: the\\nin: inc is\\inc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\\n\\nSample Input 2:\\nThe fox said, \\\"When?\\\"\\n\\n\\\"Not till 12 o'clock\\\", replied the hen.\\n\\n\\\"That clock is stopped, it will never strike.\\\", he said.\\n\\nSample Output 2:clock: oclock\\nhe: hen the\\nen: he when\\nis: it\\nit: is\\noclock: clock\\nthe: he\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str: pass\") == \"close: lose\\nhe: the\\nin: inc is\\inc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\\n\\n\"\nassert solution(\"The fox said, \\\"When?\\\"\\n\\n\\\"Not till 12 o'clock\\\", replied the hen.\\n\\n\\\"That clock is stopped, it will never strike.\\\", he said.\\n\\nSample Input 2:\\nThe fox said, \\\"When?\\\"\\n\\n\\\"Not till 12 o'clock\\\", replied the hen.\\n\\n\\\"That clock is stopped, it will never strike.\\\", he said.\\n\\nSample Output 2:clock: oclock\\nhe: hen the\\nen: he when\\nis: it\\nit: is\\noclock: clock\\nthe: he\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str: pass\") == \"clock: oclock\\nhe: hen the\\nen: he when\\nis: it\\nit: is\\noclock: clock\\nthe: he\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str: pass\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Lost is Close to Lose\") == \"close: lose\\nhe: the\\ninc is: inc is\\ninc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\"\nassert solution(\"The fox said, \\\"When?\\\"\") == \"clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\nthe: he\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str: pass\"\nassert solution(\"The fox said, \\\"Not till 12 o'clock\\\", replied the hen. \\\"That clock is stopped, it will never strike.\\\"\") == \"clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\nthe: he\\nwill: till\\nwhen: hen\\nlost: lose\\ndef solution(stdin: str) -> str: pass\"\nassert solution(\"There's no similarly spelled word in this text.\") == \"***\"\nassert solution(\"The fox said, \\\"When?\\\" It's not the right time to kill the dog. It's the right time to find a new dog. It's the right time to run away from the ensuing pandemic.\") == \"clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\nthe: he\\nwill: till\\nwhen: hen\\nlost: lose\\ndef solution(stdin: str) -> str: pass\"\n\nsolution = \"\"\"\nimport re"
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Lost is Close to Lose\\n\\n\" + \\\n    \"Better Documents Inc. wants to add Typo Checking in to the\\n\" + \\\n    \"next generation of word processors,\\n\" + \\\n    \"he said.\\n\" + \\\n    \"***\\n\" + \\\n    \"Sample Input 1:\\n\" + \\\n    \"Lost is Close to Lose\\n\\n\" + \\\n    \"The fox said, \\\"When?\\\"\\n\" + \\\n    \"\\\"Not till 12 o'clock\\\", replied the hen.\\n\" + \\\n    \"\\\"That clock is stopped, it will never strike.\\\",\\n\" + \\\n    \"he said.\\n\" + \\\n    \"***\\n\" + \\\n    \"Sample Output 1:\\n\" + \\\n    \"close: lose\\n\" + \\\n    \"he: the\\n\" + \\\n    \"in: inc is\\n\" + \\\n    \"inc: in\\n\" + \\\n    \"is: in\\n\" + \\\n    \"lose: close lost\\n\" + \\\n    \"lost: lose\\n\" + \\\n    \"the: he\\n\") == \"\"\"\nclose: lose\nhe: the\nin: inc is\ninc: in\nis: in\nlose: close lost\nlost: lose\nthe: he\n\"\"\"\n\nassert solution(\"The fox said, \\\"When?\\\"\\n\" + \\\n    \"\\\"Not till 12 o'clock\\\", replied the hen.\\n\" + \\\n    \"\\\"That clock is stopped, it will never strike.\\\",\\n\" + \\\n    \"he said.\\n\" + \\\n    \"***\\n\" + \\\n    \"Sample Input 2:\\n\" + \\\n    \"The fox said, \\\"When?\\\"\\n\\n\" + \\\n    \"The fox said, \\\"When?\\\"\\n\" + \\\n    \"\\\"Not till 12 o'clock\\\", replied the hen.\\n\" + \\\n    \"\\\"That clock is stopped, it will never strike.\\\",\\n\" + \\\n    \"he said.\\n\" + \\\n    \"***\\n\" + \\\n    \"Sample Output 2:\\n\" + \\\n    \"clock: oclock\\n\" + \\\n    \"he: hen the\\n\" + \\\n    \"hen: he when\\n\" + \\\n    \"is: it\\n\" + \\\n    \"it: is\\n\" + \\\n    \"oclock: clock\\n\" + \\\n    \"the: he\\n\" + \\\n    \"till: will\\n\" + \\\n    \"when: hen\\n\" + \\\n    \"will: till\n\"\"\"\n\nassert solution(\"It's not worth to read and type on paper every day, especially if you can't remember the spelling of a word. This is the reason why we use modern word processors.\\n\" + \\\n    \"The fox said, \\\"When?\\\"\\n\" + \\\n    \"\\\"Not till 12 o'clock\\\", replied the hen.\\n\" + \\\n    \"\\\"That clock is stopped, it will never strike.\\\",\\n\" + \\\n    \"he said.\\n\" + \\\n    \"***\\n\" + \\\n    \"Sample Input 3:\\n\" + \\\n    \"It's not worth to read and type on paper every day, especially if you can't remember the spelling of a word. This is the reason why we use modern word processors.\\n\\n\" + \\\n    \"The fox said, \\\"When?\\\"\\n\" + \\\n    \"\\\"Not till 12 o'clock\\\", replied the hen.\\n\" + \\\n    \"\\\"That clock is stopped, it will never strike.\\\",\\n\" + \\\n    \"he said.\\n\" + \\\n    \"***\\n\" + \\\n    \"Sample Output 3:\\n\" + \\\n    \"clock: oclock\\n\" + \\\n    \"he: hen the\\n\" + \\\n    \"hen: he when\\n\" + \\\n    \"is: it\\n\" + \\\n    \"it: is\\n\" + \\\n    \"oclock: clock\\n\" + \\\n    \"the: he\\n\" + \\\n    \"till: will\\n\" + \\\n    \"when: hen\\n\" + \\\n    \"will: till\n\") == \"\"\"\nclock: oclock\nhe: hen the\nhen: he when\nis: it\nit: is\noclock: clock\nthe: he\ntill: will\nwhen: hen\nwill: till\n\"\"\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input1) == expected1\nassert solution(input2) == expected2\n\ninput1 = '''\nLost is Close to Lose\nBetter Documents Inc. wants to add Typo Checking in to the next generation of word processors, and he said.\n'''\n\ninput2 = '''\nThe fox said, \"When?\"\n\"Not till 12 o'clock\", replied the hen.\n\"That clock is stopped, it will never strike.\"\n'''\n\nexpected1 = '''\nclose: lose\nhe: the\ninc is: in\nis: in\nlose: close lost\nlost: lose\nthe: he\n'''\n\nexpected2 = '''\nclock: oclock\nhe: hen the\nhen: he when\nis: it\nit: is\noclock: clock\nthe: he\ntill: will\nwhen: hen\nwill: till\n"
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\").read()) == \"close: lose\\nhe: the\\nin: inc is\\nin: in\\nlose: close lost\\nlost: lose\\nthe: he\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\n1 2 7 3 8 9 4 5 10 6\") == \"1\", \"1\"\nassert solution(\"10\\n3 8 1 9 4 5 2 7 10 6\") == \"2\", \"2\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 1\n"
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input: {input()}\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\\n\", \"The output should be '1', but instead it is '{}'.\".format(solution())"
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\n1 2 7 3 8 9 4 5 10 6\") == \"1\"\nassert solution(\"10\\n3 8 1 9 4 5 2 7 10 6\") == \"2\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected_output, f\"The output for the given input is {solution}, but the expected output is {expected_output}\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\", \"Incorrect output\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('0.142857 6') == '1/7', 'Solution 1'\nassert solution('1.6 1') == '5/3', 'Solution 2'"
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\", \"Test 1 failed.\"\nassert solution(\"1.6 1\") == \"5/3\", \"Test 2 failed.\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('$0.142857 6') == 1/7\nassert solution('1.6 1') == 5/3"
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\"\n\nfrom math import gcd\n"
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\"\n"
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\"\n\nfrom typing import List"
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\", \"Incorrect solution for sample input 1.\"\nassert solution(\"1.6 1\") == \"5/3\", \"Incorrect solution for sample input 2.\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input1) == output1, f\"Output 1 is incorrect. Received {solution(input1)}, expected {output1}\"\nassert solution(input2) == output2, f\"Output 2 is incorrect. Received {solution(input2)}, expected {output2}\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('example.txt', 'r')) == '6\\n'\nassert solution(open('input.txt', 'r')) == '10\\n'"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(read_input()) == expected, f\"Expected: {expected}, Got: {solution(read_input())}\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"2\\n0 0 0\\n0 0 1\"\n) == 10"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1\\n0 0 0\\n2\\n0 0 1\\n') == '6\\n'\nassert solution('2\\n0 0 0\\n0 0 1\\n') == '10\\n'"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input1) == 6, \"Test 1 failed\"\nassert solution(input2) == 10, \"Test 2 failed\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"6\\n\"\nassert solution() == \"10\\n\"\n"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([10, 10, 10]) == 6\nassert solution([10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]) == 10"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(TestInput1) == TestOutput1\nassert solution(TestInput2) == TestOutput2"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 6, \"Solution should return 6\"\nassert solution(4) == 10, \"Solution should return 10\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Test case {test_case} failed. Expected output: {expected_output}. Got: {solution(stdin=input())}\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n-1 2 -1\\n2 2\\n1 -1 1\") == \"1\\n\"\nassert solution(\"7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\") == \"1\\n\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1\\n'\n"
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1\\n\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n-1 2 -1\\n2 2\\n1 -1 1\") == \"1\\n\"\nassert solution(\"7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\") == \"1\\n\"\n"
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 1, \"Expected 1, but got {}\".format(solution(3))\nassert solution(7) == 1, \"Expected 1, but got {}\".format(solution(7))"
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n-1 2 -1\\n2 2\\n1 -1 1\") == 1\nassert solution(\"7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\") == 1\nassert solution(\"3\\n-1 2 -1\\n2 2\\n1 -1 1\\n3 3\\n3 3\") == 2\nassert solution(\"10\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\\n-1 1 -1 1 1 1 1\\n2 2 2 2 2 2 2\\n3 3 3 3 3 3 3\") == 3\nassert solution(\"6\\n-1 1 0 0 0 0 -1\\n-1 0 0 0 0 0 0\\n-1 0 0 0 0 0 0\\n-1 0 0 0 0 0 0\\n-1 0 0 0 0 0 0\\n-1 0 0 0 0 0 0\") == 11"
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 1\nassert solution(7) == 1"
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\", \"Test 1 failed\"\nassert solution(input()) == \"1\", \"Test 2 failed\"\nassert solution(input()) == \"1\", \"Test 3 failed\"\nassert solution(input()) == \"1\", \"Test 4 failed\"\nassert solution(input()) == \"1\", \"Test 5 failed\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n-1 2 -1\\n2 2\\n1 -1 1\") == \"1\\n\", \"Incorrect output\"\nassert solution(\"7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\") == \"1\\n\", \"Incorrect output\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n-1 2 -1\\n2 2\\n1 -1 1\") == \"1\\n\"\nassert solution(\"7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\") == \"1\\n\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected: {expected_output}, Actual: {solution(input())}\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1001\") == \"3\\n\", \"Output 1: incorrect\"\nassert solution(\"1111\") == \"1\\n\", \"Output 2: incorrect\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"The output is not correct.\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1001\") == \"3\", \"Test 1\"\nassert solution(\"1111\") == \"1\", \"Test 2\"\n"
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1001') == 3\nassert solution('1111') == 1"
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1001\") == \"3\"\nassert solution(\"1111\") == \"1\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1001') == '3', \"Test case 1 failed.\"\nassert solution('1111') == '1', \"Test case 2 failed.\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1001\") == \"3\", \"Test 1 failed\"\nassert solution(\"1111\") == \"1\", \"Test 2 failed\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1001\") == \"3\", \"1001\"\nassert solution(\"1111\") == \"1\", \"1111\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1001\") == \"3\\n\"\nassert solution(\"1111\") == \"1\\n\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"LLR\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n1 1 1\\n') == 'LLL\\n'\nassert solution('5\\n1 2 2 1 2\\n') == 'LLRLR\\n'"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"LLL\", \"Expected 'LLL', got '{}'.\".format(solution())"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"LLL\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"LLL\"\nassert solution(stdin) == \"LLRLR\"\n"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1 1\\nSample Output 1:LLL\\n\") == \"LLL\"\nassert solution(\"5\\n1 2 2 1 2\\nSample Output 2:LLRLR\\n\") == \"LLRLR\"\n"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1 1\") == \"LLL\"\nassert solution(\"5\\n1 2 2 1 2\") == \"LLRLR\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == output, f\"Expected output: '{output}', but got '{stdin}'\"\n"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Input: {input()}, Expected Output: {expected_output}, Received Output: {solution(input())}\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"3\\n1 1 1\") == \"LLL\\n\"\nassert solution(stdin=\"5\\n1 2 2 1 2\") == \"LLRLR\\n\"\nassert solution(stdin=\"3\\n2 2 2\") == \"RR\\n\"\nassert solution(stdin=\"4\\n1 1 1 1\") == \"RRRR\\n\"\nassert solution(stdin=\"4\\n1 2 2 2\") == \"RRRR\\n\"\nassert solution(stdin=\"5\\n2 2 1 1 2\") == \"RRRRRRRR\\n\"\nassert solution(stdin=\"6\\n3 3 3 3 3 3\") == \"RRRRRRRRRRRR\\n\"\nassert solution(stdin=\"6\\n3 3 3 3 3 4\") == \"RRRRRRRRRRRRRRRR\\n\"\nassert solution(stdin=\"7\\n4 4 4 4 4 4 4\") == \"RRRRRRRRRRRRRRRRRRRR\\n\"\nassert solution(stdin=\"8\\n5 5 5 5 5 5 5 5\") == \"RRRRRRRRRRRRRRRRRRRRRR\\n\"\nassert solution(stdin=\"9\\n6 6 6 6 6 6 6 6 6\") == \"RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000\\n\") == 49000000000070\nassert solution(\"6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000\\n\") == 25000000000021"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_string) == output_string, f\"Solution: {solution(input_string)},\\nInput: {input_string},\\nOutput: {output_string}\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000') == '49000000000070\\n'\nassert solution('6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000\\n2 1 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n2 2 1000000\\n4 6 4000000\\n5 7 5000000\\n6 8 6000000\\n7 1 7000000') == '25000000000021\\n'"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000') == '49000000000070'\nassert solution('6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000') == '25000000000021'"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == output, f\"Expected output: {output}, Received output: {solution(stdin)}\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000\") == \"49000000000070\"\nassert solution(\"6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000\") == \"25000000000021\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000\") == \"49000000000070\"\nassert solution(\"6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000\") == \"25000000000021\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Solution:\\n{solution(input())}\\nOutput:\\n{output}\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Test case failed.\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"example1.in\", \"r\").read()) == \"49000000000070\\n\"\nassert solution(open(\"example2.in\", \"r\").read()) == \"25000000000021\\n\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\nYeah!\\n\"\n"
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Test failed. Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Yeah!\\n2\\n2\\n0\\n1\\n2\\n2\\n3\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\\n2\\n0\\n1\\n2\\n2\\n3\"\nassert solution(input()) == \"Yeah!\"\nassert solution(input()) == \"2\\n2\\n0\\n1\\n2\\n2\\n3\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, \"Test failed\"\n\nN, M = map(int, input().split())\n\nfor _ in range(M):\n    f, t = map(int, input().split())\n    if f == t:\n        print(\"Yeah!\")\n    else:\n        trip_count = 1\n        visited = [f]\n        while visited[-1]!= t:\n            trip_count += 1\n            visited.append(visited[-1])\n        print(trip_count)"
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n4 4\n0 1\n1 0\n2 3\n3 2\n''') == '2\\n2\\n0\\n1\\n2\\n2\\n3\\n'\nassert solution('''\n4 4\n0 1\n1 0\n2 3\n3 3\n''') == 'Yeah!'"
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\\n\") == '2\\n2\\n0\\n1\\n2\\n2\\n3\\n'"
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"Yeah!\\n\"\nassert solution(open('input.txt', 'r')) == \"Yeah!\\n\"\nassert solution(input(\"Enter number of places: \")) == \"Yeah!\\n\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\") == 2\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 3\") == \"Yeah!\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\") == 2\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 3\") == \"Yeah!\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Expected output: {expected_output}, got: {solution(stdin=input())}\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == sample_output1, \"Expected: \" + str(sample_output1) + \"\\nGot: \" + str(solution(sample_input1))\nassert solution(sample_input2) == sample_output2, \"Expected: \" + str(sample_output2) + \"\\nGot: \" + str(solution(sample_input2))"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"POSSIBLE\\n1 3\\n2 3\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 'POSSIBLE\\n1 3\\n2 3'\n"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1 1 2\\n2 3') == 'POSSIBLE\\n1 3\\n2 3'\n\nassert solution('2\\n1 2\\n') == 'IMPOSSIBLE'\n\nfrom typing import List"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n1 1 2\\n2\\n1 2\\n') == 'POSSIBLE\\n1 3\\n2 3\\n'\nassert solution('2\\n1 2\\n') == 'IMPOSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 1 2\\n2 3\") == \"POSSIBLE\\n1 3\\n2 3\"\nassert solution(\"2\\n1 2\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\"POSSIBLE\n1 3\n2 3\"\"\"\n\nassert solution(stdin) == \"\"\"IMPOSSIBLE\"\"\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(read_input()) == \"POSSIBLE\\n1 3\\n2 3\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0.5 0.5 0.5\", \"Expected output: 0.5 0.5 0.5, got {}\".format(solution())\n\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n0 0 0\n1 0 0\n0 1 0\n0 0 1\n\"\"\") == \"0.5 0.5 0.5\\n\"\n\nassert solution(\"\"\"\n-1 0 0\n1 0 0\n0 1 0\n0 0 1\n\"\"\") == \"0.0 0.0 -0.0\\n\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected, f\"Wrong Answer\\nInput: {stdin}\\nOutput: {solution}\\nExpected: {expected}\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin: str) == '0.5 0.5 0.5'"
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.5 0.5 0.5\\n'\nassert solution('-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.0 0.0 -0.0\\n'"
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    0 0 0\n    1 0 0\n    0 1 0\n    0 0 1\n    \"\"\"\n) == \"0.5 0.5 0.5\\n\"\n\nassert solution(\n    \"\"\"\n    -1 0 0\n    1 0 0\n    0 1 0\n    0 0 1\n    \"\"\"\n) == \"0.0 0.0 -0.0\\n\"\n\nassert solution(\n    \"\"\"\n    -0.1 -0.1 -0.1\n    0.1 0.1 0.1\n    0.1 0.1 0.1\n    0.1 0.1 0.1\n    \"\"\"\n) == \"0.1 0.1 -0.1\\n\"\n\nassert solution(\n    \"\"\"\n    -0.1 0.1 0.1\n    0.1 0.1 0.1\n    0.1 0.1 0.1\n    0.1 0.1 0.1\n    \"\"\"\n) == \"0.1 0.1 0.1\\n\"\n\nassert solution(\n    \"\"\"\n    0 0 0\n    1 0 0\n    2 0 0\n    3 0 0\n    \"\"\"\n) == \"NaN NaN NaN\\n\"\n\nassert solution(\n    \"\"\"\n    1 2 3\n    4 5 6\n    7 8 9\n    \"\"\"\n) == \"NaN NaN NaN\\n\"\n\nassert solution(\n    \"\"\"\n    -100 -100 -100\n    100 100 100\n    100 100 100\n    \"\"\"\n) == \"0.000000 0.000000 -0.000000\\n\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n\") == \"0.5 0.5 0.5\\n\"\nassert solution(\"-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n\") == \"0.0 0.0 -0.0\\n\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin: str) == expected, f\"Expected {expected}, got {solution(stdin: str)}\"\nfor i in range(4):\n    x_i, y_i, z_i = [int(x) for x in input().split()]\n    assert -100 <= x_i <= 100\n    assert -100 <= y_i <= 100\n    assert -100 <= z_i <= 100\nx_c, y_c, z_c = solution(stdin)\nprint(f\"{x_c:.4f} {y_c:.4f} {z_c:.4f}\")"
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0.5 0.5 0.5\\n\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == solution2(stdin)"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed for {solution.__name__} function.\"\nfor stdin, expected_output in test_cases:\n    assert solution(stdin) == expected_output, f\"Test failed for {solution.__name__} function.\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Output\\n2\\n3 2 2 1 5\\n3 2 2\\n6 6\"\n"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10\\n3 6 2 3 2 2 2 1 5 6\\n') == '2\\n3 2 2 1 5\\n3 2 2\\n6 6\\n'\nassert solution('3\\n17 17 17\\n') == '0\\n17 17 17\\n'"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10\\n3 6 2 3 2 2 2 1 5 6\\n') == '2\\n3 2 2 1 5\\n3 2 2\\n6 6\\n'\n\nassert solution('3\\n17 17 17\\n') == '0\\n17 17 17\\n'"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\n3 6 2 3 2 2 2 1 5 6\\n\") == \"2\\n3 2 2 1 5\\n3 2 2\\n6 6\\n\"\nassert solution(\"3\\n17 17 17\\n\") == \"0\\n17 17 17\\n\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"Output Here\"\n"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output, f\"Solution does not match the expected output. Received {solution(stdin)}, expected {expected_output}\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"Output 1:\\n2\\n3 2 2 1 5\\n3 2 2\\n6 6\\n\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\n3 6 2 3 2 2 2 1 5 6\") == \"2\\n3 2 2 1 5\\n3 2 2\"\nassert solution(\"3\\n17 17 17\") == \"0\\n17 17 17\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Test case failed. Expected: {expected}, got: {solution(input())}\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\") == \"IMPOSSIBLE\"\n\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\") == \"IMPOSSIBLE\"\n\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\") == \"74.6666666667\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3\") == \"74.6666666667\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"IMPOSSIBLE\"\nprint(\"PASS\")"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3\\n\") == \"74.6666666667\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"IMPOSSIBLE\"  # example 1"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"IMPOSSIBLE\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 2 1\n1 2 7\n2 3 8\n1\n3 2\n\"\"\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3\") == \"74.6666666667\"\n"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"IMPOSSIBLE\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n\") == \"1\\n2\\n1\\n2\\n2\\n1\\n\"\nassert solution(\"7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\\n\") == \"0\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"test_input.txt\", \"r\")) == 0\nassert solution(open(\"test_input2.txt\", \"r\")) == 0\nassert solution(open(\"test_input3.txt\", \"r\")) == 1\nassert solution(open(\"test_input4.txt\", \"r\")) == 2\nassert solution(open(\"test_input5.txt\", \"r\")) == 2\nassert solution(open(\"test_input6.txt\", \"r\")) == 1\nassert solution(open(\"test_input7.txt\", \"r\")) == 1"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n') == '1\\n2\\n1\\n2\\n2\\n1\\n'\nassert solution('7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\\n') == '0\\n'"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output() for input, output in [\n    ([5, 6], \"0\\n2\\n1\\n2\\n2\\n1\"),\n    ([7, 7], \"0\\n0\\n0\\n0\\n0\\n0\"),\n]"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '1\\n2\\n1\\n2\\n2\\n1\\n'"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\nSample Input 1:\\n5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\nSample Output 1:\\n1\\n2\\n1\\n2\\n2\\n1\\n\\nSample Input 2:\\n7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\\nSample Output 2:\\n0\\ndef solution(stdin: str) -> str:') == '\\n0\\n1\\n1\\n1\\n1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n1\\n2\\n1\\n2\\n2\\n2\\n2\\n1\\n'"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n').strip() == '1\\n2\\n1\\n2\\n2\\n1\\n'\nassert solution('7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\\n').strip() == '0'"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n\") == \"1\\n2\\n1\\n2\\n2\\n1\\n\"\nassert solution(\"7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\\n\") == \"0\\n0\\n0\\n0\\n0\\n\"\nassert solution(\"5 6\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\\n\") == \"1\\n2\\n1\\n2\\n2\\n1\\n\"\nassert solution(\"1 2\\n1 4\\n2 3\\n3 1\\n3 4\\n4 5\\n\") == \"2\\n1\\n2\\n1\\n2\\n\"\nassert solution(\"5 6\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\\n\") == \"2\\n1\\n2\\n1\\n2\\n\"\n"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Your solution is incorrect. Please check the prompt and examples for more information.\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case} has incorrect output: '{solution(input())}' should be '{expected_output}'.\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Output\"\n"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"The solution is incorrect. The output is: {solution(stdin)}, but the expected output is: {expected}\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 10 2\\n0\\n15\\n30\\n45\\n\") == \"10\"\nassert solution(\"4 10 3\\n0\\n15\\n30\\n45\\n\") == \"5\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 10 2\\n0\\n15\\n30\\n45\") == \"10\\n\", \"Test 1 failed.\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    4 10 2\n    0\n    15\n    30\n    45\n    \"\"\"\n) == \"10\\n\"\n\nassert solution(\n    \"\"\"\n    4 10 3\n    0\n    15\n    30\n    45\n    \"\"\"\n) == \"5\\n\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n4 10 2\n0\n15\n30\n45\n''') == '10'\n\nassert solution('''\n4 10 3\n0\n15\n30\n45\n''') == '5'"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected_output, f\"Test failed: {solution}!= {expected_output}\"\n"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n50 50 75\\n25 25 25\\n\") == \"2\\n\"\nassert solution(\"5 2\\n50 50 50 50\\n25 25 25 25\\n\") == \"1\\n\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 2\\n50 50 75\\n25 25 25\\n') == '2'\nassert solution('5 2\\n50 50 50 50\\n25 25 25 25\\n') == '1'"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4 2\n50 50 75\n25 25 25\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n5 2\n50 50 50 50\n25 25 25 25\n\"\"\") == \"1\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n50 50 75\\n25 25 25\") == 2\nassert solution(\"5 2\\n50 50 50 50\\n25 25 25 25\") == 1\n"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 1\n"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n50 50 75\\n25 25 25\") == \"2\"\nassert solution(\"5 2\\n50 50 50 50\\n25 25 25 25\") == \"1\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(None) == \"Error: Function signature not provided.\\n\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'Output the worst possible rank you might end up in after the last contest, assuming you do not participate in it.\\n'"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 2\\n50 50 75\\n25 25 25') == '2'\nassert solution('5 2\\n50 50 50 50\\n25 25 25 25') == '1'"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\", \"Your code is not correct.\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Solution: {solution(input())}, Expected Output: {expected_output}\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\") == \"1\\n\"\nassert solution(\"4 4\\n.XLX\\n.X..\\n...L\\n.X..\") == \"2\\n\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 4\\n.LX.\\n.X..\\n....\\n.L..\\n') == '1\\n'\nassert solution('4 4\\n.XLX\\n.X..\\n...L\\n.X..\\n') == '2\\n'"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\\n\") == \"1\"\nassert solution(\"4 4\\n.XLX\\n.X..\\n...L\\n.X..\\n\") == \"2\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\") == \"1\\n\"\nassert solution(\"4 4\\n.XLX\\n.X..\\n...L\\n.X..\\n\") == \"2\\n\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == '1'\nassert solution(open('input2.txt', 'r')) == '2'"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '2\\n', \"The output must be 2.\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\\n\") == \"1\\n\"\nassert solution(\"4 4\\n.XLX\\n.X..\\n...L\\n.X..\\n\") == \"2\\n\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\") == \"1\\n\"\nassert solution(\"4 4\\n.XLX\\n.X..\\n...L\\n.X..\") == \"2\\n\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_1) == \"home\\n2\\n2 0 1\\n2 2 3\"\nassert solution(input_2) == \"detention\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output() for input, output in [\n    (input1, output1),\n    (input2, output2),\n    # Add more test cases as needed\n]"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == \"detention\"\nprint(\"detention\")"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n') == 'home\\n2\\n2 0 1\\n2 2 3\\n'\nassert solution('5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n') == 'detention\\ndef solution(stdin: str) -> str:\\npass'"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('sample_input_1.txt').read()) == 'home\\n2\\n2 0 1\\n2 2 3'\nassert solution(open('sample_input_2.txt').read()) == 'detention\\n1\\n1 1\\n1 3'\nassert solution(open('sample_input_3.txt').read()) == 'home\\n1\\n1 1\\n1 3'"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n\") == \"detention\"\n\nsolution(\"4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n\") == \"home\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input1) == output1, \"Incorrect solution for problem 1\"\nassert solution(input2) == output2, \"Incorrect solution for problem 2\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"detention\", \"Your solution is incorrect!\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == sample_output1"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"tralalal\") == \"allatral\", \"Incorrect solution: expected 'allatral', got '{}'.\".format(solution(\"tralalal\"))\nassert solution(\"zzzz\") == \"-1\", \"Incorrect solution: expected '-1', got '{}'.\".format(solution(\"zzzz\"))"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == -1"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == -1"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"tralalal\") == \"allatral\", \"Sample Input 1: tralalal\\nExpected Output 1: allatral\\nActual Output 1: \" + solution(\"tralalal\")\n\nassert solution(\"zzzz\") == \"-1\", \"Sample Input 2: zzzz\\nExpected Output 2: -1\\nActual Output 2: \" + solution(\"zzzz\")"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"tralalal\") == \"allatral\", \"Expected 'allatral', got '{}'\".format(solution(\"tralalal\"))\nassert solution(\"zzzz\") == \"-1\", \"Expected '-1', got '{}'\".format(solution(\"zzzz\"))"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\n"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"Output one integer representing the number of scary subarrays.\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n1 2 3 4 5') == '5\\n'\nassert solution('6\\n3 2 1 6 4 5') == '8\\n'\n"
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(5)) == \"5\"\nassert solution(str(1) + \" \" + str(2) + \" \" + str(3) + \" \" + str(4) + \" \" + str(5)) == \"5\"\nassert solution(str(6) + \" \" + str(3) + \" \" + str(2) + \" \" + str(1) + \" \" + str(6) + \" \" + str(4) + \" \" + str(5)) == \"8\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n6\\n3 2 1 6 4 5\\n\") == \"5\\n\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == 5\nassert solution(6) == 8"
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2 3 4 5\") == \"5\\n\"\nassert solution(\"6\\n3 2 1 6 4 5\") == \"8\\n\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"Output one integer representing the number of scary subarrays.\\n\"\nassert solution() == \"Output one integer representing the number of scary subarrays.\\n\"\nassert solution() == \"Output one integer representing the number of scary subarrays.\\n\"\nassert solution() == \"Output one integer representing the number of scary subarrays.\\n\"\nassert solution() == \"Output one integer representing the number of scary subarrays.\\n\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"5\""
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(523) == 2, \"Test failed for solution 1\"\nassert solution(47) == 1, \"Test failed for solution 2\""
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(47) == 1\nassert solution(523) == 2"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(47) == 1\nassert solution(523) == 2"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(47) == 1\nassert solution(523) == 2"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=47) == 1\nassert solution(stdin=523) == 2"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"47\") == 1, \"Incorrect output 1\"\nassert solution(\"523\") == 2, \"Incorrect output 2\""
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\"1\n\"\"\""
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 1\n"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('47') == '1'\nassert solution('523') == '2'"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n\"\"\") == \"0\\n0\\n0\\n1\\n1\\n1\\n1\\n1\\n\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\nr'''\n4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n''') == '0\\n'\n\nassert solution(\nr'''\n2 2\n0 1 20\n1 0 5\n''') == '1\\n0 1 15\\n'"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20') == '0\\n'\nassert solution('2 2\\n0 1 20\\n1 0 5') == '1\\n0 1 15'"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20\") == \"0\\n1\\n0 1 15\\n\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    4 5\n    0 1 10\n    1 2 10\n    0 3 10\n    3 2 10\n    2 0 20\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n    2 2\n    0 1 20\n    1 0 5\n    \"\"\"\n) == \"1\\n0 1 15\\n\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20\\n\") == \"0\\n1\\n0 1 15\\n\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\", \"Function should return an empty string\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n''') == '0\\n'\nassert solution('''\n2 2\n0 1 20\n1 0 5\n''') == '1\\n0 1 15\\n'"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20') == '0\\n1 0 15'"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '1'\nassert solution"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\\n\") == \"5\\n\"\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\\n\") == \"1\\n\"\n\nprint(\"All test cases pass.\")"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\\n') == 5, \"Sample Output 1: 5\"\n\nassert solution('4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\\n') == 1, \"Sample Output 2: 1\""
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == output, f\"Test failed for solution(input) == output\""
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"5\""
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\") == \"5\\n\"\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\") == \"1\\n\""
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'Output the length of the longest Fibonacci Tour Charles can take in the city. If there is no tour Charles can take, output zero.\\n'"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5') == 5\nassert solution('4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4') == 1"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    5 6\n    1 3 2 1 5\n    1 3\n    2 3\n    1 4\n    3 5\n    4 5\n    2 5\n''') == '5'\n\nassert solution('''\n    4 3\n    4 4 8 12\n    1 2\n    2 3\n    3 4\n''') == '1'"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\") == \"5\"\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\") == \"1\""
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\nfor _ in range(test_cases):\n    test_input, expected_output = map(int, input().split())\n    expected_output = str(expected_output)\n    actual_output = solution(str(test_input))\n    assert expected_output == actual_output"
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r').read()) == \"Output the minimum cost in one line as a single integer.\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '7'"
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('020302') == '7'\nassert solution('1311') == '24'"
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Solution: {solution(input())}, Expected: {expected}\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..#.##.#.#\") == \"1 15 5 15\"\nassert solution(\"#.#.#.#.##.#.#\") == \"2 13 2 11\"\nassert solution(\"#.#.#.#.##.#.#.#\") == \"2 9 5 9\"\nassert solution(\"#.#.#.#.##.#.#.#.##.#.#.#.##.#.#.#\") == \"2 9 3 8 2 15 5 15\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##. \\n##########\\n##########\\n\") == \"3 1 3 10\\n\"\n\nassert solution(\"5 20\\n###########.#.#.#.#. \\n###########...#.###. \\n##########..##.#..## \\n###########..#.#.##. \\n###########.###...#. \\n\") == \"1 15 5 15\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##.\\n##########\\n##########\") == \"3 1 3 10\\n\"\nassert solution(\"5 20\\n###########.#.#.#.#.\\n###########...#.###.\\n##########..##.#..##\\n###########..#.#.##.\\n###########.###...#.\") == \"1 15 5 15\\ndef solution(stdin: str) -> str:\n    pass\"\n\nThis is the solution to the given problem statement. The problem requires us to find the positions where the fold hits the edges of the paper. We can use the given information to determine where the fold hits the edges of the paper and then use that information to determine the positions of the fold.\n\nWe can solve this problem using dynamic programming. We can create a 2D array of size (n+1)x(m+1) where (n+1) is the number of rows and (m+1) is the number of columns. We can initialize the 2D array with 0s. The first row and column will contain the coordinates of the folding point, while the remaining rows and columns will contain the coordinates of the folding point plus one.\n\nTo determine the positions of the folding point, we can follow the below approach:\n\n1. If the fold is horizontal, we can use the coordinates of the folding point plus one.\n2. If the fold is vertical, we can use the coordinates of the folding point.\n3. If the fold is diagonal, we can use the coordinates of the folding point plus one.\n4. We can use the coordinates of the folding point plus one and the coordinates of the folding point plus two to determine the positions of the folding point.\n\nAfter determining the positions of the folding point, we can use these coordinates to determine the positions of the folding point plus one, the positions of the folding point plus two, and so on. If we encounter a cell with a \u2018#\u2019, we can assume that the folding point is always in the cell above it. We can use this information to determine the positions of the folding point plus one and the positions of the folding point plus two, and so on until we reach the edge of the image.\n\nFinally, we can output the positions of the folding point.\n\nLet's write the code to implement this solution. We can use the following steps to solve the problem:\n\n1. Read the input from the standard input.\n2. Initialize the 2D array with 0s.\n3. Initialize the variables for the folding point, the positions of the folding point plus one, and the positions of the folding point plus two.\n4. Loop through the input lines.\n5. For each input line, determine the folding point, the positions of the folding point plus one, and the positions of the folding point plus two.\n6. If the folding point is horizontal, assign the folding point plus one to the positions of the folding point and the positions of the folding point plus one.\n7. If the folding point is vertical, assign the folding point to the positions of the folding point.\n8. If the folding point is diagonal, assign the folding point plus one to the positions of the folding point and the positions of the folding point plus two.\n9. Loop through the 2D array.\n10. If the current cell is a \u2018.\u2019, print the positions of the folding point, the positions of the folding point plus one, and the positions of the folding point plus two.\n11. If the current cell is a \u2018#\u2019, print the positions of the folding point, the positions of the folding point plus one, and the positions of the folding point plus two.\n12. If the current cell is a \u2018.\u2019, determine the positions of the folding point, the positions of the folding point plus one, and the positions of the folding point plus two.\n13. If the current cell is a \u2018#\u2019, determine the positions of the folding point, the positions of the folding point plus one, and the positions of the folding point plus two.\n14. If the current cell is a \u2018.\u2019, determine the positions of the folding point, the positions of the folding point plus one, and the positions of the folding point plus two.\n15. If the current cell is a \u2018#\u2019, determine the positions of the folding point, the positions of the fold"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(r'Sample Input 1:\\n8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##. \\n##########\\n##########') == '3 1 3 10\\n'\nassert solution(r'Sample Input 2:\\n5 20\\n###########.#.#.#.#. \\n###########...#.###. \\n##########..##.#..## \\n###########..#.#.##. \\n###########.###...#. \\n') == '1 15 5 15\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    8 10\n        #.##..##..#\n        ####..####\n        ###.##....\n        ...#..####\n        ....##....\n        .#.##..##.\n        ##########\n        ##########\n    ''') == '''\n        3 1 3 10\n    '''\n\nassert solution('''\n    5 20\n        ###########.#.#.#.#.\n        ###########...#.###.\n        ##########..##.#..##\n        ###########..#.#.##.\n        ###########.###...#.\n    ''') == '''\n        1 15 5 15\n    '''"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_data) == expected_output, f\"Solution mismatch: {solution(input_data)}!= {expected_output}\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, got {solution(stdin)}\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"sample_input1.txt\", \"r\").read()) == \"3 1 3 10\"\nassert solution(open(\"sample_input2.txt\", \"r\").read()) == \"1 15 5 15\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##.\\n##########\\n##########') == '3 1 3 10\\n'\nassert solution('5 20\\n###########.#.#.#.#.\\n###########...#.###.\\n##########..##.#..##\\n###########..#.#.##.\\n###########.###...#.') == '1 15 5 15\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, Received: {solution(stdin)}\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"16.339203308\"\n"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"50 0.125\") == \"16.339203308\"\nassert solution(\"201 1.000\") == \"5.000000000\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == \"16.339203308\"\n"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(111) == \"111.000000000\"\nassert solution(200) == \"16.339203308\"\nassert solution(50) == \"16.339203308\"\nassert solution(500) == \"5.000000000\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"50 0.125\") == \"16.339203308\", \"Test case 1 failed\"\nassert solution(\"201 1.000\") == \"5.000000000\", \"Test case 2 failed\"\n\nimport math"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output, f\"Test failed: expected '{output}', but got '{solution(stdin)}'.\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '2\\n', 'Test 1: Expected Output: 2\\nActual Output: {}'\n\nsample_input = '''\n2 2\n0.5 1\n'''\n\nsample_output = '''\n2\n'''\n\nsample_input = sample_input.strip().split('\\n')\nsample_output = sample_output.strip().split('\\n')\n\nk, v = int(sample_input[0].strip()), int(sample_input[1].strip())\np, b = [float(x) for x in sample_input[2].strip().split()]"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\\n\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 3, \"Test Failed\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    2 2\n    0.5 1\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    4 3\n    1 11\n    0.4 1\n    \"\"\"\n) == \"3\\n\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n0.5 1\\n\") == \"2\\n\"\nassert solution(\"4 3\\n1 11\\n0.4 1\\n\") == \"3\\n\"\n"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n0.5 1\\n\") == \"2\"\nassert solution(\"4 3\\n1 11\\n0.4 1\\n\") == \"3\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 2\\n0.5 1\\n') == '2\\n'\nassert solution('4 3\\n1 11\\n0.4 1\\n') == '3\\n'"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n0.5 1\\n\") == \"2\\n\"\nassert solution(\"4 3\\n1 11\\n0.4 1\\n\") == \"3\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"Sample Output 1: 2\\n\"\nassert solution == \"Sample Output 2: 3\\n\"\n\nprint(solution)"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case_index + 1} failed: {solution(input())}!= {expected_output}.\"\n\ntest_case_index = 1\ninput_data = '''\n2 2\n0.5 1\n'''\n\nexpected_output = '''\n2\n'''\n\nsolution(input_data)"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n7 1\\n3 2\\n10 0\") == \"10.5\\n\"\nassert solution(\"3\\n2 1\\n4 0\\n0 3\") == \"-1\\n\""
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt').read()) == '10.5'"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n7 1\\n3 2\\n10 0\") == \"10.5\"\nassert solution(\"3\\n2 1\\n4 0\\n0 3\") == \"-1\""
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n7 1\\n3 2\\n10 0\\n') == '10.5'\nassert solution('3\\n2 1\\n4 0\\n0 3\\n') == '-1'"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n7 1\\n3 2\\n10 0\") == 10.5\nassert solution(\"3\\n2 1\\n4 0\\n0 3\") == -1"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n7 1\\n3 2\\n10 0\") == \"10.5\"\nassert solution(\"3\\n2 1\\n4 0\\n0 3\") == \"-1\"\n\nfrom typing import List"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n7 1\\n3 2\\n10 0') == '10.5'\nassert solution('3\\n2 1\\n4 0\\n0 3') == '-1'"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"10.5\", \"Sample Output 1\""
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Test failed: expected '{expected}', got '{solution(stdin)}'\""
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n7 1\\n3 2\\n10 0') == '10.5\\n'\nassert solution('3\\n2 1\\n4 0\\n0 3') == '-1\\n'"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(r\"\"\"2 0.5\n2 0.5\n1 0.5\n\"\"\") == \"1\\n\"\n\nassert solution(r\"\"\"2 0.5\n2 0.51\n1 0.49\n\"\"\") == \"2\\n\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 0.5\\n2 0.5\\n1 0.5\\n\") == \"1\\n\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\\n\") == \"2\\n\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 1\n"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 0.5\\n2 0.5\\n1 0.5\\n\") == \"1\\n\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\\n\") == \"2\\n\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_1) == output_1, f\"Test 1 failed: {solution(input_1)}!= {output_1}\"\nassert solution(input_2) == output_2, f\"Test 2 failed: {solution(input_2)}!= {output_2}\"\n\ninput_1 = '''\n2 0.5\n2 0.5\n1 0.5\n'''\n\ninput_2 = '''\n2 0.5\n2 0.51\n1 0.49\n'''\n\noutput_1 = '1'\noutput_2 = '2'"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 1\nassert solution() == 2"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '1\\n'\nassert solution(open('sample_input2.txt', 'r')) == '2\\n'\n\nfrom typing import List"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution( \"\"\"\n2 0.5\n2 0.5\n1 0.5\n\"\"\") == \"1\\n\"\nassert solution( \"\"\"\n2 0.5\n2 0.51\n1 0.49\n\"\"\") == \"2\\n\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5 2\\n3 3 3 3\\n0 1\\n0 3\\n1 3\\n1 2\\n2 3\") == \"yes\"\nassert solution(\"5 4 4\\n1 1 2 2 2\\n0 1\\n2 3\\n3 4\\n4 2\") == \"yes\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution_input) == expected_output, f\"Incorrect output for solution. Got: {solution(stdin)}. Expected: {expected_output}\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'yes'\nprint(\"yes\")\n"
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == 'yes\\n'\nassert solution(sample_input2) == 'yes\\n'"
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5 2\\n3 3 3 3\\n0 1\\n0 3\\n1 3\\n1 2\\n2 3\\n\") == \"yes\\n\"\nassert solution(\"5 4 4\\n1 1 2 2 2\\n0 1\\n2 3\\n3 4\\n4 2\\n\") == \"yes\\n\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"yes\"\nassert solution() == \"no\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 4, 4) == \"yes\" # one edit needed to connect all servers to the same network\nassert solution(5, 4, 2) == \"no\" # not possible to connect all servers to the same network"
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 5 2\\n3 3 3 3\\n0 1\\n0 3\\n1 3\\n1 2\\n2 3\\n') == 'yes\\n'\nassert solution('5 4 4\\n1 1 2 2 2\\n0 1\\n2 3\\n3 4\\n4 2\\n') == 'yes\\n'"
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"yes\"\nassert solution() == \"no\"\nassert solution() == \"no\"\nassert solution() == \"yes\"\nassert solution() == \"no\"\nassert solution() == \"no\"\nassert solution() == \"no\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"no\" # You can implement the solution here"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution) == \"Test passed\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Test failed for input {input()}, expected {expected}\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n5\\n5\\n5\") == \"2\\n1\\n2\\n\"\nassert solution(\"4\\n20\\n15\\n17\\n14\") == \"5\\n8\\n2\\n7\\n\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == ['2', '1', '2']\nassert solution(4) == ['5', '8', '2', '7']"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == ['2', '1', '2']\nassert solution(4) == ['5', '8', '2', '7']"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == [2, 1, 2, 5, 8, 2, 7, 5]"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == ['2', '1', '2']\nassert solution(4) == ['5', '8', '2', '7']"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output, f\"Output {solution(stdin)} does not match expected output {expected_output}\"\n"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == [2, 1, 2]\nassert solution() == [5, 8, 2]"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n5\\n5\\n5') == '2\\n1\\n2\\n'\nassert solution('4\\n20\\n15\\n17\\n14') == '5\\n8\\n2\\n7'"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\npython\\np^ main.py\\np^ -n 10\") == \"python\\npython main.py\\npython main.py -n 10\"\nassert solution(\"5\\npython\\njava\\np^\\n^^^\\n^^^\") == \"python\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 'python'\nassert solution(input()) == 'python main.py'\nassert solution(input()) == 'python main.py -n 10'\nassert solution(input()) == 'java'\nassert solution(input()) == 'def solution(stdin: str) -> str: pass'\nassert solution(input()) == ''"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Expected Output: {expected_output}\\nActual Output: {solution(input())}\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('python\\nmain.py\\np^ -n 10') == ['python', 'python main.py', 'python main.py -n 10']\nassert solution('python\\njava\\n^') == ['python', 'java', 'java', 'python', 'java', 'def solution(stdin: str) -> str:', '']\nassert solution('python\\njava\\n^\\n^') == ['python', 'java', 'java', 'python', 'java', 'def solution(stdin: str) -> str:', '']\nassert solution('python\\njava\\n^\\n^\\n^') == ['python', 'java', 'java', 'python', 'java', 'def solution(stdin: str) -> str:', '']\nassert solution('python\\njava\\n^\\n^\\n^\\n^') == ['python', 'java', 'java', 'python', 'java', 'def solution(stdin: str) -> str:', '']\nassert solution('python\\njava\\n^\\n^\\n^\\n^\\n^') == ['python', 'java', 'java', 'python', 'java', 'def solution(stdin: str) -> str:', '']\nassert solution('python\\njava\\n^\\n^\\n^\\n^\\n^\\n^') == ['python', 'java', 'java', 'python', 'java', 'def solution(stdin: str) -> str:', '']\nassert solution('python\\njava\\n^\\n^\\n^\\n^\\n^\\n^\\n^') == ['python', 'java', 'java', 'python', 'java', 'def solution(stdin: str) -> str:', '']\nassert solution('python\\njava\\n^\\n^\\n^\\n^\\n^\\n^\\n^\\n^\\n^') == ['python', 'java', 'java', 'python', 'java', 'def solution(stdin: str) -> str:', '']\nassert solution('python\\njava\\n^\\n^\\n^\\n^\\n^\\n^\\n^\\n^\\n^\\n^') == ['python', 'java', 'java', 'python', 'java', 'def solution(stdin: str) -> str:', '']\nassert solution('python\\njava\\n^\\n^\\n^\\n^\\n^\\n^\\n^\\n^\\n^\\n^\\n^') == ['python', 'java', 'java', 'python', 'java', 'def solution(stdin: str) -> str:', '']\nassert solution('python\\njava\\n^\\n^\\n^\\n^\\n^\\n^\\n^\\n^\\n^\\n^\\n^') == ['python', 'java', 'java', 'python', 'java', 'def solution(stdin: str) -> str:', '']\nassert solution('python\\njava\\n^\\n^\\n^\\n^\\n^\\n^\\n^\\n^\\n^\\n^\\n^\\n^') == ['python', 'java', 'java', 'python', 'java', 'def solution(stdin: str) -> str:', '']\nassert solution('python\\njava\\n^\\n^\\n^\\n^\\n^\\n^\\n^\\n^\\n^\\n^\\n^\\n^') == ['python', 'java', 'java', 'python', 'java', 'def solution(stdin: str) -> str:', '']\nassert solution('python\\njava\\n^\\n^\\n^\\n^\\n^\\n^\\n^\\n^\\n^\\n^\\n^\\n^\\n^') == ['python', 'java', 'java', 'python', 'java', 'def solution(stdin: str) -> str:', '']"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"python\") == \"python\"\nassert solution(\"python main.py\") == \"python main.py\"\nassert solution(\"python main.py -n 10\") == \"python main.py -n 10\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java -n 10\") == \"java -n 10\"\nassert solution(\"python java\") == \"python java\"\nassert solution(\"python java -n 10\") == \"python java -n 10\"\nassert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"10\"\nassert solution(\"100\") == \"100\"\nassert solution(\"1^100\") == \"100\"\nassert solution(\"1^100^1\") == \"110\"\nassert solution(\"1^100^2\") == \"110\"\nassert solution(\"1^100^3\") == \"110\"\nassert solution(\"1^100^4\") == \"110\"\nassert solution(\"1^100^5\") == \"110\"\nassert solution(\"1^100^6\") == \"110\"\nassert solution(\"1^100^7\") == \"110\"\nassert solution(\"1^100^8\") == \"110\"\nassert solution(\"1^100^9\") == \"110\"\nassert solution(\"1^100^10\") == \"110\"\nassert solution(\"1^100^11\") == \"110\"\nassert solution(\"1^100^12\") == \"110\"\nassert solution(\"1^100^13\") == \"110\"\nassert solution(\"1^100^14\") == \"110\"\nassert solution(\"1^100^15\") == \"110\"\nassert solution(\"1^100^16\") == \"110\"\nassert solution(\"1^100^17\") == \"110\"\nassert solution(\"1^100^18\") == \"110\"\nassert solution(\"1^100^19\") == \"110\"\nassert solution(\"1^100^20\") == \"110\"\nassert solution(\"1^100^21\") == \"110\"\nassert solution(\"1^100^22\") == \"110\"\nassert solution(\"1^100^23\") == \"110\"\nassert solution(\"1^100^24\") == \"110\"\nassert solution(\"1^100^25\") == \"110\"\nassert solution(\"1^100^26\") == \"110\"\nassert solution(\"1^100^27\") == \"110\"\nassert solution(\"1^100^28\") == \"110\"\nassert solution(\"1^100^29\") == \"110\"\nassert solution(\"1^100^30\") == \"110\"\nassert solution(\"1^100^31\") == \"110\"\nassert solution(\"1^100^32\") == \"110\"\nassert solution(\"1^100^33\") == \"110\"\nassert solution(\"1^100^34\") == \"110\"\nassert solution(\"1^100^35\") == \"110\"\nassert solution(\"1^100^36\") == \"110\"\nassert solution(\"1^100^37\") == \"110\"\nassert solution(\"1^100^38\") == \"110\"\nassert solution(\"1^100^39\") == \"110\"\nassert solution(\"1^100^40\") == \"110\"\nassert solution(\"1^100^41\") == \"110\"\nassert solution(\"1^100^42\") == \"110\"\nassert solution(\"1^100^43\") == \"110\"\nassert solution(\"1^100^44\") == \"110\"\nassert solution(\"1^100^45\") == \"110\"\nassert solution(\"1^1"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, \"Solution does not match the expected output.\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"python\"\nassert solution(input()) == \"python main.py\"\nassert solution(input()) == \"python main.py -n 10\"\nassert solution(input()) == \"java\"\nassert solution(input()) == \"java\"\nassert solution(input()) == \"java\"\nassert solution(input()) == \"def solution(stdin: str) -> str:\"\nassert solution(input()) == \"def solution(stdin: str) -> str:\"\n"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n1\npython\np^ main.py\n^ -n 10\n''') == '''\npython\npython main.py\npython main.py -n 10\n'''\n\nassert solution('''\n2\npython\njava\n^\n^^^\n^^^\n''') == '''\npython\njava\njava\npython\njava\n"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == []\nassert solution(\"python\") == [\"python\"]\nassert solution(\"python main.py\") == [\"python main.py\"]\nassert solution(\"python main.py -n 10\") == [\"python main.py\", \"python main.py -n 10\"]\nassert solution(\"java\") == [\"java\"]\nassert solution(\"java main.py\") == [\"java main.py\"]\nassert solution(\"python java\") == [\"python java\"]\nassert solution(\"python java -n 10\") == [\"python java\", \"python java -n 10\"]\n\nsolution = '''\n"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input(\"3\\npython\\np^ main.py\\n^ -n 10\\n\")) == \"python\\npython main.py\\npython main.py -n 10\\n\"\nassert solution(input(\"5\\npython\\njava\\n^\\n^^^\\n^^^\\n\")) == \"python\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('tihssnetnceemkaesprfecetsesne') == 'this sentence makes perfect sense'\nassert solution('hitehre') == 'impossible'"
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\", \"Test 1 failed\"\nassert solution(\"hitehre\") == \"impossible\", \"Test 2 failed\"\n\nfrom typing import List"
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('tihssnetnceemkaesprfecetsesne') == 'this sentence makes perfect sense'\nassert solution('hitehre') == 'impossible'"
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('tihssnetnceemkaesprfecetsesne', 5,'makes', 'perfect','sense','sentence', 'this') == 'this sentence makes perfect sense'\nassert solution('hitehre', 2, 'there', 'hello') == 'impossible'"
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\") == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\", 5, \"makes\", \"perfect\", \"sense\", \"sentence\", \"this\") == \"this sentence makes perfect sense\\n\"\nassert solution(\"hitehre\", 2, \"there\", \"hello\") == \"impossible\\n\"\n"
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'this sentence makes perfect sense'"
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\"\n\nassert solution(\"hitehre\") == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\", 5, \"makes\", \"perfect\", \"sense\", \"sentence\", \"this\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\", 2, \"there\", \"hello\") == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('tihssnetnceemkaesprfecetsesne', 5) == 'this sentence makes perfect sense', \"Solution 1 not working as expected.\"\n\nassert solution('hitehre', 2) == 'impossible', \"Solution 2 not working as expected.\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"16\\n\", \"Please implement the solution for the problem\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'Output a single line with a single integer representing the number of possible arrangements, modulo $(10^{9}+9)$.'"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == output, f\"Test failed: {input()}!= {output}\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"4\"\nassert solution(\"2 2\") == \"16\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"4\\n\"\nassert solution(\"2 2\") == \"16\\n\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"4\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"4\\n\"\nassert solution(\"2 2\") == \"16\\n\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"4\"\nassert solution(\"2 2\") == \"16\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"4\"\nassert solution() == \"16\"\n\nfrom typing import List"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"4\"\nassert solution(\"2 2\") == \"16\"\n\nfrom typing import List"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n6\nabcbab\n2\ncb\ncbab\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n4\nabab\n2\nbac\nbaba\n\"\"\"\n) == \"4\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='Sample Input 1\\n6\\nabcbab\\n2\\ncb\\ncbab\\nSample Output 1\\n2\\n\\nSample Input 2\\n4\\abab\\n2\\nbac\\nbaba\\nSample Output 2\\n4\\ndef solution(stdin: str) -> str:\\n    pass') == '2\\n'"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\nabab\\n2\\nbac\\nbaba\") == 4\nprint(\"Test Passed\")"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1, \"abab\") == 4\nassert solution(2, \"cb\") == 2\nassert solution(3, \"abcde\") == 5"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\nabcbab\\n2\\ncb\\ncbab\") == 2\n\nassert solution(\"6\\nabcbab\\n2\\ncb\\ncbab\") == 2\n\nassert solution(\"4\\nabcbab\\n2\\ncb\\ncbab\") == 2\n\nassert solution(\"1\\n\") == 0\n\nassert solution(\"6\\nabcbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\") == 6\n\nassert solution(\"4\\nabcbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\") == 6\n\nassert solution(\"1\\n\") == 0\n\nassert solution(\"6\\nabcbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\") == 10\n\nassert solution(\"4\\nabcbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\\n2\\ncb\\ncbab\") == 10\n\nassert solution(\"1\\n\") == 0"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([6, \"abcbab\", 2, \"cb\", \"cbab\"]) == \"2\"\nassert solution([4, \"abab\", 2, \"bac\", \"baba\"]) == \"4\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input1) == '2'\nassert solution(input2) == '4'"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected, f\"Expected {expected}, got {solution}\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Expected:\\n{}\\nReceived:\\n{}\".format(output(), solution(input()))\n"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"50\\n4\\n110 10\\n80 10\\n80 0\\n110 0\\n\") == \"6\\n85\\n90\\n95\\n100\\n105\"\nassert solution(\"24\\n3\\n10 10\\n30 10\\n20 20\\n\") == \"4\\n17.071067\\n20\\n22.928932\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"50\\n4\\n110 10\\n80 10\\n80 0\\n110 0\\n\") == \"6\\n85\\n90\\n95\\n100\\n105\\n\"\nassert solution(\"24\\n3\\n10 10\\n30 10\\n20 20\\n\") == \"4\\n17.071067\\n20\\n22.928932\\n\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"50\\n4\\n110 10\\n80 10\\n80 0\\n110 0\\n\") == \"6\\n85\\n90\\n95\\n100\\n105\\n\"\nassert solution(\"24\\n3\\n10 10\\n30 10\\n20 20\\n\") == \"4\\n17.071067\\n20\\n22.928932\\n\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"The output and the sample output are not matching.\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '123\\n'\n"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\"6\n85\n90\n95\n100\n105\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Test failed for input {stdin} expected output {expected}\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output\nprint(f\"Case {case}: {output}\")"
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin: str) == \"yes\"\n"
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\"\n\nfrom typing import List"
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"10 11\") == \"yes\"\nassert solution(stdin=\"10 7\") == \"yes\"\n"
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"no\" # remove this line to test the correctness of the solution\n"
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input(\"b: \")) == \"yes\"\nassert solution(input(\"b: \")) == \"yes\"\n"
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"yes\" or solution(input()) == \"no\"\n"
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"yes\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10 11') == 'yes'\nassert solution('10 7') == 'yes'"
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input(\"Enter the number of intervals in the set: \")) == output(\"The length of the longest sequence is:\")"
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 4\\n2 5\\n1 6\") == \"3\\n1 6\\n2 5\\n3 4\"\n\nassert solution(\"5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40\") == \"3\\n10 60\\n30 50\\n30 40\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 4\\n2 5\\n1 6\") == \"3\\n1 6\\n2 5\\n3 4\"\nassert solution(\"5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40\") == \"3\\n10 60\\n30 50\\n30 40\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"The solution provided is incorrect. Please make sure you provided the correct input and output.\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '''3\n1 6\n2 5\n3 4\n'''\n\nfrom typing import List"
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '''\n3\n1 6\n2 5\n3 4\n'''"
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 4\\n2 5\\n1 6\\n\") == \"3\\n1 6\\n2 5\\n3 4\\n\"\nassert solution(\"5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40\\n\") == \"3\\n10 60\\n30 50\\n30 40\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == expected, f\"Expected: {expected}, Actual: {solution()}\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 4\\n2 5\\n1 6\") == \"3\\n1 6\\n2 5\\n3 4\\n\"\nassert solution(\"5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40\") == \"3\\n10 60\\n30 50\\n30 40\\n\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n3\n3 4\n2 5\n1 6\n''') == '''\n3\n1 6\n2 5\n3 4\n'''\n\nassert solution('''\n5\n10 30\n20 40\n30 50\n10 60\n30 40\n''') == '''\n3\n10 60\n30 50\n30 40\n'''"
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"5 1\\n\"\n    \"10 10 5\\n\"\n    \"9 8 10\\n\"\n    \"4 12 20\\n\"\n    \"12 4 8\\n\"\n    \"2 3 16\"\n) == \"5836\"\n\nassert solution(\n    \"5 2\\n\"\n    \"10 10 5\\n\"\n    \"9 8 10\\n\"\n    \"4 12 20\\n\"\n    \"12 4 8\\n\"\n    \"2 3 16\"\n) == \"1828\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\\n\") == 5836\nassert solution(\"5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\\n\") == 1828\n"
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 5836, \"Test Case 1 failed!\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"5836\\n\"\nassert solution(\"5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"1828\\n\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 5836, \"The function should return 5836.\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"5836\\n\"\nassert solution(\"5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"1828\\n\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == 5836, \"Solution not correct!\"\nprint(\"Solution correct!\")"
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"5836\\n\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 5836\n"
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"5836\", \"The function should return 5836.\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99\\n3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200') == '50\\n'\nassert solution('3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200') == 'impossible\\n'\n"
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99\\n') == 50, \"The output is incorrect.\"\nassert solution('3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200\\n') == \"impossible\", \"The output is incorrect.\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == \"50\", \"The correct output is incorrect.\"\nassert solution(sample_input_2) == \"impossible\", \"The correct output is incorrect.\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'impossible' # Replace this line with your solution\n"
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99\\n') == '50\\n'\nassert solution('3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200\\n') == 'impossible\\n'"
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input1) == \"50\", \"Sample Input 1 failed\"\nassert solution(input2) == \"impossible\", \"Sample Input 2 failed\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"50\\n\"\nassert solution() == \"impossible\\n\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '50', 'The given solution is incorrect'\nassert solution() == 'impossible', 'The given solution is incorrect'"
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(data) == expected, f\"Test case {i+1} failed: got '{solution(data)}', expected '{expected}'\" for i, (data, expected) in enumerate(zip(input_data, output_data))"
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99\") == \"50\\n\", \"Incorrect output\"\nassert solution(\"3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200\") == \"impossible\\n\", \"Incorrect output\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5.0\") == \"0 0 0 0 1\\n\", \"Sample Input 1\"\nassert solution(\"4.5\") == \"0 0 0 1 1\\n\", \"Sample Input 2\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5.0) == \"0 0 0 0 1\"\nassert solution(4.5) == \"0 0 0 1 1\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '0 0 0 0 1'\n\nimport math"
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5.0\") == \"0 0 0 0 1\"\nassert solution(\"4.5\") == \"0 0 0 1 1\"\n"
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5.0) == \"0 0 0 0 1\", \"Test case 1 failed\"\nassert solution(4.5) == \"0 0 0 1 1\", \"Test case 2 failed\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5.0\") == \"0 0 0 0 1\"\nassert solution(\"4.5\") == \"0 0 0 1 1\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5.0\") == \"0 0 0 0 1\"\nassert solution(\"4.5\") == \"0 0 0 1 1\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\") == \"8\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\") == \"3\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\") == \"8\", \"Test 1 failed\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\") == \"3\", \"Test 2 failed\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('8 3 1\\n1 7 8 2 6 4 3 5\\n') == '8'\nassert solution('8 2 1\\n1 7 8 2 6 4 3 5\\n') == '3'"
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt').read()) == '3'"
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\") == \"8\\n\", \"The output should be 8\\n\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\") == \"3\\n\", \"The output should be 3\\n\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\") == \"8\\n\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\") == \"3\\n\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\\n\") == \"8\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\\n\") == \"3\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == expected_output, f\"Expected output: {expected_output}, but got: {solution(sample_input)}\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"Output 1\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(input())) == \"8\"\nassert solution(str(input())) == \"3\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n2 3 4 1\") == \"3\\n\"\nassert solution(\"6 3\\n2 2 2 4 4 4\") == \"4\\n\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3\\n\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n2 3 4 1\\n\") == \"3\\n\"\nassert solution(\"6 3\\n2 2 2 4 4 4\\n\") == \"4\\n\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n2 3 4 1\\n\") == \"3\"\nassert solution(\"6 3\\n2 2 2 4 4 4\\n\") == \"4\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n2 3 4 1\\n\") == \"3\"\nassert solution(\"6 3\\n2 2 2 4 4 4\\n\") == \"4\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(None) == \"0\"\nassert solution(\"4 2\\n2 3 4 1\") == \"3\"\nassert solution(\"6 3\\n2 2 2 4 4 4\") == \"4\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 2\\n2 3 4 1\\nSample Output 1:\\n3\\n') == '3\\n'\nassert solution('6 3\\n2 2 2 4 4 4\\nSample Output 2:\\n4\\n') == '4\\n'"
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n2 3 4 1\\n\") == \"3\"\nassert solution(\"6 3\\n2 2 2 4 4 4\\n\") == \"4\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4, 2) == 3, \"Incorrect output\" # sample output\nassert solution(6, 3) == 4, \"Incorrect output\" # sample output"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n1 1 1.732050\n''') == '1.732050808'\nassert solution('''\n1 1 3.0\n''') == '-1'"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1, 1, 1.732050), 1.732050808\nassert solution(1, 1, 3.0), -1\n\nfrom typing import Tuple"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 1 1.732050') == 1.732050808\nassert solution('1 1 3.0') == -1"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 1.732050808\nassert solution(1, 1, 1.732050) == 1.732050808\nassert solution(1, 1, 3) == -1"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1.732050\") == \"1.732050808\"\nassert solution(\"1 1 3.0\") == \"-1\"\n"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1.732050808\""
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1.732050\") == 1.732050808, \"Incorrect output for sample input 1\"\nassert solution(\"1 1 3.0\") == -1, \"Incorrect output for sample input 2\""
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"1 1 1.732050\\n1 1 3.0\\n\") == \"1.732050808\"\nassert solution(stdin=\"1 1 3.0\\n2 2 2.5\\n3 3 2.0\\n4 4 1.5\\n\") == \"-1\"\n\nfrom typing import List"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\n"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"sample_input_1.txt\", \"r\")) == \"1.732050808\\n\"\nassert solution(open(\"sample_input_2.txt\", \"r\")) == \"-1\\n\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\\n\") == \"2.4999999987500003\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\\n\") == \"9.999999999000002\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\\n\") == \"2.4999999987500003\\n\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\\n\") == \"9.999999999000002\\n\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\\n\") == \"2.4999999987500003\\n\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\\n\") == \"9.999999999000002\\n\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\\n\") == \"2.4999999987500003\\n\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\\n\") == \"9.999999999000002\\n\"\n"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2.4999999987500003\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '2.4999999987500003'\nassert solution() == '9.999999999000002'"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\\n\") == \"2.4999999987500003\\n\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\\n\") == \"9.999999999000002\\n\"\n"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Error: expected '{output}' but got '{solution(input())}'\"\n"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\\n\") == \"2.4999999987500003\\n\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\\n\") == \"9.999999999000002\\n\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"Output here\", \"Test Failed\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n\") == \"0\\n3\\n\"\nassert solution(\"2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n\") == \"3\\n2\\n1\\n0\\n\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Output goes here\", \"Test failed!\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 1 5 2\") == \"0\\n3\\n\"\nassert solution(\"1 2 1 5 2\") == \"0\\n3\\n\"\nassert solution(\"1 2 1 5 2\") == \"0\\n3\\n\"\nassert solution(\"1 2 1 5 2\") == \"0\\n3\\n\"\nassert solution(\"1 2 1 5 2\") == \"0\\n3\\n\"\nassert solution(\"1 2 1 5 2\") == \"0\\n3\\n\"\nassert solution(\"1 2 1 5 2\") == \"0\\n3\\n\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\") == \"0\\n3\\n2\\n1\\n0\"\nassert solution(\"6 3\\n2 1 6\\n1 1 5 1 2\\n2 1 6\") == \"0\\n3\\n2\\n1\\n0\"\nassert solution(\"4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\") == \"3\\n2\\n1\\n0\"\nassert solution(\"4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\") == \"3\\n2\\n1\\n0\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 3\\n2 1 6\\n1 1 5 1 2\\n2 1 6\") == \"0\\n3\"\nassert solution(\"4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\") == \"3\\n2\\n1\\n0\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 2 6') == '0\\n3\\n'\nassert solution('2 1 6') == '0\\n3\\n'\nassert solution('2 2 6') == '1\\n0\\n'\nassert solution('1 1 5 1 2') == '3\\n'\nassert solution('2 1 6') == '0\\n3\\n'\nassert solution('1 1 4 3 4') == '3\\n'\nassert solution('2 2 2') == '1\\n0\\n'\nassert solution('2 3 3') == '2\\n1\\n'\nassert solution('2 4 4') == '2\\n1\\n'"
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6 3\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n') == '0\\n3\\n'\nassert solution('4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\\n') == '3\\n2\\n1\\n0\\n'"
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 3\\n2 1 6\\n1 1 5 1 2\\n2 1 6\") == \"0\\n3\\n\"\nassert solution(\"4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\") == \"3\\n2\\n1\\n0\\n\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == sample_output_1, f\"Test case 1 failed: {solution(sample_input_1)}!= {sample_output_1}\"\nassert solution(sample_input_2) == sample_output_2, f\"Test case 2 failed: {solution(sample_input_2)}!= {sample_output_2}\"\n\nfrom typing import List"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '1'\nassert solution(open('input.txt', 'r')) == '4'"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 7 1000000007') == 1\nassert solution('3 2 1000000007') == 4"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\"\n"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"4\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Expected output {output}, but got {solution(input())}\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 1\nassert solution() == 4"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 7 1000000007\") == \"1\"\nassert solution(\"3 2 1000000007\") == \"4\"\n\nfrom typing import List"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 7 1000000007') == '1\\n', 'Incorrect output'\nassert solution('3 2 1000000007') == '4\\n', 'Incorrect output'"
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Output\", \"Function should return 'Output', not {}\".format(solution(stdin))\n"
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 10\\n6\\n11\\n3 5\\n8\\n\") == \"8\"\nassert solution(\"10 10\\n6\\n11\\n3 5\\n8\\n\") == \"8\"\nassert solution(\"10 10\\n6\\n11\\n3 5\\n8\\n\") == \"8\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Output\", \"Test failed for input: \" + input()"
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == solution(stdin), \"Expected the same output for both solutions\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Output the number of grey cells the hedgehog visits.\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10 10\\n6\\n11') == '5'\nassert solution('3 5\\n11') == '8'"
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    input=\"10 10\\n6\\n\"\n) == \"5\\n\"\n\nassert solution(\n    input=\"3 5\\n11\\n\"\n) == \"8\\n\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"Output\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 10\\n6\\n\") == \"5\"\nassert solution(\"3 5\\n11\\n\") == \"8\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 10\\n6\\n11\\n3 5\\n11\") == \"5\"\nassert solution(\"3 5\\n11\\n10 10\\n10 10\\n10 10\\n10 10\") == \"8\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    input = \"\"\"\n    4 5 3\n    1 2 3\n    0 1 1\n    0 3 1\n    0 2 2\n    1 2 1\n    3 2 1\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    input = \"\"\"\n    4 5 3\n    1 2 3\n    0 1 1\n    0 3 1\n    0 2 1\n    1 2 1\n    3 2 1\n    \"\"\"\n) == \"3\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\") == 2\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\") == 3\n"
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == sample_output, \"Test case failed.\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\") == \"2\"\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\") == \"3\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'Output', 'Test failed'\n"
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == output, f\"Test case {i+1} failed\" for i, input, output in enumerate([list(map(int, stdin.strip().split())) for i in range(1, 4)]), range(1, 4):\n    assert solution(input) == output, f\"Test case {i+1} failed\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\") == 2\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\") == 3"
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == \"2\"\nassert solution(sample_input_2) == \"3\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 'Output a single integer on a line by itself, the maximum number of customers Fluttershy can serve.'"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3\\n\"\nassert solution(stdin) == \"3\\n\""
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 3, \"Expected output: 3, got: {}\".format(solution())"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 3\\n10 20 30\\n5 5 10\\n2 20\\n1 30\\n1 32\\n3 120\\n') == '3'"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"Output: 3\\n\", \"Please implement the solution function.\""
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() =="
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n10 20 30\\n5 5 10\\n2 20\\n1 30\\n1 32\\n3 120\") == 3\nassert solution(\"3 1\\n10\\n10\\n1 10\\n1 10\\n1 10\") == 3"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n4 3\n10 20 30\n5 5 10\n2 20\n1 30\n1 32\n3 120\n''') == '3\\n'"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n10 20 30\\n5 5 10\\n2 20\\n1 30\\n1 32\\n3 120\\n\") == \"3\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2) == 1\nassert solution(3) == 5"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == \"1\"\nassert solution(2) == \"1\"\nassert solution(3) == \"1\"\nassert solution(4) == \"2\"\nassert solution(5) == \"3\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == 1\nassert solution(7) == 5"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n') == '1\\n'\nassert solution('3\\n') == '5\\n'"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 1, \"The solution for the given input is incorrect\"\nprint(\"Correct!\")"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == \"1\"\nassert solution(2) == \"1\"\nassert solution(3) == \"1\"\nassert solution(4) == \"1\"\nassert solution(5) == \"1\"\nassert solution(6) == \"1\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == 'The number of possible sets of pairs is: 1168261955.\\n'\nassert solution(open('input1.txt', 'r')) == 'The number of possible sets of pairs is: 586070027.\\n'\nassert solution(open('input2.txt', 'r')) == 'The number of possible sets of pairs is: 686940600.\\n'"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 5\nassert solution(10) == 1\n\nfrom itertools import combinations\nimport math"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4) == \"1\"\nassert solution(5) == \"5\"\nassert solution(7) == \"7\""
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == expected1, f\"Expected {expected1}, got {solution(input1)}\"\nassert solution(input2) == expected2, f\"Expected {expected2}, got {solution(input2)}\""
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n0 11 9\\n1 0 10\\n0 0 0\") == \"2\\n\"\nassert solution(\"4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\") == \"-1\\n\""
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\\n\""
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n0 11 9\\n1 0 10\\n0 0 0\") == 2\nassert solution(\"4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\") == -1"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\"\nassert solution() == \"-1\""
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"3 1\\n0 11 9\\n1 0 10\\n0 0 0\\n4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\") == \"2\"\nassert solution(stdin=\"4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\") == \"-1\"\n"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n3 1\n0 11 9\n1 0 10\n0 0 0\n''') == '2\\n'\n\nassert solution('''\n4 3\n0 1 0 19\n0 0 2 0\n0 5 0 3\n0 0 0 0\n''') == '-1\\n'"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"example1.txt\").read()) == \"2\\n\"\nassert solution(open(\"example2.txt\").read()) == \"-1\\n\""
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0 11 9\\n1 0 10\\n0 0 0') == '2'\nassert solution('0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0') == '-1'"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\n# sample_input = (3, 1)\\n# sample_output = 2\\n# sample_input = (4, 3)\\n# sample_output = -1\\n# sample_input = (2, 2)\\n# sample_output = 1\\n\\n# Test cases\\n# sample_input = (4, 3)\\n# sample_output = -1\\n# sample_input = (2, 2)\\n# sample_output = 1\\n\\n# Test cases\\n# sample_input = (2, 2)\\n# sample_output = 1\\n\\n# Test cases\\n# sample_input = (3, 1)\\n# sample_output = 2\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\"\nassert solution(\"2 1 0 1\\n0 1 100000\") == \"2 100000 1\\n0 1 100000\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4 5 0 3\n0 1 10\n1 2 1\n1 3 1\n0 2 1\n2 3 10\n\"\"\") == \"\"\"\n4 3 5\n0 1 2\n0 2 1\n1 2 1\n1 3 1\n2 3 2\n\"\"\"\n\nassert solution(\"\"\"\n2 1 0 1\n0 1 100000\n\"\"\") == \"\"\"\n2 100000 1\n0 1 100000\n\"\"\"\n\nassert solution(\"\"\"\n2 1 0 1\n0 1 100000\n\"\"\") == \"\"\"\n2 100000 1\n0 1 100000\n\"\"\"\n\nassert solution(\"\"\"\n4 5 0 3\n0 1 10\n1 2 1\n1 3 1\n0 2 1\n2 3 10\n\"\"\") == \"\"\"\n4 3 5\n0 1 2\n0 2 1\n1 2 1\n1 3 1\n2 3 2\n\"\"\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\"\n\nassert solution(\"2 1 0 1\\n0 1 100000\") == \"2 100000 1\\n0 1 100000\"\n\nassert solution(\"\") == \"\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\"\nassert solution(\"2 1 0 1\\n0 1 100000\") == \"2 100000 1\\n0 1 100000\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n4 5 0 3\n0 1 10\n1 2 1\n1 3 1\n0 2 1\n2 3 10\n''') == '''\n4 3 5\n0 1 2\n0 2 1\n1 2 1\n1 3 1\n2 3 2\n'''\n\nassert solution('''\n2 1 0 1\n0 1 100000\n''') == '''\n2 100000 1\n0 1 100000\n'''\n\nassert solution('''\n2 1 10 0\n100000 0 100000\n''') == '''\n2 100000 1\n0 1 100000\n'''\n\nassert solution('''\n2 1 10 0\n100000 0 100000\n100000 0 100000\n''') == '''\n2 100000 2\n0 1 100000\n0 2 100000\n'''"
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\\n\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n\"\nassert solution(\"2 1 0 1\\n0 1 100000\\n\") == \"2 100000 1\\n0 1 100000\\n\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\\n') == '4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n'\nassert solution('2 1 0 1\\n0 1 100000\\n') == '2 100000 1\\n0 1 100000\\n'"
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str) == expected_output, f\"Solution failed for input: {input_str} and expected output: {expected_output}\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n4 5 0 3\n0 1 10\n1 2 1\n1 3 1\n0 2 1\n2 3 10\n''') == '''\n4 3 5\n0 1 2\n0 2 1\n1 2 1\n1 3 1\n2 3 2\n'''\n\nassert solution('''\n2 1 0 1\n0 1 100000\n''') == '''\n2 100000 1\n0 1 100000\n'''\n\nassert solution('''\n4 5 0 3\n0 1 10\n1 2 1\n1 3 1\n0 2 1\n2 3 10\n''') == '''\n4 3 5\n0 1 2\n0 2 1\n1 2 1\n1 3 1\n2 3 2\n'''\n\nassert solution('''\n2 1 0 1\n0 1 100000\n''') == '''\n2 100000 1\n0 1 100000\n'''"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\\n\") == \"3 5\\n\", \"Test 1 failed\"\nassert solution(\"2 3\\nS.M\\nM..\\n\") == \"2 0\\ndef solution(stdin: str) -> str:\n    pass\", \"Test 2 failed\"\n"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input {input()}, expected output: {expected_output}\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test Case {i+1} failed: expected output {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Test failed: solution({input()})!= expected\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3\\nSMS\\nMMS') == '3 5\\n'\nassert solution('2 3\\nS.M\\nM..') == '2 0\\n'"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\\n\") == \"3 5\\n\"\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\\n\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\") == \"3 5\"\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\") == \"3 5\"\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\\n\") == \"3 5\\n\", \"Sample Output 1\"\nassert solution(\"2 3\\nS.M\\nM..\\n\") == \"2 0\\n\", \"Sample Output 2\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\") == \"2\\n3 c\\n6 c\\n\"\nassert solution(\"6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n\") == \"1\\n6 b\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"3\\n0 B\\n1 B\\n2 E a\\n2 S\\n\") == \"1\\n6 b\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == \"2\\n3 c\"\nassert solution(input2) == \"1\\n6 b\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == \"2\\n3 c\"\nassert solution(sample_input_2) == \"1\\n6 b\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a') == 2\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == 1\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == 1\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == 1\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == 1\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == 1\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == 1\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == 1\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == 1\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == 1\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == 1\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == 1\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == 1\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == 1\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == 1\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == 1\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == 1\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == 1\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == 1\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == 1\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == 1\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == 1\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == 1\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == 1\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == 1\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == 1\nassert solution('"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == ['1', '6', '6']\nassert solution(4) == ['1', '6', '6']\nassert solution(5) == ['1', '6', '6']\nassert solution(6) == ['1', '6', '6']\nassert solution(7) == ['1', '6', '6']\nassert solution(8) == ['1', '6', '6']\nassert solution(9) == ['1', '6', '6']\nassert solution(10) == ['1', '6', '6']\nassert solution(11) == ['1', '6', '6']\nassert solution(12) == ['1', '6', '6']\nassert solution(13) == ['1', '6', '6']"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass'\nassert solution('0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\\n') == '2\\n3 c\\n6 c\\n'\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == '1\\n6 b\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\\n') == '2\\n3 c\\n6 c\\n'\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == '1\\n6 b\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"test_input.txt\", \"r\").read()) == \"2\\n3 c\\n6 c\\n\"\nassert solution(open(\"test_input_1.txt\", \"r\").read()) == \"2\\n3 c\\n6 c\\n\"\nassert solution(open(\"test_input_2.txt\", \"r\").read()) == \"1\\n6 b\\n\"\n"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([13, \"0 B\", \"1 B\", \"2 E a\", \"2 E b\", \"2 S\", \"5 G a\", \"5 T a\", \"5 E a\", \"5 E b\", \"1 S\", \"10 E a\", \"10 G b\", \"1 T a\"]) == \"2\\n3 c\\n6 c\\n\"\nassert solution([6, \"0 B\", \"1 B\", \"1 T a\", \"2 E a\", \"2 S\", \"5 T a\"]) == \"1\\n6 b\\n\"\nassert solution([6, \"0 B\", \"1 B\", \"1 T a\", \"2 E a\", \"2 S\", \"5 T a\", \"5 T a\"]) == \"1\\n6 b\\n\"\nassert solution([6, \"0 B\", \"1 B\", \"1 T a\", \"2 E a\", \"2 S\", \"5 T a\", \"5 T a\", \"5 T a\"]) == \"1\\n6 b\\n\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('test_input.txt', 'r')) == '2\\n3 c\\n6 c\\n'"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''13\n0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a''') == '''2\n3 c\n6 c\n'''\n\nassert solution('''6\n0 B\n1 B\n1 T a\n2 E a\n2 S\n5 T a\nSample Output 2:\n1\n6 b\n"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 5\\n288 291\\n\") == \"40\\n76\\n\", \"Test case 1 failed\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"tests/sample_input.txt\").readline().strip()) == \"40\\n\"\nassert solution(open(\"tests/sample_input.txt\").readline().strip()) == \"76\\n\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 5\") == \"40\"\nassert solution(\"288 291\") == \"76\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 5\\n288 291\") == \"40\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"1 5\\n288 291\\n\") == \"40\\n76\\n\", \"Test 1 Failed\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5\") == \"40\"\nassert solution(\"288 291\") == \"76\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 5\") == \"40\"\nassert solution(\"288 291\") == \"76\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 5\") == \"40\\n\"\nassert solution(\"288 291\") == \"76\\n\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Test Failed!\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\nprint(\"OK\")\n"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([3, 2]) == (\"COG\", 3)\nassert solution([2, 3]) == (0, -1)"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"COG\", \"Test case 1\"\nassert solution(2) == \"0\", \"Test case 2\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) =="
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"COG\") == \"COG\", \"Error: Expected 'COG', got '{}' instead.\".format(solution(\"COG\"))\nassert solution(\"DOG\") == \"DOG\", \"Error: Expected 'DOG', got '{}' instead.\".format(solution(\"DOG\"))\nassert solution(\"COT\") == \"COT\", \"Error: Expected 'COT', got '{}' instead.\".format(solution(\"COT\"))"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"CAT\") == \"COG\", \"Incorrect solution\"\nassert solution(\"DOG\") == \"COG\", \"Incorrect solution\"\nassert solution(\"COT\") == \"COG\", \"Incorrect solution\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == \"COG\"\nassert solution(open(\"sample_input.txt\", \"r\")) == \"0\"\nassert solution(open(\"sample_input.txt\", \"r\")) == \"0\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\nCAT\\nDOG\\nCOT\") == \"COG\"\nassert solution(\"2\\nCAT\\nDOG\") == \"0\"\nassert solution(\"\") == \"0\"\nassert solution(\"2\\nDOG\\nCOT\") == \"0\"\nassert solution(\"3\\nDOG\\nCOT\\nCAT\") == \"COG\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output\n"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == ['COG', 3]\nprint(\"PASSED\")\n"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 1\") == \"9\\n\", \"Test 1\"\nassert solution(\"4 3\") == \"6\\n\", \"Test 2\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Expected output '{expected}', got '{solution(stdin)}'.\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2\n\nfrom typing import List"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"6\\n\", \"Sample Output 2\"\nprint(\"Sample Output 1: 9\")"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 1\") == \"9\"\nassert solution(\"4 3\") == \"6\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output, f\"Got '{solution(stdin)}', expected '{expected_output}'\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"9\""
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == 3"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"-1\"\n\nfrom typing import List"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 5\\n/.V.\\n./.V.\\n..#..\\n.V.#.\\n\\.V./\") == 3\nassert solution(\"2 5\\nV...\\nH...V\") == -1\nassert solution(\"5 5\\n/.V.\\n./.V.\\n..#..\\n.V.#.\\n\\.V./\") == 3\nassert solution(\"2 5\\nV...\\nH...V\") == -1"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n5 5\n/.V.\\\n./.V.\n..#..\n.V.#.\n\\.V./\n\"\"\") == 3\n\nassert solution(\"\"\"\n2 5\nV...\\\nH...V\n\"\"\") == -1"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == output_data, f\"Test case {i+1} failed\" for i, (input_data, output_data) in enumerate(zip(input_list, output_list))"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\\n\""
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 5\\n/.V.\\n./.V. \\n..#.. \\n.V.#. \\n.\\\\V.\\n\") == 3\nassert solution(\"2 5\\nV...\\nH...V\\n\") == -1\n"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    '''\n    5 5\n   .V.\\\n   ./.V.\n   ..#..\n   .V.#.\n    \\.V./\n    '''\n) == 3\n\nassert solution(\n    '''\n    2 5\n    V...\\\n    H...V\n    '''\n) == -1"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    5 5\n    /.V.\\\n   ./.V.\n   ..#..\n   .V.#.\n    \\.V./\n    \"\"\"\n) == 3\n\nassert solution(\n    \"\"\"\n    2 5\n    V...\\\n    H...V\n    \"\"\"\n) == -1"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\").read()) == \"The quick brown fox jumps over the lazy dog.\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == 'The quick brown fox jumps over the lazy dog.'\nassert solution(sample_input2) == 'AMBIGUOUS'"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('n fox jumps ove\\nuick brown f\\ny dog.') == 'The quick brown fox jumps over the lazy dog.'\nassert solution('cdefghi\\nabcdefg') == 'AMBIGUOUS'\n\nfrom typing import List"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"n fox jumps ove\\nuick brown f\\nThe quick brown fox jumps over the lazy dog.\") == \"The quick brown fox jumps over the lazy dog.\"\nassert solution(\"cdefghi\\nefgijk\\nefgijx\\nabcdefg\") == \"AMBIGUOUS\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin: str) == 'AMBIGUOUS'"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'The quick brown fox jumps over the lazy dog.'"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == \"The quick brown fox jumps over the lazy dog.\"\n"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"AMBIGUOUS\"\n"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"The quick brown fox jumps over the lazy dog.\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''5 6\n-3 -2 3\n-2 -2 4\n2 3 3\n-1 1 2\n0 1 4\n2 5 1''') == '''--+0-'''\n\nassert solution('''3 2\n1 2 1\n-2 0 2''') == '''0+-'''"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    '''\n    5 6\n    3 -2 3\n    2 -2 4\n    2 3 3\n    -1 1 2\n    0 1 4\n    2 5 1\n    '''\n) == '''\n0+-\n'''\n\nassert solution(\n    '''\n    3 2\n    1 2 1\n    -2 0 2\n    '''\n) == '''\n0+-\n'''\n\nassert solution(\n    '''\n    10 20\n    3 -2 3\n    2 -2 4\n    2 3 3\n    -1 1 2\n    0 1 4\n    2 5 1\n    '''\n) == '''\n-00000\n'''\n\nassert solution(\n    '''\n    10 20\n    3 -2 3\n    2 -2 4\n    2 3 3\n    -1 1 2\n    0 1 4\n    2 5 1\n    '''\n) == '''\n0+-\n'''"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n5 6\n-3 -2 3\n-2 -2 4\n2 3 3\n-1 1 2\n0 1 4\n2 5 1\n''') == '''\n--+0-\n'''"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == expected1\nassert solution(sample_input2) == expected2"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Expected output '{output}', but got '{solution(input())}'\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"impossible\"'\n"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"0+-\"\nassert solution(\"3 2\\n1 2 1\\n-2 0 2\") == \"0+-\"\nassert solution(\"5 8\\n-1 -1 1\\n2 2 2\\n4 4 4\\n6 6 6\\n8 8 8\") == \"impossible\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == \"impossible\"  # test case 1\nassert solution(\"\") == \"impossible\"  # test case 2\nassert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"--+0-\"  # test case 3"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '0+-\\n'"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n1 1\\n1 1\\n1\\n1 1 1\") == \"1\\n\"\nassert solution(\"2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2\") == \"4\\n4\\n\"\n"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 2\\n1 1\\n1 1\\n1\\n1 1 1\\n') == '1\\n'\nassert solution('2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2\\n') == '4\\n4\\n'"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test failed. Output: {output}, but expected: {output}\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n1 1\\n1 1\\n1\\n1 1 1\\n2\\n1 2 2\\n2 2 2\\n2\\n\") == \"1\\n4\\n\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n1 1\\n1 1\\n1\\n1 1 1\\n2\\n2 2 2\") == \"1\\n\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == '''\n\n'''"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n1 1\\n1 1\\n1\\n1 1 1\") == \"1\\n\"\nassert solution(\"2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2\") == \"4\\n4\\n\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Solution does not match. Expected: '{expected_output}', Received: '{solution(input())}'\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == '1\\n4\\n4\\n'\n\nfrom typing import List"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n1 1\\n1 1\\n1\\n1 1 1\\n2 2\\n2 2\\n2\") == \"1\\n4\"\nassert solution(\"2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2\") == \"4\\n4\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\\n\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\\n\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"sample_input.txt\").read()) == \"YES\"\nassert solution(open(\"sample_input2.txt\").read()) == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\\n\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\\n\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\\n') == 'YES'\nassert solution('3 4\\nWWRR\\nWRRR\\nWRRR\\n') == 'NO'"
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, but got {solution(stdin)}\"\nfor i in range(1, 10):\n    stdin = f\"4 {i}\"\n    expected = f\"YES\"\n    assert solution(stdin) == expected, f\"Expected {expected}, but got {solution(stdin)}\"\n"
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\\n\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\\n') == 'YES'\nassert solution('3 4\\nWWRR\\nWRRR\\nWRRR\\n') == 'NO'"
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"YES\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"YES\"\nprint(\"PASS\")"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 5\\n1\\n2\\n3\") == \"1\"\nassert solution(\"6 3 5\\n1\\n2\\n3\\n3\\n2\\n1\") == \"3\""
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3 5\\n1\\n2\\n3\\n\") == \"1\"\nassert solution(\"6 3 5\\n1\\n2\\n3\\n3\\n2\\n1\\n\") == \"3\""
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 5\\n1\\n2\\n3\\n\") == \"1\\n\"\nassert solution(\"6 3 5\\n1\\n2\\n3\\n3\\n2\\n1\\n\") == \"3\\n\""
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 5\\n1\\n2\\n3\\n\") == 1\nassert solution(\"6 3 5\\n1\\n2\\n3\\n3\\n2\\n1\\n\") == 3"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\""
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, \"Expected output: {}, Actual output: {}\".format(expected_output, solution(input()))"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(None) == \"Invalid input\""
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\", \"Expected 1, got {}\".format(solution())\nassert solution() == \"3\", \"Expected 3, got {}\".format(solution())"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    3 3 5\n    1\n    2\n    3\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n    6 3 5\n    1\n    2\n    3\n    3\n    2\n    1\n    \"\"\"\n) == \"3\""
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 5\\n1\\n2\\n3\\n\") == \"1\"\nassert solution(\"6 3 5\\n1\\n2\\n3\\n3\\n2\\n1\\n\") == \"3\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n0 2\\n1 2\\n3 3\\n\") == \"3 2\\n\"\nassert solution(\"5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n\") == \"12 3\\n\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n0 2\\n1 2\\n3 3\\n\") == \"3 2\\n\"\nassert solution(\"5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n\") == \"12 3\\n\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n0 2\n1 2\n3 3\n5\n0 2\n1 3\n3 3\n7 5\n9 5\n\"\"\") == \"\"\"\n12 3\n\"\"\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n0 2\\n1 2\\n3 3\\n5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\") == \"3 2\\n12 3\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n0 2\\n1 2\\n3 3\\n\") == \"3 2\\n\", \"Test 1 failed\"\nassert solution(\"5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n\") == \"12 3\\n\", \"Test 2 failed\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n0 2\\n1 2\\n3 3\\n5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n\") == \"3 2\\n\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 2\\n1 2\\n3 3\\n5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\") == \"3 2\\n12 3\"\n"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n0 2\n1 2\n3 3\n\"\"\") == \"3 2\"\n\nassert solution(\"\"\"\n5\n0 2\n1 3\n3 3\n7 5\n9 5\n\"\"\") == \"12 3\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n1\\n0\\n0\\n3\\n') == '100\\n000\\n01\\n01\\n01\\n'\nassert solution('3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n') == '0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n'"
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\\n\") == \"100\\n000\\n01\\n01\\n01\\n\"\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n\") == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\\n\") == \"100\\n000\\n01\\n01\\n01\\n\"\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n\") == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n    2\n    1\n    0\n    0\n    3\n    '''\n) == \"100\\n000\\n01\\n01\\n01\"\n\nassert solution(\n    '''\n    3\n    0\n    1 1\n    1\n    1 1\n    1\n    1\n    '''\n) == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\\n\") == \"100\\n000\\n01\\n01\\n01\\n\"\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n\") == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\"\n"
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\") == \"100\\n000\\n01\\n01\\n01\\n\", \"Test 1 failed\"\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n\") == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\", \"Test 2 failed\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"sample_input1.txt\", \"r\").read()) == \"1000000000\\n0000000010\\n0000000100\\n0000001000\\n1000000000\"\nassert solution(open(\"sample_input2.txt\", \"r\").read()) == \"0000000000\\n1000000000\\n0010000000\\n1010000000\\n0100000000\\n0000000000\\n1000000000\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\") == \"100\\n000\\n01\\n01\\n01\\n\", \"Test case 1 failed\"\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n\") == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\", \"Test case 2 failed\"\n"
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\\n\") == \"100\\n000\\n01\\n01\\n01\\n\", \"Bar Code is a puzzle game invented by Thinh Van Duc Lai in 2017 that was first published in the New York Times. Bar Code is played on a square grid consisting of $n \\times n$ unit squares with $(n+1) \\times (n+1)$ grid points. For a given specification, the puzzle requires the marking of some of the borders of these unit squares by drawing a vertical or horizontal bar, subject to the following conditions:\n\n- For each row/column, the specification describes exactly how many separate groups of consecutive bars of the same orientation (vertical and horizontal, resp.) there should be in this row/column. For instance, if the specification demands 2 1 1, then there have to be $3$ groups of $2$, $1$, and $1$ bars, separated by at least one unmarked border. For example, for a $n = 6$ puzzle with $7$ borders in each row, the following markings would meet this specification:\n\n    1101010 1101001 1100101 0110101\n\nwhere 1 denotes the presence of a bar and 0 denotes a border that is unmarked.\n\n- No $2$ bars may touch.\n\nThe illustration shows the solution for sample input $3$.\n\nFind a marking that is consistent with the given specification!\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n1 2\\n2 3\\n2 3\\n\") == \"2\\n\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n\") == \"3\\n\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n2 3\\n2 3\\n2 3\\n\") == \"2\"\nassert solution(\"1 3\\n4 6\\n7 8\\n2 5\\n\") == \"3\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n1 2\\n2 3\\n2 3\") == \"2\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\") == \"3\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    3 1\n    1 2\n    2 3\n    2 3\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    4 1\n    1 3\n    4 6\n    7 8\n    2 5\n    \"\"\"\n) == \"3\\n\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\n1 2\\n2 3\\n2 3\\n\") == \"2\\n\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n\") == \"3\\n\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n1 2\\n2 3\\n2 3\\n\") == \"2\\n\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n\") == \"3\\n\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '2\\n', \"Ada, Bertrand and Charles often argue over which TV shows to watch, and to avoid some of their fights they have finally decided to buy a video tape recorder. This fabulous, new device can record $k$ different TV shows simultaneously, and whenever a show recorded in one of the machine\u2019s $k$ slots ends, the machine is immediately ready to record another show in the same slot.\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n1 2\\n2 3\\n2 3\\n\") == \"2\\n\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n\") == \"3\\n\"\nassert solution(\"3 2\\n1 3\\n2 4\\n3 5\\n\") == \"2\\n\"\nassert solution(\"5 3\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == \"1\\n\"\nassert solution(\"1 3\\n2 4\\n3 5\\n4 6\\n\") == \"2\\n\"\nassert solution(\"2 3\\n3 4\\n4 5\\n5 6\\n\") == \"1\\n\"\nassert solution(\"1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\") == \"2\\n\"\nassert solution(\"2 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\") == \"1\\n\"\nassert solution(\"3 1\\n1 2\\n2 3\\n\") == \"2\\n\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n\") == \"3\\n\"\nassert solution(\"3 2\\n1 3\\n2 4\\n3 5\\n\") == \"2\\n\"\nassert solution(\"5 3\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == \"1\\n\"\nassert solution(\"1 3\\n2 4\\n3 5\\n4 6\\n\") == \"2\\n\"\nassert solution(\"2 3\\n3 4\\n4 5\\n5 6\\n\") == \"1\\n\"\nassert solution(\"1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\") == \"2\\n\"\nassert solution(\"2 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\") == \"1\\n\"\nassert solution(\"3 1\\n1 2\\n2 3\\n\") == \"2\\n\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n\") == \"3\\n\"\nassert solution(\"3 2\\n1 3\\n2 4\\n3 5\\n\") == \"2\\n\"\nassert solution(\"5 3\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == \"1\\n\"\nassert solution(\"1 3\\n2 4\\n3 5\\n4 6\\n\") == \"2\\n\"\nassert solution(\"2 3\\n3 4\\n4 5\\n5 6\\n\") == \"1\\n\"\nassert solution(\"1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\") == \"2\\n\"\nassert solution(\"2 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\") == \"1\\n\"\nassert solution(\"3 1\\n1 2\\n2 3\\n\") == \"2\\n\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n\") == \"3\\n\"\nassert solution(\"3 2\\n1 3\\n2 4\\n3 5\\n\") == \"2\\n\"\nassert solution(\"5 3\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == \"1\\n\"\nassert solution(\"1 3\\n2 4\\n3 5\\n4 6\\n\") == \"2\\n\"\nassert solution(\"2 3\\n3 4\\n4 5\\n5 6\\n\") == \"1\\n\"\nassert solution(\"1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\") == \"2\\n\"\nassert solution(\"2 2\\n2 3\\n3 4\\n4 "
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected, f\"Expected: {expected}, Actual: {solution}\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_data) == output_data, f\"The output data '{output_data}' does not match the expected output '{assert_data}'.\"\n"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n\") == \"90.00000000\\n\"\nassert solution(\"5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n\") == \"126.86989765\\n\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n    5 6 500\n        -100 0\n        -100 100\n        0 200\n        100 100\n        100 0\n        1 2\n        1 3\n        2 3\n        3 4\n        3 5\n        4 5\n''') == '90.00000000'\n\nassert solution('''\n    5 6 450\n        -100 0\n        -100 100\n        0 200\n        100 100\n        100 0\n        1 2\n        1 3\n        2 3\n        3 4\n        3 5\n        4 5\n''') == '126.86989765'"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"90.00000000\"\nassert solution(\"5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"126.86989765\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n\") == \"90.00000000\\n\"\nassert solution(\"5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n\") == \"126.86989765\\n\"\nassert solution(\"5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n\") == \"126.86989765\\n\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"90.00000000\"\nassert solution(\"5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"126.86989765\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n\") == \"90.00000000\\n\"\nassert solution(\"5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n\") == \"126.86989765\\n\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n') == '90.00000000\\n'\nassert solution('5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n') == '126.86989765\\n'\n"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == # solution function\n"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"90.00000000\\n\"\nassert solution(\"5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"126.86989765\\n\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(37) == '4\\n8 29\\n9 28\\n11 26\\n15 22'\nassert solution(30014) == '7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225'"
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"4\\n8 29\\n9 28\\n11 26\\n15 22\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"37\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(\"30014\") == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '4\\n8 29\\n9 28\\n11 26\\n15 22'"
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(37) == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(30014) == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\"\n"
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(37) == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(30014) == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\"\n\nimport itertools\nfrom collections import Counter"
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('37') == '4\\n8 29\\n9 28\\n11 26\\n15 22'\nassert solution('30014') == '7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225'"
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}\\nActual output: {solution(input())}\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"37\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(\"30014\") == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"37\\n\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\\n\"\nassert solution(\"30014\\n\") == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\\n\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"2 3 1\\n\") == \"3.5\\n\"\nassert solution(stdin=\"3 3 2\\n\") == \"4.9\\n\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3 1\") == \"3.5\"\nassert solution(\"3 3 2\") == \"4.9\"\n\nfrom typing import List"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3 1\") == \"3.5\"\nassert solution(\"3 3 2\") == \"4.9\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '3.5'\nassert solution() == '4.9'"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3.5\\n\", \"Incorrect output. Please check the code and input.\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed with input: {stdin}, expected output: {expected_output}, actual output: {solution(stdin)}\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3 1') == '3.5'\nassert solution('3 3 2') == '4.9'"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == '3.5', \"Test case 1 failed\"\nassert solution(sample_input2) == '4.9', \"Test case 2 failed\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == output, f\"Incorrect output.\\nExpected: {output}\\nGot: {solution(stdin)}\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3.5\\n\"\nassert solution(stdin) == \"4.9\\n\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 5 1 5\") == \"19\\n\"\nassert solution(\"12 12 1 12\") == \"4\\n\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"19\\n\", \"Incorrect output for sample input 1\"\nassert solution(input()) == \"4\\n\", \"Incorrect output for sample input 2\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == \"19\"\nassert solution(sample_input2) == \"4\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(f\"{input()}\") == \"19\"\nassert solution(f\"{input()}\") == \"4\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5 1 5\") == \"19\\n\"\nassert solution(\"12 12 1 12\") == \"4\\n\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(stdin=input())}\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 5 1 5\") == \"19\\n\", \"Sample Input 1\"\nassert solution(\"12 12 1 12\") == \"4\\n\", \"Sample Input 2\"\n"
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5 1 5\") == \"19\"\nassert solution(\"12 12 1 12\") == \"4\"\nassert solution(\"3 7 4 10\") == \"2\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5 1 5\\n\") == \"19\\n\"\nassert solution(\"12 12 1 12\\n\") == \"4\\n\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 5\") == \"4\"\nassert solution(\"1 12\") == \"4\"\nassert solution(\"10 10\") == \"10\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"1 100000000\") == \"1\"\n"
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 5\") == \"4\"\nassert solution(\"1 12\") == \"4\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 5') == '4', 'Solution not as expected.'\nassert solution('1 12') == '4', 'Solution not as expected.'"
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 5\") == \"4\\n\", \"Expected '4\\n', got '{}'\".format(solution(\"1 5\"))\nassert solution(\"1 12\") == \"4\\n\", \"Expected '4\\n', got '{}'\".format(solution(\"1 12\"))"
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5\") == \"4\"\nassert solution(\"1 12\") == \"4\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 5\") == \"4\"\nassert solution(\"1 12\") == \"4\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == \"4\", \"Test 1\"\nassert solution(sample_input_2) == \"4\", \"Test 2\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Output mismatch: expected '{output}', got '{solution(input())}'\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5\") == \"4\"\nassert solution(\"1 12\") == \"4\""
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('car') == 1\nassert solution('cocar') == 2"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"car\") == 1, \"Incorrect solution\"\nassert solution(\"cocar\") == 2, \"Incorrect solution\""
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"cocaror\") == 2, \"Testcase 1\"\nassert solution(\"Hello\") == 0, \"Testcase 2\""
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('car') == '1'\nassert solution('cocaror') == '2'"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('car') == 1\nassert solution('cocar') == 2"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('car') == 1\nassert solution('cocar') == 2"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"car\") == 1\nassert solution(\"cocaror\") == 2"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"car\") == 1\nassert solution(\"cocaror\") == 2"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"car\") == 1\nassert solution(\"cocar\") == 2\n\nfrom functools import reduce"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('car') == '1'\nassert solution('cocaror') == '2'"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0 2 0 1\\n5\\n1000000 1 1 1 1\") == \"8\\n\"\nassert solution(\"5\\n1000000 1 1 1 1\") == \"0\\n\""
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == output\n"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '0'\nprint(0)"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"8\", \"Expected 8, got {}\".format(solution(input()))\nprint(0)  # output 0"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '8', \"The output should be 8, but it is: \" + solution(stdin)"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Your solution is incorrect. Expected output: '{expected_output}', but got: '{solution(stdin)}'.\"\nprint(expected_output)"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n0 2 0 1\") == \"8\\n\"\nassert solution(\"5\\n1000000 1 1 1 1\") == \"0\\n\""
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n0 2 0 1\\n\") == \"8\"\nassert solution(\"5\\n1000000 1 1 1 1\\n\") == \"0\""
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    4\n    0 2 0 1\n    \"\"\"\n) == \"8\\n\"\n\nassert solution(\n    \"\"\"\n    5\n    1000000 1 1 1 1\n    \"\"\"\n) == \"0\\n\""
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 650\\n\") == \"zyz\"\nassert solution(\"2 651\\n\") == \"-1\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 650\") == \"zyz\"\nassert solution(\"2 651\") == \"-1\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Test 1 failed\"\nassert solution(sample_input_2) == sample_output_2, \"Test 2 failed\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 650\") == \"zyz\"\nassert solution(\"2 651\") == \"-1\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"zyz\"\nassert solution(stdin) == \"def solution(stdin: str) -> str:\"\nassert solution(stdin) == \"-1\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 650\") == \"zyz\"\nassert solution(\"2 651\") == \"-1\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Test case 1 failed\"\nassert solution(sample_input_2) == sample_output_2, \"Test case 2 failed\"\n\nfrom typing import List"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    '''\n    2 650\n    2 651\n    ''') == 'zyz'\n\nassert solution(\n    '''\n    1 1\n    3 4\n    ''') == 'def'\n\nassert solution(\n    '''\n    2 10\n    3 10\n    5 10\n    7 10\n    ''') == 'def'\n\nassert solution(\n    '''\n    1 10\n    3 10\n    5 10\n    7 10\n    9 10\n    11 10\n    ''') == 'def'\n\nassert solution(\n    '''\n    2 10\n    3 10\n    5 10\n    7 10\n    9 10\n    11 10\n    ''') == '-1'"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"zyz\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"4\\n\"\nassert solution(stdin) == \"8\\n\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\") == \"4\\n\", \"Test Case 1 Failed\"\nassert solution(\"10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\") == \"8\\n\", \"Test Case 2 Failed\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\\n\") == \"4\\n\", \"Test 1 failed\"\nassert solution(\"10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\\n\") == \"8\\n\", \"Test 2 failed\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\") == \"4\\n\"\nassert solution(\"10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\") == \"8\\n\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\") == \"4\\n\"\nassert solution(\"10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\") == \"8\\n\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\") == \"4\\n\", \"Incorrect output\"\nassert solution(\"10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\") == \"8\\n\", \"Incorrect output\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"Output\", \"Incorrect Output\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_data) == output_data, \"Test Case Failed\"\nelse:\n    print(\"Test Case Passed\")"
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"6\") == \"4\"\nassert solution(\"10\") == \"8\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0') == '4\\n', \"Incorrect output\"\n\nassert solution('10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1') == '8\\n', \"Incorrect output\""
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Solution returned {solution(input())}, expected {expected}\""
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {i + 1} failed: expected {expected_output}, got {solution(stdin)}\" for i, expected_output in enumerate([0, 2, -1])"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4 3\\n3 4 5 7\\n1 2 10\") == 0\nassert solution(\"3 5 2\\n1 4 7 9 11\\n2 3\") == 2"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4 3\\n3 4 5 7\\n1 2 10\") == 0, \"Expected 0, got {}\".format(solution(\"2 4 3\\n3 4 5 7\\n1 2 10\"))\nassert solution(\"3 5 2\\n1 4 7 9 11\\n2 3\") == 2, \"Expected 2, got {}\".format(solution(\"3 5 2\\n1 4 7 9 11\\n2 3\"))\n"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    2 4 3\n    3 4 5 7\n    1 2 10\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n    3 5 2\n    1 4 7 9 11\n    2 3\n    \"\"\"\n) == \"2\\n\""
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 4 3\\n3 4 5 7\\n1 2 10') == '0\\n'\nassert solution('3 5 2\\n1 4 7 9 11\\n2 3') == '2\\n'"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 4 3\\n3 4 5 7\\n1 2 10') == '0\\n'\nassert solution('3 5 2\\n1 4 7 9 11\\n2 3') == '2\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4 3\\n3 4 5 7\\n1 2 10\") == \"0\\n\"\nassert solution(\"3 5 2\\n1 4 7 9 11\\n2 3\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 4 3\\n3 4 5 7\\n1 2 10\") == 0\nassert solution(\"3 5 2\\n1 4 7 9 11\\n2 3\") == 2\nassert solution(\"\") == -1\nassert solution(\"2 4 3\\n3 4 5 7\\n1 2 10\\n3 5 2\\n1 4 7 9 11\\n2 3\") == 2"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 4 3\\n3 4 5 7\\n1 2 10') == 0\nassert solution('3 5 2\\n1 4 7 9 11\\n2 3') == 2\n"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n3 2\\n\") == \"1\\n-2 -1\\n\"\nassert solution(\"1 2\\n3 4\\n\") == \"3\\n-1 1\\n2 1\\n0 -2\\n\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, \"Expected output: {}, Got output: {}\".format(output, solution(input()))\n"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 3\\n3 2\\n1 2\\n3 4\\n1 2\\n3 4') == '1\\n-2 -1\\n2 1\\n0 -2\\n'\n\nfrom typing import List"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3\\n3 2\\n') == '1\\n-2 -1\\n'\nassert solution('1 2\\n3 4\\n') == '3\\n-1 1\\n2 1\\n0 -2\\n'"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == output, f\"Test case {i+1} failed: expected {output}, got {solution(input)}\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '1\\n-2 -1\\n3\\n-1 1\\n2 1\\n0 -2', 'Test case 1 failed'\n\nassert solution() == '3\\n-1 1\\n2 1\\n0 -2', 'Test case 2 failed'"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n3 2\") == \"1\\n-2 -1\"\nassert solution(\"1 2\\n3 4\") == \"3\\n-1 1\\n2 1\\n0 -2\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n3 2\") == \"1\\n-2 -1\\n\"\nassert solution(\"1 2\\n3 4\") == \"3\\n-1 1\\n2 1\\n0 -2\\n\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1\\n-2 -1\\n3\\n-1 1\\n2 1\\n0 -2\" # expected output"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r').read()) == '24'\n"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == '4\\n'\nassert solution(sample_input2) == '24\\n'"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test failed\"\nfor _ in range(100):\n    input()\nprint(solution(input()))"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"4\\n\"\n\nfor i in range(1, 101):\n    assert solution(f\"5\\n{'IVO' * 5}\\n{'JASNA' * 5}\\n{'JOSIPA' * 5}\\n\") == f\"{i}\\n\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '24'\n"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\nIVO\\nJASNA\\nJOSIPA\") == \"4\\n\", \"Test case 1 failed\"\nassert solution(\"5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\") == \"24\\n\", \"Test case 2 failed\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"MARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\\n\") == \"24\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\nIVO\\nJASNA\\nJOSIPA\\n\") == \"4\\n\", \"Test 1 failed.\"\nassert solution(\"5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\\n\") == \"24\\n\", \"Test 2 failed.\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\nIVO\\nJASNA\\nJOSIPA\\n\") == \"4\\n\", \"Test 1 failed\"\nassert solution(\"5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\\n\") == \"24\\n\", \"Test 2 failed\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Incorrect output for the given example.\\nExpected: {expected}\\nActual: {solution(stdin)}\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1') == '3\\n', \"Sample Output 1 is incorrect.\"\nassert solution('3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7') == '39\\n', \"Sample Output 2 is incorrect.\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 3, \"Expected output: 3\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\"  # Test case 1\nassert solution(\"1 2 3 1\\n2 3 4 1\\n3 4 5 1\") == \"3\"  # Test case 2\nassert solution(\"1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n\") == \"3\"  # Test case 3\nassert solution(\"1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n1 2 3 1\") == \"3\"  # Test case 4\nassert solution(\"1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n1 2 3 1\\n2 3 4"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 3, \"Expected output: 3, got: {}\".format(solution())\nassert solution() == 39, \"Expected output: 39, got: {}\".format(solution())"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 39"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\") == 3\nassert solution(\"3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7\") == 39"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 3"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution) == \"3\\n\", \"Solution should return 3, not {}\".format(solution)  # Solution should return 3"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\") == 3\nassert solution(\"3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7\") == 39\n\nfrom typing import List"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1') == '3\\n'\nassert solution('3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7') == '39\\n'\n"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\\n\") == 5.2696518641\nassert solution(\"1\\n8 9 3 -14 -14 14 -14 0 20\\n\") == 9"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\") == 5.2696518641\nassert solution(\"1\\n8 9 3 -14 -14 14 -14 0 20\") == 9"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\\n\") == 5.2696518641"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\") == 5.2696518641, \"Test case 1 failed\"\nassert solution(\"1\\n8 9 3 -14 -14 14 -14 0 20\") == 9, \"Test case 2 failed\""
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='Test Input 1') == '5.2696518641'\nassert solution(stdin='Test Input 2') == '9'"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Sample Input 1 failed.\"\nassert solution(sample_input_2) == sample_output_2, \"Sample Input 2 failed.\""
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\") == 5.2696518641\nassert solution(\"1\\n8 9 3 -14 -14 14 -14 0 20\") == 9"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    2\n    5 8 4 -2 0 0 -3 2 0 0 3\n    8 10 4 -1 -1 1 -1 1 1 -1 1\n    ''') == 5.2696518641\n\nassert solution('''\n    1\n    8 9 3 -14 -14 14 -14 0 20\n    ''') == 9\n\nassert solution('''\n10\n8 -4 -2 -6 0 -4 -2 -6 0 4 2 8\n''') == 10\n\nassert solution('''\n11\n4 6 8 10 12 14 16 18 20 22 24\n''') == 24.717403521\n\nassert solution('''\n12\n2 -2 -4 -6 -8 -10 -12 -14 -16 -18 -20\n''') == 6.1050554549\n\nassert solution('''\n13\n-4 -6 -8 -10 -12 -14 -16 -18 -20 -22 -24\n''') == 0.5\n\nassert solution('''\n14\n-16 -18 -20 -22 -24\n''') == 0.0\n\nassert solution('''\n15\n-14 -16 -18 -20 -22 -24\n''') == 0.0\n\nassert solution('''\n16\n-12 -14 -16 -18 -20 -22 -24\n''') == 0.0\n\nassert solution('''\n17\n-8 -10 -12 -14 -16 -18 -20 -22 -24\n''') == 0.0\n\nassert solution('''\n18\n-4 -6 -8 -10 -12 -14 -16 -18 -20 -22 -24\n''') == 0.0\n\nassert solution('''\n19\n-2 -4 -6 -8 -10 -12 -14 -16 -18 -20 -22 -24\n''') == 0.0\n\nassert solution('''\n20\n-6 -8 -10 -12 -14 -16 -18 -20 -22 -24\n''') == 0.0\n\nassert solution('''\n21\n-10 -12 -14 -16 -18 -20 -22 -24\n''') == 0.0\n\nassert solution('''\n22\n-14 -16 -18 -20 -22 -24\n''') == 0.0\n\nassert solution('''\n23\n-18 -20 -22 -24\n''') == 0.0\n\nassert solution('''\n24\n-22 -24\n''') == 0.0\n\nassert solution('''\n25\n-24\n''') == 0.0"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\\n\") == \"5.2696518641\\n\"\nassert solution(\"1\\n8 9 3 -14 -14 14 -14 0 20\\n\") == \"9\\n\""
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"5.2696518641\", \"The expected output is not correct.\"\n"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 1, 1, 1) == 1\nassert solution(3, 2, 2, 2) == 8\nassert solution(3, 3, 3, 3) == 4\nassert solution(3, 1, 1, 10000000) == -1\nassert solution(3, 4, 4, 4) == 4\nassert solution(3, 5, 5, 5) == 24"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2\n\nsample_input1 = \"\"\"\n3\n1 1 1\n2 0 2\n3 1 1\n\"\"\"\n\nsample_input2 = \"\"\"\n3\n4 1 1\n5 2 3\n5 0 3\n\"\"\"\n\nexpected_output1 = \"\"\"\n1\n8\n4\n\"\"\"\n\nexpected_output2 = \"\"\"\n6\n4\n24\n\"\"\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\\n8\\n4\\n\", \"The solution should be 1 and 8, respectively.\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 1 1\\n2 0 2\\n3 1 1') == '1\\n8\\n4'\nassert solution('1 1 1\\n2 0 2\\n3 1 1\\n3 2 2') == '8\\n4\\n24'\nassert solution('1 1 1\\n2 0 2\\n3 1 1\\n3 2 2\\n3 3 3') == '-1'"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1\\n2 0 2\\n3 1 1\\n\") == \"1\\n8\\n4\\n\"\nassert solution(\"4 1 1\\n5 2 3\\n5 0 3\\n\") == \"6\\n4\\n24\\n\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1\\n8\\n4\\n\"\nassert solution() == \"6\\n4\\n24\\n\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Test failed: Expected {expected}, got {solution(stdin)}\"\n"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"The solution is incorrect. Expected: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 1, \"Invalid output. Expected 1, got {}.\".format(solution())\nassert solution() == 8, \"Invalid output. Expected 8, got {}.\".format(solution())\nassert solution() == 4, \"Invalid output. Expected 4, got {}.\".format(solution())\nassert solution() == -1, \"Invalid output. Expected -1, got {}.\".format(solution())\nassert solution() == 6, \"Invalid output. Expected 6, got {}.\".format(solution())\nassert solution() == 4, \"Invalid output. Expected 4, got {}.\".format(solution())"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"3 2\\n6 6\\n\") == \"3\\n\"\nassert solution(stdin=\"10 1\\n\") == \"2\\n\"\nassert solution(stdin=\"3 2\\n\") == \"60\\n\"\nassert solution(stdin=\"3 4\\n\") == \"30\\n\""
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin: str) == \"Output\" # Enter the solution here"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 2) == 3\nassert solution(6, 6) == 240"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\"\nassert solution() == \"240\""
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 2) == 3\nassert solution(6, 6) == 240"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 2) == 3\nassert solution(6, 6) == 240"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 3\nassert solution(6) == 240"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3\\n\", \"Output: {}\\nInput: {}\".format(solution(stdin), stdin)"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 2) == 3\nassert solution(6, 6) == 240"
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('SEND+MORE=MONEY') == '9567+1085=10652'\nassert solution('A+A=A') == 'impossible'\n\nfrom typing import List"
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    '''\n    SEND+MORE=MONEY\n    '''\n) == '9567+1085=10652'\n\nassert solution(\n    '''\n    A+A=A\n    '''\n) == 'impossible'"
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('SEND+MORE=MONEY') == '9567+1085=10652','sample output 1'\nassert solution('A+A=A') == 'impossible','sample output 2'\n\nfrom typing import List"
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\", \"Incorrect solution for SEND+MORE=MONEY\"\nassert solution(\"A+A=A\") == \"impossible\", \"Incorrect solution for A+A=A\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\", \"Test 1 failed\"\nassert solution(\"A+A=A\") == \"impossible\", \"Test 2 failed\"\n"
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n0 1 2 3') == 14\nassert solution('5\\n1 1 2 1 1') == 1"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is wrong. Expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == 14\nassert solution(sample_input2) == 1"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Output: {solution(input())}, Expected: {expected_output}\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 14\n"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"14\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n0 1 2 3\") == 14\nassert solution(\"5\\n1 1 2 1 1\") == 1"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n0 1 2 3\\n\") == \"14\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == \"14\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n0 1 2 3') == '14'\nassert solution('5\\n1 1 2 1 1') == '1'"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    4 4\n    1 2 3 0\n    0 0 5 6\n    0 0 7 8\n    7 0 0 10\n    \"\"\"\n) == 88\n\nassert solution(\n    \"\"\"\n    4 4\n    1 2 3 0\n    0 0 5 6\n    0 4 7 8\n    7 0 0 10\n    \"\"\"\n) == -1"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n\") == 88\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n\") == -1"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Input {input()}, expected {expected}\"\n\nfrom typing import List"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n') == 88\nassert solution('4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n') == -1"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n\") == 88\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n\") == -1"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3\\n0\\n0\\n5\\n6\\n0\\n0\\n7\\n8\\n7\\n8\\n9\\n10\\n') == '88\\n'\nassert solution('1\\n2\\n4\\n0\\n0\\n5\\n6\\n0\\n0\\n7\\n8\\n7\\n8\\n9\\n10\\n') == '-1\\n'"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10') == 88\nassert solution('4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10') == -1"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == 88\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\") == -1"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == 88\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\") == -1"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0.000\\n\"\n\nstdin = \"\"\"2\n1 1\n1 1\n\"\"\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n1 1\\n1 1') == '0.000\\n'\nassert solution('2\\n1 99999\\n99999 99999') == '9999700002.000\\n'"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == '0.000'\nassert solution(sample_input_2) == '9999700002.000'"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"test.in\", \"r\").read()) == \"0.000\\n\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\npass\"\n"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0.000\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0.000\"\nassert solution() == \"9999700002.000\"\n"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, Actual: {solution(stdin)}\"\n"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == expected_output_1, \"Test 1 failed\"\nassert solution(sample_input_2) == expected_output_2, \"Test 2 failed\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 1\\n1 1\") == \"0.000\"\nassert solution(\"2\\n1 99999\\n99999 99999\") == \"9999700002.000\"\n"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_1) == \"3\"\nassert solution(input_2) == \"Infinity\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\\n\"\nassert solution() == \"Infinity\\n\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\\n\") == 3, \"Solution is incorrect.\"\nassert solution(\"3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\\n\") == \"Infinity\", \"Solution is incorrect.\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"6 8 1 6\n1 2 5\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5\n1 3 6 5 4\"\"\") == 3\n\nassert solution(\"\"\"3 4 1 2\n1 2 6\n1 3 2\n1 2 7\n2 3 3\n2\n1 2\"\"\") == Infinity"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == expected_output, f\"Test case {test_case} failed. Expected output: {expected_output}, but got: {solution(input)}\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\\n\") == \"3\"\nassert solution(\"3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\\n\") == \"Infinity\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\") == 3\nassert solution(\"3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\\n\") == Infinity"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\") == 3\nassert solution(\"3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\\n\") == Infinity"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"6 8 1 6\n1 2 5\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5\n1 3 6 5 4\"\"\") == \"3\"\n\nassert solution(\"\"\"3 4 1 2\n1 2 6\n1 3 2\n1 2 7\n2 3 3\n2\n1 2\"\"\") == \"Infinity\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    6 8 1 6\n    1 2 5\n    1 3 1\n    2 6 6\n    2 3 6\n    4 2 3\n    3 4 1\n    4 5 1\n    5 6 1\n    5\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n    3 4 1 2\n    1 2 6\n    1 3 2\n    1 2 7\n    2 3 3\n    2\n    \"\"\"\n) == \"Infinity\"\n\nassert solution(\n    \"\"\"\n    6 8 1 6\n    1 2 5\n    1 3 1\n    2 6 6\n    2 3 6\n    4 2 3\n    3 4 1\n    4 5 1\n    5 6 1\n    5\n    6 8 1 6\n    1 2 5\n    1 3 1\n    2 6 6\n    2 3 6\n    4 2 3\n    3 4 1\n    4 5 1\n    5 6 1\n    5\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n    6 8 1 6\n    1 2 5\n    1 3 1\n    2 6 6\n    2 3 6\n    4 2 3\n    3 4 1\n    4 5 1\n    5 6 1\n    5\n    6 8 1 6\n    1 2 5\n    1 3 1\n    2 6 6\n    2 3 6\n    4 2 3\n    3 4 1\n    4 5 1\n    5 6 1\n    5\n    6 8 1 6\n    1 2 5\n    1 3 1\n    2 6 6\n    2 3 6\n    4 2 3\n    3 4 1\n    4 5 1\n    5 6 1\n    5\n    6 8 1 6\n    1 2 5\n    1 3 1\n    2 6 6\n    2 3 6\n    4 2 3\n    3 4 1\n    4 5 1\n    5 6 1\n    5\n    6 8 1 6\n    1 2 5\n    1 3 1\n    2 6 6\n    2 3 6\n    4 2 3\n    3 4 1\n    4 5 1\n    5 6 1\n    5\n    6 8 1 6\n    1 2 5\n    1 3 1\n    2 6 6\n    2 3 6\n    4 2 3\n    3 4 1\n    4 5 1\n    5 6 1\n    5\n    6 8 1 6\n    1 2 5\n    1 3 1\n    2 6 6\n    2 3 6\n    4 2 3\n    3 4 1\n    4 5 1\n    5 6 1\n    5\n    6 8 1 6\n    1 2 5\n    1 3 1\n    2 6 6\n    2 3 6\n    4 2 3\n    3 4 1\n    4 5 1\n    5 6 1\n    5\n    6 8 1 6\n    1 2 5\n    1 3 1\n    2 6 6\n    2 3 6\n    4 2 3\n    3 4 1\n    4 5 1\n    5 6 1\n    5\n    6 8 1 6\n    1 2 5\n    1 3 1\n    2 6 6\n    2 3 6\n    4 2 3\n    3 4 1\n    4 5 1\n    5 6 1\n    5\n    6 8 1 6\n    1 2 5\n    1 3 1\n    2 6 6\n    2 3 6\n    4 2 3\n    3 4 1\n    4 5 1\n    5 6 1\n    5\n    6 8 1 6\n    1 2 5\n    1 3 1\n    2 6 6\n    2 3 6\n    4 2 3\n    3 4 1\n    4 5 1\n    5 6 1\n    5\n    6 8 1 6\n    1 2 5\n    1 3 1\n    2 6 6\n    2 3 6\n    4 2 3\n    3 4 1\n    4 5 1\n    5 6 1\n    5\n    6 8 1 6\n    1 2 5"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"impossible\"\n"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"impossible\\n\""
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6 1\\n6\\nSample Input 1: 6 1\\n6\\nSample Output 1: impossible\\n\\nSample Input 2: 3 1\\n1\\nSample Output 2: 000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n') == 'impossible'"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    6 1\n    6\n    3 1\n    1\n    \"\"\"\n) == \"\"\"\n    000\n    001\n    011\n    010\n    110\n    111\n    101\n    100\n    \"\"\"\nassert solution(\n    \"\"\"\n    6 1\n    6\n    3 1\n    2\n    \"\"\"\n) == \"\"\"\n    000\n    001\n    011\n    010\n    110\n    111\n    101\n    100\n    \"\"\"\nassert solution(\n    \"\"\"\n    3 1\n    1\n    2 3 4\n    5\n    \"\"\"\n) == \"\"\"\n    000\n    001\n    011\n    010\n    110\n    111\n    101\n    100\n    \"\"\"\nassert solution(\n    \"\"\"\n    3 1\n    1\n    2 3 4\n    5\n    3 1\n    6 7\n    8\n    \"\"\"\n) == \"\"\"\n    000\n    001\n    011\n    010\n    110\n    111\n    101\n    100\n    1000\n    1001\n    \"\"\"\nassert solution(\n    \"\"\"\n    3 1\n    1\n    2 3 4\n    5\n    3 1\n    6 7\n    8\n    3 1\n    9 10\n    11\n    \"\"\"\n) == \"\"\"\n    000\n    001\n    011\n    010\n    110\n    111\n    101\n    100\n    1000\n    1001\n    1111\n    1110\n    \"\"\"\nassert solution(\n    \"\"\"\n    3 1\n    1\n    2 3 4\n    5\n    3 1\n    6 7\n    8\n    3 1\n    9 10\n    11\n    3 1\n    12 13\n    14\n    \"\"\"\n) == \"\"\"\n    000\n    001\n    011\n    010\n    110\n    111\n    101\n    100\n    1000\n    1001\n    1111\n    1110\n    1111\n    1110\n    \"\"\"\nassert solution(\n    \"\"\"\n    6 2\n    2\n    2 4 6\n    8\n    2 4 6\n    8\n    \"\"\"\n) == \"\"\"\n    000\n    001\n    011\n    010\n    110\n    111\n    101\n    100\n    0000\n    0001\n    0011\n    0010\n    0110\n    0111\n    1101\n    1100\n    1100\n    1100\n    1100\n    1100\n    1100\n    1100\n    1100\n    \"\"\"\nassert solution(\n    \"\"\"\n    3 1\n    1\n    2 3 4\n    5\n    3 1\n    6 7\n    8\n    3 1\n    9 10\n    11\n    3 1\n    12 13\n    14\n    3 1\n    15 16\n    17\n    \"\"\"\n) == \"\"\"\n    000\n    001\n    011\n    010\n    110\n    111\n    101\n    100\n    1000\n    1001\n    1111\n    1110\n    1111\n    1110\n    1111\n    1110\n    1111\n    1110\n    1111\n    1110\n    \"\"\"\nassert solution(\n    \"\"\"\n    3 1\n    1\n    2 3 4\n    5\n    3 1\n    6 7\n    8\n    3 1\n    9 10\n    11\n    3 1\n    12 13\n    14\n    3 1\n    15 16\n    17\n    3 1\n    18 19\n    20\n    \"\"\"\n) == \"\"\"\n    000\n    001\n    011\n    010\n    110\n    111\n    101\n    100\n    1000\n    1001\n    1111\n    1110\n    1111\n    1110\n    1111\n    1110\n    1111\n    1110\n    1111\n    1110\n    1111\n    1110\n    1111\n    1110\n    \"\"\"\nassert solution(\n    \"\"\"\n    3 2\n    2\n    2 4 6\n    8\n    2 4 6\n    8\n    2 4"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"impossible\"\n"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin: str) == expected, f\"Your code does not pass the test. Expected output: {expected}, actual output: {solution(stdin)}\""
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 1\\n1') == '000'\nassert solution('6 1\\n6') == '00000'\nassert solution('3 2\\n1') == '0001'\nassert solution('6 3\\n6') == '0000000'\nassert solution('3 3\\n1') == '00001'\nassert solution('6 4\\n6') == '00000000'\nassert solution('3 4\\n1') == '000001'\nassert solution('6 5\\n6') == '00000000000'\nassert solution('3 5\\n1') == '0000001'\nassert solution('6 6\\n6') == '0000000000000'\nassert solution('3 6\\n1') == '00000001'\nassert solution('6 7\\n6') == '000000000000000'\nassert solution('3 7\\n1') == '000000001'\nassert solution('6 8\\n6') == '0000000000000000'\nassert solution('3 8\\n1') == '0000000001'\nassert solution('6 9\\n6') == '000000000000000000'\nassert solution('3 9\\n1') == '000000000001'\nassert solution('6 10\\n6') == '000000000000000000000'\nassert solution('3 10\\n1') == '00000000000001'\nassert solution('6 11\\n6') == '0000000000000000000000'\nassert solution('3 11\\n1') == '000000000000001'\nassert solution('6 12\\n6') == '00000000000000000000000000'\nassert solution('3 12\\n1') == '0000000000000001'\nassert solution('6 13\\n6') == '00000000000000000000000000000'\nassert solution('3 13\\n1') == '0000000000000000000000000001'\nassert solution('6 14\\n6') == '00000000000000000000000000000000'\nassert solution('3 14\\n1') == '0000000000000000000000000000001'\nassert solution('6 15\\n6') == '0000000000000000000000000000000000'\nassert solution('3 15\\n1') == '0000000000000000000000000000000001'\nassert solution('6 16\\n6') == '0000000000000000000000000000000000000'\nassert solution('3 16\\n1') == '0000000000000000000000000000000000001'\nassert solution('6 17\\n6') == '00000000000000000000000000000000"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6 1\\n6\\n') == \"impossible\"\nassert solution('3 1\\n1\\n') == \"000\"\nassert solution('16 1\\n3\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n21"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"impossible\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\n99\") == \"1\", \"Expected 1, got {}\".format(solution(\"10\\n99\"))\nassert solution(\"90\\n10\") == \"10\", \"Expected 10, got {}\".format(solution(\"90\\n10\"))\n"
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input(\"Enter the first positive integer: \")) == \"1\", \"Incorrect output. Expected '1', got '{}'\".format(solution(input(\"Enter the first positive integer: \"))))\nassert solution(input(\"Enter the second positive integer: \")) == \"10\", \"Incorrect output. Expected '10', got '{}'\".format(solution(input(\"Enter the second positive integer: \"))))\nassert solution(input(\"Enter the third positive integer: \")) == \"90\", \"Incorrect output. Expected '90', got '{}'\".format(solution(input(\"Enter the third positive integer: \"))))"
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10\\n99') == '1', '1'\nassert solution('90\\n10') == '10', '2'\n"
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\n99\\n\") == \"1\\n\", \"Test 1 failed\"\nassert solution(\"90\\n10\\n\") == \"10\\n\", \"Test 2 failed\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\n99\") == \"1\\n\"\nassert solution(\"90\\n10\") == \"10\\n\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10\\n99') == '1\\n', \"Solution 1 failed\"\nassert solution('90\\n10') == '10\\n', \"Solution 2 failed\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\n99\\n\") == \"1\\n\"\nassert solution(\"90\\n10\\n\") == \"10\\n\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\n99\") == \"1\"\nassert solution(\"90\\n10\") == \"10\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == 1\nassert solution(open(\"input.txt\", \"r\")) == 10\n"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\\n\"  # Expected output: 2"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 3 3\\n4 1 10\\n2 7 3\") == \"2\\n\", \"Test 1 failed\"\nassert solution(\"4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\") == \"1\\n\", \"Test 2 failed\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 3 3\\n4 1 10\\n2 7 3\") == \"2\\n\", \"Expected output: '2'\\nGot: '{}'\\n\".format(solution(\"3\\n2 3 3\\n4 1 10\\n2 7 3\"))"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\"\n"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\\n\"\nassert solution(\"3\\n2 3 3\\n4 1 10\\n2 7 3\\n\") == \"2\\n\"\nassert solution(\"4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\\n\") == \"1\\n\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\"\nassert solution(open(\"example1.txt\", \"r\").read()) == \"2\"\nassert solution(open(\"example2.txt\", \"r\").read()) == \"1\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 3 3\\n4 1 10\\n2 7 3\\n\") == \"2\\n\"\nassert solution(\"4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\\n\") == \"1\\n\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 3 3\\n4 1 10\\n2 7 3\") == \"2\\n\"\nassert solution(\"4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\") == \"1\\n\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"3\\n2 3 3\\n4 1 10\\n2 7 3\") == \"2\\n\"\nassert solution(stdin=\"4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\") == \"1\\n\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('test_cases/input1.txt', 'r')) == '2\\n'\nassert solution(open('test_cases/input2.txt', 'r')) == '1\\n'"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"5\"\nassert solution() == \"11\"\nassert solution() == \"16\""
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"beginning\") == 5\nassert solution(\"1 5\") == 11\nassert solution(\"4 8\") == 16"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"beginning\") == 5\nassert solution(\"1 5\\n4 8\\n1 9\") == 5\nassert solution(\"6 1\\nvelvet\\n1 6\") == 7\n"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(data) == output, f\"Wrong output: expected {output}, got {solution(data)}\" for data, output in [\n    (\"9 3\\nbeginning\\n1 5\\n4 8\\n1 9\", \"5\\n11\\n16\"),\n    (\"6 1\\nvelvet\\n1 6\", \"7\\ndef solution(stdin: str) -> str:\\n    pass\\n\")\n]"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"beginning\") == \"5\"\nassert solution(\"1 5 4 8 1 9\") == \"5\\n11\\n16\""
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abc\") == \"abc\"\nassert solution(\"abcdef\") == \"bcdef\"\nassert solution(\"level\") == \"level\"\nassert solution(\"madam\") == \"madam\"\nassert solution(\"levelandmadam\") == \"madam\"\nassert solution(\"thequickbrownfoxjumpsoverthelazydog\") == \"thequickbrownfoxjumpsoverthelazydog\"\nassert solution(\"levelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamlevelandmadamleveland"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"beginning\") == \"5\"\nassert solution(\"1 5\\n4 8\\n1 9\") == \"5\\n11\\n16\""
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test failed for input {input()} and output {output}\""
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"beginning\") == \"5\"\nassert solution(\"1 5\") == \"11\"\nassert solution(\"4 8\") == \"16\"\nassert solution(\"1 9\") == \"5\""
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"The solution provided does not match the expected output.\""
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == 23"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == expected, f\"Test case {i+1} failed\" for i, (input, expected) in enumerate(tests)"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\", \"Incorrect output\""
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 4\\n3 1\\n2 2\\n1 1') == 2\nassert solution('2 3\\n1 23\\n2 17') == 23"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n3 1\\n2 2\\n1 1\\n\") == 2\nassert solution(\"2 3\\n1 23\\n2 17\\n\") == 23\n"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\", \"Incorrect output\"\n"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n3 1\\n2 2\\n1 1\") == 2\nassert solution(\"2 3\\n1 23\\n2 17\") == 23\nassert solution(\"\") == 0\nassert solution(\"3 4\\n3 1\\n2 2\\n1 1\") == 2"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == expected1\nassert solution(sample_input2) == expected2"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 'TODO' # Add your solution here"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 0.0000000000\n\nsolution.py:\n\n```python\n"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\\n\") == 0.0000000000\nassert solution(\"6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\\n\") == 9.476048311178\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\") == 0.0000000000\nassert solution(\"0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\") == 9.476048311178"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 0.0000000000\n"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"0.0000000000\"\n"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 0.0000000000\nassert solution() == 9.476048311178"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n4\n0 0\n2 0\n2 2\n0 2\n0 -1 0 3\n''') == 0.0000000000\nassert solution('''\n6\n0 1\n0 4\n3 6\n7 5\n4 2\n7 0\n5 7 2 0\n''') == 9.476048311178"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '0.0000000000', 'Your solution is incorrect.'\n"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    4\n    0 0\n    2 0\n    2 2\n    0 2\n    0 -1 0 3\n    \"\"\"\n) == \"0.0000000000\"\n\nassert solution(\n    \"\"\"\n    6\n    0 1\n    0 4\n    3 6\n    7 5\n    4 2\n    7 0\n    5 7 2 0\n    \"\"\"\n) == \"9.476048311178\""
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 0.0000000000\nassert solution() == 9.476048311178"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\") == \"8.0000000000\\n\"\nassert solution(\"5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\") == \"0.0200000000\\n\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([5, 2, 0, 1, 0, 2, -2, 0, 0, 2]) == 8.0\nassert solution([5, 0.2, 0.0, 0, -0.2, 0, 0.2]) == 0.02"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(5)) == '8.0'\nassert solution(str(5)) == '8.0'"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == output, f\"Solution mismatch: expected {output}, got {solution(stdin)}\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\") == \"8.0000000000\\n\"\nassert solution(\"5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\") == \"0.0200000000\\n\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected output: {output}, Received output: {solution(input())}\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution_input1) == solution_output1\nassert solution(solution_input2) == solution_output2"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"0.0200000000\", \"Expected 0.0200000000, but got {}\".format(solution())"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution_input1) == solution_output1\nassert solution(solution_input2) == solution_output2"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\\nSample Input 1\\n9 4 3\\n1 1 9 9 1 6 6 39 9\\nSample Output 1\\n2\\n\\n\\nSample Input 2\\n10 2 2\\n1 1 1 1 1 2 2 2 2 2\\nSample Output 2\\n2\\n\") == \"2\\n\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Your solution is incorrect. Expected: '{output()}' Received: '{solution(input())}'\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\\n\") == \"2\"\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == \"2\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\\n\") == 2\n\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == 2\n\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == 2\n\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == 2\n\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == 2\n\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == 2\n\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == 2\n\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == 2\n\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == 2\n\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == 2\n\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == 2\n\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == 2\n\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == 2\n\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == 2\n\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == 2\n\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == 2\n\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == 2\n\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == 2\n\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == 2\n\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == 2\n\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == 2\n\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == 2\n\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == 2\n\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == 2\n\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == 2\n\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == 2\n\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == 2\n\nassert solution"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\\n10 2 2\\n1 1 1 1 1 2 2 2 2 2\") == \"2\\n\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == \"2\"\nassert solution(sample_input2) == \"2\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\") == 2\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\") == 2"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''9 4 3\n1 1 9 9 1 6 6 39 9''') == '2\\n'\nassert solution('''10 2 2\n1 1 1 1 1 2 2 2 2 2''') == '2\\n'"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('9 4 3\\n1 1 9 9 1 6 6 39 9\\n') == '2'\nassert solution('10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n') == '2'"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 2\\n1 2 3\") == \"3.666666667\\n\"\nassert solution(\"4 11 4\\n10 10 10 10\") == \"20.000000000\\n\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\").read()) == \"3.666666667\\n\"\n"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(3, 3, 2)) == '3.666666667'\nassert solution(str(4, 11, 4)) == '20.000000000'"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 2\\n1 2 3\\n\") == \"3.666666667\"\nassert solution(\"4 11 4\\n10 10 10 10\\n\") == \"20.000000000\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3 2\\n1 2 3\\n\") == \"3.666666667\"\nassert solution(\"4 11 4\\n10 10 10 10\\n\") == \"20.000000000\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == \"3.666666667\"\nassert solution(sample_input2) == \"20.000000000\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3.666666667\", \"The output should be 3.666666667\"\n"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == 20.000000000, \"Expected Output: 20.000000000\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 2\\n1 2 3\\n\") == \"3.666666667\"\nassert solution(\"4 11 4\\n10 10 10 10\\n\") == \"20.000000000\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3 2\\n1 2 3\\n') == '3.666666667'\nassert solution('4 11 4\\n10 10 10 10\\n') == '20.000000000'"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='1 42\\n2 123456789') == 2\nassert solution(stdin='5 123456789') == 16317634"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 42\") == \"2\"\nassert solution(\"5 123456789\") == \"16317634\""
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == expected, f\"Test case failed: expected {expected}, got {solution(stdin=input())}\""
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2\\n'\nassert solution(stdin) == '16317634\\n'"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 42\") == 2, \"Test case 1 failed\"\nassert solution(\"5 123456789\") == 16317634, \"Test case 2 failed\"\n\nfrom functools import reduce"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, \"The solution provided is not correct. Expected output: {}, got {}\".format(expected_output, solution(stdin))"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\\n\", \"Test case 1\"\n\nassert solution(stdin) == \"16317634\\n\", \"Test case 2\""
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 8\nassert solution(4) == 16\nassert solution(5) == 65536\nassert solution(6) == 2586269024995669258"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 2, \"Incorrect output: {}\".format(solution())  # Check if the output matches the expected output"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 42\") == 2\nassert solution(\"5 123456789\") == 16317634"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 0 0 2\\n1 2 2\\n1 1 1\") == \"0\\n\"\nassert solution(\"3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\") == \"4\\n\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1 0 0 2\\n1 2 2\\n1 1 1\") == \"0\\n\"\nassert solution(\"3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\") == \"4\\n\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1 0 0 2\\n1 2 2\\n1 1 1\\n\") == \"0\\n\"\nassert solution(\"3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\\n\") == \"4\\n\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1 0 0 2\\n1 2 2\\n1 1 1\\n\") == \"0\"\nassert solution(\"3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\\n\") == \"4\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 0 0 2\\n1 2 2\\n1 1 1\\n\") == \"0\\n\"\nassert solution(\"3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\\n\") == \"4\\n\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1 0 0 2\\n1 2 2\\n1 1 1\") == 0\nassert solution(\"3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\") == 4"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1 0 0 2\\n1 2 2\\n1 1 1\\n\") == \"0\\n\"\nassert solution(\"3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\\n\") == \"4\\n\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 1 0 0 2\\n1 2 2\\n1 1 1') == '0\\n'\nassert solution('3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6') == '4\\n'"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 0 0 2\\n1 2 2\\n1 1 1\\n\") == \"0\\n\"\nassert solution(\"3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\\n\") == \"4\\n\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 0 0 2\\n1 2 2\\n1 1 1\\n\") == \"0\\n\"\nassert solution(\"3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\") == \"4\\n\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input) == expected, f\"Test case {i+1} failed\"\n"
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == \"3\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\") == \"3\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == \"3\\n\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\") == \"3\\n\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == \"3\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\") == \"3\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == \"3\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\") == \"3\"\n"
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == output, f\"Test case failed: {input}!= {output}\"\nfor input, output in test_cases:\n    assert solution(input) == output, f\"Test case failed: {input}!= {output}\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n5 1 10 10\n8 8\n5 1\n4 6\n4 7\n7 9\n''') == '3'\nassert solution('''\n5 1 100 100\n27 75\n79 77\n40 93\n62 41\n52 45\n''') == '3'"
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\\n\") == \"3\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\\n\") == \"3\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('ABC') == '2', \"Expected '2', got '{}'.\".format(solution('ABC'))\nassert solution('ABBBAAAA') == '3', \"Expected '3', got '{}'.\".format(solution('ABBBAAAA'))\nassert solution('ABCDE') == '0', \"Expected '0', got '{}'.\".format(solution('ABCDE'))"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('ABC') == 2\nassert solution('ABBBAAAA') == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ABC\") == 2, \"ABC\"\nassert solution(\"ABBBAAAA\") == 3, \"ABBBAAAA\""
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\nA\\nB\\nAA\\nBBB\\nA\\n\") == \"3\", \"Example 1\"\nassert solution(\"5\\nA\\nABA\\nBBB\\nABABA\\nA\\n\") == \"3\", \"Example 2\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(r'''\n    5\n    \nA\nB\nAA\nBBB\nAAA''') == '3'\n\nassert solution(r'''\n    5\n    \nA\nABA\nBBB\nABABA\nAAAAAB''') == '3'"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\nA\\nB\\nAA\\nB\\nAA\") == \"3\"\nassert solution(\"5\\nA\\nABA\\nBBB\\nABABA\\nAAAAAB\") == \"3\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_data) == expected_output, \"Incorrect output\"\nfor input_data, expected_output in [\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3\"),\n    (\"5\", \"3"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n    5\n    1A\n    1B\n    1A\n    1B\n    1A\n    1B\n    '''\n) == '3'\n\nassert solution(\n    '''\n    5\n    1A\n    1B\n    1A\n    1B\n    1A\n    1B\n    '''\n) == '3'\n\nassert solution(\n    '''\n    5\n    1A\n    1B\n    1A\n    1B\n    1A\n    1B\n    '''\n) == '3'"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '3\\n'\nassert solution(open('sample_input.txt', 'r')) == '3\\n'\nassert solution(open('sample_input.txt', 'r')) == '3\\n'\nassert solution(open('sample_input.txt', 'r')) == '3\\n'\nassert solution(open('sample_input.txt', 'r')) == '3\\n'\n"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '3\\n', 'Test case 1 failed'\nassert solution(stdin) == '3\\n', 'Test case 2 failed'"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\nA\\nB\\nA\\nAAAAAB\\n\") == \"3\", \"Test case 1 failed\"\nassert solution(\"5\\nA\\nABA\\nBBB\\nABABA\\n\") == \"3\", \"Test case 2 failed\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3\\n\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0.1909090909\\n\" # correct output\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    100 10 2 1\n    \"\"\"\n) == \"0.1\\n\"\n\nassert solution(\n    \"\"\"\n    100 10 2 2\n    \"\"\"\n) == \"0.1909090909\\n\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"100 10 2 1\") == 0.1\nassert solution(\"100 10 2 2\") == 0.1909090909"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0.1909090909\\n\", \"Incorrect output for example 1\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('100 10 2 1') == 0.1\nassert solution('100 10 2 2') == 0.1909090909\nassert solution('100 5 3 1') == 0.2\nassert solution('100 5 3 2') == 0.1960784314\nassert solution('100 5 3 3') == 0.1909090909\nassert solution('100 5 3 4') == 0.1862745098\nassert solution('100 5 3 5') == 0.1818181818\nassert solution('100 5 3 6') == 0.1777777778\nassert solution('100 5 3 7') == 0.1733333333\nassert solution('100 5 3 8') == 0.1688888889\nassert solution('100 5 3 9') == 0.1644444444\nassert solution('100 5 3 10') == 0.1600000000\nassert solution('100 5 3 11') == 0.1555555556\nassert solution('100 5 3 12') == 0.1511111111\nassert solution('100 5 3 13') == 0.1466666667\nassert solution('100 5 3 14') == 0.1422222222\nassert solution('100 5 3 15') == 0.1377777778\nassert solution('100 5 3 16') == 0.1333333333\nassert solution('100 5 3 17') == 0.1288888889\nassert solution('100 5 3 18') == 0.1244444444\nassert solution('100 5 3 19') == 0.1200000000\nassert solution('100 5 3 20') == 0.1155555556\nassert solution('100 5 3 21') == 0.1111111111\nassert solution('100 5 3 22') == 0.1066666667\nassert solution('100 5 3 23') == 0.1022222222\nassert solution('100 5 3 24') == 0.0977777778\nassert solution('100 5 3 25') == 0.0933333333\nassert solution('100 5 3 26') == 0.0888888889\nassert solution('100 5 3 27') == 0.0844444444\nassert solution('100 5 3 28') == 0.0800000000\nassert solution('100 5 3 29') == 0.0755555556\nassert solution('100 5 3 30') == 0.0711111111\nassert solution('100 5 3 31') == 0.0666666667\nassert solution('100 5 3 32') == 0.0622222222\nassert solution('100 5 3 33') == 0.0577777778\nassert solution('100 5 3 34') == 0.0533333333\nassert solution('100 5 "
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    input()\n) == 0.1909090909, \"Output should be 0.1909090909.\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('100 10 2 1') == 0.1\nassert solution('100 10 2 2') == 0.1909090909\n"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"100 10 2 1\") == \"0.1\"\nassert solution(\"100 10 2 2\") == \"0.1909090909\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"0.1\", \"The solution should be 0.1\"\nassert solution(5) == \"0.01909090909\", \"The solution should be 0.01909090909\"\n"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 0.1\nassert solution() == 0.1909090909"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == \"4\"\nassert solution(\"ABABABcABABAbAbab\") == \"0\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\""
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('ABABABcABABAbAbab') == 4\nassert solution('ABABABcABABAbAbab') == 0\nassert solution('ABABABcABABAbAbab') == 5"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r').read()) == 4, \"Expected output: 4, Actual output: {}\".format(solution(open('input.txt', 'r').read()))"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 5"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == \"4\\n0\\n5\"\nassert solution(\"AAPL\") == \"1\\n0\"\nassert solution(\"ABABAB\") == \"0\\n0\"\nassert solution(\"ABABABc\") == \"0\\n0\""
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 0\nassert solution(\"ABABABcABABAbAbab\") == 5"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('ABABABcABABAbAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\nassert solution('ABABABcABABAbab') == 4\n"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == \"0\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\""
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == [\"4\", \"0\", \"5\"]\n"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\\n\") == \"2\\n\"\nassert solution(\"4 2\\n0\\n1\\n2\\n\") == \"3\\n\"\nassert solution(\"4 3\\n1\\n1\\n2\\n\") == \"2\\n\"\nassert solution(\"4 2\\n0\\n2\\n1\\n\") == \"4\\n\"\nassert solution(\"4 3\\n2\\n2\\n1\\n\") == \"3\\n\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 3\\n0\\n0\\n1') == '2\\n'\nassert solution('4 3\\n0\\n1\\n0') == '1\\n'"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=None) == \"2\\n\", \"The output is not correct.\"\nassert solution(stdin=\"4 3\\n0\\n0\\n1\\n\") == \"2\\n\", \"The output is not correct.\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\") == \"2\\n\"\nassert solution(\"5 2\\n1\\n1\\n2\\n2\") == \"2\\n\"\nassert solution(\"7 3\\n0\\n0\\n1\\n1\\n1\\n1\") == \"4\\n\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == '2', 'The output is incorrect.'"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\") == 2\n"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 3\\n0\\n0\\n1\\n') == '2\\n'\n\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\\n\", \"The maximum number of nodes that can be marked is 2.\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '1\\nP0: 22 1 4 2 6 -1 0'\nprint('All tests passed')"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n\") == \"1\\nP0: 22 1 4 2 6 -1 0\\n\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP0: 22 1 4 2 6 -1 0\\n\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\\nP0: 22 1 4 2 6 -1 0\\n\", \"The output is not correct.\"\n"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP0: 22 1 4 2 6 -1 0\\n\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP0: 22 1 4 2 6 -1 0\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Solution is incorrect. Expected: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 'Professor Braino Mars is one of the top researchers in the field of solar system creation. He runs various simulations to test out his theories on planet formation, but he\u2019s old school and all of these simulations are done by hand. It\u2019s time for Braino to enter the $21^{\\textrm{st}}$ century, and he\u2019s asked you to help automate his simulations.\n\nOne of Prof.\u00a0Mars\u2019 simulations models how small planetoids collide over time to form larger planets. To model this process he divides the space which the planetoids inhabit into an $n_ x \\times n_ y \\times n_ z$ grid of cubes, where each cube can hold at most one planetoid. Each planetoid has an initial mass $m$, an initial location $(x, y, z)$ in the grid and a velocity $(v_ x, v_ y, v_ z)$ indicating the number of cubes per second the planetoid travels through in each dimension. For example, if a planetoid is initially in location $(1, 3, 2)$ and has velocity $(3, -1, 2)$, then after $1$ second it will be in location $(4, 2, 4)$, after $2$ seconds it will be in location $(7, 1, 6)$, and so on. The planetoid paths wrap around in all dimensions, so if, for example, the planetoid described above resides in an $8\\times 8\\times 8$ space, its next two locations will be $(2, 0, 0)$ and $(5, 7, 2)$ (note that all cube indices start at $0$). When two or more planetoids collide, they form one larger planetoid which has a mass equal to the sum of the colliding planetoids\u2019 masses and a velocity equal to the average of the colliding velocities, truncating to the nearest integer. So if a planetoid of mass $12$ with velocity $(5, 3, -2)$ collides with another planetoid of mass $10$ and velocity $(8, -6, 1)$ the resulting planetoid has mass $22$ and velocity $(6, -1, 0)$ (these values correspond to the first sample input.) For simplicity, Prof.\u00a0Mars only considers collisions that happen at integer time steps, and when no more collisions are possible, the planetoids are then considered full-fledged planets.\n\nGiven an initial set of planetoids, Prof.\u00a0Mars is interested in determining how many planets will form and what their orbits are. Armed with your implementation of his model, he should now be able to answer these questions much more easily.\n\n-----Input-----\nThe input will start with a line containing four positive integers $n$ $n_ x$ $n_ y$ $n_ z$, where $n \\leq 100$ is the number of planetoids, and $n_ x$, $n_ y$ and $n_ z$ are the dimensions of the space the planetoids reside in, where $n_ x, n_ y, n_ z \\leq 1000$.\n\nAfter this are $n$ lines of the form $m$$x$ $y$ $z$ $v_ x$ $v_ y$$v_ z$, specifying the mass, initial location and initial velocity of each planetoid at time $t=0$, where $1 \\leq m \\leq 100$, $0\\leq x<n_ x, 0 \\leq y<n_ y, 0\\leq z<n_ z$, and $-1000 \\leq v_ x, v_ y, v_ z \\leq 1000$. No two planetoids will start in the same initial location.\n\n\n\n-----Output-----\nOutput an integer $p$ indicating the number of planets in the system after no more collisions can occur. After this output $p$ lines, one per planet, listing a planet identifier P$i$, $(0 \\leq i < p)$, the mass, location and velocity of each planet. Use the location of the planets at the time that the last collision occurred.\n\nIf no collisions occur, then use their location at time $t=0$.\n\nThe planets should be ordered from largest mass to smallest; break ties by using the lexicographic ordering of the $x,y,z$ location of the planet, starting with the smallest $x$ value.\n\n-----Examples-----\nSample Input:\n2 8 8 8\n12 4 1 4 5 3 -2\n1"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    2 8 8 8\n    12 4 1 4 5 3 -2\n    10 1 2 1 8 -6 1\n    \"\"\"\n) == \"1\\nP0: 22 1 4 2 6 -1 0\"\n\nassert solution(\n    \"\"\"\n    3 8 8 8\n    12 4 1 4 5 3 -2\n    10 1 2 1 8 -6 1\n    \"\"\"\n) == \"1\\nP0: 22 1 4 2 6 -1 0\"\n\nassert solution(\n    \"\"\"\n    2 8 8 8\n    12 4 1 4 5 3 -2\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    \"\"\"\n) == \"1\\nP0: 22 1 4 2 6 -1 0\\nP1: 16 1 4 2 6 -1 0\"\n\nassert solution(\n    \"\"\"\n    2 8 8 8\n    12 4 1 4 5 3 -2\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8 -6 1\n    10 1 2 1 8"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP1: 22 1 4 2 6 -1 0\"\nassert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP2: 22 1 4 2 6 -1 0\"\nassert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP3: 22 1 4 2 6 -1 0\"\nassert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP4: 22 1 4 2 6 -1 0\"\nassert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP5: 22 1 4 2 6 -1 0\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_data) == output_data, \"Test case failed\"\n"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == output, f\"The output is incorrect. Please check the solution again.\" for input, output in zip(stdin.split(), solution(stdin.split()).splitlines())"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n') == '1\\n2\\n3\\n'\n\nassert solution('4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n4') == '1\\n2\\n3\\n4\\n'"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == [\"1\", \"2\", \"3\", \"4\"]"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n\") == \"1\\n2\\n3\\n\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\npass\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\\n2\\n3\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\") == \"1\\n2\\n3\\n\"\nassert solution(\"4 10\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\") == \"1\\n2\\n3\\n\"\nassert solution(\"3 10\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\") == \"1\\n2\\n3\\n\"\n"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\") == \"1\\n2\\n3\\n\"\nassert solution(\"1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\") == \"1\\n2\\n3\\n\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\"\nassert solution(\"5\\n1 4 3 2 5\\n2 3 4 5 1\") == \"3\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\n\"\nassert solution(\"100001\\n1 2 3 4 5 6 7 8 9 10\") == \"10001\\n1 2 3 4 5 6 7 8 9 10\\n\"\nassert solution(\"100000\\n1 2 3 4 5 6 7 8 9 10 11\") == \"10000\\n1 2 3 4 5 6 7 8 9 10 11\\n\"\nassert solution(\"100000\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"100000\\n1 2 3 4 5 6 7 8 9 10 11 12\\n\"\nassert solution(\"100000\\n1 2 3 4 5 6 7 8 9 10 11 12 13\") == \"1000000\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\n\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6\\n1 5 4 3 2 6\\n1 2 5 4 3 6') == '2\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n1 5 4 3 2 6\\n1 2 5 4 3 6') == '2'\nassert solution('6\\n1 5 4 3 2 6\\n1 2 5 4 3 6') == 'def solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\n1\"\nassert solution(\"6\\n1 5 4 3 2 6\\n2 1 4 3 5 6\") == \"2\\n5\"\nassert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\n1\"\nassert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\n1\"\nassert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\n1\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\\n\") == \"2\""
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80\n''') == '60'\n"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 3 2\\n1 30 2 5"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\\n\"\n"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n    3 3 2\n    1 30 2 50\n    2 70 3 10\n    3 20 1 80\n    \"\"\") == 60, \"Incorrect output for sample input.\""
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '60'\n"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 60, \"Your solution is incorrect!\"\n"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80') == '60\\n'\nassert solution('3 1 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80') == '60\\n'\nassert solution('3 4 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80') == '-1\\n'\n\nfrom typing import List"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\\n\") == \"60\\n\"\nassert solution(\"5 4 3\\n2 50 1 30\\n1 10 2 70\\n\") == \"-1\\n\""
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\n"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\\n') == 60, \"Expected 60, got {}\".format(solution('3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\\n'))"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n10000 0 0\\n0 10000 0\\n0 0 10000\\n3\\n5000 0 0\\n0 2000 0\\n0 0 4000') == 'Case #1: 1\\nCase #2: 2'"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"\"\"Case #1: 1\nCase #2: 2\"\"\""
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n3\\n10000 0 0\\n0 10000 0\\n0 0 10000\\n3\\n5000 0 0\\n0 2000 0\\n0 0 4000\") == \"Case #1: 1\\nCase #2: 2\"\n"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Case #1: 1\\nCase #2: 2\\n\"\n"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, \"Testcase not executed\""
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n    2\n    3\n    10000 0 0\n    0 10000 0\n    0 0 10000\n    3\n    5000 0 0\n    0 2000 0\n    0 0 4000\n\"\"\") == \"\"\"\nCase #1: 1\nCase #2: 2\n\"\"\""
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n3\\n10000 0 0\\n0 10000 0\\n0 0 10000\\n3\\n5000 0 0\\n0 2000 0\\n0 0 4000\\n\") == \"Case #1: 1\\nCase #2: 2\"\n"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('Input') == 'Output'"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'Case #1: 1\\nCase #2: 2\\n'"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n3\\n10000 0 0\\n0 10000 0\\n0 0 10000\\n3\\n5000 0 0\\n0 2000 0\\n0 0 4000\") == \"Case #1: 1\\nCase #2: 2\"\n"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\") == \"6 6 6 1\""
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == ['6', '6', '6', '1']"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_str) == output_str, f\"Expected: {output_str}\\nGot: {solution(input_str)}\""
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    input()\n) == [6, 6, 6, 1]"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '6 6 6 1', \"Test case 1 failed\""
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '6 6 6 1'"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == '6 6 6 1'"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == []\nassert solution(\"+1 2 H 2 O 1\") == [6, 6, 6, 1]\nassert solution(\"+1 2 C 1 O 2\") == [6, 6, 1, 1]\nassert solution(\"-1 1 O 2\") == [6, 6, 5, 1]\nassert solution(\"-1 3 C 6 H 12 O 6\") == [6, 6, 1, 1]\nassert solution(\"0 0\") == [6, 6, 6, 1]"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin: str) == [\"6\", \"6\", \"6\", \"1\"]"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"example.in\", \"r\")) == \"6 6 6 1\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"The input consists of a single test case.\\nThe first line contains an integer N (4 \\leq N \\leq 100).\\nThe next line contains two integers D and L, where 1 \\le D \\le 1000 is the depth of the aquarium tank and 0 \\le L \\le 2000 is the number of litres of water to pour into the tank.\\nThe next N lines each contain two integers, giving the (x,y) coordinates of the vertices of the convex polygon in counterclockwise order. The absolute values of x and y are at most 1000.\\n\\nThe tank has a positive capacity, and you never pour more water than the tank can hold.\\n\\nSample Input:\\n4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\\n\\nSample Output:\\n20.83\") == \"20.83\"\n\nfor _ in range(int(input())):\n    N, D, L = map(int, input().split())\n    vertices = list(map(int, input().split()))\n    \n    area = 0\n    for i in range(N):\n        area += vertices[i]*(vertices[(i+1)%N] + vertices[(i+2)%N])\n    \n    height = area*D/1000\n    \n    print(f\"{height:.2f}\")"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40') == '20.83'\n"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"The input consists of a single test case.\\n\\n3\\n20 0\\n100 0\\n100 40\\n20 40\\n\") == \"20.83\\n\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected_output, f\"Solution: {solution}, Expected Output: {expected_output}\"\n\nfor _ in range(10):\n    solution, expected_output = generate_inputs()\n    print(f\"Solution: {solution}, Expected Output: {expected_output}\")"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"The output is incorrect. Expected '{output}', but got '{solution(input())}'\"\n"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40') == '20.83'"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '20.83', \"The solution should be 20.83, but it's: {}\".format(solution())"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"The input consists of a single test case. The first line contains an integer N (4 <= N <= 100), giving the number of vertices in the polygon. The next line contains two integers D and L, where 1 <= D <= 1000 is the depth of the aquarium tank and 0 <= L <= 2000 is the number of litres of water to pour into the tank. The next N lines each contain two integers, giving the (x,y) coordinates of the vertices of the convex polygon in counterclockwise order. The absolute values of x and y are at most 1000. You may assume that the tank has a positive capacity, and you never pour more water than the tank can hold.\") == 20.83, \"Incorrect output.\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"20.83\", \"Incorrect output\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4\n30 50\n20 0\n100 0\n100 40\n20 40\n\"\"\") == \"20.83\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3\\n1 2 5\\n7 6 4\\n9 8 3') == '49'\nprint(\"Test passed\")"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\n1 2 5\\n7 6 4\\n9 8 3') == 49\nassert solution('2 2\\n1 2 3\\n3 4 5') == 3\nassert solution('3 3\\n2 2 4\\n1 3 5') == 1\nassert solution('3 3\\n2 2 4\\n1 3 5\\n6 7 8') == 0\nassert solution('1 2 3\\n4 5 6\\n7 8 9') == 3\nassert solution('3 3\\n2 2 4\\n1 3 5\\n6 7 8\\n9 8 9') == 4\nassert solution('3 3\\n2 2 4\\n1 3 5\\n6 7 8\\n9 8 9\\n10 11 12') == 1\nassert solution('3 3\\n2 2 4\\n1 3 5\\n6 7 8\\n9 8 9\\n10 11 12\\n13 14 15') == 1"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\\n\") == \"49\"\nassert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\\n2 3\\n\") == \"24\"\nassert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\\n2 3\\n1 1\\n\") == \"4\"\nassert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\\n2 3\\n1 1\\n2 2\\n\") == \"4\"\nassert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\\n2 3\\n1 1\\n2 2\\n3 3\\n\") == \"24\"\nassert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\\n2 3\\n1 1\\n2 2\\n3 3\\n2 2\\n\") == \"4\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"49\\n\"\n"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3\\n1 2 5\\n7 6 4\\n9 8 3') == '49'"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == 49\n"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\nfor R in range(int(input())):\n    grid = input()\n    word = input()\n    print(grid)"
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\") == \"\"\"##CROSSWORD####\"\"\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\") == \"##CROSSWORD####\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"##CROSSWORD####\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\").read()) == \"##CROSSWORD####\\n\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\") == \"##CROSSWORD####\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\\n\") == \"##CROSSWORD####\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\\n\") == \"##CROSSWORD####\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n2 7 6\\n9 5 1\\n4 3 8\") == 31\nassert solution(\"5 3\\n3 2\\n8 7\") == 29\nassert solution(\"8 6\\n7 5\\n9 4\") == 37\nassert solution(\"5 4\\n7 6\\n2 3\\n8 1\") == 42"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n2 7 6\\n9 5 1\\n4 3 8\") == \"31\\n\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(1) + \"\\n\" + str(3) + \"\\n\" + str(2) + \"\\n\" + str(7) + \"\\n\" + str(6) + \"\\n\" + str(9) + \"\\n\" + str(5) + \"\\n\" + str(1) + \"\\n\" + str(4) + \"\\n\" + str(3) + \"\\n\" + str(8)) == \"31\", \"Sample Output: 31, solution(str(1) + \"\\n\" + str(3) + \"\\n\" + str(2) + \"\\n\" + str(7) + \"\\n\" + str(6) + \"\\n\" + str(9) + \"\\n\" + str(5) + \"\\n\" + str(1) + \"\\n\" + str(4) + \"\\n\" + str(3) + \"\\n\" + str(8))\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_string) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input_string)}\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''3 1\n2 7 6\n9 5 1\n4 3 8''') == '31'"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"31\", \"The expected output is incorrect. Please check your solution.\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 1) == 31\nassert solution(2, 7, 6) == 43\nassert solution(9, 5, 1) == 106\nassert solution(4, 3, 8) == 189"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\nr\"\"\"\n3 1\n2 7 6\n9 5 1\n4 3 8\n\"\"\") == \"31\\n\"\n\nassert solution(\nr\"\"\"\n3 3\n2 7 6\n9 5 1\n4 3 8\n\"\"\") == \"24\\n\"\n\nassert solution(\nr\"\"\"\n3 4\n2 7 6\n9 5 1\n4 3 8\n\"\"\") == \"12\\n\"\n\nassert solution(\nr\"\"\"\n3 5\n2 7 6\n9 5 1\n4 3 8\n\"\"\") == \"8\\n\"\n\nassert solution(\nr\"\"\"\n3 6\n2 7 6\n9 5 1\n4 3 8\n\"\"\") == \"2\\n\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n2 7 6\\n9 5 1\\n4 3 8\\n\") == 31"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n2 7 6\\n9 5 1\\n4 3 8\") == \"31\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\\n\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 1\\nBBW') == '2\\n'\nassert solution('2 2\\nBW') == '0\\n'\nassert solution('4 4\\nW') == '5\\n'\nassert solution('5 1\\nW') == '5\\n'\nassert solution('6 1\\nB') == '10\\n'"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\"\n"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 1) == \"2\"\nassert solution(4, 1) == \"0\"\nassert solution(4, 2) == \"2\"\nassert solution(4, 3) == \"1\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"3 1\\nBBW\") == \"2\"\nprint(\"All good!\")"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 2, \"Test failed\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\nBBW\\n\") == \"2\\n\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '2\\n'\n"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 1\\n3 2 1\\n1 2 3\\n') == '0.556'\nprint('All tests passed!')"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == 0.556, \"Expected output: 0.556\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n3 2 1\\n1 2 3\") == \"0.556\\n\", \"Test case 1 failed\"\nassert solution(\"4 5\\n5 10 20 30 40\\n3 4 5 6 7 8\") == \"120.0\\n\", \"Test case 2 failed\"\nassert solution(\"5 6\\n10 20 30 40 50\\n15 25 35 45 55\\n7 8 9 10 11 12\") == \"216.77\\n\", \"Test case 3 failed\"\nassert solution(\"3 10\\n1 2 3 4 5 6 7 8 9 10\\n1 1 1 1 1 1 1 1 1 1 1\") == \"0.1\\n\", \"Test case 4 failed\"\nassert solution(\"5 6\\n1 2 3 4 5\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\") == \"0.2\\n\", \"Test case 5 failed\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n3 2 1\\n1 2 3\") == \"0.556\"\n"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == expected_output, f\"Expected output: {expected_output}\\nGot output: {solution(input_data)}\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\n3 2 1\\n1 2 3\") == \"0.556\\n\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0.556\" # your answer here"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"0.556\", \"Invalid output\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"0.556\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4 3 2\") == \"3\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 4 3 2\") == \"3\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 4 3 2\") == \"3\"\n"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4 3 2\") == \"3\\n\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=f\"\"\"\n    5 4 3 2\n    \"\"\") == \"3\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"\n\nfrom typing import List"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4 3 2\") == 3\n"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4 3 2\") == \"3\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4 3 2\") == \"3\"\n"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"3\"\nprint(\"Correct!\")"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\\n\") == \"13\\n\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == \"13\""
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    4\n    1 3 6\n    2 5 8\n    3 3 5\n    5 3 6\n    \"\"\"\n) == \"13\"\n"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"13\\n\", \"Test case 1 failed\""
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\\n\""
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"13\"\n\nfrom typing import List"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\\n') == '13'"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"13\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\"\nassert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\\n4 5 10\") == \"20\"\nassert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\\n4 5 10\\n7 5 15\") == \"25\""
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n4\n1 3 6\n2 5 8\n3 3 5\n5 3 6\n''') == '13'"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Output: {output}, Expected: {output}\""
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\") == 3.141593\nassert solution(\"10.000000 20.123456\\n2\\n13.141593 20.123456\") == 0.0\nassert solution(\"10.000000 20.123456\\n3\\n13.141593 20.123456\") == 0.0\nassert solution(\"10.000000 20.123456\\n4\\n13.141593 20.123456\") == 0.0\nassert solution(\"10.000000 20.123456\\n5\\n13.141593 20.123456\") == 0.0\nassert solution(\"10.000000 20.123456\\n6\\n13.141593 20.123456\") == 0.0\nassert solution(\"10.000000 20.123456\\n7\\n13.141593 20.123456\") == 0.0\nassert solution(\"10.000000 20.123456\\n8\\n13.141593 20.123456\") == 0.0\nassert solution(\"10.000000 20.123456\\n9\\n13.141593 20.123456\") == 0.0\nassert solution(\"10.000000 20.123456\\n10\\n13.141593 20.123456\") == 0.0\nassert solution(\"10.000000 20.123456\\n11\\n13.141593 20.123456\") == 0.0\nassert solution(\"10.000000 20.123456\\n12\\n13.141593 20.123456\") == 0.0\nassert solution(\"10.000000 20.123456\\n13\\n13.141593 20.123456\") == 0.0\nassert solution(\"10.000000 20.123456\\n14\\n13.141593 20.123456\") == 0.0\nassert solution(\"10.000000 20.123456\\n15\\n13.141593 20.123456\") == 0.0\nassert solution(\"10.000000 20.123456\\n16\\n13.141593 20.123456\") == 0.0\nassert solution(\"10.000000 20.123456\\n17\\n13.141593 20.123456\") == 0.0\nassert solution(\"10.000000 20.123456\\n18\\n13.141593 20.123456\") == 0.0\nassert solution(\"10.000000 20.123456\\n19\\n13.141593 20.123456\") == 0.0\nassert solution(\"1"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == 3.141593\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n\") == 2.5\nassert solution(\"10000000000000000000000000000000 100000000000000000000000000000000\\n10000000000000000000000000000000\\n100000000000000000000000000000000\\n10000000000000000000000000000000\\n100000000000000000000000000000000\\n100000000000000000000000000000000\\n10000000000000000000000000000000\\n100000000000000000000000000000000\\n1000000000000000000000000000000000\\n1000000000000000000000000000000000\\n100000000000000000000000000000000\\n1000000000000000000000000000000000\\n1000000000000000000000000000000000\\n1000000000000000000000000000000000\\n1000000000000000000000000000000000\\n10000000000000000000000000000000000\\n1000000000000000000000000000000000\\n1000000000000000000000000000000000\\n10000000000000000000000000000000000\\n1000000000000000000000000000000000\\n1000000000000000000000000000000000\\n10000000000000000000000000000000000\\n1000000000000000000000000000000000\\n1000000000000000000000000000000000\\n1000000000000000000000000000000000"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == 3.141593"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\") == 3.141593\nassert solution(\"10.000000 20.123456\\n2\\n13.141593 20.123456\") == 3.141593\nassert solution(\"10.000000 20.123456\\n3\\n13.141593 20.123456\") == 3.141593\nassert solution(\"10.000000 20.123456\\n4\\n13.141593 20.123456\") == 3.141593\nassert solution(\"10.000000 20.123456\\n5\\n13.141593 20.123456\") == 3.141593\nassert solution(\"10.000000 20.123456\\n6\\n13.141593 20.123456\") == 3.141593\nassert solution(\"10.000000 20.123456\\n7\\n13.141593 20.123456\") == 3.141593\nassert solution(\"10.000000 20.123456\\n8\\n13.141593 20.123456\") == 3.141593\nassert solution(\"10.000000 20.123456\\n9\\n13.141593 20.123456\") == 3.141593\nassert solution(\"10.000000 20.123456\\n10\\n13.141593 20.123456\") == 3.141593\nassert solution(\"10.000000 20.123456\\n11\\n13.141593 20.123456\") == 3.141593\nassert solution(\"10.000000 20.123456\\n12\\n13.141593 20.123456\") == 3.141593\nassert solution(\"10.000000 20.123456\\n13\\n13.141593 20.123456\") == 3.141593\nassert solution(\"10.000000 20.123456\\n14\\n13.141593 20.123456\") == 3.141593\nassert solution(\"10.000000 20.123456\\n15\\n13.141593 20.123456\") == 3.141593\nassert solution(\"10.000000 20.123456\\n16\\n13.141593 20.123456\") == 3.141593\nassert solution(\"10.000000 20.123456\\n17\\n13.141593 20.123456\") == 3.141593\nassert solution(\"10.000000 20.123456\\n18\\n13.1"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '3.141593', 'Test Case Failed'"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == \"3.141593\""
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n1\\n13.141593 -20.123456\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n1\\n-13.141593 20.123456\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n1\\n-13.141593 -20.123456\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n1\\n-13.141593 20.123456\") == \"3.141593\""
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\") == \"3.141593\"\n"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == \"3.141593\", \"Incorrect output.\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n4 4\\n2\") == \"2.13333333333333\\n\"\nassert solution(\"3\\n4 5\\n2\") == \"impossible\\n\"\nassert solution(\"3\\n4 3\\n2\") == \"2.13333333333333\\n\"\nassert solution(\"4\\n2\") == \"impossible\\n\"\nassert solution(\"3\\n4 5\\n2 2\") == \"2.13333333333333\\n\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Output {output}, but got {solution(input())} instead.\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n2\") == \"2.13333333333333\"\n"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"2.13333333333333\"\n"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"2.13333333333333\\nimpossible\\n\"\nassert solution(5) == \"17.0\\n\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n2\") == \"2.13333333333333\\n\"\nassert solution(\"4 5\\n3 3 4 3\") == \"impossible\\n\"\nassert solution(\"4 3\\n1 2 3 4\") == \"impossible\\n\"\n"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '2.13333333333333\\nimpossible\\n'\nassert solution(open('sample_input.txt', 'r')) == '2.13333333333333\\n2.13333333333333\\n'"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 4\\n2') == '2.13333333333333'\n\nassert solution('3\\n4 4\\n2') == 'impossible'"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"3\\n4 4\\n2\\n\") == \"2.13333333333333\\nimpossible\"\nassert solution(stdin=\"5\\n2\\n3\\n4\\n\") == \"impossible\"\nassert solution(stdin=\"3\\n4\\n\") == \"impossible\"\nassert solution(stdin=\"1000\\n\") == \"impossible\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2.13333333333333\"\n"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4) == 18\nassert solution(12) == 43\nassert solution(1000000) == 146665250\nassert solution(2000000) == 318527246\nassert solution(10000000) == 648589956"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\") == \"18\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(7) == \"18\"\n\nfrom typing import List"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(7) == '18'\nassert solution(10) == '25'\nassert solution(15) == '60'\nassert solution(20) == '125'\nassert solution(50) == '50'"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"18\"\nassert solution(\"3\") == \"42\"\nassert solution(\"4\") == \"80\"\nassert solution(\"5\") == \"140\"\nassert solution(\"6\") == \"240\"\nassert solution(\"7\") == \"360\"\n"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(10) == '18'"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n\") == \"18\\n\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\") == \"18\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(7) == \"18\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n4\n35 M classicism programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer\n''') == '3'\n\nassert solution('''\n4\n25 M classicism maths\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer\n''') == '2'\n\nassert solution('''\n5\n25 M classicism maths\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer\n15 M baroque football\n''') == '3'"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3\"\n"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\") == \"3\"\n"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\") == \"3\"\nassert solution(\"3\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\") == \"2\"\nassert solution(\"3\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\") == \"1\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n') == '3'\n"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt')) == '3'"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\") == \"3\"\n"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer') == '3'\n"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n\\treturn 'def solution(stdin: str) -> str:\\n\\t\\tpass\\n\\n'"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == \"def solution(stdin: str) -> str:\\n\\treturn \\\"\\\" # Your solution goes here\\n\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4') == '2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '2\\n1\\n2\\ndef solution(stdin: str) -> str:\\npass\\n'"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '''\n2\n1\n2\n"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4') == '2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n') == '2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('1\\n\\n') == ''\nassert solution('3\\na 0\\nb 1\\nc 2\\nd 3\\ne 4\\nf 5\\ng 6\\n') == '2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test failed: {solution(input())}!= {output}\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"5\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0') == '5\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == \"__main__\":\\n    main()\\n\\ndef main():\\n    n, k = map(int, input().split())\\n    partners = []\\n    for _ in range(n):\\n        g, p = map(int, input().split())\\n        p = max(0, p - g)\\n        p = min(10**9, p)\\n        partners.append((g, p))\\n    partners.sort(key=lambda x: x[1], reverse=True)\\n    d = 0\\n    for partner in partners[:k]:\\n        d += partner[1]\\n    print(d)\\n\\n'"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0') == 5, \"Incorrect output\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"5\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Please note that this code is a placeholder and you need to complete the solution.\\n# You can use the given code as a starting point.\\n\"\n"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == \"5\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\") == \"5\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '5\\n'\n"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\\n') == '5'"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\") == 4, \"Your solution is incorrect.\"\n"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Incorrect output. Expected: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"4\"\n"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"4\\n\", \"Expected output: 4\\nActual output: \" + solution(stdin)"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4') == '4\\n'\nassert solution('3 1\\n2 2\\n1 1\\n2 1\\n1 2\\n') == '2\\n'\nassert solution('5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4') == '2\\n'\nassert solution('4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n') == '4\\n'\nassert solution('3 1\\n2 2\\n1 1\\n2 1\\n1 2\\n1 2\\n') == '2\\n'\n"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4') == '4\\n'\n"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4') == '4\\n'\nassert solution('4 5\\n1 2\\n2 3\\n3 4\\n4 5') == '2\\n'\nassert solution('4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n4 5') == '1\\n'\nassert solution('4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n4 5') == '0\\n'"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 4"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\") == 4\nprint(\"All tests passed!\")"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 4, \"The solution is incorrect.\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4\n1 2\n2 3\n3 4\n\"\"\") == \"\"\"\n2\n3 4\n2 4\n\"\"\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    4\n    1 2\n    2 3\n    3 4\n    \"\"\"\n) == \"\"\"\n2\n3 4\n2 4\n\"\"\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n2 3\\n3 4\") == \"2\\n3 4\"\nassert solution(\"5 5\\n5 5\\n5 5\") == \"2\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n5 5\") == \"2\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}, got: {solution(input())}\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n2 4\"\nassert solution(\"5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\") == \"2\\n5 6\\n2 3\\n4 1\\n10 7\\n9 6\\n8 5\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n4\n1 2\n2 3\n3 4\n''') == '''\n2\n3 4\n2 4\n'''\n\nassert solution('''\n5\n1 2\n2 3\n3 4\n4 5\n5 6\n6 1\n''') == '''\n2\n3 4\n5\n4 6\n3 5\n2 1\n'''\n\nassert solution('''\n4\n1 2\n2 3\n3 4\n5 6\n6 1\n''') == '''\n3\n4 6\n2 5\n1 2\n'''\n\nassert solution('''\n3\n1 2\n2 3\n4 5\n6 7\n''') == '''\n1\n4 7\n3 2\n2 5\n'''\n\nassert solution('''\n5\n1 2\n2 3\n3 4\n4 5\n5 6\n7 8\n8 9\n''') == '''\n3\n4 6\n5 7\n2 1\n3 9\n'''\n\nassert solution('''\n3\n1 2\n2 3\n4 5\n6 7\n''') == '''\n4\n6 7\n3 1\n2 5\n'''\n\nassert solution('''\n5\n1 2\n2 3\n3 4\n4 5\n5 6\n7 8\n8 9\n''') == '''\n4\n5 7\n3 2\n2 6\n3 9\n'''"
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"The output is {solution(input())}, but expected {expected_output}\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt').read()) == '2\\n3 4\\n2 4'\nprint('All test cases passed')"
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '2\\n3 4\\n2 4'"
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n2 4\"\nassert solution(\"5\\n1 2\\n2 3\\n3 4\\n5 6\\n4 5\\n6 7\\n7 8\") == \"2\\n3 4\\n2 4\\n1 5\\n6 7\\n5 8\""
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    2 2\n    1 3\n    2 1\n    3 5\n    7 2\n    ''') == '5'"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 2\\n1 3\\n2 1\\n3 5\\n7 2') == 5\nprint(\"Pass\")"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 5 # expected output: 5"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 2\\n1 3\\n2 1\\n3 5\\n7 2\\n') == 5\nassert solution('1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n16 16\\n17 17\\n18 18\\n19 19\\n20 20\\n21 21\\n22 22\\n23 23\\n24 24\\n25 25\\n26 26\\n27 27\\n28 28\\n29 29\\n30 30\\n31 31\\n32 32\\n33 33\\n34 34\\n35 35\\n36 36\\n37 37\\n38 38\\n39 39\\n40 40\\n41 41\\n42 42\\n43 43\\n44 44\\n45 45\\n46 46\\n47 47\\n48 48\\n49 49\\n50 50\\n51 51\\n52 52\\n53 53\\n54 54\\n55 55\\n56 56\\n57 57\\n58 58\\n59 59\\n60 60\\n61 61\\n62 62\\n63 63\\n64 64\\n65 65\\n66 66\\n67 67\\n68 68\\n69 69\\n70 70\\n71 71\\n72 72\\n73 73\\n74 74\\n75 75\\n76 76\\n77 77\\n78 78\\n79 79\\n80 80\\n81 81\\n82 82\\n83 83\\n84 84\\n85 85\\n86 86\\n87 87\\n88 88\\n89 89\\n90 90\\n91 91\\n92 92\\n93 93\\n94 94\\n95 95\\n96 96\\n97 97\\n98 98\\n99 99\\n100 100\\n101 101\\n102 102\\n103 103\\n104 104\\n105 105\\n106 106\\n107 107\\n108 108\\n109 109\\n110 110\\n111 111\\n112 112\\n113 113\\n114 114\\n115 115\\n116 116\\n117 117\\n118 118\\n119 119\\n120 120\\n121 121\\n122 122\\n123 123\\n124 124\\n125 125\\n126 126\\n127 127\\n128 128\\n129 129\\n130 130\\n131 131\\n132 132\\n133 133\\n134 134\\n"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n2 2\n1 3\n2 1\n3 5\n7 2\n\"\"\"\n) == 5\n\nassert solution(\n\"\"\"\n1 1\n3 2\n5 4\n8 6\n\"\"\"\n) == 4\n\nassert solution(\n\"\"\"\n3 1\n4 2\n5 3\n6 4\n7 5\n\"\"\"\n) == 5\n\nassert solution(\n\"\"\"\n3 1\n4 1\n5 1\n6 1\n7 1\n\"\"\"\n) == 4\n\nassert solution(\n\"\"\"\n1 1\n1 1\n1 1\n1 1\n1 1\n\"\"\"\n) == 0"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"5\\n\""
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 5\n"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '5\\n5'\n"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '5'"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\\n\") == \"5\"\n"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\""
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    3 5 3\n    1 1\n    2 2\n    1 3\n    0 0\n    0 3\n    1 4\n    3 3\n    3 0\n    ''') == '2'\n\nassert solution('''\n    4 5 3\n    1 1\n    2 2\n    1 3\n    0 0\n    0 3\n    1 4\n    3 3\n    3 0\n    ''') == '1'"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=None) == \"2\""
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == \"2\"\n\nfrom typing import List"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n1 4\\n1 4\\n3 3\\n3 0\") == 0\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n1 4\\n1 4\\n1 4\\n3 3\\n3 0\") == 3\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n1 4\\n1 4\\n1 4\\n3 3\\n3 0\\n3 3\\n3 0\\n1 4\\n1 4\\n3 3\\n3 0\\n1 4\\n1 4\\n3 3\\n3 0\\n3 3\\n3 0\") == 0\n"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n\") == \"2\"\n"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_data) == output_data, \"Your solution is incorrect. Please see the sample input and output to see the correctness of your solution.\""
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == output, f\"Test {i+1} failed: {solution(input)!= output}\" for i, (input, output) in enumerate(zip(stdin.splitlines(), stdout.splitlines()))"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == \"2\\n\"\nprint(\"Test Passed!\")"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 3\\n3 C\\n2 C\\n1 C') == 'GHOST'\nassert solution('4 3\\n3 W\\n2 W\\n1 W') == 'SAFE'\nassert solution('4 3\\n3 C\\n2 W\\n1 W') == 'SAFE'\nassert solution('4 3\\n3 W\\n2 C\\n1 W') == 'GHOST'\nassert solution('4 3\\n3 C\\n2 W\\n1 C') == 'SAFE'"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Test case {i+1} failed: got {solution(input())}, expected {expected}\"\n"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\") == \"GHOST\"\nassert solution(\"4 3\\n3 W\\n2 W\\n1 W\") == \"SAFE\"\nassert solution(\"4 3\\n3 CW\\n2 CCW\\n1 CCW\") == \"SAFE\"\nassert solution(\"4 3\\n3 CW\\n2 CW\\n1 CCW\") == \"SAFE\"\nassert solution(\"4 3\\n3 CCW\\n2 CW\\n1 CW\") == \"SAFE\"\nassert solution(\"4 3\\n3 CW\\n2 CCW\\n1 CW\") == \"SAFE\"\nassert solution(\"4 3\\n3 CW\\n2 CW\\n1 CW\") == \"SAFE\"\nassert solution(\"4 3\\n3 CW\\n2 CCW\\n1 CCW\") == \"SAFE\"\nassert solution(\"4 3\\n3 CW\\n2 CW\\n1 CCW\") == \"SAFE\"\nassert solution(\"4 3\\n3 CCW\\n2 CW\\n1 CW\") == \"SAFE\"\nassert solution(\"4 3\\n3 CW\\n2 CCW\\n1 CW\") == \"SAFE\"\nassert solution(\"4 3\\n3 CW\\n2 CW\\n1 CCW\") == \"SAFE\"\nassert solution(\"4 3\\n3 CCW\\n2 CW\\n1 CW\") == \"SAFE\"\nassert solution(\"4 3\\n3 CW\\n2 CCW\\n1 CW\") == \"SAFE\"\nassert solution(\"4 3\\n3 CW\\n2 CW\\n1 CCW\") == \"SAFE\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\") == \"GHOST\"\nassert solution(\"5 3\\n3 C\\n2 W\\n1 C\") == \"SAFE\"\nassert solution(\"5 3\\n3 C\\n2 C\\n1 W\") == \"GHOST\"\n"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 3\\n3 C\\n2 C\\n1 C') == 'GHOST\\n'\nassert solution('4 3\\n3 C\\n2 C\\n1 W') == 'SAFE\\n'\nassert solution('4 3\\n3 C\\n2 W\\n1 C') == 'SAFE\\n'\nassert solution('4 3\\n3 W\\n2 C\\n1 C') == 'SAFE\\n'\nassert solution('4 3\\n3 C\\n2 W\\n1 W') == 'SAFE\\n'"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\\n\") == \"GHOST\"\nassert solution(\"4 3\\n3 W\\n2 W\\n1 W\\n\") == \"SAFE\"\nassert solution(\"4 4\\n3 C\\n2 W\\n1 C\\n\") == \"SAFE\"\nassert solution(\"4 4\\n3 C\\n2 W\\n1 W\\n\") == \"SAFE\"\nassert solution(\"4 4\\n3 C\\n2 W\\n1 C\\n\") == \"SAFE\"\nassert solution(\"4 5\\n3 C\\n2 W\\n1 W\\n\") == \"SAFE\"\nassert solution(\"4 5\\n3 C\\n2 W\\n1 C\\n\") == \"SAFE\"\nassert solution(\"4 5\\n3 C\\n2 W\\n1 W\\n\") == \"SAFE\"\nassert solution(\"4 5\\n3 C\\n2 W\\n1 C\\n\") == \"SAFE\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\\n\") == \"GHOST\"\nassert solution(\"4 3\\n3 W\\n2 W\\n1 W\\n\") == \"SAFE\"\nassert solution(\"4 3\\n3 CCW\\n2 CCW\\n1 CCW\\n\") == \"SAFE\"\nassert solution(\"4 3\\n3 CW\\n2 CW\\n1 CW\\n\") == \"GHOST\"\nassert solution(\"4 3\\n3 CW\\n2 CCW\\n1 CW\\n\") == \"SAFE\"\nassert solution(\"4 3\\n3 CW\\n2 CCW\\n1 CCW\\n\") == \"GHOST\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 3\\n3 C\\n2 C\\n1 C') == 'GHOST'\nassert solution('4 3\\n3 W\\n2 W\\n1 W') == 'SAFE'\nassert solution('4 3\\n3 R\\n2 R\\n1 R') == 'SAFE'\n"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(4, 3) == \"GHOST\"\nassert solution(2, 3) == \"SAFE\"\n\nfrom typing import List"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\") == \"GHOST\"\nassert solution(\"10 3\\n2 C\\n3 C\\n4 C\") == \"SAFE\""
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n0.00 2.00\") == \"2\"\nassert solution(\"4 5\\n0.10 2.00\\n0.20 2.00\\n0.30 2.00\\n0.40 2.00\\n0.50 2.00\\n0.60 2.00\\n0.70 2.00\\n0.80 2.00\\n0.90 2.00\\n1.00 2.00\\n\") == \"2\"\nassert solution(\"6 7\\n0.00 2.00\\n0.10 2.00\\n0.20 2.00\\n0.30 2.00\\n0.40 2.00\\n0.50 2.00\\n0.60 2.00\\n0.70 2.00\\n0.80 2.00\\n0.90 2.00\\n1.00 2.00\\n1.10 2.00\\n1.20 2.00\\n1.30 2.00\\n1.40 2.00\\n1.50 2.00\\n1.60 2.00\\n1.70 2.00\\n1.80 2.00\\n1.90 2.00\\n2.00 2.00\\n2.10 2.00\\n2.20 2.00\\n2.30 2.00\\n2.40 2.00\\n2.50 2.00\\n2.60 2.00\\n2.70 2.00\\n2.80 2.00\\n2.90 2.00\\n3.00 2.00\\n3.10 2.00\\n3.20 2.00\\n3.30 2.00\\n3.40 2.00\\n3.50 2.00\\n3.60 2.00\\n3.70 2.00\\n3.80 2.00\\n3.90 2.00\\n4.00 2.00\\n4.10 2.00\\n4.20 2.00\\n4.30 2.00\\n4.40 2.00\\n4.50 2.00\\n4.60 2.00\\n4.70 2.00\\n4.80 2.00\\n4.90 2.00\\n5.00 2.00\\n5.10 2.00\\n5.20 2.00\\n5.30 2.00\\n5.40 2.00\\n5.50 2.00\\n5.60 2.00\\n5.70 2.00\\n5.80 2.00\\n5.90 2.00\\n6.00 2.00\\n6.10 2.00\\n6.20 2.00\\n6.30 2.00\\n6.40 2.00\\n6.50 2.00\\n6.60 2.00\\n6.70 2.00\\n6.80 2.00\\n6.90 2.00\\n7.00 2.00\\n7.10 2.00\\n7.20 2.00\\n7.30 2.00\\n7.40 2.00\\n7.50 2.00\\n7.60 2.00\\n7.70 2.00\\n7.80 2.00\\n7."
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 3\\n0.00 2.00') == '2\\n'"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n0.00 2.00\") == \"2\"\nassert solution(\"3 2\\n0.01 2.00\") == \"no fika\"\nassert solution(\"4 2\\n0.00 1.99\") == \"no fika\"\nassert solution(\"10 10\\n0.01 0.99\") == \"2\"\nassert solution(\"10 10\\n0.01 1.00\") == \"no fika\"\nassert solution(\"10 10\\n0.01 0.99\") == \"2\"\nassert solution(\"10 10\\n0.01 1.00\") == \"no fika\"\nassert solution(\"10 10\\n0.01 0.99\") == \"2\"\nassert solution(\"10 10\\n0.01 1.00\") == \"no fika\"\nassert solution(\"10 10\\n0.01 0.99\") == \"2\"\nassert solution(\"10 10\\n0.01 1.00\") == \"no fika\"\nassert solution(\"10 10\\n0.01 0.99\") == \"2\"\nassert solution(\"10 10\\n0.01 1.00\") == \"no fika\"\nassert solution(\"10 10\\n0.01 0.99\") == \"2\"\nassert solution(\"10 10\\n0.01 1.00\") == \"no fika\"\nassert solution(\"10 10\\n0.01 0.99\") == \"2\"\nassert solution(\"10 10\\n0.01 1.00\") == \"no fika\"\nassert solution(\"10 10\\n0.01 0.99\") == \"2\"\nassert solution(\"10 10\\n0.01 1.00\") == \"no fika\"\nassert solution(\"10 10\\n0.01 0.99\") == \"2\"\nassert solution(\"10 10\\n0.01 1.00\") == \"no fika\"\nassert solution(\"10 10\\n0.01 0.99\") == \"2\"\nassert solution(\"10 10\\n0.01 1.00\") == \"no fika\"\nassert solution(\"10 10\\n0.01 0.99\") == \"2\"\nassert solution(\"10 10\\n0.01 1.00\") == \"no fika\"\nassert solution(\"10 10\\n0.01 0.99\") == \"2\"\nassert solution(\"10 10\\n0.01 1.00\") == \"no fika\"\nassert solution(\"10 10\\n0.01 0.99\") == \"2\"\nassert solution(\"10 10\\n0.01 1.00\") == \"no fika\"\nassert solution(\"10 10\\n0.01 0.99\") == \"2\"\nassert solution(\"10 10\\n0.01 1.00\") == \"no fika\"\nassert solution(\"10 10\\n0.01 0.99\") == \"2\"\nassert solution(\"10 10\\n0.01 1.00\") == \"no fika\"\nassert solution(\"10 10\\n0.01 0.99\") == \"2\"\nassert solution(\"10 10\\n0.01 1.00\") == \"no fika\"\nassert solution(\"10 10\\n0.01 0.99\") == \"2\"\nassert solution(\"10 10\\n0.01 1.00\") == \"no fika\"\nassert solution(\"10 10\\n0.01 0.99\") == \"2\"\nassert solution(\"10 10\\n0.01 1.00\") == \"no fika\"\nassert solution(\"10 10\\n0.01 0."
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n0.00 2.00\") == \"2\""
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n0.00 2.00\") == \"2\""
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n0.00 2.00\") == \"2\"\n\nprint(\"All tests passed.\")"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '2\\n'"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Test failed: expected output '{}' but got '{}'.\".format(output(), solution(input()))"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 3\\n0.00 2.00\\n') == '2\\n'\nassert solution('2 4\\n0.00 1.50\\n0.10 2.00\\n') == '2\\n'\nassert solution('2 5\\n0.00 2.00\\n0.10 2.00\\n0.10 1.50\\n') == '2\\n'\nassert solution('2 6\\n0.00 2.00\\n0.10 2.00\\n0.10 2.00\\n0.10 1.50\\n') == '2\\n'\nassert solution('2 7\\n0.00 2.00\\n0.10 2.00\\n0.10 2.00\\n0.10 2.00\\n0.10 1.50\\n') == 'no fika\\n'"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n2\n0 0\n10 0\n2\n30 0\n15 0\n\"\"\") == \"10\\n\""
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == '10'\nassert solution('1\\n2 3\\n4 5\\n6 7\\n8 9') == '15'\nassert solution('3\\n4 -2\\n0 -3\\n6 10\\n-10 -5') == '2'\n"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"10\\n\"\n"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n2\n0 0\n10 0\n2\n30 0\n15 0\n''') == 10"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == 10\n\nfrom typing import List"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '10\\n', \"Testcase 1 Failed\""
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 10\n"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\"\n"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == 10\nassert solution(\"3\\n20 0\\n10 0\\n4\\n20 0\\n20 0\") == 20\nassert solution(\"5\\n5 0\\n0 0\\n5\\n0 0\\n5 0\") == 10\n"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"10\\n\" # Example output\n\nfrom typing import List"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10 0\\n10 3\\n17 4\\n') == '0'\nassert solution('10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n') == '0'\nassert solution('10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 4\\n10 0\\n10 3\\n17 "
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\") == \"0\"\n"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"0\\n\""
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('8 3\\nW 10 0\\nW 10 3\\nE 17 4') == '0'"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 3\\nW 10 0\\nW 10 3\\nE 17 4') == '0'\nassert solution('2 4\\nA 0 1\\nB 2 3') == '1'\n"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '0\\n'\n"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\""
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_data) == expected_output, f\"Output {solution(input_data)} is not as expected. Expected: {expected_output}\""
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 0, \"Your solution is incorrect\""
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == sample_output, f\"Test failed. Expected output: {sample_output}, Received output: {solution(sample_input)}\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\"\n"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"No solution\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\\n\") == \"3\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == '3'\n"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\") == 3\n"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\") == \"3\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r'''\n5\n5 8\n5 6\n3 4\n5 13\n6 10\n''') == 3\n"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 3"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'impossible'\n"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 'impossible'"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n10 3 3\") == \"impossible\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n10 3 3\\n\") == \"impossible\\n\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"impossible\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'impossible'"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n10 3 3\") == \"impossible\"\nassert solution(\"4 4\\n10 3 3\\n10 2 4\\n9 2 1\\n9 3 1\\n9 1 1\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(2) + \" \" + str(4) + \"\\n\" + \"10 3 3\\n\") == \"impossible\\n\"\nassert solution(str(2) + \" \" + str(4) + \"\\n\" + \"3 10 2\\n\") == \"4\\n\"\nassert solution(str(2) + \" \" + str(4) + \"\\n\" + \"3 10 1\\n\") == \"4\\n\"\nassert solution(str(2) + \" \" + str(4) + \"\\n\" + \"3 10 4\\n\") == \"impossible\\n\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'impossible'"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'impossible\\n'"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\""
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\""
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nassert solution('''\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nassert solution('''\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\n"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('11\\nBETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\""
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\""
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(b\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\\n\") == [\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"]\nassert solution(b\"11\\nHELLO\\nworld\\nthis\\n\\n\\n\\n\") == [\"HELLO\", \"world\", \"this\"]\nassert solution(b\"11\\nHELLO WORLD\\nthis is a test\\n\\n\\n\\n\") == [\"HELLO WORLD\", \"this is a test\"]\nassert solution(b\"11\\nHELLO WORLD\\nthis is a test\\n\\n\\n\\n\") == [\"HELLO WORLD\", \"this is a test\"]\nassert solution(b\"11\\nHELLO WORLD\\nthis is a test\\n\\n\\n\\n\") == [\"HELLO WORLD\", \"this is a test\"]\nassert solution(b\"11\\nHELLO WORLD\\nthis is a test\\n\\n\\n\\n\") == [\"HELLO WORLD\", \"this is a test\"]"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"The output is not correct.\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"Expected 12, got {}\".format(solution(\"abrahellehhelleh\"))  # Test 1\nassert solution(\"rachelhellabracadabra\") == 0, \"Expected 0, got {}\".format(solution(\"rachelhellabracadabra\"))  # Test 2\nassert solution(\"defendthecity\") == 0, \"Expected 0, got {}\".format(solution(\"defendthecity\"))  # Test 3\nassert solution(\"world\") == 0, \"Expected 0, got {}\".format(solution(\"world\"))  # Test 4\nassert solution(\"hello\") == 0, \"Expected 0, got {}\".format(solution(\"hello\"))  # Test 5"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input(\"Enter a word: \")) == 12, \"Test case failed\"\nprint(\"Test case passed\")"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"Test failed\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abrahellehhelleh\") == \"12\"\n"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"Test case 1 failed\"\nassert solution(\"rachelhellabracadabra\") == 0, \"Test case 2 failed\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"12\", \"The solution should return the correct result.\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"Test failed for input: abrahellehhelleh\"\nassert solution(\"rachelhellabracadabra\") == 0, \"Test failed for input: rachelhellabracadabra\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"Expected 12, got: \" + solution(\"abrahellehhelleh\")"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"Expected 12, got {}\".format(solution(\"abrahellehhelleh\"))"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '70'\nassert solution(stdin='65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '70'\nassert solution(stdin='65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '70'\nassert solution(stdin='65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '70'\nassert solution(stdin='65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '70'\nassert solution(stdin='65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '70'\nassert solution(stdin='65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '70'\nassert solution(stdin='65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '70'\nassert solution(stdin='65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '70'\nassert solution(stdin='65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '70'\nassert solution(stdin='65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '70'\nassert solution(stdin='65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '70'\nassert solution(stdin='65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '70'\nassert solution(stdin='65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '70'\nassert solution(stdin='65\\n1 1 1 1 1"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\\n\"\n"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"70\""
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\\n\"\nassert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\\n\"\nassert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\\n\", \"Test failed\""
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"70\", \"Expected output: '70', got: {}\".format(solution(input()))"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n') == '70'\nprint('All tests pass')"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == '''\n"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '70\\n', \"Your solution is incorrect. Please provide the correct code for testing.\""
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\"  # Example output"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\") == \"10\\n7\\n8\\n7\"\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\") == \"10\\n7\\n8\\n7\"\n"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(input())) == \"10\\n7\\n8\\n7\\n\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\") == \"10\\n7\\n8\\n7\\n\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\") == \"10\\n7\\n8\\n7\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4') == '10\\n7\\n8\\n7'\n"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == '''\nRar the Cat$^($\u2122$^)$ is the founder of ACM (Association of Cats and Magical Lights). This is the story of the founding of ACM.\n\nIt is the second half of the year again and Rar the Cat$^($\u2122$^)$ is looking forward to Christmas. When people think of Christmas, Christmas trees will surely come into the picture. This year, Rar the Cat$^($\u2122$^)$ decides to decorate a Christmas tree with $N$ LED lights with up to 100 different colours. Each LED light can only have a single colour as Rar the Cat$^($\u2122$^)$ is too poor to afford more sophisticated models of LED lights.\n\nBeing a programmer himself, Rar the Cat$^($\u2122$^)$ LED lights are arranged in a tree formation on the Christmas tree. That being said, each LED light can be represented as a node and the wires between $2$ LED lights can be represented as an edge. The whole formation consists of $N$ nodes fully connected by $N-1$ edges. The nodes are labelled from $1$ to $N$ and each node can hold colour denoted as $1$ to $100$. It is noted that each LED is connected to every other LED directly or indirectly by wires and the tree formed is rooted at node $1$.\n\nHubert the Cow finds that Rar the Cat$^($\u2122$^)$ Christmas tree is too boring because it lacks some magical colours. A magical colour in a subtree is defined as a colour whereby there is an odd number of LEDs with that particular colour within the subtree only.In the tree to the right, the subtree of node $1$ has $3$ white nodes and $4$ black nodes. As such, white is a magical colour for the subtree of node $1$. However, the subtree of node $3$ has $1$ white node and $1$ black node, thus the number of magical colour of the subtree of node $3$ is $2$. In addition, all leaf nodes of the tree have $1$ magical colour by definition. \n\nIn order to improve on his Christmas tree decorations, Rar the Cat$^($\u2122$^)$ intends to modify the colours of the LED lights on the tree. However, he does not know how to count how many magical colours there are.\n\nYour task, is now to answer how many magical colours there are in a subtree requested by Rar the Cat$^($\u2122$^)$. This will be done in between Rar the Cat$^($\u2122$^)$ modifications. There will be $Q$ queries and modifications in total.\n\nSoon after this, Rar the Cat$^($\u2122$^)$ Christmas tree with these magical lights become so popular and Rar the Cat$^($\u2122$^)$ founded ACM to further spread the adoption of such trees worldwide.\n\n-----Input-----\nThe first line will consists of $2$ integers, $N$ and $Q$. $N$ will be positive and not more than $300000$ while $Q$ will be positive and not more than $1000000$.\n\n$N$ integers will follow on the next line. The $i^{th}$ integer will be $C_ i$. $C_ i$ denotes the colour of node $i$ and can only range from $1$ to $100$ inclusive.\n\nThe next line will have $N-1$ integers. The $i^{th}$ integer will be $P_{i+1}$, $P_{i+1}$ denotes the parent node of node $i+1$.\n\n$Q$ lines will then follow with $2$ integers each, $K$ followed by $X$. If $K$ is $0$, then this line represents a query for how many magical colours are there in the subtree of node $X$. If $K$ is an integer between $1$ and $100$, then it means that the colour of node $X$ is changed to colour $K$.\n\n-----Output-----\nFor each query when $K = 0$, output in one line: the number of magical colours in the subtree of $X$ (inclusive).\n\n-----Examples-----\nSample Input:\n10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"10\\n7\\n8\\n7\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}.\"\nfor _ in range(1000):\n    test_case = list(map(int, input().split()))\n    solution(test_case)"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n1 4\\n0"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    2 4 7\n    -2 0\n    ''') == '6\\n'\n\nassert solution('''\n    2 4 7\n    -2 0\n    ''') == '6\\n'\n\nassert solution('''\n    2 4 7\n    -2 0\n    ''') == '6\\n'\n\nassert solution('''\n    2 4 7\n    -2 0\n    ''') == '6\\n'\n\nassert solution('''\n    2 4 7\n    -2 0\n    ''') == '6\\n'\n\nassert solution('''\n    2 4 7\n    -2 0\n    ''') == '6\\n'\n\nassert solution('''\n    2 4 7\n    -2 0\n    ''') == '6\\n'\n\nassert solution('''\n    2 4 7\n    -2 0\n    ''') == '6\\n'\n\nassert solution('''\n    2 4 7\n    -2 0\n    ''') == '6\\n'\n\nassert solution('''\n    2 4 7\n    -2 0\n    ''') == '6\\n'"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == 6, \"Failed\""
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1') == '6'"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 6\nassert solution() == 6"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\n''') == '6\\n'"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\\n\"\nassert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\\n\"\nassert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\\n\"\nassert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\\n\"\nassert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\\n\""
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    2 4 7\n    -2 0\n    -1 0\n    -2 1\n    -1 1\n    2 1\n    2 3\n    3 0\n    -2 0\n    -1 0\n    -2 1\n    -1 1\n    -2 0\n    -1 0\n    -2 1\n    -1 1\n    2 1\n    2 3\n    3 0\n    -2 0\n    -1 0\n    -2 1\n    -1 1\n    -2 0\n    -1 0\n    -2 1\n    -1 1\n    -2 0\n    -1 0\n    -2 1\n    -1 1\n    2 1\n    2 3\n    3 0\n    -2 0\n    -1 0\n    -2 1\n    -1 1\n    -2 0\n    -1 0\n    -2 1\n    -1 1\n    -2 0\n    -1 0\n    -2 1\n    -1 1\n    2 1\n    2 3\n    3 0\n    -2 0\n    -1 0\n    -2 1\n    -1 1\n    -2 0\n    -1 0\n    -2 1\n    -1 1\n    -2 0\n    -1 0\n    -2 1\n    -1 1\n    2 1\n    2 3\n    3 0\n    -2 0\n    -1 0\n    -2 1\n    -1 1\n    -2 0\n    -1 0\n    -2 1\n    -1 1\n    -2 0\n    -1 0\n    -2 1\n    -1 1\n    -2 0\n    -1 0\n    -2 1\n    -1 1\n    2 1\n    2 3\n    3 0\n    -2 0\n    -1 0\n    -2 1\n    -1 1\n    -2 0\n    -1 0\n    -2 1\n    -1 1\n    -2 0\n    -1 0\n    -2 1\n    -1 1\n    2 1\n    2 3\n    3 0\n    -2 0\n    -1 0\n    -2 1\n    -1 1\n    -2 0\n    -1 0\n    -2 1\n    -1 1\n    -2 0\n    -1 0\n    -2 1\n    -1 1\n    -2 0\n    -1 0\n    -2 1\n    -1 1\n    2 1\n    2 3\n    3 0\n    -2 0\n    -1 0\n    -2 1\n    -1 1\n    -2 0\n    -1 0\n    -2 1\n    -1 1\n    -2 0\n    -1 0\n    -2 1\n    -1 1\n    -2 0\n    -1 0\n    -2 1\n    -1 1\n    2 1\n    2 3\n    3 0\n    -2 0\n    -1 0\n    -2 1\n    -1 1\n    -2 0\n    -1 0\n    -2 1\n    -1 1\n    -2 0\n    -1 0\n    -2 1\n    -1 1\n    -2 0\n    -1 0\n    -2 1\n    -1 1\n    2 1\n    2 3\n    3 0\n    -2 0\n    -1 0\n    -2 1\n    -1 1\n    -2 0\n    -1 0\n    -2 1\n    -1 1\n    -2 0\n    -1 0\n    -2 1\n    -1 1\n    -2 0\n    -1 0\n    -2 1\n    -1 1\n    2 1\n    2 3\n    3 0\n    -2 0\n    -1 0\n    -2 1\n    -1 1\n    -2 0\n    -1 0\n    -2 1\n    -"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '6'"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\n''') == '6'"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\"\nassert solution(\"2 3 5\\n-1 1\\n1 1\\n2 1\\n2 2\\n3 1\\n4 1\\n5 2\") == \"3\"\nassert solution(\"1 1 1\\n1 2\\n1 3\") == \"1\"\nassert solution(\"0 0 0\\n0 1\\n0 2\") == \"1\"\nassert solution(\"10 10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\") == \"5\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\\n\"\n"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 1 4 40') == '3'"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 1 4 40') == '3'\nassert solution('3.5 1.5 4.5 40') == '3'\nassert solution('3 1.1 4 40') == '4'\nassert solution('3.5 1.5 4.5 40.1') == '4'\nassert solution('3 1.1 4 41') == '4'\nassert solution('3 1.1 4 40.5') == '4'"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1 4 40\") == 3\n"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 4 40\") == \"3\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1 4 40\") == 3, \"Expected 3, but got: {}\".format(solution(\"3 1 4 40\"))"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1 4 40\") == \"3\\n\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1 4 40\") == 3, \"The correct output is not given.\"\n"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 1 4 40') == '3\\n', \"Solution not correct.\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"3\"\n"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\") == \"99\\n3\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n''') == '99\\n3\\n'\nassert solution('''\n1 3\n1 2\n3 3\n2 4\n3 5\n5 6\n6 1\n''') == '1 2 3 4 5 6\\n'\nassert solution('''\n3 123\n3 456\n3 789\n3 246\n3 579\n3 892\n''') == '99\\n3\\n'\nassert solution('''\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n''') == '1 2 3 4 5 6 7 8 9 10\\n'\nassert solution('''\n3 123\n3 456\n3 789\n3 246\n3 579\n3 892\n''') == '99\\n3\\n'\nassert solution('''\n3 123\n3 456\n3 789\n3 246\n3 579\n3 892\n1 246\n1 579\n1 892\n''') == '1 2 3 4 5 6 7 8 9 10\\n'\nassert solution('''\n3 123\n3 456\n3 789\n3 246\n3 579\n3 892\n0 246\n0 579\n0 892\n''') == '0\\n'\nassert solution('''\n3 123\n3 456\n3 789\n3 246\n3 579\n3 892\n1 246\n2 579\n2 892\n''') == '1 2 3 4 5 6 7 8 9 10\\n'\nassert solution('''\n3 123\n3 456\n3 789\n3 246\n3 579\n3 892\n1 246\n2 579\n3 892\n2 579\n''') == '1 2 3 4 5 6 7 8 9 10\\n'\nassert solution('''\n3 123\n3 456\n3 789\n3 246\n3 579\n3 892\n1 246\n2 579\n3 892\n2 579\n2 579\n''') == '1 2 3 4 5 6 7 8 9 10\\n'\nassert solution('''\n3 123\n3 456\n3 789\n3 246\n3 579\n3 892\n1 246\n2 579\n3 892\n2 579\n2 579\n2 579\n''') == '1 2 3 4 5 6 7 8 9 10\\n'\nassert solution('''\n3 123\n3 456\n3 789\n3 246\n3 579\n3 892\n1 246\n2 579\n3 892\n2 579\n2 579\n2 579\n2 579\n''') == '1 2 3 4 5 6 7 8 9 10\\n'\nassert solution('''\n3 123\n3 456\n3 789\n3 246\n3 5"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\") == \"99\\n3\\n\"\nassert solution(\"3 10\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\") == \"0\\n3\\n\"\nassert solution(\"2 60\\n1 2 3 4 5\\n2 3 4 5 6\\n3 4 5 6 7\\n4 5 6 7 8\\n5 6 7 8 9\") == \"85\\n4\\n1 3\\n2 4\\n3 5\\n4 6\\n5 7\\n6 8\\n7 9\\n\"\nassert solution(\"1 100\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"0\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n\"\nassert solution(\"2 100\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"0\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n\"\nassert solution(\"4 100\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"0\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\") == \"99\\n3\"\nassert solution(\"1 10\\n10 5\\n1 20\\n5 10\\n2 30\") == \"0\\n1 2\"\nassert solution(\"10 10\\n10 10\\n10 10\\n10 10\\n10 10\") == \"0\\n1 2\"\nassert solution(\"1 10\\n10 5\\n1 20\\n5 10\\n2 30\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\") == \"0\\n1 2\"\nassert solution(\"1 10\\n10 5\\n1 20\\n5 10\\n2 30\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\") == \"0\\n1 2\"\nassert solution(\"1 10\\n10 5\\n1 20\\n5 10\\n2 30\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 "
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\") == \"99\\n3\\n\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\") == \"99\\n3\\n\"\nassert solution(\"0 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\\n100 100 100\") == \"0\"\n"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0') == '99\\n3\\n'\nassert solution('0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0') == '0\\n'"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\") == \"99\\n3\\n\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n16 16\\n17 17\\n18 18\\n19 19\\n20 20\\n21 21\\n22 22\\n23 23\\n24 24\\n25 25\\n26 26\\n27 27\\n28 28\\n29 29\\n30 30\\n31 31\\n32 32\\n33 33\\n34 34\\n35 35\\n36 36\\n37 37\\n38 38\\n39 39\\n40 40\\n41 41\\n42 42\\n43 43\\n44 44\\n45 45\\n46 46\\n47 47\\n48 48\\n49 49\\n50 50\\n51 51\\n52 52\\n53 53\\n54 54\\n55 55\\n56 56\\n57 57\\n58 58\\n59 59\\n60 60\\n61 61\\n62 62\\n63 63\\n64 64\\n65 65\\n66 66\\n67 67\\n68 68\\n69 69\\n70 70\\n71 71\\n72 72\\n73 73\\n74 74\\n75 75\\n76 76\\n77 77\\n78 78\\n79 79\\n80 80\\n81 81\\n82 82\\n83 83\\n84 84\\n85 85\\n86 86\\n87 87\\n88 88\\n89 89\\n90 90\\n91 91\\n92 92\\n93 93\\n94 94\\n95 95\\n96 96\\n97 97\\n98 98\\n99 99\\n100 100\\n101 101\\n102 102\\n103 103\\n104 104\\n105 105\\n106 106\\n107 107\\n108 108\\n109 109\\n110 110\\n111 111\\n112 112\\n113 113\\n114 114\\n115 115\\n116 116\\n117 117\\n118 118\\n119 119\\n120 120\\n121 121\\n122 122\\n123 123\\n124 12"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\") == \"99\\n3\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n16 16\\n17 17\\n18 18\\n19 19\\n20 20\") == \"0\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n16 16\\n17 17\\n18 18\\n19 19\\n20 20\\n21 21\\n22 22\\n23 23\\n24 24\\n25 25\\n26 26\\n27 27\\n28 28\\n29 29\\n30 30\\n31 31\\n32 32\\n33 33\\n34 34\\n35 35\\n36 36\\n37 37\\n38 38\\n39 39\\n40 40\\n41 41\\n42 42\\n43 43\\n44 44\\n45 45\\n46 46\\n47 47\\n48 48\\n49 49\\n50 50\\n51 51\\n52 52\\n53 53\\n54 54\\n55 55\\n56 56\\n57 57\\n58 58\\n59 59\\n60 60\\n61 61\\n62 62\\n63 63\\n64 64\\n65 65\\n66 66\\n67 67\\n68 68\\n69 69\\n70 70\\n71 71\\n72 72\\n73 73\\n74 74\\n75 75\\n76 76\\n77 77\\n78 78\\n79 79\\n80 80\\n81 81\\n82 82\\n83 83\\n84 84\\n85 85\\n86 86\\n87 87\\n88 88\\n89 89\\n90 90\\n91 91\\n92 92\\n93 93\\n94 94\\n95 95\\n96 96\\n97 97\\n98 98\\n99 99\" == \"0\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\") == \"99\\n3\\n\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Test failed: {solution(input())}!= {output}\"\n"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\\n3 4\\n4 2\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n4\n1 2\n2 3\n3 4\n''') == '2\\n3 4\\n4 2'\n\nfrom typing import List\n"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4') == '2\\n3 4\\n4 2'\nassert solution('5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6') == '2\\n3 4\\n4 5\\n5 6'"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n3\\n4\") == \"2\\n3 4\\n4 1\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Solution is incorrect. Expected: {expected}, Actual: {solution(input())}\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n4 2\"\nprint(solution(\"4\\n1 2\\n2 3\\n3 4\"))"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n    4\n    1 2\n    2 3\n    3 4\n    ''') == '2\\n3 4\\n4 2'\n\nassert solution('''\n    5\n    1 2\n    2 3\n    3 4\n    4 5\n    5 6\n    ''') == '5\\n6 5\\n4 2'\n\nassert solution('''\n    6\n    1 2\n    2 3\n    3 4\n    4 5\n    5 6\n    6 7\n    ''') == '5\\n6 7\\n4 2'\n\nassert solution('''\n    7\n    1 2\n    2 3\n    3 4\n    4 5\n    5 6\n    6 7\n    7 8\n    ''') == '4\\n5 7\\n4 2'"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\\n3 4\\n4 2\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '9.0000'\nassert solution(stdin) == '12'\nassert solution(stdin) == '12.00000'\nassert solution(stdin) == '9.0'"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, but got {solution(stdin)}\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed: {solution(stdin)}\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1 1\\n2 2\\n3 2\\n4 1\\n\") == \"9.0000\\n12\\n12.00000\\n9.0\\n\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"9.0000\\n12\\n12.00000\\n9.0\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(None) == \"No input\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\") == \"9.0\\n12\\n12.0\\n9.0\"\nassert solution(\"5\\n1 1\\n2 2\\n3 2\\n4 1\\n5 2\") == \"10.0\\n12\\n12.0\\n10.0\"\nassert solution(\"6\\n1 1\\n2 2\\n3 2\\n4 1\\n5 2\\n6 3\") == \"11.0\\n12\\n12.0\\n11.0\"\nassert solution(\"7\\n1 1\\n2 2\\n3 2\\n4 1\\n5 2\\n6 3\\n7 4\") == \"12.0\\n12\\n12.0\\n12.0\"\nassert solution(\"8\\n1 1\\n2 2\\n3 2\\n4 1\\n5 2\\n6 3\\n7 4\\n8 5\") == \"13.0\\n12\\n12.0\\n13.0\"\nassert solution(\"9\\n1 1\\n2 2\\n3 2\\n4 1\\n5 2\\n6 3\\n7 4\\n8 5\\n9 6\") == \"14.0\\n12\\n12.0\\n14.0\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == output, f\"Test failed: solution({input})!= output\" for input, output in zip(stdin, output)\n"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i + 1} failed.\\nInput: {input()}\\nOutput: {solution(input())}\\nExpected Output: {expected_output}\"\n"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\"\n\nprint(\"Sample Input:\")\nN = int(input())\nprint(\"Sample Output:\")\nfor i in range(N):\n    print(f\"ST {i}\")\nprint(\"PH A\\nPH X\\nAD\\nPL Y\\nDI Y\")\n"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"10\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nAD\\nPL Y\\nDI Y\\nST X\\nST A\\nST X\\nPH X\\nPL X\\nAD\\nDI X\\nST X\\nAD\\nDI X\\nST A\\nDI X\\nST A\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\nAD\\nDI X\\n"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2) == ['ST A', 'ST X', 'PH A', 'PH X', 'AD', 'PL Y', 'DI Y']\nassert solution(3) == ['ST A', 'ST X', 'PH A', 'PH X', 'AD', 'PL Y', 'DI Y']\nassert solution(10) == ['ST A', 'ST X', 'PH A', 'PH X', 'AD', 'PL Y', 'DI Y']\nassert solution(255) == ['ST A', 'ST X', 'PH A', 'PH X', 'AD', 'PL Y', 'DI Y']"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"5\\n\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nAD\\nPL X\\nAD\\nPL A\\nDI X\\nDI A\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"10\\n\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nAD\\nPL X\\nAD\\nPL A\\nDI X\\nDI A\\nST X\\nST A\\nPH X\\nPH A\\nPH X\\nAD\\nPL X\\nDI X\\nDI Y\\nDI A\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"15\\n\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nAD\\nPL X\\nAD\\nPL A\\nDI X\\nDI A\\nST X\\nST A\\nPH X\\nPH A\\nPH X\\nAD\\nPL X\\nDI X\\nDI Y\\nDI A\\nDI Y\\nDI X\\nDI A\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"20\\n\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nAD\\nPL X\\nAD\\nPL A\\nDI X\\nDI A\\nST X\\nST A\\nPH X\\nPH A\\nPH X\\nAD\\nPL X\\nDI X\\nDI Y\\nDI A\\nDI Y\\nDI X\\nDI A\\nST X\\nST A\\nPH X\\nPH A\\nPH X\\nAD\\nPL X\\nDI X\\nDI Y\\nDI A\\nDI Y\\nDI X\\nDI A\\nST X\\nST A\\nPH X\\nPH A\\nPH X\\nAD\\nPL X\\nDI X\\nDI Y\\nDI A\\nDI Y\\nDI X\\nDI A\\nST X\\nST A\\nPH X\\nPH A\\nPH X\\nAD\\nPL X\\nDI X\\nDI Y\\nDI A\\nDI Y\\nDI X\\nDI A\\nST X\\nST A\\nPH X\\nPH A\\nPH X\\nAD\\nPL X\\nDI X\\nDI Y\\nDI A\\nDI Y\\nDI X\\nDI A\\nST X\\nST A\\nPH X\\nPH A\\nPH X\\nAD\\nPL X\\nDI X\\nDI Y\\nDI A\\nDI Y\\nDI X\\nDI A\\nST X\\nST A\\nPH X\\nPH A\\nPH X\\nAD\\nPL X\\nDI X\\nDI Y\\nDI A\\nDI Y\\nDI X\\nDI A\\nST X\\nST A\\nPH X\\nPH A\\nPH X\\nAD\\nPL X\\nDI X\\nDI Y\\nDI A\\nDI Y\\nDI X\\nDI A\\nST X\\nST A\\nPH X\\nPH A\\nPH X\\nAD\\nPL X\\nDI X\\nDI Y\\nDI A\\nDI Y\\nDI X\\nDI A\\nST X\\nST A\\nPH X\\nPH A\\nPH X\\nAD\\nPL X\\nDI X\\nDI Y\\nDI A\\nDI Y\\nDI X\\nDI A\\nST X\\nST A\\nPH X\\nPH A\\nPH X\\nAD\\nPL X\\nDI X\\nDI Y\\nDI A\\nDI Y\\nDI X\\nDI A\\nST X\\nST A\\nPH X\\nPH A\\nPH X\\nAD\\nPL X\\nDI X\\nDI Y\\nDI A\\nDI Y\\nDI X\\nDI"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(10) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nassert solution(12345) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nassert solution(0) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nassert solution(1) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(b'2\\n') == b'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\\n\\n\\n'\n"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Output the number on the laser display board\\nprint(f\\\"ST {input()}\\\")\\n\"\n"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2') == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n'"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == 2\nassert solution(\"1 3 2\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == 1\nassert solution(\"1 5 8\\n0000 0000 0000 0000 0000 0000\\nFFFF FFFF FFFF 0000 0000 0000\\n0000 0000 0000 FFFF FFFF 0000\\n0000 FFFF FFFF FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == 8\nassert solution(\"1 3 4\\n0000 0000 0000 0000 0000 0000\\nFFFF FFFF FFFF 0000 0000 0000\\n0000 0000 0000 FFFF FFFF 0000\\n0000 FFFF FFFF FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == 2"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\\n') == 2"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == 2, \"Test case 1 failed\"\nassert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == 2, \"Test case 2 failed\"\nassert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == 2, \"Test case 3 failed\"\nassert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == 2, \"Test case 4 failed\"\nassert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == 2, \"Test case 5 failed\"\nassert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == 2, \"Test case 6 failed\"\nassert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == 2, \"Test case 7 failed\"\nassert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    1 5 6\n    0000 FFFF 0000 0000 0000 0000\n    0000 0000 0000 0000 FFFF 0000\n    FFFF FFFF 0000 FFFF FFFF 0000\n    \"\"\"\n) == 2"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == 2\nprint(\"All tests passed\")\n"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\\n') == '2'"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n1 5 6\n0000 FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000\n''') == 2\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == 2\nassert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == 1\nassert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == 0"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n    1 5 6\n    0000 FFFF 0000 0000 0000 0000\n    0000 0000 0000 FFFF 0000 0000\n    0000 FFFF FFFF FFFF FFFF 0000\n    0000 0000 0000 0000 0000 0000\n\"\"\") == \"2\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"abaaba\", \"Expected 'abaaba', but got '{}'\".format(solution())"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome''') == 'abaaba'\nassert solution('''5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome''') == 'NONE'\nassert solution('''5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome''') == 'abbbbbbbbbbbbbbbbba'\nassert solution('''5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome''') == 'a'\nassert solution('''5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome''') == 'def solution(stdin: str) -> str:\n    pass'"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> ') == 'abaaba\\nNONE'\nassert solution('10\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> ') == 'NONE\\nNONE'\nassert solution('100\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> ') == 'abaaba\\nNONE'"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == output, f\"Solution incorrect. Expected: {output}, Got: {solution(input)}\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    5\n    S -> aSa\n    S -> bSb\n    S -> a\n    S -> b\n    S -> \n        where are the abaaba palindromes on this line\n        none on this line\n        how about this aaaaaaabbbbbbbbbbbbbbbbba\n        even a single a or b is a palindrome\n''') == 'abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na'"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\nA -> aSa\\nA -> bSb\\nA -> a\\nA -> b\\nA\\nS ->\\nS -> b\\nS ->  \\nA\\nS ->  \\nA\\nS -> a\\nS -> b\\nA\\nA\\nA\\nA\\n\") == \"abaaba\"\nassert solution(\"5\\nA -> aSa\\nA -> bSb\\nA -> a\\nA -> b\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('test.txt', 'r').read()) == 'abaaba'"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\ntest_case = '''\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\nnone on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\\neven a single a or b is a palindrome'''\\n\\ntest_case = test_case.replace('a', 'b').replace('b', 'a').replace('Sa', 'Sb').replace('Sb', 'Sa')\\n\\n# Run the test cases\\ntest_cases = [test_case] * 3\\nfor case in test_cases:\\n    for line in case.split('\\n'):\\n        for substring in solution(line):\\n            print(substring)\\n\\n# Test case 1\\nprint(solution(test_case))\\n\\n# Test case 2\\nprint(solution(test_case.replace('Sa', 'Sb')))\\n\\n# Test case 3\\nprint(solution(test_case.replace('Sb', 'Sa')))\\n\\n# Test case 4\\nprint(solution(test_case.replace('b', 'a')))\\n\\n# Test case 5\\nprint(solution(test_case.replace('a', 'b')))\\n\\n# Test case 6\\nprint(solution(test_case.replace('a', 'b', 1)))\\n\\n# Test case 7\\nprint(solution(test_case.replace('a', 'b', 2)))\\n\\n# Test case 8\\nprint(solution(test_case.replace('a', 'b', 3)))\\n\\n# Test case 9\\nprint(solution(test_case.replace('a', 'b', 4)))\\n\\n# Test case 10\\nprint(solution(test_case.replace('a', 'b', 5)))\\n\\n# Test case 11\\nprint(solution(test_case.replace('a', 'b', 6)))\\n\\n# Test case 12\\nprint(solution(test_case.replace('a', 'b', 7)))\\n\\n# Test case 13\\nprint(solution(test_case.replace('a', 'b', 8)))\\n\\n# Test case 14\\nprint(solution(test_case.replace('a', 'b', 9)))\\n\\n# Test case 15\\nprint(solution(test_case.replace('a', 'b', 10)))\\n\\n# Test case 16\\nprint(solution(test_case.replace('a', 'b', 11)))\\n\\n# Test case 17\\nprint(solution(test_case.replace('a', 'b', 12)))\\n\\n# Test case 18\\nprint(solution(test_case.replace('a', 'b', 13)))\\n\\n# Test case 19\\nprint(solution(test_case.replace('a', 'b', 14)))\\n\\n# Test case 20\\nprint(solution(test_case.replace('a', 'b', 15)))\\n\\n# Test case 21\\nprint(solution(test_case.replace('a', 'b', 16)))\\n\\n# Test case 22\\nprint(solution(test_case.replace('a', 'b', 17)))\\n\\n# Test case 23\\nprint(solution(test_case.replace('a', 'b', 18)))\\n\\n# Test case 24\\nprint(solution(test_case.replace('a', 'b', 19)))\\n\\n# Test case 25\\nprint(solution(test_case.replace('a', 'b', 20)))\\n\\n# Test case 26\\nprint(solution(test_case.replace('a', 'b', 21)))\\n\\n# Test case 27\\nprint(solution(test_case.replace('a', 'b', 22)))\\n\\n# Test case 28\\nprint(solution"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \n''') == 'abaaba'\nassert solution('''\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \n''') == 'NONE'\nassert solution('''\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \n''') == 'abbbbbbbbbbbbbbbbba'\nassert solution('''\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \n''') == 'a'\nassert solution('''\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \n''') == 'def solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '4'\n"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n4 5 0 2\\n1 3 7\\n2 0\\n4\") == 4, \"Expected 4, got {}\".format(solution(\"5\\n4 5 0 2\\n1 3 7\\n2 0\\n4\"))"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n4 5 0 2\\n1 3 7\\n2 0\\n4\") == 4\n"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"4\\n\", \"Expected Output: 4\\n\"\n"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '4'\n"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n5\\n4 5 0 2\\n1 3 7\\n2 0\\n4\") == \"4\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(4, 5, 0, 2, 1, 3, 7, 2, 0, 4) == 4"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n4 5 0 2\\n1 3 7\\n2 0\\n4\") == \"4\\n\"\nassert solution(\"4\\n2 4 1 0\\n3 7 8 6\") == \"4\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n2 4 5 7 8\") == \"5\\n\"\nassert solution(\"1\\n1 2 3\") == \"1\\n\"\nassert solution(\"5\\n0 2 4 6 8\\n1 3 5 7 9\\n2 5 7 9 11\\n3 7 9 11 13\") == \"4\\n\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"4\\n\"\n"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n4 5 0 2\\n1 3 7\\n2 0\\n4\") == \"4\\n4\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG') == 'GO FOR IT'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWWW') == 'NO WAY'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWWW\\nWWWW') == 'NO WAY'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW\\nWWWW"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == output, f\"Your solution for {input} is incorrect. Please check the provided code and sample inputs/outputs.\"\nfor test_case in test_cases:\n    input, output = test_case\n    assert solution(input) == output, f\"For test case {test_case}, the solution is incorrect. Please check the provided code and sample inputs/outputs.\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG\n''') == 'GO FOR IT'\nassert solution('''\n2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG\n''') == 'GO FOR IT'"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"GO FOR IT\", \"Test failed\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWS"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG') == 'GO FOR IT'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB') == 'NO WAY'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBG') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBG') == 'GO FOR IT'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBG') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB') == 'GO FOR IT'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBG') == 'NO WAY'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB') == 'SUCCESS'"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nSWSB\\nSSBB\\nWBGW\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nGWSB\\nSSBB\\nWBGW\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWSB\\nSGBB\\nWBGW\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWWSB\\nSGBB\\nWBGW\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWSBG\\nSGBB\\nWBGW\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWSBG\\nWGBB\\nWBGW\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWSB\\nSGBG\\nWBGW\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWSBG\\nWGBB\\nWGWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWSBG\\nWGBB\\nWBGW\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWSB\\nSGBG\\nWBGW\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWSB\\nSGBB\\nWBGW\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWWSB\\nSGBB\\nWGWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWSBG\\nSGBB\\nWGWG\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWWSB\\nSGBB\\nWGWG\") == \"NO WAY\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"1 2\\n3 1\\nWBWG\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG') == 'GO FOR IT'\nassert solution('1 1\\n10 10\\nGGG') == 'SUCCESS'\nassert solution('2 1\\n2 1\\nW\\nB') == 'NO WAY'\nassert solution('2 3\\n4 4\\nWSBB\\nWWWW\\nWBWG\\nWWWW\\nWBWG\\nWWWW') == 'NO CHANCE'"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\n\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nW\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nW\") == \"NO WAY\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == sample_output, f\"Sample Input:\\n{sample_input}\\nSample Output:\\n{sample_output}\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('test_input.txt', 'r')) == '2243'"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2243\"\n"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\npass\\n\"\n"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 900\\n800 700 400 300 200\") == \"2243\\n\"\nassert solution(\"5 1000000\\n400000 300000 200000\") == \"1900000\\n\"\nassert solution(\"10 3000000\\n20000000 15000000 10000000\") == \"20000000\\n\"\nassert solution(\"1000000 1000000\\n1000000 1000000 1000000\") == \"30000000\\n\"\nassert solution(\"1000000 1000000\\n1000000 1000000 1000000\") == \"30000000\\n\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '2243'\n"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '2243\\n'\n"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\"\n"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 900\\n800 700 400 300 200\") == \"2243\"  # expected output: \"2243\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 900\\n800 700 400 300 200') == '2243\\n'\n"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\") == \"no\\nyes\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3') == 'no\\nno'"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\") == \"no\\nyes\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n') == 'no\\nyes\\n'\n"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('example_input.txt', 'r').read()) == 'no\\nno\\nno\\nno\\n'"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n') == 'no\\nno\\nno\\n'"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n\") == \"no\\nn\\n\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n\") == \"no\\nyes\\n\"\nassert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n= 5 6\\n\") == \"no\\nno\\n\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\") == \"no\\nyes\"\nassert solution(\"1 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\") == \"no\\nno\""
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\") == \"2\\n\"\nassert solution(\"100 1000\") == \"10000\\n\"\nassert solution(\"20000 1000\") == \"10000\\n\""
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\") == 2\nassert solution(\"2 3\\n7 5 4 9 6\") == 3\nassert solution(\"5 4\\n3 5 4 9 6\") == 4\nassert solution(\"2 4\\n7 5 5 11 6\") == 5\nassert solution(\"1 3\\n5 3 5 8 7\") == 2\nassert solution(\"5 4\\n3 6 5 9 7\") == 3\nassert solution(\"3 2\\n7 5 4 10 6\") == 4\nassert solution(\"1 4\\n5 4 6 9 7\") == 5"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\\n\", \"Test case failed\"\nassert solution(\"5 3\\n10 5 4 8 3\\n\") == \"2\\n\", \"Test case failed\""
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '2'\n"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\") == \"2\\n\"\nassert solution(\"5 2\\n1 2 3 4 5 6\") == \"3\\n\"\nassert solution(\"5 3\\n1 10 20 30\") == \"2\\n\"\nassert solution(\"5 4\\n1 2 3 4 5\") == \"3\\n\"\nassert solution(\"5 4\\n1 10 20 30 40\") == \"2\\n\""
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt').read()) == '2\\n'"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\") == \"2\\n\"\nassert solution(\"10 3\\n5 10\") == \"0\\n\"\nassert solution(\"100 5\\n10 10 10 10 10\") == \"10\\n\""
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\") == \"2\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 127\") == \"1083\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 127') == '1083'"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 127\") == \"1083\", \"Output should be 1083\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 127\") == \"1083\", \"Testcase 1\"\nassert solution(\"2 5\") == \"8\", \"Testcase 2\"\nassert solution
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 127\") == \"1083\", \"The output should be 1083\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 127\") == \"1083\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Your implementation is incorrect.\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(f(1, 127)) == '1083'\nprint(\"All tests passed!\")"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 127') == '1083'"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 127\") == \"1083\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2.0000000000\\n\", \"The expected output is incorrect.\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\") == \"2.0000000000\", \"Expected 2.0000000000, but got {}\".format(solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\"))"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(None) == \"Input Error: Please provide valid input.\\n\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\") == \"2.0000000000\", \"Test case 1 failed\"\nassert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\") == \"1.6666666667\", \"Test case 2 failed\"\nassert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\") == \"1.5000000000\", \"Test case 3 failed\"\nassert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\") == \"2.0000000000\", \"Test case 4 failed\"\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2.0000000000\", \"Incorrect output\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"How much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\") == \"2.0000000000\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2.0000000000\"\n"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Solution ({input()}) should be equal to ({output})\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected {sample_output}, but got {solution(sample_input)}\"\n\nsample_input = \"\"\"4 4\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?\"\"\"\n\nsample_output = \"\"\"2.0000000000\n"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\") == 2.0, \"Output does not match the expected result.\"\n"
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\\nFALSE ALARM\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nlion 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\") == \"IMPOSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nlion 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey "
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey') == 'POSSIBLE'\nassert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 3 animal\\nmonkey 2 lion') == 'IMPOSSIBLE'\nassert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 2 animal\\nmonkey 2 lion') == 'FALSE ALARM'"
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == expected_output, f\"Expected {expected_output}, got {solution(sample_input)}\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 6\\nmonkey 2 lion penguin\\n'\n                 'lion 3 monkey penguin lion\\n'\n                 'penguin 1 monkey\\n') == 'POSSIBLE'\n\nassert solution('3 6\\nmonkey 1 lizard\\n'\n                 'lizard 1 monkey\\n'\n                'monkey 2 lion\\n') == 'IMPOSSIBLE'\n\nassert solution('3 6\\nmonkey 2 lion\\n'\n                'monkey 2 lion\\n'\n                 'lion 2 lion\\n') == 'FALSE ALARM'"
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"POSSIBLE\"\n"
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"2 6\\nmonkey 1 lion penguin\\nlion 2 monkey penguin\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"4 6\\nmonkey 3 lion penguin\\nlion 4 monkey penguin\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"1 6\\nmonkey 3 lion penguin\\nlion 3 monkey penguin\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"5 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin\\npenguin 1 monkey\") == \"FALSE ALARM\"\n"
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n\") == \"POSSIBLE\"\nassert solution(stdin=\"4 5\\nmonkey 3 lion penguin lion\\nmonkey 2 lion\\n\") == \"IMPOSSIBLE\"\nassert solution(stdin=\"1 1\\nmonkey 2\\n\") == \"FALSE ALARM\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey') == 'POSSIBLE'"
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\ncat 4 dog\") == \"IMPOSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\ncat 4 dog\\nmonkey 4 lion dog\") == \"FALSE ALARM\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"POSSIBLE\"\n"
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\"\nassert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n10 20 30 40 50 60 70 80 90 100\") == \"triple correlation 4(1)4(3)3 found\"\nassert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n10 20 30 40 50 60 70 80 90 100\\n20 30 40 50 60 70 80 90 100\") == \"random sequence\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\\n\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"triple correlation 4(1)4(3)3 found\"\n"
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(r\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\") == \"triple correlation 4(1)4(3)3 found\"\nassert solution(r\"100\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"random sequence\"\nassert solution(r\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4 4\") == \"triple correlation 4(1)4(3)3 found\"\nassert solution(r\"100\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\"\nassert solution(r\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4 4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2 0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\"\nassert solution(r\"100\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"random sequence\"\nassert solution(r\"100\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0"
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\\n\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4, 7, 9, 5, 9, 3, 5, 0, 0, 1, 7, 8, 5, 0, 2, 6, 3, 5, 4, 4, 4, 6, 3, 3, 2, 7, 1, 8, 7, 8, 7, 6, 1, 1, 7, 2, 5, 4, 7, 2, 0, 4, 4, 5, 8, 3, 0, 6, 9, 3, 2, 6, 6, 8, 5, 2, 5, 1, 2, 7, 2, 4, 1, 0, 0, 4, 9, 1, 8, 7, 5, 0, 4, 4, 8, 4, 3, 2, 6, 8, 8, 5, 6, 7, 0, 9, 7, 0, 3, 6, 1, 4, 4, 1, 2, 3, 2, 6, 9, 9) == \"triple correlation 4(1)4(3)3 found\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\"\nassert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n4 4 4 4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4\") == \"random sequence\"\nassert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4 4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2 0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"random sequence\"\nassert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4 4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2 0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9 4 4 4 4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2 0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 "
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\\n\"\nassert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0 9\") == \"triple correlation 4(1)4(3)3 found\\n\"\nassert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n4 4 3 3 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 "
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n39\\n10\\n40\") == \"40.5\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n39\\n10\\n40\") == \"40.5\\n\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Solution does not return the expected result. Received: {solution(input())}, Expected: {expected}\"\n\nfrom typing import List"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\\n\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '40.5'"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 1\\n39\\n10\\n40\\n') == '40.5\\n'"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n39\\n10\\n40\") == \"40.5\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''3 1\n39\n10\n40''') == '40.5'\n"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"40.5\"\n"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987') == 'Impossible'\nassert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987') == '1987'\nassert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987') == '1987'\nassert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987') == '1987'\nassert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987') == '1987'"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\""
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'Impossible'"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\"\nassert solution(\"4 4\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\"\nassert solution(\"4 5\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n1 1 2007\\n2 1 2007\\n3 1 2007\") == \"Impossible\"\nassert solution(\"5 5\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n1 1 2007\\n2 1 2007\\n3 1 2007\") == \"Impossible\"\nassert solution(\"5 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n1 1 2007\\n2 1 2007\\n3 1 2007\\n1 2 2008\\n2 2 2008\\n3 2 2008\") == \"Impossible\"\nassert solution(\"5 7\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n1 1 2007\\n2 1 2007\\n3 1 2007\\n1 2 2008\\n2 2 2008\\n3 2 2008\\n1 3 2009\\n2 3 2009\\n3 3 2009\") == \"Impossible\"\nassert solution(\"5 8\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n1 1 2007\\n2 1 2007\\n3 1 2007\\n1 2 2008\\n2 2 2008\\n3 2 2008\\n1 3 2009\\n2 3 2009\\n3 3 2009\\n1 4 2010\\n2 4 2010\\n3 4 2010\") == \"Impossible\"\nassert solution(\"5 9\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n1 1 2007\\n2 1 2007\\n3 1 2007\\n1 2 2008\\n2 2 2008\\n3 2 2008\\n1 3 2009\\n2 3 2009\\n3 3 2009\\n1 4 2010\\n2 4 2010\\n3 4 201"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Impossible\"\nassert solution(stdin) == \"Impossible\"\nassert solution(stdin) == \"Impossible\"\nassert solution(stdin) == \"Impossible\"\nassert solution(stdin) == \"Impossible\""
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\\n\"\nassert solution(\"4 7\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 5 1987\") == \"1987\\n\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"1987\\n1987\\n1987\\n1987\\n1987\\n1987\\n1987\\n\"\nassert solution(\"4 7\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 5 1987\") == \"1987\\n1987\\n1987\\n1987\\n1987\\n1987\\n1987\\n1987\\n\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\n\"\nassert solution(\"4 7\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 5 1987\") == \"Impossible\\n1987\\n1987\\n1987\\n1987\\n1987\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n1 5 1988\") == \"Impossible\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n1 5 1988\\n1 6 1990\") == \"Impossible\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n1 5 1988\\n1 6 1990\\n1 7 1991\") == \"Impossible\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n1 5 1988\\n1 6 1990\\n1 7 1991\\n1 8 1992\") == \"Impossible\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n1 5 1988\\n1 6 1990\\n1 7 1991\\n1 8 1992\\n1 9 1993\") == \"Impossible\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n1 5 1988\\n1 6 1990\\n1 7 1991\\n1 8 1992\\n1 9 1993\\n1 10 1994\") == \"Impossible\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n1 5 1988\\n1 6 1990\\n1 7 1991\\n1 8 1992\\n1 9 1993\\n1 10 1994\\n1 11 1995\") == \"Impossible\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n1 5 1988\\n1 6 1990\\n1 7 1991\\n1 8 1992\\n1 9 1993\\n1 10 1994\\n1 11 1995\\n1 12 1996\") == \"Impossible\"\nassert solution(\""
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'Impossible'"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    '''\n    4 6\n    1 2 1987\n    2 3 1987\n    1 3 1987\n    2 4 1987\n    1 4 1987\n    3 4 1987\n    '''\n) == 'Impossible'\n\nassert solution(\n    '''\n    4 6\n    1 2 1987\n    2 3 1987\n    1 3 1987\n    2 4 1987\n    1 4 1987\n    3 4 1987\n    2 5 1987\n    '''\n) == 'Impossible'\n\nassert solution(\n    '''\n    4 6\n    1 2 1987\n    2 3 1987\n    1 3 1987\n    2 4 1987\n    1 4 1987\n    3 4 1987\n    2 5 1987\n    1 5 1987\n    '''\n) == 'Impossible'\n\nassert solution(\n    '''\n    4 6\n    1 2 1987\n    2 3 1987\n    1 3 1987\n    2 4 1987\n    1 4 1987\n    3 4 1987\n    2 5 1987\n    1 5 1987\n    2 6 1987\n    '''\n) == 'Impossible'\n\nassert solution(\n    '''\n    4 6\n    1 2 1987\n    2 3 1987\n    1 3 1987\n    2 4 1987\n    1 4 1987\n    3 4 1987\n    2 5 1987\n    1 5 1987\n    2 6 1987\n    1 6 1987\n    '''\n) == 'Impossible'\n\nassert solution(\n    '''\n    4 6\n    1 2 1987\n    2 3 1987\n    1 3 1987\n    2 4 1987\n    1 4 1987\n    3 4 1987\n    2 5 1987\n    1 5 1987\n    2 6 1987\n    1 6 1987\n    2 7 1987\n    '''\n) == 'Impossible'\n\nassert solution(\n    '''\n    4 6\n    1 2 1987\n    2 3 1987\n    1 3 1987\n    2 4 1987\n    1 4 1987\n    3 4 1987\n    2 5 1987\n    1 5 1987\n    2 6 1987\n    1 6 1987\n    2 7 1987\n    1 7 1987\n    '''\n) == 'Impossible'\n\nassert solution(\n    '''\n    4 6\n    1 2 1987\n    2 3 1987\n    1 3 1987\n    2 4 1987\n    1 4 1987\n    3 4 1987\n    2 5 1987\n    1 5 1987\n    2 6 1987\n    1 6 1987\n    2 7 1987\n    1 7 1987\n    2 8 1987\n    '''\n) == 'Impossible'\n\nassert solution(\n    '''\n    4 6\n    1 2 1987\n    2 3 1987\n    1 3 1987\n    2 4 1987\n    1 4 1987\n    3 4 1987\n    2 5 1987\n    1 5 1987\n    2 6 1987\n    1 6 1987\n    2 7 1987\n    1 7 1987\n    2 8 1987\n    1 8 1987\n    '''\n) == 'Impossible'\n\nassert solution(\n    '''\n    4 6\n    1 2 1987\n    2 3 1987\n    1 3 1987"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987') == 'Impossible'\nassert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n2 1 1988\\n1 1 1989\\n3 1 1990\\n') == '1990'"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"impossible\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1') == 'impossible'"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"impossible\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"impossible\"\nprint(\"pass\")"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'impossible'\nprint(\"All tests pass!\")"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == 'impossible'"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(r'''\n4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1\n''') == \"impossible\\n\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"impossible\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"impossible\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    '''\n    4 0 1\n    1 2\n    2 3\n    1 1\n    1 0\n    2 1\n    3 0\n    0 2\n    1 2\n    2 0\n    3 1\n    4 2\n    '''\n) == 'impossible'\n\nassert solution(\n    '''\n    4 0 1\n    1 2\n    2 3\n    1 1\n    1 0\n    2 1\n    3 0\n    0 2\n    1 2\n    2 0\n    3 1\n    4 2\n    '''\n) == 3"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3\n())\n((()\n)()\"\"\") == 10, \"Test 1\""
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n()()\\n(())()\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3\n())\n((()\n)()\"\"\") == 10\nassert solution(\"\"\"5\n(())\n((()))\n((())\n()))\"\"\") == 14\nassert solution(\"\"\"2\n()()()\n(())()\n((())()\n())()\n(())()()\"\"\") == 15"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == expected_output, f\"Test case {index + 1} failed\"\n"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n())\\n((()\\n)()\") == 10, \"Incorrect solution for test case 1\""
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"())\") == 10\nassert solution(\"(()\")) == 0\nassert solution(\"((()\")) == 10\nassert solution(\")()\") == 10\nassert solution(\"(())\") == 0\nassert solution(\"((()(())))\") == 20\nassert solution(\"((()))\") == 0\nassert solution(\"((()()()))\") == 15\n"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n())\\n((()\\n)(\\n)\\nSample Output:10\\n') == 10, \"The solution is incorrect.\""
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n())\\n((()\\n)()\") == 10, \"Test 1: Incorrect output\"\nassert solution(\"3\\n())\\n((()()\\n)()\") == 12, \"Test 2: Incorrect output\"\nassert solution(\"3\\n())\\n(()(())\\n\") == 13, \"Test 3: Incorrect output\"\nassert solution(\"3\\n())\\n((((())\\n)))\") == 15, \"Test 4: Incorrect output\"\nassert solution(\"3\\n())\\n((((()\\n)))\") == 15, \"Test 5: Incorrect output\""
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Test case {i+1} failed: expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 10, \"Expected output: 10\""
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '85293'"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '85293', 'Incorrect output'"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"85293\""
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\") == 85293\n\nprint(\"All test cases pass.\")"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\") == \"85293\""
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8') == '85293'"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 85293, \"The given code is not correct.\""
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"85293\"\n"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 85293, \"The given solution is incorrect\""
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '5\\n', \"Test failed\""
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == 5\n"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Your solution is incorrect. Please check the given code and output.\""
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == \"5\\n\"\nassert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == \"6\\n\"\nassert solution(\"8 12\\n1 2\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 5\") == \"12\\n\"\nassert solution(\"10 15\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n3 4\\n3 5\\n3 6\\n3 7\\n3 8\\n3 9\\n3 10\\n4 5\\n4 6\\n4 7\\n4 8\\n4 9\\n4 10\\n5 6\\n5 7\\n5 8\\n5 9\\n5 10\\n6 7\\n6 8\\n6 9\\n6 10\\n7 8\\n7 9\\n7 10\\n8 9\\n8 10\\n9 10\") == \"15\\n\"\nassert solution(\"12 19\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n2 11\\n3 4\\n3 5\\n3 6\\n3 7\\n3 8\\n3 9\\n3 10\\n3 11\\n3 12\\n3 13\\n4 5\\n4 6\\n4 7\\n4 8\\n4 9\\n4 10\\n4 11\\n4 12\\n4 13\\n4 14\\n4 15\\n5 6\\n5 7\\n5 8\\n5 9\\n5 10\\n5 11\\n5 12\\n5 13\\n5 14\\n5 15\\n6 7\\n6 8\\n6 9\\n6 10\\n6 11\\n6 12\\n6 13\\n6 14\\n6 15\\n6 16\\n7 8\\n7 9\\n7 10\\n7 11\\n7 12\\n7 13\\n7 14\\n7 15\\n7 16\\n7 17\\n8 9\\n8 10\\n8 11\\n8 12\\n8 13\\n8 14\\n8 15\\n8 16\\n8 17\\n8 18\\n8 19\\n9 10\\n9 11\\n9 12\\n9 13\\n9 14\\n9 15\\n9 16\\n9 17\\n9 18\\n9 19\\n10 11\\n10 12\\n10 13\\n10 14\\n10 15\\n10 16\\n10 17\\n10 18\\n10 19\\n10 20\\n11 12\\n11 13\\n11 14\\n11 15\\n11 16\\n11 17\\n11 18\\n11 1"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == 5\nassert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == 5\nassert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == 5\nassert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == 5\nassert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == 5\nassert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == 5"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '5\\n'\n"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == \"5\\n\""
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 5, \"The correct output is: 5\""
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == 5\nassert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n5 6\\n1 5\") == 7\nassert solution(\"5 2\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == 2"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\\n\") == \"5100\""
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly') == '5100'\n"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\") == 5100, \"Test case 1 failed\""
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\\n\") == \"5100\"\n"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == output, \"Test case not passed. Expected output: {}\\nGot output: {}\".format(output, solution(input)) for input, output in zip(test_cases, expected_outputs)"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    3\n    3 caterpillar 3 pupa 7 butterfly\n    3 dove 3 pigeon 7 aaabaaajss\n    3 mouse 1 electromouse 5 rat\n    7\n    0 electromouse\n    500 electromouse\n    1000 electromouse\n    1500 rat\n    2000 aaabaaajss\n    2500 pigeon\n    3000 butterfly\n    \"\"\"\n) == \"5100\""
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(r\"\"\"\n3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n\"\"\") == \"5100\""
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"5100\""
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly') == 5100\nassert solution('3\\n1 caterpillar 1 pupa 1 butterfly\\n2 dove 2 pigeon 2 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly') == 5050\nassert solution('3\\n1 caterpillar 1 pupa 1 butterfly\\n2 dove 2 pigeon 2 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly') == 5000"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n\"\"\") == 6\nassert solution(\"\"\"\n4\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n\"\"\") == -1"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    5\n    0\n    1 1\n    1 1\n    2 2 3\n    1 4\n    8\n    1\n    2\n    3\n    1\n    4\n    2\n    3\n    5\n    2\n    ''') == '''\n    6\n    1\n    2\n    3\n    1\n    4\n    5\n    '''\n\nassert solution('''\n    2\n    1\n    2\n    ''') == '''\n    2\n    1\n    2\n    '''\n\nassert solution('''\n    5\n    0\n    1 1\n    1 1\n    2 2 3\n    1 4\n    8\n    1\n    2\n    3\n    1\n    4\n    2\n    3\n    5\n    ''') == '''\n    6\n    1\n    2\n    3\n    1\n    4\n    5\n    '''\n\nassert solution('''\n    2\n    1\n    2\n    ''') == '''\n    2\n    1\n    2\n    '''"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\"\n\nassert solution(\"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\") == \"-1\"\n\nassert solution(\"7\\n1\\n2\\n3\\n1\\n4\\n5\\n\") == \"-1\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 1 # your answer\nassert solution == 2 # your answer\nassert solution == 3 # your answer\nassert solution == 4 # your answer\nassert solution == 5 # your answer"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5') == '6\\n1\\n2\\n3\\n1\\n4\\n5\\n'"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\") == 6\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5''') == '6\\n1\\n2\\n3\\n1\\n4\\n5\\n'\n\nassert solution('''5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5''') == '6\\n1\\n2\\n3\\n1\\n4\\n5\\n'"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == 10, \"Incorrect output for sample input.\""
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\"\nassert solution(\"3 2\\n1 2 1 2\\n2 1 O 3\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 "
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n') == '10'"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"10\", \"The output should be 10.\""
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 10\n"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(None) == \"Invalid input.\\n\"\n\nclass Solution:\n    def __init__(self):\n        self.airfares = {}\n\n    def find_minimum_tickets(self, airfares: List[List[str]]) -> int:\n        n = len(airfares)\n        d = len(airfares[0])\n        min_tickets = float('inf')\n        \n        for i in range(n):\n            for j in range(i+1, n):\n                if airfares[i][0] == airfares[j][0] and airfares[i][1] == airfares[j][1]:\n                    if airfares[i][2] == 'O':\n                        min_tickets = min(min_tickets, 2*airfares[i][3])\n                    elif airfares[i][2] == 'R':\n                        min_tickets = min(min_tickets, 2*airfares[i][3]) + 2*airfares[j][3]\n        \n        return min_tickets\n\nsolution = Solution()\ninput = \"\"\"2 5\n1 2 1 2 1\n4\n1 2 R 6\n1 2 O 3\n2 1 O 3\n1 2 R 5\"\"\"\noutput = solution.find_minimum_tickets(input_string_to_list(input))\nprint(output)"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"10\""
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"10\\n\"\n"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 10"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n0 1\\n1 2\\n2 3\") == \"1\\n\"\nassert solution(\"1 2\\n1 3\\n2 3\\n3 4\\n3 5\") == \"5\\n\"\nassert solution(\"5 4\\n4 3\\n3 2\\n2 1\") == \"5\\n\"\nassert solution(\"7 8\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\") == \"8\\n\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n0 1\\n1 2\\n2 3\") == \"1\\n\"\nassert solution(\"4 4\\n0 1\\n1 2\\n2 3\\n3 0\") == \"2\\n\""
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\\n\""
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 3\\n0 1\\n1 2\\n2 3') == '1\\n'\n\nprint('All tests passed!')"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    4 3\n    0 1\n    1 2\n    2 3\n    \"\"\"\n) == \"1\\n\""
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == sample_output, f\"Test failed for sample input: {sample_input}\\nSample Output: {sample_output}\""
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\", \"The output should be 1\""
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 3\\n0 1\\n1 2\\n2 3') == '1\\n\\n'\nassert solution('4 3\\n0 1\\n1 2\\n2 3\\n') == '1\\n\\n'\nassert solution('4 3\\n0 1\\n1 2\\n2 3\\n4 5\\n') == '1\\n\\n'\nassert solution('4 3\\n0 1\\n1 2\\n2 3\\n4 5\\n6 7\\n') == '2\\n\\n'\nassert solution('4 3\\n0 1\\n1 2\\n2 3\\n4 5\\n6 7\\n8 9\\n') == '3\\n\\n'\nassert solution('4 3\\n0 1\\n1 2\\n2 3\\n4 5\\n6 7\\n8 9\\n10 11\\n') == '4\\n\\n'\nassert solution('4 3\\n0 1\\n1 2\\n2 3\\n4 5\\n6 7\\n8 9\\n10 11\\n12 13\\n') == '5\\n\\n'\nassert solution('4 3\\n0 1\\n1 2\\n2 3\\n4 5\\n6 7\\n8 9\\n10 11\\n12 13\\n14 15\\n') == '6\\n\\n'\nassert solution('4 3\\n0 1\\n1 2\\n2 3\\n4 5\\n6 7\\n8 9\\n10 11\\n12 13\\n14 15\\n16 17\\n') == '7\\n\\n'\nassert solution('4 3\\n0 1\\n1 2\\n2 3\\n4 5\\n6 7\\n8 9\\n10 11\\n12 13\\n14 15\\n16 17\\n18 19\\n') == '8\\n\\n'\nassert solution('4 3\\n0 1\\n1 2\\n2 3\\n4 5\\n6 7\\n8 9\\n10 11\\n12 13\\n14 15\\n16 17\\n18 19\\n20 21\\n') == '9\\n\\n'\nassert solution('4 3\\n0 1\\n1 2\\n2 3\\n4 5\\n6 7\\n8 9\\n10 11\\n12 13\\n14 15\\n16 17\\n18 19\\n20 21\\n22 23\\n') == '10\\n\\n'\nassert solution('4 3\\n0 1\\n1 2\\n2 3\\n4 5\\n6 7\\n8 9\\n10 11\\n12 13\\n14 15\\n16 17\\n18 19\\n20 21\\n22 23\\n24 25\\n') == '11\\n\\n'\nassert solution('4 3\\n0 1\\n1 2\\n2 3\\n4 5\\n6 7\\n8 9\\n10 11\\n12 13\\n14 15\\n16 17\\n18 19\\n20 21\\n22 23\\n24 25\\n26 27\\n') == '12\\n\\n'\nassert solution('4 3\\n0 1\\n1 2\\n2 3\\n4 5\\n6 7\\n8 9\\n10 11\\n12 13\\n14 15\\n16 17\\n18 19\\n20 21\\n22 "
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4) == '0.962962962963'"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"0.962962962963\", \"The output should be 0.962962962963\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == '0.963'\nassert solution(10) == '0.962962962963'\nassert solution(10000) == '0.9629629629630000'\n\nfrom typing import List\nimport random"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"0.962962962963\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"sample_input.txt\").read()) == \"0.962962962963\"\n"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4) == \"0.962962962963\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '0.962962962963'"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input()) == sample_output()"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"0.962962962963\"  # expected output: 0.962962962963\n\nfrom typing import List\nimport random"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '0.962962962963', \"The solution should return 0.962962962963, but it returns '{}'\".format(solution(stdin))"
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n\") == \"0 0\\n40000000 0\\n0 40000000\\n\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n\") == \"0 0\\n40000000 0\\n0 40000000\\n\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n\") == \"0 0\\n40000000 0\\n0 40000000\\n\"\nassert solution(\"4\\n\") == \"0 0\\n16777216 0\\n0 16777216\\n4 16777216\\n\"\nassert solution(\"10\\n\") == \"0 0\\n2147483647 0\\n0 2147483647\\n32 2147483647\\n128 2147483647\\n512 2147483647\\n\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"0 0\\n40000000 0\\n0 40000000\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"\"\"0 0\n40000000 0\n0 40000000\"\"\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"0 0\\n40000000 0\\n0 40000000\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"0 0\\n40000000 0\\n0 40000000\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n') == '0 0\\n40000000 0\\n0 40000000\\n'\n\nimport math"
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(None) == \"\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5 5 2\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5 5 2\") == \"1\"\n\nfrom typing import List"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5 5 2\") == \"1\"\nassert solution(\"2 3 4 9\") == \"impossible\"\nassert solution(\"4 6 1 2\") == \"0\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5 5 2\") == \"1\"\nassert solution(\"2 3 4 9\") == \"impossible\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5 5 2\") == \"1\"\nassert solution(\"2 3 4 9\") == \"impossible\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 5 5 2') == '1'"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"3 5 5 2\") == \"1\"\n\nassert solution(stdin=\"2 3 4 9\") == \"impossible\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5 5 2\") == \"1\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5 5 2\") == 1"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\\n0.0\\n\"\n"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n    20 3 5 5\n    0 0 0\n    0 -10 0\n    30 0 0\n    \"\"\"), \"Output: 2\\n\""
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output\nprint(f\"Solution Accepted\")"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == '''\n"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\"\n"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\\n0\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n100 0 0\") == \"0\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n-10 0 0\") == \"0\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\"\nassert solution(\"5 3\\n2 1\\n-3 5\") == \"1\"\nassert solution(\"10 20 100\") == \"1\"\nassert solution(\"10 10 100\") == \"0\"\nassert solution(\"5 5 50\") == \"0\"\nassert solution(\"0 0 0\") == \"0\""
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\"\n"
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"13\") == \"12 14\\n\"\nassert solution(\"100\") == \"100\\n\"\nassert solution
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"12 14\"\n"
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('13') == '12 14'"
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(13) == \"12 14\", \"Test failed\"\n"
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(13) == \"12 14\", \"Test failed for example 13.\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(13) == \"12 14\\n\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(13) == \"12 14\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('13') == '12 14'"
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"13\") == \"12 14\", \"Input is not valid.\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"13\") == \"12 14\""
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"5\n    1 0 0\n    1 0 1\n    3 0 1\n    3 0 0\n    3 0 1\n    \"\"\"\n) == 0\n\nassert solution(\n    \"\"\"1\n    0\n    \"\"\"\n) == 0\n\nassert solution(\n    \"\"\"2\n    2 3 4\n    2 3 1\n    1 3 3\n    1 3 2\n    2 4 4\n    \"\"\"\n) == 0\n\nassert solution(\n    \"\"\"3\n    1 3\n    2 3\n    3 2\n    4 1\n    \"\"\"\n) == 0\n\nassert solution(\n    \"\"\"5\n    2 4 0\n    2 4 1\n    2 2 1\n    2 2 0\n    2 2 1\n    2 2 0\n    \"\"\"\n) == 0\n\nassert solution(\n    \"\"\"10\n    1 2 3 4 5\n    1 2 3 5 4\n    1 2 4 3 5\n    1 3 2 4 5\n    1 3 2 5 4\n    1 4 2 3 5\n    1 4 2 5 3\n    1 5 2 3 4\n    2 3 4 5 1\n    2 4 5 1 3\n    2 5 1 3 4\n    3 1 4 5 2\n    3 2 5 1 4\n    4 2 3 5 1\n    4 2 5 1 3\n    5 2 3 4 1\n    \"\"\"\n) == 0\n\nassert solution(\n    \"\"\"6\n    1 2 3 4 5 6\n    1 2 3 5 4 6\n    1 2 4 3 5 6\n    1 3 2 4 5 6\n    1 3 2 5 4 6\n    1 4 2 3 5 6\n    1 4 2 5 3 6\n    1 5 2 3 4 6\n    2 3 4 5 1 6\n    2 4 5 1 3 6\n    2 5 1 3 4 6\n    3 1 4 5 2 6\n    3 2 5 1 4 6\n    4 2 3 5 1 6\n    4 2 5 1 3 6\n    5 2 3 4 1 6\n    \"\"\"\n) == 0\n\nassert solution(\n    \"\"\"9\n    1 2 3 4 5 6 7 8\n    1 2 3 5 4 6 7 8\n    1 2 4 3 5 6 7 8\n    1 3 2 4 5 6 7 8\n    1 3 2 5 4 6 7 8\n    1 4 2 3 5 6 7 8\n    1 4 2 5 3 6 7 8\n    1 5 2 3 4 6 7 8\n    2 3 4 5 1 6 7 8\n    2 4 5 1 3 6 7 8\n    2 5 1 3 4 6 7 8\n    3 1 4 5 2 6 7 8\n    3 2 5 1 4 6 7 8\n    4 2 3 5 1 6 7 8\n    4 2 5 1 3 6 7 8\n    5 2 3 4 1 6 7 8\n    \"\"\"\n) == 0\n\nassert solution(\n    \"\"\"10\n    1 2 3 4 5 6 7 8 9\n    1 2 3 5 4 6 7 8 9\n    1 2 4 3 5 6 7 8 9\n    1 3 2 4 5 6 7 8 9\n    1 3 2 5 4 6 7 8 9\n    1 4 2 3 5 6 7 8 9\n    1 4 2 5 3 6 7 8 9\n    1 5 2 3 4 6 7 8 9\n    2 3 4 5 1 6 7 8 9\n    2 4 5 1 3 6 7"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1') == 0\nassert solution('5\\n1 1 0\\n1 1 1\\n3 1 1\\n3 1 0\\n3 1 1') == 0\nassert solution('5\\n0 0 0\\n0 0 1\\n2 0 1\\n2 0 0\\n2 0 1') == 1\nassert solution('5\\n1 0 1\\n1 0 0\\n3 0 1\\n3 0 0\\n3 0 1') == 1\nassert solution('5\\n1 1 1\\n1 1 0\\n3 1 1\\n3 1 0\\n3 1 1') == 1\nassert solution('5\\n1 0 1\\n1 0 0\\n3 0 1\\n3 0 0\\n3 0 1') == 1\nassert solution('5\\n0 0 0\\n0 0 1\\n2 0 1\\n2 0 0\\n2 0 1') == 1\nassert solution('5\\n1 1 1\\n1 1 0\\n3 1 1\\n3 1 0\\n3 1 1') == 1\nassert solution('5\\n1 1 1\\n1 1 0\\n3 1 1\\n3 1 0\\n3 1 1') == 0\nassert solution('5\\n0 0 0\\n0 0 1\\n2 0 1\\n2 0 0\\n2 0 1') == 0"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 0, \"Missing solution\""
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    5\n    1 0 0\n    1 0 1\n    3 0 1\n    3 0 0\n    3 0 1\n    ''') == '0\\n'\n\nassert solution('''\n    7\n    0 0 0 0 0 0\n    0 0 0 0 0 0\n    0 0 1 0 0 0\n    0 0 0 1 0 0\n    0 0 0 0 1 0\n    0 0 0 0 0 1\n    ''') == '33\\n'\n\nassert solution('''\n    5\n    1 1 1\n    2 2 2\n    3 3 3\n    4 4 4\n    5 5 5\n    ''') == '1\\n'"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    5\n    1 0 0\n    1 0 1\n    3 0 1\n    3 0 0\n    3 0 1\n    \"\"\"\n) == 0\n\nassert solution(\n    \"\"\"\n    10\n    1 1 0\n    0 1 0\n    1 1 0\n    0 1 0\n    1 1 1\n    0 1 1\n    1 0 1\n    0 0 1\n    1 0 0\n    1 1 0\n    1 1 1\n    0 1 1\n    1 1 0\n    1 1 1\n    1 0 0\n    0 0 0\n    \"\"\"\n) == 2100496633"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r').read()) == '0\\n'"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0\\n\"\n"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == \"0\"\nprint(solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\"))"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == \"0\\n\"\nassert solution(open(\"input.txt\", \"r\")) == \"1\\n0\\n\"\nassert solution(open(\"sample_output.txt\", \"r\")) == \"0\\n\"\n"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1') == 0"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3\\n') == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n'\n"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n\"\nassert solution(\"4 3\\n\") == \"-1\\n\"\nassert solution(\"3 4\\n\") == \"-1\\n\"\nassert solution(\"5 5\\n\") == \"-1\\n\"\nassert solution(\"5 6\\n\") == \"-1\\n\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\"\nassert solution(\"4 3\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n3 1\\n3 2\\n3 3\"\nassert solution(\"1 1\") == \"1 1\"\nassert solution(\"5 5\") == \"-1\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 3') == ['1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3']\nassert solution('4 6') == []"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=sample_input) == sample_output\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output() for input_, output in zip(sample_input, sample_output)"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"\"\"1 1\n2 2\n1 3\n2 1\n1 2\n2 3\n\"\"\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Solution is not correct.\\nInput: {input()}\\nOutput: {output}\\n\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\\n\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\\n\"\n"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 10\\n0 10 1\\n0 10 1\\n0 10 1') == '3.33333333'"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3.33333333\\n3.33333333\\n3.33333333\"\nassert solution() == \"3.33333333\\n3.33333333\\n3.33333333\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\\n\"\nassert solution(\"2 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"1.66666667\\n1.66666667\\n1.66666667\\n\"\nassert solution(\"3 20\\n0 10 1\\n0 10 1\\n0 10 1\") == \"1.33333333\\n1.33333333\\n1.33333333\\n\"\nassert solution(\"1 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"1.0\\n1.0\\n1.0\\n\"\nassert solution(\"2 20\\n0 10 1\\n0 10 1\\n0 10 1\") == \"1.0\\n1.0\\n1.0\\n\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"\"\"3.33333333\"\"\"\n"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\"\nassert solution(\"2 1\\n0 1 1\") == \"1.66666667\\n1.66666667\"\nassert solution(\"4 10\\n1 10 1\\n1 10 1\\n1 10 1\") == \"5.00000000\\n5.00000000\\n5.00000000\\n5.00000000\"\nassert solution(\"5 10\\n0 10 1\\n0 10 1\\n0 10 1\\n1 10 1\") == \"5.00000000\\n5.00000000\\n5.00000000\\n5.00000000\\n5.00000000\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\"\nassert solution(\"4 5\\n0 1 1\\n1 1 1\\n1 1 1\") == \"0.0\"\nassert solution(\"5 5\\n0 1 1\\n1 1 1\\n1 1 1\") == \"1.0\"\nassert solution(\"6 3\\n0 1 2\\n1 1 1\\n1 1 1\") == \"1.0\"\nassert solution(\"7 3\\n0 1 2\\n1 1 1\\n1 1 1\") == \"0.0\"\nassert solution(\"8 2\\n0 1 2\\n1 1 1\\n1 1 1\") == \"0.0\"\nassert solution(\"9 2\\n0 1 2\\n1 1 1\\n1 1 1\") == \"0.0\"\nassert solution(\"10 1\\n0 1 2\\n1 1 1\\n1 1 1\") == \"1.0\""
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\""
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 3 2\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n3 3 2\\n') == '1\\n'"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == '1\\n' + '1\\n'\nassert solution(4) == '1\\n' + '2\\n'\nassert solution(5) == '1\\n' + '2\\n'\nassert solution(6) == '2\\n' + '1\\n'\nassert solution(7) == '2\\n' + '2\\n'\nassert solution(8) == '2\\n' + '3\\n'\nassert solution(9) == '2\\n' + '3\\n'\nassert solution(10) == '2\\n' + '3\\n'"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"1\""
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 1\nprint(\"All tests passed successfully!\\n\")"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '1\\n'\nassert solution(stdin) == '1\\n'\nassert solution(stdin) == '1\\n'"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"1\\n\"\nassert solution(10) == \"2\\n\"\nassert solution(100) == \"3\\n\""
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1\\n\""
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 3 2\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\nabba\") == \"2\"\n\nsolution(\"4 2\\nabba\")  # Test the function with sample inputs"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 2\\nabba') == '2'\nassert solution('4 3\\nbb\\nc\\na') == '3'\nassert solution('4 2\\ncc\\nb\\na\\nbb\\nc') == '2'\nassert solution('4 1\\ncc\\nb\\na\\nbb\\nc') == '1'\nassert solution('4 3\\nc\\ncc\\na\\nb\\nbb\\nca') == '3'"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\"\nassert solution() == \"2\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 2\\nabba\\n') == '2\\n'\nassert solution('4 2\\nbbba\\n') == '2\\n'\nassert solution('4 2\\ncaba\\n') == '2\\n'\nassert solution('4 2\\ndcba\\n') == '2\\n'\nassert solution('4 2\\nefab\\n') == '2\\n'"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\nabba\") == \"2\\n\"\nassert solution(\"5 2\\naaaabbbb\") == \"4\\n\"\nassert solution(\"6 3\\nabbbcccddd\") == \"5\\n\"\nassert solution(\"7 2\\nabcde\") == \"6\\n\"\nassert solution(\"8 3\\nabbbacccde\") == \"6\\n\"\nassert solution(\"9 4\\nababacccde\") == \"9\\n\"\nassert solution(\"10 4\\nababacccde\") == \"10\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=open(\"watch_later.txt\", \"r\").read()) == \"2\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\nabba\") == \"2\"\n"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 2\\nabba') == '2'"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 2\\nabba\\n') == '2'\nassert solution('5 3\\nabbb\\nbbbb\\n') == '3'\nassert solution('6 3\\nabba\\nbbbb\\n') == '4'\nassert solution('7 2\\naaaa\\n') == '1'\nassert solution('8 1\\n') == '0'"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == 3"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == \"3\"\nassert solution(\"5 6\\n1 2\\n2 3\\n2 4\\n3 4\") == \"4\"\nassert solution(\"4 3\\n1 2\\n2 3\\n2 4\\n3 4\\n1 1\") == \"3\"\nassert solution(\"4 3\\n1 2\\n2 3\\n2 4\\n3 4\\n3 5\") == \"4\"\nassert solution(\"5 6\\n1 2\\n2 3\\n2 4\\n3 4\\n4 5\") == \"4\"\nassert solution(\"5 6\\n1 2\\n2 3\\n2 4\\n3 4\\n4 5\\n1 1\") == \"3\""
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == \"3\"\n\nsample_input = \"4 3\\n1 2\\n2 3\\n2 4\"\nassert solution(sample_input) == \"3\""
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n4 3\n1 2\n2 3\n2 4\n''') == '3\\n'\nassert solution('''\n5 3\n1 2\n1 3\n2 3\n2 4\n''') == '2\\n'\nassert solution('''\n4 3\n1 2\n1 3\n1 4\n2 3\n2 4\n''') == '4\\n'\nassert solution('''\n5 3\n1 2\n1 3\n1 4\n2 3\n2 4\n''') == '4\\n'\nassert solution('''\n5 3\n1 2\n1 3\n1 4\n3 3\n2 4\n''') == '3\\n'\nassert solution('''\n4 2\n1 2\n2 3\n2 4\n''') == '2\\n'\nassert solution('''\n4 3\n1 2\n1 3\n1 4\n2 3\n2 4\n''') == '4\\n'\nassert solution('''\n4 3\n1 2\n1 3\n1 4\n2 3\n2 4\n''') == '4\\n'"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == \"3\"\nassert solution(\"4 3\\n1 2\\n3 4\\n2 1\") == \"3\"\nassert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == \"3\"\nassert solution(\"4 3\\n1 2\\n2 3\\n3 1\") == \"4\"\n"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == \"3\"\n\nassert solution(\"4 3\\n1 2\\n2 3\\n3 2\") == \"2\"\n\nassert solution(\"4 3\\n1 2\\n2 3\\n3 3\") == \"1\"\n\nassert solution(\"4 3\\n1 2\\n2 3\\n3 4\") == \"0\""
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n4 3\n1 2\n2 3\n2 4\n''') == '3'\n\nassert solution('''\n5 3\n1 2\n2 3\n2 4\n3 4\n''') == '3'\n\nassert solution('''\n6 3\n1 2\n2 3\n2 4\n3 4\n4 5\n''') == '4'\n\nassert solution('''\n7 3\n1 2\n2 3\n2 4\n3 4\n4 5\n5 6\n''') == '3'\n\nassert solution('''\n8 3\n1 2\n2 3\n2 4\n3 4\n4 5\n5 6\n6 7\n''') == '3'\n\nassert solution('''\n9 3\n1 2\n2 3\n2 4\n3 4\n4 5\n5 6\n6 7\n7 8\n''') == '3'"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\"\n"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == \"3\\n\""
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 3\\n1 2\\n2 3\\n2 4') == '3'\nassert solution('5 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n1 2\\n2 3\\n3"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected output: {sample_output}, Received: {solution(sample_input)}\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == expected_output, f\"Input: {input}, Expected Output: {expected_output}, Actual Output: {solution(input)}\"\nfor i in range(5):\n    assert solution(test_input) == test_output, f\"Test Input: {test_input}, Test Output: {test_output}, Test Case: {i + 1}\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == '1\\n0\\n'\nassert solution(open('input2.txt', 'r')) == '1\\n1\\n'"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n\"\"\") == \"1\\n0\\n\"\nassert solution(\"\"\"\n3 1\n1 0\n0 1\n1000 1\n1 3\n2 3\n\"\"\") == \"0\\n\"\nassert solution(\"\"\"\n3 2\n1 0\n0 1\n1000 1\n1 3\n2 4\n\"\"\") == \"1\\n1\\n\"\nassert solution(\"\"\"\n3 2\n1 0\n0 1\n1000 1\n1 3\n2 5\n\"\"\") == \"1\\n0\\n\"\nassert solution(\"\"\"\n3 2\n1 0\n0 1\n1000 1\n1 3\n2 6\n\"\"\") == \"1\\n1\\n\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(r\"\"\"\n3 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n\"\"\") == '1\\n0\\n'\n\nassert solution(r\"\"\"\n4 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n\"\"\") == '0\\n0\\n'\n\nassert solution(r\"\"\"\n5 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n\"\"\") == '0\\n0\\n'\n\nassert solution(r\"\"\"\n6 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n\"\"\") == '1\\n1\\n'\n\nassert solution(r\"\"\"\n7 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n\"\"\") == '1\\n1\\n'\n\nassert solution(r\"\"\"\n8 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n\"\"\") == '1\\n1\\n'\n\nassert solution(r\"\"\"\n9 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n\"\"\") == '1\\n1\\n'\n\nassert solution(r\"\"\"\n10 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n\"\"\") == '1\\n1\\n'\n\nassert solution(r\"\"\"\n11 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n\"\"\") == '1\\n1\\n'\n\nassert solution(r\"\"\"\n12 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n\"\"\") == '0\\n0\\n'\n\nassert solution(r\"\"\"\n13 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n\"\"\") == '0\\n0\\n'\n\nassert solution(r\"\"\"\n14 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n\"\"\") == '0\\n0\\n'\n\nassert solution(r\"\"\"\n15 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n\"\"\") == '1\\n1\\n'\n\nassert solution(r\"\"\"\n16 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n\"\"\") == '1\\n1\\n'\n\nassert solution(r\"\"\"\n17 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n\"\"\") == '1\\n1\\n'\n\nassert solution(r\"\"\"\n18 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n\"\"\") == '1\\n1\\n'\n\nassert solution(r\"\"\"\n19 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n\"\"\") == '1\\n1\\n'\n\nassert solution(r\"\"\"\n20 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n\"\"\") == '0\\n0\\n'\n\nassert solution(r\"\"\"\n21 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n\"\"\") == '0\\n0\\n'\n\nassert solution(r\"\"\"\n22 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n\"\"\") == '0\\n0\\n'\n\nassert solution(r\"\"\"\n23 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n\"\"\") == '1\\n1\\n'\n\nassert solution(r\"\"\"\n24 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n\"\"\") == '1\\n1\\n'\n\nassert solution(r\"\"\"\n25 2\n1 0\n0 1\n10"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3') == '1\\n0\\n\\n'\nassert solution('3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 4') == '1\\n0\\n\\n'\nassert solution('3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 2') == '0\\n0\\n\\n'\nassert solution('3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 1') == '0\\n1\\n\\n'"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Expected: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_data) == expected_output"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"1\\n0\\n\"\nassert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 4\") == \"0\\n\"\nassert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"1\\n0\\n\"\nassert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 4\") == \"0\\n\"\n"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == output, f\"Test case {i+1} failed\" for i, (input, output) in enumerate(zip(stdin.splitlines(), stdout.splitlines()))\n"
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"7\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\\n3 2 2\\n5 2 1\\n3 2 1\\n1 2 1\") == \"7\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"7\"\nassert solution(5) == \"7\"\nassert solution(7) == \"7\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"7\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == expected_output, \\\n    f\"Your solution is incorrect. Please provide the correct output for the given sample input.\\n\" \\\n    f\"Sample Input: {sample_input}\\n\" \\\n    f\"Expected Output: {expected_output}\\n\"\n\nsample_input = \"\"\"3\n1 2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\"\"\"\n\nexpected_output = \"7\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"7\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test Case Failed: \\nInput: {input()} \\nOutput: {output}\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(read()) == '7\\n'\n\nimport math\nfrom collections import defaultdict"
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"7\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100') == '20'\n"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100') == '20\\n'\nprint('All test cases pass')"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n    5 2\n        linearalgebra 10\n        calculus1 10\n        calculus2 20\n\"\"\") == \"20\"\n\nassert solution(\"\"\"\n    5 2\n        linearalgebra 10\n        calculus1 10\n        calculus2 20\n        honorsanalysis1 50\n        honorsanalysis2 100\n\"\"\") == \"20\"\n\nassert solution(\"\"\"\n    5 2\n        linearalgebra 10\n        calculus1 10\n        calculus2 20\n        honorsanalysis1 50\n        honorsanalysis2 100\n        matrix 3\n\"\"\") == \"15\"\n\nassert solution(\"\"\"\n    5 2\n        linearalgebra 10\n        calculus1 10\n        calculus2 20\n        honorsanalysis1 50\n        honorsanalysis2 100\n        matrix 3\n        statistics 5\n\"\"\") == \"15\"\n\nassert solution(\"\"\"\n    5 2\n        linearalgebra 10\n        calculus1 10\n        calculus2 20\n        honorsanalysis1 50\n        honorsanalysis2 100\n        matrix 3\n        statistics 5\n        graph 10\n\"\"\") == \"20\"\n\nassert solution(\"\"\"\n    5 2\n        linearalgebra 10\n        calculus1 10\n        calculus2 20\n        honorsanalysis1 50\n        honorsanalysis2 100\n        matrix 3\n        statistics 5\n        graph 10\n        chemistry 20\n\"\"\") == \"15\"\n\nassert solution(\"\"\"\n    5 2\n        linearalgebra 10\n        calculus1 10\n        calculus2 20\n        honorsanalysis1 50\n        honorsanalysis2 100\n        matrix 3\n        statistics 5\n        graph 10\n        chemistry 20\n        computerscience 20\n\"\"\") == \"15\""
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\n\") == \"20\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\n') == '20'\nprint(\"All test cases pass!\")"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\"\nassert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\ncalculus1 10\\ncalculus2 20\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 "
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\"\nassert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\"\nassert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\""
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == expected, f\"Expected {expected}, got {solution(input)}\"\n"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\"\nassert solution(\"5 2\\ncalculus2 10\\nlinearalgebra 20\\ncalculus1 10\\ncalculus2 20\\n\") == \"20\"\nassert solution(\"5 2\\ncalculus2 10\\ncalculus1 10\\nlinearalgebra 20\\n\") == \"20\"\nassert solution(\"5 2\\ncalculus2 10\\ncalculus1 10\\nlinearalgebra 20\\ncalculus1 20\\ncalculus2 20\\n\") == \"20\"\nassert solution(\"5 2\\ncalculus2 10\\ncalculus1 10\\nlinearalgebra 20\\ncalculus1 20\\ncalculus2 20\\ncalculus1 20\\ncalculus2 20\\n\") == \"20\"\n"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 10\") == \"20\"\nassert solution(\"2 20\") == \"20\"\nassert solution(\"3 20\") == \"30\"\nassert solution(\"4 20\") == \"30\"\nassert solution(\"5 20\") == \"40\""
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 6, \"The output should be 6.\""
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 6, \"The correct output is not provided.\""
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"6\"\n"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\") == 6, \"Your solution is incorrect.\""
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6') == 6\nassert solution('10 3\\n1 1 2\\n2 2 3\\n3 1 4\\n4 2 1\\n5 2 3\\n6 3 5\\n7 3 6\\n8 2 4\\n9 4 6\\n10 1 5') == 20\n\nprint(\"All test cases pass\")"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\\n') == 6, \"Expected 6, but got {}\".format(solution('4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\\n'))"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6') == 6\n"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == '6\\n'\n\nsample_input = \"\"\"\n4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6\n\"\"\"\n\nassert solution(sample_input) == '6\\n'"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    4 4\n    1 2 2\n    2 3 4\n    3 4 1\n    4 1 2\n    3\n    ''') == '6'\nassert solution('''\n    5 5\n    1 2 2\n    2 3 4\n    3 4 1\n    4 1 2\n    3\n    1 4 2\n    3 3 3\n    4 3 6\n    ''') == '6'\nassert solution('''\n    4 4\n    1 2 2\n    2 3 4\n    3 4 1\n    4 1 2\n    3\n    ''') == '6'\nassert solution('''\n    5 5\n    1 2 2\n    2 3 4\n    3 4 1\n    4 1 2\n    3\n    1 4 2\n    3 3 3\n    4 3 6\n    ''') == '6'"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"2\"\nassert solution(\"1 2 2\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"impossible\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1') == '2'\nassert solution('3 2 1\\n3\\n2 1\\n1 1') == 'impossible'\nassert solution('3 3 1\\n2\\n1\\n2') == 'impossible'\nassert solution('4 1 1\\n3\\n2\\n1\\n2\\n3\\n4') == 'impossible'\nassert solution('4 2 1\\n3\\n2\\n1\\n2\\n3\\n4') == 'impossible'\nassert solution('4 3 1\\n2\\n1\\n2\\n3\\n4') == 'impossible'"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"impossible\\n\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'Output:\\n2\\n'\n"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"\"\"\n"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"2\"\nassert solution(\"4 3\\n5\\n1 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 2\\n2 1\\n1 4\\n1 2\\n2 3\\n3 2\") == \"impossible\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1') == '2'\nassert solution('3 2 1\\n2\\n3\\n1 1') == 'impossible'\nassert solution('3 1 1\\n2\\n3\\n1 1\\n1 1') == '2'"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\"\nassert solution() == \"impossible\"\n\nfrom typing import List\nfrom collections import defaultdict"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n    return \\\"impossible\\\"\\n\\n\\n\\n    # Test case 1\\n    assert solution(stdin) == 2\\n\\n    # Test case 2\\n    assert solution(stdin) == 2\\n\\n    # Test case 3\\n    assert solution(stdin) == 3\\n\\n    # Test case 4\\n    assert solution(stdin) == 3\\n\\n    # Test case 5\\n    assert solution(stdin) == 5\\n\\n    # Test case 6\\n    assert solution(stdin) == 5\\n\\n    # Test case 7\\n    assert solution(stdin) == 5\\n\\n    # Test case 8\\n    assert solution(stdin) == 5\\n\\n    # Test case 9\\n    assert solution(stdin) == 5\\n\\n    # Test case 10\\n    assert solution(stdin) == 5\\n\\n    # Test case 11\\n    assert solution(stdin) == 5\\n\\n    # Test case 12\\n    assert solution(stdin) == 5\\n\\n    # Test case 13\\n    assert solution(stdin) == 5\\n\\n    # Test case 14\\n    assert solution(stdin) == 5\\n\\n    # Test case 15\\n    assert solution(stdin) == 5\\n\\n    # Test case 16\\n    assert solution(stdin) == 5\\n\\n    # Test case 17\\n    assert solution(stdin) == 5\\n\\n    # Test case 18\\n    assert solution(stdin) == 5\\n\\n    # Test case 19\\n    assert solution(stdin) == 5\\n\\n    # Test case 20\\n    assert solution(stdin) == 5\\n\\n    # Test case 21\\n    assert solution(stdin) == 5\\n\\n    # Test case 22\\n    assert solution(stdin) == 5\\n\\n    # Test case 23\\n    assert solution(stdin) == 5\\n\\n    # Test case 24\\n    assert solution(stdin) == 5\\n\\n    # Test case 25\\n    assert solution(stdin) == 5\\n\\n    # Test case 26\\n    assert solution(stdin) == 5\\n\\n    # Test case 27\\n    assert solution(stdin) == 5\\n\\n    # Test case 28\\n    assert solution(stdin) == 5\\n\\n    # Test case 29\\n    assert solution(stdin) == 5\\n\\n    # Test case 30\\n    assert solution(stdin) == 5\\n\\n    # Test case 31\\n    assert solution(stdin) == 5\\n\\n    # Test case 32\\n    assert solution(stdin) == 5\\n\\n    # Test case 33\\n    assert solution(stdin) == 5\\n\\n    # Test case 34\\n    assert solution(stdin) == 5\\n\\n    # Test case 35\\n    assert solution(stdin) == 5\\n\\n    # Test case 36\\n    assert solution(stdin) == 5\\n\\n    # Test case 37\\n    assert solution(stdin) == 5\\n\\n    # Test case 38\\n    assert solution(stdin) == 5\\n\\n    # Test case 39\\n    assert solution(stdin) == 5\\n\\n    # Test case 40\\n    assert solution(stdin) == 5\\n\\n    # Test case 41\\n    assert solution(stdin) == 5\\n\\n    # Test case 42\\n    assert solution(stdin) == 5\\n\\n    # Test case 43\\n    assert solution(stdin) == 5\\n\\n    # Test case 44\\n    assert solution(stdin) == 5\\n\\n    # Test case 45\\n    assert solution(stdin) == 5\\n\\n    # Test case 46\\n    "
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n\") == \"2\\n\"\nassert solution(\"4 3 2\\n1 1\\n\") == \"impossible\\n\"\n"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n250 250\\n250 750\") == 500.0\nprint(\"All tests passed!\")"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n250 250\\n250 750\\n') == 500.0\nprint(\"All tests pass\")"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n250 250\\n250 750\") == \"500.00\\n\"\n"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '500.00', 'Incorrect Output'"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt').read()) == 500.00\n"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Expected '{expected}', got '{solution(input())}'\"\n"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_str) == output_str, f\"Expected {output_str}, but got {solution(input_str)}\""
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '500.00\\n', \"Test case failed\""
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n250 250\\n250 750\") == \"500.00\"\n"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_1) == output_1, \"Test 1 failed\"\nassert solution(input_2) == output_2, \"Test 2 failed\"\nassert solution(input_3) == output_3, \"Test 3 failed\"\nassert solution(input_4) == output_4, \"Test 4 failed\"\nassert solution(input_5) == output_5, \"Test 5 failed\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3\\n2 100 10\\n100 1 10') == 0"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n2 100 10\\n100 1 10\") == \"0\"\nassert solution(\"2 3\\n2 100 10\\n100 2 10\") == \"2\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 0, \"There should be no output for this problem.\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == \"0\\n\"\nassert solution(open(\"sample_output.txt\", \"r\")) == \"100\\n\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '0\\n'"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3\\n2 100 10\\n100 1 10') == '0\\n'\nassert solution('3 5\\n5 1 2\\n2 3 4\\n1 4 5') == '15\\n'\nassert solution('5 4\\n2 3 4\\n5 1 2\\n4 2') == '20\\n'"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n2 100 10\\n100 1 10\") == \"0\"\n\nassert solution(\"2 3\\n2 20 50\\n50 5 5\") == \"150\"\n\nassert solution(\"3 4\\n100 10\\n200 10\") == \"150\"\n\nassert solution(\"5 2\\n100 50\\n200 50\") == \"700\"\n\nassert solution(\"1 3\\n10 10\\n50 10\") == \"100\"\n\nassert solution(\"10 2\\n20 30\\n40 50\") == \"200\"\n\nassert solution(\"5 2\\n100 50\\n200 100\") == \"350\"\n\nassert solution(\"5 2\\n100 50\\n200 50\") == \"500\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(r\"\"\"\n2 3\n2 100 10\n100 1 10\n\"\"\") == 0"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0\\n\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n2 100 10\\n100 1 10\") == \"0\\n\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output, \"The given solution is incorrect.\"\n\nfrom typing import List"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == \"2\"\nassert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n35 5 25 20\") == \"0\"\nassert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n50 5 25 35\") == \"10\"\nassert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n50 5 25 35\\n35 5 25 20\") == \"2\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2', \"Expected output: 2, got: \" + solution(stdin)"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == \"2\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == \"2\"\nassert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n100 100 3 2\") == \"1\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == \"2\"\nassert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n10 10 10 10 10 10 10 10\") == \"2\"\nassert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n10 10 10 10 10 10 10 10\\n10 10 10 10 10 10 10 10\\n10 10 10 10 10 10 10 10\\n10 10 10 10 10 10 10 10\\n10 10 10 10 10 10 10 10\\n10 10 10 10 10 10 10 10\\n10 10 10 10 10 10 10 10\") == \"2\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == \"2\"\nassert solution(\"90 60 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == \"2\"\nassert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n50 5 25 35\") == \"2\"\nassert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\") == \"2\"\nassert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == 2"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 2, \"Incorrect solution.\""
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == sample_output, \"The solution is incorrect.\""
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 4\\n2211\\n1112\\n1112') == 'AAAA\\n...A\\n....\\n\\nBB..\\nBBBB\\n...B\\n....\\n\\n....\\n...C\\nCCCC'"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\n...A\\n....\\nBBBB\\n...B\\nCCCC\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 4) == \"AAAA\\n...A\\n....\\n\\nBB..\\nBBBB\\n...B\\n....\\n\\n....\\n...C\\nCCCC\\nimpossible\""
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"ABBBBBCCCC\"\n"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == expected_output"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 4\\n2211\\n1112\\n1112') == 'AAAA\\n....A\\n....B\\nCCCC\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"AAAA\"\nassert solution(input()) == \"...A\"\nassert solution(input()) == \"....\"\nassert solution(input()) == \"...B\"\nassert solution(input()) == \"CCCC\"\nassert solution(input()) == \"impossible\""
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\n...A\\n....\\n...B\\nCCCC\\n\"\nassert solution(\"1 1\\n111\\n111\\n111\") == \"impossible\"\n"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\\n\") == \"AAAA\\n...A\\n....\\nBB..\\nBBBB\\n...B\\n\\n....\\n...C\\nCCCC\""
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"9\\n\""
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\") == 9, \"Sample Input\""
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 9, \"Incorrect output\""
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 1, 3, 3) == 9, \"Expected output is 9, but got {}\".format(solution(3, 1, 3, 3))  # Example 1\nassert solution(3, 4, 1, 2, 3, 2) == 8, \"Expected output is 8, but got {}\".format(solution(3, 4, 1, 2, 3, 2))  # Example 2\nassert solution(4, 3, 1, 2, 1, 3) == 9, \"Expected output is 9, but got {}\".format(solution(4, 3, 1, 2, 1, 3))  # Example 3\nassert solution(1, 4, 1, 2, 1, 3) == 12, \"Expected output is 12, but got {}\".format(solution(1, 4, 1, 2, 1, 3))  # Example 4\nassert solution(1, 4, 2, 3, 4, 1) == 12, \"Expected output is 12, but got {}\".format(solution(1, 4, 2, 3, 4, 1))  # Example 5\nassert solution(1, 1, 1, 1, 1, 1) == 0, \"Expected output is 0, but got {}\".format(solution(1, 1, 1, 1, 1, 1))  # Example 6"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n3 1 3 3\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n''') == '9\\n'"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3') == 9\nassert solution('4 2 4 4 4 1\\n5 5 5 5 5 5\\n2 2 2 2 2 2\\n1 1 1 1 1 1\\n4 4 4 4 4 4\\n1 1 1 1 1 1\\n2 2 2 2 2 2\\n3 3 3 3 3 3\\n4 4 4 4 4 4\\n5 5 5 5 5 5\\n6 6 6 6 6 6') == 12\nassert solution('1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\") == 9\nassert solution(\"3 1 1 2\\n4 3 1 2 1\") == 5\nassert solution(\"1 1 1 1\") == 0\nassert solution(\"3 3 3 3\") == 0\nassert solution(\"1 1 1 2\\n1 1 1 2\") == 1\nassert solution(\"2 1 2 1\\n2 1 2 1\") == 0\nassert solution(\"3 2 3 2\\n3 2 3 2\") == 0\nassert solution(\"3 2 3 2\\n3 2 3 3\") == 3\nassert solution(\"1 1 2 1\\n2 1 1 1\\n1 1 1 2\") == 0\nassert solution(\"1 1 1 1\\n2 1 2 1\\n1 1 1 1\") == 0\nassert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\") == 9"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 9"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\\n\") == 9\n"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"9\"\n"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == \"20.396078\"\nassert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == \"20.396078\""
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 20.396078, \"The solution should be 20.396078\""
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == 20.396078\n"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == \"20.396078\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == \"20.396078\"\n"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5') == '20.396078'"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5') == 20.396078\n"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\\n') == '20.396078'"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_data) == expected_output"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == \"20.396078\"\n"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nn oo pp qq rr ss tt uu vv ww xx yy zz\\n1\\n2\\n1 8') == ['b', 'c', 'def']\n\nassert solution('abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nn oo pp qq rr ss tt uu vv ww xx yy zz\\n1\\n2\\n1 8') == ['b', 'c', 'def']"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"c\"\nassert solution(\"123456789\") == \"z\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"xyz\"\nassert solution(\"abcdefghijklmnopqrstuvwxyzabcdef\") == \"xyzabcdefgh\"\nassert solution(\"abc\") == \"b\"\nassert solution(\"a\") == \"a\"\nassert solution(\"1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\") == \"c\"\nassert solution(\"nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"def\"\nassert solution(\"1\") == \"b\"\nassert solution(\"2\") == \"c\"\nassert solution(\"1 8\") == \"def\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"b\\nc\\ndef\"\n"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"b\\nc\\ndef\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(\"abcde\") == \"def\"\nassert solution(\"abcdefghij\") == \"abcd\"\nassert solution(\"abcdefg\") == \"abcdefg\"\nassert solution(\"12345678901234567890\") == \"abcdefg\"\nassert solution(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\") == \"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\\n1\\n2\\n1 8\") == \"b\\nc\\ndef\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\") == \"c\"\nassert solution(\"nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"def\"\nassert solution(\"abca\", 2, 3, 1, 8) == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\", 2, 3, 1, 8) == \"c\"\nassert solution(\"nn oo pp qq rr ss tt uu vv ww xx yy zz\", 2, 3, 1, 8) == \"def\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"b\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"bc\", \"Expected output to be 'bc', but got '{}'.\".format(solution())"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\\n1\\n2\\n1 8\") == [\"b\", \"c\", \"def\"]"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\nhobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\n4\\robi\\nhobi\\nhobit\\nrakija\") == \"12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nprint(solution(\"5\\nhobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\n4\\robi\\nhobi\\nhobit\\nrakija\"))"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"hobotnica\") == \"hobot\"\nassert solution(\"robot\") == \"robot\"\nassert solution(\"hobi\") == \"hob\"\nassert solution(\"hobit\") == \"hob\"\nassert solution(\"robi\") == \"rob\"\nassert solution(\"hobi\") == \"hob\"\nassert solution(\"hobit\") == \"hob\"\nassert solution(\"rakija\") == \"rak\""
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 'robi'\nassert solution(6) == 'hobi'\nassert solution(4) == 'hobit'\nassert solution(1) == 'hobotnica'\nassert solution(2) == 'robot'\nassert solution(8) == 'rakija'"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r').read()) == '12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n\\tpass'"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\nhobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\n4\\robi\\nhobi\\nhobit\\nrakija\") == \"12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str: \\n    pass\\n\""
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == ['def', 'robi', 'hobi', 'hobit', 'rakija']"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == ['hobit', 'hobi', 'hobotnica', 'robi', 'robot']"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"hobotnica\") == \"hob\"\nassert solution(\"robot\") == \"ro\"\nassert solution(\"hobi\") == \"hob\"\nassert solution(\"hobit\") == \"hob\"\nassert solution(\"robi\") == \"ro\"\nassert solution(\"hobi\") == \"hob\"\nassert solution(\"hobit\") == \"hob\"\nassert solution(\"rakija\") == \"rak\"\n\nfrom typing import List"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\npass\\n\", \"The solution is incorrect.\"\n"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"\"\"\n    5\n    hobotnica\n    robot\n    hobi\n    hobit\n    robi\n    4\n    robi\n    hobi\n    hobit\n    rakija\n\"\"\") == \"12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\\n\") == \"THIS IS A TEST\"\n"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\\n\") == \"THIS IS A TEST\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Solution did not return the expected output. Expected: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\"\n"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\\n\") == \"THIS IS A TEST\"\n"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('14 4\\nJQ IRKEYFG EXQ') == 'THIS IS A TEST'"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"THIS IS A TEST\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\"\n"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, \"The solution is incorrect\""
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"2.6\") == \"135\\n270\"\nassert solution(stdin=\"0.1234567890123456789\") == \"135\"\nassert solution(stdin=\"1234567890123456789\") == \"270\"\nassert solution(stdin=\"9999999999999999999\") == \"No solution\"\n"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"2.6\") == \"135\\n270\\n135135\\n270270\\n\"\n"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2.6\") == \"135\\n270\\n135135\\n270270\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2.6') == ['135', '270']\nassert solution('1.2345') == []\nassert solution
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"2.6\") == \"135\\n270\\n135135\\n270270\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2.6) == \"135\\n270\\n135135\\n270270\"\n"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2.6) == \"135\\n270\\n135135\\n270270\""
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2.6) == [\"135\", \"270\"]\nassert solution(2.7) == [\"135135\", \"270270\"]\nassert solution(2.0) == [\"135\", \"270\"]\nassert solution(1.1) == [\"135\", \"270\"]\nassert solution(1.0) == []"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"135\\n270\\n135135\\n270270\"\nprint(\"All solutions are correct\")"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1.1) == \"135\"\nassert solution(2.6) == \"135\"\nassert solution(0.6666666666666666) == \"135135\"\nassert solution
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == 4\n\nassert solution('''\n4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n7 4\n7 5\n8 6\n9 3\n''') == 1\n\nassert solution('''\n1\n0 0\n1 1\n''') == 1"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\") == 4\nassert solution(\"0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n\") == 4\n"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"4\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"4\\n\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_str) == expected_output, f\"Test case failed: {input_str}\\nExpected output: {expected_output}\\nActual output: {solution(input_str)}\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\n# Sample Input:\\n#   4\\n#   0 1\\n#   3 7\\n#   4 5\\n#   6 5\\n#   9\\n#   1 4\\n#   1 6\\n#   2 3\\n#   2 5\\n#   3 5\\n#   3 6\\n#   4 8\\n#   5 4\\n#   6 3\\n# Sample Output:\\n#   4\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\n# Sample Input:\\n#   4\\n#   0 1\\n#   3 7\\n#   4 5\\n#   6 5\\n#   9\\n#   1 4\\n#   1 6\\n#   2 3\\n#   2 5\\n#   3 5\\n#   3 6\\n#   4 8\\n#   5 4\\n#   6 3\\n# Test Output:\\n#   4\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\n# Sample Input:\\n#   4\\n#   0 1\\n#   3 7\\n#   4 5\\n#   6 5\\n#   9\\n#   1 4\\n#   1 6\\n#   2 3\\n#   2 5\\n#   3 5\\n#   3 6\\n#   4 8\\n#   5 4\\n#   6 3\\n# Test Output:\\n#   4\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\n# Sample Input:\\n#   4\\n#   0 1\\n#   3 7\\n#   4 5\\n#   6 5\\n#   9\\n#   1 4\\n#   1 6\\n#   2 3\\n#   2 5\\n#   3 5\\n#   3 6\\n#   4 8\\n#   5 4\\n#   6 3\\n# Test Output:\\n#   4\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\n# Sample Input:\\n#   4\\n#   0 1\\n#   3 7\\n#   4 5\\n#   6 5\\n#   9\\n#   1 4\\n#   1 6\\n#   2 3\\n#   2 5\\n#   3 5\\n#   3 6\\n#   4 8\\n#   5 4\\n#   6 3\\n# Test Output:\\n#   4\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\n# Sample Input:\\n#   4\\n#   0 1\\n#   3 7\\n#   4 5\\n#   6 5\\n#   9\\n#   1 4\\n#   1 6\\n#   2 3\\n#   2 5\\n#   3 5\\n#   3 6\\n#   4 8\\n#   5 4\\n#   6 3\\n# Test Output:\\n#   4\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\n# Sample Input:\\n#   4\\n#   0 1\\n#   3 7\\n#   4 5\\n#   6 5\\n#   9\\n#   1 4\\n#   1 6\\n#   2 3\\n#   2 5\\n#   3 5\\n#   3 6\\n#   4 8\\n#   5 4\\n#   6 3\\n# Test Output:\\n#   4\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\n# Sample Input:\\n#   4\\n#   0 1\\n#   3 7\\n#   4 5\\n#   6 5"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\") == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\") == 4\nprint(\"All test cases pass\")"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(None) == \"No solution found.\\n\""
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n\""
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected_output"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 2\\n1 3\\n1 4\\n1 5') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\\n\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n\"\n\nimport math"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n5\n1 2\n1 3\n1 4\n1 5\n''') == '''\n0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n'''"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"0.0000000\\n1.0000000\\n-1.0000000\\n0.0000000\\n0.0000000\\n\""
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\\n\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n\""
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n'"
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\\n\"\n) == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"5\\naba\\n*kul*to\\nana*\\n*ana*\\n\"\n) == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"5\\naba\\n*kul*to\\nana*\\n*ana*\\na*a\\naaa\\naaa\\naaa\\naaa\\naaa\\n\"\n) == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"10\\n*kul*to\\nana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n*ana*\\n"
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test failed for solution(stdin: '{stdin}', output: '{output}')\"\n"
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\\n') == '2\\n1\\n1\\ndef solution(stdin: str) -> str: pass'"
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\", \"Your solution is incorrect. Please see the examples.\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aaa\") == \"2\"\nassert solution(\"abc\") == \"1\"\nassert solution(\"aba\") == \"1\"\nassert solution(\"a*a\") == \"1\"\nassert solution(\"aaa*\") == \"2\"\nassert solution(\"*aaa\") == \"1\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\naaa\\nbbc\\nb*b\\na*a\\naaa*\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == '2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\\n'\nassert solution(open('sample_input.txt', 'r')) == '2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\\n'"
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\\n\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\n\nassert solution(\"3 3\\na\\n\\nb\\nc\\n\\nd\\n\") == \"1\\n\\n2\\n\\n1\\n\\n\"\n\nassert solution(\"3 3\\na*a\\naaa*aaa\\n*aaa\\n*aaa\\n\") == \"1\\n\\n2\\n\\n1\\n\\n\"\n\nassert solution(\"3 3\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\naaa\\n"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == \"1\"\n\nassert solution(\"4 2\\nXO\\nOX\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == \"0\""
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nXO\\nOO\\nXO\\nOO\\n\") == 0"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n4 2\nXO\nOX\nXO\nOX\nOX\nOO\nXO\nOO\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n4 2\nXO\nXO\nXO\nXO\nXO\nOO\nXO\nOO\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"\n4 2\nXO\nXO\nXO\nXO\nXO\nOO\nXO\nOO\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n4 2\nXO\nXO\nXO\nXO\nXO\nOO\nXO\nOO\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n4 2\nXO\nXO\nXO\nXO\nXO\nOO\nXO\nOO\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n4 2\nXO\nXO\nXO\nXO\nXO\nOO\nXO\nOO\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"\n4 2\nXO\nXO\nXO\nXO\nXO\nOO\nXO\nOO\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"\n4 2\nXO\nXO\nXO\nXO\nXO\nOO\nXO\nOO\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n4 2\nXO\nXO\nXO\nXO\nXO\nOO\nXO\nOO\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n4 2\nXO\nXO\nXO\nXO\nXO\nOO\nXO\nOO\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n4 2\nXO\nXO\nXO\nXO\nXO\nOO\nXO\nOO\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"\n4 2\nXO\nXO\nXO\nXO\nXO\nOO\nXO\nOO\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n4 2\nXO\nXO\nXO\nXO\nXO\nOO\nXO\nOO\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n4 2\nXO\nXO\nXO\nXO\nXO\nOO\nXO\nOO\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n4 2\nXO\nXO\nXO\nXO\nXO\nOO\nXO\nOO\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n4 2\nXO\nXO\nXO\nXO\nXO\nOO\nXO\nOO\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"\n4 2\nXO\nXO\nXO\nXO\nXO\nOO\nXO\nOO\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n4 2\nXO\nXO\nXO\nXO\nXO\nOO\nXO\nOO\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n4 2\nXO\nXO\nXO\nXO\nXO\nOO\nXO\nOO\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n4 2\nXO\nXO\nXO\nXO\nXO\nOO\nXO\nOO\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n4 2\nXO\nXO\nXO\nXO\nXO\nOO\nXO\nOO\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"\n4 2\nXO\nXO\nXO\nXO\nXO\nOO\nXO\nOO\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n4 2\nXO\nXO\nXO\nXO\nXO\nOO\nXO\nOO\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n4 2\nXO\nXO\nXO\nXO\nXO\nOO\nXO\nOO\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n4 2\nXO\nXO\nXO\nXO\nXO\nOO\nXO\nOO\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n4 2\nXO\nXO\nXO\nXO\nXO\nOO\nXO\nOO\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n4 2\nXO\nXO\nXO\nXO\nXO\nOO\nXO\nOO\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n4 2\nXO\nXO\nXO\nXO\nXO\nOO\nXO\nOO\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n4 2\nXO\nXO\nXO\nXO\nXO\nOO\nXO\nOO\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n4 2\nXO\nXO\nXO\nXO\nXO\nOO\nXO\nOO\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n4 2\nXO\nXO\nXO\nXO\nXO\nOO\nXO\nOO\n\"\"\") == \"0\"\n\nassert solution("
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 1, \"Solution should return 1.\"\nprint(\"Solution passed!\")"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nXO\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nXO\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nXO\\nXO\\nXO\\nOX\\nOO\\nXO\\nOO\\n\") == 0\nassert solution(\"4 2\\nXO\\nXO\\nXO\\nXO\\nOX\\nOO\\nXO\\nOO\\n\") == 0\nassert solution(\"4 2\\nXO\\nXO\\nXO\\nXO\\nOX\\nOO\\nXO\\nOO\\n\") == 0\nassert solution(\"4 2\\nXO\\nXO\\nXO\\nXO\\nOX\\nOO\\nXO\\nOO\\n\") == 0\nassert solution(\"4 2\\nXO\\nXO\\nXO\\nXO\\nOX\\nOO\\nXO\\nOO\\n\") == 0\nassert solution(\"4 2\\nXO\\nXO\\nXO\\nXO\\nOX\\nOO\\nXO\\nOO\\n\") == 0"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"5 3\\nXX\\nXOX\\nOOX\\nOOX\\nOOX\\nOOX\\n\") == 0\nassert solution(\"3 3\\nOOO\\nXOO\\nXOX\\nOXO\\nXOX\\n\") == 1\nassert solution(\"3 4\\nOOO\\nXOO\\nXOX\\nOXO\\nXOX\\n\") == 0\nassert solution(\"4 3\\nOOO\\nXOO\\nXOX\\nOXO\\nXOX\\n\") == 0\nassert solution(\"4 5\\nOOO\\nXOO\\nXOX\\nOXO\\nXOX\\n\") == 0\nassert solution(\"1 1\\n\") == 0\n"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nOO\\nXO\\nOO\\n\") == 0\nassert solution(\"4 2\\nXO\\nOX\\nOX\\nOX\\nOX\\nOO\\n\") == 0"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nXO\\nOX\\nOO\\nXO\\nOO\\n\") == \"1\"\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nXO\\nOO\\nXO\\nOO\\n\") == \"0\"\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nXO\\nOO\\nXO\\nOO\\n\") == \"0\""
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\n"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 0\\n0 2\\n-2 0\\n0 -2\") == 16\n"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\nassert solution(\"6\\n1 1\\n1 3\\n2 2\\n3 2\\n3 4\\n4 3\") == \"112\"\nassert solution(\"10\\n1 1\\n1 5\\n2 2\\n3 3\\n4 4\\n5 4\\n6 5\\n7 6\\n8 7\\n9 8\\n10 8\") == \"3225\""
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"16\", \"The sum of the scores is incorrect.\""
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2 0\\n0 2\\n-2 0\\n0 -2\") == \"16\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 0\\n0 2\\n-2 0\\n0 -2\\n\") == \"16\"\n"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 0\\n0 2\\n-2 0\\n0 -2\") == 16\nprint(\"All tests passed!\")"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 16, \"Incorrect solution\""
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\\n\"\nassert solution(\"2\\n0\\n1\\n0\") == \"1\\n\"\nassert solution(\"1\\n0\\n1\\n0\") == \"0\\n\""
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == output, f\"Test case {t+1} failed. Expected output: {output}, got: {solution(input)}\" for t, (input, output) in enumerate(zip(test_cases, expected_outputs))"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"80\", \"Your solution is incorrect.\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 10 50\\n8 8 2 -2\\n\") == \"80\\n\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 10 50\\n8 8 2 -2') == '80'\n"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 10 50\\n8 8 2 -2\") == \"80\\n\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == \"80\", \"Sample Input 1 Failed\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 10 50\\n8 8 2 -2\\n') == '80'\nassert solution('2 8 -2\\n1 5 3\\n4 6 2\\n') == '80'\nassert solution('1 2 3\\n4 5 6\\n8 9 10\\n') == '80'\nassert solution('2 3 4\\n5 6 7\\n8 9 10\\n') == '160'\nassert solution('2 3 4\\n5 6 7\\n10 11 12\\n') == '160'\nassert solution('2 3 4\\n5 6 7\\n8 9 10\\n') == '160'\nassert solution('1 2 3\\n4 5 6\\n8 9 10\\n') == '160'\nassert solution('2 3 4\\n5 6 7\\n8 9 10\\n') == '160'"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"80\", \"The output is incorrect. Expected: 80, Actual: \" + str(solution())\nprint(\"Test Passed\")"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n4 10 50\n8 8 2 -2\n''') == '80'"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 10 50\\n8 8 2 -2\\n\") == \"80\\n\"\n"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 10 50\\n8 8 2 -2\\n\") == \"80\\n\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n\"\"\") == \"3.000000000\\n\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6''') == 3.0"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n\") == \"3.000000000\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\"\n"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n''') == '3.000000000'"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6') == 3.0\nassert solution('1 1\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6') == 3.0\nassert solution('2 3\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6') == 1.0\nassert solution('1 1\\n1 1 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6') == 2.0\nassert solution('1 1\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6') == 2.0\nassert solution('1 1\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6') == 2.0"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n\") == \"3.000000000\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n2\") == \"2.000000000\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n1\") == \"2.000000000\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n10\") == \"3.000000000\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n5\\n2\\n\") == \"2.000000000\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n10\\n\") == \"2.000000000\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\\n\"\nassert solution(\"1 10\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\\n\"\nassert solution(\"1 100\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\\n\"\nassert solution(\"1 1000\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\\n\"\nassert solution(\"1 10000\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\\n\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '3.000000000'\n"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\"\nassert solution(\"5 4\\n0 0 1 0\\n0 0 0 1\\n1 1 0 0\\n0 0 0 0\") == \"2\"\nassert solution(\"3 3\\n1 1\\n1 1\\n0 0\") == \"1\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\") == \"1\""
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == 1\nassert solution(\"4 3\\n1 0\\n0 1\\n1 2\\n2 3\\n2 4\") == 1\nassert solution(\"4 3\\n0 1\\n1 0\\n0 1\\n1 2\\n2 3\\n2 4\") == 1\nassert solution(\"4 3\\n0 0\\n0 1\\n0 1\\n0 0\\n0 0\\n0 0\\n\") == 1\nassert solution(\"4 3\\n0 0\\n0 1\\n0 0\\n1 0\\n1 0\\n0 0\\n\") == 1\nassert solution(\"4 3\\n0 0\\n0 0\\n0 0\\n0 1\\n0 1\\n0 0\\n\") == 1\nassert solution(\"4 3\\n1 0\\n0 0\\n0 0\\n0 1\\n0 1\\n1 0\\n\") == 1\nassert solution(\"4 3\\n0 1\\n0 0\\n0 0\\n0 0\\n1 0\\n0 1\\n\") == 1\nassert solution(\"4 3\\n0 1\\n0 1\\n0 0\\n0 0\\n0 0\\n1 0\\n\") == 1\nassert solution(\"4 3\\n0 1\\n0 1\\n0 1\\n0 0\\n0 0\\n0 0\\n\") == 1\nassert solution(\"4 3\\n0 1\\n0 1\\n0 1\\n0 1\\n0 0\\n0 0\\n\") == 1\nassert solution(\"4 3\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n0 0\\n\") == 1\nassert solution(\"4 3\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n\") == 1\nassert solution(\"4 3\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n\") == 1\nassert solution(\"4 3\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n\") == 1\nassert solution(\"4 3\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n\") == 1\nassert solution(\"4 3\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n\") == 1\nassert solution(\"4 3\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n\") == 1\nassert solution(\"4 3\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n\") == 1\nassert solution(\"4 3\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n\") == 1\nassert solution(\"4 3\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n\") == 1\nassert solution(\"4 3\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n\") == 1\nassert solution(\"4 3\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n\") == 1\nassert solution(\"4 3\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n\") == 1\nassert solution(\"4 3\\n0 1"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1\\n\", \"Incorrect output\""
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\\n\"\n"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\\n\""
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4') == 1\nassert solution('6 4\\n0 1 1 1\\n0 2 1 0\\n1 3 0 1\\n2 4 0 1\\n3 5 0 1\\n4 6') == 3\nassert solution('4 3\\n0 1 1 0\\n1 2\\n2 3\\n2 4\\n5 6') == 4"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\\n\"\nassert solution(\"5 5\\n0 1 0 0\\n0 1 0 0\\n0 1 0 0\\n0 1 0 0\\n0 1 0 0\\n0 1 0 0\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4') == 1"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 1"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\\n\") == \"1\"\nprint(\"All test cases pass!\")"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6.283185\"\n"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Solution: {solution(input())}, Expected Output: {expected_output}\""
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 6.283185\nprint(\"Test passed\")"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2') == '6.283185'"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == \"6.283185\""
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\") == \"6.283185\""
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"6.283185\"\n"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\") == \"6.283185\"\n"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 6.283185, \"Test failed\""
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == \"6.283185\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"1 2 3\"\nassert solution(4) == \"1 2 3 4\"\nassert solution(5) == \"1 2 3 4 5\"\nassert solution(6) == \"1 2 3 4 5 6\"\nassert solution(7) == \"1 2 3 4 5 6 7\"\n"
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1 2 3\\n\", \"Incorrect solution\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n\") == \"1 2 3\\n\"\nassert solution(\"3\\n\") == \"1 2 3\\n\"\nassert solution(\"4\\n\") == \"1 2 3 4\\n\"\nassert solution(\"5\\n\") == \"1 2 3 4 5\\n\"\nassert solution(\"6\\n\") == \"1 2 3 4 5 6\\n\"\nassert solution(\"7\\n\") == \"1 2 3 4 5 6 7\\n\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == expected, f\"Expected {expected}, got {solution(stdin=input())}\"\n"
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == '1'\nassert solution(2) == '1 2'\nassert solution(3) == '1 2 3'\nassert solution(4) == '1 2 3 4'\nassert solution(5) == '1 2 3 4 5'"
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2') == '1 2 3'"
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2') == '1 2 3', \"Incorrect Solution\"\nassert solution('3') == '2 3', \"Incorrect Solution\"\nassert solution('4') == '3 4', \"Incorrect Solution\"\nassert solution('5') == '4 5', \"Incorrect Solution\"\nassert solution('6') == '5 6', \"Incorrect Solution\"\nassert solution('7') == '6 7', \"Incorrect Solution\"\nassert solution('8') == '7 8', \"Incorrect Solution\"\nassert solution('9') == '8 9', \"Incorrect Solution\"\nassert solution('10') == '9 10', \"Incorrect Solution\"\nassert solution('11') == '10 11', \"Incorrect Solution\"\nassert solution('12') == '11 12', \"Incorrect Solution\"\nassert solution('13') == '12 13', \"Incorrect Solution\"\nassert solution('14') == '13 14', \"Incorrect Solution\"\nassert solution('15') == '14 15', \"Incorrect Solution\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"2\") == \"1 2 3\\n\"\nassert solution(stdin=\"3\") == \"1 2 3 4\\n\"\nassert solution(stdin=\"4\") == \"1 2 3 4 5\\n\"\nassert solution(stdin=\"5\") == \"1 2 3 4 5 6\\n\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1 2 3\\n\", \"The solution should return the binary tree in the preorder traversal.\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1 2 3\"\nassert solution() == \"1 2 3\"\nassert solution() == \"1 2 3\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 1"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n\") == \"1\\n1 2 3 4\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\\n1 2 3 4\", \"The solution is incorrect.\"\n"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n2 4\\n3 4\") == \"1\\n1 2 3 4\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 4\\n1 2\\n1 3\\n2 4\\n3 4') == '1\\n1 2 3 4'\nassert solution('4 3\\n1 2\\n2 3\\n3 4\\n4 1') == '2\\n2 3 4'\nassert solution('5 3\\n1 2\\n2 3\\n3 4\\n4 1\\n5 6') == '1\\n5 3 4 1'\nassert solution('4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6') == '0\\n4 5 6'\nassert solution('4 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6') == '0\\n4 5 6'\nassert solution('3 4\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6') == '1\\n3 4 1'\nassert solution('5 4\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6') == '2\\n1 2 3 4'\nassert solution('2 5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6') == '1\\n2 3 4'\nassert solution('3 6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6') == '1\\n3 4 1'\nassert solution('4 7\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7') == '1\\n1 2 3 4'\nassert solution('5 8\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8') == '1\\n1 2 3 4'\nassert solution('6 9\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9') == '1\\n1 2 3 4'\nassert solution('7 10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10') == '1\\n1 2 3 4'\nassert solution('8 11\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11') == '1\\n1 2 3 4'\nassert solution('9 12\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12') == '0\\n1 2 3 4'\nassert solution('10 13\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13') == '0\\n1 2 3 4'\n\nprint('All test cases passed.')"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 4\\n1 2\\n1 3\\n2 4\\n3 4') == '1\\n1 2 3 4'"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n2 4\\n3 4\") == \"1\\n1 2 3 4\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Solution({stdin}) should return '{expected}', but got '{solution(stdin)}'.\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1\\n1 2 3 4\""
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 1\\n1 2\\n') == '1'\nassert solution('4 1\\n1 2\\n2 3\\n3 4\\n') == '1'\nassert solution('1 3\\n2 4\\n3 5\\n4 6\\n5 7\\n6 8\\n7 9\\n8 10\\n9 11\\n10 12\\n11 13\\n12 14\\n13 15\\n14 16\\n15 17\\n16 18\\n17 19\\n18 20\\n19 21\\n20 22\\n21 23\\n22 24\\n23 25\\n24 26\\n25 27\\n26 28\\n27 29\\n28 30\\n29 31\\n30 32\\n31 33\\n32 34\\n33 35\\n34 36\\n35 37\\n36 38\\n37 39\\n38 40\\n39 41\\n40 42\\n41 43\\n42 44\\n43 45\\n44 46\\n45 47\\n46 48\\n47 49\\n48 50\\n49 51\\n50 52\\n51 53\\n52 54\\n53 55\\n54 56\\n55 57\\n56 58\\n57 59\\n58 60\\n59 61\\n60 62\\n61 63\\n62 64\\n63 65\\n64 66\\n65 67\\n66 68\\n67 69\\n68 70\\n69 71\\n70 72\\n71 73\\n72 74\\n73 75\\n74 76\\n75 77\\n76 78\\n77 79\\n78 80\\n79 81\\n80 82\\n81 83\\n82 84\\n83 85\\n84 86\\n85 87\\n86 88\\n87 89\\n88 90\\n89 91\\n90 92\\n91 93\\n92 94\\n93 95\\n94 96\\n95 97\\n96 98\\n97 99\\n98 100\\n99 100\\n') == '1'\nassert solution('1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\\n21 22\\n23 24\\n25 26\\n27 28\\n29 30\\n31 32\\n33 34\\n35 36\\n37 38\\n39 40\\n41 42\\n43 44\\n45 46\\n47 48\\n49 50\\n51 52\\n53 54\\n55 56\\n57 58\\n59 60\\n61 62\\n63 64\\n65 66\\n67 68\\n69 70\\n71 72\\n73 74\\n75 76\\n77 78\\n79 80\\n81 82\\n83 84\\n85"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 1\\n1 2') == '1\\n'\nassert solution('2 3\\n1 2\\n1 3\\n2 3') == '3\\n'\nassert solution('5 3\\n1 2\\n2 3\\n3 4\\n4 5') == '5\\n'\nassert solution('2 0\\n2 1\\n1 2') == '1\\n'\nassert solution('1 3\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8') == '7\\n'\nassert solution('4 4\\n1 2\\n1 3\\n2 3\\n3 4\\n4 5\\n1 4\\n2 4\\n3 5\\n4 6\\n5 6\\n6 7\\n7 8') == '7\\n'\nassert solution('5 3\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n1"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n1 2\") == 1\nassert solution(\"3 2\\n1 2\\n1 3\\n2 3\") == 2\nassert solution(\"5 3\\n1 2\\n2 3\\n3 4\\n4 5\") == 3"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"1\\n\""
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('Input\\n2 1\\n1 2\\nOutput\\n1\\n') == 1"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 1\\n1 2\\n') == '1\\n'\n"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n1 2\") == \"1\\n\"\nassert solution(\"3 3\\n1 2\\n2 3\\n1 3\\n2 4\") == \"3\\n\""
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\", \"The output is incorrect. Expected '1', but got '{}'\".format(solution())\nassert solution() == \"1\", \"The output is incorrect. Expected '1', but got '{}'\".format(solution())"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2) == 45, \"The solution is not correct.\"\n"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(2) == \"45\"\n"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2) == 45, \"Input: 2\\nOutput: 45\""
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2) == \"45\"\n"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == 45, \"The solution should return 45 for n = 2.\""
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == \"45\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2) == \"45\""
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2) == \"45\""
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2) == \"45\", \"The solution should return 45.\""
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2) == 45, \"The correct output should be 45.\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\\n\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\"\n\nassert solution(\"10 30 20\\n8 15 12 17 20\") == \"6\"\n\nassert solution(\"10 30 20\\n10 15 12 17 20\") == \"6\"\n\nassert solution(\"10 30 20\\n15 12 17 20 15\") == \"6\"\n\nassert solution(\"10 30 20\\n15 12 17 20 18\") == \"6\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\\n\"\nassert solution(\"10 30 30\\n15 10 20 25\") == \"6\\n\"\nassert solution(\"100 100 100\\n100 100 100\") == \"10\\n\"\nassert solution(\"1000 1000 1000\\n1000 1000 1000\") == \"10\\n\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\\n\"\nassert solution(\"5 30 20\\n7 11 9 12 2\") == \"3\\n\"\nassert solution(\"5 20 40\\n7 11 9 12 2\") == \"2\\n\"\nassert solution(\"5 20 40\\n7 11 9 12 15\") == \"3\\n\"\nassert solution(\"5 20 20\\n7 11 9 12 4\") == \"4\\n\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"5 20 20\\n7 11 9 12 2\\n\") == 4\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"4\\n\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\"\nassert solution(\"5 30 20\\n7 11 9 12 2\") == \"3\"\nassert solution(\"5 20 20\\n7 11 9 12 10\") == \"3\"\nassert solution(\"5 20 20\\n7 11 9 12 15\") == \"5\"\nassert solution(\"5 20 20\\n7 11 9 12 0\") == \"0\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\\n\"\nassert solution(\"1 30 5\") == \"2\\n\"\nassert solution(\"10 10 10\") == \"10\\n\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\"\nassert solution(\"3 10 20\\n5 15 25\") == \"2\"\nassert solution(\"5 15 10\\n10 20 25\") == \"0\"\n"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\"\nassert solution(\"2 1\\nhello\\nworld\") == \"2\"\nassert solution(\"1 1\\nsample\\ninput\") == \"1\"\nassert solution(\"1 1\\npython\\nprogramming\") == \"1\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n\") == \"2\\n\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(f\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == 2, \"Expected output: 2, got: \" + str(solution(f\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\"))"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n\") == \"2\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n') == '2'\n"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n2 2\nkenny 1 harrypotter1\ncharlie 1 lordoftherings\njenny 1 harrypotter1\nlaura 1 lordoftherings\n\"\"\"\n) == \"2\\n\"\n\nsolution(\n    \"\"\"\n2 2\nkenny 1 harrypotter1\ncharlie 1 lordoftherings\njenny 1 harrypotter1\nlaura 1 lordoftherings\n\"\"\"\n)"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n\") == \"2\\n\"\nassert solution(\"3 2\\nbob 1 book1\\nbrody 1 book2\\ncathy 1 book3\\ncharlie 1 lordoftherings\\njoe 1 harrypotter1\\n\") == \"4\\n\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 2, \"Your code is incorrect. The output should be 2.\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n') == '2\\n'\nassert solution('2 1\\n') == '1\\n'\nassert solution('1 1\\n') == '1\\n'"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n01\\n\") == \"2 1\"\n"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"1\\n01\\n\") == \"2 1\"\n"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2 1\"\n\nfrom typing import List"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1\\n01') == '2 1'"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('slovak_antivirus_spam_filter.txt', 'r').read()) == '2 1', \"Your implementation is incorrect\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1\\n01') == '2 1'\n"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n01\\n') == '2 1'\nassert solution('2\\n00\\n11110100\\n01001001\\n00101101\\n11011011\\n') == '4 6'\nassert solution('1\\n00\\n') == '1 1'\nassert solution('2\\n00\\n11110100\\n01001001\\n00101101\\n11011011\\n00010101\\n') == '4 6'"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n01\\n\") == \"2 1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2 1\", \"Incorrect output.\""
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2 1\"\n\nclass Solution:\n    def solution(self, k: int, answers: str) -> str:\n        def count_spam(spam_count):\n            count = 0\n            for answer in answers:\n                if answer == \"0\":\n                    count += spam_count\n            return count\n\n        def count_ham(ham_count):\n            count = 0\n            for answer in answers:\n                if answer == \"1\":\n                    count += ham_count\n            return count\n\n        def count_correct(count):\n            return count\n\n        def calculate_success_rate(count):\n            return count / len(answers)\n\n        def sort_subsequences(subsequences):\n            subsequences.sort(key=lambda x: (-calculate_success_rate(count_correct(sum([int(a) for a in x]))), len(x)))\n\n        subsequences = []\n        for i in range(1, len(answers)):\n            if answers[i] == answers[i - 1]:\n                subsequences[-1].append(answers[i])\n            else:\n                subsequences.append([answers[i]])\n\n        for subsequence in subsequences:\n            if len(subsequence) >= k:\n                sort_subsequences(subsequence)\n\n        return \" \".join(str(f) + \" \" + str(len(s)) for f, s in zip(range(1, len(subsequences) + 1), subsequences))"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12') == '4 3\\n2123\\n1012\\n2123\\n'\nassert solution('1\\n4 2\\n12345\\n1 1\\n21\\n22\\n33\\n44\\n55') == '4 3\\n12345\\n554433\\n211221\\n'\nassert solution('4\\n3 3\\n11111\\n11111\\n11111\\n11111\\n11111') == '3 4\\n11111\\n11111\\n11111\\n11111\\n11111\\n'\nassert solution('2\\n1 1\\n11111\\n11111\\n11111\\n11111\\n11111') == '2 2\\n11111\\n11111\\n11111\\n11111\\n11111\\n'\nassert solution('1\\n1 1\\n11111\\n11111\\n11111\\n11111\\n11111') == '1 1\\n11111\\n11111\\n11111\\n11111\\n11111\\n'\nassert solution('2\\n1 1\\n11111\\n11111\\n11111\\n11111\\n11111') == '1 1\\n11111\\n11111\\n11111\\n11111\\n11111\\n'\nassert solution('1\\n1 1\\n11111\\n11111\\n11111\\n11111\\n11111') == '1 1\\n11111\\n11111\\n11111\\n11111\\n11111\\n'\nassert solution('1\\n1 1\\n11111\\n11111\\n11111\\n11111\\n11111') == '1 1\\n11111\\n11111\\n11111\\n11111\\n11111\\n'\nassert solution('1\\n1 1\\n11111\\n11111\\n11111\\n11111\\n11111') == '1 1\\n11111\\n11111\\n11111\\n11111\\n11111\\n'\nassert solution('1\\n1 1\\n11111\\n11111\\n11111\\n11111\\n11111') == '1 1\\n11111\\n11111\\n11111\\n11111\\n11111\\n'\nassert solution('1\\n1 1\\n11111\\n11111\\n11111\\n11111\\n11111') == '1 1\\n11111\\n11111\\n11111\\n11111\\n11111\\n'\nassert solution('1\\n1 1\\n11111\\n11111\\n11111\\n11111\\n11111') == '1 1\\n11111\\n11111\\n11111\\n11111\\n11"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n----\\n2233\\n2233\\n1111\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12') == '4 3\\n2123\\n1012\\n2123'\nassert solution('3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\\n3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12') == '4 3\\n2123\\n1012\\n2123'\nassert solution('3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\\n3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12') == '4 3\\n2123\\n1012\\n2123'"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12') == '4 3\\n2123\\n1012\\n2123\\n'"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\"\nassert solution(\"5\\n1 1\\n111\\n222\\n333\\n444\") == \"5 5\\n111\\n444\\n333\\n222\\n111\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n\"\nassert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n\"\n\nassert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n\"\nassert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n\"\n\nassert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n\"\nassert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n\"\n\nassert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n\"\nassert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n----\\n2233\\n2233\\n1111\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\\n') == '4 3\\n2123\\n1012\\n2123\\n2233\\n2233\\n1111\\n'"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12') == '4 3\\n2123\\n1012\\n2123'\n"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"libattr vim-X11 vim-common gtk2 libattr vim-common gtk2 libtiff atk pango glib2 libtiff zlib libjpeg atk pango xorg-x11-libs freetype glib2 glib2 zlib libjpeg libjpeg xorg-x11-libs grep freetype grep pcre pcre freetype glib2\") == \"atk freetype glib2 libattr libjpeg pango vim-common xorg-x11-libs xorg-x11-libs\", \"Expected 'atk freetype glib2 libattr libjpeg pango vim-common xorg-x11-libs xorg-x11-libs', got '{}' instead.\"\nassert solution(\"emacs xorg-x11 lisp xorg-x11\") == \"xorg-x11\", \"Expected 'xorg-x11', got '{}' instead.\"\nassert solution(\"libattr vim-X11 vim-common gtk2 libattr vim-common gtk2 libtiff atk pango glib2 libtiff zlib libjpeg atk pango xorg-x11-libs freetype glib2 glib2 zlib libjpeg libjpeg xorg-x11-libs grep freetype grep pcre pcre freetype glib2\") == \"atk freetype glib2 libattr libjpeg pango vim-common xorg-x11-libs xorg-x11-libs\", \"Expected 'atk freetype glib2 libattr libjpeg pango vim-common xorg-x11-libs xorg-x11-libs', got '{}' instead.\"\nassert solution(\"emacs xorg-x11 lisp xorg-x11\") == \"xorg-x11\", \"Expected 'xorg-x11', got '{}' instead.\"\nassert solution(\"libattr vim-X11 vim-common gtk2 libattr vim-common gtk2 libtiff atk pango glib2 libtiff zlib libjpeg atk pango xorg-x11-libs freetype glib2 glib2 zlib libjpeg libjpeg xorg-x11-libs grep freetype grep pcre pcre freetype glib2\") == \"atk freetype glib2 libattr libjpeg pango vim-common xorg-x11-libs xorg-x11-libs\", \"Expected 'atk freetype glib2 libattr libjpeg pango vim-common xorg-x11-libs xorg-x11-libs', got '{}' instead.\"\nassert solution(\"emacs xorg-x11 lisp xorg-x11\") == \"xorg-x11\", \"Expected 'xorg-x11', got '{}' instead.\"\nassert solution(\"libattr vim-X11 vim-common gtk2 libattr vim-common gtk2 libtiff atk pango glib2 libtiff zlib libjpeg atk pango xorg-x11-libs freetype glib2 glib2 zlib libjpeg libjpeg xorg-x11-libs grep freetype grep pcre pcre freetype glib2\") == \"atk freetype glib2 libattr libjpeg pango vim-common xorg-x11-libs xorg-x11-libs\", \"Expected 'atk freetype glib2 libattr libjpeg pango vim-common xorg-x11-libs xorg-x11-libs', got '{}' instead.\"\nassert solution(\"emacs xorg-x11 lisp xorg-x11\") == \"xorg-x11\", \"Expected 'xorg-x11', got '{}' instead.\"\nassert solution(\"libattr vim-X11 vim-common gtk2 libattr vim-common gtk2 libtiff atk pango glib2 libtiff zlib libjpeg atk pango xorg-x11-libs freetype glib2 glib2 zlib libjpeg libjpeg xorg-x11-libs grep freetype grep pcre pcre freetype glib2\") == \"atk freetype glib2 libattr libjpeg pango vim-common xorg-x11-libs xorg-x11-libs\", \"Expected 'atk freetype glib2 libattr libjpeg pango vim-common xorg-x11-libs xorg-x11-libs', got '{}' instead.\"\nassert solution(\"emacs xorg-x11 lisp xorg-x11\") == \"xorg-x11\", \"Expected 'xorg-x11', got '{}' instead.\"\n"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 'atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2\\nvim-X11'"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == '''\natk\nfreetype\nglib2\nlibattr\nlibjpeg\npcre\ngrep\nvim-common\nxorg-x11-libs\npango\nzlib\nlibtiff\ngtk2\nvim-X11\n'''"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('vim-common') == 'vim-common'\nassert solution('xorg-x11-libs') == 'xorg-x11-libs'\nassert solution('atk') == 'atk'\nassert solution('freetype') == 'freetype'\nassert solution('glib2') == 'glib2'\nassert solution('libattr') == 'libattr'\nassert solution('libjpeg') == 'libjpeg'\nassert solution('pcre') == 'pcre'\nassert solution('grep') == 'grep'\nassert solution('vim-X11') == 'vim-X11'\nassert solution('pango') == 'pango'\nassert solution('zlib') == 'zlib'\nassert solution('libtiff') == 'libtiff'\nassert solution('gtk2') == 'gtk2'\nassert solution('vim-common') == 'vim-common'\nassert solution('xorg-x11-libs') == 'xorg-x11-libs'\nassert solution('atk') == 'atk'\nassert solution('freetype') == 'freetype'\nassert solution('glib2') == 'glib2'\nassert solution('libattr') == 'libattr'\nassert solution('libjpeg') == 'libjpeg'\nassert solution('pcre') == 'pcre'\nassert solution('grep') == 'grep'\nassert solution('vim-X11') == 'vim-X11'\nassert solution('pango') == 'pango'\nassert solution('zlib') == 'zlib'\nassert solution('libtiff') == 'libtiff'\nassert solution('gtk2') == 'gtk2'\nassert solution('vim-common') == 'vim-common'\nassert solution('xorg-x11-libs') == 'xorg-x11-libs'\nassert solution('atk') == 'atk'\nassert solution('freetype') == 'freetype'\nassert solution('glib2') == 'glib2'\nassert solution('libattr') == 'libattr'\nassert solution('libjpeg') == 'libjpeg'\nassert solution('pcre') == 'pcre'\nassert solution('grep') == 'grep'\nassert solution('vim-X11') == 'vim-X11'\nassert solution('pango') == 'pango'\nassert solution('zlib') == 'zlib'\nassert solution('libtiff') == 'libtiff'\nassert solution('gtk2') == 'gtk2'\nassert solution('vim-common') == 'vim-common'\nassert solution('xorg-x11-libs') == 'xorg-x11-libs'\nassert solution('atk') == 'atk'\nassert solution('freetype') == 'freetype'\nassert solution('glib2') == 'glib2'\nassert solution('libattr') == 'libattr'\nassert solution('libjpeg') == 'libjpeg'\nassert solution('pcre') == 'pcre'\nassert solution('grep') == 'grep'\nassert solution('vim-X11') == 'vim-X11'\nassert solution('pango') == 'pango'\nassert solution('zlib') == 'zlib'\nassert solution('libtiff') == 'libtiff'\nassert solution('gtk2') == 'gtk2'\nassert solution('vim-common') == 'vim-common'\nassert solution('xorg-x11-libs') == 'xorg-x11-libs'\nassert solution('atk') == 'atk'\nassert solution('freetype') == 'freetype'\nassert solution('glib2') == 'glib2'\nassert solution('libattr') == 'libattr'\nassert solution('libjpeg') == 'libjpeg'\nassert solution('pcre') == 'pcre'\nassert solution('grep') == 'grep'\nassert solution('vim-X11') == 'vim-X11'\nassert solution('pango') == 'pango'\nassert solution('zlib') == 'zlib'\nassert solution('libtiff') == 'libtiff'\nassert solution('gtk2') == 'gtk2'\nassert solution('vim-common') == 'vim-common'\nassert solution('xorg-x11-libs') == 'xorg-x11-libs'\nassert solution('atk') == 'atk'\nassert solution('freetype') == 'freetype'\nassert solution('glib2') == 'glib2'\nassert solution('libattr') == 'libattr'\nassert solution('libjpeg') == 'libjpeg'\nassert solution('pcre') == 'pcre'\nassert solution('grep') == 'grep'\nassert solution('vim-X11') =="
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 'atk freetype glib2 libattr libjpeg pcre grep vim-common xorg-x11-libs pango zlib libtiff gtk2 vim-X11'"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin: str) == 'atk freetype glib2 libattr libjpeg pcre grep vim-common xorg-x11-libs pango zlib libtiff gtk2 vim-X11'\nassert solution(stdin: str) == 'cannot be ordered def solution(stdin: str) -> str: pass'"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'atk\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2\\nvim-X11'\nprint('All test cases passed successfully!')"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'cannot be ordered'\n"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2\\nvim-X11\""
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"32 20\") == \"16\""
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('32 20') == '16'\n"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"32 20\") == \"16\"\nassert solution(\"42 20\") == \"16\"\nassert solution(\"423 20\") == \"16\"\nassert solution(\"4234 20\") == \"16\"\nassert solution(\"1234567890 20\") == \"16\"\nassert solution(\"123456789012 20\") == \"16\"\nassert solution(\"12345678901234 20\") == \"16\"\nassert solution(\"1234567890123456789 20\") == \"16\"\nassert solution(\"1234567890123456789012 20\") == \"16\"\nassert solution(\"12345678901234567890123456789012 20\") == \"16\"\nassert solution(\"12345678901234567890123456789012345678901234 20\") == \"16\"\nassert solution(\"12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"32 20\") == \"16\"\nassert solution(\"30 10\") == \"16\"\nassert solution(\"50 5\") == \"10\"\nassert solution(\"0 5\") == \"16\"\nassert solution(\"400 500\") == \"10\""
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"32 20\") == \"16\"\nassert solution(\"111 5\") == \"10\"\nassert solution(\"100 5\") == \"10\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"16\"\n"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"32 20\") == \"16\"\n"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"16\", \"Your code is correct!\""
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"32 20\") == \"16\\n\", \"Your solution is incorrect. Please check the input.\""
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(32, 20) == 16"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 4\\n....\\n.#.#\\n....') == '5 13'"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n....\\n.#.#\\n....\") == \"5 13\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 4\\n....\\n.#.#\\n....\\n') == '5 13'"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 4\\n....\\n.#.#\\n....') == '5 13\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 4\\n....\\n.#.#\\n....') == 5\nassert solution('1 1\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n...."
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n....\\n.#.#\\n....\") == \"5 13\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '5 13', 'Incorrect solution'\n"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n....\\n.#.#\\n....\") == 5 13\nassert solution(\"1 1\\n....\\n....\") == 1 2\nassert solution(\"2 3\\n....\\n....\") == 3 5\nassert solution(\"3 5\\n....\\n....\") == 5 8\nassert solution(\"5 7\\n....\\n....\") == 7 10"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n....\\n.#.#\\n....\\n\") == \"5 13\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\n\nassert solution(\"6 7\\n....\\n#..#\\n....\\n\") == \"10 15\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\n\nassert solution(\"3 5\\n....\\n.##.\\n....\\n\") == \"3 7\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\n\nassert solution(\"6 7\\n....\\n.###\\n....\\n\") == \"10 14\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\n\nassert solution(\"5 7\\n....\\n...#\\n....\\n\") == \"11 14\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\n\nassert solution(\"4 7\\n....\\n...#\\n....\\n\") == \"8 12\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n....\\n.#.#\\n....\\n\") == \"5 13\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n1 2 5 1\n2 3 3 1\n3 1? 0\n''') == '5\\n'"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"5\\n\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    3 3\n    1 2 5 1\n    2 3 3 1\n    3 1? 0\n    \"\"\"\n) == \"5\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n    3 3\n    1 2 5 1\n    2 3 3 1\n    3 1? 0\n    \"\"\") == \"\"\"\n    5\n    \"\"\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"5\\n\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == expected_output, \"Your solution is incorrect.\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\\n\"\nassert solution(\"3 4\\n1 2 3 1\\n2 3 4 1\\n3 1? 0\\n4 5? 0\") == \"4\\n\"\nassert solution(\"3 4\\n1 2 3 1\\n2 3 4 1\\n3 1? 0\\n4 5? 0\\n\") == \"4\\n\"\nassert solution(\"3 4\\n1 2 3 1\\n2 3 4 1\\n3 1? 0\\n4 5? 0\\n6 7? 0\") == \"4\\n\"\n"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"5\\n\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\\n\") == \"5\"\n"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == 0\nassert solution(\"3 4\\n0 1\\n0 2\\n1 2\\n2 3\\n0 3\\n1 3\\n2 4\\n0 4\\n1 4\\n2 5\\n0 5\\n1 5\\n2 6\\n0 6\\n1 6\\n2 7\\n0 7\\n1 7\\n2 8\\n0 8\\n1 8\\n2 9\\n0 9\\n1 9\\n2 10\\n0 10\\n1 10\\n2 11\\n0 11\\n1 11\\n2 12\\n0 12\\n1 12\\n2 13\\n0 13\\n1 13\\n2 14\\n0 14\\n1 14\\n2 15\\n0 15\\n1 15\\n2 16\\n0 16\\n1 16\\n2 17\\n0 17\\n1 17\\n2 18\\n0 18\\n1 18\\n2 19\\n0 19\\n1 19\\n2 20\\n0 20\\n1 20\\n2 21\\n0 21\\n1 21\\n2 22\\n0 22\\n1 22\\n2 23\\n0 23\\n1 23\\n2 24\\n0 24\\n1 24\\n2 25\\n0 25\\n1 25\\n2 26\\n0 26\\n1 26\\n2 27\\n0 27\\n1 27\\n2 28\\n0 28\\n1 28\\n2 29\\n0 29\\n1 29\\n2 30\\n0 30\\n1 30\\n2 31\\n0 31\\n1 31\\n2 32\\n0 32\\n1 32\\n2 33\\n0 33\\n1 33\\n2 34\\n0 34\\n1 34\\n2 35\\n0 35\\n1 35\\n2 36\\n0 36\\n1 36\\n2 37\\n0 37\\n1 37\\n2 38\\n0 38\\n1 38\\n2 39\\n0 39\\n1 39\\n2 40\\n0 40\\n1 40\\n2 41\\n0 41\\n1 41\\n2 42\\n0 42\\n1 42\\n2 43\\n0 43\\n1 43\\n2 44\\n0 44\\n1 44\\n2 45\\n0 45\\n1 45\\n2 46\\n0 46\\n1 46\\n2 47\\n0 47\\n1 47\\n2 48\\n0 48\\n1 48\\n2 49\\n0 49\\n1 49\\n2 50\\n0 50\\n1 50\\n2 51\\n0 51\\n1 51\\n2 52\\n0 52\\n1 52\\n2 53\\n0 53\\n1 53\\n2 54\\n0 54\\n1 54\\n2 55\\n0 55\\n1 55\\n2 56\\n0 56\\n1 56\\n2 57\\n0 57\\n1 57\\n2 58\\n"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 0, \"Wrong answer: 0\""
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == \"0\\n0\\n\" # Solution provided correctly\n"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == \"0\\n\"\n\nassert solution(\"3 4\\n0 1\\n1 2\\n2 3\\n0 2\") == \"3\\n\"\n\nassert solution(\"2 1\\n1 2\\n2 3\\n0 4\") == \"2\\n\"\n\nassert solution(\"1 0\\n0 3\\n3 4\\n4 5\") == \"5\\n\""
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == \"0\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3\\n-1 0\\n-1 1\\n0 1') == 0, \"Solution should return 0.\""
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output, f\"Test Case {sample_number + 1} failed\"\n"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == \"0\"\n\nfrom typing import List"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == \"0\\n\"\nassert solution(\"5 5\\n0 1\\n0 2\\n1 2\\n1 3\\n2 3\") == \"3\\n\"\nassert solution(\"1 2\\n-1 2\\n1 3\\n1 4\\n2 3\\n3 4\") == \"4\\n\"\nassert solution(\"2 3\\n-1 1\\n0 1\\n0 2\\n1 2\\n2 2\\n3 3\") == \"1\\n\"\nassert solution(\"1 2\\n0 1\\n0 2\\n1 2\\n1 3\\n2 3\\n2 4\\n3 4\\n3 5\\n4 5\") == \"4\\n\"\nassert solution(\"1 1\\n0 1\\n1 2\\n1 3\\n2 3\\n2 4\\n3 4\\n3 5\\n4 5\\n5 6\") == \"5\\n\""
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 3, \"The maximum number of rooms that can be protected with a single high-security door is not 3.\""
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4) == 6"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"6\"\n"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n9 6 2 4\") == \"6\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n9 6 2 4') == '6\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n9 6 2 4\") == \"6\\n\", \"Test case 1 failed\"\n\nassert solution(\"4\\n1 2 3 4\") == \"4\\n\", \"Test case 2 failed\"\n\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\", \"Test case 3 failed\"\n\nassert solution(\"4\\n1 2 3 4 5\") == \"5\\n\", \"Test case 4 failed\"\n\nassert solution(\"4\\n6 5 4 3 2 1\") == \"1\\n\", \"Test case 5 failed\""
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"6\""
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n9 6 2 4\") == \"6\"\n"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 6\n"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"6\\n\"\n"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n9 6 2 4\") == \"6\\n\"\nassert solution(\"5\\n99 88 77 66 55\") == \"16\\n\"\nassert solution(\"10\\n100 99 98 97 96 95 94 93 92 91 90 89 88 87 86 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1\") == \"16\\n\"\nassert solution(\"11\\n111 110 109 108 107 106 105 104 103 102 101 100 99 98 97 96 95 94 93 92 91 90 89 88 87 86 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1\") == \"16\\n\"\nassert solution(\"12\\n123 122 121 120 119 118 117 116 115 114 113 112 111 110 109 108 107 106 105 104 103 102 101 100 99 98 97 96 95 94 93 92 91 90 89 88 87 86 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Test case failed\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 1 1 3 2\\n2 5 1') == '2.000000'\nassert solution('2 5 1') == '2.000000'"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1 1 3 2\") == \"2.000000\\n\", \"The output should be '2.000000'\\n\"\nassert solution(\"2 5 1\") == \"1.000000\\n\", \"The output should be '1.000000'\\n\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1 1 3 2\\n2 5 1\") == \"2.000000\\n\"\n"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 2.0\nassert solution(5) == 2.0\nassert solution(2) == 2.0\nassert solution(1) == 1.0\nassert solution(3) == 1.0"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 1 1 3 2\\n2 5 1') == '2.000000'"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2.0\n"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2.000000\"\nprint(\"Test Passed\")\n"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1 1 3 2\\n2 5 1\") == \"2.000000\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == sample_output, f\"Your solution is incorrect. Please check the output and sample input provided.\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"96\"  # Correct Solution"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output, f\"Incorrect solution for the given problem. Expected: {sample_output}, Received: {solution(sample_input)}\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '96'\nprint('pass')"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected, f\"Your solution is {solution}, but the expected output is {expected}\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"96\", \"Test failed\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2\\n2 3\\n4\\n1 2\\n1 3\\n1 4\") == \"96\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"96\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2\\n2 3\\n4\\n1 2\\n1 3\\n1 4\") == \"96\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\") == \"204\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2\\n2 3\\n4\\n1 2\\n1 3\\n1 4\\n\") == \"96\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"96\", \"The given sample input is incorrect.\"\n\nclass TreeNode:\n    def __init__(self, val=0, left=None, right=None):\n        self.val = val\n        self.left = left\n        self.right = right"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n0 0\\n0 1\\n1 0\\n1 1') == '3\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('0 0\\n0 1\\n1 0\\n1 1') == '3'"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    4\n    0 0\n    0 1\n    1 0\n    1 1\n    \"\"\"\n) == \"3\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n0 0\\n0 1\\n1 0\\n1 1\\n') == '3\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\") == 3"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Output mismatch. Expected: {output()}, Actual: {solution(input())}\""
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '3'"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"Output one line with a single integer: The weight of a Minimum Spanning Tree that spans these N points.\"\n"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\") == \"3\"\nassert solution(\"0 0\\n0 1\\n1 0\\n1 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n101 102\\n102 103\\n103 104\\n104 105\\n105 106\\n106 107\\n107 108\\n108 109\\n109 110\\n110 111\\n111 112\\n112 113\\n113 114\\n114 115\\n115 116\\n116 117\\n117 118\\n118 119\\n119 120\\n120 121\\n121 122\\n122 123\\n123 124\\n124 125\\n125 126\\n126 127\\n127 128\\n128 129\\n129 130\\n130 131\\n131 132\\n132 133\\n13"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"mirkosolo.txt\", \"r\").read()) == \"10\\n10\\n9\\n\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 8\\n3 1\\n1 4\\n\") == \"10\\n10\\n9\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n2 8\\n3 1\\n1 4') == '10\\n10\\n9'"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n3 1\\n1 4\\n\") == \"10\\n10\\n9\\n\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 8\\n3 1\\n1 4\") == [\"10\", \"10\", \"9\"]\nassert solution(\"10 5\\n8 9\\n1 2\") == [\"5\", \"5\", \"4\"]\nassert solution(\"10 2\\n1 2\\n3 4\") == [\"10\", \"10\", \"6\"]\nassert solution(\"3 4\\n7 2\\n8 9\") == [\"14\", \"14\", \"12\"]\nassert solution(\"5 6\\n2 5\\n7 8\") == [\"18\", \"18\", \"17\"]"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 8\\n3 1\\n1 4\\n\") == \"10\\n10\\n9\\n\"\n"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n2 8\\n3 1\\n1 4') == '10\\n10\\n9\\n'\nassert solution('5\\n1 2\\n3 4\\n6 8\\n5 7') == '20\\n19\\n18\\n'\nassert solution('10\\n1\\n3\\n2\\n4') == '0\\n0\\n0\\n0\\n'\n"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n2 8\\n3 1\\n1 4\\n') == '10\\n10\\n9'\nassert solution('1\\n1\\n1\\n1\\n') == '1'\nassert solution('2\\n2\\n3\\n2\\n') == '1\\n2'\nassert solution('5\\n1 2\\n2 3\\n3 4\\n4 5\\n') == '10\\n12'"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 8\\n3 1\\n1 4\") == \"10\\n10\\n9\"\nassert solution(\"1 2\\n3 4\\n5 6\") == \"14\\n14\\n14\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"10\\n10\\n9\\n\""
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n4 4\n####\n"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"5 5\\n#...#\\n#...#\\n#...#\\n#..#\\n#..#\\n\") == \"IMPOSSIBLE\"\nassert solution(\"4 5\\n#...#\\n#...#\\n#...#\\n#..#\\n#..#\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\"\nassert solution(\"4 4\\n####\\n#JF#.\\n#..#\\n#..#\") == \"2\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#.."
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    4 4\n    ####\n    #JF#\n    #..#\n    \"\"\"\n) == \"3\\nIMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    ####\n    #..#\n    #...\n    \"\"\"\n) == \"4\\nIMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    ####\n    #JF#\n    #..#\n    \"\"\"\n) == \"3\\nIMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    ####\n    #JF#\n    #..#\n    ######\n    \"\"\"\n) == \"3\\nIMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    ####\n    #JF#\n    #..#\n    \"\"\"\n) == \"3\\nIMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    ####\n    #..#\n    #JF#\n    \"\"\"\n) == \"3\\nIMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    ####\n    #..#\n    #...\n    \"\"\"\n) == \"4\\nIMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    ####\n    #..#\n    #JF#\n    \"\"\"\n) == \"3\\nIMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    ####\n    #..#\n    #...\n    \"\"\"\n) == \"4\\nIMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    ####\n    #JF#\n    #..#\n    \"\"\"\n) == \"3\\nIMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    ####\n    #JF#\n    #..#\n    \"\"\"\n) == \"3\\nIMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    ####\n    #JF#\n    #..#\n    \"\"\"\n) == \"3\\nIMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    ####\n    #JF#\n    #..#\n    \"\"\"\n) == \"3\\nIMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    ####\n    #JF#\n    #..#\n    \"\"\"\n) == \"3\\nIMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    ####\n    #JF#\n    #..#\n    \"\"\"\n) == \"3\\nIMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    ####\n    #JF#\n    #..#\n    \"\"\"\n) == \"3\\nIMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    ####\n    #JF#\n    #..#\n    \"\"\"\n) == \"3\\nIMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    ####\n    #JF#\n    #..#\n    \"\"\"\n) == \"3\\nIMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    ####\n    #JF#\n    #..#\n    \"\"\"\n) == \"3\\nIMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    ####\n    #JF#\n    #..#\n    \"\"\"\n) == \"3\\nIMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    ####\n    #JF#\n    #..#\n    \"\"\"\n) == \"3\\nIMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    ####\n    #JF#\n    #..#\n    \"\"\"\n) == \"3\\nIMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    ####\n    #JF#\n    #..#\n    \"\"\"\n) == \"3\\nIMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    ####\n    #JF#\n    #..#\n    \"\"\"\n) == \"3\\nIMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    ####\n    #JF#\n    #..#\n    \"\"\"\n) == \"3\\nIMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    ####\n    #JF#\n    #..#\n    \"\"\"\n) == \"3\\nIMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    ####\n    #JF#\n    #..#\n    \"\"\"\n) == \"3\\nIMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    ####\n    #JF#\n    #..#\n    \"\"\"\n) == \"3\\nIMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    ####\n    #JF#\n    #..#\n    \"\"\"\n) == \"3\\nIMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    ####\n    #JF#\n    #..#\n    \"\"\"\n) == \"3\\nIMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 4\\n####\\n#JF#\\n#..#\\n#..#\\n') == '3'"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    4 4\n    ####\n    #JF#\n    #..#\n\"\"\"\n) == \"3\\n\"\nassert solution(\n    \"\"\"\n    5 5\n    #..#\n    #..#\n    #..#\n    #..#\n\"\"\"\n) == \"3\\n\"\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    #..#\n    #..#\n\"\"\"\n) == \"IMPOSSIBLE\\n\"\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    #..#\n    #..#\n\"\"\"\n) == \"IMPOSSIBLE\\n\"\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    #..#\n    #..#\n\"\"\"\n) == \"IMPOSSIBLE\\n\"\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    #..#\n    #..#\n\"\"\"\n) == \"IMPOSSIBLE\\n\"\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    #..#\n    #..#\n\"\"\"\n) == \"IMPOSSIBLE\\n\"\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    #..#\n    #..#\n\"\"\"\n) == \"IMPOSSIBLE\\n\"\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    #..#\n    #..#\n\"\"\"\n) == \"IMPOSSIBLE\\n\"\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    #..#\n    #..#\n\"\"\"\n) == \"IMPOSSIBLE\\n\"\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    #..#\n    #..#\n\"\"\"\n) == \"IMPOSSIBLE\\n\"\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    #..#\n    #..#\n\"\"\"\n) == \"IMPOSSIBLE\\n\"\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    #..#\n    #..#\n\"\"\"\n) == \"IMPOSSIBLE\\n\"\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    #..#\n    #..#\n\"\"\"\n) == \"IMPOSSIBLE\\n\"\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    #..#\n    #..#\n\"\"\"\n) == \"IMPOSSIBLE\\n\"\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    #..#\n    #..#\n\"\"\"\n) == \"IMPOSSIBLE\\n\"\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    #..#\n    #..#\n\"\"\"\n) == \"IMPOSSIBLE\\n\"\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    #..#\n    #..#\n\"\"\"\n) == \"IMPOSSIBLE\\n\"\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    #..#\n    #..#\n\"\"\"\n) == \"IMPOSSIBLE\\n\"\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    #..#\n    #..#\n\"\"\"\n) == \"IMPOSSIBLE\\n\"\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    #..#\n    #..#\n\"\"\"\n) == \"IMPOSSIBLE\\n\"\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    #..#\n    #..#\n\"\"\"\n) == \"IMPOSSIBLE\\n\"\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    #..#\n    #..#\n\"\"\"\n) == \"IMPOSSIBLE\\n\"\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    #..#\n    #..#\n\"\"\"\n) == \"IMPOSSIBLE\\n\"\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    #..#\n    #..#\n\"\"\"\n) == \"IMPOSSIBLE\\n\"\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    #..#\n    #..#\n\"\"\"\n) == \"IMPOSSIBLE\\n\"\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    #..#\n    #..#\n\"\"\"\n) == \"IMPOSSIBLE\\n\"\nassert solution(\n    \"\"\"\n    4 4\n   "
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"\"\"\n"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == output, f\"Error in solution: expected '{output}', got '{solution(input)}'\"\nprint(f\"Success: {success}\")"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == expected_output, f\"The output does not match the expected output. Expected: {expected_output}, Actual: {solution(stdin=input())}\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 0.3333333333"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\\n\") == 0.3333333333\n"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\\n\") == \"0.3333333333\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 2 2\\n2\\n1 1') == 0.3333333333\nassert solution('1 2 2\\n2\\n1 2') == 0.6666666667\nassert solution('1 2 2\\n2\\n1 3') == 0.0\nassert solution('1 2 2\\n2\\n2 1') == 1.0\nassert solution('1 2 2\\n2\\n2 2') == 1.0\nassert solution('1 2 2\\n2\\n2 3') == 0.0\nassert solution('1 2 2\\n2\\n3 1') == 0.0\nassert solution('1 2 2\\n2\\n3 2') == 0.0\nassert solution('1 2 2\\n2\\n3 3') == 0.0\nassert solution('1 2 2\\n2\\n4 1') == 0.0\nassert solution('1 2 2\\n2\\n4 2') == 0.0\nassert solution('1 2 2\\n2\\n4 3') == 0.0\nassert solution('1 2 2\\n2\\n4 4') == 0.0\nassert solution('1 2 2\\n2\\n5 1') == 0.0\nassert solution('1 2 2\\n2\\n5 2') == 0.0\nassert solution('1 2 2\\n2\\n5 3') == 0.0\nassert solution('1 2 2\\n2\\n5 4') == 0.0\nassert solution('1 2 2\\n2\\n5 5') == 0.0\nassert solution('1 2 2\\n2\\n6 1') == 0.0\nassert solution('1 2 2\\n2\\n6 2') == 0.0\nassert solution('1 2 2\\n2\\n6 3') == 0.0\nassert solution('1 2 2\\n2\\n6 4') == 0.0\nassert solution('1 2 2\\n2\\n6 5') == 0.0\nassert solution('1 2 2\\n2\\n6 6') == 0.0\nassert solution('1 2 2\\n2\\n6 7') == 0.0\nassert solution('1 2 2\\n2\\n6 8') == 0.0\nassert solution('1 2 2\\n2\\n6 9') == 0.0\nassert solution('1 2 2\\n2\\n6 10') == 0.0\nassert solution('1 2 2\\n2\\n6 11') == 0.0\nassert solution('1 2 2\\n2\\n6 12') == 0.0\nassert solution('1 2 2\\n2\\n6 13') == 0.0\nassert solution('1 2 2\\n2\\n6 14') == 0.0\nassert solution('1 2 2\\n2\\n6 15') == 0.0\nassert solution('1 2 2\\n2\\n6 16') == 0.0\nassert solution('1 2 2\\n2\\n6 17') == 0.0\nassert solution('1 2 2\\n2\\n6 18') == 0.0\nassert solution('1 2 2\\n2\\n6 19') == 0.0\nassert solution('1 2 2\\n2\\n6 20') == 0.0\nassert solution('1 2 2\\n2\\n6 21') == 0.0\nassert solution('1 2 2\\n2\\n6 22') == 0.0\nassert solution('1 2 2\\n2\\n6 23') == 0.0\nassert solution('1 2 2\\n2\\n6 24') == 0.0\nassert solution('1 2 2\\n2\\n6 25') == 0.0\nassert solution('"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\\n2\") == 0.3333333333333333\nassert solution(\"1 2 2\\n2\\n1 1\\n\") == 0.3333333333333333\nassert solution(\"1 2 2\\n2\\n1 1\\n3\") == 0.0"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\\n\") == \"0.3333333333\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\") == \"0.3333333333\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\\n\") == \"0.3333333333\\n\"\nassert solution(\"1 2 2\\n1\\n1 1\\n\") == \"0.0\\n\"\nassert solution(\"1 2 2\\n2\\n1 1\\n\") == \"0.0\\n\"\nassert solution(\"1 2 2\\n2\\n1 1\\n\") == \"0.0\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\\n\") == \"0.3333333333\\n\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\n1\") == \"1023\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1023\\n\"\n"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\n1\\n\") == \"1023\"\nassert solution(\"10\\n101\\n\") == \"1023\"\nassert solution(\"10\\n011\\n\") == \"1023\"\nassert solution(\"10\\n1001\\n\") == \"1023\"\nassert solution(\"10\\n10001\\n\") == \"1023\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(f\"10\\n1\") == \"1023\"\nassert solution(f\"10\\n0\") == \"0\"\nassert solution(f\"10\\n
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\n1\") == \"1023\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1023\"\n"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected '{sample_output}', got '{solution(sample_input)}'.\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1023\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected output: {sample_output}, got: {solution(sample_input)}\"\n"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == 1023"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 2') == '6\\n'"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n\") == \"6\\n\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"6\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '6\\n'\n\nprint(6)"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2, 2) == 6, \"Test Failed: Incorrect output\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 6, \"Incorrect output: expected 6, got {} instead\".format(solution())"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"6\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == 6, \"Test case 1 failed\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 2') == '6'\nprint('All tests passed')"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2) == \"6\\n\", \"Testcase 1\"\nassert solution(3) == \"12\\n\", \"Testcase 2\"\nassert solution(4) == \"12\\n\", \"Testcase 3\"\nassert solution(5) == \"12\\n\", \"Testcase 4\"\nassert solution(6) == \"12\\n\", \"Testcase 5\"\nassert solution(7) == \"12\\n\", \"Testcase 6\"\nassert solution(8) == \"12\\n\", \"Testcase 7\"\nassert solution(9) == \"12\\n\", \"Testcase 8\"\nassert solution(10) == \"12\\n\", \"Testcase 9\"\nassert solution(11) == \"12\\n\", \"Testcase 10\"\nassert solution(12) == \"12\\n\", \"Testcase 11\"\nassert solution(13) == \"12\\n\", \"Testcase 12\"\nassert solution(14) == \"12\\n\", \"Testcase 13\"\nassert solution(15) == \"12\\n\", \"Testcase 14\"\nassert solution(16) == \"12\\n\", \"Testcase 15\"\nassert solution(17) == \"12\\n\", \"Testcase 16\"\nassert solution(18) == \"12\\n\", \"Testcase 17\"\nassert solution(19) == \"12\\n\", \"Testcase 18\"\nassert solution(20) == \"12\\n\", \"Testcase 19\"\nassert solution(21) == \"12\\n\", \"Testcase 20\"\nassert solution(22) == \"12\\n\", \"Testcase 21\"\nassert solution(23) == \"12\\n\", \"Testcase 22\"\nassert solution(24) == \"12\\n\", \"Testcase 23\"\nassert solution(25) == \"12\\n\", \"Testcase 24\"\nassert solution(26) == \"12\\n\", \"Testcase 25\"\nassert solution(27) == \"12\\n\", \"Testcase 26\"\nassert solution(28) == \"12\\n\", \"Testcase 27\"\nassert solution(29) == \"12\\n\", \"Testcase 28\"\nassert solution(30) == \"12\\n\", \"Testcase 29\"\nassert solution(31) == \"12\\n\", \"Testcase 30\"\nassert solution(32) == \"12\\n\", \"Testcase 31\"\nassert solution(33) == \"12\\n\", \"Testcase 32\"\nassert solution(34) == \"12\\n\", \"Testcase 33\"\nassert solution(35) == \"12\\n\", \"Testcase 34\"\nassert solution(36) == \"12\\n\", \"Testcase 35\"\nassert solution(37) == \"12\\n\", \"Testcase 36\"\nassert solution(38) == \"12\\n\", \"Testcase 37\"\nassert solution(39) == \"12\\n\", \"Testcase 38\"\nassert solution(40) == \"12\\n\", \"Testcase 39\"\nassert solution(41) == \"12\\n\", \"Testcase 40\"\nassert solution(42) == \"12\\n\", \"Testcase 41\"\nassert solution(43) == \"12\\n\", \"Testcase 42\"\nassert solution(44) == \"12\\n\", \"Testcase 43\"\nassert solution(45) == \"12\\n\", \"Testcase 44\"\nassert solution(46) == \"12\\n\", \"Testcase 45\"\nassert solution(47) == \"12\\n\", \"Testcase 46\"\nassert solution(48) == \"12\\n\", \"Testcase 47\"\nassert solution(49) == \"12\\n\", \"Testcase 48\"\nassert solution(50) == \"12\\n\", \"Testcase 49\"\nassert solution(51) == \"12\\n\", \"Test"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500') == '2930'\nassert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500') == '2930'\nassert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500') == '2930'\nassert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500') == '2930'\nassert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500') == '2930'\nassert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500') == '2930'\nassert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500') == '2930'\nassert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500') == '2930'\nassert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500') == '2930'\nassert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n1000 2000 7\\n10"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case {sample_input} failed: {solution(sample_input)}\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2930\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r'1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500') == '2930\\n'\n\nassert solution(r'1000 2000 7\n4\n480\n500\n550\n1000\n1400\n1500') == 'Impossible\\n'"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"2930\\n\"\n\nimport math"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 2930, \"Your solution is incorrect. Please check the given code.\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '2930\\n'"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n\") == \"2930\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500') == '2930'\nassert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n1000 1000') == 'Impossible'"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2930\\n\", \"Please implement the solution function\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_string) == expected_output, f\"Test failed for input {input_string}, expected output {expected_output}, got {solution(input_string)}\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\\n\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\\n0\\n0\\n1\") == 2\n"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n1\\n1\") == \"1\"\nassert solution(\"1 2 3\\n0\\n2\\n1\") == \"2\"\nassert solution(\"1 2 3\\n1\\n0\\n1\") == \"1\"\nassert solution(\"1 2 3\\n1\\n0\\n2\") == \"2\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('0') == '0'\nassert solution('0 0 1') == '1'\nassert solution('1 2 3 4') == '2'\nassert solution('0 1 2 3 4') == '2'\nassert solution('1 2 3 4 5') == '2'"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 2"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"2\\n\"\n"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('1 2 3\\n0\\n0\\n1') == '2'\nassert solution('1 2 3\\n0\\n0\\n1\\n2 3') == '1'"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == '''\n10\n'''"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 10\nprint(\"All tests passed!\")"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n3 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2\n''') == '10'\nassert solution('''\n4 5\n1 -1 -1 1\n-1 1 1 -1\n-1 -1 1 1\n1 1 1 -1\n''') == '30'\nassert solution('''\n1 5\n-1 1\n1 1\n1 1\n-1 1\n''') == '10'"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '10', \"Test failed. Please fix the given code to pass the test.\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2') == '10\\n'"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\") == 10\nprint(\"Test Passed\")"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\") == 10, \"Expected output: 10, actual output: {}\".format(solution(\"3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\"))"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\") == \"10\\n\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\") == \"10\\n\"\nassert solution(\"1 1\\n0 0\\n0 0\\n0 0\\n0 0\") == \"0\\n\"\nassert solution(\"5 5\\n2 2\\n1 1\\n0 0\\n3 3\") == \"14\\n\"\nassert solution(\"6 6\\n-4 3 -3\\n-5 4 -4\\n-1 1 -1\\n1 2 1\\n2 2 2\\n2 3 1\\n3 3 2\\n3 3 2\\n3 4 3\\n4 4 3\\n4 4 4\") == \"71\\n\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    3 3\n    -5 2 -5\n    -1 -2 -1\n    5 4 -5\n    2 2\n''') == '10'\n\nprint('All tests passed')"
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '3100\\n'\n"
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_string) == expected_output, f\"Expected output: {expected_output}, but got {solution(input_string)}\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    5 3\n    1 2 1000\n    2 3 1000\n    4 5 500\n    2\n    \"\"\"\n) == \"3100\\n\"\n\nassert solution(\n    \"\"\"\n    5 3\n    1 2 1000\n    2 3 1000\n    4 5 500\n    3\n    \"\"\"\n) == \"3100\\n\"\n\nassert solution(\n    \"\"\"\n    5 3\n    1 2 1000\n    2 3 1000\n    4 5 500\n    1\n    1 4 300\n    3 5 300\n    \"\"\"\n) == \"3100\\n\"\n\nassert solution(\n    \"\"\"\n    5 3\n    1 2 1000\n    2 3 1000\n    4 5 500\n    2\n    1 4 300\n    1 5 300\n    \"\"\"\n) == \"3100\\n\"\n\nassert solution(\n    \"\"\"\n    5 3\n    1 2 1000\n    2 3 1000\n    4 5 500\n    3\n    1 4 300\n    3 5 300\n    \"\"\"\n) == \"3100\\n\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\"\n"
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"3100\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3100\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"Solution\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\\n\"\n"
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '3100'"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n0 1\") == \"0\\n\"\n"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 0, \"The function should return 0.\""
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n0 1\") == \"0\"\nassert solution(\"10 5\\n0 1 2 3 4\\n1 3 4 0 2\\n2 4 3 0 1\\n3 4 0 1 2\\n4 2 1 2 3\\n1 2 3 4 0\\n\") == \"10\"\nassert solution(\"3 3\\n0 1 2\\n1 2 0\\n2 0 1\\n\") == \"2\"\nassert solution(\"3 3\\n0 1 2\\n1 2 0\\n2 0 1\\n\") == \"3\"\nassert solution(\"3 3\\n0 1 2\\n1 2 0\\n2 0 1\\n\") == \"4\"\nassert solution(\"3 3\\n0 1 2\\n1 2 0\\n2 0 1\\n\") == \"5\"\nassert solution(\"3 3\\n0 1 2\\n1 2 0\\n2 0 1\\n\") == \"6\"\nassert solution(\"3 3\\n0 1 2\\n1 2 0\\n2 0 1\\n\") == \"7\"\nassert solution(\"3 3\\n0 1 2\\n1 2 0\\n2 0 1\\n\") == \"8\"\nassert solution(\"3 3\\n0 1 2\\n1 2 0\\n2 0 1\\n\") == \"9\"\nassert solution(\"3 3\\n0 1 2\\n1 2 0\\n2 0 1\\n\") == \"10\""
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\\n0 1\") == \"0\\n\""
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 1\\n0 1') == 0"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n0 1\\n\") == 0\nassert solution(\"3 3\\n0 1\\n1 2\\n1 0\\n2 2\\n2 0\\n3 2\\n3 0\\n\") == 6\nassert solution(\"4 5\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n0 3\\n1 4\\n2 5\\n3 4\\n4 3\\n5 2\\n5 0\\n\") == 12"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"2 1\\n0 1\\n\") == \"0\\n\"\n\nassert solution(stdin=\"2 2\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n\") == \"1\\n\"\n\nassert solution(stdin=\"2 1\\n1 2\\n0 2\\n\") == \"1\\n\"\n\nassert solution(stdin=\"3 4\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n0 6\\n0 7\\n0 8\\n0 9\\n0 10\\n0 11\\n0 12\\n0 13\\n0 14\\n0 15\\n0 16\\n0 17\\n0 18\\n0 19\\n0 20\\n0 21\\n0 22\\n0 23\\n0 24\\n0 25\\n0 26\\n0 27\\n0 28\\n0 29\\n0 30\\n0 31\\n0 32\\n0 33\\n0 34\\n0 35\\n0 36\\n0 37\\n0 38\\n0 39\\n0 40\\n0 41\\n0 42\\n0 43\\n0 44\\n0 45\\n0 46\\n0 47\\n0 48\\n0 49\\n0 50\\n0 51\\n0 52\\n0 53\\n0 54\\n0 55\\n0 56\\n0 57\\n0 58\\n0 59\\n0 60\\n0 61\\n0 62\\n0 63\\n0 64\\n0 65\\n0 66\\n0 67\\n0 68\\n0 69\\n0 70\\n0 71\\n0 72\\n0 73\\n0 74\\n0 75\\n0 76\\n0 77\\n0 78\\n0 79\\n0 80\\n0 81\\n0 82\\n0 83\\n0 84\\n0 85\\n0 86\\n0 87\\n0 88\\n0 89\\n0 90\\n0 91\\n0 92\\n0 93\\n0 94\\n0 95\\n0 96\\n0 97\\n0 98\\n0 99\\n0 100\\n0 101\\n0 102\\n0 103\\n0 104\\n0 105\\n0 106\\n0 107\\n0 108\\n0 109\\n0 110\\n0 111\\n0 112\\n0 113\\n0 114\\n0 115\\n0 116\\n0 117\\n0 118\\n0 119\\n0 120\\n0 121\\n0 122\\n0 123\\n0 124\\n0 125\\n0 126\\n0 127\\n0 128\\n0 129\\n0 130\\n0 131\\n0 132\\n0 133\\n0 134\\n0 135\\n0 136\\n0 137\\n0 138\\n0 139\\n0 140\\n0 141\\n0 142\\n0 143\\n0 144\\n0 145\\n0 146\\n0 147"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n0 1\\n\") == \"0\"\nassert solution(\"3 2\\n0 1\\n0 2\\n0 3\\n\") == \"2\"\nassert solution(\"2 3\\n1 2\\n1 3\\n2 3\\n\") == \"10\"\nassert solution(\"5 4\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 4\\n\") == \"16\"\nassert solution(\"2 1\\n0 1\\n2 0\\n\") == \"0\"\nassert solution(\"2 2\\n0 1\\n1 0\\n\") == \"0\"\nassert solution(\"5 4\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 4\\n6 5\\n\") == \"18\"\nassert solution(\"10 10\\n0 0\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n\") == \"160\"\nassert solution(\"2 1\\n0 1\\n1 0\\n\") == \"0\"\nassert solution(\"2 2\\n0 1\\n1 0\\n2 1\\n\") == \"0\"\nassert solution(\"5 4\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 4\\n6 5\\n7 6\\n8 7\\n9 8\\n10 9\\n11 10\\n12 11\\n13 12\\n14 13\\n15 14\\n16 15\\n17 16\\n18 17\\n19 18\\n20 19\\n21 20\\n22 21\\n23 22\\n24 23\\n25 24\\n26 25\\n27 26\\n28 27\\n29 28\\n30 29\\n31 30\\n32 31\\n33 32\\n34 33\\n35 34\\n36 35\\n37 36\\n38 37\\n39 38\\n40 39\\n41 40\\n42 41\\n43 42\\n44 43\\n45 44\\n46 45\\n47 46\\n48 47\\n49 48\\n50 49\\n51 50\\n52 51\\n53 52\\n54 53\\n55 54\\n56 55\\n57 56\\n58 57\\n59 58\\n60 59\\n61 60\\n62 61\\n63 62\\n64 63\\n65 64\\n66 65\\n67 66\\n68 67\\n69 68\\n70 69\\n71 70\\n72 71\\n73 72\\n74 73\\n75 74\\n76 75\\n77 76\\n78 77\\n79 78\\n80 79\\n81 80\\n82 81\\n83 82\\n84 83\\n85 84\\n86 85\\n87 86\\n88 87\\n89 88\\n90 89\\n91 90\\n92 91\\n93 92\\n94 93\\n95 94\\n96 95\\n97 96\\n98 9"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    2 1\n    0 1\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n    2 1\n    0 1\n    0 1\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n    3 2\n    0 1\n    1 0\n    2 1\n    0 1\n    1 0\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    3 2\n    0 1\n    1 0\n    2 1\n    0 1\n    1 0\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    3 3\n    0 1\n    1 0\n    2 1\n    0 1\n    1 0\n    0 1\n    1 0\n    2 1\n    0 1\n    1 0\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    3 3\n    0 1\n    1 0\n    2 1\n    0 1\n    1 0\n    0 1\n    1 0\n    2 1\n    0 1\n    1 0\n    0 1\n    1 0\n    \"\"\"\n) == \"2\\n\""
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(None) == \"Please input valid input\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 10\") == \"10\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"10\", \"Test case 1 failed\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 10\") == \"10\"\nassert solution(\"1 11\") == \"11\"\nassert solution(\"1 12\") == \"12\"\nassert solution(\"1 13\") == \"13\"\nassert solution(\"1 14\") == \"14\"\nassert solution(\"1 15\") == \"15\"\nassert solution(\"2 10\") == \"10\"\nassert solution(\"2 11\") == \"11\"\nassert solution(\"2 12\") == \"12\"\nassert solution(\"2 13\") == \"13\"\nassert solution(\"2 14\") == \"14\"\nassert solution(\"2 15\") == \"15\"\nassert solution(\"3 10\") == \"10\"\nassert solution(\"3 11\") == \"11\"\nassert solution(\"3 12\") == \"12\"\nassert solution(\"3 13\") == \"13\"\nassert solution(\"3 14\") == \"14\"\nassert solution(\"3 15\") == \"15\"\nassert solution(\"4 10\") == \"10\"\nassert solution(\"4 11\") == \"11\"\nassert solution(\"4 12\") == \"12\"\nassert solution(\"4 13\") == \"13\"\nassert solution(\"4 14\") == \"14\"\nassert solution(\"4 15\") == \"15\"\nassert solution(\"5 10\") == \"10\"\nassert solution(\"5 11\") == \"11\"\nassert solution(\"5 12\") == \"12\"\nassert solution(\"5 13\") == \"13\"\nassert solution(\"5 14\") == \"14\"\nassert solution(\"5 15\") == \"15\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 10, \"Expected 10, got {}\".format(solution())\nprint(\"All passed\")"
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"10\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"10\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 10') == '10\\n'"
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"10\\n\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin: str) == \"10\", \"Your code is missing the correct test case\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 10\") == \"10\"\nassert solution(\"1 100\") == \"50\"\nassert solution(\"1 1000000\") == \"10000\""
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\\n\") == \"0\\n\"\nassert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\\n2 0\\n\") == \"1\\n\"\nassert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\\n-20000 0\\n-20000 1000\\n-20000 20000\\n\") == \"2\\n\"\nassert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\\n-20000 0\\n-20000 1000\\n-20000 20000\\n-10000 -10000\\n\") == \"2\\n\""
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('0 0\\n1000 0\\n0 1000\\n1000 1000') == 0, \"Test case 0 failed\"\n\nassert solution('0 0\\n1000 0\\n0 1000\\n1000 1000\\n1000 500\\n500 500\\n500 1000\\n0 0') == 1, \"Test case 1 failed\"\n\nassert solution('0 0\\n1000 0\\n0 1000\\n1000 1000\\n1000 500\\n500 500\\n500 1000\\n0 0\\n500 0\\n0 500\\n500 500\\n0 1000\\n1000 1000\\n1000 500\\n500 500\\n500 1000\\n0 0\\n500 0\\n0 500\\n500 500\\n0 1000\\n1000 1000\\n1000 500\\n500 500\\n500 1000\\n0 0\\n500 0\\n0 500\\n500 500\\n0 1000\\n1000 1000\\n1000 500\\n500 500\\n500 1000\\n0 0\\n500 0\\n0 500\\n500 500\\n0 1000\\n1000 1000\\n1000 500\\n500 500\\n500 1000\\n0 0\\n500 0\\n0 500\\n500 500\\n0 1000\\n1000 1000\\n1000 500\\n500 500\\n500 1000\\n0 0\\n500 0\\n0 500\\n500 500\\n0 1000\\n1000 1000\\n1000 500\\n500 500\\n500 1000\\n0 0\\n500 0\\n0 500\\n500 500\\n0 1000\\n1000 1000\\n1000 500\\n500 500\\n500 1000\\n0 0\\n500 0\\n0 500\\n500 500\\n0 1000\\n1000 1000\\n1000 500\\n500 500\\n500 1000\\n0 0\\n500 0\\n0 500\\n500 500\\n0 1000\\n1000 1000\\n1000 500\\n500 500\\n500 1000\\n0 0\\n500 0\\n0 500\\n500 500\\n0 1000\\n1000 1000\\n1000 500\\n500 500\\n500 1000\\n0 0\\n500 0\\n0 500\\n500 500\\n0 1000\\n1000 1000\\n1000 500\\n500 500\\n500 1000"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '0\\n' # The given solution is correct."
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"0\\n\""
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 0, \"Your solution is not correct. Please review the provided code.\""
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0 0\\n1000 0\\n0 1000\\n1000 1000\") == \"0\\n\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\\n\") == 0, \"Expected 0, got {}\".format(solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\\n\"))"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 0, \"Test case 1 failed\""
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(f\"\"\"\n4\n0 0\n1000 0\n0 1000\n1000 1000\n\"\"\") == \"0\\n\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4\n0 0\n1000 0\n0 1000\n1000 1000\n\"\"\") == \"0\\n\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n0 1 0.5\\n\") == \"0.500000000 1.000000000\"\nassert solution(\"4 2\\n0 2 0.5\\n0 3 0.25\\n0 4 0.25\\n0 5 0.25\\n\") == \"0.666666667 0.750000000\"\nassert solution(\"2 4\\n0 0 0.5\\n0 1 0.25\\n0 2 0.25\\n0 3 0.25\\n\") == \"0.833333333 0.875000000\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\\n0 1 0.5\") == \"0.500000000 1.000000000\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\"\n"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 1\\n0 1 0.5\\n') == '0.500000000 1.000000000\\n'\n"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == output(), f\"Test failed. Expected: {output()}, got: {solution(stdin=input())}\"\n"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 1\\n0 1 0.5\\n') == '0.500000000 1.000000000'\nassert solution('2 1\\n0 1 0.0\\n0 2 0.5\\n0 3 0.1\\n0 4 0.1\\n0 5 0.3\\n') == '-1'\nassert solution('2 1\\n0 0 0.5\\n0 1 0.5\\n0 2 0.5\\n0 3 0.5\\n') == '-1'\nassert solution('2 1\\n0 1 0.0\\n0 2 0.5\\n0 3 0.1\\n0 4 0.1\\n0 5 0.3\\n') == '-1'\n"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n0 1 0.5\") == \"0.500000000 1.000000000\"\n"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"0.500000000 1.000000000\"\nassert solution(5) == \"0.500000000 1.000000000\"\nassert solution(7) == \"-1.000000000\"\nassert solution(8) == \"-1.000000000\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0.500000000 1.000000000\", \"Incorrect output\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"0.500000000 1.000000000\"\n"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"7\\n\", \"Solution should return '7'\"\n"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 7, \"The solution should return 7\"\nprint(\"All tests passed successfully\")"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\\n\"\nassert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\\n\") == \"7\\n\"\nassert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\\n9 8\\n\") == \"7\\n\""
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\\n\", \"Test failed\""
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == 7\n"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10') == '7'\n"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''6\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10''') == '7'"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"7\\n\"\nassert solution(input()) == \"12\\n\"\nassert solution(input()) == \"15\\n\"\nassert solution(input()) == \"1000\\n\"\nassert solution(input()) == \"1000\\n\"\nassert solution(input()) == \"2000\\n\""
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution.__doc__) == \"def solution(stdin: str) -> str:\\n    pass\\n\\nSolution:\\n    pass\\n\\nTest:\\n    pass\\n\""
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"7\\n\""
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\\n\") == \"\"\"\n9-b\n8-a\n"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0') == ['9-b', '8-a']"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\") == \"9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}\\nActual output: {solution(input())}\""
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 2, [(\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"b\", \"c\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\")]) == [9, 8, \"def\"]\nassert solution(3, 2, [(\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"b\", \"c\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\")]) == [9, 8, \"def\"]\nassert solution(3, 2, [(\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"b\", \"c\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\")]) == [9, 8, \"def\"]\nassert solution(3, 2, [(\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"b\", \"c\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\")]) == [9, 8, \"def\"]\nassert solution(3, 2, [(\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"b\", \"c\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\")]) == [9, 8, \"def\"]\nassert solution(3, 2, [(\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"b\", \"c\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\")]) == [9, 8, \"def\"]\nassert solution(3, 2, [(\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"b\", \"c\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\")]) == [9, 8, \"def\"]\nassert solution(3, 2, [(\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"b\", \"c\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\")]) == [9, 8, \"def\"]\nassert solution(3, 2, [(\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"b\", \"c\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\")]) == [9, 8, \"def\"]\nassert solution(3, 2, [(\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"b\", \"c\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\")]) == [9, 8, \"def\"]\nassert solution(3, 2, [(\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"b\", \"c\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\")]) == [9, 8, \"def\"]\nassert solution(3, 2, [(\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"b\", \"c\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\")]) == [9, 8, \"def\"]\nassert solution(3, 2, [(\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"a\", \"b\"), (\"b\", \"c\"), (\"a\","
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Expected output: {expected}\\nGot: {solution(input())}\""
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\") == \"9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case 1\\nprint(solution('a b'))  # Output: 9-b\\n\\n# Test case 2\\nprint(solution('a b c d e f g h i j k l m n o p q r s t u v w x y z'))  # Output: 9-b\\n\\n# Test case 3\\nprint(solution('a b c d e f g h i j k l m n o p q r s t u v w x y z a'))  # Output: 9-b\\n\\n# Test case 4\\nprint(solution('a b c d e f g h i j k l m n o p q r s t u v w x y z b'))  # Output: 9-b\\n\\n# Test case 5\\nprint(solution('a b c d e f g h i j k l m n o p q r s t u v w x y z c'))  # Output: 8-a\\n\\n# Test case 6\\nprint(solution('a b c d e f g h i j k l m n o p q r s t u v w x y z b c'))  # Output: 9-b\\n\\n# Test case 7\\nprint(solution('a b c d e f g h i j k l m n o p q r s t u v w x y z c a'))  # Output: 8-a\\n\\n# Test case 8\\nprint(solution('a b c d e f g h i j k l m n o p q r s t u v w x y z a a'))  # Output: 9-b\\n\\n# Test case 9\\nprint(solution('a b c d e f g h i j k l m n o p q r s t u v w x y z a b'))  # Output: 9-b\\n\\n# Test case 10\\nprint(solution('a b c d e f g h i j k l m n o p q r s t u v w x y z a b c'))  # Output: 9-b\\n\\n# Test case 11\\nprint(solution('a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d'))  # Output: 9-b\\n\\n# Test case 12\\nprint(solution('a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e'))  # Output: 9-b\\n\\n# Test case 13\\nprint(solution('a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f'))  # Output: 9-b\\n\\n# Test case 14\\nprint(solution('a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g'))  # Output: 9-b\\n\\n# Test case 15\\nprint(solution('a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h'))  # Output: 9-b\\n\\n# Test case 16\\nprint(solution('a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i'))  # Output: 9-b\\n\\n# Test case 17\\nprint(solution('a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h j'))  # Output: 9-b\\n\\n# Test case 18\\nprint(solution('a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h j k'))  # Output: 9-b\\n\\n# Test case"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\") == \"9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Unit Tests\\nprint(solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0')) # Expected Output: 9-b\\n8-a\""
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n2\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0\n''') == '''\n8-a\n9-b\n"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected_output, f\"Solution is incorrect. Expected: {expected_output}, Received: {solution}\""
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\necho\\n1\\nechoecho\") == \"3246R3246\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3246R3246\", \"Test failed\""
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\necho\\n1\\nechoecho\") == \"3246R3246\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '3246R3246', \"The solution is incorrect.\"\nassert solution(input()) == 'defRdef', \"The solution is incorrect.\"\nassert solution(input()) == 'A*mHR*X$3Y%6Z', \"The solution is incorrect.\"\nassert solution(input()) == 'abcdRabcd', \"The solution is incorrect.\"\n"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1\\n' + 'echo\\n' + '1\\n' + 'echo\\n') == '3246R3246\\n'"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n\"\n\"echo\\n\"\n\"1\\n\"\n\"echoecho\\n\") == \"3246R3246\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2echo\\n1echo\\n2echo\\n') == '3246R3246\\n'\nassert solution('echo\\necho\\n') == 'R\\nR\\n'\nassert solution('abc\\ndef\\nghi\\njlkl\\nmno\\npqrs\\ntuv\\nwxyz\\n') == '2R2R\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD(2)\\nU(2)\\nD("
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\necho\\n1\\nechoecho\") == \"3246R3246\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"1\\necho\\n1\\nechoecho\\n2\\nabc\\n3\\nxyz\\n4\\ndef\\n5\\nghijkl\\n6\\nmnopq\\n7\\npqrstu\\n8\\nwxyz\\n9\\nxzyx\\n10\\nyz10\") == \"3246R3246\\ndef solution(stdin: str) -> str:\\n    pass\\ndef abc(stdin: str) -> str:\\n    return \\\"abc\\\"\\ndef xyz(stdin: str) -> str:\\n    return \\\"xyz\\\"\\ndef def(stdin: str) -> str:\\n    return \\\"def\\\"\\ndef ghijkl(stdin: str) -> str:\\n    return \\\"ghi\\\"jkl\\\"\\ndef mnopqrs(stdin: str) -> str:\\n    return \\\"mno\\\"pqrs\\\"\\ndef tuvwxz(stdin: str) -> str:\\n    return \\\"tuv\\\"wxz\\\"\\ndef xzyx(stdin: str) -> str:\\n    return \\\"xyz\\\"\\ndef yz10(stdin: str) -> str:\\n    return \\\"y10\\\"\\ndef solution(stdin: str) -> str:\\n    pass\\ndef abc(stdin: str) -> str:\\n    return \\\"abc\\\"\\ndef xyz(stdin: str) -> str:\\n    return \\\"xyz\\\"\\ndef def(stdin: str) -> str:\\n    return \\\"def\\\"\\ndef ghijkl(stdin: str) -> str:\\n    return \\\"ghi\\\"jkl\\\"\\ndef mnopqrs(stdin: str) -> str:\\n    return \\\"mno\\\"pqrs\\\"\\ndef tuvwxz(stdin: str) -> str:\\n    return \\\"tuv\\\"wxz\\\"\\ndef xzyx(stdin: str) -> str:\\n    return \\\"xyz\\\"\\ndef yz10(stdin: str) -> str:\\n    return \\\"y10\\\"\""
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(b'1\\necho\\n1\\necho\\n') == '3246R3246\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '3246R3246', \"Your solution is incorrect.\"\n"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\") == \"YES\\n1 2\\n1 3\""
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 1') == 'YES\\n1 2\\n1 3'"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 1) == 'YES'"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 1) == 'YES\\n1 2\\n1 3\\n'\nassert solution(4, 2) == 'NO\\n'\nassert solution(5, 3) == 'NO\\n'\n"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3147.3, 1) == 'YES\\n1 2\\n1 3'"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'YES\\n1 2\\n1 3'\n"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 1) == 'YES\\n1 2\\n1 3'\n"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 1) == 'YES\\n1 2\\n1 3'\nassert solution(4, 2) == 'YES\\n2 3'\nassert solution(5, 3) == 'YES\\n3 3'\nassert solution(6, 4) == 'YES\\n3 4'\nassert solution(7, 5) == 'YES\\n4 5'\nassert solution(8, 6) == 'YES\\n4 5'\nassert solution(9, 7) == 'YES\\n5 6'\nassert solution(10, 8) == 'YES\\n5 7'\nassert solution(11, 9) == 'YES\\n6 8'\nassert solution(12, 10) == 'YES\\n6 9'\nassert solution(13, 11) == 'YES\\n7 10'\nassert solution(14, 12) == 'YES\\n7 11'\nassert solution(15, 13) == 'YES\\n8 12'\nassert solution(16, 14) == 'YES\\n8 13'\nassert solution(17, 15) == 'YES\\n9 14'\nassert solution(18, 16) == 'YES\\n9 15'\nassert solution(19, 17) == 'YES\\n10 16'\nassert solution(20, 18) == 'YES\\n10 17'\nassert solution(21, 19) == 'YES\\n11 18'\nassert solution(22, 20) == 'YES\\n11 19'\nassert solution(23, 21) == 'YES\\n12 20'\nassert solution(24, 22) == 'YES\\n12 21'\nassert solution(25, 23) == 'YES\\n13 22'\nassert solution(26, 24) == 'YES\\n13 23'\nassert solution(27, 25) == 'YES\\n14 24'\nassert solution(28, 26) == 'YES\\n14 25'\nassert solution(29, 27) == 'YES\\n15 26'\nassert solution(30, 28) == 'YES\\n15 27'\nassert solution(31, 29) == 'YES\\n16 28'\nassert solution(32, 30) == 'YES\\n16 29'\nassert solution(33, 31) == 'YES\\n17 30'\nassert solution(34, 32) == 'YES\\n17 31'\nassert solution(35, 33) == 'YES\\n18 32'\nassert solution(36, 34) == 'YES\\n18 33'\nassert solution(37, 35) == 'YES\\n19 34'\nassert solution(38, 36) == 'YES\\n19 35'\nassert solution(39, 37) == 'YES\\n20 36'\nassert solution(40, 38) == 'YES\\n20 37'\nassert solution(41, 39) == 'YES\\n21 38'\nassert solution(42, 40) == 'YES\\n21 39'\nassert solution(43, 41) == 'YES\\n22 40'\nassert solution(44, 42) == 'YES\\n22 41'\nassert solution(45, 43) == 'YES\\n23 42'\nassert solution(46, 44) == 'YES\\n23 43'\nassert solution(47, 45) == 'YES\\n24 44'\nassert solution(48, 46) == 'YES\\n24 45'\nassert solution(49, 47) == 'YES\\n25 46'\nassert solution(50, 48) == 'YES\\n25 47'\nassert solution(51, "
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 1) == 'YES\\n1 2\\n1 3'"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Test failed: {solution(input())}!= {output()}\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"176\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 176, \"Incorrect solution!\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"176\"\n"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n9\n1\n6 6\n333333\n300003\n300003\n300003\n300003\n333333\n''') == '176'\n\nassert solution('''\n6\n1\n3 3\n300003\n300003\n300003\n300003\n''') == '210'\n\nassert solution('''\n12\n1\n2 2\n300003\n300003\n300003\n300003\n''') == '420'\n\nassert solution('''\n1\n1\n3 3\n300003\n300003\n300003\n300003\n''') == '1'\n\nassert solution('''\n8\n1\n2 2\n3 3\n300003\n300003\n300003\n''') == '20'"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333') == '176'\nassert solution('10\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n300003\\n300003\\"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == 176\nprint(\"Test passed\")"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n') == '176\\n'"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"176\", \"Test failed\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == '''\n176\n'''"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"12\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == '12'\n"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == \"12\\n\"\n"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5) == \"12\"\nprint(\"Test passed!\")"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5) == '12'"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5') == '12\\n'"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == '12'\nassert solution(123456789) == '016'\nassert solution(999999999) == '999'\nassert solution(120) == '016'\nassert solution(12) == '016'"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i + 1} failed.\"\n"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == '12' # Example Input 5\nassert solution(10) == '1234' # Example Input 10\nassert solution(11) == '12345' # Example Input 11\nassert solution(12) == '123456' # Example Input 12\nassert solution(13) == '1234567' # Example Input 13\nassert solution(14) == '12345678' # Example Input 14\nassert solution(15) == '123456789' # Example Input 15\nassert solution(16) == '1234567890' # Example Input 16\nassert solution(17) == '12345678901' # Example Input 17\nassert solution(18) == '123456789012' # Example Input 18\nassert solution(19) == '1234567890123' # Example Input 19\nassert solution(20) == '12345678901234' # Example Input 20\nassert solution(21) == '123456789012345' # Example Input 21\nassert solution(22) == '1234567890123456' # Example Input 22\nassert solution(23) == '12345678901234567' # Example Input 23\nassert solution(24) == '123456789012345678' # Example Input 24\nassert solution(25) == '1234567890123456789' # Example Input 25\nassert solution(26) == '12345678901234567890' # Example Input 26\nassert solution(27) == '123456789012345678901' # Example Input 27\nassert solution(28) == '1234567890123456789012' # Example Input 28\nassert solution(29) == '12345678901234567890123' # Example Input 29\nassert solution(30) == '123456789012345678901234' # Example Input 30\nassert solution(31) == '1234567890123456789012345' # Example Input 31\nassert solution(32) == '12345678901234567890123456' # Example Input 32\nassert solution(33) == '123456789012345678901234567' # Example Input 33\nassert solution(34) == '1234567890123456789012345678' # Example Input 34\nassert solution(35) == '12345678901234567890123456789' # Example Input 35\nassert solution(36) == '123456789012345678901234567890' # Example Input 36\nassert solution(37) == '1234567890123456789012345678901' # Example Input 37\nassert solution(38) == '12345678901234567890123456789012' # Example Input 38\nassert solution(39) == '1234567890123456"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5) == \"12\""
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 480"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == '480'\nassert solution(sample_input) == '480'"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(b\"(()())\") == 480\nassert solution(b\"(()())(())\") == 720\nassert solution(b\"(()())((())\") == 248\nassert solution(b\"(()())(())(()\")) == 248\nassert solution(b\"(())()()()\") == 0\nassert solution(b\"(())()()(()))\") == 248\nassert solution(b\"(())()()((()))\") == 248\nassert solution(b\"(()())(())(()())\") == 248\nassert solution(b\"(()())(())()(()\")) == 248\nassert solution(b\"(()())(())()(())\") == 248\nassert solution(b\"(()())(())(())(())\") == 248\nassert solution(b\"(()())(())(()())(()))\") == 248\nassert solution(b\"(()())(())()(()))\") == 248\nassert solution(b\"(()())(())(())()(()))\") == 248\nassert solution(b\"(()())(())(())(())(())\") == 248\nassert solution(b\"(()())(())(())(()()))\") == 248\nassert solution(b\"(()())(())(())()(())\") == 248\nassert solution(b\"(())()()()(()))\") == 248\nassert solution(b\"(())()()()(())\") == 248\nassert solution(b\"(())()()()())\") == 248\nassert solution(b\"(()())(())(())()()(()))\") == 248\nassert solution(b\"(())()()()())\") == 248\nassert solution(b\"(())()()(())(())\") == 248\nassert solution(b\"(())()()(())(()))\") == 248\nassert solution(b\"(())()()()())\") == 248\nassert solution(b\"(())()()(())(())\") == 248\nassert solution(b\"(())()()(())(()))\") == 248\nassert solution(b\"(())()()()())\") == 248\nassert solution(b\"(())()()(())(())\") == 248\nassert solution(b\"(())()()(())(()))\") == 248\nassert solution(b\"(())()()()())\") == 248\nassert solution(b\"(())()()(())(())\") == 248\nassert solution(b\"(())()()(())(()))\") == 248\nassert solution(b\"(())()()()())\") == 248\nassert solution(b\"(())()()(())(())\") == 248\nassert solution(b\"(())()()(())(()))\") == 248\nassert solution(b\"(())()()()())\") == 248\nassert solution(b\"(())()()(())(())\") == 248\nassert solution(b\"(())()()(())(()))\") == 248\nassert solution(b\"(())()()()())\") == 248\nassert solution(b\"(())()()(())(())\") == 248\nassert solution(b\"(())()()(())(()))\") == 248\nassert solution(b\"(())()()()())\") == 248\nassert solution(b\"(())()()(())(())\") == 248\nassert solution(b\"(())()()(())(()))\") == 248\nassert solution(b\"(())()()()())\") == 248\nassert solution(b\"(())()()(())(())\") == 248\nassert solution(b\"(())()()(())(()))\") == 248\nassert solution(b\"(())()()()())\") == 248\nassert solution(b\"(())()()(())(())\") == 248\nassert solution(b\"(())()()(())(()))\") == 248\nassert solution(b\"(())()()()())\") == 248\nassert solution(b\"(())()()(())(())\") == 248\nassert solution(b\"(())()()(())(()))\") == 248\nassert solution(b\"(())()()()())\") == 248\nassert solution(b\"(())()()(())(())\") == 248\nassert solution(b\"(())()()(())(()))\") == 248\nassert solution(b\"(())()()()())\") == 248\nassert solution(b\"(())()()(())(())\") == 248\nassert solution(b\"(())()()(())"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 480, \"Expected 480 but got {}\".format(solution())  # Correct output"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}, but got {solution(input())}.\""
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 1\\(((()480617-570928)\\n') == 480\nassert solution('4 1\\(((()480617-570928)\\n') == 480\nassert solution('4 1\\(((()480617-570928)\\n') == 480\nassert solution('4 1\\(((()480617-570928)\\n') == 480\nassert solution('4 1\\(((()480617-570928)\\n') == 480\nassert solution('4 1\\(((()480617-570928)\\n') == 480\nassert solution('4 1\\(((()480617-570928)\\n') == 480\nassert solution('4 1\\(((()480617-570928)\\n') == 480\nassert solution('4 1\\(((()480617-570928)\\n') == 480\nassert solution('4 1\\(((()480617-570928)\\n') == 480\nassert solution('4 1\\(((()480617-570928)\\n') == 480\nassert solution('4 1\\(((()480617-570928)\\n') == 480\nassert solution('4 1\\(((()480617-570928)\\n') == 480\nassert solution('4 1\\(((()480617-570928)\\n') == 480\nassert solution('4 1\\(((()480617-570928)\\n') == 480\nassert solution('4 1\\(((()480617-570928)\\n') == 480\nassert solution('4 1\\(((()480617-570928)\\n') == 480\nassert solution('4 1\\(((()480617-570928)\\n') == 480\nassert solution('4 1\\(((()480617-570928)\\n') == 480\nassert solution('4 1\\(((()480617-570928)\\n') == 480\nassert solution('4 1\\(((()480617-570928)\\n') == 480\nassert solution('4 1\\(((()480617-570928)\\n') == 480\nassert solution('4 1\\(((()480617-570928)\\n') == 480\nassert solution('4 1\\(((()480617-570928)\\n') == 480\nassert solution('4 1\\(((()480617-570928)\\n') == 480\nassert solution('4 1\\(((()480617-570928)\\n') == 480\nassert solution('4 1\\(((()480617-570928)\\n') == 480\nassert solution('4 1\\(((()480617-570928)\\n') == 480\nassert solution('4 1\\(((()480617-570928)\\n') == 480\nassert solution('4 1\\(((()480617-570928)\\n') == 480\nassert solution('4 1\\(((()480617-570928)\\n') == 480\nassert solution('4 1\\(((()480617-570928)\\n') == 480\nassert solution('4 1\\(((()480617-570928)\\n') == 480\nassert solution('"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test failed\"\nfor i in range(input()):\n    n = input()\n    k = input()\n    sequence = list(input())\n    cost = list(map(int, input().split()))\n\n    # Perform operations on the sequence\n    for i in range(k):\n        if sequence[i] == '(':\n            sequence[i] = ')'\n        elif sequence[i] == ')':\n            sequence[i] = '('\n\n    # Check if the sequence is balanced\n    is_balanced = True\n    for i in range(1, len(sequence)):\n        if sequence[i - 1] == '(':\n            if sequence[i] == ')':\n                is_balanced = False\n                break\n        elif sequence[i] == ')':\n            if sequence[i - 1] == '(':\n                is_balanced = False\n                break\n\n    # Calculate the minimum sum of effort\n    min_effort = 0\n    for i in range(len(sequence)):\n        if sequence[i] == '(':\n            min_effort += cost[i]\n\n    if is_balanced:\n        print(f\"{min_effort}\")\n    else:\n        print(\"?\")"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''4 1\n(())\n480\n617\n-570\n928''') == 480\n\nprint(\"Barry and Bruce are twin brothers.\")\nprint(\"Bruce likes keeping his parenthetical sequences balanced.\")\nprint(\"Barry would like to mess with Bruce by performing some operations on the sequence.\")\nprint(\"Each operation is one of the following:\")\nprint(\" - Change a single '('to a ')'.\")\nprint(\" - Change a single ')' to a '( '.\")\n\nprint(\"Bruce will attempt to rebalance the parenthetical sequence by performing the same operations.\")\nprint(\"Bruce does not like tedium and will perform no more than $k$ operations to balance the sequence.\")\nprint(\"A balanced parenthetical sequence is defined as:\")\nprint(\" - The empty string\")\nprint(\" - AB where A and B are both balanced parenthetical sequences\")\nprint(\" - (A) where A is a balanced parenthetical sequence\")\n\nprint(\"Barry would like to disrupt the sequence to the point where it is impossible for Bruce to rebalance the sequence in $k$ moves.\")\nprint(\"Changing some position in the sequence requires effort and the amount of effort varies by position.\")\nprint(\"Some positions are even delightful to switch and require negative effort.\")\nprint(\"Each position can be changed at most once.\")\n\nprint(\"Barry hates effort and would like to compute the minimum sum of effort to ensure that Bruce cannot balance the sequence.\")\n\nprint(\"-----Input-----\")\nprint(\"Each input will consist of a single test case.\")\nprint(\"Note that your program may be run multiple times on different inputs.\")\nprint(\"The first line of input will contain two integers n and k, where n is the length of the sequence, and k is the maximum number of moves for Bruce.\")\nprint(\"The next line contains a single string of length n consisting of only the characters '()'. This string is NOT required to be balanced.\")\nprint(\"The next n lines will each contain a single integer c, which is the cost of changing each parenthesis in order.\")\n\nprint(\"-----Output-----\")\nprint(\"Output a single integer, which is the minimum sum of effort of moves required to make the string impossible to be balanced by Bruce. If Bruce can always rebalance the string regardless of Barry's actions, print a single question mark?\")"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 1\\n((()480617-570928)') == 480\nassert solution('4 3\\n(()(()()))') == 0\nassert solution('3 2\\n(())(())') == 0\nassert solution('2 3\\n(())((()))') == 0\nassert solution('1 1\\n(())') == '?'\nassert solution('5 1\\n(())(()())') == '?'"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == 480"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\"\nassert solution(\"13\\n2 1 2 2\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\") == \"None\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n13\n2 2 4\n3 1 3 5\n2 2 4\n3 1 3 6\n2 2 6\n2 4 5\n2 8 9\n2 7 9\n2 7 8\n2 11 13\n2 10 12\n2 11 13\n2 10 12\n''') == '2 4\\n5 6\\n7 8 9 10 11 12 13'\nassert solution('''\n12\n1 1 2 3 4\n5 6\n7 8 9\n10 11 12 13\n1 2 3\n4 5 6\n7 8 9\n''') == ''\nassert solution('''\n13\n1 1 2 3 4\n5 6\n7 8 9\n10 11 12 13\n1 2 3 4\n4 5 6\n7 8 9\n''') == '1 2 3 4'\nassert solution('''\n10\n1 1 2 3 4\n5 6\n7 8 9\n10 11 12 13\n1 2 3\n4 5 6\n7 8 9\n''') == ''\nassert solution('''\n10\n1 1 2 3 4\n5 6\n7 8 9\n10 11 12 13\n1 2 3 4\n4 5 6\n7 8 9\n''') == '1 2 3 4'"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2 4\\n5 6\\n7 8 9 10 11 12 13\", \"Output does not match expected output\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\"\nassert solution(\"13\\n2 2 4\\n2 2 4\\n3 1 3 5\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n\") == \"None\"\nassert solution(\"13\\n2 2 4\\n3 1 3 5\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\"\nassert solution(\"13\\n2 2 4\\n2 2 4\\n3 1 3 5\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n\") == \"None\"\n"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2 4\\n5 6\\n7 8 9 10 11 12 13\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\"\nassert solution(\"5\\n3\\n3 4 5\\n4 4 3\\n2 2 4\\n2 3 3\\n2 2 4\\n3 4 5\\n4 4 3\\n3 4 5\\n4 4 3\\n4 4 3\") == \"4\"\nassert solution(\"4\\n3 4 5\\n3 4 5\\n3 4 5\\n3 4 5\") == \"none\"\nassert solution(\"1\\n1\") == \"none\"\nassert solution(\"1\") == \"none\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"none\"\nassert solution(\"10\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\") == \"none\"\nassert solution(\"10\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\") == \"none\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nprint('2 4')\"\n"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\\n\"\nassert solution(\"13\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n2 2 4\\n"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == '35 39 36 27 29\\n'"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2') == '35 39 36 27 29\\n'\nprint('All tests passed!')"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2') == '35 39 36 27 29'\n"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(None) == \"Input Error: Please provide valid input.\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2') == '35 39 36 27 29'"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2') == '35 39 36 27 29\\n'"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2') == '35 39 36 27 29'"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"\"\"35 39 36 27 29\"\"\"\n"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\"\n) == \"35 39 36 27 29\\n\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Received: {solution(input())}\""
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3\\n3 2 1\\n') == '0 672\\ndef solution(stdin: str) -> str:\n    n, m = map(int, stdin.split())\n    b = [int(x) for x in input().split()]\n    r = [int(x) for x in input().split()]\n    if b[0] + b[-1] + r[0] + r[-1]!= m:\n        return \"Invalid Picture\"\n    def backtrack(curr):\n        res = []\n        for i in range(1, len(b) + 1):\n            if i not in curr:\n                for j in range(i + r[curr[-1]]):\n                    if j not in curr:\n                        if j <= b[curr[-1]]:\n                            if j + i <= b[-1]:\n                                if j + i + i <= b[-1]:\n                                    res.append(curr + [j])\n                                    curr.append(j)\n                                    backtrack(curr)\n                                    curr.pop()\n                                    curr[-1] = j\n                                    res[-1] = curr + [j]\n                                else:\n                                    curr.pop()\n                            else:\n                                if j + i <= b[-1]:\n                                    res.append(curr + [j])\n                                    curr.append(j)\n                                    backtrack(curr)\n                                    curr.pop()\n                                    curr[-1] = j\n                                    res[-1] = curr + [j]\n                                else:\n                                    curr.pop()\n                                res.append(curr + [j])\n                                curr.append(j)\n                                backtrack(curr)\n                                curr.pop()\n                                curr[-1] = j\n                                res[-1] = curr + [j]\n                else:\n                    res.append(curr + [i])\n                    curr.append(i)\n                    backtrack(curr)\n                    curr.pop()\n                    curr[-1] = i\n                    res[-1] = curr + [i]\n        return res\n    return backtrack([])"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3\\n3 2 1') == 0\nassert solution('3 3\\n3 2 1\\n3 1 1') == 672\n\nfrom functools import reduce"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n3 2 1\\n\") == \"0 672\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"2 3\\n2 2 1\\n\") == \"0 125\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3\\n3 2 1\\n') == '0 672\\n'\nassert solution('3 2 1\\n') == '0 672\\n'\nassert solution('2 3 4 5 6\\n') == '0 672\\n'\nassert solution('2 2 2 2 2\\n') == '0 672\\n'\nassert solution('1 1 1 1 1\\n') == '0 672\\n'\n"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n3 2 1\") == \"0 672\""
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n3 2 1\") == \"0 672\""
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n3 2 1\") == \"0 672\\n\"\nassert solution(\"5 6\\n2 3 1 4\") == \"0 1145\\n\"\nassert solution(\"7 8\\n3 4 1 5\") == \"0 1347\\n\"\nassert solution(\"2 4\\n3 2 1\") == \"0 262\\n\"\nassert solution(\"5 4\\n1 2 3 4\") == \"0 427\\n\"\nassert solution(\"2 5\\n1 2 3 4 5\") == \"0 554\\n\"\n"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3\\n3 2 1') == '0 672\\n'\nassert solution('1 3\\n3 2 1') == '0 672\\n'\nassert solution('5 5\\n1 2 3 4 5') == '10 551\\n'\nassert solution('6 5\\n1 1 1 1 1') == '24 649\\n'\nassert solution('10 5\\n1 1 1 1 1') == '24 649\\n'"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 3) == (0, 672)\nassert solution(3, 2, 1) == (1, 670)\nassert solution(3, 5, 5, 1) == (5, 1870)\nassert solution(4, 4) == (50, 1580)"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3\\n3 2 1') == '0 672\\ndef solution(stdin: str) -> str:\\n    pass'\n\nprint(solution('3 3\\n3 2 1'))"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50') == 2.5\nassert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 1 18\\n2 40 50') == Impossible\nassert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50') == 2.5\nassert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n3 2 18') == 2.5\nassert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n3 2 18\\n4 2 18') == 2.5\nassert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n3 2 18\\n4 2 18\\n5 2 18') == Impossible\nassert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n3 2 18\\n4 2 18\\n5 2 18\\n6 2 18') == Impossible\nassert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n3 2 18\\n4 2 18\\n5 2 18\\n6 2 18\\n7 2 18') == 2.5\nassert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n3 2 18\\n4 2 18\\n5 2 18\\n6 2 18\\n7 2 18\\n8 2 18') == 2.5\nassert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n3 2 18\\n4 2 18\\n5 2 18\\n6 2 18\\n7 2 18\\n8 2 18\\n9 2 18') == 2.5\nassert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n3 2 18\\n4 2 18\\n5 2 18\\n6 2 18\\n7 2 18\\n8 2 18\\n9 2 18\\nA') == 2.5\nassert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n3 2 18\\n4 2 18\\n5 2 18\\n6 2 18\\n7 2"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50') == '2.500000\\nImpossible'"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == \"2.500000\\nImpossible\"\nassert solution(\"5 100 500\") == \"1.000000\\nImpossible\"\nassert solution(\"4 100 1000\") == \"3.000000\\nImpossible\"\nassert solution(\"4 100 2000\") == \"Impossible\"\nassert solution(\"2 100 1000\") == \"1.500000\\nImpossible\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n') == '2.500000\\n'\nassert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n\\n\\n\\n') == 'Impossible\\n'\nassert solution('100 1000000\\n') == 'Impossible\\n'"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n4 5 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n''') == '2.500000\\n'"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2.500000\\n\"\n"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n\") == \"2.500000\\nImpossible\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '2.500000', 'Expected output: \"2.500000\", actual output: {}'.format(solution(input()))"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2.500000\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == '2.500000', \"Expected '2.500000', but got '{}'\".format(solution(stdin=input()))"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"3\\n\""
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == '3'\nassert solution(5) == '3'\nassert solution(6) == '4'\nassert solution(7) == '6'\nassert solution(10) == '8'"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([3]) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution([5, 3, 4]) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution([5, 3, 4, 2]) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution([5, 3, 4, 2, 1]) == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n5 3 4\") == \"3\\n3\"\nassert solution(\"4\\n3 2 1\") == \"2\\n2\"\nassert solution(\"5\\n3 2 1\") == \"1\\n1\""
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n5 3 4') == '3\\n'"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '3'\n"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n5 3 4\") == 3\n"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 3\n"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n5 3 4\") == \"3\""
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3\\n\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 2\n"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    2 1 1\n    \"\"\"\n) == \"2\\n\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == 2"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='2 1 1') == '2\\n'\nassert solution(stdin='2 3 2') == '3\\n'\nassert solution(stdin='1000000000 1000000000 1000000000') == '1000000001\\n'"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == \"2\\n\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1 1\") == \"2\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"10000000000\\n\"\nassert solution(stdin) == \"3\\n\"\nassert solution(stdin) == \"1000000000000000\\n\"\nassert solution(stdin) == \"4\\n\"\nassert solution(stdin) == \"1000000000000000000000\\n\"\nassert solution(stdin) == \"5\\n\"\nassert solution(stdin) == \"1000000000000000000000000\\n\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1 1\") == 2\nassert solution(\"5 1 1\") == 1\nassert solution(\"3 2 1\") == 2\nassert solution(\"4 3 1\") == 3\nassert solution(\"10 2 2\") == 6"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 3 5\") == \"7\""
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"7\"\n"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"7\"\n"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"7\""
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"7\\n\", \"Test case 1\"\nassert solution(input()) == \"5\\n\", \"Test case 2\"\nassert solution(input()) == \"42\\n\", \"Test case 3\"\nassert solution(input()) == \"94\\n\", \"Test case 4\"\nassert solution(input()) == \"15897\\n\", \"Test case 5\""
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"7\", \"Incorrect output. Expected '7', got: {}\".format(solution(stdin))"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"7\"\n"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"7\""
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 3 5\\n\") == \"7\\n\"\n"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 3 5\") == \"7\\n\", \"Your solution should return 7\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets') == 'fred jetsons\\njohn jets\\nruth rockets\\nImpossible.'"
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\") == \"fred jetsons\\njohn jets\\nruth rockets\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Output mismatch for test case {test_case_num}\" for test_case_num, (stdin, expected_output) in enumerate(zip(input_data, expected_outputs)):\n    solution(stdin)"
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution\n\nfrom typing import List"
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets') == 'fred jetsons\\njohn jets\\nruth rockets\\nImpossible.'\n\nassert solution('1\\n1\\ncat 1 chickens') == 'cat 1 chickens'\n\nassert solution('2\\n1\\napple 1 bananas\\nbanana 1 apples') == 'apple 1 bananas\\nbanana 1 apples'\n\nassert solution('1\\n1\\napple 1 bananas\\nbanana 1 apples') == 'apple 1 bananas\\nbanana 1 apples'\n\nassert solution('1\\n2\\napple 1 bananas\\nbanana 1 apples\\norange 1 pineapples') == 'apple 1 bananas\\nbanana 1 apples\\norange 1 pineapples'\n\nassert solution('1\\n3\\napple 1 bananas\\nbanana 1 apples\\norange 1 pineapples\\ngrape 1 plums') == 'apple 1 bananas\\nbanana 1 apples\\norange 1 pineapples\\ngrape 1 plums'\n\nassert solution('1\\n4\\napple 1 bananas\\nbanana 1 apples\\norange 1 pineapples\\ngrape 1 plums\\nfig 1 bananas') == 'apple 1 bananas\\nbanana 1 apples\\norange 1 pineapples\\ngrape 1 plums\\nfig 1 bananas'\n\nassert solution('2\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n') == 'fred jetsons\\njohn jets\\nruth rockets\\nImpossible.'"
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(None) == \"Impossible.\\n\"\nassert solution(\"\") == \"Impossible.\\n\"\nassert solution(\"2\\n\") == \"Impossible.\\n\"\nassert solution(\"1\\njohn\\n2\\n\") == \"Impossible.\\n\"\nassert solution(\"1\\nfred\\n2\\n\") == \"Impossible.\\n\"\nassert solution(\"2\\nfred\\n2\\n\") == \"fred jetsons\\n\"\nassert solution(\"4\\nfred\\n2\\n\") == \"fred jetsons\\n\"\nassert solution(\"2\\njohn\\n2\\n\") == \"john jets\\n\"\nassert solution(\"1\\nruth\\n1\\n\") == \"ruth rockets\\n\"\nassert solution(\"4\\nruth\\n1\\n\") == \"ruth rockets\\n\"\nassert solution(\"2\\nruth\\n1\\n\") == \"ruth rockets\\n\"\nassert solution(\"2\\njohn\\n2\\n\") == \"john jets\\n\"\nassert solution(\"1\\nruth\\n1\\n\") == \"ruth rockets\\n\"\nassert solution(\"4\\nruth\\n1\\n\") == \"ruth rockets\\n\"\nassert solution(\"2\\nruth\\n1\\n\") == \"ruth rockets\\n\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"fred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\") == \"fred jetsons\\njohn jets\\nruth rockets\"\nassert solution(\"fred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n1\") == \"Impossible.\"\nassert solution(\"fred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n2\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\") == \"Impossible.\"\nassert solution(\"fred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n3\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\") == \"Impossible.\"\nassert solution(\"fred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n5\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\") == \"Impossible.\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\") == \"fred jetsons\\njohn jets\\nruth rockets\\nImpossible.\"\nassert solution(\"2\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinoc"
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"fred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\n\") == \"fred jetsons\\njohn jets\\nruth rockets\\nImpossible.\"\n\nassert solution(\"fred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n5\\n\") == \"Impossible.\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n\") == \"fred jetsons\\njohn jets\\nruth rockets\\nImpossible.\"\nassert solution(\"2\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nImpossible.\\nImpossible.\\nImpossible.\\n\") == \"Impossible.\"\n"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1 2 1\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"3\\n4 3\\n-10 9\\n-2 3\"\n) == \"1 2 1\"\n"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n3\n4 3\n-10 9\n-2 3\n''') == '1 2 1'\n\nassert solution('''\n4\n5 3\n-10 9\n-2 3\n-1 3\n''') == '1 2 1 1'\n\nassert solution('''\n2\n5 3\n-10 9\n-2 3\n''') == '1 2'\n\nassert solution('''\n10\n10 10\n-10 9\n-2 3\n-1 3\n''') == '1 2 3 1 1'"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"1 2 1\"\nassert solution(10) == \"1 2 2\"\nassert solution(100) == \"1 2 3\"\nassert solution(1000) == \"1 2 4\"\nassert solution(1001) == \"2 2 2\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4 3\\n-10 9\\n-2 3\") == \"1 2 1\"\nassert solution(\"3\\n4 3\\n-10 9\\n-2 3\") == \"1 2 1\"\nassert solution(\"3\\n4 3\\n-10 9\\n-2 3\") == \"1 2 1\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n4 3\\n-10 9\\n-2 3') == ['1', '2', '1']"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == [1, 2, 1]"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n4 3\\n-10 9\\n-2 3\") == \"1 2 1\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n3\\n-10 9\\n-2 3\") == \"1 2 1\"\nassert solution(\"5\\n2\\n-2 4\\n-1 3\\n-5 6\") == \"1 1 1 1 1\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n4 3\\n-10 9\\n-2 3\\n') == '1 2 1'"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n\") == \"2.125\\n\""
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2.125\", \"The expected output is not as expected.\""
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\") == \"2.125\"\n"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\") == \"2.125\\n\"\n"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    4\n    1 1 7\n    3 2 3\n    5 1 4\n    6 10 10\n    ''') == '2.125'"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '2.125\\n', \"Your solution is incorrect.\""
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '2.125\\n', 'Expected output is incorrect.'\n"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\") == \"2.125\\n\""
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 2.125, \"Incorrect Solution\""
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\") == \"2.125\\n\"\nassert solution(\"5\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\") == \"3.333333333333333\\n\""
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, but got: {solution(input())}\"\n"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"main.c\\na.out\\ndef solution(stdin: str) -> str:\\n    pass\", \"Incorrect solution\""
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"*.c\") == \"main.c\"\nassert solution(\"*.c def *.cpp\") == \"main.c a.out\"\nassert solution(\"a.*\") == \"a.out\"\nassert solution(\"abc*def\") == \"abc.def\""
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == ['main.c', 'a.out']\n"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"*.c\") == ['main.c']\nassert solution(\"a.*\") == ['a.out','readme']\nassert solution(\"*.*\") == ['main.c', 'a.out','readme']\nassert solution(\"a*\") == ['a.out','readme']\nassert solution(\".c\") == []"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == ['main.c', 'a.out']"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('a*.*', '4\\nmain.c\\na.out\\nreadme\\nyacc') == ['main.c', 'a.out']"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''*.*''', 4) == ['main.c', 'a.out']\nassert solution('''*.c''', 3) == ['main.c', 'a.out']\nassert solution('''*.c''', 2) == ['main.c']\nassert solution('''abc*def*ghi''', 7) == ['abc*def*ghi']\nassert solution('''abc*def*ghi''', 1) == ['abc*def*ghi']"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"*.c\", 4) == \"main.c\\n\"\nassert solution(\"a.*\", 4) == \"a.out\\n\"\nassert solution(\"b.*\", 4) == \"\"\nassert solution(\"*.*\", 4) == \"main.c\\na.out\\n\"\nassert solution(\"abc*\", 4) == \"main.c\\na.out\\n\"\nassert solution(\".c*\", 4) == \"main.c\\n\""
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"main.c\\na.out\\n\"\n"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Expected output: {output()}, Received output: {solution(input())}\""
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n0.500000\") == \"0.500000\""
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Expected: {output}, Received: {solution(input())}\"\n"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected_output, f\"Solution {solution} does not match expected output {expected_output}\""
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n0.500000\") == \"0.500000\"\nassert solution(\"1 1\\n0.499999\") == \"0.499999\"\nassert solution(\"1 1\\n0.500010\") == \"0.500000\"\nassert solution(\"1 1\\n0.499980\") == \"0.499999\"\nassert solution(\"1 1\\n0.499980\") == \"0.499999\""
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"The provided solution is incorrect. The output is '{output}', but the expected output is '{output}'.\"\n"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0.500000\"\n"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '0.500000', \"Test case 1 failed\"\n\nassert solution(stdin) == '0.500000', \"Test case 2 failed\"\n\nassert solution(stdin) == '0.500000', \"Test case 3 failed\"\n\nassert solution(stdin) == '0.500000', \"Test case 4 failed\"\n\nassert solution(stdin) == '0.500000', \"Test case 5 failed\""
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\\n0.500000\") == \"0.500000\"\n"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n0.500000\\n\") == \"0.500000\"  # Correct\nassert solution(\"1 1\\n0.499999\\n\") == \"0.500000\"  # Incorrect due to rounding error\nassert solution(\"1 1\\n0.600001\\n\") == \"0.599999\"  # Correct\nassert solution(\"1 1\\n0.700001\\n\") == \"0.699999\"  # Correct\nassert solution(\"1 1\\n0.800001\\n\") == \"0.799999\"  # Correct\nassert solution(\"1 1\\n0.900001\\n\") == \"0.899999\"  # Correct\nassert solution(\"1 1\\n1.000001\\n\") == \"0.999999\"  # Correct\nassert solution(\"1 1\\n1.100001\\n\") == \"1.099999\"  # Correct\nassert solution(\"1 1\\n1.200001\\n\") == \"1.199999\"  # Correct\nassert solution(\"1 1\\n1.300001\\n\") == \"1.299999\"  # Correct\nassert solution(\"1 1\\n1.400001\\n\") == \"1.399999\"  # Correct\nassert solution(\"1 1\\n1.500001\\n\") == \"1.499999\"  # Correct\nassert solution(\"1 1\\n1.600001\\n\") == \"1.599999\"  # Correct\nassert solution(\"1 1\\n1.700001\\n\") == \"1.699999\"  # Correct\nassert solution(\"1 1\\n1.800001\\n\") == \"1.799999\"  # Correct\nassert solution(\"1 1\\n1.900001\\n\") == \"1.899999\"  # Correct\nassert solution(\"1 1\\n2.000001\\n\") == \"1.999999\"  # Correct\nassert solution(\"1 1\\n2.100001\\n\") == \"2.099999\"  # Correct\nassert solution(\"1 1\\n2.200001\\n\") == \"2.199999\"  # Correct\nassert solution(\"1 1\\n2.300001\\n\") == \"2.299999\"  # Correct\nassert solution(\"1 1\\n2.400001\\n\") == \"2.399999\"  # Correct\nassert solution(\"1 1\\n2.500001\\n\") == \"2.499999\"  # Correct\nassert solution(\"1 1\\n2.600001\\n\") == \"2.599999\"  # Correct\nassert solution(\"1 1\\n2.700001\\n\") == \"2.699999\"  # Correct\nassert solution(\"1 1\\n2.800001\\n\") == \"2.799999\"  # Correct\nassert solution(\"1 1\\n2.900001\\n\") == \"2.899999\"  # Correct\nassert solution(\"1 1\\n3.000001\\n\") == \"2.999999\"  # Correct\nassert solution(\"1 1\\n3.100001\\n\") == \"3.099999\"  # Correct\nassert solution(\"1 1\\n3.200001\\n\") == \"3.199999\"  # Correct\nassert solution(\"1 1\\n3.300001\\n\") == \"3.299999\"  # Correct\n"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 49.9\") == \"0.0\"\nassert solution(\"1 50\") == \"0.0\"\nassert solution(\"5 50\") == \"0.0\"\nassert solution(\"0 50\") == \"0.0\"\nassert solution(\"0 50.01\") == \"0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '0.0', \"Expected 0.0, but got {}\".format(solution())"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 49.9\") == \"0.0\"\n"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 49.9\") == 0"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0.499\") == \"0.0\"\nassert solution(\"0.01\") == \"0.0\"\nassert solution(\"0.4999\") == \"0.0\"\nassert solution(\"0.49999\") == \"0.0\"\nassert solution(\"0.99999\") == \"0.0\"\nassert solution(\"1.00001\") == \"0.0\"\nassert solution(\"1.000001\") == \"0.0\"\nassert solution(\"1.0000001\") == \"0.0\"\nassert solution(\"1.00000001\") == \"0.0\"\nassert solution(\"1.000000001\") == \"0.0\"\nassert solution(\"1.0000000001\") == \"0.0\"\nassert solution(\"1.00000000001\") == \"0.0\"\nassert solution(\"1.000000000001\") == \"0.0\"\nassert solution(\"1.0000000000001\") == \"0.0\"\nassert solution(\"1.00000000000001\") == \"0.0\"\nassert solution(\"1.000000000000001\") == \"0.0\"\nassert solution(\"1.0000000000000001\") == \"0.0\"\nassert solution(\"1.00000000000000001\") == \"0.0\"\nassert solution(\"1.000000000000000001\") == \"0.0\"\nassert solution(\"1.0000000000000000001\") == \"0.0\"\nassert solution(\"1.00000000000000000001\") == \"0.0\"\nassert solution(\"1.000000000000000000001\") == \"0.0\"\nassert solution(\"1.000000000000000000001\") == \"0.0\"\nassert solution(\"1.0000000000000000000001\") == \"0.0\"\nassert solution(\"1.0000000000000000000001\") == \"0.0\"\nassert solution(\"1.00000000000000000000001\") == \"0.0\"\nassert solution(\"1.0000000000000000000000001\") == \"0.0\"\nassert solution(\"1.0000000000000000000000001\") == \"0.0\"\nassert solution(\"1.0000000000000000000000001\") == \"0.0\"\nassert solution(\"1.00000000000000000000000001\") == \"0.0\"\nassert solution(\"1.00000000000000000000000001\") == \"0.0\"\nassert solution(\"1.000000000000000000000000001\") == \"0.0\"\nassert solution(\"1.0000000000000000000000000001\") == \"0.0\"\nassert solution(\"1.0000000000000000000000000001\") == \"0.0\"\nassert solution(\"1.0000000000000000000000000001\") == \"0.0\"\nassert solution(\"1."
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) =="
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 49.9\") == \"0.0\", \"Test case 1\"\nassert solution(\"0 50.0\") == \"1.0\", \"Test case 2\"\nassert solution(\"10 50.0\") == \"15.0\", \"Test case 3\"\nassert solution(\"100 50.0\") == \"25.0\", \"Test case 4\"\nassert solution(\"100 50.1\") == \"25.0\", \"Test case 5\"\n\nfrom decimal import Decimal"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 49.9\") == \"0.0\"\nassert solution(\"0 50.0\") == \"0.0\"\nassert solution(\"0 99.9\") == \"0.0\"\nassert solution(\"1 50.0\") == \"0.0\"\nassert solution(\"1 50.1\") == \"0.0\"\nassert solution(\"1 99.9\") == \"0.0\"\nassert solution(\"2 50.0\") == \"0.0\"\nassert solution(\"2 50.1\") == \"0.0\"\nassert solution(\"2 99.9\") == \"0.0\"\nassert solution(\"3 50.0\") == \"0.0\"\nassert solution(\"3 50.1\") == \"0.0\"\nassert solution(\"3 99.9\") == \"0.0\"\nassert solution(\"4 50.0\") == \"0.0\"\nassert solution(\"4 50.1\") == \"0.0\"\nassert solution(\"4 99.9\") == \"0.0\"\nassert solution(\"5 50.0\") == \"0.0\"\nassert solution(\"5 50.1\") == \"0.0\"\nassert solution(\"5 99.9\") == \"0.0\"\nassert solution(\"6 50.0\") == \"0.0\"\nassert solution(\"6 50.1\") == \"0.0\"\nassert solution(\"6 99.9\") == \"0.0\"\nassert solution(\"7 50.0\") == \"0.0\"\nassert solution(\"7 50.1\") == \"0.0\"\nassert solution(\"7 99.9\") == \"0.0\"\nassert solution(\"8 50.0\") == \"0.0\"\nassert solution(\"8 50.1\") == \"0.0\"\nassert solution(\"8 99.9\") == \"0.0\"\nassert solution(\"9 50.0\") == \"0.0\"\nassert solution(\"9 50.1\") == \"0.0\"\nassert solution(\"9 99.9\") == \"0.0\"\nassert solution(\"10 50.0\") == \"0.0\"\nassert solution(\"10 50.1\") == \"0.0\"\nassert solution(\"10 99.9\") == \"0.0\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 49.9\") == \"0.0\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"0 49.9\") == \"0.0\\n\"\nassert solution(stdin=\"0.2 50.0\") == \"0.0\\n\"\nassert solution(stdin=\"0.9 50.5\") == \"1.5\\n\"\nassert solution(stdin=\"0.7 50.3\") == \"1.5\\n\"\nassert solution(stdin=\"1.1 50.0\") == \"2.0\\n\"\nassert solution(stdin=\"0.9 50.1\") == \"2.0\\n\"\nassert solution(stdin=\"0.5 50.4\") == \"2.5\\n\"\nassert solution(stdin=\"0.3 50.2\") == \"2.5\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected_output, f\"The solution is incorrect. Expected output: {expected_output}, but got: {solution}\"\n"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '''1 1\n3 2\n1 2\n2 3\n4 1'''"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\"\n"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n4\n1 2\n2 3\n3 1\n4 1\n\"\"\"\n) == \"\"\"\n4 1\n2 1\n3 2\n1 3\n\"\"\"\nassert solution(\n    \"\"\"\n5\n1 2\n2 3\n3 1\n4 1\n5 6\n\"\"\"\n) == \"\"\"\n4 1\n2 1\n3 2\n1 3\n\"\"\"\nassert solution(\n    \"\"\"\n3\n1 2\n2 3\n3 1\n\"\"\"\n) == \"\"\"\n3 1\n1 2\n2 3\n\"\"\"\nassert solution(\n    \"\"\"\n2\n1 2\n2 3\n3 1\n\"\"\"\n) == \"\"\"\n2 3\n1 2\n3 1\n\"\"\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(\"2 1\\n4 3\\n3 2\\n1 2\") == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(\"3 2\\n1 3\\n2 4\\n4 5\") == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(\"5 3\\n1 2\\n3 4\\n4 5\") == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(\"3 4\\n1 5\\n2 3\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(\"5 1\\n1 2\\n3 4\\n2 3\") == \"4 1\\n2 1\\n3 2\\n1 3\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"4 1\\n2 1\\n3 2\\n1 3\", \"Incorrect output\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(open(\"input.txt\", \"r\")) == \"2 1\\n3 2\\n4 1\\n1 2\"\nassert solution(open(\"input.txt\", \"r\")) == \"4 1\\n3 2\\n1 2\\n2 1\"\nassert solution(open(\"input.txt\", \"r\")) == \"2 1\\n4 1\\n3 2\\n1 3\"\nassert solution(open(\"input.txt\", \"r\")) == \"2 1\\n1 2\\n3 2\\n4 1\"\n"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\\n\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n5 5\") == \"4 4\\n2 4\\n3 5\\n1 5\\n\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\") == \"4 4\\n2 4\\n3 5\\n1 5\\n\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\") == \"4 4\\n2 4\\n3 5\\n1 5\\n\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\") == \"4 4\\n2 4\\n3 5\\n1 5\\n\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\"\n"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\\n2 3\\n3 1\\n4 1\\n\") == \"4 1\\n2 1\\n3 2\\n1 3\""
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input) == output, f\"Input: {input}, Output: {output}\\nSolution: {solution(input)}\"\nfor i in range(1, len(input)):\n    assert input[i] == input[i-1], f\"Input: {input}, Output: {output}\\nSolution: {solution(input)}\""
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\nassert solution(\"10 5\\n1 2 3 4 5 6\\n2 3 4 5 6 7\\n3 4 5 6 7 8\\n4 5 6 7 8 9\\n5 6 7 8 9 10\") == \"1\"\nassert solution(\"8 4\\n1 2 3 4\\n1 2 3 4\") == \"Infinity\""
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n2 1 6 3 5 "
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\\n\"\nprint(\"pass\")\n"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n3 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n3 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n3 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n3 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n3 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n3 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n3 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n3 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n3 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n3 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n3 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n3 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n3 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n3 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n3 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n3 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n3 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n3 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n3 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n3 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n3 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n3 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n3 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n3 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n3 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n3 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n3 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n3 1 6 3 5 "
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1\\n\"  # Add your solution here"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''6 5\n2 1 6 3 5 3\n1 2 5 3 5''') == '1\\n'\n\nassert solution('''6 5\n2 1 6 3 5 3\n1 2 5 3 5\n2 4 6 3 5 3''') == '3\\n'\n\nassert solution('''6 5\n2 1 6 3 5 3\n1 2 5 3 5\n2 4 6 3 5 3\n3 4 6 3 5 3''') == '5\\n'"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(b\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\nassert solution(b\"6 5\\n1 2 5 3 5\\n1 2 5 3 5\") == \"1\"\nassert solution(b\"6 5\\n2 1 6 3 5 3\\n2 1 6 3 5 3\") == \"1\"\nassert solution(b\"6 5\\n1 2 5 3 5\\n1 2 5 3 5\") == \"2\"\n"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == \"3\"\nassert solution(\"4 5 5\\n1 2 3 4 5\") == \"impossible\"\nassert solution(\"2 5 5\\n1 2 3 4 5\") == \"impossible\"\nassert solution(\"2 2 1\\n1 2 3 4\") == \"impossible\""
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == \"3\\n\"\n"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == expected_output, f\"Test failed for input {sample_input}, expected output {expected_output}, but got {solution(sample_input)}\""
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 1 1 2 6\") == 3\nassert solution(\"2 1 10\") == 3\nassert solution(\"10 1 1 2 6\") == 3\nassert solution(\"1 1 1 2 1\") == 10\nassert solution(\"0 1 1 2 6 7 8\") == 3\nassert solution(\"1 2 1 2 1\") == 10\nassert solution(\"1 1 1 2 3 4 5 6 7 8 9 10 11\") == 10\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11\") == 10\n"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == output_data, f\"Test failed: {input_data}!= {output_data}\" for input_data, output_data in [\n    (\"Input1\", \"Output1\"),\n]"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == \"3\"\n"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == \"3\""
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == \"3\\n\"\nassert solution(\"1 100 1000000000000\\n1 1 1 2 3 4 5 6 7 8 9\") == \"impossible\\n\""
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == '3'\nassert solution(5) == 'impossible'"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == \"3\""
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 100\\n99 1\\n1 99\\n') == '2\\n1 2\\n'\nassert solution('2 100\\n99 1\\n1 100\\n') == '2\\n1 2\\n'\nassert solution('2 100\\n99 1\\n2 100\\n') == '2\\n1 2\\n'\nassert solution('2 100\\n99 1\\n2 100\\n3 100\\n') == '2\\n1 2\\n'\nassert solution('2 100\\n99 1\\n2 100\\n3 100\\n4 100\\n') == '2\\n1 2\\n'\nassert solution('2 100\\n99 1\\n2 100\\n3 100\\n4 100\\n5 100\\n') == '2\\n1 2\\n'\nassert solution('2 100\\n99 1\\n2 100\\n3 100\\n4 100\\n5 100\\n6 100\\n') == '2\\n1 2\\n'\nassert solution('2 100\\n99 1\\n2 100\\n3 100\\n4 100\\n5 100\\n6 100\\n7 100\\n') == '2\\n1 2\\n'\nassert solution('2 100\\n99 1\\n2 100\\n3 100\\n4 100\\n5 100\\n6 100\\n7 100\\n8 100\\n') == '2\\n1 2\\n'\nassert solution('2 100\\n99 1\\n2 100\\n3 100\\n4 100\\n5 100\\n6 100\\n7 100\\n8 100\\n9 100\\n') == '2\\n1 2\\n'\nassert solution('2 100\\n99 1\\n2 100\\n3 100\\n4 100\\n5 100\\n6 100\\n7 100\\n8 100\\n9 100\\n10 100\\n') == '2\\n1 2\\n'"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 100\\n99 1\\n1 99\") == \"2\\n1 2\""
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 100\\n99 1\\n1 99\") == \"2\\n1 2\""
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 100\\n99 1\\n1 99\\n') == '2\\n1 2\\n'"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 100\\n99 1\\n1 99\") == \"2\\n1 2\""
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == '2\\n1 2\\n'"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 100\\n99 1\\n1 99\") == \"2\\n1 2\\n\"\nassert solution(\"2 100\\n99 1\\n2 99\") == \"2\\n1 2\\n\"\nassert solution(\"2 100\\n99 1\\n3 99\") == \"2\\n1 2\\n\"\nassert solution(\"2 100\\n99 1\\n5 99\") == \"2\\n1 2\\n\"\nassert solution(\"2 100\\n99 1\\n1 1000\") == \"2\\n1 2\\n\"\nassert solution(\"2 100\\n99 1\\n1 999\") == \"2\\n1 2\\n\"\nassert solution(\"2 100\\n99 1\\n1 1001\") == \"2\\n1 2\\n\"\nassert solution(\"2 100\\n99 1\\n1 10000\") == \"2\\n1 2\\n\"\nassert solution(\"2 100\\n99 1\\n1 10001\") == \"2\\n1 2\\n\""
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 100\\n99 1\\n1 99\") == \"2\\n1 2\"\nassert solution(\"10 200\\n50 50\\n100 100\\n20 10\") == \"2\"\nassert solution(\"1 100\\n10 100\\n100 100\\n50 100\\n100 200\\n1 10\") == \"2\"\nassert solution(\"50 100\\n50 100\\n100 100\\n100 100\\n100 200\\n100 300\\n100 400\\n100 500\") == \"3\""
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 100\\n99 1\\n1 99\") == \"2\\n1 2\""
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 100\\n99 1\\n1 99\") == \"2\\n1 2\\n\"\nassert solution(\"3 50\\n75 100\\n1 50\\n2 50\\n\") == \"2\\n2 1\\n\"\nassert solution(\"1 1\\n2 1\\n3 1\\n4 1\\n\") == \"1\\n1\\n2\\n\"\nassert solution(\"5 100\\n15 100\\n1 100\\n10 100\\n\") == \"2\\n2 1\\n\""
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"H\\nT\\n0.5\") == \"0.5\""
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '0.5'\nprint('Pass')"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"0.5\", \"The probability that Gon wins is incorrect.\""
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"H\\nT\\n0.5\") == \"0.5\"  # correct output\nprint(\"All tests passed!\")"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('H\\nT\\n0.5') == '0.5'"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('H\\nT\\n0.5') == '0.5\\n'"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('H\\nT\\n0.5\\n') == '0.5', 'The first line is not \"H\" and the second line is not \"T\".'\nassert solution('H\\nT\\n0.75\\n') == '0.5', 'The second line is not \"0.75\".'\nassert solution('HH\\nTT\\n0.5\\n') == '0.5', 'The third line contains a non-integer value.'"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"H\") == 0.5, \"Expected 0.5, got {}\".format(solution(\"H\"))\nassert solution(\"T\") == 0.5, \"Expected 0.5, got {}\".format(solution(\"T\"))\nassert solution(\"1.2345\") == 0.5, \"Expected 0.5, got {}\".format(solution(\"1.2345\"))\n\nfrom typing import List"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"H\\nT\\n0.5\") == \"0.5\", \"The output must be 0.5.\"\n\nfrom math import sqrt\n\np = float(input())"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"H\\nT\\n0.5\") == 0.5, \"Wrong answer\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1 3 5 7 9 11 13 15\\n8\", \"Expected output: 1 3 5 7 9 11 13 15\\n8\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"8\\n1 3 5 7 9 11 13 15\"\n"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1 3 5 7 9 11 13 15\\n8\", \"Test case 1 failed\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '8\\n1 3 5 7 9 11 13 15', \"Test failed\"\n"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"8\\n1 3 5 7 9 11 13 15\"\nassert solution(4) == \"17\"\nassert solution(6) == \"14\\n2 6 10 14 18 22 26\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"8\\n1 3 5 7 9 11 13 15\"\nassert solution(\"6\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1000\") == \"0\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == ['8']\nassert solution(4) == ['1 3 5 7', '9 11 13 15']\nassert solution(5) == ['1 3 5 7 9', '11 13 15 17 19', '19 21 23 25']"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == '8\\n1 3 5 7 9 11 13 15'"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"Output not provided for the problem\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"8\\n1 3 5 7 9 11 13 15\"\nassert solution(5) == \"16\\n1 3 5 7 9 11 13 15 17\"\nassert solution(7) == \"25\\n1 3 5 7 9 11 13 15 17 19 21 23\""
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input()) == sample_output()"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n') == '3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Solution is {solution(input())}, expected {expected_output}\"\n"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: Solution '{solution(input())}' is incorrect.\""
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n') == '3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\n\nassert solution('4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n') == '3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\n\nassert solution('4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n') == '3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\n\nassert solution('4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n') == '3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\n\nassert solution('4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n') == '3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\n\nassert solution('4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n') == '3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\n\nassert solution('4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n') == '3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\n\nassert solution('4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n') == '3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\n\nassert solution('4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n') == '3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\n\nassert solution('4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n') == '3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(str(4)) == '3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution(str(1) +'' + str(3) +'' + str(5) +'' + str(7)) == '3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution(str(3) + '\\n' + str(2) +'' + str(2) + '\\n' + str(5)) == '1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution(str(1) +'' + str(5) + '\\n' + str(5)) == '0\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(10) == \"3\"\nassert solution(100000) == \"1\""
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '3\\n1\\n0\\n'\n\nassert solution() == '3\\n1\\n0\\n'\n\nassert solution() == '3\\n1\\n0\\n'\n\nassert solution() == '3\\n1\\n0\\n'\n\nassert solution() == '3\\n1\\n0\\n'"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 1\\n1 1 -2 0') == 0"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\") == 0 # should return 0\nassert solution(\"2 2\\n1 1 -2 0\\n3 3 5 4\") == 2 # should return 2\nassert solution(\"2 3\\n1 1 -2 0\\n3 3 5 4\\n6 6 7 6\") == 6 # should return 6\nassert solution(\"3 3\\n1 1 -2 0\\n3 3 5 4\\n6 6 7 6\\n9 9 10 9\") == 9 # should return 9\nassert solution(\"2 4\\n1 1 -2 0\\n3 3 5 4\\n6 6 7 6\\n9 9 10 9\\n12 12 11 10\") == 16 # should return 16\nassert solution(\"1 1\\n1 1 -2 0\\n3 3 5 4\\n6 6 7 6\\n9 9 10 9\\n12 12 11 10\\n15 15 14 13\") == 20 # should return 20"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\") == \"0\\n0\\n0\""
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '0\\n' # The sample solution satisfies all requirements."
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 1\\n1 1 -2 0\\n') == 0\n"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"1 1\\n1 1 -2 0\\n2 1\\n1 1 0 0\\n1 1 10000 0\\n1 1\\n1 1 0 0\\n1 1 10000 0\\n2 1\\n1 1 0 0\\n1 1 10000 0\\n2 1\\n1 1 0 0\\n1 1 10000 0\\n2 1\\n1 1 0 0\\n1 1 10000 0\\n2 1\\n1 1 0 0\\n1 1 10000 0\\n2 1\\n1 1 0 0\\n1 1 10000 0\\n2 1\\n1 1 0 0\\n1 1 10000 0\\n2 1\\n1 1 0 0\\n1 1 10000 0\\n2 1\\n1 1 0 0\\n1 1 10000 0\\n2 1\\n1 1 0 0\\n1 1 10000 0\\n2 1\\n1 1 0 0\\n1 1 10000 0\\n2 1\\n1 1 0 0\\n1 1 10000 0\\n2 1\\n1 1 0 0\\n1 1 10000 0\\n2 1\\n1 1 0 0\\n1 1 10000 0\\n2 1\\n1 1 0 0\\n1 1 10000 0\\n2 1\\n1 1 0 0\\n1 1 10000 0\\n2 1\\n1 1 0 0\\n1 1 10000 0\\n2 1\\n1 1 0 0\\n1 1 10000 0\\n2 1\\n1 1 0 0\\n1 1 10000 0\\n2 1\\n1 1 0 0\\n1 1 10000 0\\n2 1\\n1 1 0 0\\n1 1 10000 0\\n2 1\\n1 1 0 0\\n1 1 10000 0\\n2 1\\n1 1 0 0\\n1 1 10000 0\\n2 1\\n1 1 0 0\\n1 1 10000 0\\n2 1\\n1 1 0 0\\n1 1 10000 0\\n2 1\\n1 1 0 0\\n1 1 10000 0\\n2 1\\n1 1 0 0\\n1 1 10000 0\\n2 1\\n1 1 0 0\\n1 1 10000 0\\n2 1\\n1 1 0 0\\n1 1 10000 0\\n2 1\\n1 1 0 0\\n1 1 10000 0\\n2 1\\n1 1 0 0\\n1 1 10000 0\\n2 1\\n1 1 0 0\\n1 1 10000 0\\n2 1\\n1 1 0 0\\n1 1 10000 0\\n2 1\\n1 1 0 0\\n1 1 10000 0\\n2 1\\n1 1 0 0\\n1 1 10000 0\\n2 1\\n1 1 0 0\\n1 1 10000 0\\n2 1\\n1 1"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 4\\n1 1 -2 0\\n1 2 -1 0\\n1 3 0 0\\n1 4 0 0\\n1 5 0 0\\n2 1\\n1 1 -2 0\\n1 2 -1 0\\n1 3 0 0\\n1 4 0 0\\n1 5 0 0\\n2 1\\n1 1 -2 0\\n1 2 -1 0\\n1 3 0 0\\n1 4 0 0\\n1 5 0 0\\n2 1') == 0\nassert solution('4 4\\n1 1 -2 0\\n1 2 -1 0\\n1 3 0 0\\n1 4 0 0\\n1 5 0 0\\n2 1\\n1 1 -2 0\\n1 2 -1 0\\n1 3 0 0\\n1 4 0 0\\n1 5 0 0\\n2 1\\n1 1 -2 0\\n1 2 -1 0\\n1 3 0 0\\n1 4 0 0\\n1 5 0 0\\n2 1') == 0\nassert solution('4 4\\n1 1 -2 0\\n1 2 -1 0\\n1 3 0 0\\n1 4 0 0\\n1 5 0 0\\n2 1\\n1 1 -2 0\\n1 2 -1 0\\n1 3 0 0\\n1 4 0 0\\n1 5 0 0\\n2 1\\n1 1 -2 0\\n1 2 -1 0\\n1 3 0 0\\n1 4 0 0\\n1 5 0 0\\n2 1\\n1 1 -2 0\\n1 2 -1 0\\n1 3 0 0\\n1 4 0 0\\n1 5 0 0\\n2 1') == 0\nassert solution('4 4\\n1 1 -2 0\\n1 2 -1 0\\n1 3 0 0\\n1 4 0 0\\n1 5 0 0\\n2 1\\n1 1 -2 0\\n1 2 -1 0\\n1 3 0 0\\n1 4 0 0\\n1 5 0 0\\n2 1\\n1 1 -2 0\\n1 2 -1 0\\n1 3 0 0\\n1 4 0 0\\n1 5 0 0\\n2 1\\n1 1 -2 0\\n1 2 -1 0\\n1 3 0 0\\n1 4 0 0\\n1 5 0 0\\n2 1\\n1 1 -2 0\\n1 2 -1 0\\n1 3 0 0\\n1 4 0 0\\n1 5 0 0\\n2 1') == 0\nassert solution('4 4\\n1 1 -2 0\\n1 2 -1 0\\n1 3 0 0\\n1 4 0 0\\n1 5 0 0\\n2 1\\n1 1 -2 0\\n1 2 -1 0\\n1 3 0 0\\n1 4 0 0\\n1 5 0 0\\n2 1\\n1 1 -2 0\\n1 2 -1 0\\n1 3 0 0\\n1 4 0 0\\n1 5 0 0\\n2 1\\n1 1 -2 0\\n1 2 -1 0\\n1 3 0 0\\n1 4 0 0\\n1 5 0 0\\n2 1\\n1 1 -2 0\\n1 2 -1 0\\n1 3 0 "
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 1\\n1 1 -2 0\\n1 1 -3 0\\n1 1 -4 0\\n1 1 -5 0\\n') == '0\\n'\nassert solution('2 2\\n1 1 -2 0\\n1 1 -3 0\\n1 1 -4 0\\n1 1 -5 0\\n1 1 -6 0\\n') == '2\\n'\nassert solution('2 3\\n1 1 -2 0\\n1 1 -3 0\\n1 1 -4 0\\n1 1 -5 0\\n1 1 -6 0\\n1 1 -7 0\\n') == '3\\n'\nassert solution('2 4\\n1 1 -2 0\\n1 1 -3 0\\n1 1 -4 0\\n1 1 -5 0\\n1 1 -6 0\\n1 1 -7 0\\n1 1 -8 0\\n') == '4\\n'\nassert solution('2 5\\n1 1 -2 0\\n1 1 -3 0\\n1 1 -4 0\\n1 1 -5 0\\n1 1 -6 0\\n1 1 -7 0\\n1 1 -8 0\\n1 1 -9 0\\n') == '5\\n'"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\") == 0"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Output the number of lines you have to add to this suggestion to satisfy all warlords.\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    2\n    5\n    2019 10 18\n    2019 10 19\n    2020 10 02\n    2020 10 16\n    2020 10 23\n    \"\"\"\n) == \"194\"\n\nassert solution(\n    \"\"\"\n    3\n    5\n    2019 10 18\n    2019 10 19\n    2020 10 02\n    2020 10 16\n    2020 10 23\n    2020 10 18\n    2020 10 24\n    2020 10 25\n    2021 10 10\n    2021 10 11\n    2021 10 12\n    2021 10 13\n    2021 10 14\n    2021 10 15\n    2021 10 16\n    2021 10 17\n    2021 10 18\n    2021 10 19\n    2021 10 20\n    2021 10 21\n    2021 10 22\n    2021 10 23\n    2021 10 24\n    2021 10 25\n    2021 10 26\n    2021 10 27\n    2021 10 28\n    2021 10 29\n    2021 10 30\n    2021 10 31\n    2022 10 10\n    2022 10 11\n    2022 10 12\n    2022 10 13\n    2022 10 14\n    2022 10 15\n    2022 10 16\n    2022 10 17\n    2022 10 18\n    2022 10 19\n    2022 10 20\n    2022 10 21\n    2022 10 22\n    2022 10 23\n    2022 10 24\n    2022 10 25\n    2022 10 26\n    2022 10 27\n    2022 10 28\n    2022 10 29\n    2022 10 30\n    2022 10 31\n    2023 10 10\n    2023 10 11\n    2023 10 12\n    2023 10 13\n    2023 10 14\n    2023 10 15\n    2023 10 16\n    2023 10 17\n    2023 10 18\n    2023 10 19\n    2023 10 20\n    2023 10 21\n    2023 10 22\n    2023 10 23\n    2023 10 24\n    2023 10 25\n    2023 10 26\n    2023 10 27\n    2023 10 28\n    2023 10 29\n    2023 10 30\n    2023 10 31\n    2024 10 10\n    2024 10 11\n    2024 10 12\n    2024 10 13\n    2024 10 14\n    2024 10 15\n    2024 10 16\n    2024 10 17\n    2024 10 18\n    2024 10 19\n    2024 10 20\n    2024 "
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n') == '194\\n2019 10 25\\n2020 10 30\\n'\n"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\\n2019 10 25\\n2020 10 30\\n\"\nassert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\\n2019 10 25\\n2020 10 30\\n\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '194'\n"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"\"\"2019 10 25\n2020 10 30\"\"\"\n"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n    2\n    5\n    2019 10 18\n    2019 10 19\n    2020 10 02\n    2020 10 16\n    2020 10 23\n    \"\"\") == \"194\\n2019 10 25\\n2020 10 30\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\") == \"194\"\nassert solution(\"5\\n2019 10 25\\n2020 10 30\") == \"194\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\") == \"194\\n2019 10 25\\n2020 10 30\\n\"\n"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23') == '194\\n2019 10 25\\n2020 10 30'"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_data) == expected_output, f\"Incorrect output for solution: expected {expected_output}, got {solution(input_data)}\"\n"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\\n\"\nassert solution(stdin) == \"negative-infinity 0\\nnegative-infinity -5\\n\"\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\\n    assert solution(stdin) == \\\"negative-infinity 0\\\\n5 12.5\\\\nnegative-infinity -5\\\\n\\\"\\n\\n    assert solution(stdin) == \\\"negative-infinity 0\\\\nnegative-infinity -5\\\\n\\\"\\n\\n    assert solution(stdin) == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\\\n    assert solution(stdin) == \\\"negative-infinity 0\\\\n5 12.5\\\\nnegative-infinity -5\\\\n\\\"\\n\\n    assert solution(stdin) == \\\"negative-infinity 0\\\\nnegative-infinity -5\\\\n\\\"\\n\\n    assert solution(stdin) == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\\\n    assert solution(stdin) == \\\"negative-infinity 0\\\\nnegative-infinity -5\\\\n\\\"\\n\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0''') == '''negative-infinity 0\n5 12.5\nnegative-infinity -5'''"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\"\n"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0\n''') == '''negative-infinity 0\n5 12.5\nnegative-infinity -5\n'''"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed: Expected output: {output}, got: {solution(input())}\" for i, (x1, y1, x2, y2, x3) in enumerate(input().split()) for output in solution(input())\nprint(f\"Test cases passed: {i+1}/{len(input())}\")"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed: Expected {expected_output}, got {solution(input())}.\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 'negative-infinity 0\\n5 12.5\\nnegative-infinity -5'"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n\") == \"2\\nIMPOSSIBLE\\n\"\n"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n    4 4\n    100 30000\n    200 20000\n    300 10000\n    400 0\n    50 10000\n    75 20000\n    400 -40000\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000') == '2\\n'\nprint('All test cases passed successfully')"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"2\\n\""
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"2\\n\""
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"2\"\nprint(\"Test Passed!\")"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n\") == \"2\"\nassert solution(\"1 1\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == expected_output, f\"Test failed: {sample_input}\\nExpected: {expected_output}\\nGot: {solution(sample_input)}\""
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    4 4\n    100 30000\n    200 20000\n    300 10000\n    400 0\n    50 10000\n    75 20000\n    400 -40000\n    ''') == '2\\n'\n\nassert solution('''\n    5 5\n    0 0\n    1000 1000\n    1000 0\n    0 1000\n    0 0\n    0 0\n    ''') == 'IMPOSSIBLE\\n'"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100') == '345 2\\nrotS 2 1\\nnegR 2\\n'"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100') == '345 2\\nrotS 2 1\\nnegR 2\\n'\nassert solution('6 4\\n2 -5 3 -7\\n0 -2 5 -8\\n1 9 -1 20') == '1270 2\\nnegS 1\\nrotR 1 1\\n'\nassert solution('5 3\\n5 0 2\\n3 10 -5\\n') == '175 2\\nnegS 2\\nrotS 1 1\\n'"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"345 2\\nrotS 2 1\\nnegR 2\\n\", \"Your code is incorrect.\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\\n\"\nassert solution(\"6 5\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"10000 3\\nrotS 3 1\\nnegR 2\\n\"\nassert solution(\"8 7\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"50000 5\\nrotS 3 1\\nnegR 2\\n\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100') == '345 2\\nrotS 2 1\\nnegR 2\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100') == '345 2\\nrotS 2 1\\nnegR 2'\n"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"345 2\\nrotS 2 1\\nnegR 2\\n\"\n"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"345 2\\nrotS 2 1\\nnegR 2\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100') == '345 2\\nrotS 2 1\\nnegR 2\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 2\\n3 1 1\\n') == '0.5'"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 0.5"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n3 1 1\") == 0.5\n"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"0.5\"\n"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected_output, f\"Solution: {solution}, Expected Output: {expected_output}\""
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"The output is incorrect.\""
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0.5\\n\", \"Test Case 1 failed\"\n\nsolution(stdin)"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 0.5, \"The solution is not correct.\""
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == '0.5'"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n3 1 1\") == \"0.5\\n\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n''') == '1 4 5\\n2 6 7'\nassert solution('''\n5 4\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n''') == 'impossible'"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n4\\n5\\n1\\n6\\n6\\n7\\n2\\n3\\n8\\n3\\n9\\n6\\n5\\n9\\n6\\n8\\n5\\n\") == \"1 4 5\\n2 6 7\\n\"\nassert solution(\"9\\n11\\n1\\n4\\n1\\n5\\n5\\n1\\n5\\n6\\n6\\n6\\n7\\n2\\n3\\n8\\n3\\n9\\n6\\n5\\n9\\n6\\n8\\n5\\n\") == \"1 4 5\\n2 6 7\\n\"\nassert solution(\"9\\n11\\n1\\n4\\n1\\n5\\n5\\n1\\n5\\n6\\n6\\n6\\n7\\n2\\n3\\n8\\n3\\n9\\n6\\n5\\n9\\n6\\n8\\n5\\n\") == \"impossible\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n\"\"\") == \"1 4 5\\n2 6 7\"\n\nassert solution(\"\"\"\n9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n1 2\n2 3\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n1 2\n2 3\n4 5\n\"\"\") == \"1 2 3\"\n\nassert solution(\"\"\"\n10 20\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n1 2\n2 3\n4 5\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n10 20\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n1 2\n2 3\n4 5\n1 6\n6 7\n7 8\n8 9\n9 10\n\"\"\") == \"1 2 3\"\n\nassert solution(\"\"\"\n10 20\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n1 2\n2 3\n4 5\n1 6\n6 7\n7 8\n8 9\n9 10\n1 5\n5 6\n6 7\n7 8\n8 9\n9 10\n\"\"\") == \"2 3\"\n\nassert solution(\"\"\"\n10 20\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n1 2\n2 3\n4 5\n1 6\n6 7\n7 8\n8 9\n9 10\n1 5\n5 6\n6 7\n7 8\n8 9\n9 10\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n10 20\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n1 2\n2 3\n4 5\n1 6\n6 7\n7 8\n8 9\n9 10\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n10 20\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n1 2\n2 3\n4 5\n1 6\n6 7\n7 8\n8 9\n9 10\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n10 20\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n1 2\n2 3\n4 5\n1 6\n6 7\n7 8\n8 9\n9 10\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n10 20\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n1 2\n2 3\n4 5\n1 6\n6 7\n7 8\n8 9\n9 10\n\"\"\") == \"impossible\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"1 4 5\\n2 6 7\\n\"\nassert solution(\"1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\\n11 1\\n12 1\\n13 1\\n14 1\\n15 1\\n16 1\\n17 1\\n18 1\\n19 1\\n20 1\\n\") == \"impossible\"\nassert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"1 4 5\\n2 6 7\\n\"\nassert solution(\"1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\\n11 1\\n12 1\\n13 1\\n14 1\\n15 1\\n16 1\\n17 1\\n18 1\\n19 1\\n20 1\\n\") == \"impossible\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"1 4 5\\n2 6 7\"\n"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"1 4 5\\n2 6 7\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1 4 5\\n2 6 7\"\n"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n''') == '''\n1 4 5\n2 6 7\n'''\n\nassert solution('''\n8 8\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n''') == '''\n1 1 2 3 4 5 6 7\n8 8\n'''\n\nassert solution('''\n5 3\n1 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n''') == '''\n1 1 2 3 4\n5 6\n'''"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1 4 5\\n2 6 7\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9''') == '''1 4 5\n2 6 7'''"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n') == '13500\\n'\nassert solution('11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n12000\\n') == '13500\\n'\nassert solution('11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n') == '13500\\n'\nassert solution('11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n12000\\n12000\\n18000\\n10000\\n9000\\n12000\\n12000\\n12000\\n18000\\n10000\\n9000\\n12000\\n12000\\n12000\\n18000\\n10000\\n9000\\n12000\\n12000\\n12000\\n') == '13500\\n'\nassert solution('11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n12000\\n12000\\n18000\\n10000\\n9000\\n12000\\n12000\\n12000\\n18000\\n10000\\n9000\\n12000\\n12000\\n12000\\n18000\\n10000\\n9000\\n12000\\n12000\\n12000\\n18000\\n10000\\n9000\\n12000\\n12000\\n12000\\n18000\\n10000\\n9000\\n12000\\n12000\\n12000\\n18000\\n10000\\n9000\\n12000\\n12000\\n12000\\n18000\\n10000\\n9000\\n12000\\n12000\\n12000\\n18000\\n10000\\n9000\\n12000\\n12000\\n12000\\n18000\\n10000\\n9000\\n12000\\n12000\\n12000\\n18000\\n10000\\n9000\\n12000\\n12000\\n12"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 13500\n"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\") == 13500\nassert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n9000\\n12000\") == 9000\nassert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n11000\\n12000\\"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\") == \"13500\\n\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000') == '13500\\n'\nassert solution('11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n9000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n1200"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n\") == 13500, \"Incorrect output\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 13500, \"The provided code is incorrect.\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\") == \"13500\", \"The given solution is not correct.\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(str(11, 2)) == 13500\nassert solution(str(12000, 9000, 4500, 10000, 12000, 11000, 12000, 18000, 10000, 9000, 12000)) == 13500\n"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\") == 13500\nassert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n\") == 13500\nassert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n\") == 13500\n"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\") == \"Hot_cross_buns!_=___Hot_cross_buns!_=One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot_cross_buns!_=___________One_a_pen-_ny,_Two_a_pen-_ny,_Hot_cross_buns!_=__________One_a_pen-_ny,_Two_a_pen-_ny,_Hot_cross_buns!_=_________One_a_pen-_ny,_Two_a_pen-_ny,_Hot_cross_buns!_=___________One_a_pen-_ny,_Two_a_pen-_ny,_Hot_cross_buns!_=__________One_a_pen-_ny,_Two_a_pen-_ny,_Hot_cross_buns!_=_________One_a_pen-_ny,_Two_a_pen-_ny,_Hot_cross_buns!_=___________One_a_pen-_ny,_Two_a_pen-_ny,_Hot_cross_buns!_=__________One_a_pen-_ny,_Two_a_pen-_ny,_Hot_cross_buns!_=_________One_a_pen-_ny,_Two_a_pen-_ny,_Hot_cross_buns!_=___________One_a_pen-_ny,_Two_a_pen-_ny,_Hot_cross_buns!_=__________One_a_pen-_ny,_Two_a_pen-_ny,_Hot_cross_buns!_=_________One_a_pen-_ny,_Two_a_pen-_ny,_Hot_cross_buns!_=___________One_a_pen-_ny,_Two_a_pen-_ny,_Hot_cross_buns!_=__________One_a_pen-_ny,_Two_a_pen-_ny,_Hot_cross_buns!_=_________One_a_pen-_ny,_Two_a_pen-_ny,_Hot_cross_buns!_=___________One_a_pen-_ny,_Two_a_pen-_ny,_Hot_cross_buns!_=__________One_a_pen-_ny,_Two_a_pen-_ny,_Hot_cross_buns!_=_________One_a_pen-_ny,_Two_a_pen-_ny,_Hot_cross_buns!_=___________One_a_pen-_ny,_Two_a_pen-_ny,_Hot_cross_buns!_=__________One_a_pen-_ny,_Two_a_pen-_ny,_Hot_cross_buns!_=_________One_a_pen-_ny,_Two_a_pen-_ny,_Hot_cross_buns!_=___________One_a_pen-_ny,_Two_a_pen-_ny,_Hot_cross_buns!_=__________One_a_pen-_ny,_Two_a_pen-_ny,_Hot_cross_buns!_=_________One_a_pen-_ny,_Two_a_pen-_ny,_Hot_cross_buns!_=___________One_a_pen-_ny,_Two_a_pen-_ny,_Hot_cross_buns!_=__________One_a_pen-_ny,_Two_a_pen-_ny,_Hot_cross_buns!_=_________One_a_pen-_ny,_Two_a_pen-_ny,_Hot_cross_buns!_=___________One_a_pen-_ny,_Two_a_pen-_ny,_Hot_cross_buns!_=__________One_a_pen-_ny,_Two_a_pen-_ny,_Hot_cross_buns!_=_________One_a_pen-_ny,_Two_a_pen-_ny,_Hot_cross_buns!_=___________One_a_pen-_ny,_Two_a_pen-_ny,_Hot_cross_buns!_=__________One_a_pen-_ny,_Two_a_pen-_ny,_Hot_cross_buns!_=_________One_a_pen-_ny,_Two_a_pen-_ny,_Hot_cross_buns!_=___________One_a_pen-_ny,_Two_a_pen-_"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 16\\nHot cross buns! = Hot cross buns!\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\n') == 'Hot_cross_buns!_=___Hot_cross_buns!_\\n____________________Hot_cross_buns!_\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_______________________\\n'\n"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\n') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,def solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\ndef solution(stdin: str) -> str:\\n    pass'\n\nassert solution('2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\ndef solution(stdin: str) -> str:\\n    pass'\n\nassert solution('2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\ndef solution(stdin: str) -> str:\\n    pass'\n\nassert solution('2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,Hot_cross_buns!_=___Hot_cross_buns!_=____________________Hot_cross_buns!_\\n____________________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=____________________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_,Hot_cross_buns!_=___Hot_cross_buns!_=____________________Hot_cross_buns!,Hot_cross_buns!_=___Hot_cross_buns!_=____________________Hot_cross_buns!_\\n____________________Two_a_pen-_ny,_Hot___cross____buns!_=____________________Two_a_pen-_ny,_Hot___cross____buns!_,____________________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_,Hot_cross_buns!_=___Hot_cross_buns!_=____________________Two_a_pen-_ny,_Hot___cross____buns!,Hot_cross_buns!_=____________________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!,Hot_cross_buns!_=____________________Two_a_pen-_ny,_Hot___cross____buns!,Hot_cross_buns!_=____________________Two_a_pen-_ny,_Hot___cross____buns!,Hot_cross_buns!_=___Hot_cross_buns!_=____________________Two_a_pen-_ny,_Hot___cross____buns!_\\n____________________Two_a_pen-_ny,_Hot___cross____buns!_=____________________Two_a_pen-_ny,_Hot___cross____buns!,____________________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_,Hot_cross_buns!_=___Hot_cross_buns!_=____________________Two_a_pen-_ny,_Hot___cross____buns!,Hot_cross_buns!_=____________________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!,Hot_cross_buns!_=____________________Two_a_pen-_ny,_Hot___cross____buns!,Hot_cross_buns!_=____________________Two_a_pen-_ny,_Hot___cross____buns!,Hot_cross_buns!_=____________________Two_a_pen-_ny,_Hot___cross____buns!_\\n____________________Two_a_pen-_ny,_Hot___cross____buns!_=____________________Two_a_pen-_ny,_Hot___cross____buns!,____________________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_,Hot_cross_buns!_=___Hot_cross_buns!_=____________________Two_a_pen-_ny,_Hot___cross____buns!,Hot_cross_buns!_=____________________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!,Hot_cross_buns!_=____________________Two_a_pen-_ny,_Hot___cross____buns!,Hot_cross_buns!_=____________________Two_a_pen-_ny,_Hot___cross____buns!,Hot_cross_buns!_=____________________Two_a_pen-_ny,_Hot___cross____buns!_\\n____________________Two_a_pen-_ny,_Hot___cross____buns!_=____________________Two_a_pen-_ny,_Hot___cross____buns!,____________________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_,Hot_cross_buns!_=___Hot_cross_buns!_=____________________Two_a_pen-_ny,_Hot___cross____buns!,Hot_cross_buns!_=____________________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!,Hot_cross_buns!_=____________________Two_a_pen-_ny,_Hot___cross____buns!,Hot_cross_buns!_=____________________Two_a_pen-_ny,_Hot___cross____buns!,Hot_"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\n\") == \"Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,______________def solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == "
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4') == 'Hot_cross_buns!_=___Hot_cross_buns!_=One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('2 2 2 2 2 2 2 2 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4') == 'Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4') == 'Hot_cross_buns!_=___Hot_cross_buns!_=One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,def solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: Expected '{expected_output}', but got '{solution(input())}'\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"Your solution is incorrect. Please see the given example and submit the correct solution.\""
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\\n\") == 33"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\") == \"33\"\nassert solution(\"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\") == \"70\""
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '33\\n', solution(stdin)"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n    3 2 1\n    1 2 10\n    1 4 6 6\n    1 6 10 5\n    2 10 30 33\n    \"\"\") == \"33\""
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\\n\") == \"33\"\n"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 33, \"Expected 33, but got {}\".format(solution())"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\") == 33"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"33\", \"Expected 33, got {}\".format(solution(stdin))"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\") == \"33\\n\"\nassert solution(stdin=\"3 2 1\\n2 1 2\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\") == \"33\\n\"\nassert solution(stdin=\"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\") == \"24\\n\"\nassert solution(stdin=\"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\") == \"66\\n\"\nassert solution(stdin=\"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\") == \"100\\n\""
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\""
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"405\""
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"405\""
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n20 15 10\\n7 7\\n30 0\") == \"405\"\n"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n20 15 10\\n7 7\\n30 0\") == \"405\" # correct output"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n    3\n    20 15 10\n    7 7\n    30 0\"\"\") == 405\n\nassert solution(\"\"\"\n    4\n    50 10\n    500\n    500\n    0\n    1000\"\"\") == 12230\n\nassert solution(\"\"\"\n    6\n    20 15 10 20 15 10\n    7 7 7 7 7 7\n    30 0 0 0 0\n    0 0 0 0 0\n    1000 1000 0 0 0\n    0 0 0 0 0\"\"\") == 19730"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''3\n20 15 10\n7 7\n30 0''') == '405'"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n3\n20 15 10\n7 7\n30 0\n''') == '405'"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"20 15 10\\n7 7\\n30 0\") == 405\nassert solution(\"3\\n1 5\\n10 20\\n25 15\\n15 20\") == 750\nassert solution(\"100\\n10\\n500\\n1000\") == 100000"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n20 15 10\\n7 7\\n30 0\") == \"405\\n\"\nassert solution(\"4\\n10\\n100\") == \"10000\\n\"\nassert solution(\"5\\n10 20 30 40 50\\n0 0 1 2 3\") == \"10000\\n\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output, f\"The solution does not match the expected output.\\nExpected: {expected_output}\\nGot: {solution(stdin)}\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n1 2 4 7\\n') == '28 4 21 14.0\\n'\n"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"28 4 21 14.0\"\n"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\"\n"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n1 2 4 7') == '28 4 21 14.0\\n'"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n1 2 4 7') == '28 4 21 14.0'\n"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\""
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(\"4 2\\n2 3 4 1\\n1 2 3 4\") == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"no\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(\"4 2\\n2 3 4 1\\n1 2 3 4\") == \"no\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(\"4 2\\n2 3 4 1\\n1 2 3 4\") == \"no\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(\"4 2\\n2 3 4 1\\n1 2 3 4\") == \"no\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(\"4 2\\n2 3 4 1\\n1 2 3 4\") == \"no\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(\"4 2\\n2 3 4 1\\n1 2 3 4\") == \"no\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(\"4 2\\n2 3 4 1\\n1 2 3 4\") == \"no\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(\"4 2\\n2 3 4 1\\n1 2 3 4\") == \"no\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(\"4 2\\n2 3 4 1\\n1 2 3 4\") == \"no\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(\"4 2\\n2 3 4 1\\n1 2 3 4\") == \"no\"\n"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 2\\n1 2 3 4\\n2 3 4 1') == 'yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3'\nassert solution('5 6\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 1\\n5 6 1 2\\n6 1 2 3') == 'yes\\n1 2 3 4 \\n2 3 4 5 \\n3 4 5 6 \\n4 5 6 1 \\n5 6 1 2 \\n6 1 2 3'\nassert solution('1 1\\n1 1') == 'no'"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"yes\"\nprint(\"1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\")"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"5 3\\n1 2 3 4 5\\n2 3 4 5 1\\n3 4 5 1 2\\n4 5 1 2 3\\n5 1 2 3 4\\n6 2 3 4 5\\n7 3 4 5 1\\n8 4 5 1 2\\n9 5 1 2 3\") == \"no\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"5 5\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"6 6\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"7 7\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"8 8\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"9 9\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\n"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\n"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\"\nassert solution(\"5 5\\n1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\\n21 22 23 24 25\") == \"no\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\") == \"no\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\") == \"no\"\nassert solution(\"5 5\\n1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\\n21 22 23 24 25\") == \"no\""
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"no\"\n"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 3\\n1 2 3 4\\n2 3 4 1\") == \"no\"\nassert solution(\"5 5\\n1 2 3 4 5\\n2 3 4 5 1\\n3 4 5 1 2\\n4 5 1 2 3\\n5 1 2 3 4\") == \"yes\\n1 2 3 4 5\\n2 3 4 5 1\\n3 4 5 1 2\\n4 5 1 2 3\\n5 1 2 3 4\"\nassert solution(\"6 4\\n1 2 3 4 5 6\\n2 3 4 5 6 1\\n3 4 5 6 1 2\\n4 5 6 1 2 3\\n5 6 1 2 3 4\\n6 1 2 3 4 5\") == \"yes\\n1 2 3 4 5 6\\n2 3 4 5 6 1\\n3 4 5 6 1 2\\n4 5 6 1 2 3\\n5 6 1 2 3 4\\n6 1 2 3 4 5\"\nassert solution(\"6 6\\n1 2 3 4 5 6 7\\n2 3 4 5 6 1 8\\n3 4 5 6 1 2 9\\n4 5 6 1 2 3 10\\n5 6 1 2 3 4 11\\n6 1 2 3 4 5 12\\n7 1 2 3 4 5 13\\n8 1 2 3 4 5 14\\n9 1 2 3 4 5 15\\n10 1 2 3 4 5 16\\n11 1 2 3 4 5 17\\n12 1 2 3 4 5 18\\n13 1 2 3 4 5 19\\n14 1 2 3 4 5 20\\n15 1 2 3 4 5 21\\n16 1 2 3 4 5 22\\n17 1 2 3 4 5 23\\n18 1 2 3 4 5 24\\n19 1 2 3 4 5 25\\n20 1 2 3 4 5 26\\n21 1 2 3 4 5 27\\n22 1 2 3 4 5 28\\n23 1 2 3 4 5 29\\n24 1 2 3 4 5 30\\n25 1 2 3 4 5 31\\n26 1 2 3 4 5 32\\n27 1 2 3 4 5 33\\n28 1 2 3 4 5 34\\n29 1 2 3 4 5 35\\n30 1 2 3 4 5 36\\n31 1 2 3 4 5 37\\n32 1 2 3 4 5 38\\n33 1 2 3 4 5 39\\n34 1 2 3 4 5 40\\n35 1 2 3 4 5 41\\n36 1 2 3 4 5 42\\n37 1 2 3 4 5 43\\n38 1 2 3 4 5 44\\n39 1 2 3 4 5 45\\"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    5\n    10 10 -10 -4 10\n    \"\"\"\n) == \"10.000000000\"\n\nassert solution(\n    \"\"\"\n    3\n    5 -1 2 3 4\n    \"\"\"\n) == \"0.666666667\"\n\nassert solution(\n    \"\"\"\n    2\n    1 2 3 4 5\n    \"\"\"\n) == \"3.000000000\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n10 10 -10 -4 10\") == \"10.000000000\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output, \"The solution is incorrect\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n10 10 -10 -4 10\") == \"10.000000000\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n10 10 -10 -4 10\") == \"10.000000000\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '10.000000000'"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '10.000000000'"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt').read()) == '10.000000000'\n"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"10.000000000\\n\"\n"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n10 10 -10 -4 10\") == \"10.000000000\\n\""
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\", \"Your solution is incorrect. The output should be 1.\""
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n30\\n3\\n2\\n45\") == \"1\"\nassert solution(\"4\\n15\\n7\\n5\\n10\") == \"0\"\nassert solution(\"4\\n20\\n5\\n5\\n10\") == \"11\"\nassert solution(\"4\\n5\\n2\\n5\\n10\") == \"0\"\nassert solution(\"5\\n10\\n5\\n5\\n10\") == \"0\""
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r'Input:\\n4\\n30\\n3\\n2\\n45') == '1\\n', 'Your solution is incorrect.'"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 1\nassert solution() == 3\nassert solution() == 5\nassert solution() == 9\nassert solution() == 15"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4) == 1, \"Expected 1, got {}\".format(solution(4))  # expected output: 1\n"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 1, \"Test failed\""
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(r'''\n4\n30\n3\n2\n45\n''') == '1'\n\nassert solution(r'''\n2\n20\n2\n10\n30\n''') == '3'\n\nassert solution(r'''\n3\n10\n5\n3\n15\n''') == '4'\n\nassert solution(r'''\n1\n5\n1\n5\n10\n''') == '5'\n\nassert solution(r'''\n3\n15\n10\n5\n20\n''') == '6'"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n30\\n3\\n2\\n45\") == 1, \"Test case 1 failed\""
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('inputs/MsHall.txt', 'r')) == '1\\n'\nassert solution(open('inputs/MsHall2.txt', 'r')) == '1\\n'\nassert solution(open('inputs/MsHall3.txt', 'r')) == '1\\n'\nassert solution(open('inputs/MsHall4.txt', 'r')) == '1\\n'"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n30\\n3\\n2\\n45\") == \"1\\n\", \"The output should be 1.\"\n\nfrom typing import List"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\"\nassert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\nassert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n5 7 8') == '0.000000000 0.880000000\\n0.000000000 -0.880000000\\n1.02037965897'"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\nprint('All test cases pass.')"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\nassert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n4 4 4\\n') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\\n0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '''\n0.000000000 1.360000000\n0.000000000 1.000000000\n0.000000000 -1.000000000\n0.000000000 0.360000000\n0.880000000 0.000000000\n-0.880000000 -0.360000000\n1.02037965897\n'''"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\\n\", \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\\n\")"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 4"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n\") == \"4\\n\"\nassert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n3\\n4\\n\") == \"4\\n\"\nassert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"4\\n\"\nassert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n\") == \"4\\n\"\nassert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n\") == \"4\\n\"\nassert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n\") == \"4\\n\""
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\") == 4\nassert solution(\"3\\n0 0\\n0 3\\n3 3\\n3 0\\n\") == 3\nassert solution(\"2\\n1 1\\n2 2\") == 2"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    4\n    0 0\n    0 3\n    3 3\n    3 0\n    2\n    1 1\n    2 2\n    ''') == '4'\n\nassert solution('''\n    3\n    0 0\n    0 3\n    3 3\n    3 0\n    ''') == '3'\n\nassert solution('''\n    5\n    0 0\n    0 3\n    3 3\n    3 0\n    0 0\n    0 3\n    3 3\n    3 0\n    ''') == '3'\n\nassert solution('''\n    4\n    0 0\n    0 3\n    3 3\n    3 0\n    2\n    1 1\n    2 2\n    1 2\n    ''') == '4'\n\nassert solution('''\n    2\n    0 0\n    0 3\n    3 3\n    3 0\n    0 0\n    0 3\n    3 3\n    3 0\n    2 0\n    2 3\n    3 3\n    3 0\n    ''') == '2'\n\nassert solution('''\n    3\n    0 0\n    0 3\n    3 3\n    3 0\n    2\n    1 1\n    2 2\n    1 2\n    1 3\n    ''') == '3'\n\nassert solution('''\n    3\n    0 0\n    0 3\n    3 3\n    3 0\n    2\n    1 1\n    2 2\n    1 2\n    1 3\n    0 1\n    0 3\n    3 3\n    3 0\n    ''') == '3'\n\nassert solution('''\n    4\n    0 0\n    0 3\n    3 3\n    3 0\n    2\n    1 1\n    2 2\n    1 2\n    1 3\n    0 0\n    0 3\n    3 3\n    3 0\n    2 0\n    2 3\n    3 3\n    3 0\n    0 1\n    0 3\n    3 3\n    3 0\n    ''') == '3'\n\nassert solution('''\n    4\n    0 0\n    0 3\n    3 3\n    3 0\n    2\n    1 1\n    2 2\n    1 2\n    1 3\n    0 0\n    0 3\n    3 3\n    3 0\n    2 0\n    2 3\n    3 3\n    3 0\n    0 0\n    0 3\n    3 3\n    3 0\n    2 0\n    2 3\n    3 3\n    3 0\n    0 0\n    0 3\n    3 3\n    3 0\n    2 0\n    2 3\n    3 3\n    3 0\n    0 0\n    0 3\n    3 3\n    3 0\n    2 0\n    2 3\n    3 3\n    3 0\n    0 0\n    0 3\n    3 3\n    3 0\n    2 0\n    2 3\n    3 3\n    3 0\n    0 0\n    0 3\n    3 3\n    3 0\n    2 0\n    2 3\n    3 3\n    3 0\n    0 0\n    0 3\n    3 3\n    3 0\n    2 0\n    2 3\n    3 3\n    3 0\n    0 0\n    0 3\n    3 3\n    3 0\n    2 0\n    2 3\n    3 3\n    3 0\n    0 0\n    0 3\n    3 3\n    3 0\n    2 0\n    2 3\n    3 3\n    3 0\n    0 0\n    0 3\n    3 3\n    3 0\n    2 0\n    2 3\n    3 3\n    3 0\n    0 0\n    0 3\n    3 3\n    3 0\n    2 0\n    2 3\n    3 3\n    3 0\n    0 0\n    0 3\n    3 3\n    3 0\n    2 0\n    2 3\n    3 3\n    3 0\n    0 0\n    0 3\n    3 3\n    3 0\n    2 0\n    2 3\n    3 3\n    3 0\n    0 0\n    0 3\n    3 3\n    3 0\n    2 0\n    2 3\n    3 3\n    3 0\n    0 0\n    0 3\n    3 3\n    3 0\n    2 0\n    2 3\n    3 3\n    3 0\n    0 0\n    0 3\n    3 3\n    3 0\n    2 0\n    2 3\n    3 3\n    3 0\n    0 0\n    0 3\n    3 3\n    3 0\n    2 0\n    2 3\n    3 3\n    3 0\n    0 0\n    "
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\") == \"4\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n\") == 4\nassert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n\") == 2\nassert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n\") == 1\nassert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n\") == 0\nassert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n\") == -1"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"4\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 4\nassert solution() == 5"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n\") == \"4\""
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == 4, \"The solution should be 4.\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected: {output}, Received: {solution(input())}\"\n"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\") == 2\nassert solution(\"1 0\\n0 1\\n0 2\\n0 3\") == 1\nassert solution(\"0 0\\n1 0\\n0 1\\n0 2\") == 1\nassert solution(\"0 0\\n0 1\\n1 0\\n0 1\") == 2\nassert solution(\"0 0\\n1 0\\n0 1\\n2 0\") == 3"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\") == \"2\\n3 2\\n3 1\"\n"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 0\\n0 1\\n0 2\\n0 3\\n') == '2\\n3 2\\n3 1\\n'\nassert solution('5 0\\n0 1\\n0 2\\n0 3\\n0 4') == '3\\n1 4\\n4 3\\n2 5\\n'\nassert solution('5 5\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5') == '3\\n1 5\\n4 4\\n2 6\\n5 4\\n'"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 0\\n0 1\\n0 2\\n0 3') == '2\\n3 2\\n3 1'"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 0\\n0 1\\n0 2\\n0 3\\n') == '2\\n3 2\\n3 1'\n"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\") == \"2\\n3 2\\n3 1\"\n"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Expected '{output}', but got '{solution(input())}'\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(b'4 0\\n0 1\\n0 2\\n0 3\\n') == '2\\n3 2\\n3 1\\n'\n"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\") == \"2\\n3 2\\n3 1\\n\"\n"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'ok'"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0 0\\n0 1.5 0\\n\") == \"ok\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0 0\\n0 1.5 0\") == \"ok\\n\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 0\\n0 1.5 0\") == \"ok\\n\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'ok'"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Input') == 'ok\\n'\nassert solution('Input') == 'def solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == \"__main__\":\\n    solution()\\n\\n'"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n0 0 0\\n0 1.5 0\") == \"ok\\n\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"ok\\n\"\n"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n0 0 0\\n0 1.5 0') == 'ok'"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n0 0 0\\n0 1.5 0') == 'ok\\n'"
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\\n\", \"Testcase 1 failed\"\n\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\\n\", \"Testcase 2 failed\"\n\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\\n\", \"Testcase 3 failed\"\n\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\\n\", \"Testcase 4 failed\"\n\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\\n\", \"Testcase 5 failed\"\n\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\\n\", \"Testcase 6 failed\"\n\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\\n\", \"Testcase 7 failed\"\n\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\\n\", \"Testcase 8 failed\"\n\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\\n\", \"Testcase 9 failed\"\n\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\\n\", \"Testcase 10 failed\"\n\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\\n\", \"Testcase 11 failed\"\n\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\\n\", \"Testcase 12 failed\"\n\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\\n\", \"Testcase 13 failed\"\n\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG"
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == '2\\nR 0\\nG 2'"
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\"\n"
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected_output, f\"Expected output: {expected_output}, but got {solution}\"\n"
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == '2\\nR 0\\nG 2'\nassert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n') == '2\\nR 0\\nG 2'\nassert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == '2\\nR 0\\nG 2'"
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"5 4\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\"\"\") == \"2\\nR 0\\nG 2\"\n"
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == '2\\nR 0\\nG 2'"
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n') == '2\\nR 0\\nG 2\\n'"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 2, \"The solution is incorrect. Please check the code provided.\"\n"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F') == '2\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n2 G H\\n1 I J\\n') == '3\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test failed: solution({input()}) == {output}, but should have been {solution(input())}\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F') == '2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    7 3 3 3\n    1 A B C\n    2 D E F\n    3 A E G\n    3 A C E\n    3 B D F\n    \"\"\"\n) == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F') == '2'\nassert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D E') == '1'\nassert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F') == '1'"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F') == 2\nprint('All tests passed')"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n') == '2'\nassert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n') == '2'\nassert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n') == '2'"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\\n\") == \"2\\n1 2 3\\n3 1 2\"\nassert solution(\"5\\nNNY\\nNYY\\nNNN\\nYNY\\n\") == \"3\\n1 2 3 4 5\\n3 1 2 4\"\nassert solution(\"3\\nYYY\\nNYY\\nYNY\\n\") == \"2\\n1 2 3\"\nassert solution(\"3\\nYYY\\nNYY\\nYNY\\n\") == \"2\\n1 2 3\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\"\nassert solution(\"1\\nY\\nN\\nN\") == \"0\"\n\nprint(\"All test cases pass.\")"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == expected, f\"Test failed: {solution(input)}\"\n"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\\n\") == \"2\\n1 2 3\\n3 1 2\\n\"\nassert solution(\"3\\nYYY\\nYNY\\nNYY\\n\") == \"2\\n1 2 3\\n3 1 2\\n\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\"\nassert solution(\"1\\nYYY\\nNYY\\nYNY\") == \"1\\n1 2 3\\n3 1 2\"\nassert solution(\"4\\nYNY\\nYNY\\nYNY\") == \"0\"\n\nfor _ in range(10):\n    print(solution(f\"{random.randint(2,80)}\\n{random.choice(['YYY', 'NYY', 'YNY'])}\"))"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\nYYY\\nNYY\\nYNY') == '2\\n1 2 3\\n3 1 2'\n\nprint(\"Sample Input:\")\nprint(\"3\")\nprint(\"YYY\")\nprint(\"NYY\")\nprint(\"YNY\")\n\nprint(\"\\nSample Output:\")\nprint(\"2\")\nprint(\"1 2 3\")\nprint(\"3 1 2\")"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\nYYY\\nNYY\\nYNY') == '2\\n1 2 3\\n3 1 2'\nassert solution('6\\nYYY\\nNYY\\nYNY\\nNYY\\nNYY\\nNYY\\nYNY') == '3\\n1 2 3\\n3 1 2\\n4 2 3\\n5 3 2\\n6 1 2'\nassert solution('3\\nNY\\nNY\\nNY\\nNY\\nNY\\nNY\\nNY') == '0'"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 'Solution not provided' # Add the solution here"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test case {tc} has wrong output. Expected: {output}, Received: {solution(input())}\" for tc, input, output in [\n    (\"Sample Input\", \"YYY\", \"Sample Output\"),\n    (\"Sample Input\", \"NYY\", \"0\"),\n    (\"Sample Input\", \"YNY\", \"3 1 2\"),\n]"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\\n\") == \"4\\n0\\n5\\n\"\nassert solution(\"3 3\\nx..xxxxxx\\n....xxxx\\n....xxxx\\n3\\n1 3\\n1 1\\n3 2\\n\") == \"4\\n0\\n5\\n\"\nassert solution(\"3 3\\nx..xxxxxx\\n....xxxx\\n....xxxx\\n3\\n1 3\\n1 1\\n3 2\\n\") == \"4\\n0\\n5\\n\"\nassert solution(\"3 3\\nx..xxxxxx\\n....xxxx\\n....xxxx\\n3\\n1 3\\n1 1\\n3 2\\n\") == \"4\\n0\\n5\\n\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"4\\n0\\n5\\n\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == output, f\"Solution error: expected {output}, got {solution(input)}\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == output, f\"Test failed for input {input}, expected output {output}\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\\n') == '4\\n0\\n5'"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '4\\n0\\n5\\n'"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '4\\n0\\n5\\n'"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\\n\") == \"4\\n0\\n5\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 3, \"..\", \"..\", \"..\", 3) == \"4\\n0\\n5\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2') == '4\\n0\\n5'\nassert solution('4 5\\nxx.\\n.xx\\n...\\n3') == '3\\n10\\n13'\nassert solution('4 5\\n..x\\nxx.\\n...\\n3') == '3\\n10\\n13'\nassert solution('1 2\\n..x\\n...x\\n...x\\n2') == '4\\n2\\n6'\nassert solution('1 2\\n..x\\n...x\\n...x\\n2') == '4\\n2\\n6'\n"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '''4.114 -2.842\n6.297 -0.784\n5.000 3.000'''"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    3\n    5\n    3\n    4\n    5 3\n''') == '''\n    4.114 -2.842\n    6.297 -0.784\n    5.000 3.000\n'''\n"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"\"\"\n4.114 -2.842\n6.297 -0.784\n5.000 3.000\n\"\"\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n5\\n3\\n4\\n5 3\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n5\\n3\\n4\\n5 3') == ['4.114', '6.297', '5.000']\n"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"The output '{solution(input())}' does not match the expected output '{output}'.\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"\"\"4.114 -2.842\n6.297 -0.784\n5.000 3.000\n\"\"\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == [4.114, 6.297, 5.000]\nassert solution() == [4.114, 6.297, 5.000]\nassert solution() == [4.114, 6.297, 5.000]\nassert solution() == [4.114, 6.297, 5.000]\nassert solution() == [4.114, 6.297, 5.000]\nassert solution() == [4.114, 6.297, 5.000]"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n5\\n3\\n4\\n5 3') == '4.114 -2.842\\n6.297 -0.784\\n5.000 3.000'"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '''\n4.114 -2.842\n6.297 -0.784\n5.000 3.000\n'''"
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == ['3', '5', '8', '10', '13']"
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, \"The solution does not match the expected output.\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    4 5\n    2 3 5 7\n    2\n    3\n    5\n    6\n    8\n    \"\"\"\n) == \"3\\n5\\n8\\n10\\n13\"\n\nassert solution(\n    \"\"\"\n    4 5\n    10 20 30 40 50\n    2\n    3\n    5\n    6\n    8\n    \"\"\"\n) == \"3\\n5\\n8\\n10\\n13\"\n\nassert solution(\n    \"\"\"\n    4 5\n    10 20 30 40 50\n    4\n    3\n    5\n    6\n    8\n    \"\"\"\n) == \"1\\n3\\n5\\n8\\n12\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3\\n5\\n8\\n10\\n13\\n\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"3\\n5\\n8\\n10\\n13\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(str(input())) == \"3\\n5\\n8\\n10\\n13\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\"\nassert solution(\"10\\n20\\n30\\n40\\n50\") == \"10\\n20\\n30\\n40\\n50\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input()) == sample_output()"
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\\n\"\nassert solution(\"4 5\\n1 2 3 4\\n3\") == \"1\\n2\\n3\\n\"\nassert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\\n\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0\\n\", \"Test failed\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n') == '0'\nassert solution('10 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n') == '6'"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == \"0\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \\n\") == \"0\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \\n\") == \"0\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \\n\") == \"0\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \\n\") == \"0\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \\n\") == \"0\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \\n\") == \"0\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \\n\") == \"0\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \\n\") == \"0\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n\") == \"0\"\nassert solution(\"8 4\\n1 2\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n\") == \"2\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n1 2 5''') == '0'\n\nassert solution('''8 3\n0 1\n1 2\n2 3\n3 4\n4 5\n2 6\n1 2 6 7\n2 5\n4 6\n5 7\n2 6 7 8\n2 7 8\n4 7 8\n6 8''') == '4'\n\nassert solution('''9 5\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n0 1 2 3 4 5 6 7 8 9\n1 2 3 4 5 6 7 8 9\n2 3 4 5 6 7 8 9\n3 4 5 6 7 8 9\n4 5 6 7 8 9\n5 6 7 8 9\n6 7 8 9\n7 8 9\n8 9''') == '8'"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n1 2 5 \n\"\"\"\n) == \"0\\n\"\n\nassert solution(\n\"\"\"\n8 4\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n2 5\n3 4\n3 5\n4 5\n\"\"\"\n) == \"1\\n\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == 0\nassert solution(\"5 2\\n0 1\\n1 2\\n2 3\\n2 4\\n1 3\\n1 2 3 4 \") == 1\nassert solution(\"3 2\\n0 1\\n1 2\\n2 3\\n2 4\\n1 3\\n1 2 3 4 \") == 2\nassert solution(\"4 2\\n0 1\\n1 2\\n2 3\\n2 4\\n1 3\\n1 2 3 4 \") == 2\nassert solution(\"3 5\\n0 1\\n1 2\\n2 3\\n2 4\\n1 3\\n1 2 3 4 \") == 2"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == sample_output, \"Test case failed\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n3 1\n50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n''') == '106\\n107\\n71\\n'"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n    3 1\n    50 2 5 C1 L1 C1 U1 C1\n    1 1 5 C1 L1 C100 U1 C1\n    70 3 1 C1\n    '''\n) == '106\\n107\\n71'\n\nassert solution(\n    '''\n    1 1 1 C1 L1 C1\n    '''\n) == '0'\n\nassert solution(\n    '''\n    2 2 1 C1 L1 C1\n    '''\n) == '0'\n\nassert solution(\n    '''\n    1 2 1 C1 L1 C1\n    '''\n) == '0'\n\nassert solution(\n    '''\n    2 3 1 C1 L1 C1\n    '''\n) == '0'\n\nassert solution(\n    '''\n    2 1 1 C1 L1 C1\n    '''\n) == '0'\n\nassert solution(\n    '''\n    2 1 1 C1 L1 C1\n    '''\n) == '0'\n\nassert solution(\n    '''\n    1 1 1 C1 L1 C1\n    '''\n) == '0'\n\nassert solution(\n    '''\n    2 1 1 C1 L1 C1\n    '''\n) == '0'\n\nassert solution(\n    '''\n    1 1 1 C1 L1 C1\n    '''\n) == '0'\n\nassert solution(\n    '''\n    2 1 1 C1 L1 C1\n    '''\n) == '0'\n\nassert solution(\n    '''\n    1 1 1 C1 L1 C1\n    '''\n) == '0'\n\nassert solution(\n    '''\n    2 1 1 C1 L1 C1\n    '''\n) == '0'\n\nassert solution(\n    '''\n    1 1 1 C1 L1 C1\n    '''\n) == '0'\n\nassert solution(\n    '''\n    2 1 1 C1 L1 C1\n    '''\n) == '0'\n\nassert solution(\n    '''\n    1 1 1 C1 L1 C1\n    '''\n) == '0'\n\nassert solution(\n    '''\n    2 1 1 C1 L1 C1\n    '''\n) == '0'\n\nassert solution(\n    '''\n    1 1 1 C1 L1 C1\n    '''\n) == '0'\n\nassert solution(\n    '''\n    2 1 1 C1 L1 C1\n    '''\n) == '0'\n\nassert solution(\n    '''\n    1 1 1 C1 L1 C1\n    '''\n) == '0'\n\nassert solution(\n    '''\n    2 1 1 C1 L1 C1\n    '''\n) == '0'\n\nassert solution(\n    '''\n    1 1 1 C1 L1 C1\n    '''\n) == '0'\n\nassert solution(\n    '''\n    2 1 1 C1 L1 C1\n    '''\n) == '0'\n\nassert solution(\n    '''\n    1 1 1 C1 L1 C1\n    '''\n) == '0'\n\nassert solution(\n    '''\n    2 1 1 C1 L1 C1\n    '''\n) == '0'\n\nassert solution(\n    '''\n    1 1 1 C1 L1 C1\n    '''\n) == '0'\n\nassert solution(\n    '''\n    2 1 1 C1 L1 C1\n    '''\n) == '0'\n\nassert solution(\n    '''\n    1 1 1 C1 L1 C1\n    '''\n) == '0'\n\nassert solution(\n    '''\n    2 1 1 C1 L1 C1\n    '''\n) == '0'\n\nassert solution(\n    '''\n    1 1 1 C1 L1 C1\n    '''\n) == '0'\n\nassert solution(\n    '''\n    2 1 1 C1 L1 C1\n    '''\n) == '0'\n\nassert solution(\n    '''\n    1 1 1 C1 L1 C1\n    '''\n) == '0'\n\nassert solution(\n    '''\n    2 1 1 C1 L1 C1\n    '''\n) == '0'\n\nassert solution(\n    '''\n    1 1 1 C1 L1 C1\n    '''\n) == '0'\n\nassert solution(\n    '''\n    2 1 1 C1 L1 C1\n    '''\n) == '0'\n\nassert solution(\n    '''\n    1 1 1 C1 L1 C1\n    '''\n) == '0'\n\nassert solution(\n    '''\n    2"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"106\\n107\\n71\"\n"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1') == '106\\n107\\n71'"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"106\\n107\\n71\", \"Test case 1 failed\"\n\nassert solution() == \"106\\n107\\n71\", \"Test case 2 failed\""
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"51\""
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 51\n"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2) == 51 % (10**9 + 7)\n\nfrom itertools import permutations"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\nAA\\n\") == \"51\""
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 51\nassert solution(\"123\") == 25\nassert solution(\"ABCD\") == 11\nassert solution(\"AABAB\") == 5\nassert solution(\"A\") == 0\nassert solution
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\nAA\") == \"51\\n\", \"Your solution is not correct.\""
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\nAA\") == 51, \"The solution is incorrect.\""
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\nAA\") == \"51\"\n\nimport itertools"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\nA\\n\") == \"51\"\n"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\nA\\n\") == 51"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"no ties\"\nassert solution(4) == \"no ties\"\nassert solution(5) == \"no ties\"\nassert solution(6) == \"no ties\""
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == \"1 2\\n\""
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([3, 29, 45, 56, 68, 1, 19, 43, 50, 72, 11, 25, 40, 49, 61, 9, 23, 31, 58, 63, 4, 27, 42, 54, 71, 14, 23, 39, 59, 63, 8, 17, 35, 55, 61, 15, 26, 42, 53, 71, 10, 25, 31, 57, 64, 6, 20, 44, 52, 68]) == \"no ties\", \"Bingo Tie Test Failed\""
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"no ties\" # Tie cannot occur\nassert solution(2) == \"1 2\" # Tie can occur with two cards\nassert solution(1) == \"2 3\" # Tie can occur with two cards\nassert solution(2) == \"1 2\" # Tie can occur with two cards\nassert solution(2) == \"2 3\" # Tie can occur with two cards\nassert solution(2) == \"1 2\" # Tie can occur with two cards\nassert solution(1) == \"2 3\" # Tie can occur with two cards\nassert solution(2) == \"1 2\" # Tie can occur with two cards\nassert solution(2) == \"2 3\" # Tie can occur with two cards\nassert solution(2) == \"1 2\" # Tie can occur with two cards\nassert solution(2) == \"1 3\" # Tie can occur with three cards\nassert solution(2) == \"2 3\" # Tie can occur with three cards\nassert solution(2) == \"1 3\" # Tie can occur with three cards\nassert solution(2) == \"1 2\" # Tie can occur with three cards\nassert solution(2) == \"2 3\" # Tie can occur with three cards\nassert solution(2) == \"1 2\" # Tie can occur with three cards\nassert solution(2) == \"1 3\" # Tie can occur with three cards\nassert solution(2) == \"2 3\" # Tie can occur with three cards\nassert solution(1) == \"2 3\" # Tie can occur with three cards\nassert solution(2) == \"1 3\" # Tie can occur with three cards\nassert solution(2) == \"1 2\" # Tie can occur with three cards\nassert solution(2) == \"2 3\" # Tie can occur with three cards\nassert solution(2) == \"1 3\" # Tie can occur with three cards\nassert solution(2) == \"2 3\" # Tie can occur with three cards\nassert solution(2) == \"1 3\" # Tie can occur with three cards\nassert solution(2) == \"2 3\" # Tie can occur with three cards\nassert solution(2) == \"1 2\" # Tie can occur with three cards\nassert solution(2) == \"2 3\" # Tie can occur with three cards\nassert solution(2) == \"1 3\" # Tie can occur with three cards\nassert solution(2) == \"1 2\" # Tie can occur with three cards\nassert solution(2) == \"2 3\" # Tie can occur with three cards\nassert solution(2) == \"1 3\" # Tie can occur with three cards\nassert solution(2) == \"2 3\" # Tie can occur with three cards\nassert solution(2) == \"1 3\" # Tie can occur with three cards\nassert solution(2) == \"2 3\" # Tie can occur with three cards\nassert solution(2) == \"1 3\" # Tie can occur with three cards\nassert solution(2) == \"2 3\" # Tie can occur with three cards\nassert solution(2) == \"1 3\" # Tie can occur with three cards\nassert solution(2) == \"2 3\" # Tie can occur with three cards\nassert solution(2) == \"1 2\" # Tie can occur with three cards\nassert solution(2) == \"1 3\" # Tie can occur with three cards\nassert solution(2) == \"2 3\" # Tie can occur with three cards\nassert solution(2) == \"2 3\" # Tie can occur with three cards\nassert solution(2) == \"2 3\" # Tie can occur with three cards\nassert solution(2) == \"2 3\" # Tie can occur with three cards\nassert solution(2) == \"2 3\" # Tie can occur with three cards\nassert solution(2) == \"2 3\" # Tie can occur with three cards\nassert solution(2) == \"2 3\" # Tie can occur with three cards\nassert solution(2) == \"2 3\" # Tie can occur with three cards\nassert solution(2) == \"2 3\" # Tie can occur with three cards\nassert solution(2) == \"2 3\" # Tie can occur with three cards\nassert solution(2) == \"2 "
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([3, 29, 45, 56, 68, 1, 19, 43, 50, 72, 11, 25, 40, 49, 61, 9, 23, 31, 58, 63, 4, 27, 42, 54, 71, 14, 23, 39, 59, 63, 8, 17, 35, 55, 61, 15, 26, 42, 53, 71, 10, 25, 31, 57, 64, 6, 20, 44, 52, 68]) == \"no ties\""
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\") == \"1 2\\n\"\n\nassert solution(\"14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n\") == \"1 2\\n\"\n\nassert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\") == \"3 2\\n\"\n\nassert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\") == \"3 2\\n\""
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"no ties\"  # Example 1"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\") == \"1 2\\n\"\nassert solution(\"14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n\") == \"1 2\\n\""
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'no ties'\nassert solution(input()) == '1 2'\nassert solution(input()) == '3 4'\nassert solution(input()) == '5 6'\nassert solution(input()) == '7 8'\nassert solution(input()) == '9 10'\nassert solution(input()) == '11 12'\nassert solution(input()) == '13 14'\nassert solution(input()) == '15 16'\nassert solution(input()) == '17 18'\nassert solution(input()) == '19 20'\nassert solution(input()) == '21 22'\nassert solution(input()) == '23 24'\nassert solution(input()) == '25 26'\nassert solution(input()) == '27 28'\nassert solution(input()) == '29 30'\nassert solution(input()) == '31 32'\nassert solution(input()) == '33 34'\nassert solution(input()) == '35 36'\nassert solution(input()) == '37 38'\nassert solution(input()) == '39 40'\nassert solution(input()) == '41 42'\nassert solution(input()) == '43 44'\nassert solution(input()) == '45 46'\nassert solution(input()) == '47 48'\nassert solution(input()) == '49 50'\nassert solution(input()) == '51 52'\nassert solution(input()) == '53 54'\nassert solution(input()) == '55 56'\nassert solution(input()) == '57 58'\nassert solution(input()) == '59 60'\nassert solution(input()) == '61 62'\nassert solution(input()) == '63 64'\nassert solution(input()) == '65 66'\nassert solution(input()) == '67 68'\nassert solution(input()) == '69 70'\nassert solution(input()) == '71 72'\nassert solution(input()) == '73 74'\nassert solution(input()) == '75 76'\nassert solution(input()) == '77 78'\nassert solution(input()) == '79 80'\nassert solution(input()) == '81 82'\nassert solution(input()) == '83 84'\nassert solution(input()) == '85 86'\nassert solution(input()) == '87 88'\nassert solution(input()) == '89 90'\nassert solution(input()) == '91 92'\nassert solution(input()) == '93 94'\nassert solution(input()) == '95 96'\nassert solution(input()) == '97 98'\nassert solution(input()) == '99 100'\nassert solution(input()) == '1 2'\nassert solution(input()) == '3 4'\nassert solution(input()) == '5 6'\nassert solution(input()) == '7 8'\nassert solution(input()) == '9 10'\nassert solution(input()) == '11 12'\nassert solution(input()) == '13 14'\nassert solution(input()) == '15 16'\nassert solution(input()) == '17 18'\nassert solution(input()) == '19 20'\nassert solution(input()) == '21 22'\nassert solution(input()) == '23 24'\nassert solution(input()) == '25 26'\nassert solution(input()) == '27 28'\nassert solution(input()) == '29 30'\nassert solution(input()) == '31 32'\nassert solution(input()) == '33 34'\nassert solution(input()) == '35 36'\nassert solution(input()) == '37 38'\nassert solution(input()) == '39 40'\nassert solution(input()) == '41 42'\nassert solution(input()) == '43 44'\nassert solution(input()) == '45 46'\nassert solution(input()) == '47"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\") == \"1 2\"\nassert solution(\"14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\") == \"1 2\"\nassert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n3 17 47 58 69\") == \"no ties\"\n"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == \"0\\n\\n\"\n"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\"\n"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == \"0\\n\"\nassert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == \"0\\n\"\nassert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == \"0\\n\"\nassert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == \"0\\n\"\nassert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == \"0\\n\""
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == '0\\n'\nassert solution('10\\n1 2 3\\n2 3 4\\n3 4 5\\n4 5 6') == '4\\n'"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '0', 'Expected output: 0'\n"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == 0\nassert solution(\"5\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\") == 1\nassert solution(\"10\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\") == 2"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == '0\\n'\nassert solution('4\\n1 2 3\\n4 5 6\\n7 8 9') == '1\\n'\nassert solution('5\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12') == '2\\n'"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == 0, \"The output should be 0.\"\nassert solution(\"5\\n3 2 1\\n1 2 3\\n1 2 3\\n1 2 3\\n2 3 1\") == 2, \"The output should be 2.\""
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == \"0\\n\"\nassert solution(\"5\\n1 2 3\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\") == \"0\\n1\\n2\\n3\\n4\\n5\"\nassert solution(\"6\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9\\n8 9 10\\n9 10 11\\n10 11 12\\n11 12 13\\n12 13 14\\n13 14 15\\n14 15 16\\n15 16 17\\n16 17 18\\n17 18 19\\n18 19 20\\n19 20 21\\n20 21 22\\n21 22 23\\n22 23 24\\n23 24 25\\n24 25 26\\n25 26 27\\n26 27 28\\n27 28 29\\n28 29 30\\n29 30 31\\n30 31 32\\n31 32 33\\n32 33 34\\n33 34 35\\n34 35 36\\n35 36 37\\n36 37 38\\n37 38 39\\n38 39 40\\n39 40 41\\n40 41 42\\n41 42 43\\n42 43 44\\n43 44 45\\n44 45 46\\n45 46 47\\n46 47 48\\n47 48 49\\n48 49 50\\n49 50 51\\n50 51 52\\n51 52 53\\n52 53 54\\n53 54 55\\n54 55 56\\n55 56 57\\n56 57 58\\n57 58 59\\n58 59 60\\n59 60 61\\n60 61 62\\n61 62 63\\n62 63 64\\n63 64 65\\n64 65 66\\n65 66 67\\n66 67 68\\n67 68 69\\n68 69 70\\n69 70 71\\n70 71 72\\n71 72 73\\n72 73 74\\n73 74 75\\n74 75 76\\n75 76 77\\n76 77 78\\n77 78 79\\n78 79 80\\n79 80 81\\n80 81 82\\n81 82 83\\n82 83 84\\n83 84 85\\n84 85 86\\n85 86 87\\n86 87 88\\n87 88 89\\n88 89 90\\n89 90 91\\n90 91 92\\n91 92 93\\n92 93 94\\n93 94 95\\n94 95 96\\n95 96 97\\n9"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4') == '0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\\n'\n"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 0.4\nassert solution(2) == 0\nassert solution(3) == 0.2\nassert solution(4) == 0.171428571429\nassert solution(5) == 0.228571428571"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571'\n"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\") == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\"\n"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\") == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\"\n\nimport math"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\") == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\"\nassert solution(\"5\\n1 1 1\\n1 2 1\\n1 3 1\\n1 4 1\\n1 5 1\") == \"0\"\nassert solution(\"1\\n1 1 1\") == \"0.1\"\nassert solution(\"2\\n1 1 1\\n1 2 1\\n1 3 1\\n1 4 1\\n1 5 1\") == \"0.2\"\nassert solution(\"3\\n1 1 1\\n1 2 1\\n1 3 1\\n1 4 1\\n1 5 1\") == \"0.3\"\nassert solution(\"4\\n1 1 1\\n1 2 1\\n1 3 1\\n1 4 1\\n1 5 1\") == \"0.4\"\nassert solution(\"5\\n1 1 1\\n1 2 1\\n1 3 1\\n1 4 1\\n1 5 1\") == \"0\"\nassert solution(\"1\\n1 1 1\") == \"0.1\"\nassert solution(\"2\\n1 1 1\\n1 2 1\\n1 3 1\\n1 4 1\\n1 5 1\") == \"0.2\"\nassert solution(\"3\\n1 1 1\\n1 2 1\\n1 3 1\\n1 4 1\\n1 5 1\") == \"0.3\"\nassert solution(\"4\\n1 1 1\\n1 2 1\\n1 3 1\\n1 4 1\\n1 5 1\") == \"0.4\"\nassert solution(\"5\\n1 1 1\\n1 2 1\\n1 3 1\\n1 4 1\\n1 5 1\") == \"0\"\nassert solution(\"1\\n1 1 1\") == \"0.1\"\nassert solution(\"2\\n1 1 1\\n1 2 1\\n1 3 1\\n1 4 1\\n1 5 1\") == \"0.2\"\nassert solution(\"3\\n1 1 1\\n1 2 1\\n1 3 1\\n1 4 1\\n1 5 1\") == \"0.3\"\nassert solution(\"4\\n1 1 1\\n1 2 1\\n1 3 1\\n1 4 1\\n1 5 1\") == \"0.4\"\nassert solution(\"5\\n1 1 1\\n1 2 1\\n1 3 1\\n1 4 1\\n1 5 1\") == \"0\"\nassert solution(\"1\\n1 1 1\") == \"0.1\"\nassert solution(\"2\\n1 1 1\\n1 2 1\\n1 3 1\\n1 4 1\\n1 5 1\") == \"0.2\"\nassert solution(\"3\\n1 1 1\\n1 2 1\\n1 3 1\\n1 4 1\\n1 5 1\") == \"0.3\"\nassert solution(\"4\\n1 1 1\\n1 2 1\\n1 3 1\\n1 4 1\\n1 5 1\") == \"0.4\"\nassert solution(\"5\\n1 1 1\\n1 2 1\\n1 3 1\\n1 4 1\\n1 5 1\") == \"0\"\nassert solution(\"1\\n1 1 1\") == \"0.1\"\nassert solution(\"2\\n1 1 1\\n1 2 1\\n1 3 1\\n1 4 1\\n1 5 1\") == \"0.2\"\nassert solution(\"3\\n1 1 1\\n"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\"\n"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\""
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\") == \"0.4\"\nassert solution(\"4\\n\") == \"0\"\nassert solution(\"3\\n\") == \"0.2\"\nassert solution(\"2\\n\") == \"0.171428571429\"\nassert solution(\"1\\n\") == \"0.228571428571\""
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(None) == \"\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected: '{expected_output}', but got: '{solution(input())}'\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == expected_output, \"Your code is wrong!\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\"\nassert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 6\") == \"impossible\"\nassert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 6\\n7 8\") == \"impossible\"\nassert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 6\\n-7 8\") == \"impossible\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\nimpossible\"\nassert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\nimpossible\"\nassert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\nimpossible\"\nassert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\nimpossible\"\nassert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\nimpossible\"\nassert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\nimpossible\"\nassert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\nimpossible\"\nassert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\nimpossible\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n4\n1 5\n3 3\n4 5\n-1 -6\n''') == '''\n1 + 5 = 6\n3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5\n'''\n\nassert solution('''\n3\n1 5\n3 3\n4 5\n-1 -6\n''') == '''\n1 + 5 = 6\n3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5\n'''\n\nassert solution('''\n5\n1 5\n3 3\n4 5\n-1 -6\n''') == '''\n1 + 5 = 6\n3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5\nimpossible\n'''\n\nassert solution('''\n4\n1 5\n1 6\n3 3\n4 5\n-1 -6\n''') == '''\n1 + 5 = 6\n3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5\n'''"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\n\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"\"\"\n4\n1\n4\n6\n0\n\"\"\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == ['4', '1', '4', '6', '0']"
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"5 3\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1\"\"\") == [4, 1, 4, 6, 0]\n\nassert solution(\"\"\"5 2\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1\"\"\") == [4, 1, 4, 6, 0]\n\nassert solution(\"\"\"5 3\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1\"\"\") == [0, 0, 0, 0, 0]\n\nassert solution(\"\"\"5 3\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1\"\"\") == [0, 0, 0, 0, 0]\n\nassert solution(\"\"\"5 3\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1\"\"\") == [4, 4, 4, 4, 4]\n\nassert solution(\"\"\"5 3\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1\"\"\") == [4, 4, 4, 4, 4]"
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(5) + '\\n' + '1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1') == '4\\n1\\n4\\n6\\n0'\n"
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n# Write your code here\\n\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\\n\") == \"4\\n1\\n4\\n6\\n0\"\nassert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\\n6 4 7\\n6 5 7\\n\") == \"4\\n6\\n\"\nassert solution(\"5 2\\n2 3\\n3 4\\n4 5\\n5 6\\n2 1 2\\n3 1 4\\n1 2 3\\n\") == \"0\\n\"\nassert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\\n6 4 7\\n\") == \"4\\n4\\n\"\nassert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\\n\") == \"4\\n1\\n\"\nassert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\\n6 4 7\\n6 5 7\\n\") == \"4\\n4\\n\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution.__name__ =='solution'\nassert solution.__doc__ == 'Number of ways to pick three integers a_i, a_j, and a_k such that a_i, a_j, and a_k are pairwise distinct and a_i + a_j = a_k.'"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4\\n\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2 3 4\") == 4\nassert solution(\"5\\n1 2 2 1 3\") == 2\nassert solution(\"6\\n1 1 2 3 4 4\") == 0\nassert solution(\"7\\n1 2 3 1 4 5\") == 4\nassert solution(\"8\\n1 2 3 4 5 6\") == 0"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Output an integer representing the number of ways.\\n\" + str(4) + \"\\n\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Output the number of ways to pick three integers a_i, a_j, a_k such that i, j, k are pairwise distinct and a_i + a_j = a_k.\"\n"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n4\n1 2 3 4\n\"\"\"\n) == \"4\\n\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\na1 2 3 4\\na2 1 3 4\\na3 1 2 4\\na4 1 2 3\") == 4\nassert solution(\"1\\na1\\na2\\na3\\na4\") == 6\nassert solution(\"2\\na1\\na3\\na4\\na2\") == 8\nassert solution(\"3\\na1\\na2\\na4\\na3\") == 12\nassert solution(\"4\\na1\\na2\\na3\\na4\") == 16\nassert solution(\"5\\na1\\na2\\na3\\na4\\na5\") == 20"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4\\n\", \"Please enter the correct number of arguments.\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2 3 4\\n\") == \"4\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"10\\n\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 31 2\\n20 60\\n50 90') == '4 3'"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"4 3\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"4 3\"\n"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\n"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\n"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\\n\") == \"4 3\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input_str)}\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\n"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"2 2 1\") == \"3\\n\"\nassert solution(stdin=\"2 3 1\") == \"4\\n\"\nassert solution(stdin=\"3 2 2\") == \"1\\n\"\nassert solution(stdin=\"3 4 2\") == \"3\\n\"\nassert solution(stdin=\"4 3 2\") == \"5\\n\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(2 2 1) == '3'"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2 1') == '3'"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 1\") == \"3\"\nassert solution(\"3 2 1\") == \"3\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 3 2\") == \"1\"\nassert solution(\"5 2 1\") == \"5\"\nassert solution(\"2 1 5\") == \"5\"\nassert solution(\"3 3 2\") == \"1\"\nassert solution(\"2 1 2\") == \"3\"\nassert solution(\"1 3 3\") == \"1\"\nassert solution(\"1 3 2\") == \"2\"\nassert solution(\"2 1 3\") == \"2\"\nassert solution(\"3 1 2\") == \"3\"\nassert solution(\"1 2 1\") == \"2\"\nassert solution(\"2 3 1\") == \"2\"\nassert solution(\"3 2 3\") == \"3\"\nassert solution(\"2 3 2\") == \"4\"\nassert solution(\"3 1 1\") == \"3\"\nassert solution(\"2 2 2\") == \"6\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"3 3 3\") == \"6\"\nassert solution(\"4 2 2\") == \"6\"\nassert solution(\"1 2 2\") == \"4\"\nassert solution(\"3 2 1\") == \"5\"\nassert solution(\"1 1 2\") == \"6\"\nassert solution(\"4 1 3\") == \"1\"\nassert solution(\"2 1 4\") == \"2\"\nassert solution(\"5 1 2\") == \"3\"\nassert solution(\"1 4 2\") == \"4\"\nassert solution(\"4 3 1\") == \"5\"\nassert solution(\"2 1 1\") == \"1\"\nassert solution(\"1 2 3\") == \"3\"\nassert solution(\"1 3 2\") == \"2\"\nassert solution(\"2 1 3\") == \"2\"\nassert solution(\"3 1 2\") == \"3\"\nassert solution(\"1 2 1\") == \"2\"\nassert solution(\"2 3 1\") == \"2\"\nassert solution(\"3 2 3\") == \"3\"\nassert solution(\"2 3 2\") == \"4\"\nassert solution(\"3 1 1\") == \"3\"\nassert solution(\"2 2 2\") == \"6\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"3 3 3\") == \"6\"\nassert solution(\"4 2 2\") == \"6\"\nassert solution(\"1 2 2\") == \"4\"\nassert solution(\"3 2 1\") == \"5\"\nassert solution(\"1 1 2\") == \"6\"\nassert solution(\"4 1 3\") == \"1\"\nassert solution(\"2 1 4\") == \"2\"\nassert solution(\"5 1 2\") == \"3\"\nassert solution(\"1 4 2\") == \"4\"\nassert solution(\"4 3 1\") == \"5\"\nassert solution(\"2 1 1\") == \"1\"\nassert solution(\"1 2 3\") == \"3\"\nassert solution(\"1 3 2\") == \"2\"\nassert solution(\"2 1 3\") == \"2\"\nassert solution(\"3 1 2\") == \"3\"\nassert solution(\"1 2 1\") == \"2\"\nassert solution(\"2 3 1\") == \"2\"\nassert solution(\"3 2 3\") == \"3\"\nassert solution(\"2 3 2\") == \"4\"\nassert solution(\"3 1 1\") == \"3\"\nassert solution(\"2 2 2\") == \"6\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"3 3 3\") == \"6\"\nassert solution(\"4 2 2\") == \"6\"\nassert solution(\"1 2 2\") == \"4\"\nassert solution(\"3 2 1\") == \"5\"\nassert solution(\"1 1 2\") == \"6\"\nassert solution(\"4 1 3\") == \"1\"\nassert solution(\"2 1 4\") == \"2\"\nassert solution(\"5 1 2\") == \"3\"\nassert solution(\"1 4 2\") == \"4\"\nassert solution(\"4 3 1\") == \"5\"\nassert solution(\"2"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '3\\n'\n"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 2 1') == '3\\n'"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin: str) == \"3\", \"Test 1\"\nassert solution(stdin: str) == \"6\", \"Test 2\"\nassert solution(stdin: str) == \"0\", \"Test 3\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 1\") == 3\nassert solution(\"3 3 2\") == 6"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"2 2 1\") == \"3\" # This assertion should pass"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 1\") == \"3\\n\"\n\nassert solution(\"1 2 2\") == \"6\\n\"\n\nassert solution(\"3 4 3\") == \"1\\n\"\n\nassert solution(\"1 2 1\") == \"1\\n\"\n\nassert solution(\"5 4 2\") == \"4\\n\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1341 2412 1200 3112 2391') == '3 1\\n'\n"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\\n0\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 0\\n0\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\") == \"2 1\\n1\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\") == \"2 0\\n1\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\") == \"1 1\\n2\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\") == \"1 0\\n2\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == '''\n5\n1341 2412 1200 3112 2391\n3 1\n'''"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"The solution is incorrect. Expected output: '{expected_output}'.\"\n"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1341 2412 1200 3112 2391\") == \"3 1\"\n"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n1341\\n2412\\n1200\\n3112') == '3 1'\nassert solution('5\\n1341\\n2412\\n1200\\n3112') == '3 1'\nassert solution('5\\n1341\\n2412\\n1200\\n3112\\n4200\\n3400') == '3 1'\nassert solution('5\\n1341\\n2412\\n1200\\n3112\\n4200\\n3400\\n2391') == '3 1'\nassert solution('5\\n1341\\n2412\\n1200\\n3112\\n4200\\n3400\\n2391\\n1341') == '3 1'"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n1341 2412 1200 3112 2391') == '3 1'\nassert solution('5\\n1341 2412 1200 3112 2391 1341 2412 1200 3112 2391') == '3 1'\nassert solution('5\\n1341 2412 1200 3112 2391 1341 2412 1200 3112 2391 1341 2412 1200 3112 2391') == '3 1'\nassert solution('5\\n1341 2412 1200 3112 2391 1341 2412 1200 3112 2391 1341 2412 1200 3112 2391 1341 2412 1200 3112 2391') == '3 1'\nassert solution('5\\n1341 2412 1200 3112 2391 1341 2412 1200 3112 2391 1341 2412 1200 3112 2391 1341 2412 1200 3112 2391 1341 2412 1200 3112 2391 1341 2412 1200 3112 2391 1341 2412 1200 3112 2391 1341 2412 1200 3112 2391 1341 2412 1200 3112 2391 1341 2412 1200 3112 2391 1341 2412 1200 3112 2391 1341 2412 1200 3112 2391 1341 2412 1200 3112 2391 1341 2412 1200 3112 2391 1341 2412 1200 3112 2391 1341 2412 1200 3112 2391 1341 2412 1200 3112 2391 1341 2412 1200 3112 2391 1341 2412 1200 3112 2391 1341 2412 1200 3112 2391 1341 2412 1200 3112 2391 1341 2412 1200 3112 2391 1341 2412 1200 3112 2391 1341 2412 1200 3112 2391 1341 2412 1200 3112 2391 1341 2412 1200 3112 2391 1341 2412 1200 3112 2391 1341 2412 1200 3112 2391 1341 2412 1200 311"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Expected output: {output()}, but got: {solution(input())}\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Received: {solution(input())}\"\n"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '6\\n'"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4') == '6\\n'"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\\n\"\n"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"6\\n\", \"Solution is incorrect.\""
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\\n\"\n"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n5 10 12\") == \"6\"\n"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    10 20\n    3 5\n    1 3 7\n    2 1 1\n    2 3 2\n    2 3 5\n    \"\"\"\n) == \"6\""
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r').read()) == '6'"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\""
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\""
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\"\"0 1 -1\"\"\""
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n2 ab b\\n1 b\") == \"0 1\\n-1 0\"\nassert solution(\"2\\n2 ab c\\n1 d\") == \"0 1\\n-1 0\"\nassert solution(\"2\\n2 ab d\\n1 e\") == \"0 1\\n-1 0\"\nassert solution(\"2\\n2 ab f\\n1 g\") == \"-1 0\"\nassert solution(\"2\\n2 ab g\\n1 h\") == \"-1 0\"\nassert solution(\"2\\n2 ab i\\n1 j\") == \"0 1\\n-1 0\"\nassert solution(\"2\\n2 ab j\\n1 k\") == \"0 1\\n-1 0\"\nassert solution(\"2\\n2 ab l\\n1 m\") == \"0 1\\n-1 0\"\nassert solution(\"2\\n2 ab n\\n1 o\") == \"0 1\\n-1 0\"\nassert solution(\"2\\n2 ab p\\n1 q\") == \"0 1\\n-1 0\"\nassert solution(\"2\\n2 ab r\\n1 s\") == \"0 1\\n-1 0\"\nassert solution(\"2\\n2 ab t\\n1 u\") == \"0 1\\n-1 0\"\nassert solution(\"2\\n2 ab v\\n1 w\") == \"0 1\\n-1 0\"\nassert solution(\"2\\n2 ab x\\n1 y\") == \"0 1\\n-1 0\"\nassert solution(\"2\\n2 ab z\\n1 z\") == \"0 1\\n-1 0\"\nassert solution(\"2\\n2 ab aa\\n1 aa\") == \"0 1\\n-1 0\"\nassert solution(\"2\\n2 ab ab\\n1 ab\") == \"0 1\\n-1 0\"\nassert solution(\"2\\n2 ab ac\\n1 ac\") == \"0 1\\n-1 0\"\nassert solution(\"2\\n2 ab ad\\n1 ad\") == \"0 1\\n-1 0\"\nassert solution(\"2\\n2 ab ae\\n1 ae\") == \"0 1\\n-1 0\"\nassert solution(\"2\\n2 ab af\\n1 af\") == \"0 1\\n-1 0\"\nassert solution(\"2\\n2 ab ag\\n1 ag\") == \"0 1\\n-1 0\"\nassert solution(\"2\\n2 ab ah\\n1 ah\") == \"0 1\\n-1 0\"\nassert solution(\"2\\n2 ab ai\\n1 ai\") == \"0 1\\n-1 0\"\nassert solution(\"2\\n2 ab aj\\n1 aj\") == \"0 1\\n-1 0\"\nassert solution(\"2\\n2 ab ak\\n1 ak\") == \"0 1\\n-1 0\"\nassert solution(\"2\\n2 ab al\\n1 al\") == \"0 1\\n-1 0\"\nassert solution(\"2\\n2 ab am\\n1 am\") == \"0 1\\n-1 0\"\nassert solution(\"2\\n2 ab an\\n1 an\") == \"0 1\\n-1 0\"\nassert solution(\"2\\n2 ab ap\\n1 ap\") == \"0 1\\n-1 0\"\nassert solution(\"2\\n2 ab ar\\n1 ar\") == \"0 1\\n-1 0\"\nassert solution(\"2\\n2 ab as\\n1 as\") == \"0 1\\n-1 0\"\nassert solution(\"2\\n2 ab at\\n1 at\") == \"0 1\\n-1 0\"\nassert solution(\"2\\n2 ab au\\n1 au\") == \"0 1\\n-1 0\"\nassert solution(\"2\\n2 ab aw\\n1 aw\") == \"0 1\\n-1 0\"\nassert solution(\"2\\n2 ab ax\\n1 ax\") == \"0 1\\n-1 0\"\nassert solution(\"2\\n2 ab az\\n1 az\") == \"0 1\\n-1 0\"\nassert solution(\"2\\n2 ab ba\\n1 ba\") == \"0 1\\n-1 0\"\nassert solution(\"2\\n2 ab bb\\n1"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n2 ab b\\n1 b\") == \"0 1 -1\"\nassert solution(\"2\\n2 abb\\n1 bb\") == \"0 1 -1\"\nassert solution(\"2\\n2 ab\\n1 aa\") == \"0 1 -1\"\nassert solution(\"2\\n2 abcd\\n1 abcd\") == \"0 1 -1\"\nassert solution(\"2\\n2 abcd\\n1 abcd\") == \"0 1 -1\"\nassert solution(\"2\\n2 abcd\\n1 abcd\") == \"0 1 -1\"\nassert solution(\"2\\n2 abcd\\n1 abcd\") == \"0 1 -1\"\nassert solution(\"2\\n2 abcd\\n1 abcd\") == \"0 1 -1\""
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n2 ab b\\n1 b') == '0 1 \\n-1 0'"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"0 1 -1\""
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n2 ab b\\n1 b\") == \"0 1 \\n-1 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"2\\n2 ab b\\n1 a\\n1 a\") == \"0 1 \\n-1 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"2\\n2 ab b\\n1 a\\n1 b\") == \"0 1 \\n-1 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"3\\n2 ab a\\n1 a\\n2 b\") == \"0 1 \\n-1 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"5\\n1 a b\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\n1 b\\n1 a\\"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n2 ab b\\n1 b') == '0 1\\n-1 0'"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n2 ab b\\n1 b\") == \"0 1 -1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\n"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n2 ab b\\n1 b\") == \"0 1 \\n-1 0\"\nassert solution(\"2\\n3 ab b\\n1 b\") == \"0 1 \\n-1 0\"\nassert solution(\"2\\n1 ab b\\n1 b\") == \"0 1 \\n-1 0\"\nassert solution(\"2\\n3 ab c\\n1 b\") == \"0 1 \\n-1 0\"\nassert solution(\"2\\n2 ab b\\n2 c\") == \"0 1 \\n-1 0\"\nassert solution(\"2\\n3 ab b\\n2 c\") == \"0 1 \\n-1 0\"\nassert solution(\"2\\n1 ab b\\n2 c\") == \"0 1 \\n-1 0\"\nassert solution(\"2\\n3 ab c\\n2 c\") == \"0 1 \\n-1 0\"\nassert solution(\"2\\n2 ab b\\n3 c\") == \"0 1 \\n-1 0\"\nassert solution(\"2\\n3 ab b\\n3 c\") == \"0 1 \\n-1 0\"\nassert solution(\"2\\n1 ab b\\n3 c\") == \"0 1 \\n-1 0\"\nassert solution(\"2\\n3 ab c\\n3 c\") == \"0 1 \\n-1 0\"\nassert solution(\"2\\n2 ab b\\n4 c\") == \"0 1 \\n-1 0\"\nassert solution(\"2\\n3 ab b\\n4 c\") == \"0 1 \\n-1 0\"\nassert solution(\"2\\n1 ab b\\n4 c\") == \"0 1 \\n-1 0\"\nassert solution(\"2\\n3 ab c\\n4 c\") == \"0 1 \\n-1 0\"\nassert solution(\"2\\n2 ab b\\n5 c\") == \"0 1 \\n-1 0\"\nassert solution(\"2\\n3 ab b\\n5 c\") == \"0 1 \\n-1 0\"\nassert solution(\"2\\n1 ab b\\n5 c\") == \"0 1 \\n-1 0\"\nassert solution(\"2\\n3 ab c\\n5 c\") == \"0 1 \\n-1 0\"\nassert solution(\"2\\n2 ab b\\n6 c\") == \"0 1 \\n-1 0\"\nassert solution(\"2\\n3 ab b\\n6 c\") == \"0 1 \\n-1 0\"\nassert solution(\"2\\n1 ab b\\n6 c\") == \"0 1 \\n-1 0\"\nassert solution(\"2\\n3 ab c\\n6 c\") == \"0 1 \\n-1 0\"\nassert solution(\"2\\n2 ab b\\n7 c\") == \"0 1 \\n-1 0\"\nassert solution(\"2\\n3 ab b\\n7 c\") == \"0 1 \\n-1 0\"\nassert solution(\"2\\n1 ab b\\n7 c\") == \"0 1 \\n-1 0\"\nassert solution(\"2\\n3 ab c\\n7 c\") == \"0 1 \\n-1 0\"\nassert solution(\"2\\n2 ab b\\n8 c\") == \"0 1 \\n-1 0\"\nassert solution(\"2\\n3 ab b\\n8 c\") == \"0 1 \\n-1 0\"\nassert solution(\"2\\n1 ab b\\n8 c\") == \"0 1 \\n-1 0\"\nassert solution(\"2\\n3 ab c\\n8 c\") == \"0 1 \\n-1 0\"\nassert solution(\"2\\n2 ab b\\n9 c\") == \"0 1 \\n-1 0\"\nassert solution(\"2\\n3 ab b\\n9 c\") == \"0 1 \\n-1 0\"\nassert solution(\"2\\n1 ab b\\n9 c\") == \"0 1 \\n-1 0\"\nassert solution(\"2\\n3 ab c\\n9 c\") == \"0 1 \\n-1 0\"\nassert solution(\"2\\n2 ab b\\n10 c\") == \"0 1 \\n-1 0\"\nassert solution(\"2\\n3 ab b\\n10 c\") == \"0 1 \\n-1 0"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Input: {input()}, Output: {solution(input())}, Expected: {expected}\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, \"The given input and output does not match.\"\n"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\\n\") == \"1\\n3\\n\"\nassert solution(\"1 1 1\\n1 1 1\\n\") == \"1\\n1\\n\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"1\\n1\\n1\\n1\\n\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n2 4\n1 1 2\n2\n1 1 2\n2\n''') == '1\\n3'\n\nassert solution('''\n3 2\n1 2 3\n2\n1 3 2\n2\n''') == '1\\n3'\n\nassert solution('''\n3 2\n1 2 3\n1\n1 3 2\n2\n''') == '0'\n\nassert solution('''\n3 2\n1 2 3\n3\n1 3 2\n2\n''') == '1\\n3'\n\nassert solution('''\n1 3\n2 3\n1\n2 3\n2\n''') == '0'\n\nassert solution('''\n1 3\n2 3\n3\n2 3\n2\n''') == '1\\n3'\n\nassert solution('''\n3 3\n1 2 3\n1\n1 2 3\n2\n''') == '0'\n\nassert solution('''\n3 3\n1 2 3\n3\n1 2 3\n2\n''') == '1\\n3'\n\nassert solution('''\n1 3\n2 3\n3\n2 3\n1\n''') == '0'\n\nassert solution('''\n1 3\n2 3\n3\n2 3\n1\n''') == '1\\n3'\n\nassert solution('''\n3 1\n1 2 3\n1\n1 2 3\n2\n''') == '0'\n\nassert solution('''\n3 1\n1 2 3\n3\n1 2 3\n2\n''') == '1\\n3'\n\nassert solution('''\n1 1\n2 2\n1\n2 2\n2\n''') == '0'\n\nassert solution('''\n1 1\n2 2\n3\n2 2\n2\n''') == '1\\n3'\n\nassert solution('''\n3 2\n1 2 3\n1\n1 2 3\n3\n''') == '0'\n\nassert solution('''\n3 2\n1 2 3\n3\n1 2 3\n1\n''') == '1\\n3'\n\nassert solution('''\n3 2\n1 2 3\n1\n1 2 3\n3\n''') == '0'\n\nassert solution('''\n3 2\n1 2 3\n1\n1 2 3\n3\n''') == '1\\n3'\n\nassert solution('''\n1 3\n2 3\n1\n2 3\n1\n''') == '0'\n\nassert solution('''\n1 3\n2 3\n1\n2 3\n1\n''') == '1\\n3'\n\nassert solution('''\n3 3\n1 2 3\n1\n1 2 3\n3\n''') == '0'\n\nassert solution('''\n3 3\n1 2 3\n3\n1 2 3\n1\n''') == '1\\n3'\n\nassert solution('''\n1 3\n2 3\n1\n2 3\n1\n''') == '0'\n\nassert solution('''\n1 3\n2 3\n1\n2 3\n1\n''') == '1\\n3'\n\nassert solution('''\n3 1\n1 2 3\n1\n1 2 3\n3\n''') == '0'\n\nassert solution('''\n3 1\n1 2 3\n3\n1 2 3\n1\n''') == '1\\n3'\n\nassert solution('''\n1 1\n2 2\n1\n2 2\n2\n''') == '0'\n\nassert solution('''\n1 1\n2 2\n3\n2 2\n2\n''') == '1\\n3'\n\nassert solution('''\n3 2\n1 2 3\n1\n1 2 3\n3\n''') == '0'\n\nassert solution('''\n3 2\n1 2 3\n3\n1 2 3\n1\n''') == '1\\n3'\n\nassert solution('''\n3 2\n1 2 3\n1\n1 2 3\n3\n''') == '0'\n\nassert solution('''\n3 2\n1 2 3\n1\n1 2 3\n3\n''') == '1\\n3'"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"3 10\\n1 1 2 3 4 5\\n1 1 1 1 1 1\\n2\\n2 2 2 2 2 2\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n\") == \"1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"10 10\\n1 1 2 3 4 5\\n1 1 1 1 1 1\\n2\\n2 2 2 2 2 2\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n\") == \"3\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 4\\n1 1 2\\n2\\n1 1 2\\n2') == '1\\n3'"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1\\n3\\n\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 4\\n1 1 2\\n2\\n1 1 2\\n2\\n') == '1\\n3'\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == '1'\nassert solution(100) == '3'"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"The solution is not correct. Please provide the correct solution.\\nExpected: {expected}\\nActual: {solution(input())}\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"7\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n0 5 2\\n5 0 4\\n2 4 0\") == \"7\""
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"7\\n\""
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('0 5 2\\n5 0 4\\n2 4 0') == '7\\ndef solution(stdin: str) -> str:\\npass\\n'\nassert solution('0 1 1\\n1 0 0') == '1\\ndef solution(stdin: str) -> str:\\npass\\n'"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"7\\n\""
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '7\\n'"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n3\n0 5 2\n5 0 4\n2 4 0\n''') == '7\\n'"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"7\\n\""
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='3\\n0 5 2\\n5 0 4\\n2 4 0') == '7\\n7\\n'\n"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"7\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1099511627776) == 8, \"Expected output: 8\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1099511627776\") == \"8\"\nassert solution(\"1073741824\") == \"1\"\nassert solution(\"9223372036854775807\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2147483647\") == \"1\"\nassert solution(\"4294967295\") == \"1\"\nassert solution(\"0\") == \"1\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1099511627776\") == \"8\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1099511627776\") == \"8\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1099511627776\") == 8"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1099511627776\") == \"8\\n\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1099511627776) == 8\nassert solution(10) == 0\nassert solution(1000000000) == 316885370\nassert solution(1000000001) == 1268744226\nassert solution(1000000005) == 271930400\nassert solution(1000000009) == 1557960710\nassert solution(1000000012) == 1557960710\nassert solution(1000000015) == 271930400\nassert solution(1000000018) == 316885370\nassert solution(1000000021) == 316885370\nassert solution(1000000024) == 1268744226\nassert solution(1000000027) == 8\nassert solution(1000000030) == 0\nassert solution(1000000033) == 0\nassert solution(1000000036) == 0\nassert solution(1000000039) == 0\nassert solution(1000000042) == 0\nassert solution(1000000045) == 0\nassert solution(1000000048) == 0\nassert solution(1000000051) == 0\nassert solution(1000000054) == 0\nassert solution(1000000057) == 0\nassert solution(1000000060) == 0\nassert solution(1000000063) == 0\nassert solution(1000000066) == 0\nassert solution(1000000069) == 0\nassert solution(1000000072) == 0\nassert solution(1000000075) == 0\nassert solution(1000000078) == 0\nassert solution(1000000081) == 0\nassert solution(1000000084) == 0\nassert solution(1000000087) == 0\nassert solution(1000000090) == 0\nassert solution(1000000093) == 0\nassert solution(1000000096) == 0\nassert solution(1000000099) == 0\nassert solution(1000000102) == 0\nassert solution(1000000105) == 0\nassert solution(1000000108) == 0\nassert solution(1000000111) == 0\nassert solution(1000000114) == 0\nassert solution(1000000117) == 0\nassert solution(1000000120) == 0\nassert solution(1000000123) == 0\nassert solution(1000000126) == 0\nassert solution(1000000129) == 0\nassert solution(1000000132) == 0\nassert solution(1000000135) == 0\nassert solution(1000000138) == 0\nassert solution(1000000141) == 0\nassert solution(1000000144) == 0\nassert solution(1000000147) == 0\nassert solution(1000000150) == 0\n"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1099511627776\") == \"8\"\n"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1099511627776) == 8"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\nprint(f\"Solution: {solution(input())}\")"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3\\nx..\\n.x.\\nx.x') == 2"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\", \"Test failed\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\"\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\"\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\"\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\"\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\"\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\"\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\"\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\"\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\"\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\"\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\"\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\"\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\"\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\"\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\"\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\"\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\"\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\"\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\"\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\"\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\"\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\"\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\"\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\"\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\"\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\"\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\"\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\"\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\"\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\"\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\"\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\"\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\"\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\"\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\"\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\"\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\"\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\"\nassert solution(\"5 5\\nx...\\nx...\\nx...\\n\") == \"2\\n\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\nx..\\n.x.\\nx.x') == '2'\nassert solution('5 5\\nxx.\\nx..') == '1'\nassert solution('10 10\\nx..x\\nxx..') == '5'"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\\n\"\nassert solution(input()) == \"2\\n\"\nassert solution(input()) == \"2\\n\"\nassert solution(input()) == \"2\\n\"\nassert solution(input()) == \"2\\n\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\\n\"\n"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3\\nx..\\n.x.\\nx.x') == '2'\nassert solution('1 2\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3\\nx..\\n.x.\\nx.x\\n') == '2'\nprint(\"All tests passed!\")"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"9\\n-1\\n5\\n6\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected_output, f\"The solution is incorrect. \\nExpected output: {expected_output}\\nGot output: {solution}\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == '''\n"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"9\\n-1\\n5\\n6\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0') == '9\\n-1\\n5\\n6'\n\nassert solution('5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\\n6 3 4\\n7 1 4') == '9\\n-1\\n5\\n6'\n\nassert solution('5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\\n6 3 4\\n7 1 4\\n8 5 0') == '9\\n-1\\n5\\n6'\n\nassert solution('5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\\n6 3 4\\n7 1 4\\n8 5 0\\n9 0 1') == '9\\n-1\\n5\\n6'"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0') == '9\\n-1\\n5\\n6'"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0') == '9\\n-1\\n5\\n6'"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\") == \"9\\n-1\\n5\\n6\"\n"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\") == \"9\\n-1\\n5\\n6\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0') == '9\\n-1\\n5\\n6'"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(n=3)) == \"91\"\nprint(solution(str(n=3)))  # Output: 91\n\nassert solution(str(n=2)) == \"71\"\nprint(solution(str(n=2)))  # Output: 71\n\nassert solution(str(n=3)) == \"91\"\nprint(solution(str(n=3)))  # Output: 91"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\""
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\\n\") == \"91\\n\""
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\\n\") == \"91\""
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20') == '91'"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"91\", \"Expected output: 91, got: \" + solution(stdin)\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\\n\") == \"91\"\nassert solution(\"4\\n1 1 20 50 100 150\\n3 2 50 50 50 50\\n2 1 50 50 50 50\\n\") == \"30\""
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\"\nassert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\"\nassert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\"\nassert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\"\nassert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\"\nassert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\"\nassert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\"\nassert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\"\nassert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\"\nassert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\"\nassert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\"\nassert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\"\nassert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\"\nassert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\"\nassert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\"\nassert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\"\nassert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 9"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20') == '91'"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    3\n    1 1 40 30 20 10\n    3 1 95 95 95 10\n    2 1 95 50 30 20\n    \"\"\"\n) == \"91\""
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n15 20\\n0\\n1 1\") == \"15\""
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"15 20\") == \"15\\n\"\nassert solution(\"0\\n1 1\") == \"15\\n\"\nassert solution(\"2\\n10 20 30\") == \"15\\n\""
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5') == '15'\nassert solution('5') == '15'\nassert solution('5') == '15'\nassert solution('5') == '15'\nassert solution('5') == '15'\n"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 15\n"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n15 20\\n0\\n1 1\") == \"15\"\nassert solution(\"3\\n10 20 25\\n0\\n2 1 3 4\") == \"10\"\nassert solution(\"4\\n30 30 30 30\\n0\\n1 2 3 4 5\") == \"30\"\nassert solution(\"5\\n100 200 300 400 500\\n0\\n1 2 3 4 5 6\") == \"50\""
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"15 20\\n0\\n1 1\\n\") == 15, \"Test 1 Failed\"\nassert solution(\"15 20\\n0\\n2 2\\n3 1\\n4 0\\n5 0\\n\") == 60, \"Test 2 Failed\"\nassert solution(\"15 20\\n0\\n1 1\\n\") == 15, \"Test 3 Failed\"\nassert solution(\"15 20\\n0\\n1 1\\n2 0\\n3 1\\n4 0\\n5 0\\n\") == 120, \"Test 4 Failed\"\nassert solution(\"15 20\\n0\\n1 1\\n2 0\\n3 1\\n4 0\\n5 0\\n6 1\\n\") == 150, \"Test 5 Failed\"\n"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"15 20\\n0\\n1 1\") == \"15\\n\"\n"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == solution(sample_input)"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0\") == 15\nassert solution(\"1 1\") == 15"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\\n') == 'impossible'"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\") == \"impossible\""
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 'impossible', \"Your solution is incorrect. The output should be 'impossible'.\""
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"impossible\"\nprint(\"impossible\")"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'impossible', \"Expected 'impossible' but got '{}'.\".format(solution(stdin))"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\") == \"impossible\"\nassert solution(\"10 4\\n1 1 100\\n2 2 200\\n3 3 300\\n4 4 400\") == \"definitely possible\"\nassert solution(\"1 1 1\\n2 2 2\\n3 3 3\\n4 4 4\") == \"definitely impossible\""
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\") == \"impossible\""
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == \"impossible\""
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\nr'''\n5 4\n3 1 375\n2 5 283\n1 4 716\n3 4 98\n''') == 'impossible'\n\nassert solution(\nr'''\n7 3\n2 1 50\n1 3 45\n2 4 65\n3 5 100\n4 6 150\n5 7 200\n''') == 'definitely possible'\n\nassert solution(\nr'''\n8 6\n2 2 75\n1 5 50\n2 3 45\n3 6 30\n4 5 25\n5 4 20\n6 3 15\n7 6 10\n''') == 'impossible'\n\nassert solution(\nr'''\n5 3\n3 2 1\n4 1 3\n5 2 4\n6 3 5\n7 4 6\n8 5 7\n''') == 'definitely possible'\n\nassert solution(\nr'''\n9 5\n1 1 25\n2 2 30\n3 3 35\n4 4 40\n5 5 45\n6 6 50\n7 7 55\n8 8 60\n9 9 65\n''') == 'impossible'\n\nassert solution(\nr'''\n10 9\n1 2 15\n2 5 20\n3 4 25\n4 7 30\n5 6 35\n6 9 40\n7 8 45\n8 7 50\n9 6 55\n10 5 60\n''') == 'definitely possible'\n\nassert solution(\nr'''\n10 7\n1 2 50\n2 5 45\n3 4 40\n4 7 35\n5 6 30\n6 9 25\n7 8 20\n8 7 15\n9 6 10\n10 5 5\n''') == 'impossible'\n\nassert solution(\nr'''\n20 15\n1 4 25\n2 7 30\n3 6 35\n4 5 40\n5 8 45\n6 7 50\n7 6 55\n8 5 60\n9 4 65\n10 3 70\n11 2 75\n12 1 80\n13 4 85\n14 7 90\n15 6 95\n''') == 'definitely possible'\n\nassert solution(\nr'''\n20 10\n1 1 10\n2 2 15\n3 3 20\n4 4 25\n5 5 30\n6 6 35\n7 7 40\n8 8 45\n9 9 50\n10 10 55\n''') == 'impossible'\n\nassert solution(\nr'''\n20 7\n1 2 50\n2 5 45\n3 4 40\n4 7 35\n5 6 30\n6 9 25\n7 8 20\n8 7 15\n9 6 10\n10 5 5\n''') == 'definitely possible'\n\nassert solution(\nr'''\n20 5\n1 2 30\n2 5 25\n3 4 20\n4 7 15\n5 6 10\n6 9 7\n7 8 6\n8 7 5\n9 6 4\n10 5 3\n''') == 'impossible'\n\nassert solution(\nr'''\n20 2\n1 1 20\n2 2 25\n3 3 30\n4 4 35\n5 5 40\n6 6 45\n7 7 50\n8 8 55\n9 9 60\n10 10 65\n''') == 'definitely possible'\n\nassert solution(\nr'''\n2"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"impossible\"\n"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 1.000000000"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 1.000000000, \"Expected 1.000000000, got {} instead.\".format(solution(1))"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 1.000000000\nassert solution(2) == 1.000000000\nassert solution(3) == 1.000000000\nassert solution(4) == 1.000000000\nassert solution(5) == 1.000000000"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"1.000000000\"  # expected output: 1.000000000\n\nfrom typing import List"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"1.000000000\\n\"\nassert solution(2) == \"0.000000000\\n\"\nassert solution(3) == \"1.000000000\\n\"\nassert solution(4) == \"0.000000000\\n\"\nassert solution(5) == \"1.000000000\\n\""
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n\") == \"1.000000000\\n\""
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 1.0\nassert solution(2) == 0.5\nassert solution(3) == 1.0\nassert solution(4) == 1.0\nassert solution(5) == 0.5\nassert solution(6) == 0.5\nassert solution(7) == 0.5\nassert solution(8) == 0.5\nassert solution(9) == 0.5\nassert solution(10) == 0.5\nassert solution(11) == 0.5\nassert solution(12) == 0.5\nassert solution(13) == 0.5\nassert solution(14) == 0.5\nassert solution(15) == 0.5\nassert solution(16) == 0.5\nassert solution(17) == 0.5\nassert solution(18) == 0.5\nassert solution(19) == 0.5\nassert solution(20) == 0.5\nassert solution(21) == 0.5\nassert solution(22) == 0.5\nassert solution(23) == 0.5\nassert solution(24) == 0.5\nassert solution(25) == 0.5\nassert solution(26) == 0.5\nassert solution(27) == 0.5\nassert solution(28) == 0.5\nassert solution(29) == 0.5\nassert solution(30) == 0.5\nassert solution(31) == 0.5\nassert solution(32) == 0.5\nassert solution(33) == 0.5\nassert solution(34) == 0.5\nassert solution(35) == 0.5\nassert solution(36) == 0.5\nassert solution(37) == 0.5\nassert solution(38) == 0.5\nassert solution(39) == 0.5\nassert solution(40) == 0.5\nassert solution(41) == 0.5\nassert solution(42) == 0.5\nassert solution(43) == 0.5\nassert solution(44) == 0.5\nassert solution(45) == 0.5\nassert solution(46) == 0.5\nassert solution(47) == 0.5\nassert solution(48) == 0.5\nassert solution(49) == 0.5\nassert solution(50) == 0.5\nassert solution(51) == 0.5\nassert solution(52) == 0.5\nassert solution(53) == 0.5\nassert solution(54) == 0.5\nassert solution(55) == 0.5\nassert solution(56) == 0.5\nassert solution(57) == 0.5\nassert solution(58) == 0.5\nassert solution(59) == 0.5\nassert solution(60) == 0.5\nassert solution(61) == 0.5\nassert solution(62) == 0.5\nassert solution(63) == 0.5\nassert solution(64) == 0.5\nassert solution(65) == 0.5\nassert solution(66) == 0.5\nassert solution(67) == 0.5\nassert solution(68) == 0.5\nassert solution(69) == 0.5\nassert solution(70) == 0.5\nassert solution(71) == 0.5\nassert solution(72) == 0.5\nassert solution(73) == 0.5\nassert solution(74) == 0.5\nassert solution(75) == 0.5\nassert solution(76) == 0.5\nassert solution(77) == 0.5\nassert solution(78) == 0.5\nassert solution(79) == 0.5\nassert solution(80) == 0.5\nassert solution(81) == 0.5\nassert solution(82) == 0.5\nassert solution(83) == 0.5\nassert solution(84) == 0.5\nassert solution(85) == 0.5\nassert solution(86) == 0.5\nassert solution("
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == '1.000000000'\n"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == \"1.000000000\"\n"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"1.000000000\"\nassert solution(10) == \"1.000000000\"\nassert solution(20) == \"0.999999999\"\nassert solution(30) == \"0.999999999\"\nassert solution(40) == \"0.999999999\"\nassert solution(50) == \"0.999999999\"\n"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == sample_output, f\"Invalid output. Expected: {sample_output}, but got: {solution(sample_input)}\""
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('100 3 10\\n15 99 98\\n40 3 2\\n90 10 9') == '115.000000000'"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n\") == 115.0, \"Test Case 1 Failed\"\n\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 10\\n\") == 115.0, \"Test Case 2 Failed\"\n\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n\") == 115.0, \"Test Case 3 Failed\"\n\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 8\\n\") == 115.0, \"Test Case 4 Failed\"\n\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 7\\n\") == 115.0, \"Test Case 5 Failed\"\n\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 6\\n\") == 115.0, \"Test Case 6 Failed\"\n\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 5\\n\") == 115.0, \"Test Case 7 Failed\"\n\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 4\\n\") == 115.0, \"Test Case 8 Failed\"\n\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 3\\n\") == 115.0, \"Test Case 9 Failed\"\n\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 2\\n\") == 115.0, \"Test Case 10 Failed\"\n\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 1\\n\") == 115.0, \"Test Case 11 Failed\"\n\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 0\\n\") == 115.0, \"Test Case 12 Failed\"\n\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 -1\\n\") == 115.0, \"Test Case 13 Failed\"\n\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 -2\\n\") == 115.0, \"Test Case 14 Failed\"\n\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 -3\\n\") == 115.0, \"Test Case 15 Failed\"\n\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 -4\\n\") == 115.0, \"Test Case 16 Failed\"\n\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 -5\\n\") == 115.0, \"Test Case 17 Failed\"\n\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"100 3 10\\n\"\n    \"15 99 98\\n\"\n    \"40 3 2\\n\"\n    \"90 10 9\"\n) == \"115.000000000\""
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    100 3 10\n    15 99 98\n    40 3 2\n    90 10 9\n    \"\"\"\n) == \"115.000000000\"\n\nassert solution(\n    \"\"\"\n    0 3 10\n    15 99 98\n    40 3 2\n    90 10 9\n    \"\"\"\n) == \"0.000000000\"\n\nassert solution(\n    \"\"\"\n    50 3 10\n    15 99 98\n    40 3 2\n    90 10 9\n    \"\"\"\n) == \"115.000000000\"\n\nassert solution(\n    \"\"\"\n    0 100 100\n    15 99 98\n    40 3 2\n    90 10 9\n    \"\"\"\n) == \"115.000000000\"\n\nassert solution(\n    \"\"\"\n    0 100 100\n    15 99 98\n    40 3 2\n    90 10 9\n    \"\"\"\n) == \"0.000000000\"\n\nassert solution(\n    \"\"\"\n    1000000 100 100\n    15 99 98\n    40 3 2\n    90 10 9\n    \"\"\"\n) == \"999998400.000000000\"\n\nassert solution(\n    \"\"\"\n    1000000 100 100\n    15 99 98\n    40 3 2\n    90 10 9\n    \"\"\"\n) == \"0.000000000\""
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == \"115.000000000\"\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 10\\n\") == \"115.000000000\"\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 10\\n100 10 10\") == \"115.000000000\"\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 10\\n100 10 10\\n\") == \"115.000000000\""
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == 115.000000000\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 0\") == 115.000000000\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 1\") == 115.000000000\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 -1\") == 115.000000000\n\nfrom typing import List"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 115.000000000, \"The output is incorrect.\""
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == 115.0\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 8\") == 115.0\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 7\") == 115.0"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test failed: {input()}!= {output}\"\n"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"199.500000\"\nassert solution(100) == \"199.500000\"\nassert solution(1000000) == \"199.500000\"\nassert solution(1000000000) == \"199.500000\"\nassert solution(100000000000000000) == \"199.500000\"\nassert solution(10000000000000000000000) == \"199.500000\"\nassert solution(1000000000000000000000000000) == \"199.500000\"\nassert solution(10000000000000000000000000000000) == \"199.500000\""
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(b\"2\\n100 1 1\\n100 1 1.5\") == \"199.500000\\n\""
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n100 1 1\\n100 1 1.5\\n\") == \"199.500000\""
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n100 1 1\\n100 1 1.5\\n\") == \"199.500000\""
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100 1 1\\n100 1 1.5\\n\") == \"199.500000\\n\"\nassert solution(\"100 1 2\\n100 1 1.5\\n\") == \"200.000000\\n\"\nassert solution(\"100 1 1.5\\n100 1 1.5\\n\") == \"200.000000\\n\"\nassert solution(\"100 1 1.5\\n100 1 1.5\\n\") == \"200.000000\\n\"\nassert solution(\"100 1 1.5\\n100 1 1.5\\n\") == \"200.000000\\n\""
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n100 1 1\\n100 1 1.5\") == \"199.500000\"\nassert solution(\"3\\n100 1 1\\n100 1 1.5\\n50 2 3.14\") == \"98.823863\"\nassert solution(\"1\\n5 1\\n0.5\") == \"0.5\"\nassert solution(\"2\\n2000 200 0\\n2000 200 0.5\") == \"1000.000000\""
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n100 1 1\\n100 1 1.5\\n') == '199.500000'\nprint('All tests passed!')"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == expected_output, f\"Your solution is incorrect. Please check the given examples and the problem statement for more details.\""
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"199.500000\", \"Your solution is incorrect.\""
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    2\n    100 1 1\n    100 1 1.5\n''') == '199.500000'"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\""
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\") == \"4\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\") == \"6\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\") == \"7\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\") == \"8\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\") == \"9\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\") == \"10\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\") == \"11\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\") == \"12\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\") == \"13\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\") == \"14\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\n"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'\nassert solution('1 1\\n1 1') == '0\\n'\nassert solution('1 2\\n2 3\\n4 5\\n') == '0\\n'\nassert solution('1 1\\n2 2') == '1\\n'\nassert solution('1 2\\n3 3\\n4 4\\n') == '1\\n'\nassert solution('3 3\\n4 4\\n') == '1\\n'"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected\n"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\n"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n1 3 5 6 7 8\") == \"1\\n\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\nassert solution(\"1 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"0\\n\"\nassert solution(\"2 4\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\nassert solution(\"3 4\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"2\\n\"\nassert solution(\"1 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"0\\n\""
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n\\tpass\\n\""
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"3 2\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"3\"\nassert solution(\"5 2\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"5\"\nassert solution(\"10 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"7\"\nassert solution(\"10 4\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"10\"\nassert solution(\"2 4\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"2\"\nassert solution(\"4 2\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"4\"\nassert solution(\"5 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"5\"\nassert solution(\"5 4\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"6\"\nassert solution(\"10 2\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"8\"\nassert solution(\"12 4\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"10\"\nassert solution(\"2 6\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"2\"\nassert solution(\"6 2\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"6\"\nassert solution(\"7 8\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"8\"\nassert solution(\"11 5\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"11\"\nassert solution(\"12 6\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"12\""
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\nassert solution(\"2 3\\n5 4 3 2 1 6 7 8 9 10 11 12\") == \"2\\n\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\nassert solution(\"2 3\\n5 4 3 2 1 6 7 8 9 10 11 12\") == \"2\\n\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\\n\", \"Test Failed\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Solution does not match expected output.\\nInput: {input()}\\nOutput: {output}\"\n"
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case failed. Expected output: {sample_output}, Actual output: {solution(sample_input)}\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"13\\n3 2 1 1\") == \"5\\nImpossible\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'Impossible\\n'"
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"13\\n3 2 1 1\") == \"5\\n5\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('13\\n3 2 1 1') == 5\nprint(\"All tests passed!\")"
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=None) == \"Impossible\\n\"\nassert solution(stdin=\"\") == \"Impossible\\n\"\nassert solution(stdin=\"13\") == \"Impossible\\n\"\nassert solution(stdin=\"1 1 1 1\") == \"5\\n\"\nassert solution(stdin=\"13 2 1 1\") == \"5\\n\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"13\\n3 2 1 1\") == \"5\"\nassert solution(\"10\\n5 10 20 50\") == \"10\"\nassert solution(\"15\\n1000 2000 3000 4000\") == \"Impossible\"\nassert solution(\"10\\n10 20 30 40\") == \"Impossible\"\nassert solution(\"10\\n10 20 30 50\") == \"Impossible\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"13\\n3 2 1 1\") == \"5\\n5\\n\"\n"
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\naabcad\naba\nacd\n\"\"\"\n) == \"yes\"\n\nassert solution(\n    \"\"\"\naabbcdefghij\nabcde\nfghij\n\"\"\"\n) == \"no\"\n\nassert solution(\n    \"\"\"\nabcdef\n"
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('aabcad\\naba\\nacd\\n') == 'yes\\ndef solution(stdin: str) -> str:\n    pass\\n'"
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"no\"\nassert solution(\"acd\") == \"yes\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"no\"\nassert solution(\"acd\") == \"no\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"no\"\nassert solution(\"acd\") == \"yes\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('aabcad') == 'yes'\nassert solution('aba') == 'yes'\nassert solution('acd') == 'no'"
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(solution(stdin)) == \"yes\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aabcad\\naba\\nacd\") == \"yes\"\nassert solution(\"abcd\\nbcd\") == \"no\"\nassert solution(\"b\\n\") == \"no\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"no\"\nassert solution(\"acd\") == \"no\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"no\"\nassert solution(\"acd\") == \"no\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == output, f\"Input: {stdin}\\nOutput: {output}\\n\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '5\\n'\n"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case {i+1} failed\" for i, sample_input, sample_output in enumerate(tests)"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == 5, \"Test failed.\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 2, 1, 4, 7, 3, 1, 1, 6, 3, 4, 7, 10, 2, 4, 3, 5, 4, 2, 8, 9) == 5, \"The output should be 5.\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9') == '5'"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\\n\"\n"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"5\\n\", \"The solution should return 5\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == '__main__':\\n    print(solution('\".join(str(x) for x in stdin.split()) + \"'))\"\n"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 2\\n2 4 same\\n3 5 same\\n') == '4'\nassert solution('5 2\\n2 4 different\\n3 5 same\\n') == '1'\nassert solution('5 2\\n2 4 same\\n3 6 different\\n') == '0'\n"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\") == \"4\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n    5 2\n    2 4 same\n    3 5 same\n\"\"\") == \"4\"\nassert solution(\"\"\"\n    5 1\n    1 3 same\n    4 5 same\n\"\"\") == \"2\"\nassert solution(\"\"\"\n    5 2\n    1 4 same\n    2 5 same\n\"\"\") == \"0\""
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 4\nprint(4)"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 2\\n2 4 same\\n3 5 same') == '4'\nassert solution('5 3\\n2 same\\n3 same') == '1'\nassert solution('5 3\\n2 same\\n3 same') == '1'\nassert solution('5 1\\n1 2 same\\n1 3 same\\n1 4 same\\n1 5 same') == '3'\nassert solution('5 1\\n1 2 same\\n1 3 same\\n1 4 same\\n1 5 same') == '3'"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 4\n"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\""
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\") == \"4\"\nassert solution(\"5 2\\n2 4 different\\n3 5 different\") == \"0\""
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 2\\n2 4 same\\n3 5 same\\n') == '4\\n'"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\\n\") == \"4\\n\"\nassert solution(\"5 2\\n1 4 same\\n2 5 same\\n\") == \"4\\n\"\nassert solution(\"5 2\\n1 4 same\\n3 5 different\\n\") == \"5\\n\"\nassert solution(\"5 2\\n1 4 same\\n1 4 different\\n\") == \"6\\n\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\") == \"3\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\") == \"3\"\nassert solution(\"5 6\\n2 0\\n4 2\\n3 4\\n1 5\") == \"4\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 3"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6 4\\n0 1\\n0 2\\n3 4\\n3 5') == '3'"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(['6', '4', '0', '1', '0', '2', '3', '4', '3', '5']) == '3'"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=solution.__doc__) == '''\nThe maximum number of hops in the resulting network.\n'''"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\") == 3, \"Incorrect output for sample input 6 4\\n0 1\\n0 2\\n3 4\\n3 5\"\n\nassert solution(\"10 5\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\") == 3, \"Incorrect output for sample input 10 5\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '3'\nprint(\"All tests passed!\")"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\\n\") == 3"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\") == \"9.0\\n6.5\\n2.5\\n\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\") == \"9.0\\n6.5\\n2.5\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR') == '9.0\\n6.5\\n2.5\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Expected '{expected}', got '{solution(input())}'\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR') == '9.0\\n6.5\\n2.5'\n"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\\n\") == \"9.0\\n6.5\\n2.5\"\nprint(solution(\"1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\\n\"))"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\") == \"9.0\\n6.5\\n2.5\\n\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR') == '9.0\\n6.5\\n2.5'"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR') == '9.0\\n6.5\\n2.5\\n'"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\") == \"9.0\\n6.5\\n2.5\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\") == \"1\"\nassert solution(\"4 2 3\\nB 1 2\\nR 3 1\") == \"0\"\nassert solution(\"3 3 1\\nB 1 2\\nR 3 1\") == \"0\"\nassert solution(\"3 3 0\\nB 1 2\\nR 3 1\") == \"0\"\nassert solution(\"3 3 0\\nB 1 2\\nR 4 1\") == \"1\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\") == 1\nassert solution(\"3 5 2\\nB 1 2\\nB 2 3\\nR 3 1\") == 0\nassert solution(\"5 3 2\\nB 1 2\\nB 2 3\\nR 3 1\") == 0\nassert solution(\"3 3 0\\nB 1 2\\nB 2 3\\nR 3 1\") == 0\nassert solution(\"3 3 1\\nB 1 2\\nB 2 3\\nR 3 1\") == 0\nassert solution(\"3 3 2\\nB 1 1\\nB 2 3\\nR 3 1\") == 0\nassert solution(\"3 3 2\\nB 1 2\\nB 2 1\\nR 3 1\") == 0"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\") == \"1\\n\"\nassert solution(\"3 3 2\\nB 1 2\\nR 1 2\\nR 2 3\") == \"0\\n\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 1, \"Test Failed\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 1 failed\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '1\\n'\n"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 1, \"Incorrect output for the given input.\"\n"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\", \"The output should be 1.\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, \"Expected output: {}\\nActual output: {}\".format(output, solution(input()))"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(), \"Test failed\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\") == \"88\\n5\\n5\\n7\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('solution.py', 'r')) == '88\\n5\\n5\\n7'"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n5\\n7\\n4\\n88\\n5\\n6\\n7\\n\\n') == '88\\n5\\n5\\n7\\n'\nassert solution('2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\\n\\n') == '88\\n5\\n5\\n7\\n'\nassert solution('2\\n5\\n5\\n5\\n5\\n5\\n\\n') == ''\n"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"88\\n5\\n5\\n7\", \"Test case 1 failed.\"\nassert solution() == \"50\\n7\\n5\", \"Test case 2 failed.\"\nassert solution() == \"250\\n1500\\n5000\", \"Test case 3 failed.\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7') == '88\\n5\\n5\\n7'\n"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\") == \"88\\n5\\n5\\n7\"\nassert solution(\"3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\") == \"139\\n48\\n33\\n19\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\\n\") == \"88\\n5\\n5\\n7\\n\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7') == '88\\n5\\n5\\n7'\n"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\\n') == 5, \"Your solution is incorrect.\"\nassert solution('3 1 2 1\\n3\\n1 1 1\\n3 2 1\\n') == -1, \"Your solution is incorrect.\"\nassert solution('3 3 1 1\\n3\\n1 1 1\\n3 2 1\\n') == 0, \"Your solution is incorrect.\"\n"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n3 3 1 2\n2\n1 2 2\n1 3 1\n2 3 3\n''') == 5\n\nassert solution('''\n3 3 1 2\n3\n1 2 2\n1 3 1\n2 3 3\n''') == -1\n\nassert solution('''\n3 3 1 2\n2\n1 2 1\n1 3 1\n2 3 3\n''') == -1\n\nassert solution('''\n3 3 1 2\n3\n1 2 1\n1 3 1\n2 3 2\n''') == -1\n\nassert solution('''\n3 3 1 2\n2\n1 2 1\n1 3 1\n2 3 2\n''') == -1\n\nassert solution('''\n3 3 1 2\n2\n1 2 1\n1 3 1\n2 3 2\n''') == -1\n\nassert solution('''\n3 3 1 2\n3\n1 2 1\n1 3 1\n2 3 2\n''') == -1\n\nassert solution('''\n3 3 1 2\n2\n1 2 1\n1 3 1\n2 3 2\n''') == -1\n\nassert solution('''\n3 3 1 2\n3\n1 2 1\n1 3 1\n2 3 2\n''') == -1\n\nassert solution('''\n3 3 1 2\n3\n1 2 1\n1 3 1\n2 3 2\n''') == -1\n\nassert solution('''\n3 3 1 2\n3\n1 2 1\n1 3 1\n2 3 2\n''') == -1\n\nassert solution('''\n3 3 1 2\n3\n1 2 1\n1 3 1\n2 3 2\n''') == -1\n\nassert solution('''\n3 3 1 2\n3\n1 2 1\n1 3 1\n2 3 2\n''') == -1\n\nassert solution('''\n3 3 1 2\n3\n1 2 1\n1 3 1\n2 3 2\n''') == -1"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nprint(\"All tests passed\")"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\\n\") == 5\nassert solution(\"3 3 2 1\\n1\\n2 2 2\\n2 3 1\\n2 3 3\\n\") == 5\nassert solution(\"1 1 1 2\\n3\\n3 3 3\\n1 2 1\\n2 3 3\\n\") == 1\nassert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\\n\") == -1\nassert solution(\"1 1 1 2\\n3\\n3 3 3\\n1 2 1\\n2 3 3\\n\") == -1\nassert solution(\"3 3 2 1\\n1\\n2 2 2\\n2 3 1\\n2 3 3\\n\") == -1"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"3 3 1 2\\n1\\n2 2 1\\n1 3 1\\n1 2 1\") == -1\nassert solution(\"3 3 1 2\\n1 2 2\\n1 3 1\\n2 3 3\") == -1\nassert solution(\"3 3 1 2\\n1 2 2\\n1 3 1\\n2 3 2\") == -1\nassert solution(\"3 3 1 2\\n1 2 2\\n1 3 1\\n2 3 1\") == -1\nassert solution(\"3 3 1 2\\n1 2 2\\n1 3 1\\n2 3 0\") == -1\nassert solution(\"3 3 1 2\\n1 2 2\\n1 3 1\\n2 3 -1\") == -1\nassert solution(\"3 3 1 2\\n1 2 2\\n1 3 1\\n2 3 3\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"3 3 1 2\\n1 2 2\\n1 3 1\\n2 3 3\\n1 2 2\\n1 3 1\\n2 3 2\") == 5\nassert solution(\"3 3 1 2\\n1 2 2\\n1 3 1\\n2 3 3\\n1 2 2\\n1 3 1\\n2 3 1\") == 5\nassert solution(\"3 3 1 2\\n1 2 2\\n1 3 1\\n2 3 3\\n1 2 2\\n1 3 1\\n2 3 0\") == 5\nassert solution(\"3 3 1 2\\n1 2 2\\n1 3 1\\n2 3 -1\") == 5\nassert solution(\"3 3 1 2\\n1 2 2\\n1 3 1\\n2 3 3\\n1 2 2\\n1 3 1\\n2 3 3\") == 5"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"3 2 2\\n1\\n2 3 2\\n2 3 1\") == 5\nassert solution(\"5 1 2\\n1\\n1 2 1\\n1 2 1\") == -1\nassert solution(\"2 3 4\\n1\\n2 3 3\\n2 2 2\") == 5"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3') == 5"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3') == 5\nassert solution('3 5 3\\n2\\n1 3 4\\n1 4 2\\n3 2 4') == -1\nassert solution('5 3 2\\n2\\n1 2 3\\n1 3 1\\n2 3 2') == 4\nassert solution('5 3 2\\n2\\n1 2 3\\n1 3 1\\n2 3 2') == -1\n"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3') == 5\n"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\", \"Your code is not correct!\"\nassert solution(\"C4\") == \"def solution(stdin: str) -> str:\", \"Your code is not correct!\"\n"
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"mirkovniz\"\n"
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='mirkovC4nizCC44\\nC4\\n') =='mirkovniz\\ndef solution(stdin: str) -> str:\\n    pass'\n"
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\", \"The solution is not correct\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\"\nassert solution(\"C4\") == \"FRULA\"\nassert solution(\"mirkovC4nizCC44C4\") == \"mirkovniz\"\nassert solution(\"C4C4\") == \"FRULA\"\nassert solution(\"abC4C4C4\") == \"FRULA\"\nassert solution(\"C4C4C4C4C4\") == \"FRULA\"\nassert solution(\"C4C4C4C4C4C4\") == \"FRULA\"\nassert solution(\"C4C4C4C4C4C4C4C4\") == \"FRULA\"\n"
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\"\nassert solution(\"aaabbbccccdd\") == \"FRULA\"\nassert solution(\"aabbbbcddddddeeeeeffff\") == \"aabbbbcddddddeeeeeffff\"\nassert solution(\"mirkovC4nizCC44C4\") == \"mirkovniz\"\nassert solution(\"a\"*10000000) == \"FRULA\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"mirkovC4nizCC44C4\") == \"mirkovniz\"\nassert solution(\"mirkov1niz1niz1niz1\") == \"mirkovniz\"\nassert solution(\"mirkov1niz1niz1niz2\") == \"FRULA\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\", \"Your solution is incorrect.\"\nprint(\"All test cases pass.\")"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == \"32\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 32\nassert solution(4) == 32\nassert solution(5) == 32\nassert solution(6) == 32\nassert solution(7) == 32\nassert solution(8) == 32\nassert solution(9) == 32\nassert solution(10) == 32\nassert solution(11) == 32\nassert solution(12) == 32\nassert solution(13) == 32\nassert solution(14) == 32\nassert solution(15) == 32\nassert solution(16) == 32\nassert solution(17) == 32\nassert solution(18) == 32\nassert solution(19) == 32\nassert solution(20) == 32\nassert solution(21) == 32\nassert solution(22) == 32\nassert solution(23) == 32\nassert solution(24) == 32\nassert solution(25) == 32\nassert solution(26) == 32\nassert solution(27) == 32\nassert solution(28) == 32\nassert solution(29) == 32\nassert solution(30) == 32\nassert solution(31) == 32\nassert solution(32) == 32\nassert solution(33) == 32\nassert solution(34) == 32\nassert solution(35) == 32\nassert solution(36) == 32\nassert solution(37) == 32\nassert solution(38) == 32\nassert solution(39) == 32\nassert solution(40) == 32\nassert solution(41) == 32\nassert solution(42) == 32\nassert solution(43) == 32\nassert solution(44) == 32\nassert solution(45) == 32\nassert solution(46) == 32\nassert solution(47) == 32\nassert solution(48) == 32\nassert solution(49) == 32\nassert solution(50) == 32\nassert solution(51) == 32\nassert solution(52) == 32\nassert solution(53) == 32\nassert solution(54) == 32\nassert solution(55) == 32\nassert solution(56) == 32\nassert solution(57) == 32\nassert solution(58) == 32\nassert solution(59) == 32\nassert solution(60) == 32\nassert solution(61) == 32\nassert solution(62) == 32\nassert solution(63) == 32\nassert solution(64) == 32\nassert solution(65) == 32\nassert solution(66) == 32\nassert solution(67) == 32\nassert solution(68) == 32\nassert solution(69) == 32\nassert solution(70) == 32\nassert solution(71) == 32\nassert solution(72) == 32\nassert solution(73) == 32\nassert solution(74) == 32\nassert solution(75) == 32\nassert solution(76) == 32\nassert solution(77) == 32\nassert solution(78) == 32\nassert solution(79) == 32\nassert solution(80) == 32\nassert solution(81) == 32\nassert solution(82) == 32\nassert solution(83) == 32\nassert solution(84) == 32\nassert solution(85) == 32\nassert solution(86) == 32\nassert solution(87) == 32\nassert solution(88) == 32\nassert solution(89) == 32\nassert solution(90) == 32\nassert solution(91) == 32\nassert solution(92) == 32\nassert solution(93) == 32\nassert solution(94) == 32\nassert solution(95) == 32\nassert solution(96) == 32"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 32\nassert solution(5) == 32\nassert solution(10) == 32\nassert solution(20) == 32\nassert solution(30) == 32\nassert solution(40) == 32\nassert solution(50) == 32\n"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 65\\n45 10\\n60 25\") == \"32\\n\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '32'\nprint(\"All tests passed!\")"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 32, \"The solution is incorrect\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 3, 65, 45, 10, 60, 25) == 32, \"Test Case 1 failed\"\nassert solution(3, 4, 65, 45, 10, 60, 25) == 48, \"Test Case 2 failed\"\nassert solution(3, 5, 65, 45, 10, 60, 25) == 64, \"Test Case 3 failed\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == 32"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 65\\n45 10\\n60 25\") == \"32\\n\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 32, \"Test failed\""
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('tests/input.txt', 'r')) == \"3\\n2\\n\"\n"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2 0 3 1\") == \"3\\n2\\n\"\nassert solution(\"10\\n-1000000000 1000000000 1000000000 1000000000 1000000000\") == \"10\\n0\\n\"\nassert solution(\"10\\n0 1 1 1 1\") == \"0\\n1\\n\"\nassert solution(\"10\\n0 1 0 1 0\") == \"0\\n2\\n\"\nassert solution(\"10\\n1 0 1 0 0\") == \"0\\n3\\n\"\nassert solution(\"10\\n2 0 2 0 2\") == \"0\\n4\\n\"\nassert solution(\"10\\n3 1 2 3 3\") == \"0\\n5\\n\""
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 0 3 1\") == \"3\\n2\\n\"\n"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 0 3 1\") == \"3\\n2\"\nassert solution(\"1000000\") == \"1000000\""
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2 0 3 1\") == \"3\\n2\"\nassert solution(\"5\\n2 1 2 0 3\") == \"3\\n1\""
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3\\n2\\n\""
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2 0 3 1\") == \"3\\n2\"\nassert solution(\"5\\n-2 -1 2 -2 -2\") == \"3\\n-2\"\nassert solution(\"5\\n5 5 5 5 5\") == \"3\\n5\"\nassert solution(\"5\\n5 10 2 1 5\") == \"3\\n5\""
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case} failed with output '{solution(input())}' and expected output '{expected_output}'.\"\n\ntest_case = 1\ninput_file = \"input.txt\"\nwith open(input_file, \"r\") as file:\n    input_data = file.read().strip()\n\nexpected_output = 3\noutput = solution(input_data)\nprint(output)"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == '3\\n2'\nassert solution(10) == '2\\n1'"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3\\n2\"\n"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 2, \"Incorrect answer.\""
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\") == \"2\\n\""
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\\n\"  # pass\n"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_str) == expected_output, f\"Incorrect output: {solution(input_str)} should be {expected_output}\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4') == '2'\nprint('All tests passed')"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\\n\") == \"2\\n\""
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"2\"\n"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    2 4 4\n    1 1\n    1 2\n    1 3\n    1 4\n    \"\"\"\n) == \"2\\n\""
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1000000000 0\\n1000000000 1\") == \"500000004\"\nassert solution(\"1\\n0 0\") == \"1\"\nassert solution(\"5\\n4 0\\n3 0\\n2 1\\n1 1\\n0 2\") == \"1\"\n"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '500000004'\n\nimport random"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1000000000 0\\n1000000000 1\") == \"500000004\\n\"\n"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1000000000 0\\n1000000000 1\\n\") == 500000004\n"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1000000000 0\\n1000000000 1\") == 500000004\nassert solution(\"3\\n1000000000 0\\n1000000000 1\\n1000000000 2\") == 1666666667"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 500000004\nprint(500000004)"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Solution failed for {input()}\"\n"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == \"500000004\""
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 500000004\nprint(500000004)\n"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1000000000 0\\n1000000000 1\\n\") == \"500000004\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == \"12\", \"Test failed for sample input\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"your_code_here\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\") == \"12\", \"Your solution is incorrect.\"\nprint(\"Correct.\")"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == '''\nDavid is looking to book some travel over the world. There are n countries that he can visit, and m flights that are available. The ith flight goes from country a_ i to country b_ i. It departs at time s_ i, and lands at time e_ i. \n\nDavid is currently at the airport in country 1, and the current time is 0, and he would like to travel country n. He does not care about the total amount of time needed to travel, but he really hates waiting in the airport. If he waits t seconds in an airport, he gains t^2 units of frustration. Help him find an itinerary that minimizes the sum of frustration.\n\n-----Input-----\nThe first line of input contains two space-separated integers n and m ($1 \\le n,m \\le 200000$).\n\nEach of the next m lines contains four space-separated integers a_ i, b_ i, s_ i, and e_ i ($1 \\le a_ i, b_ i \\le n$; $0 \\le s_ i \\le e_ i \\le 10^6$).\n\nA flight might have the same departure and arrival country.\n\nNo two flights will have the same arrival time, or have the same departure time. In addition, no flight will have the same arrival time as the departure time of another flight. Finally, it is guaranteed that there will always be a way for David to arrive at his destination.\n\n-----Output-----\nPrint, on a single line, the minimum sum of frustration.\n\n-----Examples-----\nIn the first sample, it is optimal to take this sequence of flights:\n - Flight 5. Goes from airport 1 to airport 2, departing at time 3, arriving at time 8.\n - Flight 3. Goes from airport 2 to airport 1, departing at time 9, arriving at time 12.\n - Flight 7. Goes from airport 1 to airport 3, departing at time 13, arriving at time 27.\n - Flight 8. Goes from airport 3 to airport 5, deparing at time 28, arriving at time 100.\n\nThe frustration for each flight is 3^2, 1^2, 1^2, and 1^2, respectively. Thus, the total frustration is 12.\n\nNote that there is an itinerary that gets David to his destination faster. However, that itinerary has a higher total frustration.\n\n-----Examples-----\nSample Input:\n5 8\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24\nSample Output:\n12\n"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"12\\n\"\n"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution, \"No solution provided\"\n\nfrom collections import defaultdict\nfrom typing import List"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\\n\") == \"12\\n\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\\n\") == \"12\"\n"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"12\", \"Your solution is incorrect.\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 19\\n15 5 3\\n12 4 4\\n20 10 5\\n') == '3'\n"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == \"3\\n\"\nassert solution(\"2 1 10\") == \"2\\n\"\nassert solution(\"1 10 10\") == \"1\\n\"\nassert solution(\"4 100 100\") == \"1\\n\"\nassert solution(\"1 1 1\") == \"0\\n\"\n"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 3, \"Expected output: 3, but got: \" + str(solution(3))\nassert solution(15) == 3, \"Expected output: 3, but got: \" + str(solution(15))\nassert solution(12) == 2, \"Expected output: 2, but got: \" + str(solution(12))\nassert solution(20) == 3, \"Expected output: 3, but got: \" + str(solution(20))"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\\n\") == \"3\\n\"\nassert solution(stdin=\"10 10\\n5 4 3\\n10 10\\n\") == \"6\\n\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 2\\n3 4\\n') == '3'\nassert solution('5 10\\n15 10 10\\n') == '6'\nassert solution('10 15\\n15 20 20\\n') == '12'\nassert solution('5 10\\n10 10 10\\n') == '10'\nassert solution('10 15\\n15 10 10\\n') == '12'"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3\\n\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == \"3\"\nprint(\"Test passed\")"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 19\\n15 5 3\\n12 4 4\\n20 10 5') == '3\\n'\n"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 19\\n15 5 3\\n12 4 4\\n20 10 5') == '3\\n'"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == \"3\\n\"\n"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1 1\\n\") == \"1\\n\""
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1\\n1\\n'\n"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution.__doc__ == \"Solution to the problem\""
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1 1\") == \"1\\n\""
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(str(input())) == str(1), \"Your code does not pass the test\"\n"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '1\\n1\\n', 'Test case failed'"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == '1\\n' + '1\\n'"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n1 1\\n') == 1\nassert solution('2\\n2 2\\n') == 2\nassert solution('10\\n5 10\\n') == 4770209\n"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 1"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '1\\n1\\n'\nassert solution() == '2\\n1\\n2\\n'\nassert solution() == '2\\n3\\n'\nassert solution() == '3\\n2\\n2\\n'\nassert solution() == '2\\n4\\n1\\n1\\n2\\n'"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"RGGR\") == 3, \"The minimum number of moves needed to solve the given puzzle is 3.\""
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == \"3\"\n"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"RGGR\") == \"3\\n\"\nassert solution(\"GBGB\") == \"3\\n\"\nassert solution(\"BYBY\") == \"3\\n\"\nassert solution(\"YRYR\") == \"3\\n\""
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_data) == expected_output, f\"Solution should return {expected_output}, but got {solution(input_data)}\"\n"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == \"3\""
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == 3, \"Test Case 1 failed\"\n\nassert solution(\"RRRR\\nGGGG\\nBBBB\\nYYYY\") == 3, \"Test Case 2 failed\"\n\nassert solution(\"RGGG\\nBGGB\\nYGBY\\nRGRG\") == 3, \"Test Case 3 failed\"\n\nassert solution(\"RBGG\\nYGGY\\nGGRB\\nGRRG\") == 3, \"Test Case 4 failed\"\n\nassert solution(\"GRGY\\nGRRB\\nYBGY\\nGBRG\") == 3, \"Test Case 5 failed\""
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == \"3\""
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == \"3\"\n"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == \"3\\n\"\nassert solution(\"RGRG\\nGBBG\\nBYBY\\nYRYR\") == \"2\\n\"\nassert solution(\"RGRG\\nGBBG\\nBYBR\\nYRYR\") == \"3\\n\"\nassert solution(\"RGRG\\nGBBG\\nBYBY\\nYBRY\") == \"2\\n\"\nassert solution(\"RGRG\\nGBBG\\nBYBY\\nYRYR\") == \"4\\n\""
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('RGGR\\nGBGB\\nBYBY\\nYRYR') == '3\\n'\nassert solution('GBYGB\\nRYGGB\\nGBYGB\\nYRYGB') == '3\\n'\nassert solution('GYBGY\\nRGRGY\\nGYBGY\\nGBRGY') == '3\\n'\nassert solution('GRRGG\\nGGRRG\\nRGGRR\\nRGGGG') == '3\\n'\nassert solution('RGGRR\\nGGRRG\\nGBRRR\\nGRGRG') == '3\\n'\nassert solution('RRRGG\\nRRRGR\\nGGRRG\\nRRGGG') == '3\\n'\nassert solution('GGRRG\\nGGRRR\\nRGRGG\\nRGRGR') == '3\\n'"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n-2 -1 0 1 2\\n2 1 0 -1 -2') == 'AAAAA'\n"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Expected output: {}\\nGot: {}\\n\".format(output(), solution(input()))"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\\n\"\nassert solution(\"3\\n1 2 3\\n2 1 -1\") == \"BBAB\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n-1 1 1 1 1\") == \"AABBABBB\\n\"\nassert solution(\"5\\n0 1 2 3 4\\n0 0 1 1 0\") == \"00000\\n\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"AAAAA\", \"Your solution is not correct.\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\"\nassert solution(\"6\\n-1 0 1 2 3\\n1 0 -1 -2 3\") == \"AAAAB\"\nassert solution(\"3\\n0 -1 2\\n1 1 -1 -2\") == \"AABA\"\nassert solution(\"4\\n1 0 -1 2\\n1 1 -1 -2\") == \"AABC\"\nassert solution(\"5\\n2 1 0 -1 -2\\n-2 1 0 -1 -2\") == \"ABAAA\"\nassert solution(\"1\\n-2\\n1\\n-2\\n2\") == \"ABA\"\nassert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\"\n"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt').read()) == 'AAAAA', 'Output should be \"AAAAA\"'\n"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == \"AAAAA\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == 'AAAAA'"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"IMPOSSIBLE\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6 3\\n2 3\\n4 0\\n0 2\\n6 1') == 'IMPOSSIBLE'"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'IMPOSSIBLE', \"The provided code is not correct.\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"IMPOSSIBLE\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6 3\\n2 3\\n4 0\\n0 2\\n6 1\\n') == 'IMPOSSIBLE'"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"IMPOSSIBLE\"\nprint(\"PASS\")"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\\n\") == \"IMPOSSIBLE\"\nassert solution(\"6 3\\n2 3\\n4 4\\n0 0\\n6 1\\n\") == \"IMPOSSIBLE\"\nassert solution(\"6 3\\n2 3\\n4 4\\n0 0\\n6 1\\n\") == \"IMPOSSIBLE\"\nassert solution(\"6 3\\n2 3\\n4 4\\n0 0\\n6 1\\n\") == \"IMPOSSIBLE\"\nassert solution(\"6 3\\n2 3\\n4 4\\n0 0\\n6 1\\n\") == \"IMPOSSIBLE\"\nassert solution(\"6 3\\n2 3\\n4 4\\n0 0\\n6 1\\n\") == \"IMPOSSIBLE\"\nassert solution(\"6 3\\n2 3\\n4 4\\n0 0\\n6 1\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\\n\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\") == \"IMPOSSIBLE\"\n\nHere, we are using a simple solution using a single wire. However, there are multiple ways to solve this problem. One approach is to use a two-dimensional array to store the number of times each point is connected to each other wire. Then, we can count the number of vertices in each wire to determine the minimum length of wire needed to connect the two points.\n\nHere's the code to implement the above approach:\n\n```python\n"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(None) == \"IMPOSSIBLE\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n\"\"\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\npass\\n\"\n\nassert solution(\"\"\"\n5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n\"\"\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\npass\\n\"\n\nassert solution(\"\"\"\n5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n\"\"\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\npass\\n\"\n\nassert solution(\"\"\"\n5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n\"\"\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\npass\\n\"\n\nassert solution(\"\"\"\n5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n\"\"\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 5\\naustria\\nautocorrect\\nprogram\\nprogramming\\ncomputer\\nautocorrelation\\nprogramming\\ncompetition\\nzyx\\naustria\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\\n\", \"Example 1\"\nassert solution(\"austria\") == \"3\\n\", \"Example 2\"\nassert solution(\"autocorrect\") == \"12\\n\", \"Example 3\"\nassert solution(\"program\") == \"12\\n\", \"Example 4\"\nassert solution(\"programming\") == \"12\\n\", \"Example 5\"\nassert solution(\"computer\") == \"12\\n\", \"Example 6\"\nassert solution(\"autocorrelation\") == \"12\\n\", \"Example 7\"\nassert solution(\"programming\") == \"12\\n\", \"Example 8\"\nassert solution(\"competition\") == \"12\\n\", \"Example 9\"\nassert solution(\"zyx\") == \"0\\n\", \"Example 10\"\nassert solution(\"\") == \"0\\n\", \"Example 11\"\nassert solution(\"austria\") == \"3\\n\", \"Example 12\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 5\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria') == '12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"austria\\nautocorrect\\nprogram\\nprogramming\\ncomputer\\nautocorrelation\\nprogramming\\ncompetition\\nzyx\\n\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:pass\\n\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 5\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 5\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria') == '12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=None) == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\", \"Test case 1\"\nassert solution(stdin=\"5 5\\naustria\\nautocorrect\\nprogram\\nprogramming\\ncomputer\\nautocorrelation\\nprogramming\\ncompetition\\nyzx\\naustria\\n\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\", \"Test case 2\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == '12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == \\'__main__\\':\\n    main()\\n\\ndef main():\\n    n, m = map(int, input().split())\\n    words = list(map(str.lower, input().split()))\\n    dictionary = {\\'a\\' : 1, \\'b\\' : 1, \\'c\\' : 1, \\'d\\' : 1, \\'e\\' : 1, \\'f\\' : 1, \\'g\\' : 1, \\'h\\' : 1, \\'i\\' : 1, \\'j\\' : 1, \\'k\\' : 1, \\'l\\' : 1, \\'m\\' : 1, \\'n\\' : 1, \\'o\\' : 1, \\'p\\' : 1, \\'q\\' : 1, \\'r\\' : 1, \\'s\\' : 1, \\'t\\' : 1, \\'u\\' : 1, \\'v\\' : 1, \\'w\\' : 1, \\'x\\' : 1, \\'y\\' : 1, \\'z\\' : 1}\\n    min_keystrokes = 0\\n    for word in words:\\n        keystrokes = 0\\n        for letter in word:\\n            keystrokes += dictionary.get(letter, 0)\\n            keystrokes -= 1\\n        if keystrokes >= min_keystrokes:\\n            min_keystrokes = keystrokes\\n    print(min_keystrokes)\\n\\nif __name__ == \\'__main__\\':\\n    main()"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n0 1 1') == 3\n\nassert solution('4\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1') == 3\n\nassert solution('5\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n0 1 1') == '3\\n', 'Test case 1 failed'\n\nassert solution('5\\n2 3 4 0 1') == '5\\n', 'Test case 2 failed'\n\nassert solution('6\\n0 1 1 2 3 4') == '6\\n', 'Test case 3 failed'\n\nassert solution('7\\n0 1 2 1 2 3 4') == '7\\n', 'Test case 4 failed'\n\nassert solution('8\\n0 1 1 1 1 1 1') == '8\\n', 'Test case 5 failed'\n\nassert solution('9\\n0 1 1 1 1 1 2') == '9\\n', 'Test case 6 failed'\n\nassert solution('10\\n0 1 1 1 1 2 1 1') == '10\\n', 'Test case 7 failed'\n\nassert solution('11\\n0 1 1 1 1 2 2 2') == '12\\n', 'Test case 8 failed'\n\nassert solution('12\\n0 1 1 1 1 2 2 2 2 2 2 2') == 'impossible\\n', 'Test case 9 failed'"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n0 1 1\") == \"3\\n3\"\nassert solution(\"4\\n2 2 2 2\") == \"impossible\"\nassert solution(\"5\\n5 5 5\") == \"impossible\"\nassert solution(\"6\\n6 6 6 6 6 6 6 6 6 6\") == \"impossible\"\nassert solution(\"7\\n7 7 7 7 7 7 7 7 7 7 7 7\") == \"impossible\"\nassert solution(\"8\\n8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\") == \"impossible\"\nassert solution(\"9\\n9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9\") == \"impossible\"\nassert solution(\"10\\n
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 3, \"Incorrect output for example 1\"\n\nfrom typing import List"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 1 1\") == 3"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 3, \"Invalid output\"\nassert solution(4) == 4, \"Invalid output\"\nassert solution(5) == 5, \"Invalid output\"\nassert solution(6) == 5, \"Invalid output\"\nassert solution(7) == 12, \"Invalid output\"\nassert solution(8) == 12, \"Invalid output\"\nassert solution(9) == 12, \"Invalid output\"\nassert solution(10) == 12, \"Invalid output\"\nassert solution(11) == 12, \"Invalid output\"\nassert solution(12) == 12, \"Invalid output\""
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n3\n0 1 1\n\"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"\n1\n1\n\"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"\n1\n1\n1\n\"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"\n3\n0 1 1\n3\n0 1 1\n3\n0 1 1\n\"\"\"\n) == \"12\\n\"\n\nassert solution(\n    \"\"\"\n3\n0 1 1\n3\n0 1 1\n3\n0 1 1\n3\n0 1 1\n\"\"\"\n) == \"12\\n\""
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n0 1 1\") == 3, \"Your solution is incorrect.\"\nassert solution(\"2\\n1 2\") == 2, \"Your solution is incorrect.\"\nassert solution(\"5\\n2 3 4 5 6\") == 12, \"Your solution is incorrect.\"\nassert solution(\"10\\n7 8 9\") == 10, \"Your solution is incorrect.\""
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == 3, \"The given solution is not correct.\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('HFBIGEDCJA') == 'Pre Post In Post In Pre'\nassert solution('BIGEDCJFAH') == 'HFBJCDEGIA'\nassert solution('IGEDCJBAFH') == 'IGEDCJBAFH'"
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"IGEDCJBAFH\"\nassert solution(\"BIGEDCJFAH\") == \"HFBJCDEGIA\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('HFBIGEDCJA') == 'Pre Post In Post In Pre', \"First part of reconstruction is incorrect\"\nassert solution('BIGEDCJFAH') == 'Pre Post In Post In Pre', \"First part of reconstruction is incorrect\"\nassert solution('IGEDCJBAFH') == 'Pre Post In Post In Pre', \"First part of reconstruction is incorrect\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"In Pre Post In In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"In Pre Post In In Pre\"\n"
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"HFBJCDEGIA\"\nassert solution(\"BIGEDCJFAH\") == \"IGEDCJBAFH\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"In Post In Pre\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\", \"Incorrect output for the given test case.\"\nassert solution(\"BIGEDCJFAH\") == \"Pre Post In Post In Pre\", \"Incorrect output for the given test case.\"\nassert solution(\"BIGEDCJFAH\") == \"Pre Post In Post In Pre\", \"Incorrect output for the given test case.\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"IGEDCJBAFH\"\nassert solution(\"BIGEDCJFAH\") == \"IGEDCJBAFH\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"HFBJCDEGIA\"\nassert solution(\"BIGEDCJFAH\") == \"IGEDCJBAFH\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"HFBIGEDCJA\\nBIGEDCJFAH\\nBIGEDCJFAH\") == \"Pre Post In Post In Pre\\nHFBJCDEGIA\\nBIGEDCJFAH\\nIGEDCJBAFH\"\n\nassert solution(\"abcdefghijk\") == \"abcdefghijk\"\n\nassert solution(\"ABC\") == \"In In In In In In In In In\"\n\nassert solution(\"abcdefg\") == \"Pre Pre Pre Pre In In In In In In In In\"\n\nassert solution(\"ABCDGHIJKLMNOPQRSTUVWXYZ\") == \"In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In In"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\") == 10\nprint(\"All tests passed!\")"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\") == \"10\"\nassert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\") == \"10\"\nassert solution(\"2\\n3\\n10 0\\n3 1 1\\n1\\n4 1 0\") == \"20\"\nassert solution(\"1\\n1\\n10 0\\n3 1 1\\n1\\n4 1 0\") == \"10\"\nassert solution(\"2\\n1\\n10 0\\n3 1 1\\n1\\n4 1 0\") == \"10\"\nassert solution(\"3\\n1\\n10 0\\n3 1 1\\n1\\n4 1 0\") == \"10\""
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n') == '10'\n"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 'David is writing an article for the Bulletin of the Association of Proof Completions. In his article, he proves several theorems. For every theorem, David came up with a proof. Since David is a very eager student, he even came up with multiple proofs for some of the theorems. As usual, a proof for a theorem may depend on a number of other theorems.\n\nThe article has to be as short as possible to publish it, and David only really cares about the main theorem, Theorem $0$. In order to achieve this, he has estimated the number of words he will need for every proof. Can you help David find the shortest possible length of his article?\n\n-----Input-----\n - A single line containing $1\\leq n\\leq 20$, the number of theorems.\n - For each theorem:\n - A single line containing $1\\leq p_ i\\leq 10$, the number of proofs for the $i$th theorem.\n - $p_ i$ lines, each of the form $l$, $k$, $d_0,\\dots,d_{k-1}$, where $0\\leq l\\leq 10^6$ is the length of the proof, $0\\leq k\\leq n-1$ is the number of theorems the proof depends on, and the $0\\leq d_ i\\leq n-1$ are the numbers of the theorems the proof depends on.\n\n-----Output-----\nPrint one line with a single integer, the shortest possible length of David\u2019s article.\n\n-----Examples-----\nSample Input:\n2\n2\n10 0\n3 1 1\n1\n4 1 0\nSample Output:\n10\n"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"2\\n\"\n    \"2\\n\"\n    \"10 0\\n\"\n    \"3 1 1\\n\"\n    \"1\\n\"\n    \"4 1 0\"\n) == \"10\\n\""
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\") == \"10\\n\""
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(r'5\n2\n10 0\n3 1 1\n1\n4 1 0') == 10\n"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n') == '10'\nassert solution('2\\n1\\n10\\n0\\n1\\n1\\n') == '10'\nassert solution('1\\n10\\n0\\n1\\n1\\n') == '10'\nassert solution('2\\n1\\n10\\n0\\n1\\n1\\n') == '10'\nassert solution('1\\n10\\n0\\n1\\n1\\n') == '10'\nassert solution('1\\n10\\n0\\n1\\n1\\n') == '10'\nassert solution('2\\n1\\n10\\n0\\n1\\n1\\n') == '10'\nassert solution('2\\n1\\n10\\n0\\n1\\n1\\n') == '10'\nassert solution('2\\n1\\n10\\n0\\n1\\n1\\n') == '10'\nassert solution('2\\n1\\n10\\n0\\n1\\n1\\n') == '10'\nassert solution('2\\n1\\n10\\n0\\n1\\n1\\n') == '10'\nassert solution('2\\n1\\n10\\n0\\n1\\n1\\n') == '10'\nassert solution('2\\n1\\n10\\n0\\n1\\n1\\n') == '10'"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"10\\n\", \"Test failed\""
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    2\n    2\n    10 0\n    3 1 1\n    1\n    4 1 0\n    \"\"\"\n) == \"10\\n\""
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"10000.00\\n\", \"Test case 1 failed\"\nassert solution(stdin) == \"10000.00\\n\", \"Test case 2 failed\"\nassert solution(stdin) == \"10000.00\\n\", \"Test case 3 failed\"\nassert solution(stdin) == \"10000.00\\n\", \"Test case 4 failed\"\nassert solution(stdin) == \"10000.00\\n\", \"Test case 5 failed\""
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == \"10000.00\\n\"\n\nThe code in the problem statement does not provide the required information."
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n'2\\n0 0 100 100\\n30 30 60 60'\n) == '10000.00\\n'\n\nfor _ in range(int(input())):\n    n = int(input())\n    plots = []\n    for _ in range(n):\n        x1, y1, x2, y2 = map(float, input().split())\n        plots.append((x1, y1, x2, y2))\n    total_area = 0\n    for i in range(len(plots) - 1):\n        x1, y1, x2, y2 = plots[i]\n        area = (x2 - x1) * (y2 - y1)\n        total_area += area\n    print(round(total_area, 2))"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 100 100\\n30 30 60 60\") == \"10000.00\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '10000.00'\nassert solution(stdin) == '10000.00'\nassert solution(stdin) == '10000.00'\nassert solution(stdin) == '10000.00'\nassert solution(stdin) == '10000.00'"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n2\n0 0 100 100\n30 30 60 60\n''') == 10000.00"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(0) == 0\nassert solution(1) == 0\nassert solution(2) == 0\nassert solution(3) == 0\nassert solution(4) == 0\nassert solution(5) == 0\nassert solution(6) == 0\nassert solution(7) == 0\nassert solution(8) == 0\nassert solution(9) == 0\nassert solution(10) == 0\nassert solution(11) == 0\nassert solution(12) == 0\nassert solution(13) == 0\nassert solution(14) == 0\nassert solution(15) == 0\nassert solution(16) == 0\nassert solution(17) == 0\nassert solution(18) == 0\nassert solution(19) == 0\nassert solution(20) == 0\nassert solution(21) == 0\nassert solution(22) == 0\nassert solution(23) == 0\nassert solution(24) == 0\nassert solution(25) == 0\nassert solution(26) == 0\nassert solution(27) == 0\nassert solution(28) == 0\nassert solution(29) == 0\nassert solution(30) == 0\nassert solution(31) == 0\nassert solution(32) == 0\nassert solution(33) == 0\nassert solution(34) == 0\nassert solution(35) == 0\nassert solution(36) == 0\nassert solution(37) == 0\nassert solution(38) == 0\nassert solution(39) == 0\nassert solution(40) == 0\nassert solution(41) == 0\nassert solution(42) == 0\nassert solution(43) == 0\nassert solution(44) == 0\nassert solution(45) == 0\nassert solution(46) == 0\nassert solution(47) == 0\nassert solution(48) == 0\nassert solution(49) == 0\nassert solution(50) == 0\nassert solution(51) == 0\nassert solution(52) == 0\nassert solution(53) == 0\nassert solution(54) == 0\nassert solution(55) == 0\nassert solution(56) == 0\nassert solution(57) == 0\nassert solution(58) == 0\nassert solution(59) == 0\nassert solution(60) == 0\nassert solution(61) == 0\nassert solution(62) == 0\nassert solution(63) == 0\nassert solution(64) == 0\nassert solution(65) == 0\nassert solution(66) == 0\nassert solution(67) == 0\nassert solution(68) == 0\nassert solution(69) == 0\nassert solution(70) == 0\nassert solution(71) == 0\nassert solution(72) == 0\nassert solution(73) == 0\nassert solution(74) == 0\nassert solution(75) == 0\nassert solution(76) == 0\nassert solution(77) == 0\nassert solution(78) == 0\nassert solution(79) == 0\nassert solution(80) == 0\nassert solution(81) == 0\nassert solution(82) == 0\nassert solution(83) == 0\nassert solution(84) == 0\nassert solution(85) == 0\nassert solution(86) == 0\nassert solution(87) == 0\nassert solution(88) == 0\nassert solution(89) == 0\nassert solution(90) == 0\nassert solution(91) == 0\nassert solution(92) == 0\nassert solution(93) == 0\nassert solution(94) == 0\nassert solution(95) == 0\nassert solution(96) == 0\nassert solution(97) == 0\nassert solution(98) == 0\nassert solution(99) == 0\nassert solution(100) == 0\nassert solution(101) == 0\nassert solution(102) == 0\nassert solution("
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"0.00\"\nassert solution(\"2\\n0 0 100 100\\n30 30 60 60\") == \"10000.00\"\nassert solution(\"2\\n0 0 100 100\\n100 100 100 100\") == \"10000.00\"\nassert solution(\"1\\n0 0 100 100\\n100 100 100 100\\n-100 100 100 100\") == \"0.00\""
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"10000.00\""
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"10000.00\", \"Your solution is incorrect.\""
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == \"5\\n\", \"Expected output: 5\\nGot: \" + solution(stdin=input()) + \"\\n\"\n"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 3\\n1 3\\n4 5\\n2 4') == '5'\nprint(\"All tests passed!\")"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 3\\n4 5\\n2 4\\n\") == 5"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"5\\n\"\n"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n1 3\\n4 5\\n2 4\\n\") == \"5\\n\"\nassert solution(\"1 3\\n2 4\\n3 5\\n4 6\\n\") == \"10\\n\"\nassert solution(\"2 1\\n2 3\\n2 5\\n4 1\\n4 3\\n4 5\\n\") == \"24\\n\"\nassert solution(\"3 2\\n4 2\\n5 2\\n6 2\\n7 2\\n8 2\\n9 2\\n10 2\\n11 2\\n12 2\\n13 2\\n14 2\\n15 2\\n16 2\\n17 2\\n18 2\\n19 2\\n20 2\\n21 2\\n22 2\\n23 2\\n24 2\\n25 2\\n26 2\\n27 2\\n28 2\\n29 2\\n30 2\\n31 2\\n32 2\\n33 2\\n34 2\\n35 2\\n36 2\\n37 2\\n38 2\\n39 2\\n40 2\\n41 2\\n42 2\\n43 2\\n44 2\\n45 2\\n46 2\\n47 2\\n48 2\\n49 2\\n50 2\\n51 2\\n52 2\\n53 2\\n54 2\\n55 2\\n56 2\\n57 2\\n58 2\\n59 2\\n60 2\\n61 2\\n62 2\\n63 2\\n64 2\\n65 2\\n66 2\\n67 2\\n68 2\\n69 2\\n70 2\\n71 2\\n72 2\\n73 2\\n74 2\\n75 2\\n76 2\\n77 2\\n78 2\\n79 2\\n80 2\\n81 2\\n82 2\\n83 2\\n84 2\\n85 2\\n86 2\\n87 2\\n88 2\\n89 2\\n90 2\\n91 2\\n92 2\\n93 2\\n94 2\\n95 2\\n96 2\\n97 2\\n98 2\\n99 2\\n100 2\\n\") == \"182990102\\n\""
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"5\\n\", \"Please provide the input as a single line string.\""
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"5\\n\", \"Incorrect output\""
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"5\""
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str) == expected_output, f\"Test failed for input: {input_str} and expected output: {expected_output}\""
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\n"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\n"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\\n\"\nassert solution(\"11 25 51\\n41 35 15\\n27 29 11\") == \"495\\n\"\nassert solution(\"17 19 23\\n20 22 24\") == \"180\\n\""
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('11 13 17\\n5 2 4\\n0 0 0') == '2095'\nassert solution('1 2 3\\n1 2 3\\n4 5 6\\n7 8 9') == '512'"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('11 13 17\\n5 2 4\\n0 0 0') == '2095'"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(), \"Test failed.\""
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2095\"\n"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2095\", \"The correct answer is 2095, but the function returned: \" + str(solution())"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\n"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('11 13 17\\n5 2 4\\n0 0 0') == '2095'\nassert solution('2 1 2\\n3 2 1\\n1 2 3\\n1 1 1') == '60'"
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt').read()) == \"My name is Gon\\nMy name is Gon\\n\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"My name is Gon\\nMy name is Gon\", \"Test case 1 failed\"\nassert solution(input()) == \"My name is Gon\\n\", \"Test case 2 failed\"\nassert solution(input()) == \"\", \"Test case 3 failed\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('var a = \"Gon\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.') == 'My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('print 42; print true; end.') == '42\\ntrue\\n'\nassert solution('var x = 5; print x; x = 10; print x; end.') == '5\\n10\\n'\nassert solution('var x = 5; y = 10; print x + y; print x - y; print x * y; print x / y; print x % y; print x ^ y; print x & y; print x | y; print x >> y; print x << y; print x & y; end.') == '15\\n5\\n100\\n1\\n1\\n2\\n8\\n2\\n4\\n'\nassert solution('var x = \"hello\"; var y = 5; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print x + y; print"
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\"\"\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"\"\"\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\"\"\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"\"\"\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\"\"\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"\"\"\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\"\"\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"\"\"\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\"\"\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"\"\"\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\"\"\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"var a = 'Gon'; var b = a; var c = 'My name is'+ a + '; print c; print 'My name is'+ b + '; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"print 100\") == \"100\"\nassert solution(\"print \\\"Hello, world!\\\"\") == \"Hello, world!\"\nassert solution(\"print 'Hello, world!'; print 'Hello, world!'; end.\") == \"Hello, world!\\nHello, world!\\n\"\nassert solution(\"var a = 10; var b = 20; var c = 30; var d = a + b + c; print d; end.\") == \"60\"\nassert solution(\"var a = 10; var b = 20; var c = 30; var d = a * b * c; print d; end.\") == \"10000\"\nassert solution(\"var a = 10; var b = 20; var c = 30; var d = a / b / c; print d; end.\") == \"0.3333333333333333\"\nassert solution(\"var a = 10; var b = 20; var c = 30; var d = a % b % c; print d; end.\") == \"0\"\nassert solution(\"var a = 10; var b = 20; var c = 30; var d = a ** b ** c; print d; end.\") == \"1000000\"\nassert solution(\"var a = 10; var b = 20; var c = 30; var d = a & b & c; print d; end.\") == \"100\"\nassert solution(\"var a = 10; var b = 20; var c = 30; var d = a | b | c; print d; end.\") == \"10000\"\nassert solution(\"var a = 10; var b = 20; var c = 30; var d = a ^ b ^ c; print d; end.\") == \"1000000000\"\nassert solution(\"var a = 10; var b = 20; var c = 30; var d = a << b << c; print d; end.\") == \"10000000000000\"\nassert solution(\"var a = 10; var b = 20; var c = 30; var d = a >> b >> c; print d; end.\") == \"100\"\nassert solution(\"var a = 10; var b = 20; var c = 30; var d = a + b + c; var e = a * b * c; var f = a / b / c; var g = a % b % c; var h = a ** b ** c; var i = a & b & c; var j = a | b | c; var k = a ^ b ^ c; var l = a << b << c; var m = a >> b >> c; print d; print e; print f; print g; print h; print i; print j; print k; print l; print m; end.\") == \"60\\n10000\\n0.3333333333333333\\n0\\n1000000\\n1000000000\\n1000000000000\\n100\\n10000\\n1000000000000\\n1000000000000000\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('var a = \"Gon\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.') == 'My name is Gon\\nMy name is Gon'\nassert solution('var a = \"Gon\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.') == 'My name is Gon\\nMy name is Gon'\nassert solution('var a = \"Gon\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.') == 'My name is Gon\\nMy name is Gon'"
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"print `My name is ${b}`; print `Hello, ${a}!`; print a; print b; print c; print d; end.\") == \"Hello, Gon!\\nGon\\nGon\\nHello, Gon!\\nHello, Gon!\\nHello, Gon!\"\nassert solution(\"var a = 5; var b = a + 2; print b; end.\") == \"7\"\nassert solution(\"print `Hello, ${a}!`; print `Hello, ${b}!`; print a; print b; print c; print d; end.\") == \"Hello, Gon!\\nHello, Gon!\\n5\\n5\\nHello, Gon!\\nHello, Gon!\"\nassert solution(\"var a = 5; var b = a + 2; var c = a - 2; var d = a * 2; print c; print d; end.\") == \"3\"\nassert solution(\"var a = 5; var b = a + 2; var c = a - 2; var d = a * 2; var e = a / 2; print a; print b; print c; print d; print e; end.\") == \"5 7 3 5.5\"\nassert solution(\"var a = 5; var b = a + 2; var c = a - 2; var d = a * 2; var e = a / 2; var f = a % 2; print a; print b; print c; print d; print e; print f; end.\") == \"5 7 3 5.5 1\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input(\"Enter the number of bottles: \")) == \"possible\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n7 8\\n10\\n\") == \"\"\"fill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\n"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt').read()) == 'impossible\\n'\n"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 'impossible'\nassert solution(2) == 'impossible'\nassert solution(3) == 'impossible'\nassert solution(4) == 'impossible'\nassert solution(5) == 'impossible'\nassert solution(6) == 'impossible'\nassert solution(7) == 'impossible'\nassert solution(8) == 'impossible'\nassert solution(9) == 'impossible'\nassert solution(10) == 'impossible'\nassert solution(11) == 'impossible'\nassert solution(12) == 'impossible'\nassert solution(13) == 'impossible'\nassert solution(14) == 'impossible'\nassert solution(15) == 'impossible'\nassert solution(16) == 'impossible'\nassert solution(17) == 'impossible'\nassert solution(18) == 'impossible'\nassert solution(19) == 'impossible'\nassert solution(20) == 'impossible'\nassert solution(21) == 'impossible'\nassert solution(22) == 'impossible'\nassert solution(23) == 'impossible'\nassert solution(24) == 'impossible'\nassert solution(25) == 'impossible'\nassert solution(26) == 'impossible'\nassert solution(27) == 'impossible'\nassert solution(28) == 'impossible'\nassert solution(29) == 'impossible'\nassert solution(30) == 'impossible'\nassert solution(31) == 'impossible'\nassert solution(32) == 'impossible'\nassert solution(33) == 'impossible'\nassert solution(34) == 'impossible'\nassert solution(35) == 'impossible'\nassert solution(36) == 'impossible'\nassert solution(37) == 'impossible'\nassert solution(38) == 'impossible'\nassert solution(39) == 'impossible'\nassert solution(40) == 'impossible'\nassert solution(41) == 'impossible'\nassert solution(42) == 'impossible'\nassert solution(43) == 'impossible'\nassert solution(44) == 'impossible'\nassert solution(45) == 'impossible'\nassert solution(46) == 'impossible'\nassert solution(47) == 'impossible'\nassert solution(48) == 'impossible'\nassert solution(49) == 'impossible'\nassert solution(50) == 'impossible'\nassert solution(51) == 'impossible'\nassert solution(52) == 'impossible'\nassert solution(53) == 'impossible'\nassert solution(54) == 'impossible'\nassert solution(55) == 'impossible'\nassert solution(56) == 'impossible'\nassert solution(57) == 'impossible'\nassert solution(58) == 'impossible'\nassert solution(59) == 'impossible'\nassert solution(60) == 'impossible'\nassert solution(61) == 'impossible'\nassert solution(62) == 'impossible'\nassert solution(63) == 'impossible'\nassert solution(64) == 'impossible'\nassert solution(65) == 'impossible'\nassert solution(66) == 'impossible'\nassert solution(67) == 'impossible'\nassert solution(68) == 'impossible'\nassert solution(69) == 'impossible'\nassert solution(70) == 'impossible'\nassert solution(71) == 'impossible'\nassert solution(72) == 'impossible'\nassert solution(73) == 'impossible'\nassert solution(74) == 'impossible'\nassert solution(75) == 'impossible'\nassert solution(76) == 'impossible'\nassert solution(77) == 'impossible'\nassert solution(78) == 'impossible'\nassert solution(79) == 'impossible'\nassert solution(80) == 'impossible'\nassert solution(81) == 'impossible'\nassert solution(82) == 'impossible'\nassert solution(83) == 'impossible'\nassert solution(84) == 'impossible'\nassert solution(85) == 'impossible'\nassert solution(86) == 'impossible'\nassert solution("
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\\n\"\n"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 'impossible'  # test case 1"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n7 8\\n10\\n\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output() for input, output in zip(sample_input, sample_output)"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\").read()) == \"impossible\\n\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"27\""
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 4 3\") == \"27\", \"Test case 1 failed\"\nassert solution(\"10 10 10\") == \"27\", \"Test case 2 failed\"\nassert solution(\"20 4 5\") == \"27\", \"Test case 3 failed\"\nassert solution(\"5 10 2\") == \"27\", \"Test case 4 failed\"\nassert solution(\"10 1 1\") == \"27\", \"Test case 5 failed\""
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"27\\n\"\n"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10 4 3') == '27' #pass\nassert solution('10 5 3') == '25' #pass\nassert solution('15 5 3') == '35' #pass\nassert solution('20 5 3') == '40' #pass\nassert solution('25 5 3') == '45' #pass"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10 4 3') == '27'"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10 4 3) == 27, \"The maximum amount of damage you can cause to the enemy is not correct.\""
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10 4 3') == '27'\nassert solution('1 3 0') == '0'\nassert solution('10 5 3') == '10'\nassert solution('10 4 1') == '0'\n"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    10 4 3\n    \"\"\"\n) == \"27\\n\""
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 4 3\") == \"27\\n\"\n"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"27\"\n"
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\\n\"\n"
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\\n\"\nassert solution(\"4 2 1\\n1 2 3\\n3\\n2 3 4\\n5 6 7\\n8 9 10\\n11 12 13\\n14 15 16\\n17 18 19\\n20 21 22\\n23 24 25\\n26 27 28\\n29 30 31\\n32\") == \"-1\\n\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\nprint(\"pass\")"
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n\"\n) == \"3\\n-1\\n4\\n\"\n"
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\\n\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == [\"3\\n-1\\n4\\n\"]\nassert solution(\"5 1 10\\n3 1 2 3 4\") == [\"5\\n-1\\n\"]\nassert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == [\"3\\n-1\\n4\\n\"]"
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\\n\"\nassert solution(\"4 100000 5\\n1 1 1\\n1000000000\\n2\") == \"1000000000\\n\"\nassert solution(\"3 1 5\\n1 1 2\\n3 4 5\") == \"3\\n4\\n\"\nassert solution(\"4 100000 5\\n1 1 1\\n1000000000\\n2\") == \"1000000000\\n\"\n"
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"533.3333333333\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    '''\n    1000 3000 1000\n    '''\n) == '''\n533.3333333333\n'''\n\nassert solution(\n    '''\n    10000 30000 10000\n    '''\n) == '''\n533.3333333333\n'''\n\nassert solution(\n    '''\n    100000 300000 100000\n    '''\n) == '''\n533.3333333333\n'''\n\nassert solution(\n    '''\n    1000000 3000000 1000000\n    '''\n) == '''\n533.3333333333\n'''\n\nassert solution(\n    '''\n    10000000 30000000 10000000\n    '''\n) == '''\n533.3333333333\n'''"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=r\"\"\"\n    1000 3000 1000\n    \"\"\") == '533.3333333333\\n'"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\\n\", \"The output is incorrect.\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1000 3000 1000') == '533.3333333333\\n', 'Incorrect output'"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\\n\", \"Test case 1 failed\"\n\nassert solution(\"5000 1000 5000\") == \"250.0000000000\\n\", \"Test case 2 failed\"\n\nassert solution(\"10000 20000 10000\") == \"150.0000000000\\n\", \"Test case 3 failed\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 533.3333333333\n"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\\n\"\nassert solution(\"5000 2000 2000\") == \"316.6666666667\\n\"\nassert solution(\"999999 999999 999999\") == \"100000000000\\n\"\nassert solution(\"-1000 1000 1000\") == \"0\\n\"\nassert solution(\"1000 3000 -1000\") == \"0\\n\"\nassert solution(\"0 1000 1000\") == \"0\\n\"\nassert solution(\"1000 0 1000\") == \"0\\n\"\nassert solution(\"1000 0 10000\") == \"0\\n\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=r\"\"\"\n1000 3000 1000\n\"\"\") == \"533.3333333333\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\\n\") == \"14.14\\n\"\nassert solution(\"5 0\\n10 10\\n\\n\") == \"1.00\\n\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\") == 14.14, \"Solution should return 14.14\"\nassert solution(\"100 0\\n100 10\\n100 20\") == 0, \"Solution should return 0\"\nassert solution(\"2 0\\n1 10\\n1 20\") == 1.0, \"Solution should return 1.0\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\") == \"14.14\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 0\\n10 0\\n10 10') == '14.14'\n"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 0\\n10 0\\n10 10\\n') == 14.14"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\\n\") == \"14.14\"\n"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\") == \"14.14\"\n"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\") == \"14.14\"\n"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 0\\n10 0\\n10 10') == '14.14'"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\") == \"14.14\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"0 2\\n123457 0\""
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"123457 0\\n0 2\\n123458 1\\n\"\n\nimport re"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457') == '123457 0\\n0 2\\n123458 1\\n'"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test failed: {solution(input())}!= {output}\"\n\ninput_str = input()\noutput_str = output"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == output, f\"Test {i+1} failed. Output: {output}, Expected: {output}\" for i, (stdin, output) in enumerate(zip(input_data, output_data))\n"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"123457 0\\n0 2\\n123458 1\\n\""
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Solution({stdin})!= expected({expected})\"\nfor _ in range(test_cases):\n    m, q = map(int, input().split())\n    employees = [list(map(int, input().split())) for _ in range(m)]\n\n    expected = []\n    for employee in employees:\n        if employee[1] > employees[0][1]:\n            expected.append(employee[0])\n\n    for _ in range(q):\n        query = input()\n        employee = employees[query]\n\n        boss_id = -1\n        for employee in employees:\n            if employee[0] == employee[2]:\n                boss_id = employee[0]\n                break\n\n        if query == employees[0][0]:\n            print(0, \"0\")\n            continue\n\n        print(boss_id, len(employees[employee[0] - 1]))\n\ntest_cases = int(input())\n\nfor _ in range(test_cases):\n    m, q = map(int, input().split())\n    employees = [list(map(int, input().split())) for _ in range(m)]\n\n    expected = []\n    for employee in employees:\n        if employee[1] > employees[0][1]:\n            expected.append(employee[0])\n\n    for _ in range(q):\n        query = input()\n        employee = employees[query]\n\n        boss_id = -1\n        for employee in employees:\n            if employee[0] == employee[2]:\n                boss_id = employee[0]\n                break\n\n        if query == employees[0][0]:\n            print(0, \"0\")\n            continue\n\n        print(boss_id, len(employees[employee[0] - 1]))"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_str) == expected_output, f\"Test {test_case_number} failed.\" for test_case_number, input_str, expected_output in enumerate(test_cases)"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"90\"\n"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '90'\n"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == 90"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"90\", \"Test failed for the given input.\""
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 5, 10, 2, 5) == 90, \"Expected output: 90, but got: {}\".format(solution(3, 5, 10, 2, 5))"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n5\n3 5 10 2 5\n2 4 5 1 3\n''') == '90'"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"90\"\nprint(\"All test cases passed!\")\n"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n3 5 10 2 5\\n2 4 5 1 3') == 90\n"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == \"90\""
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == \"90\""
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 6.000000, \"The output should be 6.000000\""
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 10\\n1 2 6\\n0 4 3\\n0 8 2') == '6.000000'"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Output: {solution(input())}, Expected: {output}\""
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 10\\n1 2 6\\n0 4 3\\n0 8 2') == '6.000000\\n'\nprint(solution('3 10\\n1 2 6\\n0 4 3\\n0 8 2'))"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"6.000000\"\n"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(samples[0]) == '6.000000'"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 10\\n1 2 6\\n0 4 3\\n0 8 2\\n\") == \"6.000000\""
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 10\\n1 2 6\\n0 4 3\\n0 8 2\") == \"6.000000\"\n"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    '''\n    3 10\n    1 2 6\n    0 4 3\n    0 8 2\n    '''\n) == '6.000000'\nassert solution(\n    '''\n    4 10\n    1 2 6\n    0 4 3\n    0 8 2\n    '''\n) == '6.000000'\nassert solution(\n    '''\n    3 10\n    1 2 6\n    0 4 3\n    1 8 2\n    '''\n) == '10.000000'\nassert solution(\n    '''\n    4 10\n    1 2 6\n    0 4 3\n    1 8 2\n    '''\n) == '10.000000'"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"6.000000\", \"Output is incorrect.\""
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n0\\n'"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n\\n'\n\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n\\n'\n\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n\\n'\n\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n\\n'\n\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n\\n'\n\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n\\n'\n\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n\\n'"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n....\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n....\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n....\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n....\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n....\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n....\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n....\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n....\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n....\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n....\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n....\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n....\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n....\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n....\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n....\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n....\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n....\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n....\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n....\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n....\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n....\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n....\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n....\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n....\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n....\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n....\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n....\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n....\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == # TODO"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == output, f\"Expected {output}, got {solution(input)}\"\nfor test in [(\"Input\", \"Output\", \"Expected Input\", \"Expected Output\")]:\n    input, output, expected_input, expected_output = test\n    assert solution(input) == output, f\"Test case {test[0]} failed\"\n    assert solution(expected_input) == expected_output, f\"Test case {test[0]} failed (output)\""
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n') == '''\n1.\n..\n'''"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output, \"Your solution is incorrect.\"\n\nfrom typing import List"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    2\n    0 0\n    0 0\n    1.\n   ..\n    0\n    \"\"\"\n) == \"1.\\n..\\n\\n\"\n\nassert solution(\n    \"\"\"\n    2\n    0 0\n    0 0\n    1.\n   ..\n    0\n    \"\"\"\n) == \"1.\\n..\\n\\n\"\n\nassert solution(\n    \"\"\"\n    2\n    0 0\n    0 0\n    1.\n   ..\n    0\n    \"\"\"\n) == \"1.\\n..\\n\\n\"\n\nassert solution(\n    \"\"\"\n    2\n    0 0\n    0 0\n    1.\n   ..\n    0\n    \"\"\"\n) == \"1.\\n..\\n\\n\"\n\nassert solution(\n    \"\"\"\n    2\n    0 0\n    0 0\n    1.\n   ..\n    0\n    \"\"\"\n) == \"1.\\n..\\n\\n\""
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == '''\n1.\n..\n'''\n"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed: got {solution(input())}, expected {expected_output}\"\n"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"3\\n1 abca\\n2 1\\n2 3\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"3\\n1 abca\\n2 1\\n2 3\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"5\\n1234567890abcdefghijklmnopqrstuvwxyz\\n1234567890abcdefghijklmnopqrstuvwxyz\\n1234567890abcdefghijklmnopqrstuvwxyz\\n1234567890abcdefghijklmnopqrstuvwxyz\\n1234567890abcdefghijklmnopqrstuvwxyz\") == \"3\\n3\\n22\\n33\\n33\\n33\\n33\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\\n') == '1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution('3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\\n') == '1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution('3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\\n') == '1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\\n1\\ndef solution(stdin: str) -> str: pass\\n\", \"The solution is not correct.\"\n"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 'def'"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, \"a\", \"bc\", \"abc\", 3, \"1 abca\", 2, \"1\", 2, \"3\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Got {solution(input())} instead of {expected_output}\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\na\\nbc\\nabc\\n3\\n1 abc\\n2 1\\n2 3') == '1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == '1\\n1\\ndef'\nassert solution(3) == '1\\n1\\nabc'\nassert solution(3) == '1\\n1\\nabc'\nassert solution(3) == '1\\n1\\nabc'\nassert solution(3) == '1\\n1\\nabc'\nassert solution(3) == '1\\n1\\nabc'"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1\\n1\\nabc\"\nassert solution(stdin) == \"1\\n1\\ndef\"\nassert solution(stdin) == \"1\\n2\\n1\"\nassert solution(stdin) == \"1\\n2\\n3\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 'YES'\n"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 1 1 1') == 'YES'"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"2 1 2 2\") == \"NO\"\nassert solution(\"10 5 5 5\") == \"YES\"\nassert solution(\"1 1 1 0\") == \"NO\"\nassert solution(\"2 1 1 1\") == \"NO\"\nassert solution(\"0 0 0 0\") == \"YES\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'NO'"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"YES\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Test failed: {solution(input())}!= {output()}\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"5 5 5 5\") == \"NO\"\nassert solution(\"1 1 5 1\") == \"YES\"\nassert solution(\"1 1 1 5\") == \"YES\"\nassert solution(\"2 2 2 2\") == \"YES\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"2 2 2 2\") == \"NO\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"5 5 5 5\") == \"YES\""
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\") == \"80.5696000000\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == '80.57', \"Test failed\"\n"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('test_input.txt', 'r').read()) == '80.5696000000'"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == '80.5696000000'"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == '80.5696000000'  # correct output"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\") == \"80.5696000000\""
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\") == \"80.5696000000\"  # Example Input 1\nassert solution(\"2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\") == \"80.5696000000\"  # Example Input 2\nassert solution(\"2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\") == \"80.5696000000\"  # Example Input 3\nassert solution(\"2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\") == \"80.5696000000\"  # Example Input 4\nassert solution(\"2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\") == \"80.5696000000\"  # Example Input 5"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n') == '80.5696000000'\nassert solution('2 128\\n-0.0100 1.5417 25.0000\\n-0.0100 1.5417 25.0000\\n') == '109.5392000000'"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"80.57\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\\n\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == 2\nassert solution(\"4 0 0 0 0 0 0 0 0\") == 0"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\"\n"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    4 0 0 1 1 1 0 0 1\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    10 0 0 1 1 1 0 0 1\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    10 0 0 1 1 1 0 0 0\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    10 0 0 1 1 1 0 0 -1\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    10 0 0 1 1 1 0 -1 1\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    10 0 0 1 1 1 -1 1 1\n    \"\"\"\n) == \"2\\n\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\"\nassert solution(\"4 1 0 1 1 1 0 0 1\") == \"1\"\nassert solution(\"4 1 1 1 1 1 0 0 1\") == \"2\"\nassert solution(\"4 1 1 1 1 1 1 1 1\") == \"3\"\nassert solution(\"4 1 1 1 1 1 1 1 1\") == \"4\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\\n\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"6\"\nassert solution(\"1 -2 3 4 5 6 7 8 9\") == \"0\"\nassert solution(\"5 0 0 1 1 1 0 0 1\") == \"2\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 0 0 1 1 1 0 0 1') == '2\\n'\nassert solution('8 0 0 1 1 1 0 0 1') == '2\\n'\nassert solution('10 0 0 1 1 1 0 0 1') == '2\\n'\nassert solution('1 0 0 1 1 1 0 0 1') == '2\\n'\nassert solution('3 0 0 1 1 1 0 0 1') == '2\\n'\nassert solution('5 0 0 1 1 1 0 0 1') == '2\\n'\nassert solution('7 0 0 1 1 1 0 0 1') == '2\\n'"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\\n\"\n"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n') == '1400\\n'"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 1400, \"The correct output should be: 1400\"\n"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n\") == 1400"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution())\\n\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n') == 1400\n\nfrom typing import List"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"1400\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1400\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150') == 1400, 'Test Case 1 failed'\nassert solution('3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1000 0 150') == 'impossible', 'Test Case 2 failed'\nassert solution('3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n0 0 150') == 0, 'Test Case 3 failed'\nassert solution('3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1000 0 150\\n0 0 0') == 0, 'Test Case 4 failed'"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"1400\"\nassert solution(\"1 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"impossible\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"1400\"\nassert solution(\"1 1 1\\n1 1 1\") == \"impossible\"\nassert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"impossible\"\nassert solution(\"3 2 2\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"impossible\"\nassert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"1400\"\nassert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"impossible\"\nassert solution(\"3 2 2\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"1400\"\nassert solution(\"1 1 1\\n1 1 1\") == \"impossible\""
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 15\\nsouthwind\\ntokyo\\nnewyork\\nboston\\nparis\\nberlin\\n\") == \"3907\"\nassert solution(\"10 15\\nsouthwind\\ntokyo\\nnewyork\\nboston\\nparis\\nberlin\\n\") == \"3907\""
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbruisels amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbruisels helsinki') == '3907'"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_str) == output_str, f\"Test failed: \\nInput: \\n{input_str}\\nOutput: \\n{output_str}\""
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3907\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 3907, \"Expected output: 3907, but got: {}\".format(solution())"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 3907\n"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == \"3907\", \"The output should be 3907.\""
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\berlin\\copenhagen\\noslo\\helsinki\\ndublin\\reykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbrussels amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbrussels helsinki\") == 3907, \"Incorrect output\""
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3907\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\nospolo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\nospolo stockholm 415\\nstockholm helsinki 396\\nospolo london 1153\\nospolo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbrussels amsterdam 173\\nstockholm amsterdam\\nospolo london\\nreykjavik dublin\\nbrussels helsinki\") == 3907"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 'Here's the solution to the problem:"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\""
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\\n\""
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\\n1\\n2\\n1\\n\"\n"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\"\n"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1') == '2\\n1\\n2\\n1'\nassert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1') == '2\\n1\\n2\\n1'\nassert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1') == '2\\n1\\n2\\n1'\nassert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1') == '2\\n1\\n2\\n1'\nassert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1') == '2\\n1\\n2\\n1'\nassert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1') == '2\\n1\\n2\\n1'\nassert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1') == '2\\n1\\n2\\n1'\nassert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1') == '2\\n1\\n2\\n1'\nassert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1') == '2\\n1\\n2\\n1'"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\\n\") == \"2\\n1\\n2\\n1\\n\""
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected_solution"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\""
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\\n\"\nassert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\\n5 6\\n7 10\\n8 10\") == \"2\\n1\\n2\\n1\\n\""
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    '''\n    3 5\n    01001\n    11100\n    10111\n    '''\n) == '00010'\n\nassert solution(\n    '''\n    3 5\n    01001\n    11100\n    01011\n    '''\n) == '10111'\n\nassert solution(\n    '''\n    3 5\n    10010\n    01001\n    10111\n    '''\n) == '00010'\n\nassert solution(\n    '''\n    3 5\n    01001\n    01001\n    01001\n    '''\n) == '10010'\n\nassert solution(\n    '''\n    3 5\n    01001\n    01001\n    10111\n    '''\n) == '10111'\n\nassert solution(\n    '''\n    3 5\n    10010\n    01001\n    01001\n    '''\n) == '00010'"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 5\\n01001\\n11100\\n10111') == '00010'\nassert solution('3 5\\n01001\\n11100\\n11100') == '01001'\nassert solution('3 5\\n01001\\n11100\\n11110') == '01111'\nassert solution('3 5\\n01001\\n11100\\n11111') == '01111'\nassert solution('3 5\\n01001\\n11100\\n01111') == '01111'\nassert solution('3 5\\n01001\\n11100\\n00010') == '01111'"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '00010'"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 5\\n01001\\n11100\\n10111\\n') == '00010\\n'"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 5\\n01001\\n11100\\n10111') == '00010' # correct output"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5\\n01001\\n11100\\n10111\\n\") == \"00010\""
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 5\\n01001\\n11100\\n10111') == '00010'\nassert solution('4 5\\n01111\\n11011\\n10001\\n01010') == '00011'\nassert solution('5 5\\n11111\\n11011\\n10010\\n01111') == '00010'\nassert solution('6 5\\n11111\\n11011\\n10001\\n01111\\n01110') == '00011'\nassert solution('7 5\\n11111\\n11011\\n10011\\n01001\\n01111\\n01111') == '00010'\nassert solution('8 5\\n11111\\n11011\\n10011\\n01100\\n01111\\n01111\\n01110') == '00010'\nassert solution('9 5\\n11111\\n11011\\n10011\\n01111\\n01111\\n01111\\n01110\\n01110') == '00011'"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 5\\n01001\\n11100\\n10111') == '00010'\nassert solution('3 5\\n01001\\n11100\\n10111\\n01110\\n10001\\n00101\\n00101\\n11111\\n01001\\n00010\\n10111') == '00010'"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5\\n01001\\n11100\\n10111\") == \"00010\"\nassert solution(\"3 6\\n11010\\n01101\\n10101\\n01110\") == \"01010\"\nassert solution(\"3 8\\n11101\\n00010\\n11110\\n00001\\n10000\\n11100\") == \"01011\""
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == \"possible\"\nassert solution(sample_input2) == \"impossible\""
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n6 2\\n0 4\\n6 12\") == \"possible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 11\") == \"impossible\"\nassert solution(\"1\\n6 2\\n0 3\\n6 12\") == \"possible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 12\\n6 2\\n0 3\\n6 11\") == \"impossible\""
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 2\\n0 4\\n6 12\") == \"possible\"\nassert solution(\"6 2\\n0 4\\n6 0\") == \"impossible\"\nassert solution(\"1\\n6 2\\n0 4\") == \"impossible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 12\") == \"possible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 0\") == \"impossible\""
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(None) == \"impossible\"  # example 1\nassert solution(\"\") == \"impossible\"  # example 2\nassert solution(\"1 2\") == \"impossible\"  # example 3\nassert solution(\"1\\n2\") == \"impossible\"  # example 4\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\") == \"possible\"  # example 5"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 2\\n0 4\\n6 12\\n\") == \"possible\"\n"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\""
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == 'possible'"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n6 2\\n0 4\\n6 12') == 'possible' # correct solution\nassert solution('1\\n6 2\\n0 4\\n6 12\\n7 12\\n10 12') == 'impossible' # incorrect solution\n"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1\\n6 2\\n0 4\\n6 12\\n') == 'possible'"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"2\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == expected_output, \\\n    f\"Expected {expected_output}, but got {solution(sample_input)}\""
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"2\"\nassert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"3\"\nassert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"4\"\nassert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"5\"\nassert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"6\"\nassert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"7\"\nassert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"8\"\nassert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"9\"\nassert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"10\"\nassert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"11\"\nassert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"12\"\nassert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"13\"\nassert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"14\"\nassert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"15\"\nassert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"16\"\nassert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"17\"\nassert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"18\"\nassert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"19\"\nassert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"20\""
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == '''\n2\n"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1') == '2'"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\", \"Expected 2 but got {}\".format(solution())"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Output:\\n{solution(input())}\\n\\nInput:\\n{input()}\\n\\nExpected output:\\n{output()}\""
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == 2\nassert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == 2"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    5\n    5 0 1\n    10 0 1\n    0 5 1\n    0 -5 1\n    -5 0 1\n    \"\"\"\n) == \"2\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n    10\n        E business_as_usual\n        E bobby_dies\n        S 1 bobby_died\n        E stuff_happens\n        E jr_does_bad_things\n        S 2!bobby_dies business_as_usual\n        E it_goes_on_and_on\n        D 4\n        S 1!bobby_dies\n        S 2!bobby_dies it_goes_on_and_on\n        \"\"\") == \"Plot Error\\n3 Just A Dream\\nYes\"\n\nassert solution(\"\"\"\n        5\n            E event1\n            E event2\n            D 3\n            E event3\n            S 1!event1\n            E event4\n            S 1!event2 event3\n            S 2!event1 event2 event3\n            S 3!event4\n            \"\"\") == \"Plot Error\\n3 Just A Dream\\nYes\"\n\nassert solution(\"\"\"\n        2\n            E event1\n            S 1!event1\n            D 3\n            S 1!event1 event2\n            S 2!event2 event3\n            \"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n        1\n            D 1\n            D 2\n            D 3\n            E event1\n            S 1!event1 event2\n            S 2!event2 event3\n            S 3!event4 event5\n            \"\"\") == \"Plot Error\\n3 Just A Dream\\nYes\"\n\nassert solution(\"\"\"\n        1\n            E event1\n            S 1!event1\n            D 3\n            E event2\n            S 1!event1 event2\n            E event3\n            S 1!event1 event2 event3\n            S 2!event2 event3\n            S 3!event4\n            \"\"\") == \"Plot Error\\n3 Just A Dream\\nYes\"\n\nassert solution(\"\"\"\n        1\n            D 1\n            D 2\n            D 3\n            E event1\n            S 1!event1 event2\n            S 2!event2 event3\n            S 3!event4\n            \"\"\") == \"Plot Error\\n3 Just A Dream\\nYes\"\n\nassert solution(\"\"\"\n        1\n            E event1\n            S 1!event1\n            D 3\n            E event2\n            S 1!event1 event2\n            E event3\n            S 1!event1 event2 event3\n            S 2!event2 event3\n            S 3!event4\n            \"\"\") == \"Plot Error\\n3 Just A Dream\\nYes\"\n\nassert solution(\"\"\"\n        1\n            E event1\n            S 1!event1\n            D 3\n            E event2\n            S 1!event1 event2\n            E event3\n            S 1!event1 event2 event3\n            S 2!event2 event3\n            S 3!event4\n            \"\"\") == \"Plot Error\\n3 Just A Dream\\nYes\"\n\nassert solution(\"\"\"\n        1\n            E event1\n            S 1!event1\n            D 3\n            E event2\n            S 1!event1 event2\n            E event3\n            S 1!event1 event2 event3\n            S 2!event2 event3\n            S 3!event4\n            \"\"\") == \"Plot Error\\n3 Just A Dream\\nYes\"\n\nassert solution(\"\"\"\n        1\n            E event1\n            S 1!event1\n            D 3\n            E event2\n            S 1!event1 event2\n            E event3\n            S 1!event1 event2 event3\n            S 2!event2 event3\n            S 3!event4\n            \"\"\") == \"Plot Error\\n3 Just A Dream\\nYes\"\n\nassert solution(\"\"\"\n        1\n            E event1\n            S 1!event1\n            D 3\n            E event2\n            S 1!event1 event2\n            E event3\n            S 1!event1 event2 event3\n            S 2!event2 event3\n            S 3!event4\n            \"\"\") == \"Plot Error\\n3 Just A Dream\\nYes\"\n\nassert solution(\"\"\"\n        1\n            E event1\n            S 1!event1\n            D 3\n            E event2\n            S 1!event1 event2\n            E event3\n        "
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'Plot Error\\n'"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"Yes\\n2 Just A Dream\\nYes\\nPlot Error\\n5 Just A Dream\\nNo\""
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10\\n'\n                  'E business_as_usual\\n'\n                  'E bobby_dies\\n'\n                  'S 1 bobby_died\\n'\n                  'E stuff_happens\\n'\n                  'E jr_does_bad_things\\n'\n                  'S 2!bobby_dies business_as_usual\\n'\n                  'E it_goes_on_and_on\\n'\n                  'D 4\\n'\n                  'S 1!bobby_dies\\n'\n                  'S 2!bobby_dies it_goes_on_and_on\\n'\n                  ) == 'Yes\\n' \\\n                     '3 Just A Dream\\n' \\\n                     'Plot Error\\n' \\\n                     'Plot Error\\n' \\\n                     'Yes'"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\") == \"Yes\\n3 Just A Dream\\nYes\\nPlot Error\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('') == 'Plot Error'\\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"Plot Error\\nYes\\n3 Just A Dream\\nYes\\nPlot Error\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('') == 'Plot Error'\\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"Plot Error\\nYes\\n3 Just A Dream\\nYes\\nPlot Error\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('') == 'Plot Error'\\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"Plot Error\\nYes\\n3 Just A Dream\\nYes\\nPlot Error\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('') == 'Plot Error'\\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"Plot Error\\nYes\\n3 Just A Dream\\nYes\\nPlot Error\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('') == 'Plot Error'\\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"Plot Error\\nYes\\n3 Just A Dream\\nYes\\nPlot Error\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('') == 'Plot Error'\\nassert solution('10\\"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(None) == \"Plot Error\""
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected, f\"Test failed. Expected: {expected}, but got: {solution}\""
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'Yes\\n3 Just A Dream\\nYes'"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"Yes\\n3 Just A Dream\\nYes\\nPlot Error\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\") == \"Yes\\n3 Just A Dream\""
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\"\n) == \"|------------------------+-+|\\n|exercitation ullamco    |^| |\\n|laboris nisi ut aliquip | | |\\n|ex ea commodo consequat |X| |\\n|Duis aute irure dolor in| | |\\n|reprehenderit in        |v| |\\n+------------------------+-+|\\ndef solution(stdin: str) -> str:\\n\\tpass\"\n)\n\nassert solution(\n    \"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\"\n) == \"|------------------------+-+|\\n|exercitation ullamco    |^| |\\n|laboris nisi ut aliquip | | |\\n|ex ea commodo consequat |X| |\\n|Duis aute irure dolor in| | |\\n|reprehenderit in        |v| |\\n+------------------------+-+|\\ndef solution(stdin: str) -> str:\\n\\tpass\""
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"24 5 8 7\\n\"\n    \"Lorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod\\n\"\n    \"tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam,\\n\"\n    \"quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\\n\"\n    \"consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu\\n\"\n    \"fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa\\n\"\n    \"qui officia deserunt mollit anim id est laborum\\n\"\n) == '''\n+------------------------+-+\n|exercitation ullamco    |^|\n|laboris nisi ut aliquip | |\n|ex ea commodo consequat |X|\n|Duis aute irure dolor in| |\n|reprehenderit in        |v|\n+------------------------+-+\n"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\") == \"-----+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n-----+------------------------+-+\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do\\neiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam,\\nquis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat\\nDuis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur\\nExcepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\") == \" ^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n^^^^\\n"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\\n\") == \"\\\n+------------------------+-+\n|exercitation ullamco    |^|\n|laboris nisi ut aliquip | |\n|ex ea commodo consequat |X|\n|Duis aute irure dolor in| |\n|reprehenderit in        |v|\n+------------------------+-+\n"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\\n') == '''+--------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in|v|\\n+------------------------+-+\\ndef solution(stdin: str) -> str:\n    pass\n'''"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('Lorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum'.split()) == 'exercitation ullamco|^|laboris nisi ut aliquip| |ex ea commodo consequat|X|Duis aute irure dolor in| |reprehenderit in|v|'"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod\\ntempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam\\nquis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\") == \\\n\"\"\"\n+------------------------+-+\n|exercitation ullamco    |^|\n|laboris nisi ut aliquip | |\n|ex ea commodo consequat |X|\n|Duis aute irure dolor in| |\n|reprehenderit in        |v|\n+------------------------+-+\n"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    24 5 8 7\n    \nLorem ipsum dolor sit amet consectetur adipisicing elit sed do\neiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad\nminim veniam quis nostrud exercitation ullamco laboris nisi ut\naliquip ex ea commodo consequat Duis aute irure dolor in\nreprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\npariatur Excepteur sint occaecat cupidatat non proident sunt in\nculpa qui officia deserunt mollit anim id est laborum\n''') == '''\n+------------------------+-+\n|exercitation ullamco    |^|\n|laboris nisi ut aliquip | |\n|ex ea commodo consequat |X|\n|Duis aute irure dolor in| |\n|reprehenderit in        |v|\n+------------------------+-+\n"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n4 10\n0 3 2 1\n3 0 1 3\n2 1 0 2\n1 3 2 0\n''') == 'possible\\n'\n\nassert solution('''\n4 10\n0 3 2 1\n3 0 1 3\n2 1 0 2\n1 3 2 0\n''') == 'impossible\\n'\n\nassert solution('''\n4 10\n0 3 2 1\n3 0 1 3\n2 1 0 2\n1 3 2 0\n''') == 'possible\\n'"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n\") == \"possible\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0') == 'possible'\n\nimport math"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\"\n) == \"possible\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"impossible\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0') == 'possible'\nassert solution('4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n2 1 0 3') == 'impossible'"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"impossible\"\nassert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0') == 'possible'\nassert solution('5 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0') == 'impossible'"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0') == 'possible'\nassert solution('0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n2 3 4 1') == 'impossible'"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0') == 'possible\\n'"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1.00000000\""
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1.00000000'\nassert solution() == '1"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1.00000000\", \"Test case 1 failed\""
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin: str) == \"1.00000000\", \"The expected output is incorrect. Please check the input and output.\""
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1 1\\n1\\n2\") == \"1.00000000\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin: str) == \"0.50000000\\n\", \"Please implement the solution and test it.\""
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1 1\\n1\\n2\\n\") == \"1.00000000\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1 1\\n1\\n2\") == \"1.00000000\\n\"\nassert solution(\"3 2 2\\n2\\n1\\n1\") == \"1.00000000\\n\"\nassert solution(\"2 1 1\\n1\\n2\") == \"1.00000000\\n\"\nassert solution(\"1 1 1\\n1\\n1\") == \"1.00000000\\n\"\nassert solution(\"1 1 2\\n1\\n2\") == \"1.00000000\\n\""
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == \"1.00000000\\n\"\nassert solution(stdin=\"2 1 1\\n1\\n2\\n\") == \"1.00000000\\n\"\nassert solution(stdin=\"2 1 2\\n1\\n2\\n\") == \"1.00000000\\n\"\nassert solution(stdin=\"2 1 3\\n1\\n2\\n\") == \"1.00000000\\n\"\nassert solution(stdin=\"2 1 4\\n1\\n2\\n\") == \"1.00000000\\n\"\nassert solution(stdin=\"2 1 5\\n1\\n2\\n\") == \"1.00000000\\n\"\nassert solution(stdin=\"2 1 6\\n1\\n2\\n\") == \"1.00000000\\n\"\nassert solution(stdin=\"2 1 7\\n1\\n2\\n\") == \"1.00000000\\n\"\nassert solution(stdin=\"2 1 8\\n1\\n2\\n\") == \"1.00000000\\n\"\nassert solution(stdin=\"2 1 9\\n1\\n2\\n\") == \"1.00000000\\n\"\nassert solution(stdin=\"2 1 10\\n1\\n2\\n\") == \"1.00000000\\n\"\nassert solution(stdin=\"2 1 11\\n1\\n2\\n\") == \"1.00000000\\n\"\nassert solution(stdin=\"2 1 12\\n1\\n2\\n\") == \"1.00000000\\n\"\nassert solution(stdin=\"2 1 13\\n1\\n2\\n\") == \"1.00000000\\n\"\nassert solution(stdin=\"2 1 14\\n1\\n2\\n\") == \"1.00000000\\n\"\nassert solution(stdin=\"2 1 15\\n1\\n2\\n\") == \"1.00000000\\n\"\nassert solution(stdin=\"2 1 16\\n1\\n2\\n\") == \"1.00000000\\n\"\nassert solution(stdin=\"2 1 17\\n1\\n2\\n\") == \"1.00000000\\n\"\nassert solution(stdin=\"2 1 18\\n1\\n2\\n\") == \"1.00000000\\n\"\nassert solution(stdin=\"2 1 19\\n1\\n2\\n\") == \"1.00000000\\n\"\nassert solution(stdin=\"2 1 20\\n1\\n2\\n\") == \"1.00000000\\n\"\nassert solution(stdin=\"2 1 21\\n1\\n2\\n\") == \"1.00000000\\n\"\nassert solution(stdin=\"2 1 22\\n1\\n2\\n\") == \"1.00000000\\n\"\nassert solution(stdin=\"2 1 23\\n1\\n2\\n\") == \"1.00000000\\n\"\nassert solution(stdin=\"2 1 24\\n1\\n2\\n\") == \"1.00000000\\n\"\nassert solution(stdin=\"2 1 25\\n1\\n2\\n\") == \"1.00000000\\n\"\nassert solution(stdin=\"2 1 26\\n1\\n2\\n\") == \"1.00000000\\n\"\nassert solution(stdin=\"2 1 27\\n1\\n2\\n\") == \"1.00000000\\n\"\nassert solution(stdin=\"2 1 28\\n1\\n2\\n\") == \"1.00000000\\n\"\nassert solution(stdin"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1.00000000\\n\", \"Expected output 1.00000000, got {}\".format(solution(stdin))"
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Young Luka is about to enter a house with the evil witch Marica inside. As soon as he enters the house, she asks him questions about her array of 5 numbers. Luka fearfully asks for a clarification of the questions. Marica explains to him that each query consists of two integers L and R which represent the positions of a contiguous sub-array in her array. It is Luka\u2019s task to answer for each query what the longest contiguous sub-array of that contiguous sub-array (it can be the entire sub-array) having the property of being magical. An array is called magical if all the values are between the values of the first and last number in that array. For example, [1 3 1 2 4] is magical, the same as [4 1 1 2 1], whereas [3 3 4 1] is not magical.\") == \"2\\n1\\n3\\n\"\nassert solution(\"Young Luka is about to enter a house with the evil witch Marica inside. As soon as he enters the house, she asks him questions about her array of 5 numbers. Luka fearfully asks for a clarification of the questions. Marica explains to him that each query consists of two integers L and R which represent the positions of a contiguous sub-array in her array. It is Luka\u2019s task to answer for each query what the longest contiguous sub-array of that contiguous sub-array (it can be the entire sub-array) having the property of being magical. An array is called magical if all the values are between the values of the first and last number in that array. For example, [1 3 1 2 4] is magical, the same as [4 1 1 2 1], whereas [3 3 4 1] is not magical.\") == \"1\\n3\\n\"\nassert solution(\"Young Luka is about to enter a house with the evil witch Marica inside. As soon as he enters the house, she asks him questions about her array of 5 numbers. Luka fearfully asks for a clarification of the questions. Marica explains to him that each query consists of two integers L and R which represent the positions of a contiguous sub-array in her array. It is Luka\u2019s task to answer for each query what the longest contiguous sub-array of that contiguous sub-array (it can be the entire sub-array) having the property of being magical. An array is called magical if all the values are between the values of the first and last number in that array. For example, [1 3 1 2 4] is magical, the same as [4 1 1 2 1], whereas [3 3 4 1] is not magical.\") == \"3\\n\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\\n1\\n3\\n\", \"Function should return '2\\n1\\n3\\n' but instead returned '{}'\".format(solution())"
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4') == '2\\n1\\n3\\n'\nassert solution('5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\\n5\\n1 4\\n2 3\\n3 5\\n6 2\\n6 4\\n6 5\\n') == '2\\n1\\n3\\n\\n1\\n2\\n1\\n2\\n'\nassert solution('10\\n25\\n40\\n50\\n30\\n20\\n10\\n50\\n75\\n50\\n40\\n25\\n10\\n50\\n75\\n50\\n40\\n25\\n10\\n50\\n75\\n50\\n40\\n25\\n10\\n50\\n75\\n50\\n40\\n25\\n10\\n50\\n75\\n50\\n40\\n25\\n10\\n50\\n75\\n50\\n40\\n25\\n10\\n50\\n75\\n50\\n40\\n25\\n10\\n50\\n75\\n50\\n40\\n25\\n10\\n50\\n75\\n50\\n40\\n25\\n10\\n50\\n75\\n50\\n40\\n25\\n10\\n50\\n75\\n50\\n40\\n25\\n10\\n50\\n75\\n50\\n40\\n25\\n10\\n50\\n75\\n50\\n40\\n25\\n10\\n50\\n75\\n50\\n40\\n25\\n10\\n50\\n75\\n50\\n40\\n25\\n10\\n50\\n75\\n50\\n40\\n25\\n10\\n50\\n75\\n50\\n40\\n25\\n10\\n50\\n75\\n50\\n40\\n25\\n10\\n50\\n75\\n50\\n40\\n25\\n10\\n50\\n75\\n50\\n40\\n25\\n10\\n50\\n75\\n50\\n40\\n25\\n10\\n50\\n75\\n50\\n40\\n25\\n10\\n50\\n75\\n50\\n40\\n25\\n10\\n50\\n75\\n50\\n40\\n25\\n10\\n50\\n75\\n50\\n40\\n25\\n10\\n50\\n75\\n50\\n40\\n25\\n10\\n50\\n75\\n50\\n40\\n25\\n10\\n50\\n75\\n50\\n40\\n25\\n10\\n50\\n75\\n50\\n40\\n25\\n10\\n50\\n75\\n50\\n40\\n25\\n10\\n50\\n75\\n50\\n40\\n25\\n10\\n50\\n75\\n50\\n40\\n25\\n10\\n50\\n75\\n50\\n40\\n25\\n10\\n50\\n75\\n50\\n40\\n25\\n10\\n50\\n75\\n50\\n40\\n25\\n10\\n50\\n75\\n50\\n"
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Incorrect output\\n\\tGot: {solution(stdin)}\\n\\tExpected: {expected}\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == \"Testcase 1 passed.\\n\"\nassert solution(2) == \"Testcase 2 passed.\\n\"\nassert solution(3) == \"Testcase 3 passed.\\n\"\nassert solution(4) == \"Testcase 4 passed.\\n\"\nassert solution(5) == \"Testcase 5 passed.\\n\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\\n1\\n3\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n'''\n5\n5 4 3 3 2\n3\n1 2\n1 1\n2 4\n''') == '2\\n1\\n3\\n'\n\nassert solution(\n'''\n5\n5 4 3 3 2\n1 2\n1 1\n2 4\n''') == '1\\n3\\n'\n\nassert solution(\n'''\n5\n5 4 3 3 2\n2 4\n1 2\n1 1\n''') == '3\\n'\n\nassert solution(\n'''\n5\n5 4 3 3 2\n2 4\n1 2\n1 1\n''') == '3\\n'"
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\"2\n1\n3\n\"\"\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\") == \"2\\n1\\n3\""
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '1'\nassert solution(input()) == '1'\n\nfrom typing import List"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 0\") == \"5\"\nassert solution(\"5 4\\n0 1\\n1 2\\n2 0\") == \"3\"\nassert solution(\"3 2\\n1 3\\n2 4\\n3 5\\n4 6\") == \"6\""
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == '1'\n"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == expected_output, f\"Expected output {expected_output} but got {solution(input_data)}\"\n"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 2\\n0 1\\n1 2\\n0 2') == 1\n\nimport math"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\""
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\"\nassert solution(\"2 2\\n0 1\\n1 2\\n0 2\") == \"1\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 1\") == \"2\"\nassert solution(\"2 2\\n0 1\\n1 2\\n0 1\") == \"2\"\nassert solution(\"4 4\\n0 3\\n1 3\\n2 3\\n3 3\\n4 3\") == \"4.5\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\") == \"7.0\"\nassert solution(\"2 2\\n0 1\\n1 2\\n0 2\\n1 3\\n2 3\") == \"4.5\"\nassert solution(\"3 3\\n0 2\\n1 2\\n2 1\\n3 2\") == \"1\"\nassert solution(\"1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\") == \"11\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\") == \"14.0\""
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\\n1\\n\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 3\\n0 4\\n1 3\\n2 3\\n1 4\\n2 4\\n0 5\\n2 5\") == \"1\\n2\\n\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 3\\n0 4\\n1 3\\n2 3\\n1 4\\n2 4\\n0 5\\n2 5\") == \"2\\n2\\n\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 3\\n0 4\\n1 3\\n2 3\\n1 4\\n2 4\\n0 5\\n2 5\") == \"4\\n2\\n\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 3\\n0 4\\n1 3\\n2 3\\n1 4\\n2 4\\n0 5\\n2 6\\n2 5\") == \"3\\n2\\n\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 3\\n0 4\\n1 3\\n2 3\\n1 4\\n2 4\\n0 5\\n2 6\\n2 7\") == \"2\\n2\\n\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 3\\n0 4\\n1 3\\n2 3\\n1 4\\n2 4\\n0 5\\n2 6\\n2 7\\n0 8\\n2 8\") == \"1\\n2\\n\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 3\\n0 4\\n1 3\\n2 3\\n1 4\\n2 4\\n0 5\\n2 6\\n2 7\\n0 8\\n2 8\\n1 9\") == \"never meet\\n\""
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == 1\nassert solution(\"5 3\\n0 1\\n1 2\\n2 3\") == 2\nassert solution(\"4 1\\n0 1\\n1 2\\n2 3\") == 1\nassert solution(\"3 1\\n0 1\\n1 2\\n2 3\") == 1\nassert solution(\"5 3\\n0 1\\n1 2\\n2 3\") == 2\nassert solution(\"5 3\\n0 1\\n1 2\\n2 3\\n4 5\") == 2\nassert solution(\"5 3\\n0 1\\n1 2\\n2 3\\n4 5\\n6 7\") == 2\nassert solution(\"5 3\\n0 1\\n1 2\\n2 3\\n4 5\\n6 7\\n8 9\") == 2\nassert solution(\"5 3\\n0 1\\n1 2\\n2 3\\n4 5\\n6 7\\n8 9\\n10 11\") == 2\nassert solution(\"5 3\\n0 1\\n1 2\\n2 3\\n4 5\\n6 7\\n8 9\\n10 11\\n12 13\") == 2\nassert solution(\"5 3\\n0 1\\n1 2\\n2 3\\n4 5\\n6 7\\n8 9\\n10 11\\n12 13\\n14 15\") == 2\nassert solution(\"5 3\\n0 1\\n1 2\\n2 3\\n4 5\\n6 7\\n8 9\\n10 11\\n12 13\\n14 15\\n16 17\") == 2\nassert solution(\"5 3\\n0 1\\n1 2\\n2 3\\n4 5\\n6 7\\n8 9\\n10 11\\n12 13\\n14 15\\n16 17\\n18 19\") == 2\nassert solution(\"5 3\\n0 1\\n1 2\\n2 3\\n4 5\\n6 7\\n8 9\\n10 11\\n12 13\\n14 15\\n16 17\\n18 19\\n20 21\") == 2\nassert solution(\"5 3\\n0 1\\n1 2\\n2 3\\n4 5\\n6 7\\n8 9\\n10 11\\n12 13\\n14 15\\n16 17\\n18 19\\n20 21\\n22 23\") == 2\nassert solution(\"5 3\\n0 1\\n1 2\\n2 3\\n4 5\\n6 7\\n8 9\\n10 11\\n12 13\\n14 15\\n16 17\\n18 19\\n20 21\\n22 23\\n24 25\") == 2\nassert solution(\"5 3\\n0 1\\n1 2\\n2 3\\n4 5\\n6 7\\n8 9\\n10 11\\n12 13\\n14 15\\n16 17\\n18 19\\n20 21\\n22 23\\n24 25\\n26 27\") == 2\nassert solution(\"5 3\\n0 1\\n1 2\\n2 3\\n4 5\\n6 7\\n8 9\\n10 11\\n12 13\\n14 15\\n16 17\\n18 19\\n20 21\\n22 23\\n24 25\\n26 27\\n28 "
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5, 4, 2) == 14500000001\n"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 4 2\") == 14500000001\nassert solution(\"10 10 10\") == 14500000001\nassert solution(\"100 100 100\") == 14500000001\nassert solution(\"1000 1000 1000\") == 14500000001\nassert solution(\"10000 10000 10000\") == 14500000001\nassert solution(\"100000 100000 100000\") == 14500000001\nassert solution(\"1000000 1000000 1000000\") == 14500000001\nassert solution(\"10000000 10000000 10000000\") == 14500000001\nassert solution(\"100000000 100000000 100000000\") == 14500000001\nassert solution(\"1000000000 1000000000 1000000000\") == 14500000001\nassert solution(\"10000000000 10000000000 10000000000\") == 14500000001\nassert solution(\"100000000000 100000000000 100000000000\") == 14500000001\nassert solution(\"1000000000000 1000000000000 1000000000000\") == 14500000001\nassert solution(\"10000000000000 10000000000000 10000000000000\") == 14500000001\nassert solution(\"100000000000000 100000000000000 100000000000000\") == 14500000001\nassert solution(\"1000000000000000 1000000000000000 1000000000000000\") == 14500000001\nassert solution(\"10000000000000000 10000000000000000 10000000000000000\") == 14500000001\nassert solution(\"100000000000000000 100000000000000000 100000000000000000\") == 14500000001\nassert solution(\"10000000000000000000 1000000000000000000 1000000000000000000\") == 14500000001\nassert solution(\"100000000000000000000 10000000000000000000 10000000000000000000\") == 145000"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 4 2') == '14500000001\\n'\n"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5, 4, 2) == 14500000001"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4 2\") == \"14500000001\"\nassert solution(\"6 5 3\") == \"14500000000\"\nassert solution(\"7 6 4\") == \"14500000000\"\nassert solution(\"8 7 5\") == \"14500000000\"\nassert solution(\"9 8 6\") == \"14500000000\"\nassert solution(\"10 9 7\") == \"14500000000\""
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4 2\") == \"14500000001\""
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"14500000001\\n\""
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 3, 2) == 14500000001\nassert solution(5, 5, 2) == 17650000000\nassert solution(3, 3, 1) == 1\nassert solution(3, 3, 2000000000) == 1"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4 2\") == \"14500000001\\n14500000001\\n14500000001\""
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4 2\") == 14500000001, \"The output should be 14500000001\"\nassert solution(\"100 200 300\") == 10000000000, \"The output should be 10000000000\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"0\\n1\\n1\\n2\\n\"\n\nassert solution(open(\"input2.txt\", \"r\").read()) == \"1\\n0\\n1\\n1\\n1\\n\"\n\nassert solution(open(\"input3.txt\", \"r\").read()) == \"1\\n1\\n0\\n1\\n0\\n\"\n\nassert solution(open(\"input4.txt\", \"r\").read()) == \"1\\n1\\n1\\n0\\n1\\n\"\n\nassert solution(open(\"input5.txt\", \"r\").read()) == \"1\\n1\\n1\\n1\\n0\\n\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Solution should be {expected}, but got {solution(input())}\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, got {solution(stdin)}\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"0\\n1\\n1\\n2\\n\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"0\\n1\\n1\\n2\\n\"\n"
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 4\\n3 7\\n1 6\\n2 6\") == \"0\\n1\\n1\\n2\\n\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0\\n1\\n1\\n2\\n\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 4\\n3 7\\n1 6\\n2 6\") == \"0\\n1\\n1\\n2\\n\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, \"Incorrect solution\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3100\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300') == '3100\\n'\n"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == '3100'"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test case failed. Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300') == '3100'"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\\n\"\n"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\\n\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == expected, f\"Expected {expected}, but got {solution(input)}\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 3100, \"Solution should return 3100, but it returns {}\".format(solution())"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"5.250000000\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n') == '5.250000000'\nassert solution('4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n') == '5.250000000'"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\") == \"5.250000000\", \"Incorrect output\"\n"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_data) == expected_output, f\"Incorrect output. Expected: '{expected_output}', Actual: '{solution(input_data)}'\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13') == '5.250000000', \"The expected output is incorrect.\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"The solution is incorrect\"\n"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n\") == \"5.250000000\\n\"\n"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\") == \"5.250000000\"\n"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == '5.250000000', 'Test failed'"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13') == 5.250000000\nprint(\"Correct\")"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\") == \"7\\n2\\n2\\n0\\n4\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\") == \"7\\n2\\n2\\n0\\n4\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output, 'Solution does not return expected output'"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\") == \"7\\n2\\n2\\n0\\n4\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '7\\n2\\n2\\n0\\n4\\n'"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('7\\n1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2') == '7\\n2\\n2\\n0\\n4'\n"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\\n\") == \"7\\n2\\n2\\n0\\n4\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"\"\"\n"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == \"7\\n2\\n2\\n0\\n4\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.2\n\"\"\"\n) == \"32.6405451448\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '32.6405451448'"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"32.6405451448\"\n"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"32.6405451448\"\n"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2\\n') == '32.6405451448'"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2\") == \"32.6405451448\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"32.6405451448\"\n"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"32.6405451448\", \"Incorrect output\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2\") == 32.6405451448, \"Incorrect Output\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == expected_output, f\"Test failed for input: {sample_input}, expected output: {expected_output}\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n1\\n4\\n3\\n') == '2\\n3\\n4\\n1\\n'\nassert solution('3\\n1\\n2\\n4\\n') == '3\\n2\\n4\\n1\\n'\nassert solution('4\\n1\\n3\\n2\\n') == '4\\n3\\n2\\n1\\n'\nassert solution('5\\n2\\n4\\n1\\n3\\n') == '5\\n4\\n3\\n2\\n1\\n'"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    4\n    2 1 4 3\n    \"\"\"\n) == \"\"\"\n    2 3 4 1\n    \"\"\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\"\n2 3 4 1\n\"\"\".strip()"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n4\n2 1 4 3\n''') == '''\n2 3 4 1\n'''"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"\"\"\n2 3 4 1\n\"\"\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''4\n2 1 4 3''') == '''2 3 4 1''', 'Test 1 failed'\n\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '''10 8 9 7 6 5 4 3 2 1''', 'Test 2 failed'\n\nassert solution('''5\n5 4 3 2 1''') == '''5 3 1 2 4''', 'Test 3 failed'"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"\"\"2 3 4 1\"\"\"\n"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"\"\"2 3 4 1\"\"\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 1 4 3\") == \"2 3 4 1\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n2 1 4 3\\n') == '2 3 4 1\\n'\n"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\"\nassert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\"\nassert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\"\nassert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1') == '7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381'"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"7.656854249492381\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n6\n1 2\n1 3\n2 4\n3 3\n3 2\n2 1\n''') == '7.656854249492381'\n\nassert solution('''\n1\n1 1\n1 2\n2 3\n3 4\n4 5\n5 1\n''') == '5.0'\n\nassert solution('''\n7\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n''') == '3.5'\n\nassert solution('''\n10\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n''') == '2.0'"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n') == '7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n'"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1') == '7.656854249492381'\nprint('All tests passed')"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"7.656854249492381\"\n"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '7.656854249492381', 'The output is incorrect.'"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n\") == 2"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 2, \"The correct output is not given.\""
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0') == 2\n"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == \"2\\n\"\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 0\") == \"2\\n\"\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == \"3\\n\"\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 0\\n3 3\") == \"3\\n\""
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2\nassert solution(\"3 10 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 3\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2\nassert solution(\"3 10 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 3\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2\nprint(\"All tests passed\")"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0') == 2"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2\nprint(\"All tests pass\")"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=r'4 2\\n') == '9\\n'  # This is the correct output."
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\") == \"9\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\n"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == \"9\\n\""
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '9\\n', solution(stdin)"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='2 1\\n') == '9\\n'"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\") == 9, \"Testcase not passing.\"\nprint(\"Testcase passed.\")"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 1') == 9, \"Invalid output\"\nprint(\"Success!\")"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\") == \"9\"\nassert solution(\"3 1\") == \"9\"\nassert solution(\"4 1\") == \"9\"\nassert solution(\"5 1\") == \"9\"\nassert solution(\"6 1\") == \"9\"\nassert solution(\"7 1\") == \"9\"\nassert solution(\"8 1\") == \"9\"\nassert solution(\"9 1\") == \"9\"\nassert solution(\"10 1\") == \"9\"\nassert solution(\"11 1\") == \"9\"\nassert solution(\"12 1\") == \"9\"\nassert solution(\"13 1\") == \"9\"\nassert solution(\"14 1\") == \"9\"\nassert solution(\"15 1\") == \"9\"\nassert solution(\"16 1\") == \"9\"\nassert solution(\"17 1\") == \"9\"\nassert solution(\"18 1\") == \"9\"\nassert solution(\"19 1\") == \"9\"\nassert solution(\"20 1\") == \"9\"\nassert solution(\"21 1\") == \"9\"\nassert solution(\"22 1\") == \"9\"\nassert solution(\"23 1\") == \"9\"\nassert solution(\"24 1\") == \"9\"\nassert solution(\"25 1\") == \"9\"\nassert solution(\"26 1\") == \"9\"\nassert solution(\"27 1\") == \"9\"\nassert solution(\"28 1\") == \"9\"\nassert solution(\"29 1\") == \"9\"\nassert solution(\"30 1\") == \"9\"\nassert solution(\"31 1\") == \"9\"\nassert solution(\"32 1\") == \"9\"\nassert solution(\"33 1\") == \"9\"\nassert solution(\"34 1\") == \"9\"\nassert solution(\"35 1\") == \"9\"\nassert solution(\"36 1\") == \"9\"\nassert solution(\"37 1\") == \"9\"\nassert solution(\"38 1\") == \"9\"\nassert solution(\"39 1\") == \"9\"\nassert solution(\"40 1\") == \"9\"\nassert solution(\"41 1\") == \"9\"\nassert solution(\"42 1\") == \"9\"\nassert solution(\"43 1\") == \"9\"\nassert solution(\"44 1\") == \"9\"\nassert solution(\"45 1\") == \"9\"\nassert solution(\"46 1\") == \"9\"\nassert solution(\"47 1\") == \"9\"\nassert solution(\"48 1\") == \"9\"\nassert solution(\"49 1\") == \"9\"\nassert solution(\"50 1\") == \"9\"\nassert solution(\"51 1\") == \"9\"\nassert solution(\"52 1\") == \"9\"\nassert solution(\"53 1\") == \"9\"\nassert solution(\"54 1\") == \"9\"\nassert solution(\"55 1\") == \"9\"\nassert solution(\"56 1\") == \"9\"\nassert solution(\"57 1\") == \"9\"\nassert solution(\"58 1\") == \"9\"\nassert solution(\"59 1\") == \"9\"\nassert solution(\"60 1\") == \"9\"\nassert solution(\"61 1\") == \"9\"\nassert solution(\"62 1\") == \"9\"\nassert solution(\"63 1\") == \"9\"\nassert solution(\"64 1\") == \"9\"\nassert solution(\"65 1\") == \"9\"\nassert solution(\"66 1\") == \"9\"\nassert solution(\"67 1\") == \"9\"\nassert solution(\"68 1\") == \"9\"\nassert solution(\"69 1\") == \"9\"\nassert solution(\"70 1\") == \"9\"\nassert solution(\"71 1\") == \"9\"\nassert solution(\"72 1\") == \"9\"\nassert solution(\"73 1\") == \"9\"\nassert solution(\"74 1\") == \"9\"\nassert solution(\"75 1\") == \"9\"\nassert solution(\"76 1\") == \"9\"\nassert solution(\"77 1\") == \"9\"\nassert solution(\"78 1\") == \"9\"\nassert solution(\"79 1\") == \"9\"\nassert solution(\"80 1\") == \"9\"\nassert solution(\"81 1"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 1') == '9'"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"9\\n\"\n"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2\\n3\\n5\\n7\\n12\") == \"12\\n\"\nassert solution(\"5\\n1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"5\\n1\\n1\\n1\\n2\") == \"2\\n\"\nassert solution(\"5\\n1\\n1\\n1\\n3\") == \"3\\n\"\nassert solution(\"5\\n1\\n1\\n1\\n4\") == \"4\\n\"\nassert solution(\"5\\n1\\n1\\n1\\n5\") == \"5\\n\"\nassert solution(\"5\\n1\\n1\\n1\\n6\") == \"6\\n\"\nassert solution(\"5\\n1\\n1\\n1\\n7\") == \"7\\n\"\nassert solution(\"5\\n1\\n1\\n1\\n8\") == \"8\\n\"\nassert solution(\"5\\n1\\n1\\n1\\n9\") == \"9\\n\"\nassert solution(\"5\\n1\\n1\\n1\\n10\") == \"10\\n\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(10) == 12, \"The function should return the correct answer\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"12\"\nprint(\"No solution exists\")\n"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2\\n3\\n5\\n7\\n12\\n\") == \"12\"\nassert solution(\"2\\n3\\n\") == \"no solution\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2\\n3\\n5\\n7\\n12\") == \"12\\n\"\nassert solution(\"10\\n5\\n10\\n7\\n12\") == \"12\\n\"\nassert solution(\"10\\n-5\\n10\\n7\\n12\") == \"12\\n\"\nassert solution(\"10\\n20\\n10\\n7\\n12\") == \"12\\n\"\nassert solution(\"10\\n1000\\n10\\n7\\n12\") == \"12\\n\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution([2, 3, 5, 7, 12]) == \"12\"\nassert solution([1, 2, 3, 4, 5]) == \"no solution\"\nassert solution([-2, -1, 0, 1, 2]) == \"no solution\"\nassert solution([1000000000]) == \"no solution\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2\\n3\\n5\\n7\\n12\") == \"12\\n\"\nassert solution(\"10\\n100\\n1000\\n10000\\n100000\") == \"\"\nassert solution(\"5\\n2\\n3\\n5\\n7\\n12\\n15\\n17\\n19\") == \"19\\n\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '12'"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output, \"Test case failed.\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n5\n2\n3\n5\n7\n12\n\"\"\") == \"12\""
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"00\\n01\\n10\\n110\\n111\") == \"11\"\nassert solution(\"00\\n01\\n01\\n110\\n111\") == \"11\"\nassert solution(\"00\\n01\\n01\\n111\\n111\") == \"11\"\nassert solution
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5, \"00\", \"01\", \"10\", \"110\", \"111\") == 11\n"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('taboo.txt', 'r')) == '11'\n"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"11\", \"Test failed\"\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\", \"Test failed\"\n"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n00\\n01\\n10\\n110\\n111') == 11, \"Solution not correct\""
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"00\\n01\\n10\\n110\\n111\\n\") == \"11\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n00\\n01\\n10\\n110\\n111') == 11"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Solution failed for input: {input()}\""
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"11\\nabcdef\"\n"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"00\\n01\\n10\\n110\\n111\\n\") == 11\nassert solution(\"100\\n101\\n110\\n111\\n\") == -1\nassert solution(\"110\\n111\\n100\\n101\\n\") == 11\nassert solution(\"000\\n001\\n010\\n011\\n0110\\n0111\\n1000\\n1001\\n1010\\n1011\\n10110\\n10111\\n1100\\n1101\\n1110\\n1111\\n\") == 11\nassert solution(\"10101101\\n1010110101\\n101011010101\\n10101101010101\\n1010110101010101\\n101011010101010101\\n10101101010101010101\\n1010110101010101010101\\n101011010101010101010101\\n10101101010101010101010101\\n1010110101010101010101010101\\n101011010101010101010101010101\\n10101101010101010101010101010101\\n1010110101010101010101010101010101\\n101011010101010101010101010101010101\\n10101101010101010101010101010101010101\\n1010110101010101010101010101010101010101\\n101011010101010101010101010101010101010101\\n10101101010101010101010101010101010101010101\\n1010110101010101010101010101010101010101010101\\n101011010101010101010101010101010101010101010101\\n10101101010101010101010101010101010101010101010101\\n10101101010101010101010101010101010101010101010101\\n1010110101010101010101010101010101010101010101010101\\n10101101010101010101010101010101010101010101"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100') == '100 250 320\\n'"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"\"\"100 250 320\"\"\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r').read()) == '100 250 320\\n'"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(f\"\"\"\n3\n2\n20 100\n100 10\n1\n150 50\n1\n150 100\n\"\"\") == \"100 250 320\\n\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n100 10\\n150 50\\n1\\n150 100\") == \"100 250 320\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\") == \"100 250 320\\n\"\nassert solution(\"4\\n3\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\") == \"100 250 320 375\\n\"\nassert solution(\"3\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\\n3\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\\n4\\n3\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\\n5\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\\n6\\n3\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\\n7\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\\n8\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\\n9\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\\n10\\n3\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\\n11\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\\n12\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\\n13\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\\n14\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\\n15\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\\n16\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\\n17\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\\n18\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\\n19\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\\n20\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\\n21\\n20 100\\n100 10\\n1\\n150 5"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\") == \"100 250 320\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\") == \"100 250 320\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"The given solution is incorrect: {solution(input())}!= {output}\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('test_input.txt', 'r')) == '100 250 320\\n'\nprint(solution(open('test_input.txt', 'r')))"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\"\nassert solution(\"50 50\") == \"1 1\""
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(50)) == \"3 7 4 6 5\"\nassert solution(str(100)) == \"3 7 4 6 5 7 2 15 2\"\n"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\"\nassert solution(\"20 25\") == \"3 1 6 9 3 1 11 11\"\nassert solution(\"10 50\") == \"2 1 3 2 1 2 1 6\"\nassert solution(\"5 10\") == \"2 1 1 1 1 1 1 1\"\nassert solution(\"25 50\") == \"2 1 1 1 1 1 1 1\""
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r'''\n    50 100\n    ''') == '3 7 4 6 5 7 2 15 2\\n'\nassert solution(r'''\n    49 50\n    20 30\n    ''') == '3 6 3 7 2 15 2\\n'\nassert solution(r'''\n    50 51\n    ''') == '0 0 1 1 0 1 0 0\\n'\nassert solution(r'''\n    100 101\n    ''') == '3 0 2 3 0 1 0 0\\n'\nassert solution(r'''\n    500 501\n    ''') == '5 0 6 5 0 1 0 0\\n'\nassert solution(r'''\n    1000 1001\n    ''') == '11 0 0 1 1 0 0 0\\n'\nassert solution(r'''\n    2000 2001\n    ''') == '15 0 0 1 5 0 0 0\\n'\nassert solution(r'''\n    10000 10001\n    ''') == '123 0 0 3 2 0 0 0\\n'\nassert solution(r'''\n    100000 100001\n    ''') == '1234 0 0 4 2 3 0 0\\n'\nassert solution(r'''\n    1000000 1000001\n    ''') == '12345 0 0 5 2 3 4 0\\n'\nassert solution(r'''\n    10000000 10000001\n    ''') == '123456 0 0 6 2 3 4 5\\n'\nassert solution(r'''\n    100000000 100000001\n    ''') == '1234567 0 0 7 2 3 4 5 6\\n'\nassert solution(r'''\n    1000000000 1000000001\n    ''') == '12345678 0 0 8 2 3 4 5 6 7\\n'\nassert solution(r'''\n    10000000000 10000000001\n    ''') == '123456789 0 0 9 2 3 4 5 6 7 8\\n'\n"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\\n\"\n"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '3 7 4 6 5 7 2 15 2\\n', 'The function should return the expected output.'"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Test case failed. Expected output: {output()}, but got {solution(input())}.\""
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\"\nassert solution(\"4 100\") == \"2 15 2\"\nassert solution
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    50 100\n    \"\"\"\n) == \"3 7 4 6 5 7 2 15 2\""
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"40.0000000000\""
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 40.0000000000\n"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\") == 40.0000000000\nassert solution(\"0 0\\n0 14\\n15 14\\n15 0\\n1\\n1 1\") == 0.0\nassert solution(\"0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n10\\n9 8\") == 0.0\nassert solution(\"0 0\\n0 14\\n15 14\\n15 0\\n1\\n1 1\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n10\\n9 8\\n5\\n6 7\\n7 8\\n9 10\\n8 11\\n7 12\\n6 13\\n5 14\\n4 15\\n3 16\\n2 17\\n1 18\\n\") == 0.0\n"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''4\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7''') == '40.0000000000'"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 40.0\n"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Test {i+1} failed\" for i, (input, output) in enumerate(zip(stdin.readlines(), stdout.readlines()))"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n\") == 40.0000000000\nassert solution(\"0 0\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n101 102\\n102 103\\n103 104\\n104 105\\n105 106\\n106 107\\n107 108\\n108 109\\n109 110\\n110 111\\n111 112\\n112 113\\n113 114\\n114 115\\n115 116\\n116 117\\n117 118\\n118 119\\n119 120\\n120 121\\n121 122\\n122 123\\n123 124\\n124 125\\n125 126\\n126 127\\n127 128\\n128 129\\n129 130\\n13"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 40.0\n"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 40.0000000000, \"Invalid output: Expected 40.0000000000, but got {}.\".format(solution())"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 40.0000000000"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n3\\n2 1 3\") == \"1\\n1\\n\\n[0, 1, 2]\\n[1, 2, 3]\\n\"\nassert solution(\"1\\n3\\n2 3 1\") == \"1\\n1\\n\\n[0, 1, 2]\\n[1, 2, 3]\\n\"\nassert solution(\"1\\n3\\n2 1 4\") == \"1\\n1\\n\\n[0, 1, 2]\\n[1, 2, 3]\\n\"\nassert solution(\"1\\n3\\n2 2 1\") == \"1\\n1\\n\\n[0, 1, 2]\\n[1, 2, 3]\\n\"\nassert solution(\"1\\n3\\n2 1 3 2\") == \"1\\n1\\n\\n[0, 1, 2]\\n[1, 2, 3]\\n\"\nassert solution(\"1\\n3\\n2 3 1 2\") == \"1\\n1\\n\\n[0, 1, 2]\\n[1, 2, 3]\\n\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\\n1\\n\"\n"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 1\nassert solution() == 1"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 1 3\") == \"1\\n1\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n3\\n2 1 3\") == \"1\\n1\\n\"\n\nsolution(\"1\\n3\\n2 1 3\")\n\nimport sys"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == '''\nk = int(input())\nphotos = []\nfor _ in range(k):\n    n = int(input())\n    photos.append(list(map(int, input().split())))\n\nfor i in range(k):\n    for j in range(i+1, k):\n        if photos[i][j] > photos[i][i+1] + 1:\n            print(i+1)\n            break\n'''\n"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n3\\n2 1 3\\n\") == \"1\\n1\\n\"\n\nassert solution(\"2\\n1\\n1 2 3 4\\n\") == \"1\\n\"\n\nassert solution(\"3\\n3 1 2 3 4\\n\") == \"1\\n2\\n2\\n\"\n\nassert solution(\"1\\n4\\n1 2 3 4 5\\n\") == \"1\\n2\\n3\\n4\\n5\\n\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n1\n3\n2 1 3\n''') == '''1\n1\n''', \"The solution is incorrect.\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1\\n1\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n3\\n2 1 3\") == 1\nassert solution(\"2\\n3\\n2 1 3 4\") == 2\nassert solution(\"3\\n3\\n2 1 3 4 5\") == 3\nassert solution(\"4\\n3\\n2 1 3 4 5 6\") == 2\nassert solution(\"5\\n3\\n2 1 3 4 5 6 7\") == 2\nassert solution(\"6\\n3\\n2 1 3 4 5 6 7 8\") == 3\nassert solution(\"7\\n3\\n2 1 3 4 5 6 7 8 9\") == 2\nassert solution(\"8\\n3\\n2 1 3 4 5 6 7 8 9 10\") == 3\nassert solution(\"9\\n3\\n2 1 3 4 5 6 7 8 9 10 11\") == 2\nassert solution(\"10\\n3\\n2 1 3 4 5 6 7 8 9 10 11 12\") == 2\nassert solution(\"11\\n3\\n2 1 3 4 5 6 7 8 9 10 11 12 13\") == 3\nassert solution(\"12\\n3\\n2 1 3 4 5 6 7 8 9 10 11 12 13 14\") == 2\nassert solution(\"13\\n3\\n2 1 3 4 5 6 7 8 9 10 11 12 13 14 15\") == 2\nassert solution(\"14\\n3\\n2 1 3 4 5 6 7 8 9 10 11 12 13 14 15 16\") == 3\nassert solution(\"15\\n3\\n2 1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\") == 2\nassert solution(\"16\\n3\\n2 1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\") == 2\nassert solution(\"17\\n3\\n2 1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\") == 3\nassert solution(\"18\\n3\\n2 1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == 2\nassert solution(\"19\\n3\\n2 1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21\") == 2\nassert solution(\"20\\n3\\n2 1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22\") == 3\nassert solution(\"21\\n3\\n2 1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23\") == 2\nassert solution(\"22\\n3\\n2 1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24\") == 2\nassert solution(\"23\\n3\\n2 1"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\", \"Incorrect output for sample input\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\\n\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\\n\"\nassert solution(\"324.67 2.03 2.24\") == \"1 1\\n\"\nassert solution(\"530.44 1.25 1.37\") == \"0 0\\n\"\nassert solution(\"700.71 0.96 0.54\") == \"0 0\\n\"\nassert solution(\"1000.00 1.00 1.00\") == \"0 0\\n\"\nassert solution(\"999.99 1.00 1.01\") == \"0 0\\n\"\nassert solution(\"1000.01 1.00 1.00\") == \"1 1\\n\"\nassert solution(\"1000.00 1.00 0.99\") == \"0 0\\n\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"199 162\", \"Output should be '199 162', but got '{}'.\".format(solution(stdin))"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\"\nassert solution(\"123.45 567.89 901.23\") == \"1 3\"\nassert solution(\"0.00 0.00 0.00\") == \"0 0\"\nassert solution(\"10000.00 10000.00 10000.00\") == \"0 0\"\nassert solution(\"10000.00 10000.00 10000.00\") == \"0 0\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\"\nassert solution(\"500 100 200\") == \"0 0\"\nassert solution(\"10000 0 0\") == \"0 0\"\nassert solution(\"5000 200 300\") == \"0 0\"\nassert solution(\"7000 200 250\") == \"0 1\"\nassert solution(\"4500 200 300\") == \"1 0\"\nassert solution(\"10000 150 200\") == \"2 0\"\nassert solution(\"3000 100 200\") == \"2 0\"\nassert solution(\"6000 200 150\") == \"2 1\"\n"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    725.85 1.71 2.38\n    \"\"\"\n) == \"\"\"\n199 162\n\"\"\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\\n\"\nassert solution(\"625.85 1.71 2.38\") == \"0 0\\n\"\nassert solution(\"400.85 1.71 2.38\") == \"0 0\\n\"\nassert solution(\"500.85 1.71 2.38\") == \"0 0\\n\"\nassert solution(\"325.85 1.71 2.38\") == \"0 0\\n\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"199 162\"\n"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0') == '16\\n'\n"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"16\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"16\", \"Invalid output format\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '16\\n'"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == \"16\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=f\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == 16, \"The output is incorrect.\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\\n\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt').read()) == '16\\n'"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\\n\"\n"
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\nO 4\") == \"2 1 4\\n\", \"Incorrect output\"\nassert solution(\"2\\nO 6\\nO 5\") == \"4 2 6\\n\", \"Incorrect output\"\nassert solution(\"3\\nE 10\\nI 7\\nO 12\\nI 11\\nE 9\\nO 8\\nE 3\") == \"11 8 10\\n\", \"Incorrect output\"\nassert solution(\"4\\nO 15\\nE 3\\nO 11\\nI 13\\nI 14\") == \"13 11 15\\n\", \"Incorrect output\"\nassert solution(\"5\\nE 20\\nI 15\\nO 6\\nE 17\\nE 18\\nI 10\\nE 11\\nI 12\\nE 19\\nI 8\\nI 7\\nE 16\\nI 9\\nI 14\\nO 19\\nO 18\\nO 17\\nO 16\\n\") == \"31 20 19\\n\", \"Incorrect output\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\nO 4\\n\") == \"2 1 4\\n\", \"Incorrect output\"\nassert solution(\"1\\nO 1\\n\") == \"1 1 1\\n\", \"Incorrect output\"\nassert solution(\"1\\nO 2\\n\") == \"1 2 2\\n\", \"Incorrect output\"\nassert solution(\"1\\nO 3\\n\") == \"2 3 3\\n\", \"Incorrect output\"\nassert solution(\"1\\nO 4\\n\") == \"2 4 4\\n\", \"Incorrect output\"\nassert solution(\"1\\nO 5\\n\") == \"3 5 5\\n\", \"Incorrect output\"\nassert solution(\"1\\nO 6\\n\") == \"3 6 6\\n\", \"Incorrect output\"\nassert solution(\"1\\nO 7\\n\") == \"4 7 7\\n\", \"Incorrect output\"\nassert solution(\"1\\nO 8\\n\") == \"4 8 8\\n\", \"Incorrect output\"\nassert solution(\"1\\nO 9\\n\") == \"5 9 9\\n\", \"Incorrect output\"\nassert solution(\"1\\nO 10\\n\") == \"5 10 10\\n\", \"Incorrect output\"\nassert solution(\"1\\nO 11\\n\") == \"6 11 11\\n\", \"Incorrect output\"\nassert solution(\"1\\nO 12\\n\") == \"6 12 12\\n\", \"Incorrect output\"\nassert solution(\"1\\nO 13\\n\") == \"7 13 13\\n\", \"Incorrect output\"\nassert solution(\"1\\nO 14\\n\") == \"7 14 14\\n\", \"Incorrect output\"\nassert solution(\"1\\nO 15\\n\") == \"8 15 15\\n\", \"Incorrect output\"\nassert solution(\"1\\nO 16\\n\") == \"8 16 16\\n\", \"Incorrect output\"\nassert solution(\"1\\nO 17\\n\") == \"9 17 17\\n\", \"Incorrect output\"\nassert solution(\"1\\nO 18\\n\") == \"9 18 18\\n\", \"Incorrect output\"\nassert solution(\"1\\nO 19\\n\") == \"10 19 19\\n\", \"Incorrect output\"\nassert solution(\"1\\nO 20\\n\") == \"10 20 20\\n\", \"Incorrect output\"\nassert solution(\"1\\nO 21\\n\") == \"11 21 21\\n\", \"Incorrect output\"\nassert solution(\"1\\nO 22\\n\") == \"11 22 22\\n\", \"Incorrect output\"\nassert solution(\"1\\nO 23\\n\") == \"12 23 23\\n\", \"Incorrect output\"\nassert solution(\"1\\nO 24\\n\") == \"12 24 24\\n\", \"Incorrect output\"\nassert solution(\"1\\nO 25\\n\") == \"13 25 25\\n\", \"Incorrect output\"\nassert solution(\"1\\nO 26\\n\") == \"13 26 26\\n\", \"Incorrect output\"\nassert solution(\"1\\nO 27\\n\") == \"14 27 27\\n\", \"Incorrect output\"\nassert solution(\"1\\nO 28\\n\") == \"14 28 28\\n\", \"Incorrect output\"\nassert solution(\"1\\nO 29\\n\") == \"15 29 29\\n\", \"Incorrect output\"\nassert solution(\"1\\nO 30\\n\") == \"15 30 30\\n\", \"Incorrect output\"\nassert solution(\"1\\nO 31\\n\") == \"16 31 31\\n\", \"Incorrect output\"\nassert solution(\"1\\nO 32\\n\") == \"16 32 32\\n\", \"Incorrect output\"\nassert solution(\"1\\nO 33\\n\") == \"17 33 33\\n\", \"Incorrect output\"\nassert solution(\"1\\nO 34\\n\") == \"17 34 "
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\nO 4\\n\") == \"2 1 4\\n\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\nO 4\\n\") == \"2 1 4\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2 1 4\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2 1 4\\n\", \"The solution should return the expected output.\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2 1 4\\n\"\n"
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\nO 4') == '2 1 4'"
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\no 4') == '2 1 4', \"Test case 1 failed\"\nassert solution('2\\no 4\\no 1\\no 3\\no 5\\no 1') == '2 3 1', \"Test case 2 failed\"\nassert solution('3\\no 4\\no 1\\no 3\\no 5\\no 1\\no 2\\no 6\\no 1') == '2 3 1', \"Test case 3 failed\"\nassert solution('4\\no 4\\no 1\\no 3\\no 5\\no 1\\no 2\\no 6\\no 1\\no 7\\no 8\\no 9\\no 10\\no 11\\no 12\\no 13\\no 14\\no 15\\no 16\\no 17\\no 18\\no 19\\no 20\\no 21\\no 22\\no 23\\no 24\\no 25\\no 26\\no 27\\no 28\\no 29\\no 30\\no 31\\no 32\\no 33\\no 34\\no 35\\no 36\\no 37\\no 38\\no 39\\no 40\\no 41\\no 42\\no 43\\no 44\\no 45\\no 46\\no 47\\no 48\\no 49\\no 50\\no 51\\no 52\\no 53\\no 54\\no 55\\no 56\\no 57\\no 58\\no 59\\no 60\\no 61\\no 62\\no 63\\no 64\\no 65\\no 66\\no 67\\no 68\\no 69\\no 70\\no 71\\no 72\\no 73\\no 74\\no 75\\no 76\\no 77\\no 78\\no 79\\no 80\\no 81\\no 82\\no 83\\no 84\\no 85\\no 86\\no 87\\no 88\\no 89\\no 90\\no 91\\no 92\\no 93\\no 94\\no 95\\no 96\\no 97\\no 98\\no 99\\no 100\\no 101\\no 102\\no 103\\no 104\\no 105\\no 106\\no 107\\no 108\\no 109\\no 110\\no 111\\no 112\\no 113\\no 114\\no 115\\no 116\\no 117\\no 118\\no 119\\no 120\\no 121\\no 122\\no 123\\no 124\\no 125\\no 126\\no 127\\no 128\\no 129\\no 130\\no 131\\no 132\\no 133\\no 134\\no 135\\no 136\\no 137\\no 138\\no 139\\no 140\\no 141\\no 142\\no 143\\no 144\\no 145\\no 146\\no 147\\no 148\\no 149\\no 150\\no 151\\no 152\\no 153\\no 154\\no 155\\no 156\\no 157\\no 158\\no 159\\no 160\\no 161\\no 162\\no 163\\no 164\\no 165\\no 166\\no 167\\"
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\nO 4\\n\") == \"2 1 4\\n\", \"Incorrect Output\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '4'\n"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"4\\n\"\n"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\\n\") == \"4\\n\"\nassert solution(\"5 8\\n3 2 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\\n\") == \"3\\n\"\nassert solution(\"5 8\\n4 3 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\\n\") == \"4\\n\"\nassert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\\n\") == \"4\\n\"\nassert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\\n\") == \"4\\n\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\") == \"4\"\nassert solution(\"6 10\\n4 5 6 7\\n3 8 9 10\\n2 1 2 3\\n1 4 5 6\") == \"10\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '4'\nassert solution('5 16\\n1 1 2 3\\n3 2 4 4\\n4 3 5 5\\n5 4 6 6') == '2'\nassert solution('5 20\\n1 1 2 3\\n3 2 4 4\\n4 3 5 5\\n5 4 6 6') == '3'\nassert solution('5 100\\n1 1 2 3\\n3 2 4 4\\n4 3 5 5\\n5 4 6 6') == '2'\nassert solution('5 10\\n1 1 2 3\\n3 2 4 4\\n4 3 5 5\\n5 4 6 6') == '2'"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\") == 4, \"Incorrect output\"\nassert solution(\"10 10\") == 0, \"Incorrect output\"\nassert solution(\"5 0\") == 0, \"Incorrect output\"\nassert solution(\"5 10\") == 0, \"Incorrect output\"\nassert solution(\"10 5\") == 0, \"Incorrect output\"\nassert solution(\"10 15\") == 0, \"Incorrect output\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\") == \"4\\n\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"The solution is wrong. Expected: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    5 8\n    2 1 4 5\n    5 1 12 4\n    5 5 9 10\n    1 6 4 10\n    2 11 7 14\n    \"\"\"\n) == \"4\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == 4"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == expected_output, f\"Test Case {test_case_number} failed\""
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"9.585073\", \"The answer is incorrect.\""
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"9.585073\\n\", \"Test failed\""
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"9.585073\"\n"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"99.99 99.99 9999.99\\n99 9 999 9999\\n9 99 9 99 9\") == \"9.585073\""
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '9.585073', \"Expected output '9.585073', but got '{}'\".format(solution(input()))"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('99.99 99.99 9999.99\\n99 9 999 9999') == '9.585073'"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''-99.99 99.99 9999.99\n99 9 999 9999''') == '9.585073'"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"9.585073\"\n"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_str) == output_str, f\"Expected '{output_str}', got '{solution(input_str)}'\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"impossible\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '12.74 127.83\\n'\n"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '12.74 127.83', 'The given code is incorrect.'"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin: str) == expected_output, f\"Test failed: Expected output: {expected_output}, Got: {solution(stdin: str)}\"\n"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"12.74 127.83\", \"Incorrect output\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"20 30\\n2 10 20 2 24 18 28 10\") == \"12.74 127.83\\n\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"20 30\\n2 10 20 2 24 18 28 10\") == \"12.74 127.83\"\n"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"20 30\\n2 10 20 2 24 18 28 10\") == \"12.74 127.83\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"20 30\\n2 10 20 2 24 18 28 10\") == \"12.74 127.83\"\n"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('20 30\\n2 10 20 2 24 18 28 10') == '12.74 127.83\\n'"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0116\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(b\"2\\n110\\n6\\n\") == \"0116\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n110\\n6\\n\") == \"0116\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n110\\n6\\n\") == \"0116\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n110\\n6\\n') == '0116'\n"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n110\\n6\") == \"0116\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n110\\n6\\n\") == \"0116\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == \"0116\"\nassert solution(open('input.txt', 'r')) == \"6910\"\nassert solution(open('input.txt', 'r')) == \"0609\"\nassert solution(open('input.txt', 'r')) == \"1000\"\nassert solution(open('input.txt', 'r')) == \"0106\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n110\\n6\\n\") == \"0116\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"0116\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"0 2 4\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n1 2\\n\") == \"0 2 4\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\"\n\nfrom typing import List"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\"\n"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"\"\"0 2 4\"\"\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\"\nassert solution(\"10 10\") == \"10\"\n"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == solution_output, f\"Solution does not match expected output\\nActual output: {solution(sample_input)}\\nExpected output: {solution_output}\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n\") == \"impossible\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n\") == \"impossible\"\nassert solution(\"1\\n3\\n1 1\\n2 2 3\\n2 1\\n\") == \"possible\"\nassert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n\") == \"possible\"\nassert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n\") == \"possible\"\nassert solution(\"5\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n\") == \"possible\"\nassert solution(\"5\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n\") == \"possible\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == expected_output\n\nsample_input = '''4\n7\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5\n'''\n\nexpected_output = '''impossible'''"
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"impossible\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n\") == \"impossible\"\nassert solution(\"5\\n10\\n2 1 2 3\\n3 4 5 6\\n4 7 8 9\\n5 10 11 12\\n6 11 12 13\\n7 12 13 14\\n8 13 14 15\\n9 14 15 16\\n10 15 16 17\\n11 16 17 18\\n12 17 18 19\\n13 18 19 20\\n14 19 20 21\\n15 20 21 22\\n16 21 22 23\\n17 22 23 24\\n18 23 24 25\\n19 24 25 26\\n20 25 26 27\\n21 26 27 28\\n22 27 28 29\\n23 28 29 30\\n24 29 30 31\\n25 30 31 32\\n26 31 32 33\\n27 32 33 34\\n28 33 34 35\\n29 34 35 36\\n30 35 36 37\\n31 36 37 38\\n32 37 38 39\\n33 38 39 40\\n34 39 40 41\\n35 40 41 42\\n36 41 42 43\\n37 42 43 44\\n38 43 44 45\\n39 44 45 46\\n40 45 46 47\\n41 46 47 48\\n42 47 48 49\\n43 48 49 50\\n44 49 50 51\\n45 50 51 52\\n46 51 52 53\\n47 52 53 54\\n48 53 54 55\\n49 54 55 56\\n50 55 56 57\\n51 56 57 58\\n52 57 58 59\\n53 58 59 60\\n54 59 60 61\\n55 60 61 62\\n56 61 62 63\\n57 62 63 64\\n58 63 64 65\\n59 64 65 66\\n60 65 66 67\\n61 66 67 68\\n62 67 68 69\\n63 68 69 70\\n64 69 70 71\\n65 70 71 72\\n66 71 72 73\\n67 72 73 74\\n68 73 74 75\\n69 74 75 76\\n70 75 76 77\\n71 76 77 78\\n72 77 78 79\\n73 78 79 80\\n74 79 80 81\\n75 80 81 82\\n76"
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"impossible\"\nassert solution(stdin) == \"def solution(stdin: str) -> str: \\n    pass\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"impossible\" # ok\nassert solution() == \"possible\" # ok\nassert solution() == \"possible\" # ok\nassert solution() == \"possible\" # ok\nassert solution() == \"possible\" # ok"
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"impossible\"\nassert solution() == \"possible\"\n"
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"4\n7\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5\"\"\"\n) == \"impossible\"\n\nassert solution(\n    \"\"\"4\n7\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5\"\"\"\n) == \"def solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(4)) == \"impossible\"\nassert solution(str(7)) == \"possible\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"4.00000\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n2\n0 0\n0 10\n2\n4 10\n4 0\n\"\"\") == \"4.00000\\nimpossible\"\n\nassert solution(\"\"\"\n2\n0 0\n0 10\n2\n4 10\n4 -1\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n2\n0 0\n0 10\n2\n4 -1\n4 10\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n2\n0 0\n0 10\n2\n4 10\n5 5\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n2\n0 0\n0 10\n2\n5 5\n4 10\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n2\n0 0\n0 10\n2\n5 -1\n\"\"\") == \"impossible\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"4.00000\\n\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n0 0\\n0 10\\n2\\n4 10\\n4 0\") == \"4.00000\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"2\n0 0\n0 10\n2\n4 10\n4 0\"\"\") == \"4.00000\\n\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''2\n0 0\n0 10\n2\n4 10\n4 0''') == '4.00000'\nprint('Test Passed')"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"2\\n0 0\\n0 10\\n2\\n4 10\\n4 0\") == \"4.00000\\nimpossible\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n0 0\\n0 10\\n2\\n4 10\\n4 0') == '4.00000'\nassert solution('2\\n0 0\\n0 10\\n2\\n0 10\\n0 10') == 'impossible'\nassert solution('2\\n0 0\\n0 10\\n2\\n4 0\\n4 10') == 'impossible'"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"4.00000\\nimpossible\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0\\n0 10\\n2\\n4 10\\n4 0\") == \"4.00000\""
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"\n\nfrom typing import List"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\") == 1\nassert solution(\"4 3 4\\n1 1\\n1 3\\n2 1\\n2 3\\n3 1\") == 0\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == 1\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''3 2 5\n1 1\n1 3\n3 1\n3 3\n2 2''') == 1, \"Example 1 failed\"\n\nassert solution('''1 2 3\n4 5 6\n7 8 9\n10 11 12\n13 14 15''') == 0, \"Example 2 failed\"\n\nassert solution('''1 2 3\n4 5 6\n7 8 9\n10 11 12\n13 14 15''') == 0, \"Example 3 failed\""
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n') == '1\\n'\nassert solution('100 100 5\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\") == 1, \"1\""
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(None) == \"0\"  # Test case 1\nassert solution(\"\") == \"0\"  # Test case 2\nassert solution(\"0\") == \"0\"  # Test case 3"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 1, \"Test failed\"\nassert solution() == 0, \"Test failed\""
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\""
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\") == 1\nassert solution(\"4 3 5\\n1 1\\n2 2\\n3 3\\n3 2\\n3 1\\n2 2\\n1 2\\n1 2\\n1 3\\n1 3\\n2 2\") == 0"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\") == \"1\"\nassert solution(\"4 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\") == \"0\"\nassert solution(\"3 5 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\") == \"1\"\nassert solution(\"4 5 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\") == \"0\"\nassert solution(\"4 1 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\") == \"1\"\nassert solution(\"4 3 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\") == \"0\"\nassert solution(\"2 1 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\") == \"0\"\n"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3') == '5 3\\n1 0\\n2 4\\nimpossible'"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\") == \"5 3\\n1 0\\n2 4\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n    5 6\n    0 1\n    0 2\n    1 3\n    2 3\n    1 2\n    4 3\n    ''') == '''\n    5 3\n    1 0\n    2 4\n    '''"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\") == \"5 3\\n1 0\\n2 4\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3') == '5 3\\n1 0\\n2 4'"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == expected\n"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution("
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Incorrect output for input {input()}\"\n"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1 2\"\nassert solution(open(\"input.txt\", \"r\")) == \"0 2\"\nassert solution(open(\"input.txt\", \"r\")) == \"0 3\"\nassert solution(open(\"input.txt\", \"r\")) == \"2 3\"\nassert solution(open(\"input.txt\", \"r\")) == \"1 2\"\nassert solution(open(\"input.txt\", \"r\")) == \"0 2\"\nassert solution(open(\"input.txt\", \"r\")) == \"0 3\"\nassert solution(open(\"input.txt\", \"r\")) == \"2 3\"\nassert solution(open(\"input.txt\", \"r\")) == \"1 2\"\nassert solution(open(\"input.txt\", \"r\")) == \"0 2\"\nassert solution(open(\"input.txt\", \"r\")) == \"0 3\"\nassert solution(open(\"input.txt\", \"r\")) == \"2 3\"\nassert solution(open(\"input.txt\", \"r\")) == \"1 2\"\nassert solution(open(\"input.txt\", \"r\")) == \"0 2\"\nassert solution(open(\"input.txt\", \"r\")) == \"0 3\"\nassert solution(open(\"input.txt\", \"r\")) == \"2 3\"\nassert solution(open(\"input.txt\", \"r\")) == \"1 2\"\nassert solution(open(\"input.txt\", \"r\")) == \"0 2\"\nassert solution(open(\"input.txt\", \"r\")) == \"0 3\"\nassert solution(open(\"input.txt\", \"r\")) == \"2 3\"\nassert solution(open(\"input.txt\", \"r\")) == \"1 2\"\nassert solution(open(\"input.txt\", \"r\")) == \"0 2\"\nassert solution(open(\"input.txt\", \"r\")) == \"0 3\"\nassert solution(open(\"input.txt\", \"r\")) == \"2 3\"\nassert solution(open(\"input.txt\", \"r\")) == \"1 2\"\nassert solution(open(\"input.txt\", \"r\")) == \"0 2\"\nassert solution(open(\"input.txt\", \"r\")) == \"0 3\"\nassert solution(open(\"input.txt\", \"r\")) == \"2 3\"\nassert solution(open(\"input.txt\", \"r\")) == \"1 2\"\nassert solution(open(\"input.txt\", \"r\")) == \"0 2\"\nassert solution(open(\"input.txt\", \"r\")) == \"0 3\"\nassert solution(open(\"input.txt\", \"r\")) == \"2 3\"\nassert solution(open(\"input.txt\", \"r\")) == \"1 2\"\nassert solution(open(\"input.txt\", \"r\")) == \"0 2\"\nassert solution(open(\"input.txt\", \"r\")) == \"0 3\"\nassert solution(open(\"input.txt\", \"r\")) == \"2 3\"\nassert solution(open(\"input.txt\", \"r\")) == \"1 2\"\nassert solution(open(\"input.txt\", \"r\")) == \"0 2\"\nassert solution(open(\"input.txt\", \"r\")) == \"0 3\"\nassert solution(open(\"input.txt\", \"r\")) == \"2 3\"\nassert solution(open(\"input.txt\", \"r\")) == \"1 2\"\nassert solution(open(\"input.txt\", \"r\")) == \"0 2\"\nassert solution(open(\"input.txt\", \"r\")) == \"0 3\"\nassert solution(open(\"input.txt\", \"r\")) == \"2 3\"\nassert solution(open(\"input.txt\", \"r\")) == \"1 2\"\nassert solution(open(\"input.txt\", \"r\")) == \"0 2\"\nassert solution(open(\"input.txt\", \"r\")) == \"0 3\"\nassert solution(open(\"input.txt\", \"r\")) == \"2 3\"\nassert solution(open(\"input.txt\", \"r\")) == \"1 2\"\nassert solution(open(\"input.txt\", \"r\")) == \"0 2\"\nassert solution(open(\"input.txt\", \"r\")) == \"0 3\"\nassert solution(open(\"input.txt\", \"r\")) == \"2 3\"\nassert solution(open(\"input.txt\", \"r\")) == \"1 2\"\nassert solution(open(\"input.txt\", \"r\")) == \"0 2\"\n"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\\n1 2\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\"2\n1 2\"\"\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 1\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n1 2\\n\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n4 1\n0 0\n0 1\n1 0\n1 1\n\"\"\"\n) == \"2\\n1 2\"\n"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 1\\n0 0\\n0 1\\n1 0\\n1 1\\n\") == \"2\\n1 2\"\n"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected output: {sample_output}, but got: {solution(sample_input)}\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 1\\n0 0\\n0 1\\n1 0\\n1 1\\n') == '2\\n1 2'"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, but got {solution(stdin)}\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case failed: {sample_input}\\nExpected output: {sample_output}\\nReceived output: {solution(sample_input)}\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Input\") == \"Output\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == 1\nassert solution(\"10 3\\n1 3 5 7 9 11 13 15 17 16\") == 1\nassert solution(\"10 4\\n1 3 5 7 9 11 13 15 17 16\") == 0\nassert solution(\"10 5\\n1 3 5 7 9 11 13 15 17 16\") == 0\nassert solution(\"10 6\\n1 3 5 7 9 11 13 15 17 16\") == 0\nassert solution(\"10 7\\n1 3 5 7 9 11 13 15 17 16\") == 0\nassert solution(\"10 8\\n1 3 5 7 9 11 13 15 17 16\") == 0\nassert solution(\"10 9\\n1 3 5 7 9 11 13 15 17 16\") == 0\nassert solution(\"10 10\\n1 3 5 7 9 11 13 15 17 16\") == 0\nassert solution(\"10 11\\n1 3 5 7 9 11 13 15 17 16\") == 0\nassert solution(\"10 12\\n1 3 5 7 9 11 13 15 17 16\") == 0\nassert solution(\"10 13\\n1 3 5 7 9 11 13 15 17 16\") == 0\nassert solution(\"10 14\\n1 3 5 7 9 11 13 15 17 16\") == 0\nassert solution(\"10 15\\n1 3 5 7 9 11 13 15 17 16\") == 0\nassert solution(\"10 16\\n1 3 5 7 9 11 13 15 17 16\") == 0\nassert solution(\"10 17\\n1 3 5 7 9 11 13 15 17 16\") == 0\nassert solution(\"10 18\\n1 3 5 7 9 11 13 15 17 16\") == 0\nassert solution(\"10 19\\n1 3 5 7 9 11 13 15 17 16\") == 0\nassert solution(\"10 20\\n1 3 5 7 9 11 13 15 17 16\") == 0\nassert solution(\"10 21\\n1 3 5 7 9 11 13 15 17 16\") == 0\nassert solution(\"10 22\\n1 3 5 7 9 11 13 15 17 16\") == 0\nassert solution(\"10 23\\n1 3 5 7 9 11 13 15 17 16\") == 0\nassert solution(\"10 24\\n1 3 5 7 9 11 13 15 17 16\") == 0\nassert solution(\"10 25\\n1 3 5 7 9 11 13 15 17 16\") == 0\nassert solution(\"10 26\\n1 3 5 7 9 11 13 15 17 16\") == 0\nassert solution(\"10 27\\n1 3 5 7 9 11 13 15 17 16\") == 0\nassert solution(\"10 28\\n1 3 5 7 9 "
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}\\nGot: {solution(stdin)}\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 1, \"Test Failed\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10 2\\n1 3 5 7 9 11 13 15 17 16') == '1\\n'"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == \"1\"\nassert solution(\"10 5\\n1 3 5 7 9 11 13 15 17 16\") == \"1\"\nassert solution(\"10 4\\n1 3 5 7 9 11 13 15 17 16\") == \"0\"\nassert solution(\"10 3\\n1 3 5 7 9 11 13 15 17 16\") == \"1\"\nassert solution(\"10 7\\n1 3 5 7 9 11 13 15 17 16\") == \"1\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\nprint(\"All tests passed!\")"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Test failed for input {input()}\"\n"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"The output does not match the expected output.\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\\n\", \"Test case 1 failed\"\nassert solution(input()) == \"1\\n\", \"Test case 2 failed\"\nassert solution(input()) == \"1\\n\", \"Test case 3 failed\"\nassert solution(input()) == \"1\\n\", \"Test case 4 failed\"\nassert solution(input()) == \"1\\n\", \"Test case 5 failed\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\") == \"7 4\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7\") == \"7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\") == \"7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Incorrect output.\"\n\nassert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\") == \"7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Incorrect output.\"\n\nassert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\") == \"7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Incorrect output.\"\n\nassert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\") == \"7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Incorrect output.\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\"\n"
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"7 4\", \"The output should be 7 4, but it is {}\".format(solution(stdin))"
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"7 4\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"7 4\", \"Expected output: 7 4\"\n"
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"7 4\\n\", \"Output Barica's final coordinates.\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test failed: solution({input()})!= output\\nInput: {input()}\\nOutput: {output}\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10 LET A = 1\\n20 PRINT \"HELLO THERE \" 30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \"DONE\"\\n') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n'\n"
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\"\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\"\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10 LET A = 1\\n20 PRINT \"HELLO THERE \" \\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \"DONE\"') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE'"
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n10 LET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 PRINTLN \"DONE\"\n''') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n'"
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == '''\nHELLO THERE 1\nHELLO THERE 2\nHELLO THERE 3\nHELLO THERE 4\nHELLO THERE 5\nDONE\n'''"
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"DONE\\n\"\n"
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\"\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A > 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\"\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A >= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\"\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A < 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\"\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <> 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 5\\nDONE\\n\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\"\n) == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\""
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == 3"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\\n\""
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 0 1\\n0 1\") == \"3\\n\"\nassert solution(\"2\\n1\\n1\") == \"1\\n\"\nassert solution(\"5\\n3 2 4 2\\n2 5\\n4 1 3 2 5\\n2 2 3 1\") == \"108\\n\"\n"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n3 0 1\\n0 1') == '3\\n'"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 0 1\\n0 1\") == 3"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n3 0 1\\n0 1') == '3'\nassert solution('4\\n3 0 1\\n0 1') == '2'\nassert solution('5\\n3 0 1\\n0 1') == '1'\nassert solution('6\\n3 0 1\\n0 1') == '4'\nassert solution('7\\n3 0 1\\n0 1') == '14'"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 0 1\\n0 1\") == \"3\\n\"\n\nsolution = lambda stdin: str(sum(1 for i in range(1, int(stdin.strip())+1) for j in range(i) if i+j == int(stdin.strip())-1))"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n3 0 1\\n0 1\\n') == '3'\nprint('All test cases passed!')"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 3\nassert solution(3, 0, 1) == 3\n"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 3\nassert solution(0) == 0\nassert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 3\nassert solution(4) == 6"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\\nimpossible\"\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"impossible\"\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"impossible\"\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"impossible\"\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"impossible\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution == \"LRRRRRLR\"\nassert solution == \"LRRRRRLL\"\nassert solution =="
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"LLRRRRLL\\n\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 'LLRRRRLL'\n"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == expected_output, f\"Expected output: {expected_output}, got {solution(sample_input)}\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n\") == \"LLRRRRLL\"\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n\") == \"impossible\"\n"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"LLRRRRLL\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"LLRRRRLL\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n2\\n1\\n3\\n3\\n5\\n4\\n5\\n3\\n4\\n1\\n3\\n\\n\") == \"LLRRRRLL\"\nassert solution(\"1\\n2\\n2\\n1\\n3\\n3\\n5\\n4\\n5\\n3\\n4\\n1\\n3\\n1\\n\") == \"impossible\"\nassert solution(\"1\\n2\\n2\\n1\\n3\\n3\\n5\\n4\\n5\\n3\\n4\\n1\\n3\\n2\\n\") == \"RLRRRRLR\"\nassert solution(\"1\\n2\\n2\\n1\\n3\\n3\\n5\\n4\\n5\\n3\\n4\\n1\\n3\\n3\\n\") == \"LLRRRRLL\"\nassert solution(\"1\\n2\\n2\\n1\\n3\\n3\\n5\\n4\\n5\\n3\\n4\\n1\\n3\\n4\\n\") == \"RLRRRRLR\"\nassert solution(\"1\\n2\\n2\\n1\\n3\\n3\\n5\\n4\\n5\\n3\\n4\\n1\\n3\\n5\\n\") == \"RRRRRRLL\"\nassert solution(\"1\\n2\\n2\\n1\\n3\\n3\\n5\\n4\\n5\\n3\\n4\\n1\\n3\\n6\\n\") == \"RRRRRRLL\"\nassert solution(\"1\\n2\\n2\\n1\\n3\\n3\\n5\\n4\\n5\\n3\\n4\\n1\\n3\\n7\\n\") == \"RRRRRRRR\"\nassert solution(\"1\\n2\\n2\\n1\\n3\\n3\\n5\\n4\\n5\\n3\\n4\\n1\\n3\\n8\\n\") == \"RRRRRRRR\"\nassert solution(\"1\\n2\\n2\\n1\\n3\\n3\\n5\\n4\\n5\\n3\\n4\\n1\\n3\\n9\\n\") == \"RRRRRRRR\"\nassert solution(\"1\\n2\\n2\\n1\\n3\\n3\\n5\\n4\\n5\\n3\\n4\\n1\\n3\\n10\\n\") == \"RRRRRRRR\"\nassert solution(\"1\\n2\\n2\\n1\\n3\\n3\\n5\\n4\\n5\\n3\\n4\\n1\\n3\\n11\\n\") == \"RRRRRRRR\"\nassert solution(\"1\\n2\\n2\\n1\\n3\\n3\\n5\\n4\\n5\\n3\\n4\\n1\\n3\\n12\\n\") == \"RRRRRRRR\"\nassert solution(\"1\\n2\\n2\\n1\\n3\\n3\\n5\\n4\\n5\\n3\\n4\\n1\\n3\\n13\\n\") == \"RRRRRRRR\"\nassert solution(\"1\\n2\\n2\\n1\\n3\\n3\\n5\\n4\\n5\\n3\\n4\\n1\\n3\\n14\\n\") == \"RRRRRRRR\"\nassert solution(\"1\\n2\\n2\\n1\\n3\\n3\\n5\\n4\\n5\\n3\\n4\\n1\\n3\\n15\\n\") == \"RRRRRRRR\"\nassert solution(\"1\\n2\\n2\\n1\\n3\\n3\\n5\\n4\\n5\\n3\\n4\\n1\\n3\\n16\\n\") == \"RRRRRRRR\"\nassert solution(\"1\\n2\\n2\\n1\\n3\\n3\\n5\\n4\\n5\\n3\\n4\\n1\\n3\\n17\\n\") == \"RRRRRRRR\"\nassert solution(\"1\\n2\\n2\\n1\\n3\\n3\\n5\\n4\\n5\\n3\\n4\\n1\\n3\\n1"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1009 2011\\n1017 2011\") == \"1\\n2011\"\nassert solution(\"2\\n1010 1010\\n1009 2011\\n1017 2011\") == \"2\\n1017 2011\"\nassert solution(\"2\\n1009 2010\\n1009 2011\\n1017 2011\") == \"3\\n2011\\n1017 2011\"\nassert solution(\"3\\n1009 2010\\n1009 2011\\n1009 2012\") == \"2\\n2011\\n2012\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1009 2011\\n1017 2011\") == \"1\\n2011\"\nassert solution(\"1009 2011\\n1017 2008\\n1010 2011\\n1008 2010\\n1001 2009\\n\") == \"1\\n2009\"\nassert solution(\"1009 2011\\n1017 2011\\n1010 2011\\n1008 2010\\n1001 2009\\n1007 2008\\n\") == \"2\\n2009\"\n"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2011\\n1009 2011\\n1017 2011\\n2011\\n\") == \"1\\n2011\\n\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1009 2011\\n1017 2011\") == \"1\\n2011\"\nassert solution(\"1009 2011\\n1017 2011\\n1021 2011\\n1019 2011\") == \"2\\n2011\\n1009 2011\\n1021 2011\"\nassert solution(\"1009 2011\\n1017 2011\\n1019 2011\\n1021 2011\") == \"2\\n2011\\n1009 2011\\n1021 2011\"\nassert solution(\"1009 2011\\n1017 2011\\n1019 2011\\n1021 2011\\n1007 2011\\n1009 2011\\n1017 2011\\n1021 2011\") == \"3\\n2011\\n1009 2011\\n1021 2011\\n1007 2011\\n1009 2011\\n1017 2011\\n1021 2011\"\nassert solution(\"1009 2011\\n1017 2011\\n1019 2011\\n1021 2011\\n1007 2011\\n1009 2011\\n1017 2011\\n1021 2011\\n1011 2011\\n1017 2011\\n1021 2011\") == \"3\\n2011\\n1009 2011\\n1021 2011\\n1007 2011\\n1009 2011\\n1017 2011\\n1021 2011\\n1011 2011\\n1017 2011\\n1021 2011\"\nassert solution(\"1009 2011\\n1017 2011\\n1019 2011\\n1021 2011\\n1007 2011\\n1009 2011\\n1017 2011\\n1021 2011\\n1011 2011\\n1017 2011\\n1021 2011\\n1007 2011\\n1009 2011\\n1017 2011\\n1021 2011\\n1019 2011\\n1021 2011\\n1007 2011\\n1009 2011\\n1017 2011\\n1021 2011\\n1019 2011\\n1021 2011\\n1007 2011\\n1009 2011\\n1017 2011\\n1021 2011\\n1019 2011\\n1021 2011\\n1007 2011\\n1009 2011\\n1017 2011\\n1021 2011\\n1019 2011\\n1021 2011\\n1007 2011\\n1009 2011\\n1017 2011\\n1021 2011\\n1"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == # your solution here\n"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_data) == expected_output, f\"Incorrect output: {solution(input_data)}!= {expected_output}\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"\"\"1\n2011\"\"\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1\\n2011\\n'\nassert solution(stdin) == '2\\n1009\\n1017\\n'\nassert solution(stdin) == '2\\n1009\\n1000\\n'"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1009 2011\\n1017 2011\") == \"1\"\nassert solution(\"1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1009 2011\\n1017 2011\") == \"1\\n2011\\n\"\nassert solution(\"2\\n1009 2011\\n1017 2011\") == \"1\\n2011\\n\"\nassert solution(\"2\\n1009 2011\\n1017 2012\\n1016 2012\\n1014 2012\") == \"2\\n2011\\n2012\\n\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3') == '0 3'"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\") == \"0 3\\n\"\n"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"0 3\\n\", \"Expected output: 0 3\\nGot: \" + solution()"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3') == '0 3'"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Wrong output for sample input {stdin}\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3') == '0 3\\n', \"Test case 1 failed\"\n\nassert solution('4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 4') == '0 4\\n', \"Test case 2 failed\"\n\nassert solution('4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 5') == '0 5\\n', \"Test case 3 failed\"\n\nassert solution('4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 6') == '0 6\\n', \"Test case 4 failed\"\n\nassert solution('4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 7') == '0 7\\n', \"Test case 5 failed\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == ['0 3']"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\n''') == '0 3\\n'"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\") == \"0 3\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\\n\") == \"0 3\\n\""
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\""
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\""
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\\n\"\n"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\""
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\"\nassert solution(\"2.0 5.0\\n1000 0 0\") == \"50\"\nassert solution(\"2.0 0.1\\n2001 100000 0\") == \"200000\"\nassert solution(\"1.0 0.5\\n0.5 1000000 0\") == \"999999\"\nassert solution(\"2.0 0.5\\n2001 1000000 0\") == \"2000000\""
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\"\nassert solution(\"3.0 2.0\\n4 4 0 0\\n300 300 0\\n500 500 200\\n600 600 0\") == \"10\"\nassert solution(\"6.0 10.0\\n30 30 0 0\\n10000 10000 0\\n100 0 0\") == \"10000\"\nassert solution(\"7.0 15.0\\n10 10 0 0\\n1000 1000 0\\n100 0 0\") == \"10000\""
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0') == 20, \"Expected output: 20\\nActual output: \" + solution('2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0')"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\\n\"\nassert solution(\"2.1 10.1\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\\n\"\nassert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\\n\"\nassert solution(\"2.1 10.1\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\\n\"\nassert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\\n\"\nassert solution(\"2.1 10.1\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\\n\"\nassert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\\n\"\nassert solution(\"2.1 10.1\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\\n\"\nassert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\\n\"\nassert solution(\"2.1 10.1\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\\n\"\nassert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\\n\"\nassert solution(\"2.1 10.1\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\\n\"\nassert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\\n\"\nassert solution(\"2.1 10.1\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\\n\"\nassert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\"\n) == \"20\\n\"\n\nassert solution(\n    \"3.0 10.0\\n2 2 0 0\\n1000000 1000000 100\\n0 0 0\"\n) == \"30\\n\"\n\nassert solution(\n    \"1.0 10.0\\n1 1 0 0\\n10000000 10000000 100\\n0 0 0\"\n) == \"30\\n\"\n\nassert solution(\n    \"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\"\n) == \"20\\n\"\n\nassert solution(\n    \"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\"\n) == \"20\\n\"\n\nassert solution(\n    \"3.0 10.0\\n2 2 0 0\\n1000000 1000000 100\\n0 0 0\"\n) == \"30\\n\"\n\nassert solution(\n    \"1.0 10.0\\n1 1 0 0\\n10000000 10000000 100\\n0 0 0\"\n) == \"30\\n\"\n\nassert solution(\n    \"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\"\n) == \"20\\n\"\n\nassert solution(\n    \"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\"\n) == \"20\\n\"\n\nassert solution(\n    \"3.0 10.0\\n2 2 0 0\\n1000000 1000000 100\\n0 0 0\"\n) == \"30\\n\"\n\nassert solution(\n    \"1.0 10.0\\n1 1 0 0\\n10000000 10000000 100\\n0 0 0\"\n) == \"30\\n\"\n\nassert solution(\n    \"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\"\n) == \"20\\n\"\n\nassert solution(\n    \"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\"\n) == \"20\\n\"\n\nassert solution(\n    \"3.0 10.0\\n2 2 0 0\\n1000000 1000000 100\\n0 0 0\"\n) == \"30\\n\"\n\nassert solution(\n    \"1.0 10.0\\n1 1 0 0\\n10000000 10000000 100\\n0 0 0\"\n) == \"30\\n\""
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == 4, \"Test failed\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test Case #{test_case_num}: Expected {output}, but got {solution(input())}.\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5') == '4', \"Your solution is incorrect. Expected output: 4, but got: {}\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == \"4\\n\", \"The smallest non-negative integer T such that there is a partitioning of the kids in three new classes such that no kid has the same teacher as in their current class and all kids\u2019 classmates are among the top T places of their preference lists, respectively.\"\n\nThe problem asks us to find a smallest non-negative integer $T$ such that there is a partitioning of the kids in three new classes such that no kid has the same teacher as in their current class and all kids\u2019 classmates are among the top $T$ places of their preference lists, respectively.\n\nTo solve this problem, we need to first understand the problem statement. The problem statement says that the teachers decide to let the kids change classes every year and that the kids have their say in the process. However, the input data does not provide any information on how many teachers there are in the kindergarten. Therefore, we cannot determine the number of teachers in the kindergarten. We need to provide the input data to find the smallest non-negative integer $T$ such that there is a partitioning of the kids in three new classes such that no kid has the same teacher as in their current class and all kids\u2019 classmates are among the top $T$ places of their preference lists, respectively.\n\nTo find the smallest non-negative integer $T$, we can start by defining a function that takes the input data as a string and returns the output. In this case, the input data is a string in the format of \"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\".\n\n```python\n"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\\n\") == 4, \"The solution should return 4.\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5') == '4\\n'\nassert solution('1\\n2') == '2\\n'\nassert solution('2\\n2 1 2 3 4 5') == '3\\n'\nassert solution('3\\n3') == '3\\n'\nassert solution('6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5') == '6\\n'"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == \"4\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == \"4\\n4\"\nassert solution(\"10\\n0 2 3 4 5 6 7 8 9 10\\n0 1 3 4 5 6 7 8 9 10\\n1 6 5 4 2 1 7 8 9 10\\n2 6 5 3 2 1 7 8 9 10\\n1 1 2 3 4 6 7 8 9 10\\n2 1 2 3 4 5 7 8 9 10\\n3 2 2 3 4 5 6 7 8 9 10\\n4 3 3 3 4 5 6 7 8 9 10\\n5 4 4 4 4 5 6 7 8 9 10\\n6 5 5 5 5 5 6 7 8 9 10\\n7 6 6 6 6 6 6 7 8 9 10\\n8 7 7 7 7 7 7 7 8 9 10\\n9 8 8 8 8 8 8 8 8 9 10\\n10 9 9 9 9 9 9 9 9 9 10\") == \"10\\n10\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == 4"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5') == '4'\n"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"4\\n\"\nassert solution(4) == \"4\\n\"\nassert solution(5) == \"4\\n\"\nassert solution(6) == \"4\\n\"\nassert solution(7) == \"4\\n\""
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == 4\nassert solution(\"3\\n1 2\\n1 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == 1\nassert solution(\"6\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n5 6 7 8\\n6 7 8 9\") == 1\nassert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n1 1 1 1 1 1 1 1 1 1 1\") == 5"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n\") == \"4\"\n"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(4)) == \"4\""
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n    4\n    1 1\n    1 2 3 4\n    2 3 4 5\n    3 4 5 6\n    4 5 6 7\n    '''\n) == 4\n\nprint(solution(\n    '''\n    4\n    1 1\n    1 2 3 4\n    2 3 4 5\n    3 4 5 6\n    4 5 6 7\n    '''\n))"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '4'"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == \"4\""
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n'''\n4\n1 1\n1 2 3 4\n2 3 4 5\n3 4 5 6\n4 5 6 7\n''') == '4\\n'"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n    4\n1 1\n1 2 3 4\n2 3 4 5\n3 4 5 6\n4 5 6 7\n''') == '4\\n'\n\nassert solution('''\n    6\n1 1 2\n1 2 3 4 5 6\n2 3 4 5 6 7\n3 4 5 6 7 8\n4 5 6 7 8 9\n5 6 7 8 9 10\n6 7 8 9 10 11\n''') == '11\\n'"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"4\\n4\\n4\\n4\"\nassert solution(stdin) == \"1\\n1\\n1\\n1\""
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"The output {solution(input())} does not match the expected output {output}.\""
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == '6'"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == \"6\\n\"\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == \"6\\n\""
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n\") == 6"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 6, \"Incorrect output.\""
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 6\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n5.3 4.2\\n6.4 5.3\") == 14"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 6\n"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 6\nassert solution(\"2\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 8\nassert solution(\"1\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n\") == 6\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n\") == 6\nassert solution(\"6\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n\") == 6\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n7.8 9.0\\n\") == 6\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n7.8 9.0\\n1.0 2.0\\n3.1 2.0\\n1.0 4.0\\n3.1 4.0\\n\") == 8\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n7.8 9.0\\n1.0 2.0\\n3.1 2.0\\n1.0 4.0\\n3.1 4.0\\n5.6 7.8\\n\") == 10\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n7.8 9.0\\n1.0 2.0\\n3.1 2.0\\n1.0 4.0\\n3.1 4.0\\n5.6 7.8\\n10.0 12.0\\n\") == 10"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == \"6\""
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"5\""
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Test failed for {input()}\""
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == \"5\", \"The solution should return 5.\""
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n2\\n2\\n2\\n') == 5"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 5"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 5"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Expected '{output}', got '{solution(input())}'\""
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"5\\n\"\n"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2\\n2\\n2\") == 5\n"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 5, \"Test case 1 should return 5\"\nassert solution(2) == 5, \"Test case 2 should return 5\"\nassert solution(2) == 5, \"Test case 3 should return 5\"\nassert solution(2) == 5, \"Test case 4 should return 5\"\nassert solution(2) == 5, \"Test case 5 should return 5\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"5 3\\n2 2 2 1\") == \"5 3\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"10 5\\n2 2 2 1\") == \"10 7\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"2 3\\n2 2 2 1\") == \"2 2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1 1\\n\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '''1 1\n"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\\ndef solution(stdin: str) -> str: pass\\n\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n\") == \"1\\n\", \"Your solution is incorrect. Please check the code and try again.\"\nassert solution(\"10\\n\") == \"10\\n\", \"Your solution is incorrect. Please check the code and try again.\"\nassert solution(\"11\\n\") == \"11\\n\", \"Your solution is incorrect. Please check the code and try again.\"\nassert solution(\"123\\n\") == \"3\\n\", \"Your solution is incorrect. Please check the code and try again.\"\nassert solution(\"1245\\n\") == \"6\\n\", \"Your solution is incorrect. Please check the code and try again.\"\nassert solution(\"1246\\n\") == \"6\\n\", \"Your solution is incorrect. Please check the code and try again.\"\nassert solution(\"1247\\n\") == \"7\\n\", \"Your solution is incorrect. Please check the code and try again.\"\nassert solution(\"1248\\n\") == \"9\\n\", \"Your solution is incorrect. Please check the code and try again.\"\nassert solution(\"1249\\n\") == \"10\\n\", \"Your solution is incorrect. Please check the code and try again.\"\nassert solution(\"1250\\n\") == \"10\\n\", \"Your solution is incorrect. Please check the code and try again.\"\nassert solution(\"1251\\n\") == \"11\\n\", \"Your solution is incorrect. Please check the code and try again.\"\nassert solution(\"1252\\n\") == \"11\\n\", \"Your solution is incorrect. Please check the code and try again.\"\nassert solution(\"1253\\n\") == \"12\\n\", \"Your solution is incorrect. Please check the code and try again.\"\nassert solution(\"1254\\n\") == \"12\\n\", \"Your solution is incorrect. Please check the code and try again.\"\nassert solution(\"1255\\n\") == \"13\\n\", \"Your solution is incorrect. Please check the code and try again.\"\nassert solution(\"1256\\n\") == \"13\\n\", \"Your solution is incorrect. Please check the code and try again.\"\nassert solution(\"1257\\n\") == \"14\\n\", \"Your solution is incorrect. Please check the code and try again.\"\nassert solution(\"1258\\n\") == \"14\\n\", \"Your solution is incorrect. Please check the code and try again.\"\nassert solution(\"1259\\n\") == \"15\\n\", \"Your solution is incorrect. Please check the code and try again.\"\nassert solution(\"1260\\n\") == \"15\\n\", \"Your solution is incorrect. Please check the code and try again.\"\nassert solution(\"1261\\n\") == \"16\\n\", \"Your solution is incorrect. Please check the code and try again.\"\nassert solution(\"1262\\n\") == \"16\\n\", \"Your solution is incorrect. Please check the code and try again.\"\nassert solution(\"1263\\n\") == \"17\\n\", \"Your solution is incorrect. Please check the code and try again.\"\nassert solution(\"1264\\n\") == \"17\\n\", \"Your solution is incorrect. Please check the code and try again.\"\nassert solution(\"1265\\n\") == \"18\\n\", \"Your solution is incorrect. Please check the code and try again.\"\nassert solution(\"1266\\n\") == \"18\\n\", \"Your solution is incorrect. Please check the code and try again.\"\nassert solution(\"1267\\n\") == \"19\\n\", \"Your solution is incorrect. Please check the code and try again.\"\nassert solution(\"1268\\n\") == \"19\\n\", \"Your solution is incorrect. Please check the code and try again.\"\nassert solution(\"1269\\n\") == \"20\\n\", \"Your solution is incorrect. Please check the code and try again.\"\nassert solution(\"1270\\n\") == \"20\\n\", \"Your solution is incorrect. Please check the code and try again.\"\nassert solution(\"1271\\n\") == \"21\\n\", \"Your solution is incorrect. Please check the code and try again.\"\nassert solution(\"1272\\n\") == \"21\\n\", \"Your solution is incorrect. Please check the code and try again.\"\nassert solution(\"1273\\n\") == \"22\\n"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 10, \"Expected output: 10, got: {}\".format(solution(1))"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 10"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt').readline()) == '10'\n"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"10\\n\""
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"10\"\n"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == \"10\""
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"10\"\n"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 1\nassert solution(4) == 2\nassert solution(5) == 2\nassert solution(6) == 3\nassert solution(7) == 3\nassert solution(8) == 3\nassert solution(9) == 4\nassert solution(10) == 4\nassert solution(11) == 4\nassert solution(12) == 5\nassert solution(13) == 5\nassert solution(14) == 6\nassert solution(15) == 6\nassert solution(16) == 7\nassert solution(17) == 7\nassert solution(18) == 7\nassert solution(19) == 8\nassert solution(20) == 8\nassert solution(21) == 8\nassert solution(22) == 9\nassert solution(23) == 9\nassert solution(24) == 10\nassert solution(25) == 10\nassert solution(26) == 11\nassert solution(27) == 11\nassert solution(28) == 12\nassert solution(29) == 12\nassert solution(30) == 13\nassert solution(31) == 13\nassert solution(32) == 14\nassert solution(33) == 14\nassert solution(34) == 15\nassert solution(35) == 15\nassert solution(36) == 16\nassert solution(37) == 16\nassert solution(38) == 17\nassert solution(39) == 17\nassert solution(40) == 18\nassert solution(41) == 18\nassert solution(42) == 19\nassert solution(43) == 19\nassert solution(44) == 20\nassert solution(45) == 20\nassert solution(46) == 21\nassert solution(47) == 21\nassert solution(48) == 22\nassert solution(49) == 22\nassert solution(50) == 23\nassert solution(51) == 23\nassert solution(52) == 24\nassert solution(53) == 24\nassert solution(54) == 25\nassert solution(55) == 25\nassert solution(56) == 26\nassert solution(57) == 26\nassert solution(58) == 27\nassert solution(59) == 27\nassert solution(60) == 28\nassert solution(61) == 28\nassert solution(62) == 29\nassert solution(63) == 29\nassert solution(64) == 30\nassert solution(65) == 30\nassert solution(66) == 31\nassert solution(67) == 31\nassert solution(68) == 32\nassert solution(69) == 32\nassert solution(70) == 33\nassert solution(71) == 33\nassert solution(72) == 34\nassert solution(73) == 34\nassert solution(74) == 35\nassert solution(75) == 35\nassert solution(76) == 36\nassert solution(77) == 36\nassert solution(78) == 37\nassert solution(79) == 37\nassert solution(80) == 38\nassert solution(81) == 38\nassert solution(82) == 39\nassert solution(83) == 39\nassert solution(84) == 40\nassert solution(85) == 40\nassert solution(86) == 41\nassert solution(87) == 41\nassert solution(88) == 42\nassert solution(89) == 42\nassert solution(90) == 43\nassert solution(91) == 43\nassert solution(92) == 44\nassert solution(93) == 44\nassert solution(94) == 45\nassert solution(95) == 45\nassert solution(96) == 46\nassert solution(97) == 46\nassert solution(98) == 4"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1') == '10'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '0.001', 'Expected 0.001, got {}'.format(solution(stdin))"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == '0.001'"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n1000 1 0\\n1 1000 1\\n\") == 0.001\n"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0.001\"\n"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"0.001\", solution(stdin)\n"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\n1000 1 0\\n1 1000 1\") == \"0.001\"  # expected output: 0.001\nassert solution(\"1 2\\n1000 1 0\\n1 1000 2\") == \"0.002\"  # expected output: 0.002\nassert solution(\"1 2\\n1000 1 0\\n1 1000 3\") == \"0.003\"  # expected output: 0.003\nassert solution(\"1 2\\n1000 1 0\\n1 1000 4\") == \"0.004\"  # expected output: 0.004\nassert solution(\"1 2\\n1000 1 0\\n1 1000 5\") == \"0.005\"  # expected output: 0.005\nassert solution(\"1 2\\n1000 1 0\\n1 1000 6\") == \"0.006\"  # expected output: 0.006\nassert solution(\"1 2\\n1000 1 0\\n1 1000 7\") == \"0.007\"  # expected output: 0.007\nassert solution(\"1 2\\n1000 1 0\\n1 1000 8\") == \"0.008\"  # expected output: 0.008\nassert solution(\"1 2\\n1000 1 0\\n1 1000 9\") == \"0.009\"  # expected output: 0.009\nassert solution(\"1 2\\n1000 1 0\\n1 1000 10\") == \"0.010\"  # expected output: 0.010\nassert solution(\"1 2\\n1000 1 0\\n1 1000 11\") == \"0.011\"  # expected output: 0.011\nassert solution(\"1 2\\n1000 1 0\\n1 1000 12\") == \"0.012\"  # expected output: 0.012\nassert solution(\"1 2\\n1000 1 0\\n1 1000 13\") == \"0.013\"  # expected output: 0.013\nassert solution(\"1 2\\n1000 1 0\\n1 1000 14\") == \"0.014\"  # expected output: 0.014\nassert solution(\"1 2\\n1000 1 0\\n1 1000 15\") == \"0.015\"  # expected output: 0.015\nassert solution(\"1 2\\n1000 1 0\\n1 1000 16\") == \"0.016\"  # expected output: 0.016\nassert solution(\"1 2\\n1000 1 0\\n1 1000 17\") == \"0.017\"  # expected output: 0.017\nassert solution(\"1 2\\n1000 1 0\\n1 1000 18\") == \"0.018\"  # expected output: 0.018\nassert solution(\"1 2\\n1000 1 0\\n1 1000 19\") == \"0.019\"  # expected output: 0.019\nassert solution(\"1 2\\n1000 1 0\\n1 1000 20\") == \"0.020\"  # expected output: 0.020\nassert solution(\"1 2\\n1000 1 0\\n1 1000 21\") == \"0.021\"  # expected output: 0.021\nassert solution(\"1 2\\n1000 1 0\\n1 1000 22"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 0.001"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 0.001"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 0.001, \"Please implement the solution\""
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n1000 1 0\\n1 1000 1\") == 0.001\n"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\\n\", \"Test failed\""
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3 2 10000\\n1 2\\n2 3\\n3 1\") == \"0\\n\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3 2 10000\\n1 2\\n2 3\\n3 1\\n') == '0\\n'\nassert solution('1 3 5\\n2 3\\n3 4\\n') == '1\\n'\nassert solution('3 4 1\\n2 3\\n3 5\\n') == '2\\n'\nassert solution('2 1 3\\n3 4\\n4 5\\n') == '1\\n'"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 0, \"Expected 0, got {}\".format(solution())"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3 2 10000\\n1 2\\n2 3\\n3 1\\n') == '0\\n'"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 2 10000\\n1 2\\n2 3\\n3 1\\n\") == \"0\\n\""
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0\\n\", \"Test failed\""
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 2 10000\\n1 2\\n2 3\\n3 1\") == \"0\\n\"\nassert solution(\"6 8\\n1 2\\n2 3\\n3 4\\n4 5\\n5 1\\n1 6\\n2 7\\n3 8\\n4 9\\n5 10\\n6 11\\n7 12\\n8 13\\n9 14\\n10 15\\n11 16\\n12 17\\n13 18\\n14 19\\n15 20\\n16 21\\n17 22\\n18 23\\n19 24\\n20 25\\n21 26\\n22 27\\n23 28\\n24 29\\n25 30\\n26 31\\n27 32\\n28 33\\n29 34\\n30 35\\n31 36\\n32 37\\n33 38\\n34 39\\n35 40\\n36 41\\n37 42\\n38 43\\n39 44\\n40 45\\n41 46\\n42 47\\n43 48\\n44 49\\n45 50\\n46 51\\n47 52\\n48 53\\n49 54\\n50 55\\n51 56\\n52 57\\n53 58\\n54 59\\n55 60\\n56 61\\n57 62\\n58 63\\n59 64\\n60 65\\n61 66\\n62 67\\n63 68\\n64 69\\n65 70\\n66 71\\n67 72\\n68 73\\n69 74\\n70 75\\n71 76\\n72 77\\n73 78\\n74 79\\n75 80\\n76 81\\n77 82\\n78 83\\n79 84\\n80 85\\n81 86\\n82 87\\n83 88\\n84 89\\n85 90\\n86 91\\n87 92\\n88 93\\n89 94\\n90 95\\n91 96\\n92 97\\n93 98\\n94 99\\n95 100\\n96 101\\n97 102\\n98 103\\n99 104\\n100 105\\n101 106\\n102 107\\n103 108\\n104 109\\n105 110\\n106 111\\n107 112\\n108 113\\n109 114\\n110 115\\n111 116\\n112 117\\n113 118\\n114 119\\n115 120\\n116 121\\n117 122\\n118 123\\n119 124\\n120 125\\n121 126\\n122 127\\n123 128\\n124 129\\n125 130\\n126 131\\n127 132\\n128 133\\n129 134\\n1"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 0, \"Incorrect solution\""
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Output: 0\\n\", \"Test failed\""
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == \"26\\n\""
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\\n') == 26\n\nsolution('4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\\n')"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0') == '26'"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '26', \"Test case failed.\"\n"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == '26\\n'"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(example_input) == example_output, f\"The solution should return {example_output}, but it returns {solution(example_input)}.\""
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(10)) == \"26\"\n"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\") == 26\n"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0') == 26\n"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\n"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\""
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\"\n"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='3 2\\n20 20 20 40\\nX.X\\nT.T') == '0.333333333\\n0.666666667\\n'"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 2\\n20 20 20 40\\nX.X\\nT.T\\n') == '0.333333333\\n0.666666667\\n'\nassert solution('3 2\\n20 20 20 40\\nX.X\\nT.T\\n') == '0.333333333\\n0.666666667\\n'\nassert solution('3 2\\n20 20 20 40\\nX.X\\nT.T\\n') == '0.333333333\\n0.666666667\\n'\nassert solution('3 2\\n20 20 20 40\\nX.X\\nT.T\\n') == '0.333333333\\n0.666666667\\n'\nassert solution('3 2\\n20 20 20 40\\nX.X\\nT.T\\n') == '0.333333333\\n0.666666667\\n'\nassert solution('3 2\\n20 20 20 40\\nX.X\\nT.T\\n') == '0.333333333\\n0.666666667\\n'"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == expected_output, \"The function should return the expected output for the given input.\""
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\\n\"\n"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    3 2\n    20 20 20 40\n    X.X\n    T.T\n    \"\"\"\n) == \"0.333333333\\n0.666666667\""
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0.333333333\\n0.666666667\\n\""
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 0.75"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Output: {solution(input())}, Expected: {output}\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"45 45 0 0\") == \"0.75\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('45 45 0 0') == '0.75'\nprint('All tests passed!')"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '0.75'"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('45 45 0 0') == '0.75'"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"45 45 0 0\") == \"0.75\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 0.75"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 0.75, \"Your solution is incorrect. Please check the example cases and the output format.\"\n"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 4\nassert solution(5) == 4\nassert solution(6) == 5\nassert solution(7) == 4\nassert solution(8) == 4\nassert solution(9) == 4\nassert solution(10) == 4\nassert solution(11) == 5\nassert solution(12) == 5\nassert solution(13) == 4\nassert solution(14) == 4\nassert solution(15) == 4\nassert solution(16) == 4\nassert solution(17) == 4\nassert solution(18) == 4\nassert solution(19) == 4\nassert solution(20) == 4\nassert solution(21) == 4\nassert solution(22) == 4\nassert solution(23) == 4\nassert solution(24) == 4\nassert solution(25) == 4\nassert solution(26) == 4\nassert solution(27) == 4\nassert solution(28) == 4\nassert solution(29) == 4\nassert solution(30) == 4\nassert solution(31) == 4\nassert solution(32) == 4\nassert solution(33) == 4\nassert solution(34) == 4\nassert solution(35) == 4\nassert solution(36) == 4\nassert solution(37) == 4\nassert solution(38) == 4\nassert solution(39) == 4\nassert solution(40) == 4\nassert solution(41) == 4\nassert solution(42) == 4\nassert solution(43) == 4\nassert solution(44) == 4\nassert solution(45) == 4\nassert solution(46) == 4\nassert solution(47) == 4\nassert solution(48) == 4\nassert solution(49) == 4\nassert solution(50) == 4\nassert solution(51) == 4\nassert solution(52) == 4\nassert solution(53) == 4\nassert solution(54) == 4\nassert solution(55) == 4\nassert solution(56) == 4\nassert solution(57) == 4\nassert solution(58) == 4\nassert solution(59) == 4\nassert solution(60) == 4\nassert solution(61) == 4\nassert solution(62) == 4\nassert solution(63) == 4\nassert solution(64) == 4\nassert solution(65) == 4\nassert solution(66) == 4\nassert solution(67) == 4\nassert solution(68) == 4\nassert solution(69) == 4\nassert solution(70) == 4\nassert solution(71) == 4\nassert solution(72) == 4\nassert solution(73) == 4\nassert solution(74) == 4\nassert solution(75) == 4\nassert solution(76) == 4\nassert solution(77) == 4\nassert solution(78) == 4\nassert solution(79) == 4\nassert solution(80) == 4\nassert solution(81) == 4\nassert solution(82) == 4\nassert solution(83) == 4\nassert solution(84) == 4\nassert solution(85) == 4\nassert solution(86) == 4\nassert solution(87) == 4\nassert solution(88) == 4\nassert solution(89) == 4\nassert solution(90) == 4\nassert solution(91) == 4\nassert solution(92) == 4\nassert solution(93) == 4\nassert solution(94) == 4\nassert solution(95) == 4\nassert solution(96) == 4\nassert solution(97) == 4\nassert solution(98) == 4\nassert solution(99) == 4\nassert solution(100) == 4\nassert solution(101) == 4\nassert solution(102) == 4\nassert solution(103) == 4\nassert solution(104) == 4\nassert solution(105) == 4\nassert solution(106"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"Output: 4\\n\"\n"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9') == 4"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == \"4\""
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n\") == 4, \"Incorrect output\""
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == \"4\\n\"\n"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\"\"\"\n) == \"4\"\n\nassert solution(\n    \"\"\"5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n10 10 10\n1 1 1\"\"\"\n) == \"10\""
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == 4, \"The output is incorrect.\""
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected, f\"Solution does not match expected output ({expected})\""
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n') == 4"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 100, \"Expected output 100, got {} instead\".format(solution())"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"100\\n\", \"The output should be 100, but it is: \" + solution(stdin)"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '100', \"Expected output: 100, got: \" + solution(stdin)"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n10 10 0 5\\n\") == 100, \"Expected output: 100, actual output: {}\".format(solution(\"1\\n10 10 0 5\\n\"))"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"100\", \"The solution should return 100.\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == '100', 'Expected output: \"100\", got: \"' + solution(stdin=input()) + '\".'"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    1\n    10 10 0 5\n    15 20 0 10\n    20 25 0 15\n    25 30 0 20\n    30 35 0 25\n    35 40 0 30\n    40 45 0 35\n    45 50 0 40\n    50 55 0 45\n    55 60 0 50\n    \"\"\"\n) == \"100\"\n"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Test case {i+1} failed: expected {expected}, got {solution(stdin)}\" for i, (stdin, expected) in enumerate(test_cases)"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"100\"\n"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"100\", \"The output should be 100, but it is \" + str(solution(stdin))"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == '''\n1\n"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1', 'Your solution is incorrect.'"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8') == 1"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 1, \"Your solution is incorrect\""
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    3\n    0 0 2 2\n    1 1 3 4\n    5 7 6 8\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n    3\n    0 0 2 2\n    1 1 3 4\n    5 7 6 9\n    \"\"\"\n) == \"0\"\n\nassert solution(\n    \"\"\"\n    2\n    0 0 3 3\n    0 0 4 4\n    0 0 5 5\n    0 0 6 6\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n    2\n    0 0 2 2\n    0 0 2 3\n    0 0 2 4\n    \"\"\"\n) == \"0\"\n\nassert solution(\n    \"\"\"\n    2\n    0 0 2 2\n    0 0 2 2\n    0 0 2 2\n    \"\"\"\n) == \"1\""
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '1\\n'\n"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 2 2\\n1 1 3 4\\n5 7 6 8\") == \"1\\n\"\nassert solution(\"0 0 0 0\\n-1000000000 0 1000000000 1000000000\\n0 0 1000000000 1000000000\\n0 0 0 0\") == \"0\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8') == 1\nassert solution('6\\n0 0 4 4\\n2 2 5 5') == 0\nassert solution('1\\n1 1 1 1') == 1\nassert solution('2\\n1 1 2 2') == 1\nassert solution('3\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8\\n6\\n0 0 4 4\\n2 2 5 5') == 0\nassert solution('7\\n0 0 5 5\\n2 2 6 6') == 1\nassert solution('8\\n0 0 4 4\\n2 2 5 5') == 0\n"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0 2 2\\n1 1 3 4\\n5 7 6 8\") == 1\nprint(\"All tests passed\")"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0 2 2\\n1 1 3 4\\n5 7 6 8\") == 1, \"Solution is not correct\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 17"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"17\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"17\\n\"\n"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"17\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '17\\n'"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == 17\nassert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\\n3 3 3 3 3\") == 14\nassert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\\n3 3 3 3 3\\n5 5 5 5 5\") == 18\nassert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\\n3 3 3 3 3\\n5 5 5 5 5\\n3 3 3 3 3\\n5 5 5 5 5\\n3 3 3 3 3\\n5 5 5 5 5\\n3 3 3 3 3\\n5 5 5 5 5\\n3 3 3 3 3\\n5 5 5 5 5\\n3 3 3 3 3\\n5 5 5 5 5\\n3 3 3 3 3\\n5 5 5 5 5\\n3 3 3 3 3\\n5 5 5 5 5\\n3 3 3 3 3\\n5 5 5 5 5\\n3 3 3 3 3\\n5 5 5 5 5\\n3 3 3 3 3\\n5 5 5 5 5\\n3 3 3 3 3\\n5 5 5 5 5\\n3 3 3 3 3\\n5 5 5 5 5\\n3 3 3 3 3\\n5 5 5 5 5\\n3 3 3 3 3\\n5 5 5 5 5\\n3 3 3 3 3\\n5 5 5 5 5\\n3 3 3 3 3\\n5 5 5 5 5\\n3 3 3 3 3\\n5 5 5 5 5\\n3 3 3 3 3\\n5 5 5 5 5\\n3 3 3 3 3\\n5 5 5 5 5\\n3 3 3 3 3\\n5 5 5 5 5\\n3 3 3 3 3\\n5 5 5 5 5\\n3 3 3 3 3\\n5 5 5 5 5\\n3 3 3 3 3\\n5 5 5 5 5\\n3 3 3 3 3\\n5 5 5 5 5\\n3 3 3 3 3\\n5 5 5 5 5\\n3 3 3 3 3\\n5 5 5 5 5\\n3 3 3 3 3\\n5 5 5 5 5\\n3 3 3 3 3\\n5 5 5 5 5\\n3 3 3 3 3\\n5 5 5 5 5\\n3 3 3 3 3"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"17\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S') == '17'"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"17\\n\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3 2 3 1 1\") == \"1 4 3 5 2\\n2 3 5 1 4\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3 2 3 1 1\\n\") == \"1 4 3 5 2\\n2 3 5 1 4\\n\"\nassert solution(\"5\\n3 2 4 1 1\\n\") == \"impossible\\n\"\n"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n3 2 3 1 1\") == \"1 4 3 5 2\\n2 3 5 1 4\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1 4 3 5 2 \\n2 3 5 1 4\"\n"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n3 2 3 1 1\") == \"1 4 3 5 2\\n2 3 5 1 4\"\nassert solution(\"10\\n1 1 2 3 4 5 6 7 8 9\") == \"impossible\"\nassert solution(\"5\\n3 2 3 1 1\\n1 2 3 4 5\") == \"1 4 3 5 2\"\nassert solution(\"10\\n1 1 2 3 4 5 6 7 8 9\\n1 2 3 4 5 6 7 8 9\") == \"impossible\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test Case {i+1} failed. Expected output:\\n{output}\\nGot output:\\n{solution(input())}\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n3 2 3 1 1') == '1 4 3 5 2 \\n2 3 5 1 4'\nassert solution('1\\n1') == 'impossible'\nassert solution('5\\n1 2 3 4 5') == 'impossible'\nassert solution('3\\n1 2 3 4 5') == '2 3 5 1 4'"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n3 2 3 1 1') == '1 4 3 5 2 \\n2 3 5 1 4'\nassert solution('5\\n1 1 1 1 1') == 'impossible'\n"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n3 2 3 1 1') == '1 4 3 5 2\\n2 3 5 1 4\\nimpossible'\nassert solution('7\\n1 2 3 4 5 6') == '2 1 4 3 6 5\\n2 3 4 5 1 6\\nimpossible'\nassert solution('10\\n1 2 3 4 5 6 7 8 9') == '2 1 4 3 6 5 8 7 9\\n2 3 4 5 1 6 7 9 5\\nimpossible'\nassert solution('1000\\n2 3 4 5 6 7 8 9') == '1 4 3 5 2 8 7 9 6\\n2 3 4 5 1 6 7 9 5\\n2 5 3 7 6 8 4 6 9\\n2 5 3 7 6 8 4 6 9\\n2 5 3 7 6 8 4 6 9'\nassert solution('1001\\n2 3 4 5 6 7 8 9') == '2 1 4 3 6 5 8 7 9\\n2 3 4 5 1 6 7 9 5\\n2 5 3 7 6 8 4 6 9\\n2 5 3 7 6 8 4 6 9\\n2 5 3 7 6 8 4 6 9\\n2 5 3 7 6 8 4 6 9\\n2 5 3 7 6 8 4 6 9\\n2 5 3 7 6 8 4 6 9\\n2 5 3 7 6 8 4 6 9\\n2 5 3 7 6 8 4 6 9\\n2 5 3 7 6 8 4 6 9\\n2 5 3 7 6 8 4 6 9\\n2 5 3 7 6 8 4 6 9\\n2 5 3 7 6 8 4 6 9\\n2 5 3 7 6 8 4 6 9\\n2 5 3 7 6 8 4 6 9\\n2 5 3 7 6 8 4 6 9\\n2 5 3 7 6 8 4 6 9\\n2 5 3 7 6 8 4 6 9\\n2 5 3 7 6 8 4 6 9\\n2 5 3 7 6 8 4 6 9\\n2 5 3 7 6 8 4 6 9\\n2 5 3 7 6 8 4 6 9\\n2 5 3 7 6 8 4 6 9\\n2 5 3 7 6 8 4 6 9\\n2 5 3 7 6 8 4 6 9\\n2 5 3 7 6 8 4 6 9\\n2 5 3 7 6 8 4 6 9\\n2 5 3 7 6 8 4 6 9\\n2 5 3 7 6 8 4 6 9\\n2 5 3 7 6 8 4 6 9\\n2 5 3 7 6 8 4 6 9\\n2 5 3 7 6 8 4 6 9\\n2 5 3 7 6 8 4 6 9\\n2 5 3 7 6 8 4 6 9\\n2 5 3 7 6 8 4 6 9\\n2 5 3 7 6 8 4 6 9\\n2 5 3 7 6 8"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n3 0 1\\n1 4\") == 0.76772047\nassert solution(\"1\\n1 4\\n2 0\") == 0.55555556\nassert solution(\"1\\n1 2\\n2 3\") == 0.16666667\n"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(b'1\\n3 0 1\\n1 4') == '0.76772047'"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(sample_input)}\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n3 0 1\\n1 4\") == 0.76772047, \"Test failed\"\n"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 0.76772047, \"The correct output is: 0.76772047, but it is: {}.\".format(solution())"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1\\n3 0 1\\n1 4\\n') == 0.76772047\nassert solution('2\\n3 0 1\\n0 1\\n') == 0.23227953\nassert solution('3\\n3 0 1\\n1 2\\n') == 0.0\nassert solution('4\\n3 0 1\\n0 1\\n') == 0.0\nassert solution('5\\n3 0 1\\n0 1\\n') == 0.0"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 0.76772047, \"The output is incorrect.\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\"\n\ninput = \"\"\"\n3 0 1\n1 4\n\"\"\"\noutput = \"\"\"\n0.76772047\n\"\"\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n3 0 1\\n1 4\\n\") == 0.76772047, \"Output: 0.76772047\\nExpected Output: 0.76772047\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 0.76772047, \"Your solution is incorrect.\"\n"
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"hello teams\") == \"27\"\n"
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('hello teams') == '27', \"Expected output: 27, got: \" + solution('hello teams')\nassert solution('def helloworld') == '7', \"Expected output: 7, got: \" + solution('def helloworld')\nassert solution('abc abcdef') == '2', \"Expected output: 2, got: \" + solution('abc abcdef')\nassert solution('aabbbccddeeff') == '11', \"Expected output: 11, got: \" + solution('aabbbccddeeff')\nassert solution('hello') == '0', \"Expected output: 0, got: \" + solution('hello')"
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"hello teams\") == \"def solution(stdin: str) -> str: pass\", \"Test Case 1 failed\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"hello teams\") == \"27\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('hello teams') == '27'\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"hello teams\") == \"27\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\nr\"hello teams\"\n) == \"27\", \"Output: '27'\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"hello teams\") == \"27\\n\"\nassert solution(\"defending\") == \"1\\n\"\nassert solution(\"abcd\") == \"1\\n\"\nassert solution(\"abbc\") == \"1\\n\"\nassert solution(\"aaab\") == \"1\\n\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"hello teams\") == \"27\\n\", \"Expected solution 27, got {}\".format(solution(\"hello teams\"))\nassert solution(\"definitely!\") == \"2\\n\", \"Expected solution 2, got {}\".format(solution(\"definitely!\"))\nassert solution(\"z\") == \"1\\n\", \"Expected solution 1, got {}\".format(solution(\"z\"))\nassert solution(\"aabbbbc\") == \"4\\n\", \"Expected solution 4, got {}\".format(solution(\"aabbbbc\"))\n"
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"hello teams\") == \"27\\n\", \"The correct output should be 27\""
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '2', 'Your solution is incorrect.'"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n\") == \"2\""
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2\n"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2\nprint(\"All test cases pass.\")"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2\n"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n6 3\n1 8\n5 4\n7 7\n9 2\n16 6\n17 10\n4 7 2\n6 3 1\n12 6 3\n''') == 2, \"The output is incorrect.\""
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\", \"Your solution is incorrect. Please refer to the provided example and the problem statement for the solution.\""
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n') == 2\nassert solution('6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n20 10 5\\n') == 2\nassert solution('6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n20 10 5\\n18 5 3\\n') == 2\nassert solution('6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n20 10 5\\n18 5 3\\n19 1 1\\n') == 2\nassert solution('6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n20 10 5\\n18 5 3\\n19 1 1\\n10 1 1\\n') == 3\nassert solution('6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n20 10 5\\n18 5 3\\n19 1 1\\n10 1 1\\n11 1 1\\n') == 4\nassert solution('6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n20 10 5\\n18 5 3\\n19 1 1\\n10 1 1\\n11 1 1\\n15 2 2\\n') == 4"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\npass'"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '26'\nassert solution(stdin) == '25'\nassert solution(stdin) == '23'\nassert solution(stdin) == '20'\nassert solution(stdin) == '17'"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncad\\n\") == \"26\"\nassert solution(\"5 2\\na\\nb\\nc\\nd\\ne\\ncad\\n\") == \"1\""
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\\n\") == 26\nassert solution(\"10 2\\nabc\\ndef\\nghi\\n\") == 5\nassert solution(\"10 1\\nabc\\ndef\\nghij\\n\") == 7\nassert solution(\"10 2\\na\\nb\\nc\\nd\\ne\\ncaf\\n\") == 13\nassert solution(\"10 1\\na\\nb\\nc\\nd\\ne\\ncaf\\n\") == 13"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncad\") == \"26\""
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 3\\na\\nb\\nc\\nd\\ne\\ncad') == '26'\nassert solution('4 5\\na\\nb\\nc\\nd\\ne\\ncaf') == '16'\nassert solution('6 4\\na\\nb\\nc\\nd\\ne\\ncaf') == '19'\nassert solution('7 5\\na\\nb\\nc\\nd\\ne\\ncaf') == '15'\nassert solution('8 6\\na\\nb\\nc\\nd\\ne\\ncaf') == '18'"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('a') == 1\nassert solution('ab') == 2\nassert solution('ac') == 3\nassert solution('ad') == 5\nassert solution('ae') == 6\nassert solution('aabc') == 9\nassert solution('abca') == 11\nassert solution('acdb') == 12\nassert solution('adbe') == 13\nassert solution('aeab') == 15\nassert solution('aabcab') == 17\nassert solution('abcba') == 19\nassert solution('acdba') == 22\nassert solution('adbeb') == 24\nassert solution('aeabb') == 25\nassert solution('aabcabc') == 28\nassert solution('abcbaab') == 30\nassert solution('acdbaaz') == 33\nassert solution('adbebba') == 35\nassert solution('aeabba') == 36\nassert solution('aabcabab') == 40\nassert solution('abcbaaba') == 42\nassert solution('acdbaaba') == 45\nassert solution('adbebaba') == 47\nassert solution('aeabbaab') == 48\nassert solution('aabcabba') == 51\nassert solution('abcbaabb') == 53\nassert solution('acdbaabb') == 56\nassert solution('adbebabb') == 58\nassert solution('aeabbaab') == 59\nassert solution('aabcababa') == 64\nassert solution('abcbaabab') == 66\nassert solution('acdbaabab') == 69\nassert solution('adbebabab') == 71\nassert solution('aeabbaaba') == 72\nassert solution('aabcabaaa') == 77\nassert solution('abcbaabaa') == 79\nassert solution('acdbaabaa') == 82\nassert solution('adbebabaa') == 84\nassert solution('aeabbaabaa') == 85\nassert solution('aabcababaa') == 90\nassert solution('abcbaababa') == 92\nassert solution('acdbaababa') == 95\nassert solution('adbebababa') == 97\nassert solution('aeabbaabaa') == 98\nassert solution('aabcabaaaa') == 103\nassert solution('abcbaabaaa') == 105\nassert solution('acdbaabaaa') == 108\nassert solution('adbebabaaa') == 110\nassert solution('aeabbaabaaa') == 111\nassert solution('aabcababaaa') == 116\nassert solution('abcbaababaa') == 118\nassert solution('acdbaababaa') == 121\nassert solution('adbebababaa') == 123\nassert solution('aeabbaabaaaa') == 124\nassert solution('aabcabaaaaa') == 129\nassert solution('abcbaabaaaa') == 131\nassert solution('acdbaabaaaa') == 134\nassert solution('adbebabaaaa') == 136\nassert solution('aeabbaabaaaa') == 137\nassert solution('aabcababaaaa') == 142\nassert solution('abcbaababaaa') == 144\nassert solution('acdbaababaaa') == 147\nassert solution('adbebababaaa') == 149\nassert solution('aeabbaabaaaaa') == 150\nassert solution('aabcabaaaaaa') == 155\nassert solution('abcbaabaaaaa') == 157\nassert solution('acdbaabaaaaa') == 160\nassert solution('adbebabaaaaa') == 162\nassert solution('aeabbaabaaaaa') == 163\nassert solution('aabcababaaaaa') == 168\nassert solution('abcbaababaaaa') == 170\nassert solution('acdbaababaaaa') == 173\nassert solution('adbebababaaaa') == 175\nassert solution('aeabbaabaaaaaa') == 176\nassert solution('aabcabaaaaaaa') == 181\nassert solution('abcbaabaaaaaa') == 183\nassert solution('acdbaabaaaaaa') == 186\nassert solution('adbebabaaaaaa') == 188"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 3\\na\\nb\\nc\\nd\\ne\\ncaf') == '26'\nassert solution('5 3\\na\\nb\\nc\\nd\\ne\\ncaf\\n') == '26'\nassert solution('5 3\\na\\nb\\nc\\nd\\ne\\ncaf\\n\\n') == '26'\nassert solution('5 3\\na\\nb\\nc\\nd\\ne\\ncaf\\n\\n\\n') == '26'\nassert solution('5 3\\na\\nb\\nc\\nd\\ne\\ncaf\\n\\n\\n\\n') == '26'"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == 26\nassert solution(\"5 3\\nabc\\ndef\\nghi\\njkl\\nmno\\npqrs\\n\") == 7\nassert solution(\"5 5\\na\\nb\\nc\\nd\\ne\\n\") == 42\nassert solution(\"5 3\\nabc\\ndef\\nghi\\njkl\\nmno\\npqrs\\n\") == 7\nassert solution(\"5 3\\nabc\\ndef\\nghi\\njkl\\nmno\\npqrs\\n\") == 7"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 3\\na\\nb\\nc\\nd\\ne\\n') == 26\nassert solution('5 3\\na\\nb\\nc\\nd\\ne\\n\\n') == 41"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\"\nassert solution(\"5 10 30\\n10 5 3 2 1\") == \"impossible\"\nassert solution(\"10 5 30\\n10 5 3 2 1\") == \"impossible\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3 5 2 1 4\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\\n\"\nassert solution(\"5 10 30\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n\") == \"impossible\\n\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\\n\"\nassert solution(\"5 10 30\\n10 5 5 1 3\") == \"impossible\\n\"\nassert solution(\"5 10 30\\n10 5 3 1 2\") == \"impossible\\n\"\nassert solution(\"5 10 30\\n10 5 3 1 4\") == \"impossible\\n\"\nassert solution(\"5 10 30\\n10 5 3 1 3\") == \"impossible\\n\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\"\nassert solution(\"5 10 30\\n10 5 3 1 4\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 2 1\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 1 1\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 1 2\") == \"impossible\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 10 30\\n10 5 3 1 3') == '3 5 2 1 4'\nassert solution('5 10 30\\n10 5 3 2 3') == 'impossible'\nassert solution('5 10 30\\n10 5 3 1 2') == 'impossible'\nassert solution('5 10 30\\n10 5 3 2 1') == 'impossible'\nassert solution('5 10 30\\n10 5 3 1 4') == 'impossible'\nassert solution('5 10 30\\n10 5 3 2 4') == 'impossible'\nassert solution('5 10 30\\n10 5 3 1 1') == 'impossible'\nassert solution('5 10 30\\n10 5 3 2 2') == 'impossible'\nassert solution('5 10 30\\n10 5 3 1 3') == 'impossible'\nassert solution('5 10 30\\n10 5 3 2 3') == 'impossible'\nassert solution('5 10 30\\n10 5 3 1 2') == 'impossible'\nassert solution('5 10 30\\n10 5 3 2 1') == 'impossible'\nassert solution('5 10 30\\n10 5 3 1 4') == 'impossible'\nassert solution('5 10 30\\n10 5 3 2 4') == 'impossible'\nassert solution('5 10 30\\n10 5 3 1 1') == 'impossible'\nassert solution('5 10 30\\n10 5 3 2 2') == 'impossible'\nassert solution('5 10 30\\n10 5 3 1 3') == 'impossible'\nassert solution('5 10 30\\n10 5 3 2 3') == 'impossible'\nassert solution('5 10 30\\n10 5 3 1 2') == 'impossible'\nassert solution('5 10 30\\n10 5 3 2 1') == 'impossible'\nassert solution('5 10 30\\n10 5 3 1 4') == 'impossible'\nassert solution('5 10 30\\n10 5 3 2 4') == 'impossible'\nassert solution('5 10 30\\n10 5 3 1 1') == 'impossible'\nassert solution('5 10 30\\n10 5 3 2 2') == 'impossible'\nassert solution('5 10 30\\n10 5 3 1 3') == 'impossible'\nassert solution('5 10 30\\n10 5 3 2 3') == 'impossible'\nassert solution('5 10 30\\n10 5 3 1 2') == 'impossible'\nassert solution('5 10 30\\n10 5 3 2 1') == 'impossible'\nassert solution('5 10 30\\n10 5 3 1 4') == 'impossible'\nassert solution('5 10 30\\n10 5 3 2 4') == 'impossible'\nassert solution('5 10 30\\n10 5 3 1 1') == 'impossible'\nassert solution('5 10 30\\n10 5 3 2 2') == 'impossible'\nassert solution('5 10 30\\n10 5 3 1 3') == 'impossible'\nassert solution('5 10 30\\n10 5 3 2 3') == 'impossible'\nassert solution('5 10 30\\n10 5 3 1 2') == 'impossible'\nassert solution('5"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(n) +'' + str(m) +'' + str(k)) == '3 5 2 1 4', \"Invalid Input\"\nassert solution(str(n) +'' + str(m) +'' + str(k) +'' + str(p)) == '3 5 2 1 4', \"Invalid Input\"\nassert solution(str(n) +'' + str(m) +'' + str(k) +'' + str(p) +'' + str(q)) == '3 5 2 1 4', \"Invalid Input\"\nassert solution(str(n) +'' + str(m) +'' + str(k) +'' + str(p) +'' + str(q) +'' + str(r)) == '3 5 2 1 4', \"Invalid Input\"\nassert solution(str(n) +'' + str(m) +'' + str(k) +'' + str(p) +'' + str(q) +'' + str(r) +'' + str(s)) == '3 5 2 1 4', \"Invalid Input\"\nassert solution(str(n) +'' + str(m) +'' + str(k) +'' + str(p) +'' + str(q) +'' + str(r) +'' + str(s) +'' + str(t)) == '3 5 2 1 4', \"Invalid Input\"\nassert solution(str(n) +'' + str(m) +'' + str(k) +'' + str(p) +'' + str(q) +'' + str(r) +'' + str(s) +'' + str(t) +'' + str(u)) == '3 5 2 1 4', \"Invalid Input\"\nassert solution(str(n) +'' + str(m) +'' + str(k) +'' + str(p) +'' + str(q) +'' + str(r) +'' + str(s) +'' + str(t) +'' + str(u) +'' + str(v)) == '3 5 2 1 4', \"Invalid Input\"\nassert solution(str(n) +'' + str(m) +'' + str(k) +'' + str(p) +'' + str(q) +'' + str(r) +'' + str(s) +'' + str(t) +'' + str(u) +'' + str(v) +'' + str(w)) == '3 5 2 1 4', \"Invalid Input\"\nassert solution(str(n) +'' + str(m) +'' + str(k) +'' + str(p) +'' + str(q) +'' + str(r) +'' + str(s) +'' + str(t) +'' + str(u) +'' + str(v) +'' + str(w) +'' + str(x)) == '3 5 2 1 4', \"Invalid Input\"\nassert solution(str(n) +'' + str(m) +'' + str(k) +'' + str(p) +'' + str(q) +'' + str(r) +'' + str(s) +'' + str(t) +'' + str(u) +'' + str(v) +'' + str(w) +'' + str(x) +'' + str(y)) == '3 5 2 1 4', \"Invalid Input\"\nassert solution(str(n) +'' + str(m) +'' + str(k) +'' + str(p) +'' + str(q) +'' + str(r) +'' + str(s) +'' + str(t) +'' + str(u) +'' + str(v) +'' + str(w) +'' + str(x) +'' + str(y) +'' + str(z)) == '3 5 2 1 4', \"Invalid Input\"\nassert solution(str(n) +'' + str(m) +''"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1\\n2 3\\n2 3\") == 2"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1\\n2 3\\n2 3\") == 2\nassert solution(\"5\\n1 1\\n2 3\\n3 2\\n4 4\\n5 6\\n6 4\") == 1\nassert solution(\"6\\n1 1\\n2 3\\n3 2\\n4 4\\n5 6\\n6 4\") == 2\nassert solution(\"6\\n1 1\\n2 3\\n3 2\\n4 4\\n5 6\\n6 4\\n7 5\") == 1\nassert solution(\"6\\n1 1\\n2 3\\n3 2\\n4 4\\n5 6\\n6 4\\n7 5\\n8 6\") == 2\nassert solution(\"6\\n1 1\\n2 3\\n3 2\\n4 4\\n5 6\\n6 4\\n7 5\\n8 6\\n9 7\") == 1\nassert solution(\"7\\n1 1\\n2 3\\n3 2\\n4 4\\n5 6\\n6 4\\n7 5\\n8 6\\n9 7\\n10 8\") == 2\nassert solution(\"7\\n1 1\\n2 3\\n3 2\\n4 4\\n5 6\\n6 4\\n7 5\\n8 6\\n9 7\\n10 8\\n11 9\") == 1\nassert solution(\"7\\n1 1\\n2 3\\n3 2\\n4 4\\n5 6\\n6 4\\n7 5\\n8 6\\n9 7\\n10 8\\n11 9\\n12 10\") == 2\nassert solution(\"8\\n1 1\\n2 3\\n3 2\\n4 4\\n5 6\\n6 4\\n7 5\\n8 6\\n9 7\\n10 8\\n11 9\\n12 10\\n13 11\") == 1\nassert solution(\"8\\n1 1\\n2 3\\n3 2\\n4 4\\n5 6\\n6 4\\n7 5\\n8 6\\n9 7\\n10 8\\n11 9\\n12 10\\n13 11\\n14 12\") == 2\nassert solution(\"8\\n1 1\\n2 3\\n3 2\\n4 4\\n5 6\\n6 4\\n7 5\\n8 6\\n9 7\\n10 8\\n11 9\\n12 10\\n13 11\\n14 12\\n15 13\") == 1\nassert solution(\"8\\n1 1\\n2 3\\n3 2\\n4 4\\n5 6\\n6 4\\n7 5\\n8 6\\n9 7\\n10 8\\n11 9\\n12 10\\n13 11\\n14 12\\n15 13\\n16 14\") == 2\nassert solution(\"9\\n1 1\\n2 3\\n3 2\\n4 4\\n5 6\\n6 4\\n7 5\\n8 6\\n9 7\\n10 8\\n11 9\\n12 10\\n13 11\\n14 12\\n15 13\\n16 14\\n17 15\") == 1\nassert solution(\"9\\n1 1\\n2 3\\n3 2\\n4 4\\n5 6\\n6 4\\n7 5\\n8 6\\n9 7\\n10 8\\n11 9\\n12 10\\n13 11\\n14 12\\n15 13\\n16 14\\n17 15\\n18 "
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 2\n"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1\\n2 3\\n2 3\") == 2\nassert solution(\"4\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\") == \"shovel time!\""
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"3\n1 1\n2 3\n2 3\"\"\") == 2\nassert solution(\"\"\"4\n1 3\n2 3\n3 3\n4 3\"\"\") == 1\nassert solution(\"\"\"0\n1 1\n2 3\n3 3\n4 3\"\"\") == 0\nassert solution(\"\"\"5\n1 1\n2 3\n3 3\n4 3\"\"\") == 1\nassert solution(\"\"\"1\n1 1\n2 3\n3 3\n4 3\"\"\") == 1\nassert solution(\"\"\"0\n1 1\n2 3\n3 3\n4 3\"\"\") == 0\nassert solution(\"\"\"5\n1 1\n2 3\n3 3\n4 3\"\"\") == 0"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1\\n2 3\\n2 3\\n\") == 2\nassert solution(\"1\\n2 3\\n2 3\\n\") == 3\nassert solution(\"1\\n1 1\\n2 3\\n2 3\\n\") == 1\nassert solution(\"1\\n2 3\\n1 1\\n2 3\\n\") == 1\nassert solution(\"1\\n2 3\\n1 1\\n1 1\\n\") == 0"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1\\n2 3\\n2 3\") == 2\nprint(\"All tests passed!\")"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 2\n\nfrom typing import List"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1\\n2 3\\n2 3\") == \"2\\nshovel time!\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 2, \"Test case 1 incorrect\"\nassert solution() == 1, \"Test case 2 incorrect\"\nassert solution() == 1, \"Test case 3 incorrect\"\nassert solution() == 0, \"Test case 4 incorrect\"\nassert solution() == 1, \"Test case 5 incorrect\""
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Test failed for input {input()}, expected output {output}, got {solution(input())}\"\n"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n1 2 1 2') == '3\\n'\n"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4) == 3, \"Error: Please implement the solution.\""
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"3\"\nassert solution(\"5\\n1 2 1 2 1 2 1 2\") == \"4\""
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2 1 2\") == 3, \"The output should be 3.\""
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == 3\nassert solution(10) == 10\nassert solution(100) == 100\nassert solution(1000) == 1000"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1000, \"1 2 1 2\") == \"3\\n\"\nassert solution(1000, \"1 2 3 4 5\") == \"4\\n\"\nassert solution(1000, \"1 2 3 4 5 6\") == \"6\\n\"\nassert solution(1000, \"1 2 1 1 1\") == \"1\\n\"\nassert solution(1000, \"1 1 1 1 1 1\") == \"1\\n\"\nassert solution(1000, \"1 1 1 1 1 1 1\") == \"2\\n\""
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4) == \"3\""
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(4) == \"3\\n\""
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 3\nassert solution(2) == 2\nassert solution(3) == 2\nassert solution(4) == 2\nassert solution(5) == 2\nassert solution(6) == 2\nassert solution(7) == 2\nassert solution(8) == 2\nassert solution(9) == 2\nassert solution(10) == 2\nassert solution(11) == 2\nassert solution(12) == 2\nassert solution(13) == 2\nassert solution(14) == 2\nassert solution(15) == 2\nassert solution(16) == 2\nassert solution(17) == 2\nassert solution(18) == 2\nassert solution(19) == 2\nassert solution(20) == 2\nassert solution(21) == 2\nassert solution(22) == 2\nassert solution(23) == 2\nassert solution(24) == 2\nassert solution(25) == 2\nassert solution(26) == 2\nassert solution(27) == 2\nassert solution(28) == 2\nassert solution(29) == 2\nassert solution(30) == 2\nassert solution(31) == 2\nassert solution(32) == 2\nassert solution(33) == 2\nassert solution(34) == 2\nassert solution(35) == 2\nassert solution(36) == 2\nassert solution(37) == 2\nassert solution(38) == 2\nassert solution(39) == 2\nassert solution(40) == 2\nassert solution(41) == 2\nassert solution(42) == 2\nassert solution(43) == 2\nassert solution(44) == 2\nassert solution(45) == 2\nassert solution(46) == 2\nassert solution(47) == 2\nassert solution(48) == 2\nassert solution(49) == 2\nassert solution(50) == 2\nassert solution(51) == 2\nassert solution(52) == 2\nassert solution(53) == 2\nassert solution(54) == 2\nassert solution(55) == 2\nassert solution(56) == 2\nassert solution(57) == 2\nassert solution(58) == 2\nassert solution(59) == 2\nassert solution(60) == 2\nassert solution(61) == 2\nassert solution(62) == 2\nassert solution(63) == 2\nassert solution(64) == 2\nassert solution(65) == 2\nassert solution(66) == 2\nassert solution(67) == 2\nassert solution(68) == 2\nassert solution(69) == 2\nassert solution(70) == 2\nassert solution(71) == 2\nassert solution(72) == 2\nassert solution(73) == 2\nassert solution(74) == 2\nassert solution(75) == 2\nassert solution(76) == 2\nassert solution(77) == 2\nassert solution(78) == 2\nassert solution(79) == 2\nassert solution(80) == 2\nassert solution(81) == 2\nassert solution(82) == 2\nassert solution(83) == 2\nassert solution(84) == 2\nassert solution(85) == 2\nassert solution(86) == 2\nassert solution(87) == 2\nassert solution(88) == 2\nassert solution(89) == 2\nassert solution(90) == 2\nassert solution(91) == 2\nassert solution(92) == 2\nassert solution(93) == 2\nassert solution(94) == 2\nassert solution(95) == 2\nassert solution(96) == 2\nassert solution(97) == 2\nassert solution(98) == 2\nassert solution(99) == 2\nassert solution(100) == 2\nassert solution(101) == 2\nassert solution(102) == 2\nassert solution(103) == 2\n"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"79\"\n"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '79\\n'"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    4 4 999999937\n    2 2 123456789012345678901234567890\n    2 2 123456789012345678901234567890\n    2 2 123456789012345678901234567890\n    \"\"\"\n) == \"79\""
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4 999999937\") == \"79\"\n"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4 999999937\") == 79, \"The function should return 79, but it returns {}\".format(solution(\"4 4 999999937\"))\n\nfrom sympy import isprime"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4 999999937\") == 79, \"Sample Input: 4 4 999999937\\nSample Output: 79\""
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4 999999937\") == 79, \"The output should be 79, but it is: \" + solution(\"4 4 999999937\")\n"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '79', \"The correct answer is 79, but it's actually '{}'.\".format(solution())\n"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 4 999999937') == 79, \"Invalid output\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n4 +zucchini +mozzarella +mushrooms -artichoke\") == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\"\n\nassert solution(\"1\\n5 +zucchini +mozzarella +mushrooms -artichoke\") == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\""
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\", \"Incorrect output. Expected 'zucchini\\nmozzarella\\nmushrooms\\nartichoke', but got '{0}'.\".format(solution(stdin))"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"zucchini mozzarella mushrooms artichoke\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n4 +zucchini +mozzarella +mushrooms -artichoke\") == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\"\nassert solution(\"1\\n4 +zucchini +mozzarella +mushrooms -artichoke\\n6 +spinach +honeydew -cherry -pineapple\\n3 -ramen -ham -bacon -sausage\") == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\\nspinach\\nhoneydew\\ncherry\\npineapple\\nramen\\nham\\nbacon\\nsausage\""
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n4 +zucchini +mozzarella +mushrooms -artichoke\") == [\"zucchini\", \"mozzarella\", \"mushrooms\", \"artichoke\"]\nprint(\"Test Passed\")"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\"\nassert solution(stdin) == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\"\nassert solution(stdin) == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\"\nassert solution(stdin) == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\"\nassert solution(stdin) == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\"\nassert solution(stdin) == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\"\nassert solution(stdin) == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\"\nassert solution(stdin) == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\""
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n4 +zucchini +mozzarella +mushrooms -artichoke\") == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\\n\""
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"zucchini mozzarella mushrooms artichoke\", \"The solution is incorrect\"\nprint(\"Test passed\")"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\nPP\\nRR\\nPS\\nSS\") == \"PS\\nPP\\nRR\\nSS\"\nassert solution(\"2 3\\nRS\\nP\\nSP\\nSS\") == \"RR\\nPS\\nSS\"\nassert solution(\"5 7\\nP\\nPS\\nPP\\nPP\\nSS\\nSS\\nPS\\nPS\\nPS\\nPS\\nPS\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\n"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\nPP\\nRR\\nPS\\nSS\\n\") == [\"PS\", \"PP\", \"RR\", \"SS\"]\n"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"PP\\nRR\\nSS\\n\"\nassert solution() == \"PS\\nPP\\nRR\\nSS\\n\"\nassert solution() == \"PS\\nPP\\nRR\\nSS\\n\"\nassert solution() == \"PP\\nRR\\nSS\\nPS\\n\"\nassert solution() == \"PS\\nPP\\nRR\\nSS\\nPP\\nRR\\nSS\\n\"\nassert solution() == \"PP\\nRR\\nSS\\nPS\\nRR\\nSS\\nPP\\nRR\\nSS\\n\"\nassert solution() == \"PS\\nPP\\nRR\\nSS\\nPP\\nRR\\nSS\\nPP\\nRR\\nSS\\n\"\n"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\nPP\\nRR\\nPS\\nSS\\n\") == [\"PS\", \"PP\", \"RR\", \"SS\"]\nassert solution(\"4 4\\nPP\\nRR\\nPS\\nSS\\n\") == [\"PS\", \"PP\", \"RR\", \"SS\"]\nassert solution(\"5 4\\nPP\\nRR\\nPS\\nSS\\n\") == [\"PS\", \"PP\", \"RR\", \"SS\"]\n"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 4\\nPP\\nRR\\nPS\\nSS') == 'PS\\nPP\\nRR\\nSS'\nassert solution('3 4\\nPP\\nRR\\nSS\\nPP') == 'PP\\nRR\\nSS\\nPP'\nassert solution('3 4\\nPP\\nRR\\nSS\\nPP\\nPP') == 'PP\\nRR\\nSS\\nPP\\nPP'\nassert solution('3 4\\nPP\\nRR\\nSS\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 4, \"PP\\nRR\\nPS\\nSS\") == [\"PS\", \"PP\", \"RR\", \"SS\"]\nassert solution(3, 4, \"PP\\nRR\\nPS\\nSS\\nPS\") == [\"PS\", \"PP\", \"RR\", \"SS\"]\nassert solution(3, 4, \"PP\\nRR\\nPS\\nSS\\nPP\") == [\"PS\", \"PP\", \"RR\", \"SS\"]\nassert solution(3, 4, \"PP\\nRR\\nPS\\nSS\\nSS\") == [\"PS\", \"PP\", \"RR\", \"SS\"]\nassert solution(3, 4, \"PP\\nRR\\nPS\\nPP\\nSS\") == [\"PS\", \"PP\", \"RR\", \"SS\"]\nassert solution(3, 4, \"PP\\nRR\\nPS\\nPP\\nRR\") == [\"PS\", \"PP\", \"RR\", \"SS\"]\nassert solution(3, 4, \"PP\\nRR\\nPS\\nPP\\nSS\") == [\"PS\", \"PP\", \"RR\", \"SS\"]\nassert solution(3, 4, \"PP\\nRR\\nPS\\nSS\\nSS\") == [\"PS\", \"PP\", \"RR\", \"SS\"]\nassert solution(3, 4, \"PP\\nRR\\nPS\\nSS\\nSS\\nSS\") == [\"PS\", \"PP\", \"RR\", \"SS\"]\nassert solution(3, 4, \"PP\\nRR\\nPS\\nSS\\nRR\\nPS\") == [\"PS\", \"PP\", \"RR\", \"SS\"]\nassert solution(3, 4, \"PP\\nRR\\nPS\\nSS\\nRR\\nSS\") == [\"PS\", \"PP\", \"RR\", \"SS\"]\nassert solution(3, 4, \"PP\\nRR\\nPS\\nSS\\nRR\\nSS\\nSS\") == [\"PS\", \"PP\", \"RR\", \"SS\"]\nassert solution(3, 4, \"PP\\nRR\\nPS\\nSS\\nRR\\nRR\\nSS\") == [\"PS\", \"PP\", \"RR\", \"SS\"]\nassert solution(3, 4, \"PP\\nRR\\nPS\\nSS\\nRR\\nRR\\nRR\") == [\"PS\", \"PP\", \"RR\", \"SS\"]\nassert solution(3, 4, \"PP\\nRR\\nPS\\nSS\\nRR\\nRR\\nRR\\nSS\") == [\"PS\", \"PP\", \"RR\", \"SS\"]\nassert solution(3, 4, \"PP\\nRR\\nPS\\nSS\\nRR\\nRR\\nRR\\nRR\\nSS\") == [\"PS\", \"PP\", \"RR\", \"SS\"]\nassert solution(3, 4, \"PP\\nRR\\nPS\\nSS\\nRR\\nRR\\nRR\\nRR\\nRR\\nSS\") == [\"PS\", \"PP\", \"RR\", \"SS\"]\nassert solution(3, 4, \"PP\\nRR\\nPS\\nSS\\nRR\\nRR\\nRR\\nRR\\nRR\\nSS\\nSS\") == [\"PS\", \"PP\", \"RR\", \"SS\"]\nassert solution(3, 4, \"PP\\nRR\\nPS\\nSS\\nRR\\nRR\\nRR\\nRR\\nRR\\nRR\\nRR\\nSS\") == [\"PS\", \"PP\", \"RR\", \"SS\"]\nassert solution(3, 4, \"PP\\nRR\\nPS\\nSS\\nRR\\nRR\\nRR\\nRR\\nRR\\nRR\\nRR\\nRR\\nSS\\nSS\") == [\"PS\", \"PP\", \"RR\", \"SS\"]\nassert solution(3, 4, \"PP\\nRR\\nPS\\nSS\\nRR\\nRR\\nRR\\nRR\\nRR\\nRR\\nRR\\nRR\\nRR\\nSS\\nSS\\nSS\") == [\"PS\", \"PP\", \"RR\", \"SS\"]\nassert solution(3, 4, \"PP\\nRR\\nPS\\nSS\\nRR\\nRR\\nRR\\nRR\\nRR\\nRR\\nRR\\nRR\\nRR\\nRR\\nSS\\nSS\\nSS\\nSS\") == [\"PS\", \"PP\", \"RR\", \"SS\"]\nassert solution(3, 4, \"PP\\nRR\\"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\nPP\\nRR\\nPS\\nSS\\n\") == \"PS\\nPP\\nRR\\nSS\"\nassert solution(\"3 3\\nRR\\nPS\\nSS\\nRR\\n\") == \"PS\\nRR\\nSS\"\nassert solution(\"3 2\\nPP\\nSS\\nSS\\nPP\\n\") == \"PP\\nSS\\nSS\"\nassert solution(\"3 3\\nPP\\nPP\\nSS\\nSS\\nPP\\n\") == \"PP\\nPP\\nSS\\nSS\""
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\nPP\\nRR\\nPS\\nSS\\n\") == \"PS\\nPP\\nRR\\nSS\\n\"\nassert solution(\"3 4\\nP\\nS\\nP\\nS\\n\") == \"PS\\nPP\\nRR\\nSS\\n\"\nassert solution(\"3 4\\nR\\nR\\nP\\nS\\n\") == \"PS\\nPP\\nRR\\nSS\\n\"\nassert solution(\"3 4\\nR\\nP\\nS\\nR\\nR\\n\") == \"PS\\nPP\\nRR\\nSS\\n\"\nassert solution(\"3 4\\nR\\nR\\nR\\nR\\n\") == \"PS\\nPP\\nRR\\nSS\\n\"\nassert solution(\"3 4\\nR\\nR\\nR\\nP\\n\") == \"PS\\nPP\\nRR\\nSS\\n\"\nassert solution(\"3 4\\nR\\nR\\nR\\nS\\n\") == \"PS\\nPP\\nRR\\nSS\\n\"\nassert solution(\"3 4\\nR\\nR\\nR\\nS\\nR\\n\") == \"PS\\nPP\\nRR\\nSS\\n\"\nassert solution(\"3 4\\nR\\nR\\nR\\nS\\nS\\n\") == \"PS\\nPP\\nRR\\nSS\\n\"\nassert solution(\"3 4\\nR\\nR\\nR\\nP\\nR\\n\") == \"PS\\nPP\\nRR\\nSS\\n\"\nassert solution(\"3 4\\nR\\nR\\nR\\nP\\nS\\n\") == \"PS\\nPP\\nRR\\nSS\\n\"\nassert solution(\"3 4\\nR\\nR\\nR\\nS\\nR\\n\") == \"PS\\nPP\\nRR\\nSS\\n\"\nassert solution(\"3 4\\nR\\nR\\nR\\nS\\nS\\n\") == \"PS\\nPP\\nRR\\nSS\\n\"\nassert solution(\"3 4\\nR\\nR\\nR\\nS\\nS\\nR\\n\") == \"PS\\nPP\\nRR\\nSS\\n\"\nassert solution(\"3 4\\nR\\nR\\nR\\nS\\nS\\nS\\n\") == \"PS\\nPP\\nRR\\nSS\\n\"\nassert solution(\"3 4\\nR\\nR\\nR\\nS\\nS\\nS\\nR\\n\") == \"PS\\nPP\\nRR\\nSS\\n\"\nassert solution(\"3 4\\nR\\nR\\nR\\nS\\nS\\nS\\nS\\n\") == \"PS\\nPP\\nRR\\nSS\\n\"\nassert solution(\"3 4\\nR\\nR\\nR\\nP\\nR\\nR\\n\") == \"PS\\nPP\\nRR\\nSS\\n\"\nassert solution(\"3 4\\nR\\nR\\nR\\nP\\nR\\nS\\n\") == \"PS\\nPP\\nRR\\nSS\\n\"\nassert solution(\"3 4\\nR\\nR\\nR\\nP\\nR\\nS\\nR\\n\") == \"PS\\nPP\\nRR\\nSS\\n\"\nassert solution(\"3 4\\nR\\nR\\nR\\nP\\nR\\nS\\nS\\n\") == \"PS\\nPP\\nRR\\nSS\\n\"\nassert solution(\"3 4\\nR\\nR\\nR\\nP\\nR\\nS\\nS\\nR\\n\") == \"PS\\nPP\\nRR\\nSS\\n\"\nassert solution(\"3 4\\nR\\nR\\nR\\nP\\nR\\nS\\nS\\nS\\n\") == \"PS\\nPP\\nRR\\nSS\\n\"\nassert solution(\"3 4\\nR\\nR\\nR\\nP\\nS\\n\") == \"PS\\nPP\\nRR\\nSS\\n\"\nassert solution(\"3 4\\nR\\nR\\nR\\nP\\nS\\nR\\n\") == \"PS\\nPP\\nRR\\nSS\\n\"\n"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\nPP\\nRR\\nPS\\nSS\\n\") == \"PS\\nPP\\nRR\\nSS\\n\"\n\nassert solution(\"5 4\\nPP\\nRR\\nPS\\nSS\\n\") == \"PS\\nPP\\nRR\\nSS\\n\"\n\nassert solution(\"1 2\\nPP\\nRR\\nSS\\nPP\\n\") == \"SS\\nPP\\nRR\\nPP\\nSS\\nPP\\nPP\\nSS\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\n"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\nPP\\nRR\\nPS\\nSS\") == \"PS\\nPP\\nRR\\nSS\"\nassert solution(\"3 4\\nPP\\nRR\\nPS\\nSS\\nTT\") == \"PS\\nPP\\nRR\\nSS\\nTT\"\nassert solution(\"3 4\\nPP\\nRR\\nPS\\nSS\\nTT\\nYY\") == \"PS\\nPP\\nRR\\nSS\\nTT\\nYY\""
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n') == 288.0, \"Expected Output: 288.0, Actual Output: \" + str(solution('5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n'))"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n\") == \"288\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"288\"\n"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 288\nprint(\"Success!\")"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\") == \"288\"\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\") == \"288\"\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\") == \"288\"\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\") == \"288\"\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\") == \"288\"\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\") == \"288\"\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\") == \"288\"\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\") == \"288\"\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\") == \"288\"\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\") == \"288\"\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\") == \"288\"\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\") == \"288\"\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\") == \"288\"\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\") == \"288\"\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\") == \"288\"\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\") == \"288\"\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\") == \"288\"\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\") == \"288\"\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\") == \"288\"\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\") == \"288\"\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\") == \"288\"\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\") == \"288\"\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\") == \"288\"\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\") == \"288\"\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\") == \"288\"\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\") == \"288\"\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\") == \"288\"\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\") == \"288\"\nassert solution(\"5\\n0.1 2.0\\n0\\n"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '288\\n'\n"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '288', 'Your solution is incorrect!'"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 288"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 288, \"The output is incorrect\""
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\\n\") == 288\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n\") == 288\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n\") == 288\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n\") == 288\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n\") == 288\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n\") == 288"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('pastimeofwhimsy') == 1\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"pastimeofwhimsy\") == 1\nprint(\"All tests passed\")"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"pastimeofwhimsy\") == 1, \"Solution should return 1 for the given input.\""
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"pastimeofwhimsy\") == \"1\""
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"pastimeofwhimsy\") == \"1\""
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"pastimeofwhimsy\") == 1\n"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('pastimeofwhimsy') == 1\n"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"pastimeofwhimsy\") == \"1\""
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"pastimeofwhimsy\") == \"1\", \"Solution does not match\""
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('pastimeofwhimsy') == 1"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input) == expected, f\"Test failed for {input}\"\nfor i in range(expected.count(\"YES\")):\n    assert True, f\"Test failed for {input}\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\"\nassert solution(\"2 4\\n1 2 2 1 \") == \"YES\"\nassert solution(\"3 3\\n1 2 2 1 \") == \"NO\"\nassert solution(\"3 4\\n1 2 2 1 \") == \"NO\"\nassert solution(\"1 1\\n1 2 2 1 \") == \"YES\"\nassert solution(\"2 2\\n1 2 2 1 \") == \"YES\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 4\\n1 2 2 1 ') == 'YES'\nassert solution('3 4\\n1 2 2 1 3\\n1 1 1 1 2\\n1 1 1 1 1\\n') == 'NO'"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\", \"Test Case 1 Failed\"\nassert solution(\"3 4\\n2 1 1 2 1 \") == \"NO\", \"Test Case 2 Failed\"\nassert solution(\"3 4\\n3 2 1 3 1 \") == \"NO\", \"Test Case 3 Failed\"\nassert solution(\"3 4\\n4 2 1 4 1 \") == \"YES\", \"Test Case 4 Failed\"\nassert solution(\"3 4\\n1 1 1 1 1 \") == \"YES\", \"Test Case 5 Failed\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\n"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \\n\") == \"YES\"\n"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \\n\") == \"YES\"\nassert solution(\"3 4\\n2 2 1 2 1 \\n\") == \"NO\"\nassert solution(\"3 4\\n1 1 2 1 2 \\n\") == \"NO\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 4\\n1 2 2 1 ') == 'YES', 'Test failed'"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n1 2 2 1 2 1 1\\n\") == \"YES\"\n"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3/1\"\nassert solution() == \"1/3\""
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3/1\""
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n1 2\\n3\\n4\\n') == '3/1'\nassert solution('3\\n1 2 3\\n4\\n') == '4/1'\nassert solution('4\\n1 2 3 4\\n') == '5/1'\nassert solution('5\\n1 2 3 4 5\\n') == '7/1'\nassert solution('6\\n1 2 3 4 5 6\\n') == '8/1'\nassert solution('7\\n1 2 3 4 5 6 7\\n') == '10/1'\nassert solution('8\\n1 2 3 4 5 6 7 8\\n') == '12/1'\nassert solution('9\\n1 2 3 4 5 6 7 8 9\\n') == '15/1'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10\\n') == '20/1'\nassert solution('11\\n1 2 3 4 5 6 7 8 9 10 11\\n') == '25/1'\nassert solution('12\\n1 2 3 4 5 6 7 8 9 10 11 12\\n') == '30/1'\nassert solution('13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\n') == '35/1'\nassert solution('14\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\\n') == '40/1'\nassert solution('15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n') == '45/1'\nassert solution('16\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\\n') == '50/1'\nassert solution('17\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\\n') == '55/1'\nassert solution('18\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\\n') == '60/1'\nassert solution('19\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\\n') == '65/1'\nassert solution('20\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\n') == '70/1'\nassert solution('21\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21\\n') == '75/1'\nassert solution('22\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22\\n') == '80/1'\nassert solution('23\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23\\n') == '85/1'\n"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n1 2\\n3\\n4') == '3/1'"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Test case {i+1} failed: Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 2\\n3\\n4\") == \"3/1\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3/1\\n\"\n"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 2\\n3\\n4\") == \"3/1\"\n\nassert solution(\"3\\n1 2\\n3\\n4\") == \"7/2\"\n\nassert solution(\"4\\n1 2\\n3\\n4\") == \"9/3\"\n\nassert solution(\"5\\n1 2\\n3\\n4\") == \"17/5\""
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output, f\"Test failed for input: {sample_input}, expected output: {sample_output}\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n1 2\\n3\\n4\\n') == '3/1\\n'\n\nassert solution('2\\n1 2\\n3\\n4\\n') == '3/1\\n'\n\nassert solution('2\\n1 2\\n3\\n4\\n') == '3/1\\n'\n\nassert solution('2\\n1 2\\n3\\n4\\n') == '3/1\\n'\n\nassert solution('2\\n1 2\\n3\\n4\\n') == '3/1\\n'"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == \"1.114672365\\n\"\n"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(input())) == \"1.114672365\""
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == \"1.114672365\""
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1.114672365\", \"The output is incorrect. Please check the given code and make sure the output matches the expected output.\""
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == \"1.114672365\\n\""
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n1.2 10.2\\n2.2 15.2') == '1.114672365'\nassert solution('3\\n1.5 10.5\\n2.5 15.5\\n3.5 20.5') == '0.597619047'\nassert solution('4\\n1.1 10.1\\n2.1 15.1\\n3.1 20.1\\n4.1 25.1') == '0.795238095'\n"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    2\n    1.2 10.2\n    2.2 15.2\n    \"\"\"\n) == \"1.114672365\\n\""
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == expected_output, f\"Incorrect output: {solution(sample_input)}, expected {expected_output}\"\n"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"1.114672365\""
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\\n\") == \"1.114672365\""
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '''3\n1 2 3 2\n'''\n"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\\n1 2 3 2\""
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Got '{solution(stdin)}', expected '{expected}'\""
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n0 3\\n1 1\\n2 1\\n2 0') == '3\\n1 2 3 2'\n\nfrom typing import List"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(b'4\\n0 3\\n1 1\\n2 1\\n2 0\\n') == '3\\n1 2 3 2'"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 3\\n1 1\\n2 1\\n2 0\") == \"3\\n1 2 3 2\""
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 3\\n1 1\\n2 1\\n2 0\") == \"3\\n1 2 3 2\\n\"\n"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('0 3\\n1 1\\n2 1\\n2 0') == '3\\n1 2 3 2\\n'\n"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 3\\n1 1\\n2 1\\n2 0\") == \"3\\n1 2 3 2\""
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0 3\\n1 1\\n2 1\\n2 0\") == \"3\\n1 2 3 2\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\\n2\\n3\\n\"\nassert solution(stdin) == \"none\\n\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == [\"1\", \"2\", \"3\"]"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"1\\n2\\n3\\n\"\nassert solution(\"3\\n1 1 2\\n\") == \"none\\n\"\nassert solution(\"4\\n1 2 1 3\\n\") == \"none\\n\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"1\\n2\\n3\\n\"\nassert solution(\"3\\n1 1 2\\n\") == \"none\\n\"\nassert solution(\"4\\n1 2 1 3\\n\") == \"none\\n\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\\n2\\n3\\n\"\nassert solution() == \"none\\nnone\\nnone\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\\n2\\n3\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"none\\n\"\n"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(None) == \"none\"\n\nn = int(stdin.readline())\nnumbers = list(map(int, stdin.readline().split()))"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == '''\n1\n2\n3\nnone\n'''"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"1\\n2\\n3\\n\"\nassert solution(\"3\\n1 1 2\\n\") == \"none\\n\"\nassert solution(\"4\\n1 2 1 3\\n\") == \"none\\n\"\n"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == [\"1\", \"2\", \"3\"], \"Incorrect output\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"5\\n\"\n"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1 0 1 2 3 3\") == 5, \"The output is incorrect\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"7\\n2 1 0 1 2 3 3\") == \"5\"\nassert solution(stdin=\"7\\n2 1 0 1 2 3 4\") == \"6\"\nassert solution(stdin=\"7\\n2 1 0 1 2 3 5\") == \"5\"\nassert solution(stdin=\"7\\n2 1 0 1 2 3 6\") == \"6\"\nassert solution(stdin=\"7\\n2 1 0 1 2 3 7\") == \"5\"\nassert solution(stdin=\"7\\n2 1 0 1 2 3 8\") == \"6\"\nassert solution(stdin=\"7\\n2 1 0 1 2 3 9\") == \"5\"\nassert solution(stdin=\"7\\n2 1 0 1 2 3 10\") == \"6\"\n"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\n2 1 0 1 2 3 3\") == \"5\", \"Sample Output:5\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\n2 1 0 1 2 3 3\") == \"5\\ndef solution(stdin: str) -> str:    \\n    return str(abs(pebbles[0]-pebbles[1]))\\n\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 1 0 1 2 3 3\") == \"5\\n\"\nassert solution(\"7\\n2 1 0 1 2 3 3\") == \"5\\n\"\nassert solution(\"10\\n2 1 0 1 2 3 3\") == \"5\\n\"\nassert solution(\"15\\n2 1 0 1 2 3 3\") == \"5\\n\"\nassert solution(\"20\\n2 1 0 1 2 3 3\") == \"5\\n\"\nassert solution(\"25\\n2 1 0 1 2 3 3\") == \"5\\n\"\n"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    7\n    2 1 0 1 2 3 3\n    \"\"\"\n) == \"5\\n\"\n\nassert solution(\n    \"\"\"\n    6\n    1 0 2 2 1 0 2\n    \"\"\"\n) == \"5\\n\"\n\nassert solution(\n    \"\"\"\n    5\n    1 1 0 0 1 1\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    1 1 1 1 1 1\n    \"\"\"\n) == \"5\\n\"\n\nassert solution(\n    \"\"\"\n    3\n    1 1 1 1 1 1\n    2\n    \"\"\"\n) == \"4\\n\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1 0 1 2 3 3\") == \"5\\n\"\n"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n2 1 0 1 2 3 3\") == \"5\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n2 1 0 1 2 3 3\") == 5, \"Test failed for solution 5.\""
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"4\\n5\\n-1\\n\"\nassert solution() == \"3\\n3\\n4\\n\"\nassert solution() == \"4\\n2\\n-1\\n\"\nassert solution() == \"5\\n3\\n-1\\n\""
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n    5 6\n#####\n"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\n#####\\n#_###\\n#_M.#\\n#__.#\\n#####\") == \"0 4 5 6 -1\\n4 5 6 7 -1\\n4 4 4 3 -1\\n1 1 0 1 -1\\n3 1 2 2 -1\\n-1 -1 -1 -1 -1\"\nassert solution(\"5 6\\n#####\\n#_###\\n#_M.#\\n#__.#\\n#####\") == \"-1 -1 -1 -1 -1\"\nassert solution(\"5 6\\n#####\\n#_###\\n#_M.#\\n#__.#\\n#####\") == \"-1 -1 -1 -1 -1\"\nassert solution(\"5 6\\n#####\\n#_###\\n#_M.#\\n#__.#\\n#####\") == \"-1 -1 -1 -1 -1\"\nassert solution(\"5 6\\n#####\\n#_###\\n#_M.#\\n#__.#\\n#####\") == \"-1 -1 -1 -1 -1\"\nassert solution(\"5 6\\n#####\\n#_###\\n#_M.#\\n#__.#\\n#####\") == \"-1 -1 -1 -1 -1\"\nassert solution(\"5 6\\n#####\\n#_###\\n#_M.#\\n#__.#\\n#####\") == \"-1 -1 -1 -1 -1\"\nassert solution(\"5 6\\n#####\\n#_###\\n#_M.#\\n#__.#\\n#####\") == \"-1 -1 -1 -1 -1\"\nassert solution(\"5 6\\n#####\\n#_###\\n#_M.#\\n#__.#\\n#####\") == \"-1 -1 -1 -1 -1\"\nassert solution(\"5 6\\n#####\\n#_###\\n#_M.#\\n#__.#\\n#####\") == \"-1 -1 -1 -1 -1\"\nassert solution(\"5 6\\n#####\\n#_###\\n#_M.#\\n#__.#\\n#####\") == \"-1 -1 -1 -1 -1\"\nassert solution(\"5 6\\n#####\\n#_###\\n#_M.#\\n#__.#\\n#####\") == \"-1 -1 -1 -1 -1\"\nassert solution(\"5 6\\n#####\\n#_###\\n#_M.#\\n#__.#\\n#####\") == \"-1 -1 -1 -1 -1\"\nassert solution(\"5 6\\n#####\\n#_###\\n#_M.#\\n#__.#\\n#####\") == \"-1 -1 -1 -1 -1\"\nassert solution(\"5 6\\n#####\\n#_###\\n#_M.#\\n#__.#\\n#####\") == \"-1 -1 -1 -1 -1\"\nassert solution(\"5 6\\n#####\\n#_###\\n#_M.#\\n#__.#\\n#####\") == \"-1 -1 -1 -1 -1\"\nassert solution(\"5 6\\n#####\\n#_###\\n#_M.#\\n#__.#\\n#####\") == \"-1 -1 -1 -1 -1\"\nassert solution(\"5 6\\n#####\\n#_###\\n#_M.#\\n#__.#\\n#####\") == \"-1 -1 -1 -1 -1\"\nassert solution(\"5 6\\n#####\\n#_###\\n#_M.#\\n#__.#\\n#####\") == \"-1 -1 -1 -1 -1\"\nassert solution(\"5 6\\n#####\\n#_###\\n#_M.#\\n#__.#\\n#####\") == \"-1 -1 -1 -1 -1\"\nassert solution(\"5 6\\n#####\\n#_###\\n#_M.#\\n#__.#\\n#####\") == \"-1 -1 -1 -1 -1\"\nassert solution(\"5 6\\n#####\\n#_###\\n#_M.#\\n#__.#\\n#####\") == \"-1 -1 -1 -1 -1\"\nassert solution(\"5 6\\n#####\\n#_###\\n#_M.#\\n#__.#\\n#####\") == \"-1 -1 -1 -1 -1\"\nassert solution(\"5 6\\n#####\\n#_###\\n#_M.#\\n#__.#\\n#####\") == \"-1 -1 -1 -1 -1\"\nassert solution(\"5 6\\n#####\\"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n\") == \"4 5 6 4 -1\\n4 4 -1 -1 -1\\n4 1 0 1 -1\\n4 3 1 2 -1\\n-1 -1 -1 -1 -1\\n\"\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n\") == \"4 5 6 4 -1\\n4 4 -1 -1 -1\\n4 1 0 1 -1\\n4 3 1 2 -1\\n-1 -1 -1 -1 -1\\n\"\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n\") == \"-1 -1 -1 -1 -1\\n\"\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n\") == \"-1 -1 -1 -1 -1\\n\""
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\n#####\\n#_###\\n#_M.#\\n#__.#\\n#####\") == \"2 2 2 2 2\\n2 4 5 6 2\\n2 4 -1 -1 -1\\n2 1 0 1 -1\\n2 3 1 2 -1\\n-1 -1 -1 -1 -1\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\\n11 12 13 14 15 16 17 18 19 20\\n12 13 14 15 16 17 18 19 20 21\\n13 14 15 16 17 18 19 20 21 22\\n14 15 16 17 18 19 20 21 22 23\\n15 16 17 18 19 20 21 22 23 24\\n16 17 18 19 20 21 22 23 24 25\\n17 18 19 20 21 22 23 24 25 26\\n18 19 20 21 22 23 24 25 26 27\\n19 20 21 22 23 24 25 26 27 28\\n20 21 22 23 24 25 26 27 28 29\\n21 22 23 24 25 26 27 28 29 30\\n22 23 24 25 26 27 28 29 30 31\\n23 24 25 26 27 28 29 30 31 32\\n24 25 26 27 28 29 30 31 32 33\\n25 26 27 28 29 30 31 32 33 34\\n26 27 28 29 30 31 32 33 34 35\\n27 28 29 30 31 32 33 34 35 36\\n28 29 30 31 32 33 34 35 36 37\\n29 30 31 32 33 34 35 36 37 38\\n30 31 32 33 34 35 36 37 38 39\\n31 32 33 34 35 36 37 38 39 40\\n32 33 34 35 36 37 38 39 40 41\\n33 34 35 36 37 38 39 40 41 42\\n34 35 36 37 38 39 40 41 42 43\\n35 36 37 38 39 40 41 42 43 44\\n36 37 38 39 40 41 42 43 44 45\\n37 38 39 40 41 42 43 44 45 46\\n38 39 40 41 42 43 44 45 46 47\\n39 40 41 42 43 44 45 46 47 48\\n40 41 "
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n\") == '-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1'\n"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n#####\\n#_###\\n#_M.#\\n#__.#\\n#####\\n\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\\n\"\nassert solution(\"5 6\\n#####\\n_M.#\\n#_###\\n#...#\\n#####\\n\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\\n\"\nassert solution(\"5 6\\n#####\\n_M.#\\n_###\\n#...#\\n#####\\n\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\\n\"\nassert solution(\"5 6\\n#####\\n_M.#\\n_###\\n#...#\\n#...#\\n#####\\n\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\\n\"\nassert solution(\"5 6\\n#####\\n_M.#\\n_###\\n#...#\\n#...#\\n_M.#\\n#####\\n\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\\n\"\nassert solution(\"5 6\\n#####\\n_M.#\\n_###\\n#...#\\n#...#\\n#_M.#\\n#####\\n\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\\n\"\n"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\""
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"5 6\n#####\n"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n\")) == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\" == expected, f\"Expected: {expected}\\nGot: {solution(input('5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n'))}\")"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == 6, \"Your solution is incorrect.\""
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == \"6\"\n"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == \"6\"\nassert solution(\"5 6 2\\n2\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == \"impossible\""
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '6'"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n\") == \"6\\n\"\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n5\\n\") == \"impossible\\n\""
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == 6, \"Error: Test case 1 is incorrect\"\n\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n5 5 5\") == 1, \"Error: Test case 2 is incorrect\"\n\nassert solution(\"5 5 5\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == 1, \"Error: Test case 3 is incorrect\"\n\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n4 4 4\") == 1, \"Error: Test case 4 is incorrect\"\n\nassert solution(\"1 2 1\\n1 3 1\\n2 4 4\\n3 4 3\") == 0, \"Error: Test case 5 is incorrect\"\n\nassert solution(\"1 1 1\\n1 2 1\\n2 3 2\\n3 4 3\\n4 5 4\\n5 6 5\") == 0, \"Error: Test case 6 is incorrect\""
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == \"6\"\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n4 5 5\\n5 6 6\") == \"impossible\"\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n4 5 5\\n5 6 6\\n7 8 9\\n8 9 9\") == \"impossible\""
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == 6\nprint(\"All test cases pass\")"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == 6\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n4 5 2\\n5 3 2\\n5 4 2\\n6 5 1\\n7 6 1\\n8 7 1\\n9 8 1\\n10 9 1\\n11 10 1\\n12 11 1\\n13 12 1\\n14 13 1\\n15 14 1\\n16 15 1\\n17 16 1\\n18 17 1\\n19 18 1\\n20 19 1\\n21 20 1\\n22 21 1\\n23 22 1\\n24 23 1\\n25 24 1\\n26 25 1\\n27 26 1\\n28 27 1\\n29 28 1\\n30 29 1\\n31 30 1\\n32 31 1\\n33 32 1\\n34 33 1\\n35 34 1\\n36 35 1\\n37 36 1\\n38 37 1\\n39 38 1\\n40 39 1\\n41 40 1\\n42 41 1\\n43 42 1\\n44 43 1\\n45 44 1\\n46 45 1\\n47 46 1\\n48 47 1\\n49 48 1\\n50 49 1\\n51 50 1\\n52 51 1\\n53 52 1\\n54 53 1\\n55 54 1\\n56 55 1\\n57 56 1\\n58 57 1\\n59 58 1\\n60 59 1\\n61 60 1\\n62 61 1\\n63 62 1\\n64 63 1\\n65 64 1\\n66 65 1\\n67 66 1\\n68 67 1\\n69 68 1\\n70 69 1\\n71 70 1\\n72 71 1\\n73 72 1\\n74 73 1\\n75 74 1\\n76 75 1\\n77 76 1\\n78 77 1\\n79 78 1\\n80 79 1\\n81 80 1\\n82 81 1\\n83 82 1\\n84 83 1\\n85 84 1\\n86 85 1\\n87 86 1\\n88 87 1\\n89 88 1\\n90 89 1\\n91 90 1\\n92 91 1\\n93 92 1\\n94 93 1\\n95 94 1\\n96 95 1\\n97 96 1\\n98 97 1\\n99 98 1\\n100 99 1\\n101 100 1\\n102 101 1\\n103 102 1\\n104 103 1\\n1"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 6"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\\n\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 4, 2, 1) == \"01001\"\nprint(\"All tests passed!\")\n\nHere's the Python code to solve the problem:"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"01001\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 4, 2, 1) == \"01001\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '01001'"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\"\n"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"01001\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\"\nassert solution(\"4 2 3 1\") == \"01001\"\nassert solution(\"2 4 2 3\") == \"01001\"\nassert solution(\"1 2 4 3\") == \"01001\"\nassert solution(\"2 2 2 2\") == \"01001\"\nassert solution(\"1 1 1 1\") == \"01001\"\nassert solution(\"0 0 0 0\") == \"01001\"\nassert solution(\"0 0 0 0\") == \"impossible\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 4, 2, 1) == \"01001\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"possible\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"possible\\n<1\\n^2\\n<2\\n^3\\n<3\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\n"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n\"\n\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n\"\n\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n\"\n\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n\"\n\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n\"\n\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n\"\n\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n\"\n\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n\"\n\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n\"\n\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n\"\n\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n\"\n\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n\"\n\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n\"\n\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"possible\\n<1\\n^2\\n<2\\n^3\\n<3\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n\"\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\n"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n\"\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n\"\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n\"\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n\"\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"impossible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == \"2.0\\n\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3') == '2.0'"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('0 0 1\\n0 1 1\\n2 0 3\\n2 1 3') == 2.0\n"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == \"2.0\"\nassert solution(\"0 200 1\\n0 100 3\\n2 0 3\\n2 1 3\") == \"2.0\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\") == \"1.0\"\nassert solution(\"0 0 0\\n1 1 1\\n2 2 2\\n3 3 3\") == \"3.0\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == 2.0"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3') == 2.0, \"Test case 1 failed.\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt').read()) == '2.0\\n'"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    4\n    0 0 1\n    0 1 1\n    2 0 3\n    2 1 3\n    \"\"\"\n) == \"2.0\"\n\nassert solution(\n    \"\"\"\n    4\n    0 0 1\n    0 1 1\n    2 0 3\n    2 1 3\n    3 0 0\n    3 1 0\n    \"\"\"\n) == \"3.0\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == \"2.0\"\n"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\\n\"\n"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"4\\n\"\n"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == 4\nassert solution(\"6\\n1 2 3 4 5 6\") == 3\nassert solution(\"6\\n1 2 3 4 5\") == 3\nassert solution(\"4\\n1 2 3\") == 2\nassert solution(\"6\\n1 2 3 4\") == 2\nassert solution(\"4\\n1 2\") == 1\nassert solution(\"4\\n1\") == 1\n"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"4\", \"Expected output: 4, actual output: \" + str(solution(input()))\n"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"4\\n\", \"Incorrect output\"\n"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == output, f\"Output: {output}, Expected output: {output}\"\nfor test_case in tests:\n    input, output = test_case\n    assert solution(stdin=input) == output, f\"Output: {output}, Expected output: {output}\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == \"4\", \"Luka must delete the second, fourth, sixth and seventh columns.\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4\\n\"\n"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"4\", \"Test failed\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\"\n"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input(\"Enter the length of Ellen's lawn: \")) == 2, \"The chain length should be 2.\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\\n2\"\nassert solution(\"4\\n-10 10\\n-10 0\") == \"2\\n2\"\nassert solution(\"4\\n-10000 10000\\n-10000 10000\") == \"2\\n10000\"\nassert solution(\"4\\n-10000 10000\\n-10000 10000\") == \"2\\n10000\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"-10 0\\n-10 10\") == \"2\"\nassert solution(\"10 0\\n10 10\") == \"2\"\nassert solution(\"-10 10\\n-10 0\") == \"2\"\nassert solution(\"10 10\\n10 0\") == \"2\"\n"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\\n\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\\n\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"-10 0\\n-10 10\") == \"2\"\nassert solution(\"-10 0\\n-10 10\\n-10 20\") == \"4\"\nassert solution(\"-10 0\\n-10 10\\n-10 20\\n-10 30\") == \"6\"\nassert solution(\"-10 0\\n-10 10\\n-10 20\\n-10 30\\n-10 40\") == \"8\"\nassert solution(\"-10 0\\n-10 10\\n-10 20\\n-10 30\\n-10 40\\n-10 50\") == \"10\"\nassert solution(\"-10 0\\n-10 10\\n-10 20\\n-10 30\\n-10 40\\n-10 50\\n-10 60\") == \"12\"\n"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\\n2\"\n\nassert solution(\"4\\n-50 50\") == \"2\\n20\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 2\n"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"0\""
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 5\\n\") == \"0\\n\"\nassert solution(\"10 10\\n\") == \"10\\n\"\nassert solution(\"2 10\\n\") == \"10\\n\"\nassert solution(\"3 10\\n\") == \"10\\n\"\nassert solution(\"4 10\\n\") == \"10\\n\"\nassert solution(\"5 10\\n\") == \"10\\n\"\nassert solution(\"6 10\\n\") == \"10\\n\"\nassert solution(\"7 10\\n\") == \"10\\n\"\nassert solution(\"8 10\\n\") == \"10\\n\"\nassert solution(\"9 10\\n\") == \"10\\n\"\nassert solution(\"10 10\\n\") == \"10\\n\"\nassert solution(\"11 10\\n\") == \"10\\n\"\nassert solution(\"12 10\\n\") == \"10\\n\"\nassert solution(\"13 10\\n\") == \"10\\n\"\nassert solution(\"14 10\\n\") == \"10\\n\"\nassert solution(\"15 10\\n\") == \"10\\n\"\nassert solution(\"16 10\\n\") == \"10\\n\"\nassert solution(\"17 10\\n\") == \"10\\n\"\nassert solution(\"18 10\\n\") == \"10\\n\"\nassert solution(\"19 10\\n\") == \"10\\n\"\nassert solution(\"20 10\\n\") == \"10\\n\"\nassert solution(\"21 10\\n\") == \"10\\n\"\nassert solution(\"22 10\\n\") == \"10\\n\"\nassert solution(\"23 10\\n\") == \"10\\n\"\nassert solution(\"24 10\\n\") == \"10\\n\"\nassert solution(\"25 10\\n\") == \"10\\n\"\nassert solution(\"26 10\\n\") == \"10\\n\"\nassert solution(\"27 10\\n\") == \"10\\n\"\nassert solution(\"28 10\\n\") == \"10\\n\"\nassert solution(\"29 10\\n\") == \"10\\n\"\nassert solution(\"30 10\\n\") == \"10\\n\"\nassert solution(\"31 10\\n\") == \"10\\n\"\nassert solution(\"32 10\\n\") == \"10\\n\"\nassert solution(\"33 10\\n\") == \"10\\n\"\nassert solution(\"34 10\\n\") == \"10\\n\"\nassert solution(\"35 10\\n\") == \"10\\n\"\nassert solution(\"36 10\\n\") == \"10\\n\"\nassert solution(\"37 10\\n\") == \"10\\n\"\nassert solution(\"38 10\\n\") == \"10\\n\"\nassert solution(\"39 10\\n\") == \"10\\n\"\nassert solution(\"40 10\\n\") == \"10\\n\"\nassert solution(\"41 10\\n\") == \"10\\n\"\nassert solution(\"42 10\\n\") == \"10\\n\"\nassert solution(\"43 10\\n\") == \"10\\n\"\nassert solution(\"44 10\\n\") == \"10\\n\"\nassert solution(\"45 10\\n\") == \"10\\n\"\nassert solution(\"46 10\\n\") == \"10\\n\"\nassert solution(\"47 10\\n\") == \"10\\n\"\nassert solution(\"48 10\\n\") == \"10\\n\"\nassert solution(\"49 10\\n\") == \"10\\n\"\nassert solution(\"50 10\\n\") == \"10\\n\"\nassert solution(\"51 10\\n\") == \"10\\n\"\nassert solution(\"52 10\\n\") == \"10\\n\"\nassert solution(\"53 10\\n\") == \"10\\n\"\nassert solution(\"54 10\\n\")"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 5\") == \"0\\n\"\nassert solution(\"2 2\") == \"1\\n\"\nassert solution(\"3 3\") == \"1\\n\"\nassert solution(\"4 4\") == \"2\\n\"\nassert solution(\"5 5\") == \"3\\n\""
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"0\"\n"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(b\"\\n\") == \"0\\n\"\n"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 5') == '0'\n"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 5\\n\") == \"0\\n\"\nassert solution(\"1 10\\n\") == \"1\\n\"\nassert solution(\"2 2\\n\") == \"0\\n\"\nassert solution(\"2 4\\n\") == \"2\\n\"\nassert solution(\"5 5\\n\") == \"5\\n\"\nassert solution(\"5 7\\n\") == \"1\\n\"\nassert solution(\"10 10\\n\") == \"10\\n\"\nassert solution(\"10 11\\n\") == \"9\\n\"\nassert solution(\"50 50\\n\") == \"50\\n\"\nassert solution(\"50 51\\n\") == \"51\\n\"\nassert solution(\"100 100\\n\") == \"100\\n\"\n"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 5') == '0'\n"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5\") == \"0\"\nassert solution(\"10 100\") == \"10\"\nassert solution(\"2 3\") == \"3\"\nassert solution(\"20 10\") == \"10\"\nassert solution(\"30 100\") == \"20\"\nassert solution(\"40 20\") == \"10\"\nassert solution(\"1 10\") == \"10\"\nassert solution(\"5 10\") == \"10\"\nassert solution(\"100 1000\") == \"100\"\nassert solution(\"5 100\") == \"0\"\nassert solution(\"500 1000\") == \"20\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == [\"0 0\", \"1 1\"]\n"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0') == '0 0\\n1 1'"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n    2 2\n    1 0\n    0 1\n    3 3\n    1 0 0\n    0 1 0\n    0 0 1\n''') == '''\n    0 0\n    1 1\n'''\n\nassert solution('''\n    2 2\n    1 0\n    0 1\n    3 3\n    1 0 0\n    0 1 0\n    0 0 1\n''') == '''\n    0 0\n    1 1\n'''"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1') == '0 0\\n1 1\\n'\n"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\") == \"0 0\\n1 1\\n\"\n\nfrom typing import List\n"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1') == '0 0\\n1 1'"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\\n\"\nassert solution(\"2 2\\n1 1\\n1 0\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\\n\"\nassert solution(\"2 2\\n1 0\\n1 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\\n\"\nassert solution(\"2 2\\n1 1\\n1 0\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\\n\"\nassert solution(\"2 2\\n1 0\\n1 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\\n\"\nassert solution(\"2 2\\n1 1\\n1 0\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\\n\"\nassert solution(\"2 2\\n1 0\\n1 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\\n\"\nassert solution(\"2 2\\n1 1\\n1 0\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\\n\"\nassert solution(\"2 2\\n1 0\\n1 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\\n\"\nassert solution(\"2 2\\n1 1\\n1 0\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\\n\"\nassert solution(\"2 2\\n1 0\\n1 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\\n\"\nassert solution(\"2 2\\n1 1\\n1 0\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\\n\"\nassert solution(\"2 2\\n1 0\\n1 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\\n\"\nassert solution(\"2 2\\n1 1\\n1 0\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\\n\"\nassert solution(\"2 2\\n1 0\\n1 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\\n\"\nassert solution(\"2 2\\n1 1\\n1 0\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\\n\"\nassert solution(\"2 2\\n1 0\\n1 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\\n\"\nassert solution(\"2 2\\n1 1\\n1 0\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\\n\"\n"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\"\n"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\""
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 2 0.950000\\n0.700000 50\\n') == '44.975'\n\nimport math"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"44.975\", \"The expected value of the total severity of fixed bugs, provided that you work in a way which maximizes this quantity, is not correct.\""
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\\n\") == \"44.975\"\nassert solution(\"1 2 0.950000\\n0.700000 50\\n\") == \"44.975\"\nassert solution(\"1 2 0.950000\\n0.700000 50\\n\") == \"44.975\"\nassert solution(\"1 2 0.950000\\n0.700000 50\\n\") == \"44.975\"\nassert solution(\"1 2 0.950000\\n0.700000 50\\n\") == \"44.975\"\nassert solution(\"1 2 0.950000\\n0.700000 50\\n\") == \"44.975\"\nassert solution(\"1 2 0.950000\\n0.700000 50\\n\") == \"44.975\""
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\n"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\\n\"\n"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '44.975', 'The expected output does not match the actual output.'"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"44.975\", \"Test case 1 failed\""
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\n"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\nassert solution(\"1 3 0.800000\\n0.700000 50\") == \"38.800\"\nassert solution(\"1 2 0.950000\\n0.800000 50\") == \"44.950\"\nassert solution(\"1 3 0.800000\\n0.800000 50\") == \"38.800\"\nassert solution(\"1 2 0.950000\\n0.850000 50\") == \"45.000\"\nassert solution(\"1 3 0.800000\\n0.850000 50\") == \"38.900\"\nassert solution(\"1 2 0.950000\\n0.900000 50\") == \"45.000\"\nassert solution(\"1 3 0.800000\\n0.900000 50\") == \"38.900\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n1\\n\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n1\\n\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n1\\n\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n1\\n1\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output\nfor i in range(N):\n    x[i], y[i] = map(int, input().split())\n    if x[i] > x[i + 1]:\n        print(impossible)\n        return\n    if y[i] > y[i + 1]:\n        print(impossible)\n        return"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n1\"\nassert solution(\"3 1 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n1\"\nassert solution(\"3 1 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n2\") == \"IMPOSSIBLE\"\nassert solution(\"3 1 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n3\") == \"2\\n1\"\nassert solution(\"3 1 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n4\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n4 1\\n\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == '2\\n'\nassert solution('3 4 1\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == 'IMPOSSIBLE\\n'\nassert solution('1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n') == 'IMPOSSIBLE\\n'\nassert solution('2 1\\n1 1\\n1 1\\n1 1\\n1 1\\n') == 'IMPOSSIBLE\\n'\nassert solution('3 1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n') == 'IMPOSSIBLE\\n'"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, \"Input and output don't match.\"\n"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\\n\""
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\\n\") == 4.0, \"Test case 1 failed\"\n\nassert solution(\"5 5\\n0.0 0.0\\n10.0 10.0\\n15.0 15.0\\n20.0 20.0\\n25.0 25.0\\n30.0 30.0\\n\") == 150.0, \"Test case 2 failed\""
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0') == 4.0\n"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0') == '4.0'\n"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == \"4.0\""
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == \"4.0\\n\"\n"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == \"4.0\\n\""
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 4.0, \"Test failed for solution 1\""
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == \"4.0\"\nassert solution(\"2 1\") == \"0\"\nassert solution(\"1 0\") == \"0\"\nassert solution(\"3 2\") == \"0\"\nassert solution(\"3 4\") == \"0\"\nassert solution(\"3 5\") == \"0\""
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == \"4.0\"\nassert solution(\"5 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == \"6.0\"\nassert solution(\"2 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == \"10.0\""
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == \"4.0\""
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n4\n220 29\n195 20\n200 9\n180 30\n''') == '18000'\nassert solution('''\n4\n220 29\n195 20\n200 9\n180 30\n''') == '18000'\nassert solution('''\n4\n220 29\n195 20\n200 9\n180 30\n''') == '18000'\nassert solution('''\n4\n220 29\n195 20\n200 9\n180 30\n''') == '18000'\nassert solution('''\n4\n220 29\n195 20\n200 9\n180 30\n''') == '18000'\nassert solution('''\n4\n220 29\n195 20\n200 9\n180 30\n''') == '18000'"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\") == \"18000\\n\"\nassert solution(\"10\\n100 50\") == \"10000\\n\"\nassert solution(\"10\\n100 50\\n150 200\") == \"20000\\n\"\nassert solution(\"10\\n100 50\\n150 200\\n200 100\") == \"20000\\n\"\n"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\") == \"18000\\n\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"18000\\n\""
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\") == \"18000\""
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output, f\"The function should return {sample_output} but it returned {solution(sample_input)}\""
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n220 29\\n195 20\\n200 9\\n180 30') == '18000\\n'\nassert solution('4\\n220 29\\n195 20\\n200 9\\n180 30\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 150\\n300 15"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"18000\"\n"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\") == \"18000\""
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\") == \"18000\"\n"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\\ndef solution(stdin: str) -> str:\\npass\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == 28\n\nfrom typing import List"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\"\n"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\\n\") == \"28\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef test_solution()\\n\\treturn solution(stdin)\\n\\nprint(test_solution())\\n\"\n\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == \"28\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef test_solution()\\n\\treturn solution(stdin)\\n\\nprint(test_solution())\\n\"\n\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nER 8\") == \"28\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef test_solution()\\n\\treturn solution(stdin)\\n\\nprint(test_solution())\\n\"\n\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nER 8\") == \"28\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef test_solution()\\n\\treturn solution(stdin)\\n\\nprint(test_solution())\\n\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"BUYSTICKERS\") == \"28\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\\n\") == 28, \"Solution is not correct.\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == 28\nassert solution(\"BUYSTICKERS\\n2\\nSTICKY 2\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\n"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"The solution for the given problem {input()} is incorrect. Expected {output}, but got {solution(input())}\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n5 3 8\n1 1\n2 1\n3 1\n4 2\n5 2\n3 3\n4 3\n5 3\n''') == 'INDV 1\\nINDV 2\\nINDV 4\\nINDV 3\\nINDV 5\\n'"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == sample_output, f\"Test cases failed. Output: {solution(sample_input)}\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"INDV 1\\nINDV 2\\nINDV 4\\nINDV 3\\nINDV 5\\n\", \"Test case 1 failed\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"\"\"\nINDV 1\nINDV 2\nINDV 3\nINDV 4\nINDV 5\n\"\"\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\"\nassert solution(open(\"input.txt\", \"r\")) == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\"\nassert solution(open(\"input.txt\", \"r\")) == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\"\nassert solution(\"2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\\n11 1\\n12 1\\n13 1\\n14 1\\n15 1\\n16 1\\n17 1\\n18 1\\n19 1\\n20 1\\n21 1\\n22 1\\n23 1\\n24 1\\n25 1\\n26 1\\n27 1\\n28 1\\n29 1\\n30 1\\n31 1\\n32 1\\n33 1\\n34 1\\n35 1\\n36 1\\n37 1\\n38 1\\n39 1\\n40 1\\n41 1\\n42 1\\n43 1\\n44 1\\n45 1\\n46 1\\n47 1\\n48 1\\n49 1\\n50 1\\n51 1\\n52 1\\n53 1\\n54 1\\n55 1\\n56 1\\n57 1\\n58 1\\n59 1\\n60 1\\n61 1\\n62 1\\n63 1\\n64 1\\n65 1\\n66 1\\n67 1\\n68 1\\n69 1\\n70 1\\n71 1\\n72 1\\n73 1\\n74 1\\n75 1\\n76 1\\n77 1\\n78 1\\n79 1\\n80 1\\n81 1\\n82 1\\n83 1\\n84 1\\n85 1\\n86 1\\n87 1\\n88 1\\n89 1\\n90 1\\n91 1\\n92 1\\n93 1\\n94 1\\n95 1\\n96 1\\n97 1\\n98 1\\n99 1\\n100 1\\n101 1\\n102 1\\n103 1\\n104 1\\n105 1\\n106 1\\n107 1\\n108 1\\n109 1\\n110 1\\n111 1\\n112 1\\n113 1\\n114 1\\n115 1\\n116 1\\n117 1\\n118 1\\n119 1\\n120 1\\n121 1\\n122 1\\n123 1\\n124 1\\n125 1\\n126 1\\n127 1\\n128 1\\n129 1\\n130 1\\n131 1\\n132 1\\n133 1\\n134 1\\n135 1\\n136 1\\n137 1\\n138 1\\n139 1\\n140 1\\n141 1\\n142 1\\n143 1\\n144 1\\n145 1\\n146 1\\n147 1\\n148 1\\"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2.4142135624\\n\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n10 1\\n1\\n0\\n10\\n10\\n') == '2.4142135624'"
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n10 1\\n1\\n0\\n10\\n10\\n') == 2.4142135624"
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10 1\\n1\\n0\\n10\\n10\\n') == '2.4142135624'  # correct answer\nprint('All tests passed!')"
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(solution_input) == solution_output, f\"Solution is incorrect. Expected: {solution_output}, Received: {solution(solution_input)}\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2.4142135624\"\n"
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == expected_output, f\"Test failed: got {solution(sample_input)}, expected {expected_output}\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 2.4142135624, \"Incorrect output\"\n"
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_str) == expected_output, \"The function should return the expected output, but instead returned '{}'.\".format(solution(input_str))"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\""
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"15\""
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3') == '15'\nassert solution('2 3 4\\n5 6 7\\n8 9 10\\n11 12 13\\n14 15 16\\n17 18 19\\n20 21 22') == '100'"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\\n') == '15\\n'\nassert solution('4\\n1 1 1\\n1 2 1\\n1 3 1\\n1 4 1\\n') == '24\\n'\nassert solution('10\\n1 2 2 1 1\\n1 3 3 1 1\\n1 4 4 1 1\\n1 5 5 1 1\\n1 6 6 1 1\\n1 7 7 1 1\\n1 8 8 1 1\\n1 9 9 1 1\\n') == '169\\n'\nassert solution('10\\n1 1 1\\n1 2 2\\n1 3 3\\n1 4 4\\n1 5 5\\n1 6 6\\n1 7 7\\n1 8 8\\n1 9 9\\n') == '207\\n'\nassert solution('10\\n1 1 1 1 1 1\\n1 2 2 2 2 2\\n1 3 3 3 3 3\\n1 4 4 4 4 4\\n1 5 5 5 5 5\\n1 6 6 6 6 6\\n1 7 7 7 7 7\\n1 8 8 8 8 8\\n1 9 9 9 9 9\\n') == '1996\\n'\nassert solution('10\\n1 1 1 1 1 1 1\\n1 2 2 2 2 2 2\\n1 3 3 3 3 3 3\\n1 4 4 4 4 4 4\\n1 5 5 5 5 5 5\\n1 6 6 6 6 6 6\\n1 7 7 7 7 7 7\\n1 8 8 8 8 8 8\\n1 9 9 9 9 9 9\\n') == '2052\\n'"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\\n\") == \"15\\n\"\n"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == '15', 'Your solution is incorrect.'"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\nassert solution(\"6\\n1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\\n19 20 21\\n22 23 24\\n25 26 27\\n28 29 30\") == \"124\\n\""
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == 15"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin: str) == \"15\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"15\""
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"....\\n.B.C\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '''..BBC\n..A.C\n....C\n@DDDD\n"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {test_case_number} failed.\"\nfor test_case_number in range(1, 6):\n    stdin, expected_output = f\"Input{test_case_number}.txt\", f\"Output{test_case_number}.txt\"\n    assert solution(stdin) == expected_output, f\"Test case {test_case_number} failed.\""
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"Solution goes here\", \"Your solution is incorrect\""
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    5 5 3 3 4\n    \"\"\"\n) == \"\"\"\n.....\n..BBC\n..A.C\n....C\n@DDDD\n"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Solution: {solution(input())}\\nOutput: {output}\""
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Incorrect output for input 1.\"\n\nassert solution(stdin) == \"....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Incorrect output for input 2.\"\n\nassert solution(stdin) == \"....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Incorrect output for input 3.\"\n\nassert solution(stdin) == \"....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Incorrect output for input 4.\"\n\nassert solution(stdin) == \"....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Incorrect output for input 5.\""
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Test failed for {input()}\\nOutput: {solution(input())}\\nExpected: {output()}\"\n"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n5 5 3 3 4\n''') == '....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 5 3 3 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\nassert solution('5 5 3 2 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\nassert solution('5 5 4 4 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\nassert solution('5 5 1 1 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\nassert solution('5 5 5 5 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n123\") == \"001\\n001\\n001\\n111\\n200\\n123\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n123\\n456\") == \"001\\n001\\n001\\n111\\n200\\n123\\n456\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n123\\n456\\n789\") == \"001\\n001\\n001\\n111\\n200\\n123\\n456\\n789\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n123\\n456\\n789\\n000\") == \"001\\n001\\n001\\n111\\n200\\n123\\n456\\n789\\n000\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n11\") == \"001\\n001\\n001\\n111\\n120\\n200\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n11\") == \"001\\n001\\n001\\n111\\n120\\n200\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n11\") == \"001\\n001\\n001\\n111\\n120\\n200\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n11\") == \"001\\n001\\n001\\n111\\n120\\n200\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n11\") == \"001\\n001\\n001\\n111\\n120\\n200\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n11\") == \"001\\n001\\n001\\n111\\n120\\n200\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n11\") == \"001\\n001\\n001\\n111\\n120\\n200\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\"\nassert solution(\"5 4\\n222\\n333\\n444\\n555\\n666\\n777\\n888\\n999\") == \"002\\n002\\n002\\n112\\n202\\n202\\n302\\n402\\n402\"\nassert solution(\"5 4\\n111\\n222\\n333\\n444\\n555\\n666\\n777\\n888\\n999\") == \"001\\n001\\n001\\n111\\n201\\n201\\n301\\n401\\n401\"\nassert solution(\"5 5\\n999\\n888\\n777\\n666\\n555\\n444\\n333\\n222\\n111\") == \"000\\n000\\n000\\n111\\n222\\n222\\n333\\n444\\n444\"\nassert solution(\"5 4\\n111\\n222\\n333\\n444\\n555\\n666\\n777\\n888\\n999\\n111\\n222\\n333\\n444\\n555\\n666\\n777\\n888\\n999\") == \"000\\n000\\n000\\n111\\n200\\n200\\n300\\n400\\n400\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 3\\n111\\n001\\n000\\n111\\n000') == '001\\n001\\n001\\n111\\n200\\n'\nassert solution('5 2\\n0100\\n0100\\n1010\\n1010') == '0100\\n0100\\n1010\\n1010\\n2000\\n'\nassert solution('5 4\\n011010111\\n101010111\\n010010111\\n010010111\\n101010111') == '010010111\\n010010111\\n101010111\\n101010111\\n200010111\\n'\nassert solution('5 4\\n011010111\\n101010111\\n010010111\\n010010111\\n101010111') == '010010111\\n010010111\\n101010111\\n101010111\\n200010111\\n'"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == expected_output, f\"Test failed: {solution(sample_input)}!= {expected_output}\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r').read()) == '200\\n001\\n001\\n111\\n200\\n'\n"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\"\nassert solution(\"5 4\\n111\\n001\\n000\\n111\\n000\") == \"100\\n001\\n001\\n111\\n000\"\nassert solution(\"5 2\\n111\\n001\\n000\\n111\\n000\") == \"101\\n110\\n111\\n110\"\nassert solution(\"5 5\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 3\\n111\\n001\\n000\\n111\\n000') == ['001', '001', '001', '111', '200']"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\\n\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n111\\n200\\n\") == \"001\\n001\\n001\\n111\\n200\\n\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n111\\n200\\n\") == \"001\\n001\\n001\\n111\\n200\\n\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n111\\n200\\n\") == \"001\\n001\\n001\\n111\\n200\\n\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n111\\n200\\n\") == \"001\\n001\\n001\\n111\\n200\\n\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"101\\n20/1\\n19/2\\n17/3\\n14/4\\n12/5\\n8/6\") == \"impossible\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"19/13\\n11/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"impossible\"\nassert solution(\"19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n10/6\\n7/8\\n4/9\\n1/11\\n\") == \"impossible\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n10/6\\n7/8\\n4/9\\n1/11\\n12/15\\n20/22\\n\") == \"impossible\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\\n\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n3/3\\n7/1\") == \"impossible\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"Impossible\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17') == '19 20\\n17 15 14 13 7 2'"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n1"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/16\") == \"impossible\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/18\") == \"impossible\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/19\") == \"impossible\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"19/13\\n20/7\\n19/7\\n19/15\\n19/17\\n10/7\\n19/17\\n20/13\\n19/2\\n\") == \"impossible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"possible\"\n"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3') == 'possible'\nassert solution('2 3\\n0 0\\n3 2\\n1 2\\n2 2\\n0 1') == 'impossible'\nassert solution('3 1\\n0 0\\n3 2\\n1 2\\n2 2\\n0 1') == 'possible'\nassert solution('1 2\\n0 0\\n3 2\\n1 2\\n2 2\\n0 1') == 'impossible'"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\") == \"possible\"\nassert solution(\"1 2\\n2 1\\n2 3\\n1 3\\n2 2\\n1 1\") == \"impossible\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == \"possible\"\n"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n\") == \"impossible\"\nassert solution(\"4 4\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n\") == \"possible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\") == \"impossible\"\n"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3') == 'possible'\n"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n\") == \"possible\"\nassert solution(\"4 4\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n\") == \"impossible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\") == \"impossible\"\nassert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n4 0 3\") == \"possible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"3 3\n0 0\n0 2\n2 0\n1 2 3\n2 2 2\n3 0 3\"\"\") == \"possible\"\nassert solution(\"\"\"4 3\n0 0\n0 2\n2 0\n1 2 3\n2 2 2\n3 0 3\"\"\") == \"impossible\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(None) == \"4\"\nassert solution(\"4 2\\n2\\n2\") == \"4\"\nassert solution(\"4 2\\n1\\n2\") == \"4\"\nassert solution(\"4 2\\n2\\n1\") == \"4\"\nassert solution(\"4 2\\n1\\n1\") == \"4\"\nassert solution(\"4 2\\n1\\n3\") == \"4\"\nassert solution(\"4 2\\n3\\n3\") == \"4\"\nassert solution(\"4 2\\n3\\n2\") == \"4\"\nassert solution(\"4 2\\n1\\n4\") == \"4\"\nassert solution(\"4 2\\n4\\n4\") == \"4\"\nassert solution(\"4 2\\n4\\n2\") == \"4\"\nassert solution(\"4 2\\n1\\n5\") == \"5\"\nassert solution(\"4 2\\n5\\n5\") == \"5\"\nassert solution(\"4 2\\n5\\n2\") == \"5\"\nassert solution(\"4 2\\n1\\n6\") == \"6\"\nassert solution(\"4 2\\n6\\n6\") == \"6\"\nassert solution(\"4 2\\n6\\n2\") == \"6\"\nassert solution(\"4 2\\n1\\n7\") == \"7\"\nassert solution(\"4 2\\n7\\n7\") == \"7\"\nassert solution(\"4 2\\n7\\n2\") == \"7\"\nassert solution(\"4 2\\n1\\n8\") == \"8\"\nassert solution(\"4 2\\n8\\n8\") == \"8\"\nassert solution(\"4 2\\n8\\n2\") == \"8\"\nassert solution(\"4 2\\n1\\n9\") == \"9\"\nassert solution(\"4 2\\n9\\n9\") == \"9\"\nassert solution(\"4 2\\n9\\n2\") == \"9\"\nassert solution(\"4 2\\n1\\n10\") == \"10\"\nassert solution(\"4 2\\n10\\n10\") == \"10\"\nassert solution(\"4 2\\n10\\n2\") == \"10\"\nassert solution(\"4 2\\n1\\n11\") == \"11\"\nassert solution(\"4 2\\n11\\n11\") == \"11\"\nassert solution(\"4 2\\n11\\n2\") == \"11\"\nassert solution(\"4 2\\n1\\n12\") == \"12\"\nassert solution(\"4 2\\n12\\n12\") == \"12\"\nassert solution(\"4 2\\n12\\n2\") == \"12\"\nassert solution(\"4 2\\n1\\n13\") == \"13\"\nassert solution(\"4 2\\n13\\n13\") == \"13\"\nassert solution(\"4 2\\n13\\n2\") == \"13\"\nassert solution(\"4 2\\n1\\n14\") == \"14\"\nassert solution(\"4 2\\n14\\n14\") == \"14\"\nassert solution(\"4 2\\n14\\n2\") == \"14\"\nassert solution(\"4 2\\n1\\n15\") == \"15\"\nassert solution(\"4 2\\n15\\n15\") == \"15\"\nassert solution(\"4 2\\n15\\n2\") == \"15\"\nassert solution(\"4 2\\n1\\n16\") == \"16\"\nassert solution(\"4 2\\n16\\n16\") == \"16\"\nassert solution(\"4 2\\n16\\n2\") == \"16\"\nassert solution(\"4 2\\n1\\n17\") == \"17\"\nassert solution(\"4 2\\n17\\n17\") == \"17\"\nassert solution(\"4 2\\n17\\n2\") == \"17\"\nassert solution(\"4 2\\n1\\n18\") == \"18\"\nassert solution(\"4 2\\n18\\n18\") == \"18\"\nassert solution(\"4 2\\n18\\n2\") == \"18\"\nassert solution(\"4 2\\n1\\n19\") == \"1"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 4"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n2') == '4\\n'\n\nsolution('4 2') == '4\\n'\n\nsolution('4 2\\n3 4\\n2 2\\n1 3') == '4\\n'"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"4\\n\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 4, \"The maximum number of colleagues that Mia can uniquely identify in the next few days, if she allocates the burger and salad recipients optimally, is not 4.\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n2\\n2\") == 4"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 2\\n2\\n2') == '4'\nassert solution('5 1\\n3\\n2') == '2'\n\nfrom typing import List"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"4\\n\"\n"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\\n\") == \"Mirko\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n1 1\\n1 2\\n1 3') == 'Mirko\\ndef solution(stdin: str) -> str:\\npass'\nassert solution('3\\n1 1\\n1 2\\n2 2') == 'Slavko\\ndef solution(stdin: str) -> str:\\npass'"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 1\\n1 2\\n1 3\\n') == 'Mirko'\nassert solution('1 4\\n2 3\\n3 4\\n') == 'Slavko'"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\") == \"Mirko\"\n"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\\n\") == \"Mirko\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('mirko_and_his_faithful_friend_got_really_bored_one_day.txt', 'r')) == 'Mirko'"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 1\\n1 2\\n1 3\\n') == 'Mirko\\ndef solution(stdin: str) -> str:\\npass'\n"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Your solution is incorrect. \\nExpected output: {output}\\nReceived output: {solution(input())}\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\\n1\") == \"Mirko\"\nassert solution(\"2\\n1 2\\n2 2\\n2 1\\n1 3\\n2 3\\n3 3\") == \"Slavko\"\nassert solution(\"3\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\") == \"Mirko\"\nassert solution(\"4\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\") == \"Slavko\"\n"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2 4\", \"Your solution is incorrect.\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n6\\n34\\n38\") == \"2 4\\n\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n6\\n34\\n38\") == \"2 4\\n\"\n"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(None) == \"Invalid input\"\nassert solution(\"3\") == \"Invalid input\"\nassert solution(\"1 2 3\") == \"Invalid input\"\nassert solution(\"2 2 2 2\") == \"Invalid input\"\nassert solution(\"1 2 2 2 3\") == \"Invalid input\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n6\\n34\\n38\") == \"2 4\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"2 4\", \"Sample Input\"\nassert solution(6) == \"2 4 6\", \"Sample Input\"\nassert solution(34) == \"2 4 6 8\", \"Sample Input\"\nassert solution(38) == \"2 4 6 8 10\", \"Sample Input\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2 4\\n\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2 4\", \"Incorrect Output\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n6\\n34\\n38\") == \"2 4\\n\"\nassert solution(\"4\\n7\\n9\\n11\") == \"1\\n2\\n4\\n8\\n16\\n32\\n64\\n128\\n256\\n\"\nassert solution(\"5\\n8\\n13\\n21\\n34\") == \"1\\n2\\n3\\n4\\n5\\n6\\n8\\n12\\n16\\n24\\n32\\n48\\n64\\n96\\n128\\n256\\n512\\n1024\\n2048\\n4096\\n\"\nassert solution(\"1\\n5\\n10\\n16\\n25\\n40\") == \"1\\n2\\n4\\n8\\n16\\n32\\n64\\n128\\n256\\n512\\n1024\\n2048\\n4096\\n\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 12"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"12\", \"The solution should return '12'\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '12', \"Test failed\"\nprint(\"Test passed\")"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n10000 400000 500000 900000\") == \"12\"\nassert solution(\"5\\n8 10 2 1000000 30556926000\") == \"12\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Sample Input {sample_input} failed. Expected Output {expected_output}, but got {solution(input())}.\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n10000 400000 500000 900000') == '12\\n'\nassert solution('5\\n8 10 2 1000000 30556926000') == '12\\n'"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n10000 400000 500000 900000') == '12\\n'\nassert solution('5\\n8 10 2 1000000 30556926000') == '12\\n'\nassert solution('10\\n10000000000 10000000000 10000000000 10000000000 10000000000 10000000000') == '12\\n'"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input {input()}, expected output {expected_output}\"\n\nN = int(input())\njob_offers = list(map(int, input().split()))\ncookies = [0] * N\ncookies[0] = job_offers[0]\ncookies[1] = job_offers[1]\ncookies[2] = job_offers[2]\ncookies[3] = job_offers[3]\ncookies[4] = job_offers[4]\n\nmax_cookies = 0\nfor i in range(1, N):\n    if cookies[i] - cookies[i-1] >= 100000:\n        max_cookies += 100000\n    elif cookies[i] - cookies[i-1] >= 40000:\n        max_cookies += 40000\n    elif cookies[i] - cookies[i-1] >= 20000:\n        max_cookies += 20000\n    elif cookies[i] - cookies[i-1] >= 10000:\n        max_cookies += 10000\n    elif cookies[i] - cookies[i-1] >= 5000:\n        max_cookies += 5000\n    else:\n        max_cookies += cookies[i] - cookies[i-1]\n\nprint(max_cookies)"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n8 8\n0\n2 4 0\n1 8 0\n8 5 0\n4 3 7 0\n5 2 6 0\n1 6 0\n7 3 0\n''') == 'YES\\n'\n\nfrom typing import List"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 'YES'"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0') == 'YES\\n'"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0') == 'YES'"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"YES\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\"\n"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\"\nassert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\\n\") == \"NO\"\nassert solution(\"4 4\\n0\\n1 2 0\\n0 3 0\\n\") == \"NO\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\"\nassert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\\n8 1 0\\n9 2 0\\n6 3 0\\n4 2 0\") == \"NO\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\"\n"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\\n\"\nassert solution(\"5 2\\n1 2 3 4 5 6\") == \"Impossible\\n\"\nassert solution(\"6 1\\n1 2 3 4 5 6\") == \"2 3 4 5 6\\n\"\nassert solution(\"6 2\\n1 2 3 4 5 6\\n\") == \"Impossible\\n\"\n"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\"\n"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6 2\\n3 4 5 6 1 2') == '5 6 1 2 3 4'"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"5 6 1 2 3 4\\n\"\n"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\\n\") == \"5 6 1 2 3 4\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '5 6 1 2 3 4', \"Test case 1 failed\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\\n\") == \"5 6 1 2 3 4\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == output, f\"The solution is incorrect. Expected {output}, but got {solution(input)}.\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '''\n5 6 1 2 3 4\n'''\n"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"Impossible\"\n"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\"\nassert solution(\"1 10 2 10\") == \"IMPOSSIBLE\"\nassert solution(\"3 4 100 10\") == \"20020\"\nassert solution(\"5 3 8 4\") == \"IMPOSSIBLE\"\nassert solution(\"1 10 2 100\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='5 2 8 4') == '20512'\nassert solution(stdin='10 2 8 4') == '208'\nassert solution(stdin='15 2 8 4') == '208'\nassert solution(stdin='20 2 8 4') == '208'\nassert solution(stdin='25 2 8 4') == '208'\nassert solution(stdin='30 2 8 4') == '208'\nassert solution(stdin='35 2 8 4') == '208'\nassert solution(stdin='40 2 8 4') == '208'\nassert solution(stdin='45 2 8 4') == '208'\nassert solution(stdin='50 2 8 4') == '208'\nassert solution(stdin='55 2 8 4') == '208'\nassert solution(stdin='60 2 8 4') == '208'\nassert solution(stdin='65 2 8 4') == '208'\nassert solution(stdin='70 2 8 4') == '208'\nassert solution(stdin='75 2 8 4') == '208'\nassert solution(stdin='80 2 8 4') == '208'\nassert solution(stdin='85 2 8 4') == '208'\nassert solution(stdin='90 2 8 4') == '208'\nassert solution(stdin='95 2 8 4') == '208'\nassert solution(stdin='100 2 8 4') == '208'\nassert solution(stdin='105 2 8 4') == '208'\nassert solution(stdin='110 2 8 4') == '208'\nassert solution(stdin='115 2 8 4') == '208'\nassert solution(stdin='120 2 8 4') == '208'\nassert solution(stdin='125 2 8 4') == '208'\nassert solution(stdin='130 2 8 4') == '208'\nassert solution(stdin='135 2 8 4') == '208'\nassert solution(stdin='140 2 8 4') == '208'\nassert solution(stdin='145 2 8 4') == '208'\nassert solution(stdin='150 2 8 4') == '208'\nassert solution(stdin='155 2 8 4') == '208'\nassert solution(stdin='160 2 8 4') == '208'\nassert solution(stdin='165 2 8 4') == '208'\nassert solution(stdin='170 2 8 4') == '208'\nassert solution(stdin='175 2 8 4') == '208'\nassert solution(stdin='180 2 8 4') == '208'\nassert solution(stdin='185 2 8 4') == '208'\nassert solution(stdin='190 2 8 4') == '208'\nassert solution(stdin='195 2 8 4') == '208'\nassert solution(stdin='200 2 8 4') == '208'\nassert solution(stdin='205 2 8 4') == '208'\nassert solution(stdin='210 2 8 4') == '208'\nassert solution(stdin='215 2 8 4') == '208'\nassert solution(stdin='220 2 8 4') == '208'\nassert solution(stdin='225 2 8 4') == '208'\nassert solution(stdin='230 2 8 4') == '208'\nassert solution(stdin='235 2 8 4') == '208'\nassert solution(stdin='240 2"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\"\nassert solution(\"10 0 10 5\") == \"10050\"\nassert solution(\"3 5 6 9\") == \"30609\"\nassert solution(\"4 4 4 4\") == \"44444\"\nassert solution(\"5 5 5 5\") == \"55555\"\nassert solution(\"6 6 6 6\") == \"66666\"\nassert solution(\"7 7 7 7\") == \"77777\"\nassert solution(\"8 8 8 8\") == \"88888\"\nassert solution(\"9 9 9 9\") == \"99999\"\nassert solution(\"10 10 10 10\") == \"101010\"\nassert solution(\"11 11 11 11\") == \"111111\"\nassert solution(\"12 12 12 12\") == \"121212\"\nassert solution(\"13 13 13 13\") == \"131313\"\nassert solution(\"14 14 14 14\") == \"141414\"\nassert solution(\"15 15 15 15\") == \"151515\"\nassert solution(\"16 16 16 16\") == \"161616\"\nassert solution(\"17 17 17 17\") == \"171717\"\nassert solution(\"18 18 18 18\") == \"181818\"\nassert solution(\"19 19 19 19\") == \"191919\"\nassert solution(\"20 20 20 20\") == \"202020\"\nassert solution(\"21 21 21 21\") == \"212121\"\nassert solution(\"22 22 22 22\") == \"222222\"\nassert solution(\"23 23 23 23\") == \"232323\"\nassert solution(\"24 24 24 24\") == \"242424\"\nassert solution(\"25 25 25 25\") == \"252525\"\nassert solution(\"26 26 26 26\") == \"262626\"\nassert solution(\"27 27 27 27\") == \"272727\"\nassert solution(\"28 28 28 28\") == \"282828\"\nassert solution(\"29 29 29 29\") == \"292929\"\nassert solution(\"30 30 30 30\") == \"303030\"\nassert solution(\"31 31 31 31\") == \"313131\"\nassert solution(\"32 32 32 32\") == \"323232\"\nassert solution(\"33 33 33 33\") == \"333333\"\nassert solution(\"34 34 34 34\") == \"343434\"\nassert solution(\"35 35 35 35\") == \"353535\"\nassert solution(\"36 36 36 36\") == \"363636\"\nassert solution(\"37 37 37 37\") == \"373737\"\nassert solution(\"38 38 38 38\") == \"383838\"\nassert solution(\"39 39 39 39\") == \"393939\"\nassert solution(\"40 40 40 40\") == \"404040\"\nassert solution(\"41 41 41 41\") == \"414141\"\nassert solution(\"42 42 42 42\") == \"424242\"\nassert solution(\"43 43 43 43\") == \"43"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 2 8 4') == '20512'\nassert solution('1 1 1 1') == 'IMPOSSIBLE'\nassert solution('5 2 9 4') == 'IMPOSSIBLE'\nassert solution('1 1 1 10') == 'IMPOSSIBLE'\nassert solution('5 3 1 3') == 'IMPOSSIBLE'\nassert solution('5 3 1 3 5') == '5'"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5, 2, 8, 4) == \"20512\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"20512\", \"The solution for the given input is not correct.\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\"\nassert solution(\"10 2 8 4\") == \"30288\"\nassert solution(\"1000000 2 8 4\") == \"30288\"\nassert solution(\"5 2 8 4 5\") == \"50288\"\nassert solution(\"5 2 8 4 20\") == \"30288\"\nassert solution(\"5 2 8 4 10\") == \"20512\"\nassert solution(\"10 2 8 4 5\") == \"30288\"\nassert solution(\"5 2 8 4 20\") == \"30288\"\nassert solution(\"5 2 8 4 10\") == \"20512\"\nassert solution(\"1000000 2 8 4 5\") == \"30288\"\nassert solution(\"5 2 8 4 20\") == \"30288\"\nassert solution(\"5 2 8 4 10\") == \"20512\"\nassert solution(\"5 2 8 4 20 5\") == \"50288\"\nassert solution(\"5 2 8 4 20 20\") == \"30288\"\nassert solution(\"5 2 8 4 20 10\") == \"20512\"\nassert solution(\"10 2 8 4 20 5\") == \"30288\"\nassert solution(\"5 2 8 4 20 20\") == \"30288\"\nassert solution(\"5 2 8 4 20 10\") == \"20512\"\nassert solution(\"5 2 8 4 20 20 5\") == \"50288\"\nassert solution(\"5 2 8 4 20 20 20\") == \"30288\"\nassert solution(\"5 2 8 4 20 20 10\") == \"20512\"\nassert solution(\"1000000 2 8 4 20 5\") == \"30288\"\nassert solution(\"5 2 8 4 20 20 20\") == \"30288\"\nassert solution(\"5 2 8 4 20 20 10\") == \"20512\"\nassert solution(\"5 2 8 4 20 20 20 5\") == \"50288\"\nassert solution(\"5 2 8 4 20 20 20 20\") == \"30288\"\nassert solution(\"5 2 8 4 20 20 20 10\") == \"20512\"\nassert solution(\"1000000 2 8 4 20 20 5\") == \"30288\"\nassert solution(\"5 2 8 4 20 20 20 20\") == \"30288\"\nassert solution(\"5 2 8 4 20 20 20 10\") == \"20512\"\nassert solution(\"5 2 8 4 20 20 20 20 5\") == \"50288\"\nassert solution(\"5 2 8 4 20 20 20 20 20\") == \"30288\"\nassert solution(\"5 2 8 4 20 20 20 20 10\") == \"20512\"\nassert solution(\"1000000 2 8 4 20 20 20 5\") == \"30288\"\nassert solution(\"5 2 8 4 20 20 20 20 20\") == \"30288\"\nassert solution(\"5 2 8 4 20 20 20 20 10\") == \"20512\"\nassert solution(\"5 2 8 4 20 "
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\"\nassert solution(\"1 2 3 4\") == \"IMPOSSIBLE\"\nassert solution(\"5 3 8 4\") == \"5884\"\nassert solution(\"1 3 4 5\") == \"IMPOSSIBLE\"\nassert solution(\"2 3 4 5\") == \"2345\"\nassert solution(\"5 3 5 5\") == \"5555\""
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\nBAC\\nABC\\n\") == 2\nassert solution(\"3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\\n\") == 3"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\nfor i in range(1, 11):\n    assert solution(f'Sample Input {i}', f'Sample Output {i}') == output(f'Sample Input {i}', f'Sample Output {i}')"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\nBAC\\nABC\\n\") == \"2\"\nassert solution(\"3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\\n\") == \"3\""
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\""
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 2, \"Test case 1 failed\"\nassert solution() == 3, \"Test case 2 failed\""
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3\\nBAC\\nABC') == 2\nassert solution('3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE') == 3"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\nBAC\\nABC\") == 2\nassert solution(\"3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\") == 3"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'def solution(stdin: str) -> str: pass\\n'\n\nprint(\"All tests passed.\")"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\") == \"3\"\nassert solution(\"2 3\\nBAC\\nABC\") == \"2\"\n"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"def solution(stdin: str) -> str:\\n    pass\"\n\nfrom collections import defaultdict\nfrom itertools import combinations, permutations"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 2') == '3'\n"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 2') == '3'"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1 2\n\"\"\") == \"3\\n\"\n"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 2') == '3\\n'\n"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"3\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    1 2\n    \"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"\n    4 2\n    \"\"\"\n) == \"8\\n\"\n\nassert solution(\n    \"\"\"\n    3 4\n    \"\"\"\n) == \"24\\n\"\n\nassert solution(\n    \"\"\"\n    3 1\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    2 1\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    5 4\n    \"\"\"\n) == \"105\\n\"\n\nassert solution(\n    \"\"\"\n    5 1\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    5 3\n    \"\"\"\n) == \"162\\n\"\n\nassert solution(\n    \"\"\"\n    3 5\n    \"\"\"\n) == \"125\\n\"\n\nassert solution(\n    \"\"\"\n    5 5\n    \"\"\"\n) == \"1210\\n\"\n\nassert solution(\n    \"\"\"\n    6 2\n    \"\"\"\n) == \"11\\n\"\n\nassert solution(\n    \"\"\"\n    6 6\n    \"\"\"\n) == \"1298\\n\"\n\nassert solution(\n    \"\"\"\n    8 6\n    \"\"\"\n) == \"160\\n\"\n\nassert solution(\n    \"\"\"\n    8 4\n    \"\"\"\n) == \"1100\\n\"\n\nassert solution(\n    \"\"\"\n    8 8\n    \"\"\"\n) == \"14320\\n\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"1 2\\n\") == \"3\\n\"  # Example 1\nassert solution(stdin=\"3 4\\n\") == \"7\\n\"  # Example 2\nassert solution(stdin=\"5 6\\n\") == \"15\\n\"  # Example 3\nassert solution(stdin=\"7 8\\n\") == \"35\\n\"  # Example 4\nassert solution(stdin=\"9 10\\n\") == \"75\\n\"  # Example 5"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='1 2\\n') == '3\\n'\nassert solution(stdin='4 5\\n') == '10\\n'\nassert solution(stdin='5 4\\n') == '15\\n'\nassert solution(stdin='6 6\\n') == '30\\n'\nassert solution(stdin='7 7\\n') == '60\\n'\nassert solution(stdin='8 8\\n') == '120\\n'\nassert solution(stdin='9 9\\n') == '240\\n'\nassert solution(stdin='10 10\\n') == '480\\n'"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\" # Example 1"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == \"3\"\n"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3') == 3, \"The size of the largest possible comittee is not 3.\""
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == 3\nprint(\"Test Passed\")"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == \"3\\n\"\nassert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == \"4\\n\"\nassert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == \"2\\n\"\nassert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == \"3\\n\"\n"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 3"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == \"3\\n\"\nassert solution(\"5 3\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == \"4\\n\"\nassert solution(\"5 3\\n1 0 2 3\\n1 0 1 4\\n2 1 4\\n2 2 3\") == \"5\\n\"\n"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '3\\n', \"Expected output: 3\\nGot: \" + solution(stdin)\n"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\\n\") == 3\nprint(\"Test Passed\")"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3\\n\"\n"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 3, \"Test failed\"  # Input: 5 3\nassert solution(2) == 2, \"Test failed\"  # Input: 5 3\nassert solution(1) == 1, \"Test failed\"  # Input: 5 3\nassert solution(4) == 1, \"Test failed\"  # Input: 5 3"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 3\n"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\") == \"YES\"\nassert solution(\"2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\\n\\n1 1\\n1 2\\n2 1\\n\") == \"NO\""
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'YES'"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\") == \"YES\"\nassert solution(\"1\\n4\\n1 1\\n1 2\\n2 1\\n2 2\\n3 1\\n3 2\\n4 1\\n4 2\\n5 1\\n5 2\") == \"NO\""
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'YES\\nNO'"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed. Got '{solution(input())}' expected '{expected_output}'\"\n"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'NO'\nassert solution('3') == 'YES'"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n2\n6\n1 1\n1 3\n2 2\n2 3\n3 1\n3 2\n3\n1 1\n1 2\n2 1\n''') == 'YES'\n\nassert solution('''\n2\n6\n1 1\n1 3\n2 2\n2 3\n3 1\n3 2\n3\n1 1\n1 2\n2 1\n''') == 'NO'"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\\n1 1\\n1 2\\n2 1\\n\") == \"YES\"\nassert solution(\"1\\n\\n2\\n\\n\") == \"NO\""
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\\n1 1\\n1 2\\n2 1\") == \"YES\\nNO\""
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Solution does not match the expected output. Received: {solution(stdin=input())}, Expected: {expected_output}\""
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\") == 3.000000000"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3.000000000\"\nassert solution(stdin) == \"3.000000000\""
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2') == '3.000000000'"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3.000000000\\n\", solution(stdin)"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n\") == \"3.000000000\\n\"\n"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3.000000000\""
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1\\n2\\n3\\n4\\n5\\n\") == \"3.000000000\\n\", \"Expected 3.000000000\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"0.000000000\\n\", \"Expected 0.000000000\"\nassert solution(\"2\\n1\\n3\\n4\\n5\\n\") == \"0.000000000\\n\", \"Expected 0.000000000\"\nassert solution(\"4\\n1\\n2\\n3\\n5\\n\") == \"3.000000000\\n\", \"Expected 3.000000000\"\nassert solution(\"1000\\n1\\n2\\n3\\n4\\n5\\n\") == \"1823.000000000\\n\", \"Expected 1823.000000000\"\n"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '3.000000000', 'Incorrect output'\n"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2') == '3.000000000\\n'\nassert solution('3') == '3.000000000\\n'\nassert solution('4') == '4.000000000\\n'\nassert solution('5') == '4.000000000\\n'\nassert solution('6') == '4.000000000\\n'\nassert solution('7') == '5.000000000\\n'\nassert solution('8') == '5.000000000\\n'\nassert solution('9') == '6.000000000\\n'\nassert solution('10') == '6.000000000\\n'\nassert solution('11') == '6.000000000\\n'\nassert solution('12') == '7.000000000\\n'\nassert solution('13') == '7.000000000\\n'\nassert solution('14') == '7.000000000\\n'\nassert solution('15') == '8.000000000\\n'\nassert solution('16') == '8.000000000\\n'\nassert solution('17') == '8.000000000\\n'\nassert solution('18') == '9.000000000\\n'\nassert solution('19') == '9.000000000\\n'\nassert solution('20') == '9.000000000\\n'"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '1\\n', 'Output should be \"1\"\\n'\n"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1\\n', \"Test failed\"\n\nfrom typing import List"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 2\\n3\\n') == '1'\nassert solution('2 3\\n4\\n') == '2'\nassert solution('1 2\\n3\\n5\\n') == '2'\nassert solution('1 1\\n1\\n') == '1'\nassert solution('1 1\\n3\\n') == '1'\nassert solution('1 1\\n3\\n5\\n') == '1'"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '1', 'The solution should return 1.'\n"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n3\\n\") == \"1\\n\"\nassert solution(\"1 2\\n3 4\\n\") == \"1\\n\"\nassert solution(\"1 2\\n3 4 5\\n\") == \"1\\n\"\nassert solution(\"1 2\\n3 4 5 6\\n\") == \"2\\n\"\nassert solution(\"1 2\\n3 4 5 6 7\\n\") == \"2\\n\"\nassert solution(\"1 2\\n3 4 5 6 7 8\\n\") == \"3\\n\"\nassert solution(\"1 2\\n3 4 5 6 7 8 9\\n\") == \"3\\n\"\nassert solution(\"1 2\\n3 4 5 6 7 8 9 10\\n\") == \"4\\n\"\nassert solution(\"1 2\\n3 4 5 6 7 8 9 10 11\\n\") == \"4\\n\"\nassert solution(\"1 2\\n3 4 5 6 7 8 9 10 11 12\\n\") == \"5\\n\"\nassert solution(\"1 2\\n3 4 5 6 7 8 9 10 11 12 13\\n\") == \"5\\n\"\nassert solution(\"1 2\\n3 4 5 6 7 8 9 10 11 12 13 14\\n\") == \"6\\n\"\nassert solution(\"1 2\\n3 4 5 6 7 8 9 10 11 12 13 14 15\\n\") == \"6\\n\"\nassert solution(\"1 2\\n3 4 5 6 7 8 9 10 11 12 13 14 15 16\\n\") == \"7\\n\"\nassert solution(\"1 2\\n3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\\n\") == \"7\\n\"\nassert solution(\"1 2\\n3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\\n\") == \"8\\n\"\nassert solution(\"1 2\\n3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\\n\") == \"8\\n\"\nassert solution(\"1 2\\n3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\n\") == \"9\\n\"\nassert solution(\"1 2\\n3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21\\n\") == \"9\\n\"\nassert solution(\"1 2\\n3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22\\n\") == \"10\\n\"\nassert solution(\"1 2\\n3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23\\n\") == \"10\\n\"\nassert solution(\"1 2\\n3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24\\n\") == \"11\\n\"\nassert solution(\"1 2\\n3 4 5 6 7 8 9 1"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 1\n"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n3\") == \"1\""
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 2\\n3') == '1'\nassert solution('1 2\\n3 1 1 1\\n4') == '1'\nassert solution('1 3\\n4 1 1 1\\n5') == '2'\nassert solution('1 4\\n5 1 1 1\\n6') == '3'\nassert solution('1 5\\n6 1 1 1\\n7') == '4'\nassert solution('1 6\\n7 1 1 1\\n8') == '5'\nassert solution('1 7\\n8 1 1 1\\n9') == '6'\nassert solution('1 8\\n9 1 1 1\\n10') == '7'\nassert solution('1 9\\n10 1 1 1\\n11') == '8'\nassert solution('1 10\\n11 1 1 1\\n12') == '9'\nassert solution('1 11\\n12 1 1 1\\n13') == '10'\nassert solution('1 12\\n13 1 1 1\\n14') == '11'\nassert solution('1 13\\n14 1 1 1\\n15') == '12'\nassert solution('1 14\\n15 1 1 1\\n16') == '13'\nassert solution('1 15\\n16 1 1 1\\n17') == '14'\nassert solution('1 16\\n17 1 1 1\\n18') == '15'\nassert solution('1 17\\n18 1 1 1\\n19') == '16'\nassert solution('1 18\\n19 1 1 1\\n20') == '17'\nassert solution('1 19\\n20 1 1 1\\n21') == '18'\nassert solution('1 20\\n21 1 1 1\\n22') == '19'\nassert solution('1 21\\n22 1 1 1\\n23') == '20'\nassert solution('1 22\\n23 1 1 1\\n24') == '21'\nassert solution('1 23\\n24 1 1 1\\n25') == '22'\nassert solution('1 24\\n25 1 1 1\\n26') == '23'\nassert solution('1 25\\n26 1 1 1\\n27') == '24'\nassert solution('1 26\\n27 1 1 1\\n28') == '25'\nassert solution('1 27\\n28 1 1 1\\n29') == '26'\nassert solution('1 28\\n29 1 1 1\\n30') == '27'\nassert solution('1 29\\n30 1 1 1\\n31') == '28'\nassert solution('1 30\\n31 1 1 1\\n32') == '29'\nassert solution('1 31\\n32 1 1 1\\n33') == '30'\nassert solution('1 32\\n33 1 1 1\\n34') == '31'\nassert solution('1 33\\n34 1 1 1\\n35') == '32'\nassert solution('1 34\\n35 1 1 1\\n36') == '33'\nassert solution('1 35\\n36 1 1 1\\n37') == '34'\nassert solution('1 36\\n37 1 1 1\\n38') == '35'\nassert solution('1 37\\n38 1 1 1\\n39') == '36'\nassert solution('1 38\\n39 1 1 1\\n40') == '37'\nassert solution('1 "
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 2\\n3\\n') == '1'\nassert solution('2 3\\n4\\n') == '2'\nassert solution('10 10\\n20\\n40\\n') == '3'\nassert solution('10 10\\n10\\n10\\n') == '1'\nassert solution('10 10\\n10\\n5\\n') == '2'"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '3\\n2\\n3\\n1', \"The solution is not correct\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\n"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    3 4 5\n    1 3 4\n    0 2 2 3 2\n    1 3 2\n    1 2 4\n    1 1 4\n    \"\"\"\n) == \"3\\n2\\n3\\n1\\n\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4') == '3\\n2\\n3\\n1\\n'\nassert solution('3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4') == '3\\n2\\n3\\n1\\n'\nassert solution('3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4') == '3\\n2\\n3\\n1\\n'\n\nfrom typing import List"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4') == '3\\n2\\n3\\n1'\nassert solution('3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4') == '3\\n2\\n3\\n1'"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"The solution is {solution(input())} but the expected output is {output()}\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '3\\n2\\n3\\n1\\n'\n\nassert solution('''\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '3\\n2\\n3\\n1\\n'\n\nassert solution('''\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '3\\n2\\n3\\n1\\n'"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\""
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input) == output, f\"Solution should return {output}, but returned {solution(input)}\"\n"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"int Main() {\\n    printf(\\\"Hello %d\\\");\\n    printf(\\\"THE END\\\");\\n}\\n\") == 2\nassert solution(\"int Main() {\\n    printf(\\\"Hello %d\\\");\\n}\\n***END***\\n\") == 2\nassert solution(\"int Main() {\\n    printf(\\\"Hello %d\\\");\\n    int i=0;\\n    for (int i=0; i<10; i++)\\n    {\\n        sum += i;\\n        printf(\\\"SUM %d\\\", sum);\\n    }\\n}\\n***END***\\n\") == 2\nassert solution(\"int Main() {\\n    printf(\\\"Hello %d\\\");\\n    int i=0;\\n    for (int i=0; i<10; i++)\\n    {\\n        sum += i;\\n        printf(\\\"SUM %d\\\", sum);\\n    }\\n    printf(\\\"THE END\\\");\\n}\\n***END***\\n\") == 2"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"HelloWorld.c\") == \"def solution(stdin: str) -> str:\"\nassert solution(\"Add.c\") == \"def solution(stdin: str) -> str:\"\nassert solution(\"int Main() { printf(\\\"Hello %d\\\\n\\\",i); } ***END***\\n\") == \"0\"\nassert solution(\"int Main() { printf(\\\"Hello %d\\\\n\\\",i); printf(\\\"THE END\\\\n\\\"); } ***END***\\n\") == \"2 def solution(stdin: str) -> str:\"\nassert solution(\"int Main() { int i = 10; } ***END***\\n\") == \"0\"\nassert solution(\"int Main() { int i = 10; int j = 20; } ***END***\\n\") == \"0\"\nassert solution(\"int Main() { int i = 10; int j = 20; int k = 30; } ***END***\\n\") == \"0\"\nassert solution(\"int Main() { int i = 10; int j = 20; int k = 30; int l = 40; } ***END***\\n\") == \"0\"\nassert solution(\"int Main() { int i = 10; int j = 20; int k = 30; int l = 40; int m = 50; } ***END***\\n\") == \"0\"\nassert solution(\"int Main() { int i = 10; int j = 20; int k = 30; int l = 40; int m = 50; int n = 60; } ***END***\\n\") == \"0\"\nassert solution(\"int Main() { int i = 10; int j = 20; int k = 30; int l = 40; int m = 50; int n = 60; int o = 70; } ***END***\\n\") == \"0\"\nassert solution(\"int Main() { int i = 10; int j = 20; int k = 30; int l = 40; int m = 50; int n = 60; int o = 70; int p = 80; } ***END***\\n\") == \"0\"\nassert solution(\"int Main() { int i = 10; int j = 20; int k = 30; int l = 40; int m = 50; int n = 60; int o = 70; int p = 80; int q = 90; } ***END***\\n\") == \"0\"\nassert solution(\"int Main() { int i = 10; int j = 20; int k = 30; int l = 40; int m = 50; int n = 60; int o = 70; int p = 80; int q = 90; int r = 100; } ***END***\\n\") == \"0\"\nassert solution(\"int Main() { int i = 10; int j = 20; int k = 30; int l = 40; int m = 50; int n = 60; int o = 70; int p = 80; int q = 90; int r = 100; int s = 110; } ***END***\\n\") == \"0\"\nassert solution(\"int Main() { int i = 10; int j = 20; int k = 30; int l = 40; int m = 50; int n = 60; int o = 70; int p = 80; int q = 90; int r = 100; int s = 110; int t = 120; } ***END***\\n\") == \"0\"\nassert solution(\"int Main() { int i = 10; int j = 20; int k = 30; int l = 40; int m = 50; int n = 60; int o = 70; int p = 80; int q = 90; int r = 100; int s = 110; int t = 120; int u = 130; } ***END***\\n\") == \"0\"\nassert solution(\"int Main() { int i = 10; int j ="
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(data) == expected, f\"Expected {expected}, but got {solution(data)}\"\n"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2 HelloWorld.c\\ndef solution(stdin: str) -> str:\\npass\\n\"\nassert solution(stdin) == \"2 Add.c\\ndef solution(stdin: str) -> str:\\npass\\n\"\nassert solution(stdin) == \"0\""
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''2\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***''') == '''0\n0\n'''"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"2\\nHelloWorld.c\\nint Main() {\\nprintf(\\\"Hello %d\\\\n\\\",i);\\n}\\n***END***\\nAdd.c\\nint Main() {\\nfor (int i=0; i<10; i++)\\n    sum += i;\\nprintf(\\\"SUM %d\\\", sum);\\n}\\n***END***\\nint Main() {\\nprintf(\\\"Hello %d\\\\n\\\",i);\\nprintf(\\\"THE END\\\\n\\\");\\n}\\n***END***\") == \"2 HelloWorld.c\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nAdd.c\\nint Main() {\\nfor (int i=0; i<10; i++)\\n    sum += i;\\nprintf(\\\"SUM %d\\\", sum);\\n}\\n***END***\\nint Main() {\\nprintf(\\\"Hello %d\\\\n\\\",i);\\nprintf(\\\"THE END\\\\n\\\");\\n}\\n***END***\""
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\"\n\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\"\n\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\"\n\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\"\n\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\"\n\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\"\n\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\"\n\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_code_fragments) == expected_output\n"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin: str) == \"2 HelloWorld.c\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\n"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\\n\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\\n2\\n2\\n2\"\n\nassert solution() == \"1\\n2\\n2\\n2\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n2 2 2\\n4 2 1\\n4 4 1\\n\") == \"1\\n2\\n2\\n\"\n"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\\n2\\n2\\n2\\n\"\n"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3\\n2 2 2\\n4 2 1\\n4 4 1') == '1\\n2\\n2\\n2'"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\n2 2 2\\n4 2 1\\n4 4 1') == '1\\n2\\n2'\n"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Got {solution(input())}, expected {expected}\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\"\nassert solution(\"4 1\\n2 2\\n5 3\\n3 2\\n5 5\") == \"1\\n1\"\nassert solution(\"2 2\\n2 3\\n1 1\\n1 3\") == \"1\\n2\\n1\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\") == \"1\\n2\\n1\"\nassert solution(\"3 2\\n1 1\\n4 4\\n5 5\") == \"1\\n1\\n1\"\nassert solution(\"4 3\\n3 2\\n2 1\\n5 5\\n4 4\") == \"1\\n1\\n1\"\nassert solution(\"2 3\\n3 4\\n1 2\\n2 4\\n4 4\") == \"1\\n1\\n1\"\nassert solution(\"1 2\\n4 4\\n3 5\\n5 4\\n5 5\") == \"1\\n1\\n1\"\nassert solution(\"3 5\\n5 4\\n3 3\\n2 2\\n2 2\") == \"1\\n1\\n1\"\nassert solution(\"2 3\\n5 5\\n1 3\\n3 5\\n4 4\") == \"1\\n1\\n1\"\nassert solution(\"1 2\\n4 4\\n2 3\\n4 5\\n3 5\") == \"1\\n1\\n1\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\") == \"1\\n1\\n1\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"5\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 20\\n50 70 10\\n100 110 4\\n150 190 16') == '5\\n'\nprint('All test cases passed!')"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\\n\") == \"5\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\\n\") == \"5\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 20\\n50 70 10\\n100 110 4\\n150 190 16') == '5'"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"5\"\n"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\\n\") == \"5\\n\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Output: 5\\n\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\\n\"\nassert solution(\"4 50000 100\") == \"100\\n\"\nassert solution(\"1 1 1000\") == \"1000\\n\"\nassert solution(\"1 1 0\") == \"0\\n\"\nassert solution(\"1 1 10000\") == \"10000\\n\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\\n\"\n"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    5 5\n    2 5\n    1 1\n    1 1\n    1 1\n    #.#\n    #.#\n    ....\n    .#.##\n    1\n    6\n    4 2\n    4 3\n    3 3\n    2 3\n    1 3\n    1 2\n    #.#\n    #.#\n    ....\n    .#.##\n    1\n    6\n    ''') == 26\n\nassert solution('''\n    5 5\n    2 5\n    1 1\n    1 1\n    1 1\n    #.#\n    #.#\n    ....\n    .#.##\n    1\n    6\n    4 2\n    4 3\n    3 3\n    2 3\n    1 3\n    1 2\n    #.#\n    #.#\n    ....\n    .#.##\n    1\n    6\n    5 3\n    3 4\n    ''') == 'IMPOSSIBLE'\n\nassert solution('''\n    5 5\n    2 5\n    1 1\n    1 1\n    1 1\n    #.#\n    #.#\n    ....\n    .#.##\n    1\n    6\n    4 2\n    4 3\n    3 3\n    2 3\n    1 3\n    1 2\n    #.#\n    #.#\n    ....\n    .#.##\n    1\n    6\n    4 3\n    3 4\n    ''') == 'IMPOSSIBLE'"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt').read()) == '26'\nprint('All examples passed.')"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 5\\n(2 5) (5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)') == 26\nassert solution('5 5\\n(2 5) (5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\\n(2 5) (5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)') == 26\nassert solution('5 5\\n(2 5) (5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\\n(2 5) (5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)') == 26\nassert solution('5 5\\n(2 5) (5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\\n(2 5) (5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\\n(2 5) (5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)') == 26\nassert solution('5 5\\n(2 5) (5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\\n(2 5) (5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\\n(2 5) (5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\\n(2 5) (5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\\n(2 5) (5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\\n(2 5) (5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\\n(2 5) (5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) ("
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 5\\n(2 5) (5 3)\\n.....\\n.#.#\\n.#.#\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\") == 26\nassert solution(\"5 5\\n(2 5) (5 3)\\n.....\\n.#.#\\n.#.#\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\\n4 4\\n1 (2 1) (2 2) (2 3) (2 4)\") == 26\nassert solution(\"5 5\\n(2 5) (5 3)\\n.....\\n.#.#\\n.#.#\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\\n4 4\\n1 (2 1) (2 2) (2 3) (2 4)\") == \"IMPOSSIBLE\"\nassert solution(\"5 5\\n(2 5) (5 3)\\n.....\\n.#.#\\n.#.#\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\\n4 4\\n1 (2 1) (2 2) (2 3) (2 4)\\n1 (1 3)\") == 26\nassert solution(\"5 5\\n(2 5) (5 3)\\n.....\\n.#.#\\n.#.#\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\\n4 4\\n1 (2 1) (2 2) (2 3) (2 4)\\n1 (1 3)\\n1 (2 2)\") == 26\nassert solution(\"5 5\\n(2 5) (5 3)\\n.....\\n.#.#\\n.#.#\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\\n4 4\\n1 (2 1) (2 2) (2 3) (2 4)\\n1 (1 3)\\n1 (2 2)\\n1 (4 3)\") == 26\nassert solution(\"5 5\\n(2 5) (5 3)\\n.....\\n.#.#\\n.#.#\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\\n4 4\\n1 (2 1) (2 2) (2 3) (2 4)\\n1 (1 3)\\n1 (2 2)\\n1 (4 3)\\n1 (4 5)\\n1 (4 6)\") == 26\nassert solution(\"5 5\\n(2 5) (5 3)\\n.....\\n.#.#\\n.#.#\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\\n4 4\\n1 (2 1) (2 2) (2 3) (2 4)\\n1 (1 3)\\n1 (2 2)\\n1 (4 3)\\n1 (4 5)\\n1 (4 6)\\n1 (5 6)\") == 26\nassert solution(\"5 5\\n(2 5) (5 3)\\n.....\\n.#.#\\n.#.#\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\\n4 4\\n1 (2 1) (2 2) (2 3) (2 4)\\n"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    5 5\n    2 5\n    1\n    6\n    4 2\n    4 3\n    3 3\n    2 3\n    1 3\n    1 2\n    ''') == '26\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"(2 5)\\n(5 3)\\n....\\n.#.#\\n.#.#\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\") == 26, \"Invalid output\""
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n5 5\n(2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\n''') == '26'\n\nassert solution('''\n5 5\n(1 2) (2 3) (3 4) (4 5) (5 1)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\n''') == 'IMPOSSIBLE'\n\nassert solution('''\n5 5\n(3 4) (4 3) (3 2) (2 1) (1 3) (1 4)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\n''') == '26'"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''5 5\n(2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##''') == 26\n"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"(2 5) (5 3)\") == \"26\"\nassert solution(\"(2 5)\\n(5 3)\") == \"26\"\nassert solution(\"(2 5)\\n(5 3) (5 3)\") == \"26\"\nassert solution(\"(2 5)\\n(5 3) (5 3) (5 3)\") == \"26\"\nassert solution(\"(2 5)\\n(5 3) (5 3) (5 3) (5 3)\") == \"26\"\nassert solution(\"(2 5)\\n(5 3) (5 3) (5 3) (5 3) (5 3)\") == \"26\"\nassert solution(\"(2 5)\\n(5 3) (5 3) (5 3) (5 3) (5 3) (5 3)\") == \"26\"\nassert solution(\"(2 5)\\n(5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3)\") == \"26\"\nassert solution(\"(2 5)\\n(5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3)\") == \"26\"\nassert solution(\"(2 5)\\n(5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3)\") == \"26\"\nassert solution(\"(2 5)\\n(5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3)\") == \"26\"\nassert solution(\"(2 5)\\n(5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3)\") == \"26\"\nassert solution(\"(2 5)\\n(5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3)\") == \"26\"\nassert solution(\"(2 5)\\n(5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3)\") == \"26\"\nassert solution(\"(2 5)\\n(5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 3) (5 "
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    '''\n    5 5\n    (2 5) (5 3)\n   .#.##\n   .#.##\n    #.##.\n    '''.strip()) == '26'\n\nassert solution(\n    '''\n    5 5\n    (2 5) (5 3)\n   .#.##\n   .#.##\n    #.##.\n    '''.strip()) == '26'\n\nassert solution(\n    '''\n    5 5\n    (2 5) (5 3)\n   .#.##\n   .#.##\n    #.##.\n    '''.strip()) == '26'\n\nassert solution(\n    '''\n    5 5\n    (2 5) (5 3)\n   .#.##\n   .#.##\n    #.##.\n    '''.strip()) == '26'\n\nassert solution(\n    '''\n    5 5\n    (2 5) (5 3)\n   .#.##\n   .#.##\n    #.##.\n    '''.strip()) == '26'\n\nassert solution(\n    '''\n    5 5\n    (2 5) (5 3)\n   .#.##\n   .#.##\n    #.##.\n    '''.strip()) == '26'\n\nassert solution(\n    '''\n    5 5\n    (2 5) (5 3)\n   .#.##\n   .#.##\n    #.##.\n    '''.strip()) == '26'\n\nassert solution(\n    '''\n    5 5\n    (2 5) (5 3)\n   .#.##\n   .#.##\n    #.##.\n    '''.strip()) == '26'\n\nassert solution(\n    '''\n    5 5\n    (2 5) (5 3)\n   .#.##\n   .#.##\n    #.##.\n    '''.strip()) == '26'\n\nassert solution(\n    '''\n    5 5\n    (2 5) (5 3)\n   .#.##\n   .#.##\n    #.##.\n    '''.strip()) == '26'\n\nassert solution(\n    '''\n    5 5\n    (2 5) (5 3)\n   .#.##\n   .#.##\n    #.##.\n    '''.strip()) == '26'\n\nassert solution(\n    '''\n    5 5\n    (2 5) (5 3)\n   .#.##\n   .#.##\n    #.##.\n    '''.strip()) == '26'\n\nassert solution(\n    '''\n    5 5\n    (2 5) (5 3)\n   .#.##\n   .#.##\n    #.##.\n    '''.strip()) == '26'\n\nassert solution(\n    '''\n    5 5\n    (2 5) (5 3)\n   .#.##\n   .#.##\n    #.##.\n    '''.strip()) == '26'\n\nassert solution(\n    '''\n    5 5\n    (2 5) (5 3)\n   .#.##\n   .#.##\n    #.##.\n    '''.strip()) == '26'\n\nassert solution(\n    '''\n    5 5\n    (2 5) (5 3)\n   .#.##\n   .#.##\n    #.##.\n    '''.strip()) == '26'\n\nassert solution(\n    '''\n    5 5\n    (2 5) (5 3)\n   .#.##\n   .#.##\n    #.##.\n    '''.strip()) == '26'\n\nassert solution(\n    '''\n    5 5\n    (2 5) (5 3)\n   .#.##\n   .#.##\n    #.##.\n    '''.strip()) == '26'\n\nassert solution(\n    '''\n    5 5\n    (2 5) (5 3)\n   .#.##\n   .#.##\n    #.##.\n    '''.strip()) == '26'\n\nassert solution(\n    '''\n    5 5\n    (2 5) (5 3)\n   .#.##\n   .#.##\n    #.##.\n    '''.strip()) == '26'\n\nassert solution(\n    '''\n    5 5\n    (2 5) (5 3)\n   .#.##\n   .#.##\n    #.##.\n    '''.strip()) == '26'\n\nassert solution(\n    '''\n    5 5\n    (2 5) (5 3)\n   .#.##\n   .#.##\n    #.##.\n    '''.strip()) == '26'\n\nassert solution(\n    '''\n    5 5\n    (2 5) (5 3)\n   .#.##\n   .#.##\n    #.##.\n    '''."
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1') == 'failure'"
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\") == \"success\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"success\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"failure\", \"Your code is incorrect\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\n-1 0\n0 0\n1 0\n-1 1\n0 2\n1 1\") == \"failure\"\n\nassert solution(\"3\n0 0\n1 0\n2 0\n3 0\") == \"success\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1') =='success'"
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"failure\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"success\", \"Solution is incorrect\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n    6\n    0 -1\n    0 0\n    1 0\n    0 -1\n    0 2\n    1 1\n    ''') == 'failure'"
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\") == \"failure\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"possible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\") == \"possible\"\n"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\") == \"possible\"\nassert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n\") == \"impossible\"\nassert solution(\"1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\") == \"possible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"possible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(solution_input) == \"possible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"possible\"\n"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\") == \"possible\"\nassert solution(\"1\\n2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2\") == \"impossible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == \"possible\"\nassert solution(None) == \"possible\"\nassert solution(None) == \"possible\"\nassert solution(None) == \"possible\"\nassert solution(None) == \"possible\"\nassert solution(None) == \"impossible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\") == \"possible\"\nassert solution(\"1 2\\n3 3\\n5 2 2\\n5 2 2\") == \"impossible\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=None) == '0'"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    3 2\n    1 1 2\n    1 2 1\n    -1 1 2\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n    4 5\n    1 1 2 3\n    2 2 3 1\n    1 1 3 2\n    3 2 1 4\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    2 2\n    1 1\n    2 1\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    2 2\n    1 1 2\n    2 1 1\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n    1 1\n    1 1\n    1 1\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    2 2\n    1 1\n    2 1 2\n    \"\"\"\n) == \"2\\n\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"0\\n\"\n"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 0"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n3 2\n1 1 2\n1 2 1\n-1 1 2\n''') == '0'\n\nassert solution('''\n5 3\n1 2 3 4 5\n2 4 6 8 10\n3 5 7 9 11\n4 6 8 10 12\n5 7 9 11 13\n6 8 10 12 14\n''') == '2'\n\nassert solution('''\n10 20\n1 2 3 4 5 6 7 8 9\n2 3 6 9 12 15 18 21 24\n3 4 7 10 13 16 19 22 25\n4 5 8 11 14 17 20 23 26\n5 6 9 12 15 18 21 24 27\n6 7 8 13 16 19 22 25 28\n7 8 9 14 17 20 23 26 29\n8 9 10 15 18 21 24 27 30\n9 10 11 16 19 22 25 28 31\n10 11 12 17 20 23 26 29 32\n11 12 13 18 21 24 27 30 33\n12 13 14 19 22 25 28 31 34\n13 14 15 20 23 26 29 32 35\n14 15 16 21 24 27 30 33 36\n15 16 17 22 25 28 31 34 37\n16 17 18 23 26 29 32 35 38\n17 18 19 24 27 30 33 36 39\n18 19 20 25 28 31 34 37 40\n19 20 21 26 29 32 35 38 41\n20 21 22 27 30 33 36 39 42\n21 22 23 28 31 34 37 40 43\n22 23 24 29 32 35 38 41 44\n23 24 25 30 33 36 39 42 45\n24 25 26 31 34 37 40 43 46\n25 26 27 32 35 38 41 44 47\n26 27 28 33 36 39 42 45 48\n27 28 29 34 37 40 43 46 49\n28 29 30 35 38 41 44 47 50\n29 30 31 36 39 42 45 48 51\n30 31 32 37 40 43 46 49 52\n31 32 33 38 41 44 47 50 53\n32 33 34 39 42 45 48 51 54\n33 34 35 40 43 46 49 52 55\n34 35 36 41 44 47 50 53 56\n35 36 37 "
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 0, \"Expected output: 0, actual output: {}\".format(solution())"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0\\n\", \"Sample Output: 0\"\n"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\") == \"0\\n\"\n\nassert solution(\"4 5\\n1 1 1\\n2 2 2\\n3 3 3\\n4 4 4\") == \"2\\n\"\n\nassert solution(\"3 6\\n1 1 1\\n2 2 2\\n3 3 3\\n4 4 4\\n5 5 5\") == \"4\\n\"\n\nassert solution(\"3 2\\n1 1 2\\n1 2 1\\n0 0 1\") == \"1\\n\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == \"0\\n\"\nassert solution(open('input2.txt', 'r')) == \"1\\n\"\nassert solution(open('input3.txt', 'r')) == \"2\\n\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == \"0\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n353\") == \"3\\n353\"\nassert solution(\"4 2\\n1234\") == \"4\\n1313\"\n"
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\"3\n353\n\n4\n1313\n\"\"\"\n"
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"3 2\\n353\\n4 2\\n1234\\n\") == \"3\\n353\\n4\\n1313\\n\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 2\\n353\\n\\n4 2\\n1234\\n\\n') == '3\\n353\\n\\n4\\n1313\\n'"
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n353\\n\") == \"3\\n353\"\nassert solution(\"4 2\\n1234\\n\") == \"4\\n1313\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\"\n"
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'Output\\n3\\n353\\n4\\n1313\\n'"
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n353\\n4 2\\n1234\\n\") == \"\\n3\\n353\\n4\\n1313\\n\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\", \"Expected 'NO' but got '{0}'.\".format(solution(\"12 30 45 3 11\"))\nassert solution(\"12 0 1 12 1\") == \"YES\", \"Expected 'YES' but got '{0}'.\".format(solution(\"12 0 1 12 1\"))\nassert solution(\"3 47 0 4 9\") == \"YES\", \"Expected 'YES' but got '{0}'.\".format(solution(\"3 47 0 4 9\"))"
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('12 30 45 3 11') == 'NO'\nassert solution('12 0 1 12 1') == 'YES'\nassert solution('3 47 0 4 9') == 'YES'"
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\", \"Output 1\"\nassert solution(\"12 0 1 12 1\") == \"YES\", \"Output 2\"\nassert solution(\"3 47 0 4 9\") == \"YES\", \"Output 3\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"12 30 45 3 11\"\"\"\n) == \"NO\"\n\nassert solution(\n    \"\"\"12 0 1 12 1\"\"\"\n) == \"YES\"\n\nassert solution(\n    \"\"\"3 47 0 4 9\"\"\"\n) == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('12 30 45 3 11') == 'NO'\nassert solution('12 0 1 12 1') == 'YES'\nassert solution('3 47 0 4 9') == 'YES'"
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\", \"12 30 45 3 11\"\nassert solution(\"12 0 1 12 1\") == \"YES\", \"12 0 1 12 1\"\nassert solution(\"3 47 0 4 9\") == \"YES\", \"3 47 0 4 9\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('12 30 45 3 11') == 'NO', \"The first example is incorrect.\"\nassert solution('12 0 1 12 1') == 'YES', \"The second example is incorrect.\"\nassert solution('3 47 0 4 9') == 'YES', \"The third example is incorrect.\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\\n\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\\n\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\\n\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 3, \"Output should be 3\"\nassert solution() == 2, \"Output should be 2\"\nassert solution() == 0, \"Output should be 0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '3'\n\nassert solution() == '2'\n\nassert solution() == '0'"
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 1 2 3 1 0\\n2 4 20') == '3'\nassert solution('1 1 2 3 1 0\\n15 27 26') == '2'\nassert solution('1 1 2 3 1 0\\n2 2 1') == '0'\n"
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\"\n"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0 1\\n2 0 1\\n4 0 1\") == 4\nassert solution(\"0 0 2\\n3 0 2\\n6 0 2\") == 6\nassert solution(\"0 0 2\\n2 0 2\\n1 1 2\") == 8"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"The output is incorrect, expected: {expected_output}, got: {solution(input())}\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"firecrackers_scares_nian_but_theyre_wayyyyy_noisy.txt\", \"r\").read()) == \"4\"\nassert solution(open(\"little_tommy_is_watching_a_firework_show.txt\", \"r\").read()) == \"6\"\nassert solution(open(\"a_wonder_strikes_tommy.txt\", \"r\").read()) == \"8\"\n"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('000\\n2 0 1\\n4 0 1') == '4'\nassert solution('000\\n2 0 1\\n4 0 1\\n6 0 2\\n3 0 2') == '6'\nassert solution('000\\n2 0 1\\n2 0 2\\n1 1 2') == '8'"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected, f\"Expected {expected}, got {solution}\"\n"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0 1\\n2 0 1\\n4 0 1\") == 4\nassert solution(\"0 0 2\\n3 0 2\\n6 0 2\") == 6\nassert solution(\"0 0 2\\n2 0 2\\n1 1 2\") == 8"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000\\n000"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n0 0 1\\n2 0 1\\n4 0 1\") == \"4\"\nassert solution(\"3\\n0 0 2\\n3 0 2\\n6 0 2\") == \"6\"\nassert solution(\"3\\n0 0 2\\n2 0 2\\n1 1 2\") == \"8\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"4\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"8\\n\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"4\", \"The solution is not correct.\"\n"
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\") == \"YES\"\nassert solution(\"1 3 3 5 5 3 3 1\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\") == \"NO\"\nassert solution(\"7 3 9 5 11 3 9 1\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\") == \"YES\"\nassert solution(\"1 3 3 5 5 3 3 1\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\") == \"NO\"\nassert solution(\"7 3 9 5 11 3 9 1\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\") == \"Yes\"\nassert solution(\"1 3 3 5 5 3 3 1\") == \"NO\"\nassert solution(\"0 0 6 0 6 6 0 6\") == \"NO\"\nassert solution(\"7 3 9 5 11 3 9 1\") == \"YES\"\n"
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1') == 'YES'\nassert solution('0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1') == 'NO'\nassert solution('6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7') == 'YES'"
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\\n\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"YES\", \"Incorrect output: expected 'YES', but got '{0}'\".format(solution(stdin))\n"
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n\")) == \"YES\\n\"\nassert solution(input(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\\n\")) == \"NO\\n\"\nassert solution(input(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n\")) == \"YES\\n\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == \"YES\"\nassert solution(stdin=\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"NO\"\nassert solution(stdin=\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"YES\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution) == \"sjfnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\"\nassert solution(\"1\\n0\\n\") == \"cslnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1\\n0\\n') == 'cslnb'\nassert solution('2\\n1 0\\n') == 'cslnb'\nassert solution('2\\n2 2\\n') =='sjfnb'\nassert solution('3\\n2 3 1\\n') =='sjfnb'\n"
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1\\n0\\n') == 'cslnb'\nassert solution('2\\n1 0\\n') == 'cslnb'\nassert solution('2\\n2 2\\n') =='sjfnb'\nassert solution('3\\n2 3 1\\n') =='sjfnb'"
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\"\n"
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\"\nassert solution(\"4\\n1 2 0 3\\n\") == \"sjfnb\"\nassert solution(\"5\\n1 0 0 0 0\\n\") == \"sjfnb\"\nassert solution(\"6\\n1 2 0 2 0\\n\") == \"cslnb\"\nassert solution(\"7\\n2 1 1 1 0\\n\") == \"sjfnb\"\nassert solution(\"8\\n2 0 0 0 0\\n\") == \"sjfnb\"\nassert solution(\"9\\n2 1 0 1 0\\n\") == \"cslnb\"\nassert solution(\"10\\n1 2 0 1 2 0\\n\") == \"cslnb\"\nassert solution(\"11\\n2 1 0 1 0 0\\n\") == \"sjfnb\"\nassert solution(\"12\\n2 1 0 1 2 0\\n\") == \"sjfnb\"\nassert solution(\"13\\n2 1 2 2 0\\n\") == \"sjfnb\"\nassert solution(\"14\\n2 1 0 1 0 0\\n\") == \"cslnb\"\nassert solution(\"15\\n1 0 0 0 0 0\\n\") == \"cslnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 5\\n1 5 3\\n') == '2'\nassert solution('1 2\\n1\\n') == '1'\nassert solution('1 1\\n1\\n') == '0'"
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == \"2\\n\"\nassert solution(\"1 2\\n1\\n\") == \"1\\n\"\nassert solution(\"1 1\\n1\\n\") == \"0\\n\"\n"
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5\\n1 5 3\") == \"2\"\nassert solution(\"1 2\\n1\") == \"1\"\nassert solution(\"1 1\\n1\") == \"0\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == \"2\"\nassert solution(\"1 2\\n1\\n\") == \"1\"\nassert solution(\"1 1\\n1\\n\") == \"0\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == \"2\\n\"\nassert solution(\"1 2\\n1\\n\") == \"1\\n\"\nassert solution(\"1 1\\n1\\n\") == \"0\\n\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == \"2\"\nassert solution(\"1 2\\n1\\n\") == \"1\"\nassert solution(\"1 1\\n1\\n\") == \"0\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\\n1 2\\n1\\n1\\n\") == 2\nassert solution(\"1 2\\n1\\n1\\n\") == 1\nassert solution(\"1 1\\n1\\n\") == 0"
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5\\n1 5 3\") == \"2\"\nassert solution(\"1 2\\n1\") == \"1\"\nassert solution(\"1 1\\n1\") == \"0\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == \"2\\n\"\nassert solution(\"1 2\\n1\\n\") == \"1\\n\"\nassert solution(\"1 1\\n1\\n\") == \"0\\n\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5\\n1 5 3\") == \"2\"\nassert solution(\"1 2\\n1\") == \"1\"\nassert solution(\"1 1\\n1\") == \"0\""
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 1\nassert solution(2) == 1\nassert solution(3) == 0\nassert solution(4) == 1\nassert solution(5) == -1\nassert solution(6) == -1\nassert solution(7) == -1\nassert solution(8) == 1\nassert solution(9) == 1\nassert solution(10) == 1\nassert solution(11) == -1\nassert solution(12) == -1\nassert solution(13) == -1\nassert solution(14) == 1\nassert solution(15) == 1\nassert solution(16) == -1\nassert solution(17) == -1\nassert solution(18) == -1\nassert solution(19) == -1\nassert solution(20) == -1\nassert solution(21) == -1\nassert solution(22) == -1\nassert solution(23) == -1\nassert solution(24) == -1\nassert solution(25) == -1\nassert solution(26) == -1\nassert solution(27) == -1\nassert solution(28) == -1\nassert solution(29) == -1\nassert solution(30) == -1\nassert solution(31) == -1\nassert solution(32) == -1\nassert solution(33) == -1\nassert solution(34) == -1\nassert solution(35) == -1\nassert solution(36) == -1\nassert solution(37) == -1\nassert solution(38) == -1\nassert solution(39) == -1\nassert solution(40) == -1\nassert solution(41) == -1\nassert solution(42) == -1\nassert solution(43) == -1\nassert solution(44) == -1\nassert solution(45) == -1\nassert solution(46) == -1\nassert solution(47) == -1\nassert solution(48) == -1\nassert solution(49) == -1\nassert solution(50) == -1\nassert solution(51) == -1\nassert solution(52) == -1\nassert solution(53) == -1\nassert solution(54) == -1\nassert solution(55) == -1\nassert solution(56) == -1\nassert solution(57) == -1\nassert solution(58) == -1\nassert solution(59) == -1\nassert solution(60) == -1\nassert solution(61) == -1\nassert solution(62) == -1\nassert solution(63) == -1\nassert solution(64) == -1\nassert solution(65) == -1\nassert solution(66) == -1\nassert solution(67) == -1\nassert solution(68) == -1\nassert solution(69) == -1\nassert solution(70) == -1\nassert solution(71) == -1\nassert solution(72) == -1\nassert solution(73) == -1\nassert solution(74) == -1\nassert solution(75) == -1\nassert solution(76) == -1\nassert solution(77) == -1\nassert solution(78) == -1\nassert solution(79) == -1\nassert solution(80) == -1\nassert solution(81) == -1\nassert solution(82) == -1\nassert solution(83) == -1\nassert solution(84) == -1\nassert solution(85) == -1\nassert solution(86) == -1\nassert solution(87) == -1\nassert solution(88) == -1\nassert solution(89) == -1\nassert solution(90) == -1\nassert solution(91) == -1\nassert solution(92) == -1\nassert solution(93) == -1\nassert solution(94) == -1\nassert solution(95) == -1\nassert solution(96) == -1\nassert solution(97) == -1\nassert solution(98) == -1\nassert solution(99) == -1\nassert solution(100) == -1\nassert solution(101) == -1\nassert solution(102) == -1\nassert solution(103) == -1\n"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == '1\\n0 1\\n0'\nassert solution(2) == '2\\n-1 0 1\\n1'"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 3\nassert solution(4) == 2\nassert solution(5) == 2\nassert solution(6) == 3\nassert solution(7) == 3\nassert solution(8) == 2\nassert solution(9) == 2\nassert solution(10) == 3\nassert solution(11) == 3\nassert solution(12) == 2\nassert solution(13) == 2\nassert solution(14) == 3\nassert solution(15) == 3\nassert solution(16) == 3\nassert solution(17) == 3\nassert solution(18) == 2\nassert solution(19) == 2\nassert solution(20) == 3\nassert solution(21) == 3\nassert solution(22) == 2\nassert solution(23) == 2\nassert solution(24) == 3\nassert solution(25) == 3\nassert solution(26) == 3\nassert solution(27) == 3\nassert solution(28) == 2\nassert solution(29) == 2\nassert solution(30) == 3\nassert solution(31) == 3\nassert solution(32) == 2\nassert solution(33) == 2\nassert solution(34) == 3\nassert solution(35) == 3\nassert solution(36) == 3\nassert solution(37) == 3\nassert solution(38) == 2\nassert solution(39) == 2\nassert solution(40) == 3\nassert solution(41) == 3\nassert solution(42) == 2\nassert solution(43) == 2\nassert solution(44) == 3\nassert solution(45) == 3\nassert solution(46) == 3\nassert solution(47) == 3\nassert solution(48) == 2\nassert solution(49) == 2\nassert solution(50) == 3\nassert solution(51) == 3\nassert solution(52) == 2\nassert solution(53) == 2\nassert solution(54) == 3\nassert solution(55) == 3\nassert solution(56) == 3\nassert solution(57) == 3\nassert solution(58) == 2\nassert solution(59) == 2\nassert solution(60) == 3\nassert solution(61) == 3\nassert solution(62) == 2\nassert solution(63) == 2\nassert solution(64) == 3\nassert solution(65) == 3\nassert solution(66) == 3\nassert solution(67) == 3\nassert solution(68) == 2\nassert solution(69) == 2\nassert solution(70) == 3\nassert solution(71) == 3\nassert solution(72) == 2\nassert solution(73) == 2\nassert solution(74) == 3\nassert solution(75) == 3\nassert solution(76) == 3\nassert solution(77) == 3\nassert solution(78) == 2\nassert solution(79) == 2\nassert solution(80) == 3\nassert solution(81) == 3\nassert solution(82) == 2\nassert solution(83) == 2\nassert solution(84) == 3\nassert solution(85) == 3\nassert solution(86) == 3\nassert solution(87) == 3\nassert solution(88) == 2\nassert solution(89) == 2\nassert solution(90) == 3\nassert solution(91) == 3\nassert solution(92) == 2\nassert solution(93) == 2\nassert solution(94) == 3\nassert solution(95) == 3\nassert solution(96) == 3\nassert solution(97) == 3\nassert solution(98) == 2\nassert solution(99) == 2\nassert solution(100) == 3\nassert solution(101) == 3\nassert solution(102) == 2\nassert solution(103) == 2\n"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == \"1\"\nassert solution(2) == \"1\"\nassert solution(3) == \"-1 0 1\"\nassert solution(4) == \"1\"\nassert solution(5) == \"0 1\"\nassert solution(6) == \"-1 0 1\"\nassert solution(7) == \"1\"\nassert solution(8) == \"0 1\"\nassert solution(9) == \"-1 0 1\"\nassert solution(10) == \"1\"\nassert solution(11) == \"0 1\"\nassert solution(12) == \"-1 0 1\"\nassert solution(13) == \"1\"\nassert solution(14) == \"0 1\"\nassert solution(15) == \"-1 0 1\"\nassert solution(16) == \"1\"\nassert solution(17) == \"0 1\"\nassert solution(18) == \"-1 0 1\"\nassert solution(19) == \"1\"\nassert solution(20) == \"0 1\"\nassert solution(21) == \"-1 0 1\"\nassert solution(22) == \"1\"\nassert solution(23) == \"0 1\"\nassert solution(24) == \"-1 0 1\"\nassert solution(25) == \"1\"\nassert solution(26) == \"0 1\"\nassert solution(27) == \"-1 0 1\"\nassert solution(28) == \"1\"\nassert solution(29) == \"0 1\"\nassert solution(30) == \"-1 0 1\"\nassert solution(31) == \"1\"\nassert solution(32) == \"0 1\"\nassert solution(33) == \"-1 0 1\"\nassert solution(34) == \"1\"\nassert solution(35) == \"0 1\"\nassert solution(36) == \"-1 0 1\"\nassert solution(37) == \"1\"\nassert solution(38) == \"0 1\"\nassert solution(39) == \"-1 0 1\"\nassert solution(40) == \"1\"\nassert solution(41) == \"0 1\"\nassert solution(42) == \"-1 0 1\"\nassert solution(43) == \"1\"\nassert solution(44) == \"0 1\"\nassert solution(45) == \"-1 0 1\"\nassert solution(46) == \"1\"\nassert solution(47) == \"0 1\"\nassert solution(48) == \"-1 0 1\"\nassert solution(49) == \"1\"\nassert solution(50) == \"0 1\"\nassert solution(51) == \"-1 0 1\"\nassert solution(52) == \"1\"\nassert solution(53) == \"0 1\"\nassert solution(54) == \"-1 0 1\"\nassert solution(55) == \"1\"\nassert solution(56) == \"0 1\"\nassert solution(57) == \"-1 0 1\"\nassert solution(58) == \"1\"\nassert solution(59) == \"0 1\"\nassert solution(60) == \"-1 0 1\"\nassert solution(61) == \"1\"\nassert solution(62) == \"0 1\"\nassert solution(63) == \"-1 0 1\"\nassert solution(64) == \"1\"\nassert solution(65) == \"0 1\"\nassert solution(66) == \"-1 0 1\"\nassert solution(67) == \"1\"\nassert solution(68) == \"0 1\"\nassert solution(69) == \"-1 0 1\"\nassert solution(70) == \"1\"\nassert solution(71) == \"0 1\"\nassert solution(72) == \"-1 0 1\"\nassert solution(73) == \"1\"\nassert solution(74) == \"0 1\"\nassert solution(75) == \"-1 0 1\"\nassert solution(76) == \"1\"\nassert solution(77) == \"0 1\"\nassert solution(78) == \"-1 0 1\"\nassert solution(79) == \"1\"\nassert solution(80) == \"0 1\""
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1') == '1\\n0 1\\n0\\n1\\n'\nassert solution('2') == '2\\n-1 0 1\\n1\\n0 1\\n'\n\nassert solution('10') == '-1\\n'\nassert solution('11') == '1\\n'\n\nassert solution('20') == '-1\\n'\nassert solution('21') == '-1\\n'\n\nassert solution('50') == '1\\n'\nassert solution('51') == '1\\n'\n\nassert solution('70') == '-1\\n'\nassert solution('71') == '-1\\n'\n\nassert solution('100') == '-1\\n'\nassert solution('101') == '-1\\n'\n\nassert solution('150') == '1\\n'\nassert solution('151') == '1\\n'\n\nassert solution('200') == '-1\\n'\nassert solution('201') == '-1\\n'\n\nassert solution('250') == '-1\\n'\nassert solution('251') == '-1\\n'\n\nassert solution('300') == '-1\\n'\nassert solution('301') == '-1\\n'\n\nassert solution('350') == '-1\\n'\nassert solution('351') == '-1\\n'\n\nassert solution('400') == '-1\\n'\nassert solution('401') == '-1\\n'\n\nassert solution('450') == '-1\\n'\nassert solution('451') == '-1\\n'\n\nassert solution('500') == '-1\\n'\nassert solution('501') == '-1\\n'\n\nassert solution('550') == '-1\\n'\nassert solution('551') == '-1\\n'\n\nassert solution('600') == '-1\\n'\nassert solution('601') == '-1\\n'\n\nassert solution('650') == '-1\\n'\nassert solution('651') == '-1\\n'\n\nassert solution('700') == '-1\\n'\nassert solution('701') == '-1\\n'\n\nassert solution('750') == '-1\\n'\nassert solution('751') == '-1\\n'\n\nassert solution('800') == '-1\\n'\nassert solution('801') == '-1\\n'\n\nassert solution('850') == '-1\\n'\nassert solution('851') == '-1\\n'\n\nassert solution('900') == '-1\\n'\nassert solution('901') == '-1\\n'\n\nassert solution('950') == '-1\\n'\nassert solution('951') == '-1\\n'\n\nassert solution('1000') == '-1\\n'\nassert solution('1001') == '-1\\n'\n\nassert solution('1050') == '-1\\n'\nassert solution('1051') == '-1\\n'\n\nassert solution('1100') == '-1\\n'\nassert solution('1101') == '-1\\n'\n\nassert solution('1150') == '-1\\n'\nassert solution('1151') == '-1\\n'\n\nassert solution('1200') == '-1\\n'\nassert solution('1201') == '-1\\n'\n\nassert solution('1250') == '-1\\n'\nassert solution('1251') == '-1\\n'\n\nassert solution('1300') == '-1\\n'\nassert solution('1301') == '-1\\n'\n\nassert solution('1350') == '-1\\n'\nassert solution('1351') == '-1\\n'\n\nassert solution('1400') == '-1\\n'\nassert solution('1401') == '-1\\n'\n\nassert solution('1450') == '-1\\n'\nassert solution('1451') == '-1\\n'\n\nassert solution('1500') == '-1\\n'\nassert solution('1501') == '-1\\n'\n\nassert solution('"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 0\nassert solution(2) == -1\nassert solution(3) == 0\nassert solution(4) == -1\nassert solution(5) == -1\nassert solution(6) == 0\nassert solution(7) == 1\nassert solution(8) == 0\nassert solution(9) == 1\nassert solution(10) == 0\nassert solution(11) == 1\nassert solution(12) == 0\nassert solution(13) == 1\nassert solution(14) == 0\nassert solution(15) == 1\nassert solution(16) == 0\nassert solution(17) == 1\nassert solution(18) == 0\nassert solution(19) == 1\nassert solution(20) == 0\nassert solution(21) == 1\nassert solution(22) == 0\nassert solution(23) == 1\nassert solution(24) == 0\nassert solution(25) == 1\nassert solution(26) == 0\nassert solution(27) == 1\nassert solution(28) == 0\nassert solution(29) == 1\nassert solution(30) == 0\nassert solution(31) == 1\nassert solution(32) == 0\nassert solution(33) == 1\nassert solution(34) == 0\nassert solution(35) == 1\nassert solution(36) == 0\nassert solution(37) == 1\nassert solution(38) == 0\nassert solution(39) == 1\nassert solution(40) == 0\nassert solution(41) == 1\nassert solution(42) == 0\nassert solution(43) == 1\nassert solution(44) == 0\nassert solution(45) == 1\nassert solution(46) == 0\nassert solution(47) == 1\nassert solution(48) == 0\nassert solution(49) == 1\nassert solution(50) == 0\nassert solution(51) == 1\nassert solution(52) == 0\nassert solution(53) == 1\nassert solution(54) == 0\nassert solution(55) == 1\nassert solution(56) == 0\nassert solution(57) == 1\nassert solution(58) == 0\nassert solution(59) == 1\nassert solution(60) == 0\nassert solution(61) == 1\nassert solution(62) == 0\nassert solution(63) == 1\nassert solution(64) == 0\nassert solution(65) == 1\nassert solution(66) == 0\nassert solution(67) == 1\nassert solution(68) == 0\nassert solution(69) == 1\nassert solution(70) == 0\nassert solution(71) == 1\nassert solution(72) == 0\nassert solution(73) == 1\nassert solution(74) == 0\nassert solution(75) == 1\nassert solution(76) == 0\nassert solution(77) == 1\nassert solution(78) == 0\nassert solution(79) == 1\nassert solution(80) == 0\nassert solution(81) == 1\nassert solution(82) == 0\nassert solution(83) == 1\nassert solution(84) == 0\nassert solution(85) == 1\nassert solution(86) == 0\nassert solution(87) == 1\nassert solution(88) == 0\nassert solution(89) == 1\nassert solution(90) == 0\nassert solution(91) == 1\nassert solution(92) == 0\nassert solution(93) == 1\nassert solution(94) == 0\nassert solution(95) == 1\nassert solution(96) == 0\nassert solution(97) == 1\nassert solution(98) == 0\nassert solution(99) == 1\nassert solution(100) == 0\nassert solution(101) == 1\nassert solution(102) == 0\nassert solution(103) == 1\n"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == '1'\nassert solution(2) == '1 0 1'\nassert solution(10) == -1"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 0\nassert solution(2) == 0\nassert solution(3) == 1\nassert solution(4) == 0\nassert solution(5) == -1\nassert solution(6) == -1\nassert solution(7) == 0\nassert solution(8) == 1\nassert solution(9) == 0\nassert solution(10) == 0\nassert solution(11) == 0\nassert solution(12) == -1\nassert solution(13) == 0\nassert solution(14) == -1\nassert solution(15) == -1\nassert solution(16) == 0\nassert solution(17) == -1\nassert solution(18) == -1\nassert solution(19) == 0\nassert solution(20) == -1\nassert solution(21) == -1\nassert solution(22) == -1\nassert solution(23) == 0\nassert solution(24) == -1\nassert solution(25) == -1\nassert solution(26) == -1\nassert solution(27) == 0\nassert solution(28) == -1\nassert solution(29) == -1\nassert solution(30) == -1\nassert solution(31) == 0\nassert solution(32) == -1\nassert solution(33) == -1\nassert solution(34) == -1\nassert solution(35) == 0\nassert solution(36) == -1\nassert solution(37) == -1\nassert solution(38) == -1\nassert solution(39) == 0\nassert solution(40) == -1\nassert solution(41) == -1\nassert solution(42) == -1\nassert solution(43) == 0\nassert solution(44) == -1\nassert solution(45) == -1\nassert solution(46) == -1\nassert solution(47) == 0\nassert solution(48) == -1\nassert solution(49) == -1\nassert solution(50) == -1\nassert solution(51) == 0\nassert solution(52) == -1\nassert solution(53) == -1\nassert solution(54) == -1\nassert solution(55) == 0\nassert solution(56) == -1\nassert solution(57) == -1\nassert solution(58) == -1\nassert solution(59) == 0\nassert solution(60) == -1\nassert solution(61) == -1\nassert solution(62) == -1\nassert solution(63) == 0\nassert solution(64) == -1\nassert solution(65) == -1\nassert solution(66) == -1\nassert solution(67) == 0\nassert solution(68) == -1\nassert solution(69) == -1\nassert solution(70) == -1\nassert solution(71) == 0\nassert solution(72) == -1\nassert solution(73) == -1\nassert solution(74) == -1\nassert solution(75) == 0\nassert solution(76) == -1\nassert solution(77) == -1\nassert solution(78) == -1\nassert solution(79) == 0\nassert solution(80) == -1\nassert solution(81) == -1\nassert solution(82) == -1\nassert solution(83) == 0\nassert solution(84) == -1\nassert solution(85) == -1\nassert solution(86) == -1\nassert solution(87) == 0\nassert solution(88) == -1\nassert solution(89) == -1\nassert solution(90) == -1\nassert solution(91) == 0\nassert solution(92) == -1\nassert solution(93) == -1\nassert solution(94) == -1\nassert solution(95) == 0\nassert solution(96) == -1\nassert solution(97) == -1\nassert solution(98) == -1\nassert solution(99) == 0\nassert solution(100) == -1\nassert solution(101) == -1\nassert solution(102) == -1\nassert solution(103) == 0\n"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 1\nassert solution(4) == 0\nassert solution(5) == -1\nassert solution(6) == -1\nassert solution(7) == -1\nassert solution(8) == 0\nassert solution(9) == 1\nassert solution(10) == 2\nassert solution(11) == 3\nassert solution(12) == 4\nassert solution(13) == 5\nassert solution(14) == 6\nassert solution(15) == 7\nassert solution(16) == 8\nassert solution(17) == 9\nassert solution(18) == 10\nassert solution(19) == 11\nassert solution(20) == 12\nassert solution(21) == 13\nassert solution(22) == 14\nassert solution(23) == 15\nassert solution(24) == 16\nassert solution(25) == 17\nassert solution(26) == 18\nassert solution(27) == 19\nassert solution(28) == 20\nassert solution(29) == 21\nassert solution(30) == 22\nassert solution(31) == 23\nassert solution(32) == 24\nassert solution(33) == 25\nassert solution(34) == 26\nassert solution(35) == 27\nassert solution(36) == 28\nassert solution(37) == 29\nassert solution(38) == 30\nassert solution(39) == 31\nassert solution(40) == 32\nassert solution(41) == 33\nassert solution(42) == 34\nassert solution(43) == 35\nassert solution(44) == 36\nassert solution(45) == 37\nassert solution(46) == 38\nassert solution(47) == 39\nassert solution(48) == 40\nassert solution(49) == 41\nassert solution(50) == 42\nassert solution(51) == 43\nassert solution(52) == 44\nassert solution(53) == 45\nassert solution(54) == 46\nassert solution(55) == 47\nassert solution(56) == 48\nassert solution(57) == 49\nassert solution(58) == 50\nassert solution(59) == 51\nassert solution(60) == 52\nassert solution(61) == 53\nassert solution(62) == 54\nassert solution(63) == 55\nassert solution(64) == 56\nassert solution(65) == 57\nassert solution(66) == 58\nassert solution(67) == 59\nassert solution(68) == 60\nassert solution(69) == 61\nassert solution(70) == 62\nassert solution(71) == 63\nassert solution(72) == 64\nassert solution(73) == 65\nassert solution(74) == 66\nassert solution(75) == 67\nassert solution(76) == 68\nassert solution(77) == 69\nassert solution(78) == 70\nassert solution(79) == 71\nassert solution(80) == 72\nassert solution(81) == 73\nassert solution(82) == 74\nassert solution(83) == 75\nassert solution(84) == 76\nassert solution(85) == 77\nassert solution(86) == 78\nassert solution(87) == 79\nassert solution(88) == 80\nassert solution(89) == 81\nassert solution(90) == 82\nassert solution(91) == 83\nassert solution(92) == 84\nassert solution(93) == 85\nassert solution(94) == 86\nassert solution(95) == 87\nassert solution(96) =="
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\\n0 1\\n0\\n1\\n\"\nassert solution(\"2\") == \"2\\n-1 0 1\\n1\\n0 1\\n\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3 1 2 3\"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"2 3 2 1 3\"\nassert solution(\"3 2 5 3\\n1 3 1\\n\") == \"1 2 2\"\n\nfrom typing import List\n"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 1 5 4\\n1 2 1 3\\n') == '1 3 3\\n'\nassert solution('3 1 5 3\\n1 3 1\\n') == '2 3 2\\n'\nassert solution('3 2 5 3\\n1 3 1\\n') == '1 2 2\\n'"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n3 1 5 4\n1 2 1 3\n''') == '''\n1 3 3 \n'''\n\nassert solution('''\n3 1 5 3\n1 3 1\n''') == '''\n2 3 2 \n'''\n\nassert solution('''\n3 2 5 3\n1 3 1\n''') == '''\n1 2 2\n'''"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3 \"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"2 3 2 \"\nassert solution(\"3 2 5 3\\n1 3 1\\n\") == \"1 2 2\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\" # Empty input\nassert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3\\n1 3 3\\n2 3 2\\n2 3 2\\n1 2 2\\n\" # Example 1\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"1 2 2\\n\" # Example 2\nassert solution(\"3 2 5 3\\n1 3 1\\n\") == \"1 2 2\\n\" # Example 3"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0\\n\"\nassert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3 1 3 3\\n\"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"1 2 2\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3 \"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"2 3 2 \"\nassert solution(\"3 2 5 3\\n1 3 1\\n\") == \"1 2 2\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1 3 3 \\n2 3 2 \\n1 2 2\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3 1\\n2 3 2 1\\n1 2 2\"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"2 3 2 1\"\nassert solution(\"3 2 5 3\\n1 3 1\\n\") == \"1 2 2\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3 \\n1 3 3 \\n2 3 2 \\n\"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"2 3 2 \\n\"\nassert solution(\"3 2 5 3\\n1 3 1\\n\") == \"1 2 2\"\n"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\\n\"\nassert solution(\"111111011\\n2\\n\") == \"169\\n\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\"\nassert solution(\"111111011\\n2\\n\") == \"169\"\nassert solution(\"2\\n\") == \"1\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\"\nassert solution(\"111111011\\n2\\n\") == \"169\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\"\nassert solution(\"111111011\\n2\\n\") == \"169\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"The solution is incorrect. Output: {output}, Input: {input()}\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('110\\n2\\n') == '3'\nassert solution('111111011\\n2\\n') == '169'\n\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\\n\", \"Test failed for 110\\n2\\n\"\nassert solution(\"111111011\\n2\\n\") == \"169\\n\", \"Test failed for 111111011\\n2\\n\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\"\nassert solution(\"111111011\\n2\\n\") == \"169\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\"\nassert solution(\"111111011\\n2\\n\") == \"169\"\n\nassert solution(\"110\\n0\\n\") == \"0\"\nassert solution(\"111111011\\n0\\n\") == \"0\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('110\\n2\\n') == '3'\nassert solution('111111011\\n2\\n') == '169'"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_data) == expected_output, f\"The output is {solution(input_data)}, but the expected output is {expected_output}\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1 1 2 0 0\\n3\\n1 1\\n2 1\\n2 3\\n\") == \"11.084259940083\\n\"\nassert solution(\"5 0 4 2 2 0\\n5\\n5 2\\n3 0\\n5 5\\n3 5\\n3 3\\n\") == \"33.121375178000\\n\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    3 1 1 2 0 0\n    3\n    1 1\n    2 1\n    2 3\n    \"\"\"\n) == \"11.084259940083\"\n\nassert solution(\n    \"\"\"\n    5 0 4 2 2 0\n    5\n    5 2\n    3 0\n    5 5\n    3 5\n    3 3\n    \"\"\"\n) == \"33.121375178000\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '11.084259940083'"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1 1 2 0 0\\n3\\n1 1\\n2 1\\n2 3\\n\") == \"11.084259940083\"\nassert solution(\"5 0 4 2 2 0\\n5\\n5 2\\n3 0\\n5 5\\n3 5\\n3 3\\n\") == \"33.121375178000\"\n"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1 1 2 0 0\\n3\\n1 1\\n2 1\\n2 3\") == 11.084259940083\nassert solution(\"5 0 4 2 2 0\\n5\\n5 2\\n3 0\\n5 5\\n3 5\\n3 3\") == 33.121375178000\n"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 1 1 2 0 0\\n3\\n1 1\\n2 1\\n2 3') == '11.084259940083'\nassert solution('5 0 4 2 2 0\\n5\\n5 2\\n3 0\\n5 5\\n3 5\\n3 3') == '33.121375178000'"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"11.084259940083\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 1 2 0 0\\n3\\n1 1\\n2 1\\n2 3\") == \"11.084259940083\"\nassert solution(\"5 0 4 2 2 0\\n5\\n5 2\\n3 0\\n5 5\\n3 5\\n3 3\") == \"33.121375178000\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 5\") == \"2\"\nassert solution(\"8 15\") == \"1\"\nassert solution(\"7 20\") == \"0\"\nassert solution(\"1000000000000 1000000000001\") == \"500000000000\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('8 5') == '2'\nassert solution('8 15') == '1'\nassert solution('7 20') == '0'\nassert solution('1000000000000 1000000000001') == '500000000000'"
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 5\\n\") == \"2\\n\"\nassert solution(\"8 15\\n\") == \"1\\n\"\nassert solution(\"7 20\\n\") == \"0\\n\"\nassert solution(\"1000000000000 1000000000001\\n\") == \"500000000000\\n\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 5\") == \"2\"\nassert solution(\"8 15\") == \"1\"\nassert solution(\"7 20\") == \"0\"\nassert solution(\"1000000000000 1000000000001\") == \"500000000000\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 5\") == \"2\\n\"\nassert solution(\"8 15\") == \"1\\n\"\nassert solution(\"7 20\") == \"0\\n\"\nassert solution(\"1000000000000 1000000000001\") == \"500000000000\\n\"\n"
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 5\") == \"2\"\nassert solution(\"8 15\") == \"1\"\nassert solution(\"7 20\") == \"0\"\nassert solution(\"1000000000000 1000000000001\") == \"500000000000\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0\\n\"\n\nassert solution() == \"2\\n\"\n\nassert solution() == \"1\\n\"\n\nassert solution() == \"0\\n\"\n\nassert solution() == \"500000000000\\n\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('8 5\\n') == '2\\n'\nassert solution('8 15\\n') == '1\\n'\nassert solution('7 20\\n') == '0\\n'\nassert solution('1000000000000 1000000000001\\n') == '500000000000\\n'\n\nassert solution('') == '0\\n'\nassert solution('1\\n') == '1\\n'\nassert solution('2\\n') == '2\\n'\nassert solution('3\\n') == '2\\n'\nassert solution('4\\n') == '2\\n'\nassert solution('5\\n') == '2\\n'\nassert solution('6\\n') == '2\\n'\nassert solution('7\\n') == '2\\n'\nassert solution('8\\n') == '2\\n'\nassert solution('9\\n') == '2\\n'\nassert solution('10\\n') == '2\\n'\nassert solution('11\\n') == '2\\n'\nassert solution('12\\n') == '2\\n'\nassert solution('13\\n') == '2\\n'\nassert solution('14\\n') == '2\\n'\nassert solution('15\\n') == '2\\n'\nassert solution('16\\n') == '2\\n'\nassert solution('17\\n') == '2\\n'\nassert solution('18\\n') == '2\\n'\nassert solution('19\\n') == '2\\n'\nassert solution('20\\n') == '2\\n'\nassert solution('21\\n') == '2\\n'\nassert solution('22\\n') == '2\\n'\nassert solution('23\\n') == '2\\n'\nassert solution('24\\n') == '2\\n'\nassert solution('25\\n') == '2\\n'\nassert solution('26\\n') == '2\\n'\nassert solution('27\\n') == '2\\n'\nassert solution('28\\n') == '2\\n'\nassert solution('29\\n') == '2\\n'\nassert solution('30\\n') == '2\\n'\nassert solution('31\\n') == '2\\n'\nassert solution('32\\n') == '2\\n'\nassert solution('33\\n') == '2\\n'\nassert solution('34\\n') == '2\\n'\nassert solution('35\\n') == '2\\n'\nassert solution('36\\n') == '2\\n'\nassert solution('37\\n') == '2\\n'\nassert solution('38\\n') == '2\\n'\nassert solution('39\\n') == '2\\n'\nassert solution('40\\n') == '2\\n'\nassert solution('41\\n') == '2\\n'\nassert solution('42\\n') == '2\\n'\nassert solution('43\\n') == '2\\n'\nassert solution('44\\n') == '2\\n'\nassert solution('45\\n') == '2\\n'\nassert solution('46\\n') == '2\\n'\nassert solution('47\\n') == '2\\n'\nassert solution('48\\n') == '2\\n'\nassert solution('49\\n') == '2\\n'\nassert solution('50\\n') == '2\\n'\nassert solution('51\\n') == '2\\n'\nassert solution('52\\n') == '2\\n'\nassert solution('53\\n') == '2\\n'\nassert solution('54\\n') == '2\\n'\nassert solution('55\\n') == '2\\n'\nassert solution('56\\n') == '2\\n'\nassert solution('57\\n') == '2\\n'\nassert solution('58\\n') == '2\\n'\nassert solution('59\\n') == '2\\n'\nassert solution('60\\n') == '2\\n'\nassert solution('61\\n') == '2\\n'\nassert solution('62\\n')"
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Expected '{output()}', got '{solution(input())}'\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 2, \"Solution should return 2\"\n\nassert solution == 1, \"Solution should return 1\"\n\nassert solution == 0, \"Solution should return 0\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 1 10\\n01000') == '11'\nassert solution('5 10 1\\n01000') == '2'\nassert solution('7 2 3\\n1111111') == '0'\n"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 1 10\\n01000\\n\") == \"11\\n\"\nassert solution(\"5 10 1\\n01000\\n\") == \"2\\n\"\nassert solution(\"7 2 3\\n1111111\\n\") == \"0\\n\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\nfor i in range(input()):\n    #... your code goes here\n"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 1 10\\n01000') == '11'\nassert solution('5 10 1\\n01000') == '2'\nassert solution('7 2 3\\n1111111') == '0'\n\nfrom typing import List"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 1 10\\n01000\") == \"11\"\nassert solution(\"5 10 1\\n01000\") == \"2\"\nassert solution(\"7 2 3\\n1111111\") == \"0\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == 0, \"Solution should return 0\"\nassert solution(\"01000\") == 11, \"Solution should return 11\"\nassert solution(\"01000\") == 11, \"Solution should return 11\"\nassert solution(\"1111111\") == 0, \"Solution should return 0\"\n"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Input '{input()}' does not match expected output '{output}'.\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 1 10\\n01000') == '11\\n'\nassert solution('5 10 1\\n01000') == '2\\n'\nassert solution('7 2 3\\n1111111') == '0\\n'"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 1 10\\n01000\\n\") == \"11\"\nassert solution(\"5 10 1\\n01000\\n\") == \"2\"\nassert solution(\"7 2 3\\n1111111\\n\") == \"0\"\n\nimport sys"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 1 10\\n01000') == '11\\n'\nassert solution('5 10 1\\n01000') == '2\\n'\nassert solution('7 2 3\\n1111111\\n') == '0\\n'"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 1\") == \"2 1\"\nassert solution(\"5 1 2\") == \"19 5\"\nassert solution(\"1000 1 1\") == \"-1\"\n\nassert solution(\"1000 2 1\") == \"2 1\"\nassert solution(\"1000 10 1\") == \"5 4\"\nassert solution(\"1000 20 1\") == \"10 10\"\nassert solution(\"1000 100 1\") == \"20 20\"\nassert solution(\"1000 200 1\") == \"25 15\"\nassert solution(\"1000 1000 1\") == \"250 100\"\nassert solution(\"1000 2000 1\") == \"500 200\"\n\nassert solution(\"10000 1 1\") == \"-1\"\n\nassert solution(\"10000 2 1\") == \"2 1\"\nassert solution(\"10000 10 1\") == \"5 4\"\nassert solution(\"10000 20 1\") == \"10 10\"\nassert solution(\"10000 100 1\") == \"20 20\"\nassert solution(\"10000 200 1\") == \"25 15\"\nassert solution(\"10000 1000 1\") == \"250 100\"\nassert solution(\"10000 2000 1\") == \"500 200\"\n\nassert solution(\"100000 1 1\") == \"-1\"\n\nassert solution(\"100000 2 1\") == \"2 1\"\nassert solution(\"100000 10 1\") == \"5 4\"\nassert solution(\"100000 20 1\") == \"10 10\"\nassert solution(\"100000 100 1\") == \"20 20\"\nassert solution(\"100000 200 1\") == \"25 15\"\nassert solution(\"100000 1000 1\") == \"250 100\"\nassert solution(\"100000 2000 1\") == \"500 200\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 1 1') == '2 1'\nassert solution('5 1 2') == '19 5'\nassert solution('100 1 3') == '-1'\nassert solution('1 1 1') == '-1'"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3,1,1) == \"2 1\"\nassert solution(5,1,2) == \"19 5\"\n"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 1 1') == '2 1'\nassert solution('5 1 2') == '19 5'\nprint('-1') # Solution not provided"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == -1 # Expected Output: -1\nassert solution() == -1 # Expected Output: -1\nassert solution() == -1 # Expected Output: -1\nassert solution() == -1 # Expected Output: -1\nassert solution() == -1 # Expected Output: -1\nassert solution() == -1 # Expected Output: -1\nassert solution() == -1 # Expected Output: -1"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_data) == output_data, f\"Test failed for input {input_data}, expected output {output_data}, actual output: {solution(input_data)}\"\n"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1 1\\n\") == \"2 1\\n\"\nassert solution(\"5 1 2\\n\") == \"19 5\\n\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n3 1 1\n''') == '''\n2 1\n'''\n\nassert solution('''\n5 1 2\n''') == '''\n19 5\n'''\n\nassert solution('''\n5 1 1\n''') == '''\n-1\n'''\n\nassert solution('''\n6 1 1\n''') == '''\n-1\n'''\n\nassert solution('''\n1 1 1\n''') == '''\n-1\n'''\n\nassert solution('''\n2 2 1\n''') == '''\n-1\n'''\n\nassert solution('''\n3 1 0\n''') == '''\n-1\n'''\n\nassert solution('''\n4 1 0\n''') == '''\n-1\n'''\n\nassert solution('''\n5 1 1\n''') == '''\n-1\n'''\n\nassert solution('''\n1 1 1\n''') == '''\n-1\n'''"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 1\\n5 1 2\\n\") == \"2 1\\n19 5\\n\"\nassert solution(\"1 2 3 4\\n2 3 4 5\\n\") == \"-1\\n\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 1\\n5 1 2\\n\") == \"2 1\\n19 5\\n\"\nassert solution(\"1 1 1\\n10 1 2\\n\") == \"-1\\n\"\nassert solution(\"3 10 10\\n3 20 20\\n\") == \"2 1\\n19 5\\n\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Test failed for input {input()}, expected {expected}\"\n"
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('7 1') == '6\\n'\nassert solution('10 2') == '4\\n'"
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 1\\n\") == \"6\\n\"\nassert solution(\"10 2\\n\") == \"4\\n\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('7 1') == '6'\nassert solution('10 2') == '4'"
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 1\") == \"6\"\nassert solution(\"10 2\") == \"4\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 1\\n\") == \"6\\n\"\nassert solution(\"10 2\\n\") == \"4\\n\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(7, 1) == '6'\nassert solution(10, 2) == '4'"
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 1\\n\") == \"6\\n\"\nassert solution(\"10 2\\n\") == \"4\\n\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 1\\n\") == \"6\\n\"\nassert solution(\"10 2\\n\") == \"4\\n\"\n"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\\n195.0.0.0/8\\n127.0.0.4/30\"\n\nfrom typing import List"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('-149.154.167.99') == '1'\nassert solution('+149.154.167.100/30') == '2'\nassert solution('+149.154.167.128/25') == '2'\nassert solution('-149.154.167.120/29') == '2'\nassert solution('-127.0.0.4/31') == '-1'\nassert solution('+127.0.0.8') == '-1'\nassert solution('+127.0.0.0/30') == '-1'\nassert solution('-195.82.146.208/29') == '-1'\nassert solution('-127.0.0.6/31') == '-1'"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == output, f\"Input {input}, Output {output}\" for input, output in zip(stdin_data, expected_output)"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 2, \"Test failed\""
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\\n149.154.167.99\\n149.154.167.120/29\""
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution()\\n    # Test case 1\\n    assert solution(\\\"-149.154.167.99\\\") == \\\"1.0.0.0/0\\\"\\n    # Test case 2\\n    assert solution(\\\"-149.154.167.99\\n+149.154.167.100/30\\n+149.154.167.128/25\\n-149.154.167.120/29\\\") == \\\"2.149.154.167.99\\n149.154.167.120/29\\\"\\n    # Test case 3\\n    assert solution(\\\"-127.0.0.4/31\\n+127.0.0.8\\n+127.0.0.0/30\\n-195.82.146.208/29\\n-127.0.0.6/31\\\") == \\\"2.195.0.0.0/8\\n127.0.0.4/30\\\"\\n    # Test case 4\\n    assert solution(\\\"+127.0.0.1/32\\n-127.0.0.1\\\") == \\\"-1\\\"\\n    # Test case 5\\n    assert solution(\\\"-127.0.0.0/31\\n+127.0.0.0/30\\n+127.0.0.0/31\\n-127.0.0.0/32\\n-127.0.0.0/32\\\") == \\\"-1\\\"\\n\\n# Test cases with more than one solution\\n# Test case 6\\nassert solution(\\\"-149.154.167.99\\n+149.154.167.100/30\\n+149.154.167.128/25\\n-149.154.167.120/29\\n-149.154.167.120/29\\\") == \\\"2.149.154.167.99\\n149.154.167.120/29\\\"\\n    # Test case 7\\n    assert solution(\\\"-127.0.0.4/31\\n+127.0.0.8\\n+127.0.0.0/30\\n-195.82.146.208/29\\n-127.0.0.6/31\\\") == \\\"2.195.0.0.0/8\\n127.0.0.4/30\\\"\\n\\n# Test cases with different input formats\\n# Test case 8\\nassert solution(\\\"+127.0.0.1/32\\n-127.0.0.1\\\") == \\\"-1\\\"\\n    # Test case 9\\n    assert solution(\\\"-127.0.0.0/31\\n+127.0.0.0/30\\n+127.0.0.0/31\\n-127.0.0.0/32\\n-127.0.0.0/32\\\") == \\\"-1\\\"\\n\\n# Test cases with subnets that start with a 0\\n# Test case 10\\nassert solution(\\\"-127.0.0.0/31\\n+127.0.0.0/30\\n+127.0.0.0/31\\n-127.0.0.0/32\\n-127.0.0.0/32\\\") == \\\"-1\\\"\\n    # Test case 11\\n    assert solution(\\\"127.0.0.0/31\\n127.0.0"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n-149.154.167.99\\n\") == \"1\\n0.0.0.0/0\\n\"\nassert solution(\"4\\n-149.154.167.99\\n+149.154.167.100/30\\n+149.154.167.128/25\\n-149.154.167.120/29\\n\") == \"2\\n149.154.167.99\\n149.154.167.120/29\\n\"\nassert solution(\"5\\n-127.0.0.4/31\\n+127.0.0.8\\n+127.0.0.0/30\\n-195.82.146.208/29\\n-127.0.0.6/31\\n\") == \"2\\n195.0.0.0/8\\n127.0.0.4/30\\n\"\nassert solution(\"2\\n+127.0.0.1/32\\n-127.0.0.1\\n\") == \"-1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"For input {input()}, expected output {expected_output}, but got {solution(input())}.\"\n"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\\n0.0.0.0/0\"\nassert solution(\"4\") == \"2\\n149.154.167.99\\n149.154.167.120/29\"\nassert solution(\"5\") == \"2\\n195.0.0.0/8\\n127.0.0.4/30\"\nassert solution(\"2\") == \"-1\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11\\n00000000008\") == \"1\"\nassert solution(\"22\\n0011223344556677889988\") == \"2\"\nassert solution(\"11\\n31415926535\") == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11\\n00000000008\\n\") == \"1\"\nassert solution(\"22\\n0011223344556677889988\\n\") == \"2\"\nassert solution(\"11\\n31415926535\\n\") == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(input())) == \"1\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11\") == \"1\"\nassert solution(\"22\") == \"2\"\nassert solution(\"11\") == \"0\"\nassert solution(\"31415926535\") == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11\\n00000000008\") == \"1\"\nassert solution(\"22\\n0011223344556677889988\") == \"2\"\nassert solution(\"11\\n31415926535\") == \"0\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11\\n00000000008\") == \"1\"\nassert solution(\"22\\n0011223344556677889988\") == \"2\"\nassert solution(\"11\\n31415926535\") == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11\") == \"1\"\nassert solution(\"22\") == \"2\"\nassert solution(\"11\") == \"1\"\nassert solution(\"31415926535\") == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11\\n00000000008\") == \"1\"\nassert solution(\"22\\n0011223344556677889988\") == \"2\"\nassert solution(\"11\\n31415926535\") == \"0\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\"\nassert solution(open(\"input_test_case.txt\", \"r\")) == \"-1\"\nassert solution(open(\"input_test_case2.txt\", \"r\")) == \"3\\nrow 1\\nrow 2\\nrow 3\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1') == '4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\\n3\\nrow 1\\nrow 2\\nrow 3'\nassert solution('3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1') == '-1'\nassert solution('3 3\\n1 1 1\\n1 1 1\\n1 1 1') == '3\\nrow 1\\nrow 2\\nrow 3'"
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Test failed for input {stdin}\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1') == 4, \"Output: 4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\"\nassert solution('3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1') == -1, \"Output: -1\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 5) == 4, \"Expected output: 4\\nReceived: {}\\n\".format(solution(3, 5))\nassert solution(3, 3) == -1, \"Expected output: -1\\nReceived: {}\\n\".format(solution(3, 3))\nassert solution(3, 3) == 3, \"Expected output: 3\\nReceived: {}\\n\".format(solution(3, 3))"
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('Input\\n3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\\nOutput\\n4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\\nInput\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\nOutput\\n-1\\n\\nInput\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\nOutput\\n3\\nrow 1\\nrow 2\\nrow 3') == '4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\\n3\\nrow 1\\nrow 2\\nrow 3'"
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n3 5\n2 2 2 3 2\n0 0 0 1 0\n1 1 1 2 1\n''') == '4\\nrow 1\\nrow 1\\ncol 4\\nrow 3'\n\nassert solution('''\n3 3\n0 0 0\n0 1 0\n0 0 0\n''') == '-1'\n\nassert solution('''\n3 3\n1 1 1\n1 1 1\n1 1 1\n''') == '3\\nrow 1\\nrow 2\\nrow 3'"
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i + 1} failed\"\nfor i in range(1, 6):\n    assert solution(f\"Test case {i}\") == expected_output, f\"Test case {i + 1} failed\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input1) == output1, f\"Output1: {solution(input1)}!= {output1}\"\nassert solution(input2) == output2, f\"Output2: {solution(input2)}!= {output2}\"\nassert solution(input3) == output3, f\"Output3: {solution(input3)}!= {output3}\"\nassert solution(input4) == output4, f\"Output4: {solution(input4)}!= {output4}\"\nassert solution(input5) == output5, f\"Output5: {solution(input5)}!= {output5}\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\"\nassert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\\n\"\nassert solution(\"8 6 4 6\") == \"NO\\n\"\nassert solution(\"10 3 11 4\") == \"NO\\n\"\nassert solution(\"4 2 1 4\") == \"YES\\n\"\n"
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {solution(input())}!= {expected_output}\"\n"
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output() for input, output in zip(stdin_data, stdout_data)"
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n4 2\n1 3\n1 4\n\"\"\"\n) == \"6\"\n\nassert solution(\n    \"\"\"\n7 8\n1 6\n2 6\n3 5\n3 6\n4 3\n5 1\n5 2\n5 3\n\"\"\"\n) == \"12\"\n\nassert solution(\n    \"\"\"\n2 2\n1 2\n2 1\n\"\"\"\n) == \"-1\"\n\nassert solution(\n    \"\"\"\n1 1\n1 1\n1 1\n\"\"\"\n) == \"0\"\n\nassert solution(\n    \"\"\"\n6 6\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n\"\"\"\n) == \"15\"\n\nassert solution(\n    \"\"\"\n6 6\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n\"\"\"\n) == \"15\"\n\nassert solution(\n    \"\"\"\n6 6\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n\"\"\"\n) == \"15\"\n\nassert solution(\n    \"\"\"\n6 6\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n\"\"\"\n) == \"15\"\n\nassert solution(\n    \"\"\"\n6 6\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n\"\"\"\n) == \"15\"\n\nassert solution(\n    \"\"\"\n6 6\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n\"\"\"\n) == \"15\"\n\nassert solution(\n    \"\"\"\n6 6\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n\"\"\"\n) == \"15\"\n\nassert solution(\n    \"\"\"\n6 6\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n\"\"\"\n) == \"15\"\n\nassert solution(\n    \"\"\"\n6 6\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n\"\"\"\n) == \"15\"\n\nassert solution(\n    \"\"\"\n6 6\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n\"\"\"\n) == \"15\"\n\nassert solution(\n    \"\"\"\n6 6\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n\"\"\"\n) == \"15\"\n\nassert solution(\n    \"\"\"\n6 6\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n\"\"\"\n) == \"15\"\n\nassert solution(\n    \"\"\"\n6 6\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n\"\"\"\n) == \"15\"\n\nassert solution(\n    \"\"\"\n6 6\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n\"\"\"\n) == \"15\"\n\nassert solution(\n    \"\"\"\n6 6\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n\"\"\"\n) == \"15\"\n\nassert solution(\n    \"\"\"\n6 6\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n\"\"\"\n) == \"15\"\n\nassert solution(\n    \"\"\"\n6 6\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n\"\"\"\n) == \"15\"\n\nassert solution(\n    \"\"\"\n6 6\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n\"\"\"\n) == \"15\"\n\nassert solution(\n    \"\"\"\n6 6\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n\"\"\"\n) == \"15\"\n\nassert solution(\n    \"\"\"\n6 6\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n\"\"\"\n) == \"15\"\n\nassert solution(\n    \"\"\"\n6 6\n1 1"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"6\\n\""
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 2\\n1 3\\n1 4') == 6\nassert solution('7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3') == 12\nassert solution('2 2\\n1 2\\n2 1') == -1"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n1 3\\n1 4\") == \"6\"\nassert solution(\"7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\") == \"12\"\nassert solution(\"2 2\\n1 2\\n2 1\") == \"-1\""
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"6\"\nassert solution() == \"12\"\nassert solution() == \"-1\""
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 2\\n1 3\\n1 4\\n\\n7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\\n2 2\\n1 2\\n2 1\\n\\n2 2\\n1 3\\n2 1\\n3 2\\n4 2\\n5 1\\n5 2\\n5 3\\n') == 6\nassert solution('7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\\n2 2\\n1 2\\n2 1\\n\\n2 2\\n1 3\\n2 1\\n3 2\\n4 2\\n5 1\\n5 2\\n5 3\\n') == 12\nassert solution('2 2\\n1 3\\n2 1\\n\\n2 2\\n1 3\\n2 1\\n3 2\\n4 2\\n5 1\\n5 2\\n5 3\\n') == -1"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n1 3\\n1 4\\n\") == \"6\\n\"\nassert solution(\"7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\") == \"12\\n\"\nassert solution(\"2 2\\n1 2\\n2 1\\n\") == \"-1\\n\""
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 2\\n1 3\\n1 4\\n') == 6\nassert solution('7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n') == 12\nassert solution('2 2\\n1 2\\n2 1\\n') == -1"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n1 3\\n1 4\") == 6\nassert solution(\"7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\") == 12\nassert solution(\"2 2\\n1 2\\n2 1\") == -1\nassert solution(\"1 1\\n1 2\") == 2\n"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n1 3\\n1 4\\n\") == 6\nassert solution(\"7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\") == 12\nassert solution(\"2 2\\n1 2\\n2 1\\n\") == -1"
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\\n5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\"\nassert solution(\"Input\\n3 2\\n1 0\\n1 1\\n0 1\") == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'NO'"
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"YES\"\n\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\") == \"YES\"\n\nassert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\"\n\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\") == \"NO\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"YES\"\n"
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\"\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\") == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\"\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\") == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"YES\", \"Please enter the input correctly\"\n"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n2 3 5 12\\n\") == \"Yes\"\nassert solution(\"2 7\\n2 3\\n\") == \"No\"\n"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Yes\" or solution(stdin) == \"No\"\n"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test failed. Input: {input()}, Output: {output}\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\n2 3 5 12\\n\") == \"Yes\\n\"\nassert solution(\"2 7\\n2 3\\n\") == \"No\\n\"\n"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == output, f\"The output {output} does not match the expected output {output}\"\nfor _ in range(test_cases):\n    n, k = map(int, input().split())\n    c = list(map(int, input().split()))\n\n    x, y = c[0], k\n\n    result = solution(str(n) + \" \" + str(k) + \" \" + \" \".join(map(str, c)))\n    assert result == \"Yes\" or result == \"No\", f\"The output {result} does not match the expected output {result}\"\n"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Function solution({input()}) should return {expected_output}, but it returned {solution(input())}.\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 5\\n2 3 5 12\\n') == 'Yes\\n'\nassert solution('2 7\\n2 3\\n') == 'No\\n'"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\n2 3 5 12\") == \"Yes\"\nassert solution(\"2 7\\n2 3\") == \"No\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\n2 3 5 12\\n\") == \"Yes\"\nassert solution(\"2 7\\n2 3\\n\") == \"No\"\n"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 1\") == 6\nassert solution(\"6 4 2\") == 8\nassert solution(\"2 3 4\") == -1\n"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4 1\") == 6\nassert solution(\"6 4 2\") == 8\nassert solution(\"2 3 4\") == -1\nassert solution(\"3 4 5\") == -1\nassert solution(\"4 5 3\") == -1\nassert solution(\"5 4 3\") == -1\nassert solution(\"4 4 3\") == -1\nassert solution(\"4 5 5\") == -1\nassert solution(\"5 5 4\") == -1\nassert solution(\"4 5 4\") == -1\nassert solution(\"5 5 5\") == -1\nassert solution(\"4 5 5\") == -1\nassert solution(\"5 5 5\") == -1\n"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4 1\") == \"6\"\nassert solution(\"6 4 2\") == \"8\"\nassert solution(\"2 3 4\") == \"-1\"\n"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 4, 1) == 6\nassert solution(6, 4, 2) == 8\nassert solution(2, 3, 4) == -1\n"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 1\") == 6\nassert solution(\"6 4 2\") == 8\nassert solution(\"2 3 4\") == -1\nassert solution(\"3 6 1\") == 12\nassert solution(\"5 5 1\") == 10"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 1\") == \"6\"\nassert solution(\"6 4 2\") == \"8\"\nassert solution(\"2 3 4\") == \"-1\""
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 1\\n6\\n8\\n2 3 4\\n-1\") == \"6\"\nassert solution(\"6 4 2\\n8\\n6\\n8 1 2 3 4\\n-1\") == \"8\"\nassert solution(\"2 3 4\\n-1\") == \"-1\""
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"6\"\nassert solution(stdin) == \"8\"\nassert solution(stdin) == \"-1\""
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"6\"\nassert solution(stdin) == \"8\"\nassert solution(stdin) == \"-1\""
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 1\") == 6\nassert solution(\"6 4 2\") == 8\nassert solution(\"2 3 4\") == -1\n"
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 2 4 3\\n3\\n4 1 1\\n4\\n0 3 0 4\") == \"2\"\nassert solution(\"3\\n4 1 1\\n4\\n0 3 0 4\") == \"2\"\nassert solution(\"4\\n0 3 0 4\\n4\\n\") == \"0\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Test failed: solution({input()}) should return {output()}, but got {solution(input())}\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"2\"\nassert solution(4) == \"0\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\", \"The first example should output '2'.\"\nassert solution() == \"2\", \"The second example should output '2'.\"\nassert solution() == \"2\", \"The third example should output '2'.\"\nassert solution() == \"0\", \"The fourth example should output '0'.\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2 2 4 3\\n\") == \"2\"\nassert solution(\"3\\n4 1 1\\n\") == \"2\"\nassert solution(\"4\\n0 3 0 4\\n\") == \"0\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2 2 4 3\\n\") == \"2\\n\"\nassert solution(\"3\\n4 1 1\\n\") == \"2\\n\"\nassert solution(\"4\\n0 3 0 4\\n\") == \"0\\n\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2 2 4 3\\n\") == \"2\\n\"\nassert solution(\"3\\n4 1 1\\n\") == \"2\\n\"\nassert solution(\"4\\n0 3 0 4\\n\") == \"0\\n\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8\\n10000011\") == \"5\"\nassert solution(\"2\\n01\") == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8\\n10000011\\n\") == \"5\"\nassert solution(\"2\\n01\\n\") == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('Input') == 'Output'"
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8\\n10000011\") == \"5\"\nassert solution(\"2\\n01\") == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8\\n10000011\") == \"5\"\nassert solution(\"2\\n01\") == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8\\n10000011\") == \"5\"\nassert solution(\"2\\n01\") == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(8) == \"5\"\nassert solution(2) == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"2\", \"Test 1\"\nassert solution(\"8\") == \"5\", \"Test 2\"\nassert solution(\"10000011\") == \"5\", \"Test 3\"\nassert solution(\"01\") == \"2\", \"Test 4\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('8\\n10000011') == '5'\nassert solution('2\\n01') == '2'"
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('8\\n10000011') == '5'\nassert solution('2\\n01') == '2'"
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n2 3 1 4\\n') == '3'\nassert solution('4\\n4 4 4 4\\n') == '-1'\nassert solution('4\\n2 1 4 3\\n') == '1'"
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 3 1 4\") == 3\nassert solution(\"4\\n4 4 4 4\") == -1\nassert solution(\"4\\n2 1 4 3\") == 1\n"
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution) == \"3\"\nassert solution(solution) == \"3\"\nassert solution(solution) == \"3\"\nassert solution(solution) == \"1\"\nassert solution(solution) == \"1\"\nassert solution(solution) == \"1\"\nassert solution(solution) == \"1\"\nassert solution(solution) == \"1\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 3 1 4\") == \"3\"\nassert solution(\"4\\n4 4 4 4\") == \"-1\"\nassert solution(\"4\\n2 1 4 3\") == \"1\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 3 1 4\\n\\n4\\n4 4 4 4\\n\\n4\\n2 1 4 3\\n\\n\") == \"3\"\nassert solution(\"4\\n4 4 4 4\\n\\n4\\n2 1 4 3\\n\\n\") == \"-1\"\nassert solution(\"4\\n2 1 4 3\\n\\n\") == \"1\"\n"
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\"\n"
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\nfor stdin, expected in [\n    (\"\", \"-1\"),\n    (\"4\", \"3\"),\n    (\"4\", \"-1\"),\n    (\"4\", \"1\"),\n]:\n    assert solution(stdin) == expected\n"
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3\"\n\nassert solution(stdin) == \"1\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2 3 1 4\\n4\\n4 4 4 4\\n4\\n2 1 4 3\") == \"3\\n\"\nassert solution(\"4\\n4 4 4 4\\n4\\n2 1 4 3\") == \"-1\\n\"\nassert solution(\"4\\n2 1 4 3\") == \"1\\n\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"4\\n1 3 2 0\\n\\n2\\n2 2\\n\\n1\\n2 2\\n\") == \"2\\n\"\nassert solution(stdin=\"7\\n1 3 3 2 1 2 3\\n\\n0\\n\") == \"0\\n\"\nassert solution(stdin=\"2\\n2 2\\n\\n1\\n2 2\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 3 2 0\\n2\\n1 3 3 2 1 2 3\\n0\\n2\\n2 2\\n1\") == \"2\\n1\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n0\\n2\\n1\") == \"0\\n1\"\nassert solution(\"2\\n2 2\\n1\") == \"1\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 3 2 0\\n2\\n1 3 3 2 1 2 3\\n2\\n2 2\\n1\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n0\\n1\\n\") == \"0\"\nassert solution(\"2\\n2 2\\n1\") == \"1\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\\n\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\\n\"\nassert solution(\"2\\n2 2\\n\") == \"1\\n\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\"\nassert solution(\"2\\n2 2\\n\") == \"1\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\"\nassert solution(\"2\\n2 2\\n\") == \"1\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 3 2 0\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\") == \"0\"\nassert solution(\"2\\n2 2\") == \"1\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\"\nassert solution(\"2\\n2 2\\n\") == \"1\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\\n\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\\n\"\nassert solution(\"2\\n2 2\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 3 2 0\\n2\\n1 3 3 2 1 2 3\\n0\\n2\\n2 2\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n2\\n1\\n0\\n\") == \"0\"\nassert solution(\"2\\n2 2\\n1\") == \"1\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"504\", \"Incorrect output\"\nassert solution(4) == \"120\", \"Incorrect output\"\nassert solution(5) == \"240\", \"Incorrect output\"\nassert solution(6) == \"480\", \"Incorrect output\"\nassert solution(7) == \"960\", \"Incorrect output\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9\\n\") == \"504\\n\"\nassert solution(\"7\\n\") == \"210\\n\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('9') == '504'\nassert solution('7') == '210'"
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\nfor input_str, output_str in [(\"9\", \"504\"), (\"7\", \"210\")]:\n    assert solution(input_str) == output_str\n"
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"504\\n\", \"Incorrect output\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(9) == \"504\", \"Test case 1\"\nassert solution(7) == \"210\", \"Test case 2\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Output\\n504', \"Test case failed\"\nassert solution(input()) == 'Output\\n210', \"Test case failed\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9\") == \"504\", \"Failed at Test case 1\"\nassert solution(\"7\") == \"210\", \"Failed at Test case 2\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"210\\n\", \"Output should be '210\\n', but got '{}'.\".format(solution())"
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_str) == output_str, f\"Test {test_case_number} failed. Input: {input_str}, Output: {output_str}\" for test_case_number, (input_str, output_str) in enumerate([\n    ([0, 0, 1, 1], [1, 1]),\n    ([1, 1, 2, 2], [1, 1]),\n    ([3, 0, 4, 1], [1, 1]),\n    ([0, 0, 1, 1], [1, 1]),\n    ([0, 1, 1, 2], [1, 1]),\n    ([1, 0, 2, 1], [1, 1]),\n    ([0, 0, 5, 5], [1, 1]),\n    ([0, 0, 4, 4], [1, 1]),\n    ([1, 1, 4, 4], [1, 1]),\n    ([1, 1, 4, 4], [1, 1]),\n    ([0, 0, 10, 8], [1, 1]),\n    ([1, 2, 6, 7], [1, 1]),\n    ([2, 3, 5, 6], [1, 1]),\n    ([3, 4, 4, 5], [1, 1]),\n    ([8, 1, 9, 2], [1, 1])\n])"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n3\n0 0 1 1\n1 1 2 2\n3 0 4 1\n''') == '''1 1'''\nassert solution('''\n3\n0 0 1 1\n0 1 1 2\n1 0 2 1\n''') == '''1 1'''\nassert solution('''\n4\n0 0 5 5\n0 0 4 4\n1 1 4 4\n1 1 4 4\n''') == '''1 1'''\nassert solution('''\n5\n0 0 10 8\n1 2 6 7\n2 3 5 6\n3 4 4 5\n8 1 9 2\n''') == '''3 4'''"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1 1\", \"The output should be '1 1'.\"\n"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n    return \\\"This code is not meant to be run.\\\"\"\n"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n\") == \"1 1\\n\"\nassert solution(\"0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\") == \"1 1\\n\"\nassert solution(\"0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n\") == \"1 1\\n\"\nassert solution(\"0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n\") == \"3 4\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n\") == \"1 1\\n\"\nassert solution(\"3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\") == \"1 1\\n\"\nassert solution(\"4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n\") == \"1 1\\n\"\nassert solution(\"5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n\") == \"3 4\\n\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '1 1\\n1 1\\n1 1\\n1 1\\n'"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n\") == \"1 1\\n\"\nassert solution(\"3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\") == \"1 1\\n\"\nassert solution(\"4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n\") == \"1 1\\n\"\nassert solution(\"5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n\") == \"3 4\\n\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n0 0 1 1\\n1 1 2 2\\n3 0 4 1') == '1 1\\n'\nassert solution('3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1') == '1 1\\n'\nassert solution('4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4') == '1 1\\n'\nassert solution('5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2') == '3 4\\n'"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1 1\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n18 55 16 17\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\") == \"YES\"\n"
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\\n4\\n18 55 16 17\\n\\nOutput\\nYES\\n\") == \"YES\"\nassert solution(\"Input\\n6\\n40 41 43 44 44 44\\n\\nOutput\\nNO\\n\") == \"NO\"\nassert solution(\"Input\\n8\\n5 972 3 4 1 4 970 971\\n\\nOutput\\nYES\\n\") == \"YES\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n18 55 16 17\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\") == \"YES\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n18 55 16 17\\n\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\\n\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\\n\") == \"YES\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n18 55 16 17\\n\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\\n\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\\n\") == \"YES\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Input\\n4\\n18 55 16 17\\n\\nOutput\\nYES\\n\\nInput\\n6\\n40 41 43 44 44 44\\n\\nOutput\\nNO\\n\\nInput\\n8\\n5 972 3 4 1 4 970 971\\n\\nOutput\\nYES\") == \"YES\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Input\\n4\\n18 55 16 17\\n\\nOutput\\nYES\\n\\nInput\\n6\\n40 41 43 44 44 44\\n\\nOutput\\nNO\\n\\nInput\\n8\\n5 972 3 4 1 4 970 971\\n\\nOutput\\nYES\\n\") == \"YES\"\nassert solution(\"Input\\n4\\n18 55 16 17\\n\\nOutput\\nYES\\n\\nInput\\n6\\n40 41 43 44 44 44\\n\\nOutput\\nNO\\n\\nInput\\n8\\n5 972 3 4 1 4 970 971\\n\\nOutput\\nYES\\n\") == \"YES\"\nassert solution(\"Input\\n4\\n18 55 16 17\\n\\nOutput\\nYES\\n\\nInput\\n6\\n40 41 43 44 44 44\\n\\nOutput\\nNO\\n\\nInput\\n8\\n5 972 3 4 1 4 970 971\\n\\nOutput\\nYES\\n\") == \"YES\"\nassert solution(\"Input\\n4\\n18 55 16 17\\n\\nOutput\\nYES\\n\\nInput\\n6\\n40 41 43 44 44 44\\n\\nOutput\\nNO\\n\\nInput\\n8\\n5 972 3 4 1 4 970 971\\n\\nOutput\\nYES\\n\") == \"YES\"\nassert solution(\"Input\\n4\\n18 55 16 17\\n\\nOutput\\nYES\\n\\nInput\\n6\\n40 41 43 44 44 44\\n\\nOutput\\nNO\\n\\nInput\\n8\\n5 972 3 4 1 4 970 971\\n\\nOutput\\nYES\\n\") == \"YES\"\nassert solution(\"Input\\n4\\n18 55 16 17\\n\\nOutput\\nYES\\n\\nInput\\n6\\n40 41 43 44 44 44\\n\\nOutput\\nNO\\n\\nInput\\n8\\n5 972 3 4 1 4 970 971\\n\\nOutput\\nYES\\n\") == \"YES\"\nassert solution(\"Input\\n4\\n18 55 16 17\\n\\nOutput\\nYES\\n\\nInput\\n6\\n40 41 43 44 44 44\\n\\nOutput\\nNO\\n\\nInput\\n8\\n5 972 3 4 1 4 970 971\\n\\nOutput\\nYES\\n\") == \"YES\"\nassert solution(\"Input\\n4\\n18 55 16 17\\n\\nOutput\\nYES\\n\\nInput\\n6\\n40 41 43 44 44 44\\n\\nOutput\\nNO\\n\\nInput\\n8\\n5 972 3 4 1 4 970 971\\n\\nOutput\\nYES\\n\") == \"YES\"\nassert solution(\"Input\\n4\\n18 55 16 17\\n\\nOutput\\nYES\\n\\nInput\\n6\\n40 41 43 44 44 44\\n\\nOutput\\nNO\\n\\nInput\\n8\\n5 972 3 4 1 4 970 971\\n\\nOutput\\nYES\\n\") == \"YES\"\nassert solution(\"Input\\n4\\n18 55 16 17\\n\\nOutput\\nYES\\n\\nInput\\n6"
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n18 55 16 17\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\") == \"YES\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n18 55 16 17\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\") == \"YES\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n18 55 16 17\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\") == \"YES\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3 9\n1 2 3\n1 2 3 7 8 9 11 12 13\"\"\") == \"9\"\nassert solution(\"\"\"5 5\n1 2 3 4 5\n1 2 3 4 5\"\"\") == \"10\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\") == \"9\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == \"10\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"9\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\") == \"9\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == \"10\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\") == \"9\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == \"10\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\") == \"9\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == \"10\"\n"
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\\n\") == 9\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\\n\") == 10"
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\") == 9\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == 10"
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == \"Vasya\"\nassert solution(2) == \"Petya\"\nassert solution(8) == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"Vasya\"\nassert solution(\"2\") == \"Petya\"\nassert solution(\"8\") == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 'Vasya'\nassert solution(2) == 'Petya'\nassert solution(8) == 'Petya'"
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n\") == \"Vasya\"\nassert solution(\"2\\n\") == \"Petya\"\nassert solution(\"8\\n\") == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"Vasya\"\nassert solution(2) == \"Petya\"\nassert solution(8) == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"Vasya\"\nassert solution(\"2\") == \"Petya\"\nassert solution(\"8\") == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"Vasya\"\nassert solution(\"2\") == \"Petya\"\nassert solution(\"8\") == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 'Vasya'\nassert solution(2) == 'Petya'\nassert solution(8) == 'Petya'"
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == \"Vasya\"\nassert solution(2) == \"Petya\"\nassert solution(8) == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Vasya\" or solution(input()) == \"Petya\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"For example, if you are given the input '{input()}', the output should be '{expected_output}'.\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('Input\\n2 2 3\\n1 2\\n2 2\\n2 1\\n\\nInput\\n1 5 3\\n1 3\\n1 1\\n1 5\\n\\nInput\\n4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\\n\\n\\n\\n\\nTest 1\\n\\nWe can use nuclear fusion and get the element from three other samples, so we don\\'t need to purchase anything.\\n\\n\\n\\nTest 2\\n\\nWe cannot use any nuclear fusion at all as there is only one row, so we have to purchase all missing elements.\\n\\n\\n\\nTest 3\\n\\nThere are several possible solutions.\\n\\n\\n\\nNote that after purchasing one element marked as red it\\'s still not possible to immidiately produce the middle element in the bottom row (marked as 4). So we produce the element in the left-top corner first (marked as 1), and then use it in future fusions.\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Test {t+1} failed: {solution(input())}!= {output()}\" for t, input, output in zip(range(1, 4), input(), output())"
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Got {solution(input())}, expected {expected}\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == expected_output, f\"Test {test_number}: Incorrect output. Expected: {expected_output}, Received: {solution(input_data)}\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test {test_case} failed. Expected: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 3\\n1 2\\n2 2\\n2 1\\n\") == \"0\\n\"\nassert solution(\"1 5 3\\n1 3\\n1 1\\n1 5\\n\") == \"2\\n\"\nassert solution(\"4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('Input\\n2 2 3\\n1 2\\n2 2\\n2 1\\n\\nInput\\n1 5 3\\n1 3\\n1 1\\n1 5\\n\\nInput\\n4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\\n\\nOutput\\n0\\n\\nOutput\\n2\\n\\nOutput\\n1\\n') == '0\\n2\\n1\\n'"
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 3\\n1 2\\n2 2\\n2 1\\n\") == \"0\"\nassert solution(\"1 5 3\\n1 3\\n1 1\\n1 5\\n\") == \"2\"\nassert solution(\"4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\\n\") == \"1\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Input:\\n{input()}\\nOutput:\\n{output()}\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\nA\") == \"3\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '2\\n'"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\nA\\nB\\nB\\nA\\n') == '2'\nassert solution('5\\nA\\nB\\nB\\nA\\nB\\n') == '5'\nassert solution('6\\nA\\nB\\nB\\nA\\nB\\n') == '4'\nassert solution('7\\nA\\nB\\nB\\nA\\nB\\n') == '3'\nassert solution('8\\nA\\nB\\nB\\nA\\nB\\n') == '2'\nassert solution('9\\nA\\nB\\nB\\nA\\nB\\n') == '1'\nassert solution('10\\nA\\nB\\nB\\nA\\nB\\n') == '0'"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nA\\nB\") == \"2\"\nassert solution(\"4\\nA\\nA\\A\\B\") == \"2\"\nassert solution(\"4\\nA\\A\\B\\B\") == \"2\"\nassert solution(\"4\\A\\A\\B\\B\") == \"2\"\nassert solution(\"4\\A\\A\\A\\A\") == \"2\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\\n\"\nassert solution(\"5\\nA\\nB\\nB\\nA\\nB\") == \"1\\n\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\nA\") == \"4\"\nassert solution(\"4\\nA\\nB\\nB\\xA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\xA\") == \"4\"\nassert solution(\"4\\nA\\nB\\nB\\xA\") == \"2\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\nA\") == \"1\"\nassert solution(\"4\\nA\\nB\\nB\\nA\") == \"0\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output\nprint(\"PASSED\")"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\nA\") == \"3\"\nassert solution(\"4\\nA\\nB\\nB\\xA\") == \"1\"\nassert solution(\"4\\nA\\nB\\nB\\xB\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\xA\") == \"3\"\nassert solution(\"4\\nA\\nB\\xB\\xB\") == \"4\"\nassert solution(\"4\\xA\\xB\\xB\\xB\") == \"5\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"6\"\nassert solution(\"4\\xA\\xB\\xA\\xA\") == \"7\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"8\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"9\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"10\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"11\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"12\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"13\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"14\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"15\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"16\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"17\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"18\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"19\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"20\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"21\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"22\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"23\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"24\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"25\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"26\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"27\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"28\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"29\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"30\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"31\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"32\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"33\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"34\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"35\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"36\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"37\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"38\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"39\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"40\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"41\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"42\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"43\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"44\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"45\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"46\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"47\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"48\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"49\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"50\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"51\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"52\"\nassert solution(\"4\\xA\\xA\\xA\\"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"5\\nA\\nB\\nA\\nA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nA\\nB\") == \"2\"\nassert solution(\"1\\nA\\nB\\nA\\nA\") == \"2\"\nassert solution(\"4\\nA\\nB\\A\\B\\A\\B\") == \"1\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 2\nassert solution(5) == 3"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '3'"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n2 3 4\\n') == '2\\n'\nassert solution('5\\n2 3 4 6 7\\n') == '3\\n'"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output() for input, output in zip(stdin_data, stdout_data)\n"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}, Actual output: {solution(input())}\"\n"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 2\nassert solution(5) == 3\n\nSolution:\n"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 3 4\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 6 7\") == \"3\\n\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"3\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\\n3\\n2 3 4\\n\") == \"Output\\n2\\n\"\nassert solution(\"Input\\n5\\n2 3 4 6 7\\n\") == \"Output\\n3\\n\"\nassert solution(\"Input\\n2\\n1 2 3 4\\n\") == \"Output\\n2\\n\"\nassert solution(\"Input\\n5\\n1 2 3 4 5\\n\") == \"Output\\n1\\n\"\nassert solution(\"Input\\n1\\n1 1 1 1\\n\") == \"Output\\n1\\n\"\nassert solution(\"Input\\n5\\n1 1 1 1 1\\n\") == \"Output\\n1\\n\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == '2'\nassert solution(5) == '3'"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\nA\\nB\\nC\\nABAAC\") == \"11\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\nABAAC\\n\") == \"11\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\nA\\nB\\nC\\n\") == \"11\\n\""
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\\n\", \"Output is incorrect.\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\nABAAC') == '11'"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\"\nassert solution(\"5\\nCBAAC\") == \"2\"\nassert solution(\"5\\nCCAAAC\") == \"2\"\nassert solution(\"5\\nABCAB\") == \"2\"\nassert solution(\"5\\nAAAAB\") == \"1\""
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\nA\\nB\\nC\\n') == '11'"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\\n\"\nassert solution(\"5\\nBBCAA\") == \"5\\n\"\nassert solution(\"5\\nCBABA\") == \"5\\n\"\nassert solution(\"5\\nAABC\") == \"6\\n\"\nassert solution(\"5\\nACABA\") == \"6\\n\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected, f\"Your solution is incorrect, expected {expected}, but got {solution}.\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\", \"Output should be 3\"\nassert solution() == \"3\", \"Output should be 3\"\nassert solution() == \"3\", \"Output should be 3\"\nassert solution() == \"3\", \"Output should be 3\"\nassert solution() == \"3\", \"Output should be 3\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n4 2\\n1 1\\n0 1\\n2 3\\n\") == \"3\\n\"\nassert solution(\"1023\\n1 2\\n1 0\\n1 2\\n1 1\\n\") == \"-1\\n\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n4 2\\n1 1\\n0 1\\n2 3\\n\") == \"3\\n\"\nassert solution(\"1023\\n1 2\\n1 0\\n1 2\\n1 1\\n\") == \"-1\\n\"\n"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '3', 'Expected output: 3, actual output: {}'.format(solution())"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Output: {output}, Expected: {output}\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == \"3\"\nassert solution(1023) == \"-1\"\nassert solution(\"5\\n4 2\\n1 1\\n0 1\\n2 3\\n\") == \"3\"\nassert solution(\"1023\\n1 2\\n1 0\\n1 2\\n1 1\\n\") == \"-1\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n4 2\\n1 1\\n0 1\\n2 3\\n\\n1023\\n1 2\\n1 0\\n1 2\\n1 1\\n') == '3'\nassert solution('1023\\n1 2\\n1 0\\n1 2\\n1 1\\n') == '-1'\nassert solution('5\\n4 2\\n1 1\\n0 1\\n2 3\\n\\n1023\\n1 2\\n1 0\\n1 2\\n1 1\\n') == '3'\nassert solution('1023\\n1 2\\n1 0\\n1 2\\n1 1\\n') == '-1'"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == '3\\n'"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected\n"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n4 5') == '2\\n'"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n4 5\") == \"2\\n\", \"Test failed: Incorrect output\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n4 5\\n\") == \"2\\n\"\nassert solution(\"1\\n1\\n\") == \"1\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"5\\n\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n4 5\") == \"2\\n\"\n\nsolution(\"2\\n4 5\")"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n4 5\") == \"2\"\nassert solution(\"3\\n1 2\") == \"1\"\nassert solution(\"1\\n3 4\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"0\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n4 5\") == \"2\\n\"\nassert solution(\"2\\n4 5 6 7 8 9\") == \"2\\n\"\nassert solution(\"2\\n4 5 6 7 8 9 10\") == \"3\\n\"\nassert solution(\"2\\n4 5 6 7 8 9 10 11\") == \"5\\n\"\nassert solution(\"2\\n4 5 6 7 8 9 10 11 12\") == \"9\\n\"\nassert solution(\"2\\n4 5 6 7 8 9 10 11 12 13\") == \"13\\n\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n4 5\") == \"2\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 5') == '2'\nassert solution('1 2 3 4 5') == '2'\nassert solution('2 3') == '2'\nassert solution('1 2 3 4') == '2'\nassert solution('1 2 3') == '2'\nassert solution('1 2') == '2'\nassert solution('1') == '2'\nassert solution('2') == '2'\nassert solution('3') == '2'"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n4 5\") == \"2\\n\", \"The function should return 2 as the minimum number of operations required to achieve the objective.\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test failed: {solution(input())}!= {output}\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 2 2 1') == 'YES\\n0 1 0 1 2 3 2'\nassert solution('1 2 3 4') == 'NO'\nassert solution('2 2 2 3') == 'NO'\nprint('All tests passed.')"
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is incorrect. Expected output: '{expected_output}'. Received output: '{solution(input())}'\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 'YES', 'Test failed'"
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"2 4\n1 3 2 4\n1 3 4 2\"\"\") == \"YES\"\nassert solution(\"\"\"4 4\n1 2 3 4\n2 3 4 1\n3 4 1 2\n4 1 2 3\"\"\") == \"NO\"\nassert solution(\"\"\"3 6\n2 1 3 4 5 6\n1 2 4 3 5 6\n1 2 3 4 6 5\"\"\") == \"YES\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"The output is: {output}, but it should be {solution(input())}\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'YES'"
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 4\\n1 3 2 4\\n1 3 4 2') == 'YES'\nassert solution('4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3') == 'NO'\nassert solution('3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5') == 'YES'"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Solution: {solution(input())}, Expected Output: {output()}\""
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(input())) == \"0\\n\""
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 1 1') == '0\\n'\nassert solution('1 2 1') == '666666672\\n'"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 2 1\") == \"666666672\"\n"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test failed\"\n"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1\\n\") == \"0\\n\"\nassert solution(\"1 2 1\\n\") == \"666666672\\n\""
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"0\"\nassert solution(input()) == \"666666672\""
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 2 1\") == \"666666672\"\n\nfrom functools import lru_cache\nfrom itertools import combinations"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '0'\n"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(6, 7, 2, 3, 1, 5, 6) == 5\n"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\\n\", \"Input error\"\n\nn = int(stdin.readline())\na = list(map(int, stdin.readline().split()))"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test case failed\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"5\\n\"\n"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 5\nprint(\"All tests passed successfully.\")"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 2 3 1 5 6\") == \"5\\n\"\nassert solution(\"10\") == \"11\\n\"\nassert solution(\"5\") == \"1\\n\"\nassert solution(\"100\") == \"101\\n\"\nassert solution(\"5 1 2 3 4\") == \"1\\n\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n6\n7 2 3 1 5 6\n\"\"\") == \"5\"\n\nassert solution(\n\"\"\"\n4\n7 2 3 1 5 6\n\"\"\") == \"3\"\n\nassert solution(\n\"\"\"\n5\n7 2 3 1 5 6\n\"\"\") == \"4\"\n\nassert solution(\n\"\"\"\n7\n7 2 3 1 5 6\n\"\"\") == \"5\"\n\nassert solution(\n\"\"\"\n9\n7 2 3 1 5 6\n\"\"\") == \"4\"\n\nassert solution(\n\"\"\"\n10\n7 2 3 1 5 6\n\"\"\") == \"5\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(6, 7, 2, 3, 1, 5, 6) == 5\nprint(\"All tests passed!\")"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"5\\n\"\n"
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Test case {test_case_id} failed. Output: {solution(input())}, Expected Output: {output()}\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1 8\") == \"2\", \"Wrong answer for sample test 1\"\nassert solution(\"4 2 2 6\") == \"3\", \"Wrong answer for sample test 2\"\nassert solution(\"3 7 4 6\") == \"1\", \"Wrong answer for sample test 3\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 1 1 8') == '2'\nassert solution('4 2 2 6') == '3'\nassert solution('3 7 4 6') == '1'\n"
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1 8\") == \"2\"\nassert solution(\"4 2 2 6\") == \"3\"\nassert solution(\"3 7 4 6\") == \"1\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1 8\") == \"2\", \"Your solution is incorrect.\"\nassert solution(\"4 2 2 6\") == \"3\", \"Your solution is incorrect.\"\nassert solution(\"3 7 4 6\") == \"1\", \"Your solution is incorrect.\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 8\") == \"2\", \"One\"\nassert solution(\"4 2 2 6\") == \"3\", \"Two\"\nassert solution(\"3 7 4 6\") == \"1\", \"Three\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1 8\") == \"2\"\nassert solution(\"4 2 2 6\") == \"3\"\nassert solution(\"3 7 4 6\") == \"1\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1 8\") == \"2\", \"Test case 1 failed\"\nassert solution(\"4 2 2 6\") == \"3\", \"Test case 2 failed\"\nassert solution(\"3 7 4 6\") == \"1\", \"Test case 3 failed\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1 8\") == \"2\"\nassert solution(\"4 2 2 6\") == \"3\"\nassert solution(\"3 7 4 6\") == \"1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: \\nInput: {input()}\\nExpected Output: {expected_output}\\nOutput: {solution(input())}\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 5\") == \"2\\n\"\nassert solution(\"-1 4 15\") == \"4\\n\"\nassert solution(\"0 -1 5\") == \"-1\\n\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 2 5') == '2'\nassert solution('-1 4 15') == '4'\nassert solution('0 -1 5') == '-1'"
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test case failed. Please check the sample cases and fix the code.\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Got '{solution(input())}', expected '{expected_output}'\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(f'1 2 5') == '2'\nassert solution(f'-1 4 15') == '4'\nassert solution(f'0 -1 5') == '-1'\n"
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\") == \"2\"\nassert solution(\"6 2\\n2 1 2 3 4 3\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\") == \"2\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\") == \"2\\n\"\nassert solution(\"6 2\\n2 1 2 3 4 3\") == \"0\\n\"\nassert solution(\"6 1\\n1 1 2 2 3 3\") == \"2\\n\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6 1\\n2 1 2 3 4 3') == '2'\nassert solution('6 2\\n2 1 2 3 4 3') == '0'\nassert solution('6 1\\n1 1 2 2 3 3') == '2'"
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(6, 1) == \"2\"\nassert solution(6, 2) == \"0\"\nassert solution(6, 1) == \"2\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\") == \"2\"\nassert solution(\"6 2\\n2 1 2 3 4 3\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\") == \"2\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\\n\") == \"2\"\nassert solution(\"6 2\\n2 1 2 3 4 3\\n\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\\n\") == \"2\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\\n\") == \"2\"\nassert solution(\"6 2\\n2 1 2 3 4 3\\n\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\\n\") == \"2\"\n\nfrom typing import List"
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == output, f\"The solution is incorrect. Please check your implementation. Expected: {output}, Received: {solution(stdin=input())}\"\n"
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\") == \"2\"\nassert solution(\"6 2\\n2 1 2 3 4 3\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\") == \"2\"\n"
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"monday\\ntuesday\") == \"NO\"\nassert solution(\"sunday\\nsunday\") == \"YES\"\nassert solution(\"saturday\\ntuesday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('monday') == 'NO'\nassert solution('tuesday') == 'NO'\nassert solution('sunday') == 'NO'\nassert solution('saturday') == 'NO'\n\nprint(\"YES\")"
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"NO\"\nassert solution(\"wednesday\") == \"NO\"\nassert solution(\"thursday\") == \"NO\"\nassert solution(\"friday\") == \"NO\"\nassert solution(\"saturday\") == \"NO\"\nassert solution(\"sunday\") == \"NO\"\nassert solution(\"saturday\") == \"YES\"\nassert solution(\"tuesday\") == \"YES\"\nassert solution(\"monday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"NO\"\nassert solution(\"sunday\") == \"NO\"\nassert solution(\"saturday\") == \"NO\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"YES\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"YES\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"YES\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"YES\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('monday') == 'NO'\nassert solution('tuesday') == 'NO'\nassert solution('wednesday') == 'NO'\nassert solution('thursday') == 'NO'\nassert solution('friday') == 'NO'\nassert solution('saturday') == 'NO'\nassert solution('sunday') == 'NO'\nassert solution('saturday') == 'YES'\nassert solution('tuesday') == 'YES'\nassert solution('sunday') == 'YES'"
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"monday\\ntuesday\") == \"YES\"\nassert solution(\"sunday\\nsunday\") == \"YES\"\nassert solution(\"saturday\\ntuesday\") == \"YES\"\nassert solution(\"monday\\nmonday\") == \"YES\"\nassert solution(\"tuesday\\nmonday\") == \"YES\"\nassert solution(\"wednesday\\nmonday\") == \"NO\"\nassert solution(\"thursday\\nmonday\") == \"NO\"\nassert solution(\"friday\\nmonday\") == \"NO\"\nassert solution(\"saturday\\nmonday\") == \"NO\"\nassert solution(\"sunday\\nsaturday\") == \"NO\"\nassert solution(\"saturday\\nmonday\") == \"NO\"\nassert solution(\"sunday\\nsunday\") == \"NO\"\nassert solution(\"saturday\\nmonday\") == \"NO\"\nassert solution(\"sunday\\nsunday\") == \"NO\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(35) == '17'\nassert solution(10000000000) == '91'"
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(35) == \"17\"\nassert solution(10000000000) == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(35) == 17\nassert solution(10000000000) == 91"
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"35\") == \"17\"\nassert solution(\"10000000000\") == \"91\"\n\nfrom typing import List"
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"35\") == \"17\"\nassert solution(\"10000000000\") == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(35) == '17'\nassert solution(10000000000) == '91'\n"
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(35) == '17'\nassert solution(10000000000) == '91'"
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"35\") == \"17\"\nassert solution(\"10000000000\") == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('35') == '17'\nassert solution('10000000000') == '91'"
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"35\") == \"17\"\nassert solution(\"10000000000\") == \"91\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"AHA\") == \"YES\", \"Test 1: AHA\"\nassert solution(\"Z\") == \"NO\", \"Test 2: Z\"\nassert solution(\"XO\") == \"NO\", \"Test 3: XO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('AHA') == 'YES'\nassert solution('Z') == 'NO'\nassert solution('XO') == 'NO'"
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('AHA') == 'YES'\nassert solution('Z') == 'NO'\nassert solution('XO') == 'NO'"
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('AHA') == 'YES'\nassert solution('Z') == 'NO'\nassert solution('XO') == 'NO'"
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('AHA') == 'YES', 'Test failed for solution 1'\nassert solution('Z') == 'NO', 'Test failed for solution 2'\nassert solution('XO') == 'NO', 'Test failed for solution 3'"
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n1 5\\n') == '0\\n'\nassert solution('3\\n1 2 5\\n') == '1\\n'"
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\\n\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\\n\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\\n\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 5\") == \"0\"\nassert solution(\"3 1 2 5\") == \"1\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\\n\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Solution failed: expected {output()}, got {solution(input())}\"\n\ninput_ = [int(x) for x in input().split()]\nassert solution(str(input_)) == output(), f\"Solution failed: expected {output()}, got {solution(str(input_))}\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 2\\nRU') == 'Yes', 'Test case 1 failed'\nassert solution('1 2\\nRU') == 'No', 'Test case 2 failed'\nassert solution('-1 1000000000\\nLRRLU') == 'Yes', 'Test case 3 failed'\nassert solution('0 0\\nD') == 'Yes', 'Test case 4 failed'"
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\"\nassert solution(\"1 2\\nRU\") == \"No\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\"\nassert solution(\"0 0\\nD\") == \"Yes\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\", \"Test 1 failed\"\nassert solution(\"1 2\\nRU\") == \"No\", \"Test 2 failed\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\", \"Test 3 failed\"\nassert solution(\"0 0\\nD\") == \"Yes\", \"Test 4 failed\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 2\\nRU') == 'Yes\\n', \"Expected 'Yes', got '{}'.\".format(solution('2 2\\nRU'))\nassert solution('1 2\\nRU') == 'No\\n', \"Expected 'No', got '{}'.\".format(solution('1 2\\nRU'))\nassert solution('-1 1000000000\\nLRRLU') == 'Yes\\n', \"Expected 'Yes', got '{}'.\".format(solution('-1 1000000000\\nLRRLU'))\nassert solution('0 0\\nD') == 'Yes\\n', \"Expected 'Yes', got '{}'.\".format(solution('0 0\\nD'))"
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 2\\nRU') == 'Yes'\nassert solution('1 2\\nRU') == 'No'\nassert solution('-1 1000000000\\nLRRLU') == 'Yes'\nassert solution('0 0\\nD') == 'Yes'"
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 2\\nRU') == 'Yes\\n'\nassert solution('1 2\\nRU') == 'No\\n'\nassert solution('-1 1000000000\\nLRRLU') == 'Yes\\n'\nassert solution('0 0\\nD') == 'Yes\\n'"
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\"\nassert solution(\"1 2\\nRU\") == \"No\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\"\nassert solution(\"0 0\\nD\") == \"Yes\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\", \"Test case 1\"\nassert solution(\"1 2\\nRU\") == \"No\", \"Test case 2\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\", \"Test case 3\"\nassert solution(\"0 0\\nD\") == \"Yes\", \"Test case 4\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 2\\nRU') == 'Yes', \"The correct answer for the first test case is 'Yes'\"\nassert solution('1 2\\nRU') == 'No', \"The correct answer for the second test case is 'No'\"\nassert solution('-1 1000000000\\nLRRLU') == 'Yes', \"The correct answer for the third test case is 'Yes'\"\nassert solution('0 0\\nD') == 'Yes', \"The correct answer for the fourth test case is 'Yes'\"\n\nprint('All test cases passed.')"
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\", \"Empty input should return 0\"\nassert solution(\"1 2 3\") == \"1\", \"One valid input should return 1\"\nassert solution(\"1 2 3 4 5\") == \"1\", \"More than one valid input should return 1\"\nassert solution(\"10 3 7\") == \"1\", \"One valid input should return 1\"\nassert solution(\"22 19 3\") == \"0\", \"Two valid inputs should return 0\"\nassert solution(\"60 29 31 358\") == \"0\", \"More than two valid inputs should return 0\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\") == 0, \"Test 1\"\nassert solution(\"2\") == 0, \"Test 2\"\nassert solution(\"12\") == 1, \"Test 3\"\nassert solution(\"314\") == 0, \"Test 4\"\nassert solution(\"22 19 3\") == 1, \"Test 5\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\"   60   \\n 29   \\n  \\n 31   \\n  \\n  \\n\") == \"1\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\"   60\\n29\\n   31\\n   31\\n\") == \"1\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 3 7\") == \"1\\n\"\nassert solution(\"10   3   7\") == \"1\\n\"\nassert solution(\"314\") == \"0\\n\"\nassert solution(\"22 19 3\") == \"1\\n\"\nassert solution(\"10\\n3\\n7\") == \"1\\n\"\nassert solution(\"60\\n\\n29\\n\\n\\n31\\n\\n\\n\\n\") == \"1\\n\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10 3 7') == '1\\n', 'The output should be 1'\nassert solution('10   3   7') == '1\\n', 'The output should be 1'\nassert solution('314') == '0\\n', 'The output should be 0'\nassert solution('22 19 3') == '1\\n', 'The output should be 1'\nassert solution('   60  29\\n31\\n31\\n31\\n31\\n') == '1\\n', 'The output should be 1'"
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 3 7\") == \"1\\n\"\nassert solution(\"10   3   7\") == \"1\\n\"\nassert solution(\"314\") == \"0\\n\"\nassert solution(\"22 19 3\") == \"1\\n\"\nassert solution(\"   60\\n   29\\n   \\t   31\\n   \\t    \\t    \\t    \") == \"1\\n\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 3 7\") == \"1\\n\"\nassert solution(\"10   3   7\") == \"1\\n\"\nassert solution(\"314\") == \"0\\n\"\nassert solution(\"22 19 3\") == \"1\\n\"\nassert solution(\"   60\\n29\\n\\t31\\n\\t\\t\\t\\t\\t\\t31\\n\") == \"1\\n\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\"   60 \\n29\\n\\n   31\\n\\n    \\n    \\n    \") == \"1\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 3 7\") == \"1\\n\", \"Sample Input 1: 10 3 7\"\nassert solution(\"10   3   7\") == \"1\\n\", \"Sample Input 2: 10   3   7\"\nassert solution(\"314\") == \"0\\n\", \"Sample Input 3: 314\"\nassert solution(\"22 19 3\") == \"1\\n\", \"Sample Input 4: 22 19 3\"\nassert solution(\"60\\n29\\n\\n31\\n\\n\\n\\n\\n\") == \"1\\n\", \"Sample Input 5: 60\\n29\\n\\n31\\n\\n\\n\\n\\n\\n\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '9', 'The code is not correct.'\nprint('The code is correct.')"
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"9\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"9\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"9\"\nassert solution(\"10\") == \"10\"\nassert solution(\"100\") == \"12\"\nassert solution(\"1000\") == \"13\"\nassert solution(\"1000000\") == \"15\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"9\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n\") == \"9\\n\"\nassert solution(\"2\\n\") == \"18\\n\"\nassert solution(\"3\\n\") == \"38\\n\"\nassert solution(\"4\\n\") == \"70\\n\"\nassert solution(\"5\\n\") == \"107\\n\"\nassert solution(\"6\\n\") == \"170\\n\"\nassert solution(\"7\\n\") == \"256\\n\"\nassert solution(\"8\\n\") == \"377\\n\"\nassert solution(\"9\\n\") == \"521\\n\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n\") == \"9\\n\"\nassert solution(\"2\\n\") == \"18\\n\"\nassert solution(\"3\\n\") == \"36\\n\"\nassert solution(\"4\\n\") == \"49\\n\"\nassert solution(\"5\\n\") == \"57\\n\"\nassert solution(\"6\\n\") == \"60\\n\"\nassert solution(\"7\\n\") == \"69\\n\"\nassert solution(\"8\\n\") == \"73\\n\"\nassert solution(\"9\\n\") == \"81\\n\"\n"
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"9\\n\", \"Output does not match expected output\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"9\"\n\nprint(solution(\"1000000000\"))"
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"9\"\nassert solution(input()) == \"9\"\nassert solution(input()) == \"9\"\nassert solution(input()) == \"9\"\nassert solution(input()) == \"9\"\nassert solution(input()) == \"9\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 4, \"Test 4 failed\"\nassert solution() == 3, \"Test 3 failed\"\nassert solution() == -1, \"Test -1 failed\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output\nprint(\"All test cases passed\")"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n3 6 28 9\") == 4\nassert solution(\"5\\n5 12 9 16 48\") == 3\nassert solution(\"4\\n1 2 4 8\") == -1"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is incorrect. Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Solution is incorrect. Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n3 6 28 9') == '4'\nassert solution('5\\n5 12 9 16 48') == '3'\nassert solution('4\\n1 2 4 8') == '-1'"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 6, 28, 9) == 4\nassert solution(5, 12, 9, 16, 48) == 3\nassert solution(4, 1, 2, 4, 8) == -1"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"4\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"-1\"\nassert solution(stdin) == \"-1\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n3 6 28 9\\n\") == \"4\\n\"\nassert solution(\"5\\n5 12 9 16 48\\n\") == \"3\\n\"\nassert solution(\"4\\n1 2 4 8\\n\") == \"-1\\n\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 2, \"Test 1\"\nassert solution(7) == 1, \"Test 2\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n0 5 0 2 3\") == \"2\"\nassert solution(\"7\\n1 0 0 5 0 0 2\") == \"1\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"The output does not match the expected output\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n0 5 0 2 3\") == \"2\\n\"\nassert solution(\"7\\n1 0 0 5 0 0 2\") == \"1\\n\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 3\nassert solution(4) == 3\nassert solution(5) == 2\nassert solution(6) == 1\nassert solution(7) == 1"
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n0 5 0 2 3') == '2\\n'\nassert solution('7\\n1 0 0 5 0 0 2') == '1\\n'"
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n0 5 0 2 3') == '2\\n'\nassert solution('7\\n1 0 0 5 0 0 2') == '1\\n'"
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n0 5 0 2 3') == '2'\nassert solution('7\\n1 0 0 5 0 0 2') == '1'"
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n0 5 0 2 3') == '2\\n'\nassert solution('7\\n1 0 0 5 0 0 2') == '1\\n'"
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n0 5 0 2 3\") == \"2\"\nassert solution(\"7\\n1 0 0 5 0 0 2\") == \"1\""
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4) == \"2\\n\", \"Expected output '2', but got '{}' instead.\".format(solution(4))\nassert solution(5) == \"5\\n\", \"Expected output '5', but got '{}' instead.\".format(solution(5))\n\nprint(\"All tests passed.\")"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output() # check if the output matches the expected output"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4') == '2'\nassert solution('5') == '5'"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4) == 2\nassert solution(5) == 5\n\nsolution = lambda n: 2 # Add more test cases as per your requirement"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4') == 2\nassert solution('5') == 5"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n\") == \"2\\n\"\nassert solution(\"5\\n\") == \"5\\n\""
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n') == '2\\n'\nassert solution('5\\n') == '5\\n'"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4) == 2\nassert solution(5) == 5"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(4) == \"2\"\nassert solution(5) == \"5\""
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"5\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n\") == \"18\\n3 4 \\n1 5 \\n\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\\n\") == \"31\\n1 2 \\n3 4 \\n\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n\") == \"23\\n1 3 5 \\n4\\n\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n\") == \"18\\n3 4 \\n1 5 \\n\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\\n\") == \"31\\n1 2 \\n3 4 \\n\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n\") == \"23\\n1 3 5 \\n4\\n\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n') == '18\\n3 4 \\n1 5 \\n'\n\nassert solution('4 2 2\\n10 8 8 3\\n10 7 9 4\\n') == '31\\n1 2 \\n3 4 \\n'\n\nassert solution('5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n') == '23\\n1 3 5 \\n4\\n'"
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n\\n4 2 2\\n10 8 8 3\\n10 7 9 4\\n\\n5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n\") == \"18\\n3 4 \\n1 5 \\n\\n31\\n1 2 \\n3 4 \\n\\n23\\n1 3 5 \\n4\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\\n\\n5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n\") == \"31\\n1 2 \\n3 4 \\n\\n23\\n1 3 5 \\n4\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"18\\n3 4 \\n1 5 \""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\") == \"18\\n3 4\\n1 5\\n\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\") == \"31\\n1 2\\n3 4\\n\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\") == \"23\\n1 3 5\\n4\\n\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n5 2 2\n1 3 4 5 2\n5 3 2 1 4\n''') == '''\n18\n3 4 \n1 5 \n'''\n\nassert solution('''\n4 2 2\n10 8 8 3\n10 7 9 4\n''') == '''\n31\n1 2 \n3 4 \n4\n'''\n\nassert solution('''\n5 3 1\n5 2 5 1 7\n6 3 1 6 3\n''') == '''\n23\n1 3 5 \n4\n'''"
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\") == \"18\\n3 4\\n1 5\\n\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\") == \"31\\n1 2\\n3 4\\n\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\") == \"23\\n1 3 5\\n4\\n\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n5 2 2\n1 3 4 5 2\n5 3 2 1 4\n''') == '''\n18\n3 4 \n1 5 \n\n'''\n\nassert solution('''\n4 2 2\n10 8 8 3\n10 7 9 4\n''') == '''\n31\n1 2 \n3 4 \n\n'''\n\nassert solution('''\n5 3 1\n5 2 5 1 7\n6 3 1 6 3\n''') == '''\n23\n1 3 5 \n4\n'''"
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n\") == \"18\\n3 4 \\n1 5 \\n\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\\n\") == \"31\\n1 2 \\n3 4 \\n\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n\") == \"23\\n1 3 5 \\n4\\n\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, \"Test case failed\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n2 1\n1 2\n''') == 'Yes'\nassert solution('''\n4 3\n1 2\n1 3\n1 4\n''') == 'No'\n"
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"Yes\\naa\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"No\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"Yes\\naa\\n\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"No\\n\"\nassert solution(\"1 1\\n1 2\\n1 3\\n\") == \"No\\n\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Error: Expected {output}, but got {solution(input())}\"\n"
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"Yes\\naa\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"No\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n1 3\\n1 4\") == \"No\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\") == \"Yes\\na\\n\"\nassert solution(\"2 1\\n1 2\\n1 3\\n1 4\") == \"No\"\nassert solution(\"2 1\\n1 2\\n1 3\\n2 4\") == \"No\"\nassert solution(\"2 1\\n1 2\\n1 4\\n1 3\") == \"No\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"solution({input()}) should return {expected}, but got {solution(input())}.\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\\n2 1\\n1 2\\n\\nInput\\n4 3\\n1 2\\n1 3\\n1 4\\n\\nOutput\\nNo\") == \"No\"\nassert solution(\"Input\\n2 1\\n1 2\\n\\nInput\\n4 3\\n1 2\\n1 3\\n1 4\\n\\nOutput\\nYes\") == \"Yes\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n    2 1\n    1 2\n    \"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n    4 3\n    1 2\n    1 3\n    1 4\n    \"\"\") == \"No\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n0 1 1\n1 0 1\n1 1 0\n3\n''') == '7\\n'\n\nassert solution('''\n0 2 2\n1 0 100\n1 2 0\n3\n''') == '19\\n'\n\nassert solution('''\n0 2 1\n1 0 100\n1 2 0\n5\n''') == '87\\n'"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(0, 1, 1) == 7, \"Output should be 7\"\nassert solution(0, 2, 2) == 19, \"Output should be 19\"\nassert solution(0, 2, 1) == 87, \"Output should be 87\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"7\\n\", \"The output is not correct.\\n\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 1 1\\n1 0 1\\n1 1 0\\n3\") == \"7\\n\"\nassert solution(\"0 2 2\\n1 0 100\\n1 2 0\\n3\") == \"19\\n\"\nassert solution(\"0 2 1\\n1 0 100\\n1 2 0\\n5\") == \"87\\n\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(0) == 1, \"Test case 1\"\nassert solution(1) == 2, \"Test case 2\"\nassert solution(2) == 2, \"Test case 3\"\nassert solution(3) == 3, \"Test case 4\"\nassert solution(4) == 3, \"Test case 5\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(0) == 7\nassert solution(1) == 10\nassert solution(2) == 23\nassert solution(3) == 81\nassert solution(4) == 278\nassert solution(5) == 868\n"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 1 1\\n1 0 1\\n1 1 0\\n3\") == \"7\"\nassert solution(\"0 2 2\\n1 0 100\\n1 2 0\\n3\") == \"19\"\nassert solution(\"0 2 1\\n1 0 100\\n1 2 0\\n5\") == \"87\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('0 1 1\\n1 0 1\\n1 1 0\\n3\\n\\n0 2 2\\n1 0 100\\n1 2 0\\n3\\n\\n0 2 1\\n1 0 100\\n1 2 0\\n5\\n') == '7\\n'\nassert solution('0 2 2\\n1 0 100\\n1 2 0\\n3\\n\\n0 2 1\\n1 0 100\\n1 2 0\\n5\\n') == '19\\n'\nassert solution('0 2 1\\n1 0 100\\n1 2 0\\n5\\n\\n0 2 2\\n1 0 100\\n1 2 0\\n3\\n') == '87\\n'"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 1 1\\n1 0 1\\n1 1 0\\n3\") == \"7\"\nassert solution(\"0 2 2\\n1 0 100\\n1 2 0\\n3\") == \"19\"\nassert solution(\"0 2 1\\n1 0 100\\n1 2 0\\n5\") == \"87\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 1 1\\n1 0 1\\n1 1 0\\n3\\n\") == \"7\\n\"\nassert solution(\"0 2 2\\n1 0 100\\n1 2 0\\n3\\n\") == \"19\\n\"\nassert solution(\"0 2 1\\n1 0 100\\n1 2 0\\n5\\n\") == \"87\\n\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Bulbbasaur') == '1'\nassert solution('F') == '0'\nassert solution('aBddulbasaurrgndgbualdBdsagaurrgndbb') == '2'"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Bulbbasaur\") == 1\nassert solution(\"F\") == 0\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == 2"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Bulbbasaur\") == 1\nassert solution(\"F\") == 0\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == 2"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('Bulbbasaur') == '1'\nassert solution('F') == '0'\nassert solution('aBddulbasaurrgndgbualdBdsagaurrgndbb') == '2'"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Bulbbasaur\") == 1\nassert solution(\"F\") == 0\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == 2"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\narc\\nrac\") == \"YES\\n\"\nassert solution(\"2 3\\nabc\\ndef\") == \"NO\\n\"\nassert solution(\"3 3\\nabc\\ndef\") == \"NO\\n\"\nassert solution(\"3 3\\nabc\\nxyz\") == \"NO\\n\"\nassert solution(\"1 3\\nabc\\ndef\") == \"NO\\n\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\narc\\nrac\") == \"YES\"\nassert solution(\"4 3\\nbcd\\nfoo\") == \"NO\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\narc\\nrac\\n\") == \"YES\"\nassert solution(\"2 3\\nabc\\ndef\\n\") == \"NO\"\nassert solution(\"2 3\\nabc\\ndef\\n\") == \"YES\"\nassert solution(\"2 3\\nabc\\ndef\\n\") == \"NO\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'YES'"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 3\\narc\\nrac') == 'YES'"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3\\narc\\nrac\\n') == 'YES'"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\narc\\nrac\") == \"YES\"\nassert solution(\"4 4\\nabc\\ndef\") == \"NO\"\n"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"YES\"\nprint(\"YES\")"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\narc\\nrac\") == \"YES\"\nassert solution(\"2 3\\nbcc\") == \"NO\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\narc\\nrac\") == \"YES\"\nassert solution(\"2 3\\nabc\\ndef\") == \"NO\"\nassert solution(\"5 6\\nabc\\ndef\\nghi\") == \"NO\""
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\\n\") == \"4\\n\"\n"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n3 111\n1111\n10111\n10010\n\"\"\"\n) == \"4\\n\"\n\ncount = 0\nfor _ in range(3):\n    x = int(input())\n    for i in range(1, x+1):\n        count += bin(1 << i).count(\"1\")\n\nprint(count % 998244353)"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n\""
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n\"\nassert solution(\"5 111\\n1111\\n10111\\n10010\") == \"1\\n\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n\"\nassert solution(\"3 111\\n1111\\n10"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\\n\") == \"4\\n\"\nassert solution(\"5 10010\\n101010\\n1000101\\n1101100\\n1110111\\n\") == \"3\\n\""
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\\n\") == \"4\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\\n\") == \"4\""
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 111\\n1111\\n10111\\n10010') == '4\\n'\n\nsolution('3 111\\n1111\\n10111\\n10010')"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\\n\") == \"4\\n\\n15\\n23\\n18\""
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\\n\") == \"4\\n\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('11 11 5') == '1'\nassert solution('11 2 3') == '-1'"
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11 11 5\\n\") == \"1\\n\"\nassert solution(\"11 2 3\\n\") == \"-1\\n\"\nassert solution(\"2 2 2\\n\") == \"2\\n\"\nassert solution(\"3 3 3\\n\") == \"3\\n\"\nassert solution(\"10 10 10\\n\") == \"-1\\n\"\nassert solution(\"5 10 20\\n\") == \"-1\\n\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11 11 5\\n\") == \"1\\n\"\nassert solution(\"11 2 3\\n\") == \"-1\\n\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 1, \"Test 1 failed\"\nassert solution() == 1, \"Test 2 failed\"\nassert solution() == -1, \"Test 3 failed\"\n\nfrom typing import List"
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11 11 5\") == \"1\\n\"\nassert solution(\"11 2 3\") == \"-1\\n\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11 11 5\") == \"1\\n\"\nassert solution(\"11 2 3\") == \"-1\\n\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11 11 5\") == \"1\\n\"\nassert solution(\"11 2 3\") == \"-1\\n\"\nassert solution(\"12 11 5\") == \"-1\\n\"\nassert solution(\"2 1 1\") == \"-1\\n\"\nassert solution(\"1000 1000 1000\") == \"-1\\n\"\nassert solution(\"1 10 10\") == \"1\\n\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\"\nassert solution(\"11 10 10\") == \"1\"\nassert solution(\"10 10 10\") == \"1\"\nassert solution(\"10 10 9\") == \"2\"\nassert solution(\"9 10 11\") == \"1\"\nassert solution(\"10 10 10\") == \"2\"\nassert solution(\"10 10 9\") == \"2\"\nassert solution(\"9 10 11\") == \"1\"\nassert solution(\"10 10 10\") == \"2\"\nassert solution(\"10 10 9\") == \"2\"\nassert solution(\"9 10 11\") == \"1\"\nassert solution(\"10 10 10\") == \"2\"\nassert solution(\"10 10 9\") == \"2\"\nassert solution(\"9 10 11\") == \"1\"\nassert solution(\"10 10 10\") == \"2\"\nassert solution(\"10 10 9\") == \"2\"\nassert solution(\"9 10 11\") == \"1\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('11 11 5\\n') == '1\\n'\nassert solution('11 2 3\\n') == '-1\\n'\n\nprint('All test cases passed!')"
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\"\n"
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('abacaba') == 'YES'\nassert solution('jinotega') == 'NO'"
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('abacaba') == 'YES'\nassert solution('jinotega') == 'NO'"
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\"\n"
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\"\n"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"3 2 6\") == \"6.5\"\nassert solution(stdin=\"4 2 20\") == \"20.0\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\"\n\nfrom typing import List"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 2 6') == '6.5'\nassert solution('4 2 20') == '20.0'"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\"\nassert solution(\"5 1 2\") == \"2.0\"\n"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 2, 6) == 6.5\nassert solution(4, 2, 20) == 20.0\n\nfrom typing import List"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 2 6') == '6.5'\nassert solution('4 2 20') == '20.0'"
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\\n4 4\\n....\\n#.#.\\n....\\n.#..\\n\") == \"2\\n\"\nassert solution(\"4 4\\n....\\n.##.\\n....\\n\") == \"1\\n\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\\n\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\") == \"2\\n\"\nassert solution(\"4 4\\n....\\n#.#.\\n....\\n.#..\\n\") == \"1\\n\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\\n\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n..\\n..\") == \"2\"\nassert solution(\"4 4\\n....\\n#.#.\\n....\\n.#..\") == \"1\"\nassert solution(\"3 4\\n....\\n.##.\\n....\") == \"2\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    2 2\n    1 1\n    1 1\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    4 4\n    1 1\n    1 1\n    1 1\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n    3 4\n    1 1\n    1 1\n    1 1\n    \"\"\"\n) == \"2\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\") == \"2\"\nassert solution(\"4 4\\n....\\n#.#.\\n....\\n.#..\\n\") == \"1\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n2 2\n..\n..\n''') == '2\\n'\n\nassert solution('''\n4 4\n....\n"
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''2 2\n..\n..''') == '2'\nassert solution('''4 4\n....\n"
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\\n4 4\\n....\\n#.#.\\n....\\n.#..\\n\") == \"2\"\nassert solution(\"4 4\\n....\\n.##.\\n....\\n\\n3 4\\n....\\n.##.\\n....\\n\") == \"1\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\\n\") == \"2\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n..\\n..\") == \"2\"\nassert solution(\"4 4\\n....\\n#.#.\\n....\\n.#..\") == \"1\"\nassert solution(\"3 4\\n....\\n.##.\\n....\") == \"2\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n..\\n..\") == \"2\"\nassert solution(\"4 4\\n....\\n#.#.\\n....\\n.#..\") == \"1\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\"\n\nfrom typing import List"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1 3\\n\") == \"6\\n\"\nassert solution(\"5\\n2 1 4 3 2\\n\") == \"200\\n\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_str) == output_str, f\"Expected {output_str}, got {solution(input_str)}\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '6', 'The output does not match the expected output.'"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"6\\n\"\nprint(\"All test cases passed successfully.\")"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\"\nassert solution(\"3\\n1 2 3\") == \"10\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1 1 3\\n') == '6'\n"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\"\nassert solution(\"10\\n2 1 3 4\") == \"31\"\nassert solution(\"5\\n3 1 2 3\") == \"2\"\nassert solution(\"1\\n1\") == \"1\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"6\\n\", \"Incorrect output.\"\nassert solution(input()) == \"6\\n\", \"Incorrect output.\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\\n\"\n"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == output, f\"Expected output: {output}, but got {solution(stdin=input())}\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n1 4 3 7 5') == '11\\n3\\n1\\n4\\n2'"
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"11\\n3\\n1\\n4\\n2\"\nassert solution(input()) == \"11\\n3\\n1\\n4\\n2\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"11\\n3\\n1\\n4\\n2\"\nprint(\"The solution is correct\")"
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\"\nassert solution(\"5\\n2 4 5 7 3\") == \"11\\n3\\n1\\n4\\n2\"\nassert solution(\"5\\n1 2 3 4 5\") == \"11\\n3\\n1\\n4\\n2\"\nassert solution(\"5\\n1 4 3 7 5\\n2 4 5 7 3\") == \"11\\n3\\n1\\n4\\n2\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\\n\"\nassert solution(\"3\\n1 2 3 4 5\") == \"11\\n2\\n1\\n4\\n3\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"11\\n2\\n1\\n4\\n3\\n\"\nassert solution(\"2\\n1 2 3 4 5\") == \"11\\n2\\n1\\n4\\n3\\n\"\nassert solution(\"1\\n1 2 3 4 5\") == \"11\\n1\\n2\\n3\\n4\\n5\\n\"\nassert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\\n\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n1 4 3 7 5\\n') == '11\\n3\\n1\\n4\\n2\\n'"
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\na_1 a_2... a_N') == '11\\n3\\n1\\n4\\n2\\n'"
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"10\\n2\\n\"\nassert solution(\"15\\n1 2 3 4 5 6 7 8 9\") == \"10\\n2\\n\"\nassert solution(\"100\\n1 2 3 4 5 6 7 8 9\") == \"100\\n1\\n\"\nassert solution(\"1000\\n1 2 3 4 5 6 7 8 9\") == \"1000\\n1\\n\"\nassert solution(\"10000\\n1 2 3 4 5 6 7 8 9\") == \"10000\\n1\\n\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 1\\n10.245\\n') == '10.25\\n'\nassert solution('6 2\\n10.245\\n') == '10.3\\n'\nassert solution('3 100\\n9.2\\n') == '9.2\\n'"
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"10.25\", \"Incorrect output\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 1\\n10.245\\n\") == \"10.25\\n\"\nassert solution(\"6 2\\n10.245\\n\") == \"10.3\\n\"\nassert solution(\"3 100\\n9.2\\n\") == \"9.2\\n\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '10.25', \"Expected '10.25', got: {}\".format(solution(input()))\n"
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 1\\n10.245\") == \"10.25\\n\"\nassert solution(\"6 2\\n10.245\") == \"10.3\\n\"\nassert solution(\"3 100\\n9.2\") == \"9.2\\n\"\nassert solution(\"6 0\\n10.245\") == \"10.245\\n\"\nassert solution(\"6 1000000\\n10.245\") == \"10.245\\n\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6 1\\n10.245\\n') == '10.25\\n'\nassert solution('6 2\\n10.245\\n') == '10.3\\n'\nassert solution('3 100\\n9.2\\n') == '9.2\\n'"
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 1\\n10.245\") == \"10.25\"\nassert solution(\"6 2\\n10.245\") == \"10.3\"\nassert solution(\"3 100\\n9.2\") == \"9.2\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 1\\n10.245\\n\") == \"10.25\\n\"\nassert solution(\"6 2\\n10.245\\n\") == \"10.3\\n\"\nassert solution(\"3 100\\n9.2\\n\") == \"9.2\\n\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 1\\n10.245\") == \"10.25\"\nassert solution(\"6 2\\n10.245\") == \"10.3\"\nassert solution(\"3 100\\n9.2\") == \"9.2\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 1\\n10.245\") == \"10.25\"\nassert solution(\"6 2\\n10.245\") == \"10.3\"\nassert solution(\"3 100\\n9.2\") == \"9.2\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\"\n\nsolution = \"\"\"def solution(stdin: str) -> str:\n    a_00, a_01, a_10, a_11 = map(int, stdin.split())\n    if a_00 == a_01 == a_10 == a_11:\n        for i in range(4):\n            for j in range(i + 1, 4):\n                if a_00 == a_01 and a_01 == a_10 and a_10 == a_11 and j!= i:\n                    return str(a_00) + str(a_01) + str(a_10) + str(a_11)\n        return \"\"\n    else:\n        return \"Impossible\"\"\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4') == \"Impossible\"\nassert solution('1 2 2 1') == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4') == 'Impossible'\nassert solution('1 2 2 1') == '0110'\n"
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\"\n"
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('7\\n*..P*P*\\n') == '3\\n'\nassert solution('10\\n.**PP.*P.*\\n') == '2\\n'\n\nfrom typing import List"
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == '3'\nassert solution(6) == '6'\nassert solution(7) == '10'\nassert solution(8) == '10'\nassert solution(10) == '15'\nassert solution(12) == '15'\n"
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('7\\n*..P*P*\\n') == '3\\n'\nassert solution('10\\n.**PP.*P.*\\n') == '2\\n'"
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\n*..P*P*\\n\") == \"3\"\nassert solution(\"10\\n.**PP.*P.*\\n\") == \"2\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\n*..P*P*\\n\") == \"3\\n\"\nassert solution(\"10\\n.**PP.*P.*\\n\") == \"2\\n\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution( \"\"\"\n7\n*..P*P*\n\"\"\") == \"3\"\n\nassert solution( \"\"\"\n10\n.**PP.*P.*\n\"\"\") == \"2\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\n*..P*P*\") == \"3\\n\"\nassert solution(\"10\\n.**PP.*P.*\") == \"2\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Output\\n3\\n\"\nassert solution(input()) == \"Output\\n2\\n\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n*..P*P*\\n\") == \"3\"\nassert solution(\"10\\n.**PP.*P.*\\n\") == \"2\"\n"
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n*..P*P*\\n\") == \"3\"\nassert solution(\"10\\n.**PP.*P.*\\n\") == \"2\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\nassert solution(stdin) == \"8\"\nassert solution(stdin) == \"16\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n\") == \"4\\n\"\nassert solution(\"2\\n\") == \"8\\n\"\nassert solution(\"3\\n\") == \"16\\n\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"8\"\nassert solution(\"3\") == \"16\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"8\"\nassert solution(\"3\") == \"16\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=f'1\\n') == '4\\n'\nassert solution(stdin=f'2\\n') == '8\\n'\nassert solution(stdin=f'3\\n') == '16\\n'"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 4\nassert solution(2) == 8\nassert solution(3) == 16"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=3) == \"4\"\nassert solution(stdin=2) == \"8\"\nassert solution(stdin=1) == \"16\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output, f\"Got '{solution(stdin)}', expected '{expected_output}'\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"16\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output, f\"Test case failed. Expected: {output}, got: {solution(stdin)}\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 3, 2, 2, 2, 4) == 1, \"Expected (1, 3, 9, 7) but got (1, 3, 9, 7)\"\nassert solution(100, 100, 52, 50, 46, 56) == 17, \"Expected (17, 8, 86, 92) but got (17, 8, 86, 92)\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test case failed: {input()}!= {output}\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '''1 3 9 7\n17 8 86 92'''\n"
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('9 9 5 5 2 1') == '1 3 9 7'\nassert solution('100 100 52 50 46 56') == '17 8 86 92'"
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('FTFFTFFF') == 'No', \"Incorrect output for 'FTFFTFFF'.\"\n\nassert solution('F') == 'No', \"Incorrect output for 'F'.\"\n\nassert solution('T') == 'Yes', \"Incorrect output for 'T'.\"\n\nassert solution('F') == 'No', \"Incorrect output for 'F'.\"\n\nassert solution('T') == 'Yes', \"Incorrect output for 'T'.\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"FTFFTFFF\") == \"No\\n\", \"Test Failed\"\nassert solution(\"4 2\") == \"Yes\\n\", \"Test Failed\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"FTFFTFFF\\n4 2\") == \"Yes\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"FTFFTFFF\\n4 2\") == \"Yes\"\n"
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\"\nassert solution(\"FTFTTTFF\") == \"Yes\"\nassert solution(\"TTTFFFTF\") == \"Yes\"\nassert solution(\"FFFFTTFF\") == \"Yes\"\nassert solution(\"FTFFTTFF\") == \"No\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"FTFFTFFF\\n4 2\") == \"Yes\"\nassert solution(\"TFFTFFF\\n3 2\") == \"No\"\nassert solution(\"FTFFTTFF\\n1 1\") == \"Yes\"\nassert solution(\"TFTFTFFF\\n4 1\") == \"Yes\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('FTFFTFFF') == 'Yes', 'Incorrect output'"
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"FTFFTFFF\\n4 2\") == \"Yes\"\nassert solution(\"F\\n10\") == \"No\"\nassert solution(\"TTTTTTTTTT\\n5\") == \"No\"\nassert solution(\"TTTTTTTTTT\\n-1\") == \"No\"\nassert solution(\"F\\n10\") == \"No\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\"\nassert solution(\"RTRRRRRR\") == \"No\"\nassert solution(\"F\") == \"No\"\nassert solution(\"T\") == \"Yes\"\nassert solution(\"TT\") == \"No\"\nassert solution(\"TTFF\") == \"Yes\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n\") == \"2\\n\"\nassert solution(\"2\\n\") == \"3\\n\"\nassert solution(\"3\\n\") == \"5\\n\"\nassert solution(\"4\\n\") == \"6\\n\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 2\nassert solution(2) == 3\nassert solution(3) == 5\nassert solution(4) == 6\n\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == '2'\nassert solution(2) == '3'\nassert solution(3) == '5'\nassert solution(4) == '6'"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 2\nassert solution(2) == 3\nassert solution(3) == 5\nassert solution(4) == 6\n\nfrom functools import lru_cache\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"2\"\nassert solution(2) == \"3\"\nassert solution(3) == \"5\"\nassert solution(4) == \"6\"\n"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"6\"\n\nfrom typing import List"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"The output is {solution(input())}, but the expected output is {expected_output}\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('3') == '5'\nassert solution('4') == '6'"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected {output}, got {solution(input())}\"\nprint(\"Test passed\")"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == '2'\nassert solution(2) == '3'\nassert solution(3) == '5'\nassert solution(4) == '6'\nassert solution(5) == '10'"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"1.3333333333\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n\") == \"1.3333333333\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1.3333333333\", \"Incorrect solution\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1.3333333333\"\nprint(\"Test passed!\")"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 3\\n3\") == \"1.3333333333\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Incorrect output. Expected: {expected_output}, Received: {solution(stdin=input())}\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\na_1 a_2 a_3\\np 3\") == \"1.3333333333\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == output, f\"The output {output} is not correct.\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\\n3\") == \"1.3333333333\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n\") == \"1.3333333333\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n\\n2 100000 569\\n605 986\\n\") == \"13 7\\n986 605\"\nassert solution(\"1 2\\n3 4\\n\\n5 6\\n7 8\\n\") == \"4 6\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n\\n2 100000 569\\n605 986\") == \"13 7\\n986 605\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n2 100000 569\\n605 986\") == \"13 7\"\nassert solution(\"5 1 2\\n9 7 11 15 5\\n2 100000 569\\n605 986\") == \"986 605\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n2 100000 569\\n605 986\") == \"13 7\\n986 605\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n\\n2 100000 569\\n605 986\\n\") == \"13 7\\n986 605\"\nassert solution(\"1 2 3 4 5\") == \"1 2\\n3 4\\n5 5\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 1 2\\n9 7 11 15 5\\n\\n2 100000 569\\n605 986\\n') == '13 7\\n986 605\\n', \"The given solution is incorrect.\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n\\n2 100000 569\\n605 986\") == \"13 7\"\nassert solution(\"5 1 2\\n9 7 11 15 5\\n\\n2 100000 569\\n605 986\\n\\n2 100000 569\") == \"986 605\"\n"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3 2 4 4\\n2 5 4 10\\n') == '1'\nassert solution('3 3 3 3 5\\n2 3 5 4 2\\n') == '0'\nassert solution('5 5 1 2 3\\n2 2 3\\n') == '-1'\nassert solution('3 4 1 1 3\\n2 3 2\\n') == '3'"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\\n\") == 1\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\\n\") == 0\nassert solution(\"5 5 1 2 3\\n2 2 3\\n\") == -1\nassert solution(\"3 4 1 1 3\\n2 3 2\\n\") == 3\nassert solution(\"4 5 2 2 2\\n2 3\\n\") == 1\n"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\\n\") == \"1\\n\"\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\\n\") == \"0\\n\"\nassert solution(\"5 5 1 2 3\\n2 2 3\\n\") == \"-1\\n\"\nassert solution(\"3 4 1 1 3\\n2 3 2\\n\") == \"3\\n\""
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3 2 4 4\\n2 5 4 10') == '1\\n'\nassert solution('3 3 3 3 5\\n2 3 5 4 2') == '0\\n'\nassert solution('5 5 1 2 3\\n2 2 3') == '-1\\n'\nassert solution('3 4 1 1 3\\n2 3 2') == '3\\n'"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\\n\") == \"1\"\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\\n\") == \"0\"\nassert solution(\"5 5 1 2 3\\n2 2 3\\n\") == \"-1\"\nassert solution(\"3 4 1 1 3\\n2 3 2\\n\") == \"3\""
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n3 3 2 4 4\n2 5 4 10\n\"\"\"\n) == '1'\n\nassert solution(\n    \"\"\"\n3 3 3 3 5\n2 3 5 4 2\n\"\"\"\n) == '0'\n\nassert solution(\n    \"\"\"\n5 5 1 2 3\n2 2 3\n\"\"\"\n) == '-1'\n\nassert solution(\n    \"\"\"\n3 4 1 1 3\n2 3 2\n\"\"\"\n) == '3'"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\\n\") == \"1\"\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\\n\") == \"0\"\nassert solution(\"5 5 1 2 3\\n2 2 3\\n\") == \"-1\"\nassert solution(\"3 4 1 1 3\\n2 3 2\\n\") == \"3\""
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\") == 1\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\") == 0\nassert solution(\"5 5 1 2 3\\n2 2 3\") == -1\nassert solution(\"3 4 1 1 3\\n2 3 2\") == 3"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\\n\") == 1\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\\n\") == 0\nassert solution(\"5 5 1 2 3\\n2 2 3\\n\") == -1\nassert solution(\"3 4 1 1 3\\n2 3 2\\n\") == 3\n\nfrom typing import List"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\") == \"1\\n\"\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\") == \"0\\n\"\nassert solution(\"5 5 1 2 3\\n2 2 3\") == \"-1\\n\"\nassert solution(\"3 4 1 1 3\\n2 3 2\") == \"3\\n\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input(\"Enter the number of cards: \")) == \"0\"\nassert solution(input(\"Enter the number of cards: \")) == \"2\"\nassert solution(input(\"Enter the number of cards: \")) == \"4\"\nassert solution(input(\"Enter the number of cards: \")) == \"5\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\nG3 G3\\n') == '0\\n'\nassert solution('4\\nG4 R4 R3 B3\\n') == '2\\n'\nassert solution('5\\nB1 Y1 W1 G1 R1\\n') == '4\\n'"
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"The solution is incorrect. Please check the provided input and output.\\nInput: {input()}\\nOutput: {output()}\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\nG3 G3\\n\") == \"0\\n\"\nassert solution(\"4\\nG4 R4 R3 B3\\n\") == \"2\\n\"\nassert solution(\"5\\nB1 Y1 W1 G1 R1\\n\") == \"4\\n\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '0'\n"
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\nG3 G3\") == \"0\\n\"\nassert solution(\"4\\nG4 R4 R3 B3\") == \"2\\n\"\nassert solution(\"5\\nB1 Y1 W1 G1 R1\") == \"4\\n\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\nG3 G3') == '0\\n'\nassert solution('4\\nG4 R4 R3 B3') == '2\\n'\nassert solution('5\\nB1 Y1 W1 G1 R1') == '4\\n'\n"
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\nG3 G3\\n') == '0\\n'\nassert solution('4\\nG4 R4 R3 B3\\n') == '2\\n'\nassert solution('5\\nB1 Y1 W1 G1 R1\\n') == '4\\n'"
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '0'"
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\nG3 G3\\n\") == \"0\\n\"\nassert solution(\"4\\nG4 R4 R3 B3\\n\") == \"2\\n\"\nassert solution(\"5\\nB1 Y1 W1 G1 R1\\n\") == \"4\\n\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"4\n3 3 4 3\n4 7 6 5\n2\n1 1\n100 100\n5\n10 30 5 6 24\n10 41 7 8 24\"\"\") == \"2 6\\n1 1\"\nassert solution(\"\"\"2\n1 1\n100 100\"\"\") == \"1 1\\n1 1\"\nassert solution(\"\"\"5\n10 30 5 6 24\n10 41 7 8 24\"\"\") == \"3 11\\n11 22\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n2\\n1 1\\n100 100\\n5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"2 6\\n\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n\\n2\\n1 1\\n100 100\\n\\n5\\n10 30 5 6 24\\n10 41 7 8 24\\n\") == \"2 6\\n1 1\\n\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n2\\n1 1\\n100 100\\n5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"2 6\\n\"\nassert solution(\"2\\n1 1\\n100 100\\n5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"1 1\\n\"\nassert solution(\"5\\n10 30 5 6 24\\n10 41 7 8 24\\n\") == \"3 11\\n\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2 6\"\nassert solution(input()) == \"1 1\"\nassert solution(input()) == \"3 11\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\") == \"2 6\"\nassert solution(\"2\\n1 1\\n100 100\") == \"1 1\"\nassert solution(\"5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"3 11\"\nassert solution(\"1\\n5\\n100 100\") == \"1 1\"\nassert solution(\"5\\n10 30 5 6 24\\n10 41 7 8 24\\n10 100 100 100 100\") == \"3 11\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n3 3 4 3\\n4 7 6 5\\n2\\n1 1\\n100 100\\n5\\n10 30 5 6 24\\n10 41 7 8 24') == '2 6\\n'\nassert solution('2\\n1 1\\n100 100\\n5\\n10 30 5 6 24\\n10 41 7 8 24') == '1 1\\n'\nassert solution('5\\n10 30 5 6 24\\n10 41 7 8 24') == '3 11\\n'"
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n2 6\\n1 1\\n100 100\\n2 1\") == \"2 6\"\nassert solution(\"2\\n1 1\\n100 100\\n1 1\") == \"1 1\"\nassert solution(\"5\\n10 30 5 6 24\\n10 41 7 8 24\\n3 11\") == \"3 11\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2 6\"\nassert solution(input()) == \"1 1\"\nassert solution(input()) == \"3 11\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4\n3 3 4 3\n4 7 6 5\n\"\"\") == \"2 6\"\n\nassert solution(\"\"\"\n2\n1 1\n100 100\n\"\"\") == \"1 1\"\n\nassert solution(\"\"\"\n5\n10 30 5 6 24\n10 41 7 8 24\n\"\"\") == \"3 11\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 4\\n\") == \"3B\"\nassert solution(\"2 2\\n\") == \"Impossible\"\nassert solution(\"3 2\\n\") == \"1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 'Impossible'\n"
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"The expected output does not match the actual output.\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\"\n\nfrom typing import List"
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 4\") == \"3B\", \"The solution should be 3B\"\nassert solution(\"2 2\") == \"Impossible\", \"The solution should be Impossible\"\nassert solution(\"3 2\") == \"1A1B\", \"The solution should be 1A1B\"\n"
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\"\nassert solution(\"1 1\") == \"AAB\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\"\n"
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 4\") == \"3B\", \"The first sample should produce the expected output.\"\nassert solution(\"2 2\") == \"Impossible\", \"The second sample should produce the expected output.\"\nassert solution(\"3 2\") == \"1A1B\", \"The third sample should produce the expected output.\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 2) == 3\nassert solution(5, 4) == 25"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n\") == \"3\\n\"\nassert solution(\"5 4\\n\") == \"25\\n\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '3'"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"25\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 3, \"Output should be 3.\"\nassert solution(5) == 25, \"Output should be 25.\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 2) == 3\nassert solution(5, 4) == 25\n\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 2) == 3\nassert solution(5, 4) == 25\n\nfor i in range(1, 10):\n    assert solution(i, i - 1) % (10**9 + 7) == 0"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"3\\n\"\nassert solution(\"5 4\") == \"25\\n\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"3\\n\"\nassert solution(\"5 4\") == \"25\\n\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"25\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\"\nprint(\"All test cases passed successfully\")"
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\"\nassert solution(\"1 3\\n2 3\\n4 5\\n5 6\\n6 7\") == \"0\"\nassert solution(\"4 4\\n1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\"\nassert solution(\"4 4\\n1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\"\nassert solution(\"2 3\\n1 4\\n5 6\\n6 7\") == \"0\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\\n\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 1"
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '1'"
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1\"\n"
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == '1'\nprint('Correct')"
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '1\\n'\nprint('The maximum possible profit Snuke can gain is 1.')"
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 0\\n1 2\\n2 1\\n2 3\\n3 4\\n4 5\\n5 1\") == \"1\""
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3\\nS.o\\n.o.o\\no.T') == 2\nassert solution('3 3\\nS.o\\n.o.o\\no.T\\nS.S') == 3\nassert solution('3 3\\nS.o\\n.o.o\\no.T\\nT.S') == 4\nassert solution('3 3\\nS.o\\n.o.o\\no.T\\nS.T') == -1\n"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3\\nS.o\\n.o.o\\no.T') == '2\\nRemove the upper-right and lower-left leaves.\\n'"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\nS.o\\no.o.\\noT\\n\") == \"2\"\nassert solution(\"4 4\\nS.S\\no.S.\\noS.\\n\") == \"3\"\nassert solution(\"5 5\\nS.S\\no.S.\\noS.\\n\") == \"4\"\nassert solution(\"6 6\\nS.S\\no.S.\\noS.\\n\") == \"5\"\nassert solution(\"7 7\\nS.S\\no.S.\\noS.\\n\") == \"6\"\nassert solution(\"8 8\\nS.S\\no.S.\\noS.\\n\") == \"7\"\nassert solution(\"9 9\\nS.S\\no.S.\\noS.\\n\") == \"8\"\nassert solution(\"10 10\\nS.S\\no.S.\\noS.\\n\") == \"9\"\nassert solution(\"11 11\\nS.S\\no.S.\\noS.\\n\") == \"10\"\nassert solution(\"12 12\\nS.S\\no.S.\\noS.\\n\") == \"11\"\nassert solution(\"13 13\\nS.S\\no.S.\\noS.\\n\") == \"12\"\nassert solution(\"14 14\\nS.S\\no.S.\\noS.\\n\") == \"13\"\nassert solution(\"15 15\\nS.S\\no.S.\\noS.\\n\") == \"14\"\nassert solution(\"16 16\\nS.S\\no.S.\\noS.\\n\") == \"15\"\nassert solution(\"17 17\\nS.S\\no.S.\\noS.\\n\") == \"16\"\nassert solution(\"18 18\\nS.S\\no.S.\\noS.\\n\") == \"17\"\nassert solution(\"19 19\\nS.S\\no.S.\\noS.\\n\") == \"18\"\nassert solution(\"20 20\\nS.S\\no.S.\\noS.\\n\") == \"19\"\nassert solution(\"21 21\\nS.S\\no.S.\\noS.\\n\") == \"20\"\nassert solution(\"22 22\\nS.S\\no.S.\\noS.\\n\") == \"21\"\nassert solution(\"23 23\\nS.S\\no.S.\\noS.\\n\") == \"22\"\nassert solution(\"24 24\\nS.S\\no.S.\\noS.\\n\") == \"23\"\nassert solution(\"25 25\\nS.S\\no.S.\\noS.\\n\") == \"24\"\nassert solution(\"26 26\\nS.S\\no.S.\\noS.\\n\") == \"25\"\nassert solution(\"27 27\\nS.S\\no.S.\\noS.\\n\") == \"26\"\nassert solution(\"28 28\\nS.S\\no.S.\\noS.\\n\") == \"27\"\nassert solution(\"29 29\\nS.S\\no.S.\\noS.\\n\") == \"28\"\nassert solution(\"30 30\\nS.S\\no.S.\\noS.\\n\") == \"29\"\nassert solution(\"31 31\\nS.S\\no.S.\\noS.\\n\") == \"30\"\nassert solution(\"32 32\\nS.S\\no.S.\\noS.\\n\") == \"31\"\nassert solution(\"33 33\\nS.S\\no.S.\\noS.\\n\") == \"32\"\nassert solution(\"34 34\\nS.S\\no.S.\\noS.\\n\") == \"33\"\nassert solution(\"35 35\\nS.S\\no.S.\\noS.\\n\") == \"34\"\nassert solution(\"36 36\\nS.S\\no.S.\\noS.\\n\") == \"35\"\nassert solution(\"37 37\\nS.S\\no.S.\\noS.\\n\") == \"36\"\nassert solution(\"38 38\\nS.S\\no.S.\\noS.\\n\") == \"37\"\nassert solution(\"3"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r'''\n3 3\nS.o\n.o.\no.T\n''') == '2\\nRemove the upper-right and lower-left leaves.'\n\nassert solution(r'''\n2 3\n.S.o\n.o.T\n.o.o\n.o.o\n''') == '-1'\n\nassert solution(r'''\n3 3\nS.o\n.o.\no.T\n''') == '2\\nRemove the upper-right and lower-left leaves.'"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\nS.o\\n.o.o\\no.T') == '2'\nassert solution('3 3\\nS.o\\n.o.T\\no.T') == '-1'\nassert solution('3 3\\nS.o\\n.o.o\\no.T') == '-1'\nassert solution('3 3\\nS.o\\n.o.o\\no.T') == '-1'\nassert solution('3 3\\nS.o\\n.o.o\\no.T') == '-1'\nassert solution('3 3\\nS.o\\n.o.o\\no.T') == '-1'\nassert solution('3 3\\nS.o\\n.o.o\\no.T') == '-1'\nassert solution('3 3\\nS.o\\n.o.o\\no.T') == '-1'"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n3 3\nS.o\n.o.\no.T\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n3 3\no.o\n.o.\nS.T\n\"\"\"\n) == \"-1\"\n\nassert solution(\n\"\"\"\n3 3\no.o\n.o.\nS.T\n\"\"\"\n) == \"2\""
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\ns.o\\no.o.o.T\\n\") == 2\nassert solution(\"3 3\\n.o\\ns.T\\no.o.o.T\\n\") == 2\nassert solution(\"2 3\\ns.o\\no.o.o.T\\n\") == 1\nassert solution(\"2 3\\ns.o\\ns.o\\n\") == -1\nassert solution(\"1 1\\ns.o\\ns.o\\n\") == -1"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n    3 3\nS.o\n.o.\no.T\n\"\"\") == \"2\"\nassert solution(\"\"\"\n    3 3\nS.o\n.o.\no.T\n\"\"\") == \"-1\"\nassert solution(\"\"\"\n    3 3\nS.o\n.o.\no.T\n\"\"\") == \"0\"\nassert solution(\"\"\"\n    3 3\nS.o\n.o.\no.T\n\"\"\") == \"4\""
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3\\nS.o\\n.o.o\\no.T\\n') == '2\\nRemove the upper-right and lower-left leaves.\\n'\nassert solution('2 3\\nS.o\\n.o.o\\no.T\\n') == '-1\\n'\n"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\ns.o\\no.o.o\\nt.T\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\"\nassert solution(\"3 4\\ns.o\\no.o.o\\nt.T\\n\") == \"-1\"\nassert solution(\"3 2\\ns.o\\no.o.o\\nt.T\\n\") == \"0\"\nassert solution(\"3 1\\ns.o\\no.o.o\\nt.T\\n\") == \"0\"\nassert solution(\"4 4\\ns.o\\no.o.o\\nt.T\\n\") == \"1\"\nassert solution(\"4 3\\ns.o\\no.o.o\\nt.T\\n\") == \"1\"\nassert solution(\"4 2\\ns.o\\no.o.o\\nt.T\\n\") == \"1\"\nassert solution(\"4 1\\ns.o\\no.o.o\\nt.T\\n\") == \"1\"\n"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1, 1) == 1, \"Expected 1, but got {}.\".format(solution(1, 1))\nassert solution(3, 2) == 3, \"Expected 3, but got {}.\".format(solution(3, 2))\nassert solution(199, 200) == 200, \"Expected 200, but got {}.\".format(solution(199, 200))"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 1\nassert solution(3) == 3\nassert solution(199) == 200\n"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1 1) == 1\nassert solution(3 2) == 3\nassert solution(199 200) == 200"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Test failed for input {input()}\"\n"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"1\\n\", \"1\"\nassert solution(\"3 2\") == \"3\\n\", \"3\"\nassert solution(\"199 200\") == \"200\\n\", \"200\""
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test case failed. Expected {output}, got {solution(input())}\"\nprint(output)\n\na = int(input())\nb = int(input())"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(r\"1 1\") == \"1\"\nassert solution(r\"3 2\") == \"3\"\nassert solution(r\"199 200\") == \"200\""
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(300) == 3\nassert solution(100) == 1\nassert solution(1000000) == 2"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n\") == \"1\\n\"\nassert solution(\"3 2\\n\") == \"3\\n\"\nassert solution(\"199 200\\n\") == \"200\\n\"\n"
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n5 2\\n3 3\\n\") == \"Aoki\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n5 2\\n3 3\\n\") == \"Aoki\"\n"
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Aoki\", \"Expected 'Aoki', got: \" + solution(input())"
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\\n\", \"Test case 1 failed\"\nassert solution(\"5\\n10 3\\n2 4\") == \"Takahashi\\n\", \"Test case 2 failed\"\nassert solution(\"10\\n100 5\\n50 20\") == \"Takahashi\\n\", \"Test case 3 failed\"\nassert solution(\"100\\n1000 50\\n1000 200\") == \"Aoki\\n\", \"Test case 4 failed\"\nassert solution(\"1000\\n10000 500\\n10000 2000\") == \"Takahashi\\n\", \"Test case 5 failed\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\\n\"\nassert solution(\"3\\n6 2\\n4 3\") == \"Takahashi\\n\"\nassert solution(\"4\\n5 2\\n3 3\") == \"Takahashi\\n\"\nassert solution(\"2\\n6 2\\n4 3\") == \"Aoki\\n\"\nassert solution(\"4\\n5 2\\n3 3\") == \"Aoki\\n\"\n"
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\\n\"\nassert solution(\"3\\n4 3\\n1 2\") == \"Aoki\\n\"\nassert solution(\"4\\n5 2\\n3 1\") == \"Takahashi\\n\"\nassert solution(\"5\\n2 1\\n4 2\") == \"Takahashi\\n\"\nassert solution(\"6\\n3 2\\n1 4\") == \"Takahashi\\n\"\nassert solution(\"7\\n2 3\\n3 4\") == \"Takahashi\\n\"\n"
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\\n\"\n"
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n5 2\\n3 3\\n\") == \"Aoki\"\nassert solution(\"2\\n5 1\\n4 1\\n\") == \"Takahashi\"\nassert solution(\"2\\n5 1\\n3 1\\n\") == \"Takahashi\"\nassert solution(\"2\\n5 1\\n4 1\\n\") == \"Takahashi\"\n"
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"Aoki\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == output_data, f\"Test failed: {solution(input_data)}!= {output_data}\"\nprint(\"All tests passed!\")\n"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n3 3\\n\") == \"0\"\nassert solution(\"3 3\\n\") == \"8\"\nassert solution(\"1 1\\n3 2\\n\") == \"0\"\nassert solution(\"3 3\\n\") == \"8\"\nassert solution(\"1 1\\n2 3\\n\") == \"0\"\nassert solution(\"3 3\\n\") == \"8\"\nassert solution(\"1 1\\n1 2\\n\") == \"0\"\nassert solution(\"3 3\\n\") == \"8\"\nassert solution(\"1 1\\n2 2\\n\") == \"0\"\nassert solution(\"3 3\\n\") == \"8\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 2\\n3 3\\n') == '0\\n8'\nassert solution('3 3\\n') == '8'"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Output\\n0\"\nassert solution() == \"Output\\n8\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"3 3\") == \"8\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 2') == '0'\nassert solution('3 3') == '8'"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test failed for solution({input()}):\\nExpected output: {output}\\nGot: {solution(input())}\"\n"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Output\\n0'\nassert solution(input()) == 'Output\\n8'"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n3 3\\n\") == \"0\\n\"\nassert solution(\"3 3\\n\") == \"8\\n\"\n\nfrom typing import List\n"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output() for input, output in [\n    (\"2 2\", \"0\"),\n    (\"3 3\", \"8\"),\n]"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n\") == \"0\\n\"\nassert solution(\"3 3\\n\") == \"8\\n\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\"\nassert solution() == \"0\"\nassert solution() == \"-1\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\") == \"1\\n\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\") == \"0\\n\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"-1\\n\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\") == \"1\\n\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\") == \"0\\n\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"-1\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 2\\n1 2 3 4\\n1 5 3 4\\n') == '1\\n'\nassert solution('2 2\\n1 2 3 4\\n1 5 6 4\\n') == '0\\n'\nassert solution('2 3\\n1 2 4 5\\n1 2 1 3 2 3\\n') == '-1\\n'\n"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\\n\") == \"1\\n\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\\n\") == \"0\\n\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\\n\") == \"-1\\n\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\\n\") == \"1\\n\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\\n\") == \"0\\n\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\\n\") == \"-1\\n\"\n\nassert solution(\"2 2\\n1 2 3 4\\n1 2 1 3 2 3\\n\") == \"1\\n\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\\n\") == \"0\\n\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\\n\") == \"-1\\n\"\n\nassert solution(\"2 2\\n1 2 3 4\\n1 2 1 3 2 3\\n\") == \"1\\n\"\nassert solution(\"2 2\\n1 2 3 4\\n1 2 1 3 2 3\\n\") == \"0\\n\"\nassert solution(\"2 2\\n1 2 3 4\\n1 2 1 3 2 3\\n\") == \"-1\\n\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\") == \"1\\n\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\") == \"0\\n\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"-1\\n\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\\n2 2\\n1 2 3 4\\n1 5 3 4\\n\\nInput\\n2 2\\n1 2 3 4\\n1 5 6 4\\n\\nInput\\n2 3\\n1 2 4 5\\n1 2 1 3 2 3\\n\") == \"1\\n\\n-1\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\\n\") == \"1\\n\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\\n\") == \"0\\n\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\\n\") == \"-1\\n\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\\n\") == \"1\\n\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\\n\") == \"0\\n\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\\n\") == \"-1\\n\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"12\") == \"17:30\"\nassert solution(\"24\") == \"07:30\"\nassert solution(\"12\") == \"07:30\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"24\") == \"17:30\", \"Test 1 failed\"\nassert solution(\"12\") == \"07:30\", \"Test 2 failed\"\nassert solution(\"24\") == \"09:09\", \"Test 3 failed\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"24\") == \"17:30\"\nassert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"24\") == \"17:30\"\nassert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"09:09\"\n"
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"24\") == \"17:30\"\nassert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"24\") == \"17:30\"\nassert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"17:30\"\nassert solution(\"12\") == \"01:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"24\") == \"17:30\"\nassert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"24\") == \"00:30\"\nassert solution(\"12\") == \"01:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"24\\n17:30\") == \"17:30\"\nassert solution(\"12\\n17:30\") == \"07:30\"\nassert solution(\"24\\n99:99\") == \"09:09\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1') == '6'\nassert solution('5 5\\n4\\n1 2 1 3\\n2 3 1 4\\n3 1 1 5\\n4 2 2 6\\n5 3 3 7') == '112'"
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"6\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\"\nassert solution(\"5 10\\n1\\n2 3 4 5 6\\n7 8 9 10 11 12\") == \"221\"\nassert solution(\"10 10\\n1\\n2 3 4 5 6 7 8 9 10\") == \"12680\"\nassert solution(\"1000000 1000000\") == \"999999999\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"6\\n\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\\n\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\"\nassert solution(\"1 1\\n3\\n1 1 1\\n2 2 1\") == \"3\"\nassert solution(\"2 2\\n1\\n1 1 1\\n2 2 1\") == \"4\"\nassert solution(\"2 2\\n1\\n1 1 1\\n2 2 2\") == \"5\"\nassert solution(\"2 2\\n1\\n1 1 1\\n2 2 1\") == \"4\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\").read()) == \"6\\n\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\\n\"\n"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Got {solution(stdin)}, expected {expected}\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\\n', 'Test case 1 failed'\n\nassert solution(stdin) == '5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\\n', 'Test case 2 failed'\n\nassert solution(stdin) == '0\\n', 'Test case 3 failed'\n\nassert solution(stdin) == '5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\\n', 'Test case 4 failed'\n\nassert solution(stdin) == '-1\\n', 'Test case 5 failed'\n\nassert solution(stdin) == '-1\\n', 'Test case 6 failed'\n\nassert solution(stdin) == '0\\n', 'Test case 7 failed'"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\"2 1\n2 5\n3 3\n3 6\n5 6\"\"\"\n\nassert solution(stdin) == \"\"\"-1\"\"\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution(stdin) == \"-1\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Test failed: {solution(input())}!= {output()}\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\na_1 a_2 a_3 a_4 a_5 a_6\\n2 0 3 0 1 1\\n3 2 2 2 1 1\\n2 5 3 6 5 6\\n3 3 6 5 4 5\\n5 6 5 4 3 6\\n\") == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\\n\"\nassert solution(\"1\\na_1\\n0\\n6\\n3 2 2 2 1 1\\n\") == \"0\\n\"\nassert solution(\"6\\na_1 a_2 a_3 a_4 a_5 a_6\\n3 2 2 2 1 1\\n\") == \"-1\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"6\\n2 0 3 0 1 1\") == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\\n\"\nassert solution(stdin=\"1\\n0\") == \"0\\n\"\nassert solution(stdin=\"6\\n3 2 2 2 1 1\") == \"-1\\n\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 8\\n12 20\\n\") == \"2\\n0 4\\n\"\nassert solution(\"3 10\\n10 20 30\\n\") == \"1\\n0\\n\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 8\\n12 20\\n') == '2\\n0 4\\n'\nassert solution('3 10\\n10 20 30\\n') == '1\\n0'"
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 8\\n12 20\\n\") == \"2\\n0 4\\n\"\nassert solution(\"3 10\\n10 20 30\\n\") == \"1\\n0\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"12\\n20\\n\") == \"2\\n0 4\\n\"\nassert solution(\"3\\n10\\n20\\n\") == \"1\\n0\\n\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 8\\n12 20\") == \"2\\n0 4\"\nassert solution(\"3 10\\n10 20 30\") == \"1\\n0\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 8\\n12 20\\n\") == \"2\\n0 4\\n\"\nassert solution(\"3 10\\n10 20 30\\n\") == \"1\\n0\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '2\\n0 4 \\n1\\n0'\nassert solution() == '1\\n0'\nassert solution() == '1\\n4'\n"
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n2 8\n12 20\n''') == '2\\n0 4 0'\n\nassert solution('''\n3 10\n10 20 30\n''') == '1\\n0'"
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\\n0 4\\n1\\n0\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 8\\n12 20\\n\") == \"2\\n0 4\\n\"\nassert solution(\"3 10\\n10 20 30\\n\") == \"1\\n0\""
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0 5 5\\n3 2\\n-1 -1\\n-1 0\") == \"3.73\"\nassert solution(\"0 0 0 1000\\n100 1000\\n-50 0\\n50 0\") == \"11.54\""
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n0 0 5 5\n3 2\n-1 -1\n-1 0\n''') == 3.729935587093555327\n\nassert solution('''\n0 0 0 1000\n100 1000\n-50 0\n50 0\n''') == 11.547005383792516398"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n0 0 5 5\n3 2\n-1 -1\n-1 0\n''') == '3.73'"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 5 5\\n3 2\\n-1 -1\\n-1 0\\n\") == \"3.73\"\nassert solution(\"0 0 0 1000\\n100 1000\\n-50 0\\n50 0\\n\") == \"11.55\""
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected_output, f\"Solution: {solution}, Expected Output: {expected_output}\""
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3.729935587093555327\", \"Your code is correct\""
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3.729935587093555327\\n\""
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0 5 5\\n3 2\\n-1 -1\\n-1 0\") == \"3.729935587093555327\"\nassert solution(\"0 0 0 1000\\n100 1000\\n-50 0\\n50 0\") == \"11.547005383792516398\""
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0 5 5\\n3 2\\n-1 -1\\n-1 0\") == \"3.729935587093555327\"\nassert solution(\"0 0 0 1000\\n100 1000\\n-50 0\\n50 0\") == \"11.547005383792516398\""
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"First\"\n\nfor i in range(1, int(input()) + 1):\n    bag_a = int(input())\n    bag_b = int(input())\n    dish_a = int(input())\n    dish_b = int(input())\n\n    # make moves until you can no longer make moves\n    while True:\n        # move bag a to dish a\n        if bag_a >= dish_a:\n            bag_a -= dish_a\n            dish_a += 1\n        else:\n            dish_a -= bag_a\n            bag_a = 0\n            break\n\n        # move bag b to dish b\n        if bag_b >= dish_b:\n            bag_b -= dish_b\n            dish_b += 1\n        else:\n            dish_b -= bag_b\n            bag_b = 0\n            break\n\n        # no more coins in bag a\n        if bag_a == 0:\n            dish_a -= 1\n            bag_a = int(input())\n\n    # check if you can no longer make moves\n    if dish_a == 0 or dish_b == 0:\n        break\n\n    # move coins from bag a to bag b\n    while dish_a > 0:\n        bag_b += dish_a\n        dish_a -= 1\n\n    while dish_b > 0:\n        bag_a += dish_b\n        dish_b -= 1\n\n    print(\"Second\" if bag_a > bag_b else \"First\")"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n') == 'Second\\nFirst\\nSecond'"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162') == 'Second\\nFirst\\nSecond\\n'\n\nfrom typing import List"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test {index + 1} failed: Expected output: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162') == 'Second\\nFirst\\nSecond'\n\nassert solution('2\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162') == 'First\\nSecond\\nFirst'\n\nassert solution('3\\n2\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n10\\n1\\n2\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\") == \"Second\\nFirst\"\nassert solution(\"5\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\") == \"Second\\nFirst\"\nassert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n1\\n5\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\") == \"Second\\nFirst\"\nassert solution(\"1\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 89264437"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\") == \"Second\\nFirst\\nSecond\\n\"\nassert solution(\"6\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\") == \"First\\nSecond\\nFirst\\nSecond\\n\""
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test case {t} failed. Expected output: {expected_output}, Actual output: {solution(input())}\"\n\nt = int(stdin.readline())\n\nfor t in range(1, t + 1):\n    N = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n\n    expected_output = \"Second\"\n\n    solution(stdin)"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"First\\nSecond\\nFirst\\nSecond\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"5 3 2\\n4 3 1 5 2\") == \"1\\n\"\nassert solution(stdin=\"5 3 2\\n4 3 1 5 2 3\") == \"1\\n\"\nassert solution(stdin=\"5 3 2\\n4 3 1 5 2 3 4\") == \"1\\n\"\nassert solution(stdin=\"5 3 2\\n4 3 1 5 2 3 4 5\") == \"2\\n\"\nassert solution(stdin=\"5 3 2\\n4 3 1 5 2 3 4 5 6\") == \"2\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\\n\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '1\\n'\nprint('All tests passed.')"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\\n\"\nassert solution(\"5 3 2\\n4 3 1 5 3\\n4 3 1 5 2\\n4 3 1 5 4\") == \"1\\n\"\nassert solution(\"5 3 2\\n4 3 1 5 2\\n4 3 1 5 1\") == \"0\\n\"\nassert solution(\"5 3 2\\n4 3 1 5 2\\n4 3 1 5 3\\n4 3 1 5 4\\n4 3 1 5 5\") == \"0\\n\"\nassert solution(\"5 3 2\\n4 3 1 5 2\\n4 3 1 5 1\\n4 3 1 5 1\\n4 3 1 5 1\\n4 3 1 5 1\") == \"1\\n\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1\\n\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1\\n\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == \"1\\n\"\n"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\"\nassert solution(\"5 3 2\\n4 3 1 5 3\") == \"2\"\nassert solution(\"5 3 2\\n4 3 1 5 2 5\") == \"3\"\nassert solution(\"5 3 2\\n4 3 1 5 3 5 4\") == \"4\"\nassert solution(\"5 3 2\\n4 3 1 5 2 5 5\") == \"5\"\n"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1\\n\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"24\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n\") == \"1\\n\"\nassert solution(\"3 2\\n\") == \"24\\n\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"24\"\nassert solution(\"3 3\") == \"120\"\nassert solution(\"4 1\") == \"0\"\nassert solution(\"5 1\") == \"5\"\nassert solution(\"6 1\") == \"21\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '24'"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(b'1 1\\n') == '1\\n'\nassert solution(b'3 2\\n') == '24\\n'"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"Output: 24\\n\", \"Expected 'Output: 24\\n', but got: \" + str(solution(stdin))"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n\") == \"1\\n\"\nassert solution(\"3 2\\n\") == \"24\\n\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"24\"\nassert solution(\"5 2\") == \"50\"\nassert solution(\"1 10\") == \"10000\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n\") == \"1\"\nassert solution(\"3 2\\n\") == \"24\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(31) == \"64921457\" # expected output: 64921457\nassert solution(4) == \"3\" # expected output: 3\nassert solution(7) == \"1196\" # expected output: 1196\nassert solution(5) == \"6\" # expected output: 6\nassert solution(2) == \"0\" # expected output: 0"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"6\"\nassert solution(\"4 4\") == \"3\"\nassert solution(\"7 3\") == \"1196\"\nassert solution(\"31 8\") == \"64921457\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(31 8) == \"64921457\"\nassert solution(4 4) == \"3\"\nassert solution(7 3) == \"1196\"\nassert solution(3 2) == \"6\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Solution doesn't match the expected output. \\nInput: {stdin} \\nOutput: {expected} \\n\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 2') == '6'\nassert solution('4 4') == '3'\nassert solution('7 3') == '1196'\nassert solution('31 8') == '64921457'"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3 2) == \"6\"\nassert solution(4 4) == \"3\"\nassert solution(7 3) == \"1196\"\nassert solution(31 8) == \"64921457\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Solution: {solution(stdin)}\\nExpected: {expected}\"\nfor stdin, expected in test_cases:\n    assert solution(stdin) == expected, f\"Solution: {solution(stdin)}\\nExpected: {expected}\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 2) == 6\nassert solution(4, 4) == 3\nassert solution(7, 3) == 1196\nassert solution(31, 8) == 64921457"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '3'"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 6\nassert solution(4) == 3\nassert solution(7) == 1196\nassert solution(31) == 64921457"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4 2\\n#..#\\n..#.\\n#...\") == \"#XXX\\n#X#.\\nX#..\\n...#\\n.#.#\""
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''3 4 2\n"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4 2\\n#..#\\n..#.\\n#...\") == \".X#\"\nassert solution(\"5 4 5\\n#...\\n#.#.\\n.#..\\n...#\\n.#.#\") == \"#XXX\\n#X#.X\\nX#..#\\n...#\""
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 4 2\n"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n    3 4 2\n    #..#\n    ..#.\n    #...\n    \"\"\") == \"\"\"\n    #.X#\n    X.#.\n    #...\n    \"\"\"\n\nassert solution(\"\"\"\n    5 4 5\n    #...\n    #.#.\n    .#..\n    ...#\n    .#.#\n    \"\"\") == \"\"\"\n    #XXX\n    #X#.\n    X#..\n    ...#\n    .#.#\n    \"\"\""
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"XXX\\nX#.\\nX#..\\n...#\\n.#.#\""
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4 2\\n#..#\\n..#.\\n#...\") == \"#XXX\\n#X#.\\nX#..\\n...#\\n.#.#\"\nassert solution(\"5 4 5\\n#...\\n#.#.\\n.#..\\n...#\") == \"#XXX\\n#X#.\\nX#..\\n...#\\n.#.#\""
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n3 4 2\n"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 2\\n#..#\\n..#.\\n#...\") == \"X#.\\nX.#.\\n#...\\n\"\nassert solution(\"5 4 5\\n#...\\n#.#.\\n.#..\\n...#\\n.#.#\\n\") == \"#XXX\\n#X#.\\nX#..\\n...#\\n.#.#\\n\"\nassert solution(\"5 4 1\\n#...\\n#.#.\\n.#..\\n...#\\n.#.#\\n\") == \"#XXX\\n#X#.\\nX#..\\n...#\\n.#.#\\n\"\nassert solution(\"5 4 2\\n#...\\n#.#.\\n.#..\\n...#\\n.#.#\\n\") == \"#XXX\\n#X#.\\nX#..\\n...#\\n.#.#\\n\"\nassert solution(\"5 4 1\\n#...\\n#.#.\\n.#..\\n...#\\n.#.#\\n\") == \"#XXX\\n#X#.\\nX#..\\n...#\\n.#.#\\n\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"3\"\nassert solution(\"18\") == \"4\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"1\\n\", \"Test case 3 failed\"\nassert solution(\"5\") == \"3\\n\", \"Test case 5 failed\"\nassert solution(\"18\") == \"4\\n\", \"Test case 18 failed\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 1\") == \"1\\n\"\nassert solution(\"5\\n1 2 2 2\") == \"3\\n\"\nassert solution(\"18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\") == \"4\\n\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for {input()} and expected output {expected_output}\"\n"
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1\\n\") == \"1\\n\"\nassert solution(\"5\\n1 2 2 2\\n\") == \"3\\n\"\nassert solution(\"18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\\n\") == \"4\\n\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1 1\\n') == '1\\n'\nassert solution('5\\n1 2 2 2\\n') == '3\\n'\nassert solution('18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\\n') == '4\\n'"
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1\\n\") == \"1\\n\"\nassert solution(\"5\\n1 2 2 2\\n\") == \"3\\n\"\nassert solution(\"18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\\n\") == \"4\\n\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 1\nassert solution(5) == 3\nassert solution(18) == 4"
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\n\ninput_data = [int(x) for x in input().split()]\nn = input_data[0]\np = [int(x) for x in input_data[1:]]"
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1\\n\") == \"1\\n\"\nassert solution(\"5\\n1 2 2 2\\n\") == \"3\\n\"\nassert solution(\"18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\\n\") == \"4\\n\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3 2\\n\") == \"2 4 1 5 3\\n\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '2 4 1 5 3\\n'\nassert solution(input()) == '2 1 4 5 3\\n'\nassert solution(input()) == '2 5 3 1 4\\n'\nassert solution(input()) == '2 4 5 3 1\\n'\nassert solution(input()) == '2 1 3 5 4\\n'\nassert solution(input()) == '2 5 4 3 1\\n'\nassert solution(input()) == '2 4 1 3 5\\n'\nassert solution(input()) == '2 1 5 4 3\\n'\nassert solution(input()) == '2 5 3 4 1\\n'\nassert solution(input()) == '2 4 3 1 5\\n'\nassert solution(input()) == '2 1 4 5 3\\n'\nassert solution(input()) == '2 5 3 1 4\\n'\nassert solution(input()) == '2 4 5 3 1\\n'\nassert solution(input()) == '2 1 3 5 4\\n'\nassert solution(input()) == '2 5 4 3 1\\n'\nassert solution(input()) == '2 4 1 3 5\\n'\nassert solution(input()) == '2 1 5 4 3\\n'\nassert solution(input()) == '2 5 3 4 1\\n'\nassert solution(input()) == '2 4 3 1 5\\n'"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\\n\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"-1\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\nassert solution(\"1 2 3\") == \"3 1 2 3\"\nassert solution(\"5 10 6\") == \"10 6 5 10\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"2 3 6 9 10 8 7 5 4 1\"\nassert solution(\"0 0 0\") == \"-1\"\n"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2 4 1 5 3\"\nassert solution(\"5 3 2\") == \"2 4 1 5 3\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 1 2\") == \"1 2\"\nassert solution(\"1 1 3\") == \"1 3\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2 4 1 5 3\"\n"
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n3 6 9 18 36 108\") == \"Yes\"\nassert solution(\"2\\n7 17\") == \"No\"\nassert solution(\"9\\n4 8 10 12 15 18 33 44 81\") == \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n3 6 9 18 36 108\") == \"Yes\\n\"\nassert solution(\"2\\n7 17\") == \"No\\n\"\nassert solution(\"9\\n4 8 10 12 15 18 33 44 81\") == \"Yes\\n\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Input\") == \"Yes\" # Correct output: \"Yes\"\nassert solution(\"Input\") == \"No\" # Correct output: \"No\"\nassert solution(\"Input\") == \"Yes\" # Correct output: \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6\\n3 6 9 18 36 108') == 'Yes\\n'\nassert solution('2\\n7 17') == 'No\\n'\nassert solution('9\\n4 8 10 12 15 18 33 44 81') == 'Yes\\n'\n\nfrom typing import List\n\nclass Node:\n    def __init__(self, val: int):\n        self.val = val\n        self.left = None\n        self.right = None\n\nclass Solution:\n    def __init__(self):\n        self.root = None\n    \n    def insert(self, val: int) -> None:\n        if self.root is None:\n            self.root = Node(val)\n        else:\n            self._insert(self.root, val)\n    \n    def _insert(self, node: Node, val: int) -> None:\n        if val < node.val:\n            if not node.left:\n                node.left = Node(val)\n            else:\n                self._insert(node.left, val)\n        else:\n            if not node.right:\n                node.right = Node(val)\n            else:\n                self._insert(node.right, val)\n    \n    def is_valid_tree(self, node: Node) -> bool:\n        def gcd(a: int, b: int) -> int:\n            while b:\n                a, b = b, a % b\n            return a\n        \n        a = 1\n        b = node.val\n        while a < b:\n            a, b = b, gcd(a, b)\n        return a == 1\n    \n    def reconstruct_tree(self, node: Node) -> None:\n        if not node:\n            return\n        self.reconstruct_tree(node.left)\n        self.reconstruct_tree(node.right)\n        if self.is_valid_tree(node):\n            self.insert(node.val)\n    \n    def reconstruct_binary_tree(self, a: List[int]) -> Node:\n        self.root = None\n        for val in a:\n            self.insert(val)\n        return self.root"
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 6 9 18 36 108\") == \"Yes\"\nassert solution(\"2 7 17\") == \"No\"\nassert solution(\"9 4 8 10 12 15 18 33 44 81\") == \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Input\\n6\\n3 6 9 18 36 108\\n\\nOutput\\nYes\\n\\nInput\\n2\\n7 17\\n\\nOutput\\nNo\\n\\nInput\\n9\\n4 8 10 12 15 18 33 44 81\\n\\nOutput\\nYes\\n\\n') == 'Yes\\nNo\\nYes\\n'"
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 6 9 18 36 108') == 'Yes'\nassert solution('2 7 17') == 'No'\nassert solution('9 4 8 10 12 15 18 33 44 81') == 'Yes'"
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"Yes\", \"Expected 'Yes', but got '{}'\".format(solution())"
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n3 6 9 18 36 108\") == \"Yes\"\nassert solution(\"2\\n7 17\") == \"No\"\nassert solution(\"9\\n4 8 10 12 15 18 33 44 81\") == \"Yes\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\\n\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6\\n1 2 -6 4 5 3\\n') == '12'\nprint(\"All test cases passed successfully\")"
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\"\nprint(\"All test cases passed successfully.\")"
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\"\n"
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\\n\") == \"12\\n\"\n"
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"12\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\"\nassert solution(\"1\\n-5\") == \"5\"\nassert solution(\"5\\n0 2\") == \"10\"\nassert solution(\"5\\n1 2\") == \"12\"\nassert solution(\"5\\n-1 2\") == \"11\"\n"
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\\n\") == \"12\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 3\\n3 1 4 2') == '5\\n'\nassert solution('8 3\\n3 1 2 4 6 8 2') == '7\\n'\nassert solution('4 5\\n2 4 1 3 5') == '5\\n'\nassert solution('5 3\\n1 2 3 4 5 6') == '5\\n'\nassert solution('5 1\\n1 2 3 4 5') == '3\\n'\n"
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"5\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n3 1 4 2\\n\") == \"5\\n\", \"Incorrect solution\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n3 1 4 2\\n\") == \"5\\n\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n3 1 4 2\\n\") == \"5\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"5\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 3\\n3 1 4 2') == '5'"
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n3 1 4 2\") == 5, \"The output is not as expected.\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n3 1 4 2\") == \"5\\n\"\nassert solution(\"4 5\\n5 4 3 2 1\") == \"5\\n\"\nassert solution(\"4 5\\n4 3 2 1 5 6 7\") == \"5\\n\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 3\\n3 1 4 2\\n') == '5\\n'\n"
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '''0 0\n0 1'''"
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\\n2 3 1\\n3 2 1\") == \"0 0\"\nassert solution(\"3\\n2 3 1\\n3 2 1\") == \"0 1\"\nassert solution(\"3\\n3 2 1\\n3 1 2\") == \"2 1\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    3\n    1 2 3\n    2 3 1\n    3 2 1\n    \"\"\"\n) == \"0 0\"\n\nassert solution(\n    \"\"\"\n    3\n    2 3 1\n    3 2 1\n    1 2 3\n    \"\"\"\n) == \"0 1\"\n\nassert solution(\n    \"\"\"\n    3\n    3 2 1\n    3 1 2\n    2 1 3\n    \"\"\"\n) == \"2 1\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"0 0\"\nassert solution() == \"0 1\"\nassert solution() == \"2 1\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2 3 1\\n3\\n3 2 1\") == \"0 0\\n0 1\\n2 1\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2 3\\n3\\n2 3 1\\n3\\n3 2 1') == '0 0\\n0 1\\n2 1\\n'\nassert solution('3\\n2 3 1\\n3\\n3 2 1\\n3\\n2 1 3') == '0 1\\n2 0\\n2 2\\n1 0\\n'\nassert solution('3\\n3 2 1\\n3\\n2 1 3\\n3\\n1 2 3') == '2 1\\n1 0\\n2 0\\n1 2\\n'"
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\") == \"0 0\"\nassert solution(\"3\\n2 3 1\") == \"0 1\"\nassert solution(\"3\\n3 2 1\") == \"2 1\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\\n3 2 1\\n3 3 2 1\") == \"0 0\\n0 1\\n2 1\"\nassert solution(\"3\\n2 3 1\\n3 2 1\\n3 3 2 1\") == \"0 1\\n2 1\"\nassert solution(\"3\\n3 2 1\\n3 2 1\\n3 3 2 1\") == \"2 1\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"0 0\\n0 1\\n2 1\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2 3 1\") == \"0 0\"\nassert solution(\"3\\n2 3 1\\n3\\n3 2 1\") == \"0 1\"\nassert solution(\"3\\n3 2 1\\n3\\n2 3 1\") == \"2 1\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 4\\na\\nb\\n\") == \"6\"\nassert solution(\"3 3\\naba\\nbba\\n\") == \"8\"\nassert solution(\"4 5\\nabbb\\nabaa\\n\") == \"8\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 4\\naa\\nbb\\n') == '6\\n'\nassert solution('3 3\\naba\\nbba\\n') == '8\\n'\nassert solution('4 5\\nabbb\\nbaaa\\n') == '8\\n'"
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n    2 4\n    aa\n    bb\n    \"\"\") == \"6\\n\"\n\nassert solution(\"\"\"\n    3 3\n    aba\n    bba\n    \"\"\") == \"8\\n\"\n\nassert solution(\"\"\"\n    4 5\n    abbb\n    baaa\n    \"\"\") == \"8\\n\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4\\naa\\nbb\") == \"6\"\nassert solution(\"3 3\\naba\\nbba\") == \"8\"\nassert solution(\"4 5\\nabbb\\nbaaa\") == \"8\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    2 4\n
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4\\na\\nb\\n\") == \"6\"\nassert solution(\"3 3\\na\\nb\\n\") == \"8\"\nassert solution(\"4 5\\nabbb\\nabaa\\n\") == \"8\"\n"
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4\\na\\nb\\n\") == \"6\"\nassert solution(\"3 3\\naba\\nbba\\n\") == \"8\"\nassert solution(\"4 5\\nabbb\\nabaa\\n\") == \"8\"\n"
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4\\naa\\nbb\") == \"6\\n\"\nassert solution(\"3 3\\naba\\nbba\") == \"8\\n\"\nassert solution(\"4 5\\nabbb\\nbaaa\") == \"8\\n\"\n"
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    2 4\n     aa\n     bb\n    \"\"\"\n) == \"6\\n\"\n\nassert solution(\n    \"\"\"\n    3 3\n     aba\n     bba\n    \"\"\"\n) == \"8\\n\"\n\nassert solution(\n    \"\"\"\n    4 5\n     abbb\n     baaa\n    \"\"\"\n) == \"8\\n\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aa\") == \"6\"\nassert solution(\"bb\") == \"8\"\nassert solution(\"aba\") == \"8\"\nassert solution(\"baaa\") == \"8\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"YES\\n0 0 0\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\"\nassert solution(input()) == \"NO\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got {solution(input())}\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\nassert solution(input()) == \"NO\\ndef solution(stdin: str) -> str:\\npass\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"NO\"\n"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1'"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"NO\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\n\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"NO\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'NO'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'NO'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'NO'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'NO'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'NO'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'NO'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'NO'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'NO'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'NO'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'NO'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'NO'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'NO'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'NO'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'NO'\nassert solution('0 0 0\\n0"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1'"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1'\n\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'NO'\n\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n2 1 0') == 'YES\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 0 1\\n0 1 1\\n0 1 1\\n1 1 1'\n\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n2 1 0') == 'NO'"
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n2 3 6 7') == 'YES\\n2 2 1 1 '\nassert solution('5\\n6 15 35 77 22') == 'YES\\n2 1 2 1 1 '\nassert solution('5\\n6 10 15 1000 75') == 'NO\\ndef solution(stdin: str) -> str: pass'"
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4) == \"YES\\n2 2 1 1\"\nassert solution(5) == \"YES\\n2 1 2 1 1\"\nassert solution(5) == \"NO\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nfrom typing import List\n"
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(read_input()) == \"YES\\n2 2 1 1\"\nassert solution(read_input()) == \"YES\\n2 2 1 1\"\nassert solution(read_input()) == \"YES\\n2 2 1 1\"\nassert solution(read_input()) == \"NO\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\\n\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"NO\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([4]) == \"YES\\n2 2 1 1\"\nassert solution([5]) == \"YES\\n2 1 2 1 1\"\nassert solution([5]) == \"NO\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 3 6 7\\n\") == \"YES\\n2 2 1 1\"\nassert solution(\"5\\n6 15 35 77 22\\n\") == \"YES\\n2 1 2 1 1\"\nassert solution(\"5\\n6 10 15 1000 75\\n\") == \"NO\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(4) == \"YES\\n2 2 1 1\"\nassert solution(5) == \"YES\\n2 1 2 1 1\"\nassert solution(5) == \"NO\\n2 1 2 1 1\"\nassert solution(5) == \"NO\\n1 1 2 2 1\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"YES\") == \"YES\"\nassert solution(\"NO\") == \"NO\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([2, 3, 6, 7]) == \"YES\"\nassert solution([6, 15, 35, 77, 22]) == \"YES\"\nassert solution([6, 10, 15, 1000, 75]) == \"NO\"\n\nfrom typing import List"
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Input\\n4\\n2 3 6 7\") == \"YES\\n2 2 1 1\"\nassert solution(\"Input\\n5\\n6 15 35 77 22\") == \"YES\\n2 1 2 1 1\"\nassert solution(\"Input\\n5\\n6 10 15 1000 75\") == \"NO\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"100\\n60\\n70\") == \"40\"\nassert solution(\"410\\n55\\n70\") == \"5\"\nassert solution(\"600\\n60\\n70\") == \"0\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"100\\n60\\n70\") == \"40\\n\"\nassert solution(\"410\\n55\\n70\") == \"5\\n\"\nassert solution(\"600\\n60\\n70\") == \"0\\n\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100\\n60\\n70\") == \"40\"\nassert solution(\"410\\n55\\n70\") == \"5\"\nassert solution(\"600\\n60\\n70\") == \"0\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"Invalid input\"\nassert solution(\"1 2 3 4\") == \"Invalid input\"\nassert solution(\"1 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"Invalid input\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"Invalid input\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"Invalid input\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"Invalid input\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 "
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected_solution"
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('100\\n60\\n70') == '40'\nassert solution('410\\n55\\n70') == '5'\nassert solution('600\\n60\\n70') == '0'"
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"12\\n3 1 4 1 5 9 2 6 5 3 5 8\\n5\\n1 1 1 1 1\\n\") == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\\n\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"12\\n3 1 4 1 5 9 2 6 5 3 5 8\") == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\"\n\nassert solution(\"5\\n1 1 1 1 1\") == \"1\\n1 1\\n1\\n1\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"12\\n3 1 4 1 5 9 2 6 5 3 5 8\") == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\\n1 1 1\"\n\nfrom typing import List"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\\n\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected\n\nfrom typing import List"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"12\\n3 1 4 1 5 9 2 6 5 3 5 8\") == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('12\\n3 1 4 1 5 9 2 6 5 3 5 8') == '12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\\n'"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"12\\n3 1 4 1 5 9 2 6 5 3 5 8\") == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\\n1 1 1 1 1\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\"\n\nfrom typing import List"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\\n\"\nassert solution(\"5 2\\n3 5 4\\n1 3 2\\n\") == \"4\\n\"\nassert solution(\"4 2\\n1 3 4\\n1 5 2\\n\") == \"12\\n\"\nassert solution(\"3 2\\n1 2 4\\n1 4 2\\n\") == \"2\\n\"\nassert solution(\"4 3\\n1 5 3\\n1 3 4\\n\") == \"3\\n\"\nassert solution(\"4 2\\n2 4 2\\n2 3 4\\n\") == \"2\\n\"\nassert solution(\"3 2\\n2 2 3\\n2 3 4\\n\") == \"1\\n\"\nassert solution(\"4 2\\n2 2 4\\n2 3 2\\n\") == \"1\\n\"\nassert solution(\"3 3\\n2 4 5\\n2 5 4\\n\") == \"3\\n\"\nassert solution(\"3 3\\n2 4 5\\n3 5 4\\n\") == \"0\\n\"\nassert solution(\"4 4\\n1 5 6\\n1 6 5\\n\") == \"3\\n\"\nassert solution(\"4 4\\n1 5 6\\n2 6 5\\n\") == \"6\\n\"\nassert solution(\"4 4\\n1 5 6\\n3 6 5\\n\") == \"0\\n\"\nassert solution(\"4 4\\n1 5 6\\n4 6 5\\n\") == \"0\\n\"\nassert solution(\"4 4\\n1 5 6\\n5 6 5\\n\") == \"0\\n\"\nassert solution(\"4 4\\n1 5 6\\n6 6 5\\n\") == \"0\\n\"\nassert solution(\"4 4\\n1 5 6\\n7 6 5\\n\") == \"0\\n\"\nassert solution(\"4 4\\n1 5 6\\n8 6 5\\n\") == \"0\\n\""
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\\n\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\\n\""
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\\n\"\nassert solution(\"3 2\\n2 2 1\\n\") == \"2\\n\"\nassert solution(\"3 4\\n1 1 1\\n2 1 1\\n3 1 1\\n\") == \"1\\n\"\nassert solution(\"3 4\\n1 2 3\\n2 3 1\\n3 2 1\\n4 1 1\\n\") == \"2\\n\"\nassert solution(\"5 3\\n1 2 3\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9\\n8 9 10\\n9 10 11\\n10 11 12\\n11 12 13\\n12 13 14\\n13 14 15\\n14 15 16\\n15 16 17\\n16 17 18\\n17 18 19\\n18 19 20\\n19 20 21\\n20 21 22\\n21 22 23\\n22 23 24\\n23 24 25\\n24 25 26\\n25 26 27\\n26 27 28\\n27 28 29\\n28 29 30\\n29 30 31\\n30 31 32\\n31 32 33\\n32 33 34\\n33 34 35\\n34 35 36\\n35 36 37\\n36 37 38\\n37 38 39\\n38 39 40\\n39 40 41\\n40 41 42\\n41 42 43\\n42 43 44\\n43 44 45\\n44 45 46\\n45 46 47\\n46 47 48\\n47 48 49\\n48 49 50\\n49 50 51\\n50 51 52\\n51 52 53\\n52 53 54\\n53 54 55\\n54 55 56\\n55 56 57\\n56 57 58\\n57 58 59\\n58 59 60\\n59 60 61\\n60 61 62\\n61 62 63\\n62 63 64\\n63 64 65\\n64 65 66\\n65 66 67\\n66 67 68\\n67 68 69\\n68 69 70\\n69 70 71\\n70 71 72\\n71 72 73\\n72 73 74\\n73 74 75\\n74 75 76\\n75 76 77\\n76 77 78\\n77 78 79\\n78 79 80\\n79 80 81\\n80 81 82\\n81 82 83\\n82 83 84\\n83 84 85\\n84 85 86\\n85 86 87\\n86 87 88\\n87 88 89\\n88 89 90\\n89 90 91\\n90 91 92\\n91 92 93\\n92 93"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\\n\"\nassert solution(\"2 3\\n3 2 1\\n\") == \"6\\n\"\nassert solution(\"1 2\\n1 3 3\\n\") == \"18\\n\"\nassert solution(\"4 5\\n1 4 2\\n\") == \"30\\n\"\nassert solution(\"3 4\\n3 3 2\\n\") == \"24\\n\"\nassert solution(\"5 6\\n1 5 3\\n\") == \"54\\n\""
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\\n\"\n"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '6\\n'\nassert solution(stdin) == '12\\n'\nassert solution(stdin) == '38\\n'\nassert solution(stdin) == '114\\n'\nassert solution(stdin) == '5268\\n'"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n1 3 3\") == \"6\"\nassert solution(\"5 2\\n1 2 1 3 2\") == \"6\"\nassert solution(\"7 4\\n1 4 3 2 1 5\") == \"42\"\nassert solution(\"8 3\\n1 5 3 2 1 4 6\") == \"126\"\nassert solution(\"9 3\\n1 5 3 2 1 4 6 7 8 9 10\") == \"16106159037913692855\"\n"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\\n\""
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n1 3 3\") == \"6\"\nassert solution(\"3 2\\n1 2 3\") == \"2\"\nassert solution(\"3 3\\n1 1 1\") == \"1\"\nassert solution(\"3 2\\n1 1 2\") == \"1\"\nassert solution(\"3 1\\n1 1 3\") == \"1\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"87654\\n30\") == \"10\"\n"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"87654\\n30\") == \"10\"\nassert solution(\"\") == \"-1\"\n"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"87654\") == \"10\"\nassert solution(\"30\") == \"-1\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"87654\\n30\") == 10"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"87654\") == \"10\"\nassert solution(\"30\") == \"10\"\nassert solution(\"\") == \"1\"\nassert solution(\"not a number\") == \"1\"\nassert solution(\"5000\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"87654\\n30\\n\") == \"10\\n\"\nassert solution(\"\") == \"-1\\n\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '10'"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"87654\\n30\") == \"10\"\nassert solution(\"12345\\n67890\") == \"-1\"\nassert solution(\"12345678901234567890\\n0\") == \"-1\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"87654 30\") == \"10\\n\"\nassert solution(\"5 1234567890\") == \"-1\\n\"\nassert solution(\"100 87654321\") == \"-1\\n\"\nassert solution(\"1 1\") == \"-1\\n\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == -1, \"Incorrect Output\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aba\") == \"First\\nSecond\\n\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aba\") == \"Second\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aba\") == \"Second\", \"The expected output is 'Second', but it is: \" + solution(\"aba\")"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aba\") == \"Second\"\nassert solution(\"cccb\") == \"First\"\nassert solution(\"aaabbbccc\") == \"Second\"\nassert solution(\"aabbbccc\") == \"First\"\nassert solution(\"aabbb\") == \"First\"\nassert solution(\"abc\") == \"Second\"\nassert solution(\"cabc\") == \"First\"\nassert solution(\"aaa\") == \"Second\"\nassert solution(\"abcd\") == \"First\"\nassert solution(\"aabbcc\") == \"First\"\nassert solution(\"ccba\") == \"First\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('aba') == 'Second'\nprint('All tests passed!')"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('aba') == 'Second', \"Expected 'Second', got {}\".format(solution('aba'))"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aba\") == \"Second\\n\"\nassert solution(\"aab\") == \"First\\n\"\nassert solution(\"aabb\") == \"First\\n\"\nassert solution(\"abc\") == \"First\\n\"\nassert solution(\"abcd\") == \"Second\\n\"\n"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aba\") == \"Second\", \"The solution should return Second, but it returns {}\".format(solution(\"aba\"))"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aba\") == \"Second\"\nassert solution(\"aaab\") == \"First\"\nassert solution(\"abcd\") == \"First\"\nassert solution(\"aaac\") == \"Second\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aba\") == \"Second\", \"Expected output: Second\"\n\nassert solution(\"aabb\") == \"Second\", \"Expected output: Second\"\n\nassert solution(\"abac\") == \"First\", \"Expected output: First\"\n\nassert solution(\"bcaa\") == \"First\", \"Expected output: First\"\n\nassert solution(\"acca\") == \"First\", \"Expected output: First\"\n\nassert solution(\"abcd\") == \"First\", \"Expected output: First\""
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\n12345\") == \"6\\n\"\nassert solution(\"16\\n439873893693495623498263984765\") == \"40\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(10, \"12345\") == 6\nassert solution(16, \"439873893693495623498263984765\") == 40"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(12345) == 6, \"Expected output: 6, but got {}\".format(solution(12345))  # expected output: 6\nassert solution(16) == 40, \"Expected output: 40, but got {}\".format(solution(16))  # expected output: 40"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Output\""
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'Output', 'Test failed'\n"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '6', \"The output is not the expected value.\"\n"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\n12345\") == 6\nassert solution(\"16\\n439873893693495623498263984765\") == 40"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\"\n"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(10, \"12345\") == 6, \"The output is incorrect.\"\nassert solution(16, \"439873893693495623498263984765\") == 40, \"The output is incorrect.\"\n"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\n12345\") == \"6\", \"Test 1\"\nassert solution(\"16\\n439873893693495623498263984765\") == \"40\", \"Test 2\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution( \"\"\"2 1\n0 1\n2 1\n\"\"\") == \"332748119\\n332748119\\n\"\n\nassert solution( \"\"\"1 2\n1\n1\n\"\"\") == \"3\\n\"\n\nassert solution( \"\"\"3 3\n0 1 1\n4 3 5\n\"\"\") == \"160955686\\n185138929\\n974061117\\n\"\n\nfrom functools import reduce\n"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"TODO\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"332748119\\n332748119\\n\"\nassert solution() == \"3\\n160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\") == \"160955686\\n185138929\\n974061117\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '332748119\\n332748119\\n1\\n'\n"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n2 1\n0 1\n2 1\n''') == '332748119'\n\nassert solution('''\n1 2\n1\n1\n''') == '3'\n\nassert solution('''\n3 3\n0 1 1\n4 3 5\n''') == '160955686'"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"332748119\\n332748119\\n\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\" == \"ORZ\"), \"The output is incorrect.\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('AJKEQSLOBSROFGZ') == 'ORZ'\nassert solution('AA') == '0'"
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\", \"Test 1 failed\"\nassert solution(\"OVGURWZLWVLUXTH\") == \"ORZ\", \"Test 2 failed\"\nassert solution(\"AA\") == 0, \"Test 3 failed\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\\nOVGURWZLWVLUXTH\\nOZ\") == \"ORZ\"\nassert solution(\"AA\\nA\\nA\") == \"0\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\\nOVGURWZLWVLUXTH\\nOZ\") == \"ORZ\"\n\nassert solution(\"AA\\nA\\nA\") == \"0\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\"\n\nassert solution(\"AA\") == 0"
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\\nOVGURWZLWVLUXTH\\nOZ\") == \"ORZ\"\n\nassert solution(\"AA\\nA\\nA\") == \"0\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\\nOVGURWZLWVLUXTH\\nOZ\") == \"ORZ\"\nassert solution(\"AA\\nA\\nA\") == \"0\"\n"
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\"\n\nassert solution(\"AA\") == \"0\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 2 1\\n1 100 1\\n1 100 100') == 99\nassert solution('100 100 100\\n1 1 1\\n1 1 1') == 0\n"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\\n\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\\n\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == 99\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == 0"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\\n\", \"Test 1 failed\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\\n\", \"Test 2 failed\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\\n\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\\n\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\"\n"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 2 1\\n1 100 1\\n1 100 100') == '99'\nassert solution('100 100 100\\n1 1 1\\n1 1 1') == '0'"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\\n\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\\n\"\nassert solution(\"10 10 10\") == \"10\\n\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1000000000000) == 118606527258, \"1000000000000 should be 118606527258\"\nassert solution(3, 2) == 1, \"3 2 should be 1\"\nassert solution(3, 3) == 0, \"3 3 should be 0\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"1\", \"The first example should return 1\"\nassert solution(\"3 2\") == \"1\", \"The second example should return 1\"\nassert solution(\"3 3\") == \"0\", \"The third example should return 0\"\nassert solution(\"1000000000000 1048576\") == \"118606527258\", \"The fourth example should return 118606527258\"\nassert solution(\"1000000000000\") == \"0\", \"The fifth example should return 0\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1, 1) == 1\nassert solution(3, 2) == 1\nassert solution(3, 3) == 0\nassert solution(1000000000000, 1048576) == 118606527258"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == 1\nassert solution(\"3 2\") == 1\nassert solution(\"3 3\") == 0\nassert solution(\"1000000000000 1048576\") == 118606527258"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n\") == \"1\\n\"\nassert solution(\"3 2\\n\") == \"1\\n\"\nassert solution(\"3 3\\n\") == \"0\\n\"\nassert solution(\"1000000000000 1048576\\n\") == \"118606527258\\n\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Output: {output()}, Error: {solution(input())}\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 2) == 1\nassert solution(3, 3) == 0\nassert solution(1000000000000, 1048576) == 118606527258\n"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '1', \"The solution is incorrect.\"\n\nfrom sys import stdin\n\nn, t = list(map(int, stdin.readline().split()))"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 1\\n') == '1\\n'\nassert solution('3 2\\n') == '1\\n'\nassert solution('3 3\\n') == '0\\n'\nassert solution('1000000000000 1048576\\n') == '118606527258\\n'"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 1\nassert solution(2) == 1\nassert solution(3) == 0\nassert solution(1000000000000) == 118606527258\n"
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('-++-') == 'No', 'Input: -++- Output:'+ solution('-++-')\nassert solution('+') == 'No', 'Input: + Output:'+ solution('+')\nassert solution('++') == 'Yes', 'Input: ++ Output:'+ solution('++')\nassert solution('-') == 'No', 'Input: - Output:'+ solution('-')"
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"-++-\") == \"Yes\"\nassert solution(\"+-\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\"\n"
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"+-\") == \"Yes\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\"\nassert solution(\"+-\") == \"No\"\nassert solution(\"-++\") == \"Yes\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"-++-\") == \"Yes\"\nassert solution(\"-\") == \"No\"\nassert solution(\"+-\") == \"Yes\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\"\n\nfor line in stdin.readlines():\n    line = line.strip()\n    assert solution(line) == \"Yes\" if \"+\" in line else \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"-++-\") == \"Yes\"\nassert solution(\"-\") == \"No\"\nassert solution(\"-\") == \"No\"\nassert solution(\"+\") == \"Yes\"\nassert solution(\"+\") == \"Yes\"\nassert solution(\"++\") == \"Yes\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"No\"\nassert solution(\"-\") == \"No\"\nassert solution(\"+\") == \"Yes\"\nassert solution(\"-+\") == \"Yes\"\nassert solution(\"-+\") == \"Yes\"\nassert solution(\"+++\") == \"Yes\"\nassert solution(\"-+++\") == \"No\"\nassert solution(\"+++-\") == \"No\"\nassert solution(\"---+\") == \"No\"\nassert solution(\"-+++-\") == \"No\"\nassert solution(\"+++++\") == \"Yes\"\nassert solution(\"-+++++\") == \"Yes\"\nassert solution(\"+++++\") == \"No\"\nassert solution(\"-++++\") == \"No\"\nassert solution(\"++++\") == \"No\"\nassert solution(\"-+\") == \"No\"\nassert solution(\"-\") == \"No\"\nassert solution(\"+\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"+-\") == \"Yes\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"-++-\") == \"Yes\"\nassert solution(\"-\") == \"No\"\nassert solution(\"+-\") == \"Yes\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\"\n"
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"-++-\") == \"Yes\"\nassert solution(\"+\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\"\n"
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"-----Input-----\\n-++-\") == \"Yes\"\nassert solution(\"-----Input-----\\n+-\") == \"No\"\nassert solution(\"-----Input-----\\n++\") == \"Yes\"\nassert solution(\"-----Input-----\\n-\") == \"No\""
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"12.566370614359172464\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 0 0\\n0 1\\n-1 2\\n1 2\") == \"12.566370614359172464\"\nassert solution(\"4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\") == \"21.991148575128551812\""
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"12.566370614359172464\", \"Incorrect Output\""
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 0 0\\n0 1\\n-1 2\\n1 2\") == 12.566370614359172464\n\nassert solution(\"4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\") == 21.991148575128551812\n\nassert solution(\"1\\n1\\n1\") == 0\n\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == 0\n\nassert solution(\"3\\n2 1\\n0\\n4 3\\n-1\\n5\\n6\\n7\\n8\\n9\\n10\") == 0\n\nassert solution(\"2\\n1\\n0\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == 0\n\nassert solution(\"3\\n2\\n1\\n0\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == 0\n\nassert solution(\"3\\n2 1\\n0\\n4 3\\n-1\\n5\\n6\\n7\\n8\\n9\\n10\") == 0\n\nassert solution(\"4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\") == 21.991148575128551812\n\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == 0\n\nassert solution(\"1\\n1\\n1\") == 0\n\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == 0\n\nassert solution(\"3\\n2 1\\n0\\n4 3\\n-1\\n5\\n6\\n7\\n8\\n9\\n10\") == 0"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '12.566370614359172464'"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 0 0\\n0 1\\n-1 2\\n1 2') == '12.566370614359172464'\nassert solution('4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1') == '21.991148575128551812'"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 0 0\\n0 1\\n-1 2\\n1 2\") == 12.566370614359172464\n\nassert solution(\"4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\") == 21.991148575128551812"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"12.566370614359172464\""
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '12.566370614359172464'\nassert solution() == '21.991148575128551812'"
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"48\") == \"9 42\", \"The first sample test is incorrect.\"\nassert solution(\"6\") == \"6 6\", \"The second sample test is incorrect.\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(48) == \"9 42\\n\", \"Test case 48 should return 9 42\"\nassert solution(6) == \"6 6\\n\", \"Test case 6 should return 6 6\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('48') == '9 42', 'Test Case 1 failed'\nassert solution('6') == '6 6', 'Test Case 2 failed'"
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"48\") == \"9 42\", \"Expected output: 9 42\"\nassert solution(\"6\") == \"6 6\", \"Expected output: 6 6\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"48\\n\") == \"9 42\\n\"\nassert solution(\"6\\n\") == \"6 6\\n\"\nassert solution(\"11\\n\") == \"11 12\\n\"\nassert solution(\"17\\n\") == \"24 25\\n\"\nassert solution(\"23\\n\") == \"9 42\\n\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"48\") == \"9 42\", \"Test 1 failed\"\nassert solution(\"6\") == \"6 6\", \"Test 2 failed\"\n"
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"9 42\"\nassert solution(input()) == \"6 6\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"9 42\"\nassert solution(stdin) == \"6 6\"\n\nimport sys"
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == \"9 42\", \"Input 1\"\nassert solution(2) == \"6 6\", \"Input 2\"\nassert solution(3) == \"36 30\", \"Input 3\"\nassert solution(4) == \"468 1224\", \"Input 4\"\nassert solution(5) == \"9284 313984\", \"Input 5\"\nassert solution(6) == \"111085 10241704\", \"Input 6\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"48\") == \"9 42\", \"Test 1\"\nassert solution(\"6\") == \"6 6\", \"Test 2\"\n\nfrom typing import List"
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n)(\\n\") == \"Yes\"\nassert solution(\"3\\n(()\\n\") == \"No\"\nassert solution(\"2\\n()\\n\") == \"Yes\"\nassert solution(\"10\\n)))))(((((\\n\") == \"No\"\n"
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n())\") == \"Yes\"\nassert solution(\"3\\n(()\") == \"No\"\nassert solution(\"2\\n()\") == \"Yes\"\nassert solution(\"10\\n(((((((\")) == \"No\"\n"
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n())\") == \"Yes\"\nassert solution(\"3\\n(()\") == \"No\"\nassert solution(\"2\\n()\") == \"Yes\"\nassert solution(\"10\\n())))(((((\") == \"No\")"
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n)(\\n\") == \"Yes\\n\"\nassert solution(\"3\\n(()\\n\") == \"No\\n\"\nassert solution(\"2\\n()\") == \"Yes\\n\"\nassert solution(\"10\\n(((\\n\") == \"No\\n\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == output, f\"Input:\\n{stdin}\\n\\nOutput:\\n{output}\" for stdin, output in [(\"2\\n()\\n\", \"Yes\\n\"), (\"3\\n(()\\n\", \"No\\n\"), (\"2\\n()\\n\", \"Yes\\n\"), (\"10\\n)))(((((\\n\", \"No\\n\")]"
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n)(\") == \"Yes\", \"Petya can make his sequence correct moving at most one bracket.\"\nassert solution(\"3\\n(()\") == \"No\", \"There is no way to move at most one bracket.\"\nassert solution(\"2\\n()\") == \"Yes\", \"The sequence is already correct and there's no need to move brackets.\"\nassert solution(\"10\\n)))))(((((\") == \"No\", \"No\" if n <= 10000 and len(sequence) % 2 == 1 else \"Yes\", \"Petya can make his sequence correct moving at most one bracket.\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(r\"\"\"\n    2\n    )\n\"\"\") == \"Yes\\n\"\n\nassert solution(r\"\"\"\n    3\n    ()\n\"\"\") == \"No\\n\"\n\nassert solution(r\"\"\"\n    2\n    ()\n\"\"\") == \"Yes\\n\"\n\nassert solution(r\"\"\"\n    10\n    )))))(((((\n\"\"\") == \"No\\n\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"Yes\"\nassert solution(\"3\") == \"No\"\nassert solution(\"2\") == \"Yes\"\nassert solution(\"10\") == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n)(\\n\") == \"Yes\\n\"\nassert solution(\"3\\n(()\\n\") == \"No\\n\"\nassert solution(\"2\\n()\\n\") == \"Yes\\n\"\nassert solution(\"10\\n)))(((\\n\") == \"No\\n\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n)(\\n') == 'Yes'\nassert solution('3\\n(()\\n') == 'No'\nassert solution('2\\n()') == 'Yes'\nassert solution('10\\n)))))(((((\\n') == 'No'"
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"The given input '{input()}' is incorrect. Please check the examples and provide the correct output.\\nOutput: {output}\\n\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 50\\n50\\n') == '1\\n1\\n'\nassert solution('3 100\\n50 50 100\\n') == '5\\n2\\n'\nassert solution('2 50\\n50 50\\n') == '-1\\n0\\n'\n"
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 50\\n50\\n\") == \"1\\n1\\n\"\nassert solution(\"3 100\\n50 50 100\\n\") == \"5\\n2\\n\"\nassert solution(\"2 50\\n50 50\\n\") == \"-1\\n0\\n\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '1\\n1\\n5\\n2\\n'\nassert solution(stdin) == '0\\n0\\n1000000007\\n1000000007\\n'"
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 50\\n50\") == \"1\\n1\\n\"\nassert solution(\"3 100\\n50 50 100\") == \"5\\n2\\n\"\nassert solution(\"2 50\\n50 50\") == \"-1\\n0\\n\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 50\\n50\\n\") == \"1\"\nassert solution(\"3 100\\n50 50 100\\n\") == \"5\"\nassert solution(\"2 50\\n50 50\\n\") == \"-1\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 50\\n50\") == \"1\"\nassert solution(\"3 100\\n50 50 100\") == \"5\"\nassert solution(\"2 50\\n50 50\") == \"-1\"\nassert solution(\"1 50\\n50 50 100 50 50 50 50\") == \"0\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 50\\n50\") == \"1\\n1\\n\"\nassert solution(\"3 100\\n50 50 100\") == \"5\\n2\\n\"\nassert solution(\"2 50\\n50 50\") == \"-1\\n0\\n\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 50\\n50\\n\") == \"1\\n1\\n\"\nassert solution(\"3 100\\n50 50 100\\n\") == \"5\\n2\\n\"\nassert solution(\"2 50\\n50 50\\n\") == \"-1\\n0\\n\"\nassert solution(\"1 50\\n50\\n\") == \"1\\n1\\n\"\nassert solution(\"3 100\\n50 50 100\\n\") == \"5\\n2\\n\"\nassert solution(\"2 50\\n50 50\\n\") == \"-1\\n0\\n\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 50\\n50\\n\") == 1\nassert solution(\"3 100\\n50 50 100\\n\") == 5\nassert solution(\"2 50\\n50 50\\n\") == -1\nassert solution(\"4 50\\n100\\n\") == 0\n\nfrom typing import List"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\\n\", \"The solution is incorrect.\"\n"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n2 6 8\\n') == '2\\n'\nassert solution('5\\n2 3 4 9 12\\n') == '4\\n'\nassert solution('4\\n5 7 2 9\\n') == '1\\n'"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n3\n2 6 8\n''') == '2\\n'\n\nassert solution('''\n5\n2 3 4 9 12\n''') == '4\\n'\n\nassert solution('''\n4\n5 7 2 9\n''') == '1\\n'"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 6 8\\n\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 9 12\\n\") == \"4\\n\"\nassert solution(\"4\\n5 7 2 9\\n\") == \"1\\n\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 6 8\") == \"2\"\nassert solution(\"5\\n2 3 4 9 12\") == \"4\"\nassert solution(\"4\\n5 7 2 9\") == \"1\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(solution(solution(solution(solution(\"3\\n2 6 8\\n\"))))) == \"2\\n\"\nassert solution(solution(solution(solution(solution(\"5\\n2 3 4 9 12\\n\"))))) == \"4\\n\"\nassert solution(solution(solution(solution(solution(\"4\\n5 7 2 9\\n\"))))) == \"1\\n\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 6 8\\n\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 9 12\\n\") == \"4\\n\"\nassert solution(\"4\\n5 7 2 9\\n\") == \"1\\n\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 6 8\\n\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 9 12\\n\") == \"4\\n\"\nassert solution(\"4\\n5 7 2 9\\n\") == \"1\\n\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n17 18\\n15 24\\n12 15\") == \"6\"\nassert solution(\"2\\n10 16\\n7 17\") == \"-1\"\nassert solution(\"5\\n90 108\\n45 105\\n75 40\\n165 175\\n33 30\") == \"5\""
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution(stdin)) == 6\nassert solution(solution(stdin)) == 6\nassert solution(solution(stdin)) == -1\nassert solution(solution(stdin)) == -1\nassert solution(solution(stdin)) == 5\nassert solution(solution(stdin)) == 5\n\nfor i in range(2, 10):\n    assert solution(i) == -1\n    assert solution(i) == -1\n\nprint(solution(2))\nprint(solution(5))"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n17 18\\n15 24\\n12 15\") == \"6\\n\"\nassert solution(\"2\\n10 16\\n7 17\") == \"-1\\n\"\nassert solution(\"5\\n90 108\\n45 105\\n75 40\\n165 175\\n33 30\") == \"5\\n\""
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 6\nassert solution(2) == -1\nassert solution(5) == 5"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"2\") == \"6\"\nassert solution(\"10 16\") == \"5\"\nassert solution(\"7 17\") == \"5\"\nassert solution(\"90 108\") == \"5\"\nassert solution(\"45 105\") == \"5\"\nassert solution(\"165 175\") == \"5\"\nassert solution(\"33 30\") == \"5\"\nassert solution(\"17 18\") == \"6\"\nassert solution(\"15 24\") == \"6\"\nassert solution(\"12 15\") == \"6\"\nassert solution(\"17 18 22 23\") == \"6\"\nassert solution(\"15 24 29 30\") == \"6\"\nassert solution(\"12 15 27 28\") == \"6\"\nassert solution(\"17 18 31 32\") == \"6\"\nassert solution(\"15 24 34 35\") == \"6\"\nassert solution(\"12 15 37 38\") == \"6\"\nassert solution(\"17 18 41 42\") == \"6\"\nassert solution(\"15 24 44 45\") == \"6\"\nassert solution(\"12 15 47 48\") == \"6\"\nassert solution(\"17 18 51 52\") == \"6\"\nassert solution(\"15 24 54 55\") == \"6\"\nassert solution(\"12 15 57 58\") == \"6\"\nassert solution(\"17 18 61 62\") == \"6\"\nassert solution(\"15 24 64 65\") == \"6\"\nassert solution(\"12 15 67 68\") == \"6\"\nassert solution(\"17 18 71 72\") == \"6\"\nassert solution(\"15 24 74 75\") == \"6\"\nassert solution(\"12 15 77 78\") == \"6\"\nassert solution(\"17 18 81 82\") == \"6\"\nassert solution(\"15 24 84 85\") == \"6\"\nassert solution(\"12 15 87 88\") == \"6\"\nassert solution(\"17 18 91 92\") == \"6\"\nassert solution(\"15 24 94 95\") == \"6\"\nassert solution(\"12 15 97 98\") == \"6\"\nassert solution(\"17 18 101 102\") == \"6\"\nassert solution(\"15 24 104 105\") == \"6\"\nassert solution(\"12 15 107 108\") == \"6\"\nassert solution(\"17 18 111 112\") == \"6\"\nassert solution(\"15 24 114 115\") == \"6\"\nassert solution(\"12 15 117 118\") == \"6\"\nassert solution(\"17 18 121 122\") == \"6\"\nassert solution(\"15 24 124 125\") == \"6\"\nassert solution(\"12 15 127 128\") == \"6\"\nassert solution(\"17 18 131 132\") == \"6\"\nassert solution(\"15 24 134 135\") == \"6\"\nassert solution(\"12 15 137 138\") == \"6\"\nassert solution(\"17 18 141 142\") == \"6\"\nassert solution(\"15 24 144 145\") == \"6\"\nassert solution(\"12 15 147 148\") == \"6\"\nassert solution(\"17 18 151 152\") == \"6\"\nassert solution(\"15 24 154 155\") == \"6\"\nassert solution(\"12 15 157 158\") == \"6\"\n"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n17 18\\n15 24\\n12 15') == '6'\nassert solution('2\\n10 16\\n7 17') == '-1'\nassert solution('5\\n90 108\\n45 105\\n75 40\\n165 175\\n33 30') == '5'\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"6\\n\"\nassert solution() == \"-1\\n\"\nassert solution() == \"5\\n\"\n"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n3\n17 18\n15 24\n12 15\n''') == '6\\n'\n\nassert solution('''\n2\n10 16\n7 17\n''') == '-1\\n'\n\nassert solution('''\n5\n90 108\n45 105\n75 40\n165 175\n33 30\n''') == '5\\n'\n\nprint('All test cases pass.')"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n17 18\\n15 24\\n12 15\") == \"6\\n\"\nassert solution(\"2\\n10 16\\n7 17\") == \"-1\\n\"\nassert solution(\"5\\n90 108\\n45 105\\n75 40\\n165 175\\n33 30\") == \"5\\n\""
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n3\n17 18\n15 24\n12 15\n''') == '''\n6\n'''\n\nassert solution('''\n2\n10 16\n7 17\n''') == '''\n-1\n'''\n\nassert solution('''\n5\n90 108\n45 105\n75 40\n165 175\n33 30\n''') == '''\n5\n'''"
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"1\\n0\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"bab\") == \"1 0\\n1 3\"\nassert solution(\"bb\") == \"1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"bab\") == \"1 0\"\nassert solution(\"bb\") == \"1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"1\\n0 1\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('bab') == '2\\n1 0\\n1 3'\nassert solution('bb') == '2\\n1 0\\n1 3'\nassert solution('bbbb') == '0'"
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\\n\"\nassert solution(\"bb\") == \"2\\n1 0\\n1 3\\n\"\nassert solution(\"bbbb\") == \"0\\n\"\nassert solution(\"aaa\") == \"0\\n\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"1\\n0\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\\n\") == \"POSSIBLE\\n\"\nassert solution(\"4\\n1 2\\n2 3\\n\") == \"POSSIBLE\\n\"\nassert solution(\"6\\n1 2\\n2 3\\n3 4\\n\") == \"POSSIBLE\\n\"\nassert solution(\"3\\n1 1\\n5 3 2\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"3\\n1 1\\n1 2\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"5\\n1 1\\n1 2\\n1 3\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"3\\n1 1\\n1 1\\n\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"POSSIBLE\"\n"
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 5 2\") == \"IMPOSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 5\") == \"IMPOSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 3\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"2\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"4\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"5\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"5\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"5\\n1 1\\n4 3 2\") == \"POSSIBLE\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input(\"Enter the number of vertices: \")) == \"POSSIBLE\"\nprint(\"POSSIBLE\")"
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1 1\\n4 3 2') == 'POSSIBLE'\nassert solution('4\\n1 2\\n2 3\\n1 4\\n4 5\\n5 6') == 'IMPOSSIBLE'\nassert solution('2\\n2 3\\n4 5') == 'POSSIBLE'\nassert solution('4\\n2 4\\n1 2\\n3 5\\n5 6\\n7 8') == 'POSSIBLE'"
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\\n\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"1\\n1\") == \"IMPOSSIBLE\"\nassert solution(\"1\\n1 1\") == \"IMPOSSIBLE\"\nassert solution(\"2\\n1 2\") == \"IMPOSSIBLE\"\nassert solution(\"3\\n1 2 3\") == \"POSSIBLE\"\nassert solution(\"3\\n1 2\\n1 3\") == \"POSSIBLE\"\nassert solution(\"4\\n1 2 3 4\") == \"POSSIBLE\"\nassert solution(\"4\\n1 2\\n1 3 4\") == \"POSSIBLE\"\nassert solution(\"3\\n1 2\\n1 3\\n1 4\") == \"POSSIBLE\"\nassert solution(\"3\\n1 2\\n1 3\\n1 4\\n1 5\") == \"POSSIBLE\"\nassert solution(\"3\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\") == \"POSSIBLE\"\nassert solution(\"2\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\") == \"POSSIBLE\"\nassert solution(\"2\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\") == \"POSSIBLE\"\nassert solution(\"2\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\") == \"POSSIBLE\"\nassert solution(\"2\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\") == \"POSSIBLE\"\nassert solution(\"2\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\") == \"POSSIBLE\"\nassert solution(\"2\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\") == \"POSSIBLE\"\nassert solution(\"2\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\") == \"POSSIBLE\"\nassert solution(\"2\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\") == \"POSSIBLE\"\nassert solution(\"2\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\") == \"POSSIBLE\"\nassert solution(\"2\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\") == \"POSSIBLE\"\nassert solution(\"2\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n1 17\") == \"POSSIBLE"
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"4\\n1 2\\n2 3\\n1 3\\n4 1\\n1 4\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n2 2\") == \"IMPOSSIBLE\"\nassert solution(\"5\\n1 2\\n3 3\\n4 4\\n5 5\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"4\\n2 1\\n3 2 2\") == \"POSSIBLE\"\nassert solution(\"5\\n2 1\\n3 2 2 3\") == \"POSSIBLE\"\nassert solution(\"6\\n2 1\\n3 2 2 3 4\") == \"POSSIBLE\"\nassert solution(\"7\\n2 1\\n3 2 2 3 4 5\") == \"POSSIBLE\"\nassert solution(\"8\\n2 1\\n3 2 2 3 4 5 6\") == \"POSSIBLE\"\nassert solution(\"9\\n2 1\\n3 2 2 3 4 5 6 7\") == \"POSSIBLE\"\nassert solution(\"10\\n2 1\\n3 2 2 3 4 5 6 7 8\") == \"POSSIBLE\"\nassert solution(\"11\\n2 1\\n3 2 2 3 4 5 6 7 8 9\") == \"POSSIBLE\"\nassert solution(\"12\\n2 1\\n3 2 2 3 4 5 6 7 8 9 10\") == \"POSSIBLE\"\nassert solution(\"13\\n2 1\\n3 2 2 3 4 5 6 7 8 9 10 11\") == \"POSSIBLE\"\nassert solution(\"14\\n2 1\\n3 2 2 3 4 5 6 7 8 9 10 11 12\") == \"POSSIBLE\"\nassert solution(\"15\\n2 1\\n3 2 2 3 4 5 6 7 8 9 10 11 12 13\") == \"POSSIBLE\"\nassert solution(\"16\\n2 1\\n3 2 2 3 4 5 6 7 8 9 10 11 12 13 14\") == \"POSSIBLE\"\nassert solution(\"17\\n2 1\\n3 2 2 3 4 5 6 7 8 9 10 11 12 13 14 15\") == \"POSSIBLE\"\nassert solution(\"18\\n2 1\\n3 2 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\") == \"POSSIBLE\"\nassert solution(\"19\\n2 1\\n3 2 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\") == \"POSSIBLE\"\nassert solution(\"20\\n2 1\\n3 2 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\") == \"POSSIBLE\"\nassert solution(\"21\\n2 1\\n3 2 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\") == \"POSSIBLE\"\nassert solution(\"22\\n2 1\\n3 2 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"POSSIBLE\"\nassert solution(\"23\\n2 1\\n3 2 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21\") == \"POSSIBLE\"\nassert solution(\"24\\n2 1\\n3 2 2 3 4 5 6 7 8 9 10 11 12 13 14 15 "
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1000000007\") == \"2\", \"Expected output: 2\"\nassert solution(\"1 2000000001\") == \"1\", \"Expected output: 1\"\nassert solution(\"10 1000000001\") == \"3\", \"Expected output: 3\"\nassert solution(\"5 2000000003\") == \"3\", \"Expected output: 3\"\nassert solution(\"3 2000000007\") == \"2\", \"Expected output: 2\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == \"2\"\n"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1000000007\") == \"2\", \"Test Case 1 Failed\"\nassert solution(\"10 2000000009\") == \"2\", \"Test Case 2 Failed\"\nassert solution(\"2 2000000007\") == \"1\", \"Test Case 3 Failed\"\nassert solution(\"3 3000000007\") == \"3\", \"Test Case 4 Failed\"\nassert solution(\"3 4000000007\") == \"4\", \"Test Case 5 Failed\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1000000007\") == \"2\"\n"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1000000007\") == \"2\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1000000007\") == \"2\"\n"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1000000007\") == \"2\", \"Test case 1 failed\"\nassert solution(\"2 1000000006\") == \"1\", \"Test case 2 failed\"\nassert solution(\"2 1000000005\") == \"3\", \"Test case 3 failed\"\nassert solution(\"2 1000000004\") == \"2\", \"Test case 4 failed\"\nassert solution(\"2 1000000003\") == \"1\", \"Test case 5 failed\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1000000007\") == \"2\\n\", \"The output should be 2.\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1000000007\") == \"2\\n\"\nassert solution(\"1 1000000001\") == \"0\\n\"\nassert solution(\"2 1000000002\") == \"4\\n\"\nassert solution(\"3 1000000003\") == \"10\\n\"\nassert solution(\"4 1000000004\") == \"18\\n\"\nassert solution(\"5 1000000005\") == \"22\\n\"\nassert solution(\"10 1000000006\") == \"27\\n\"\nassert solution(\"100 1000000007\") == \"42\\n\"\nassert solution(\"1000 1000000008\") == \"48\\n\"\nassert solution(\"10000 1000000009\") == \"60\\n\"\nassert solution(\"100000 1000000010\") == \"65\\n\"\nassert solution(\"1000000 1000000011\") == \"78\\n\"\nassert solution(\"10000000 1000000012\") == \"100\\n\"\nassert solution(\"100000000 1000000013\") == \"120\\n\"\nassert solution(\"1000000000 1000000014\") == \"145\\n\"\nassert solution(\"10000000000 1000000015\") == \"172\\n\"\nassert solution(\"100000000000 1000000016\") == \"211\\n\"\nassert solution(\"1000000000000 1000000017\") == \"247\\n\"\nassert solution(\"10000000000000 1000000018\") == \"290\\n\"\nassert solution(\"100000000000000 1000000019\") == \"325\\n\"\nassert solution(\"1000000000000000 1000000020\") == \"356\\n\"\nassert solution(\"10000000000000000 1000000021\") == \"402\\n\"\nassert solution(\"100000000000000000 1000000022\") == \"443\\n\"\nassert solution(\"1000000000000000000 1000000023\") == \"478\\n\"\nassert solution(\"10000000000000000000 1000000024\") == \"517\\n\"\nassert solution(\"10000000000000000000 1000000025\") == \"549\\n\"\nassert solution(\"100000000000000000000 1000000026\") == \"579\\n\"\nassert solution(\"1000000000000000000000 1000000027\") == \"615\\n\"\nassert solution(\"10000000000000000000000 1000000028\") == \"646\\n\"\nassert solution(\"100000000000000000000000 1000000029\") == \"675"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1000000007\") == \"2\\n\"\n"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 7, \"Expected 7, got {}\".format(solution())  # example 1\n\nassert solution() == 999999228, \"Expected 999999228, got {}\".format(solution())  # example 2"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"7\\n\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 3 3\\n+-+\") == \"7\"\nassert solution(\"4 1 5 1\\n-\") == \"999999228\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 2 3 3\\n+-+') == 7\nassert solution('4 1 5 1\\n-') == 999999228\nassert solution('2 2 3 3\\n+-+') == 7\nassert solution('4 1 5 1\\n-') == 999999228"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 3 3\\n+-+\\n\") == \"7\"\nassert solution(\"4 1 5 1\\n-\") == \"999999228\"\nassert solution(\"4 1 5 1\\n-\") == \"999999228\"\nassert solution(\"4 1 5 1\\n-\") == \"999999228\"\n"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 3 3\\n+-+\") == \"7\"\nassert solution(\"4 1 5 1\\n-\") == \"999999228\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 3 3\\n+-+\") == \"7\"\nassert solution(\"4 1 5 1\\n-\") == \"999999228\"\nassert solution(\"2 2 2 2\\n+-+\") == \"0\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 3 3\\n+-+\") == \"7\"\nassert solution(\"4 1 5 1\\n-\") == \"999999228\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output\nprint(\"Test Passed\")"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 3 3\\n+-+\\n\") == \"7\"\nassert solution(\"4 1 5 1\\n-\") == \"999999228\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 1 1 2') == '4', 'First Test'\nassert solution('1 2 3 1') == '2', 'Second Test'\nassert solution('10 2 1 7') == '0', 'Third Test'"
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\"\n\nprint(\"All test cases pass.\")"
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 1 1 2') == 4\nassert solution('1 2 3 1') == 2\nassert solution('10 2 1 7') == 0\n"
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1 2\") == 4\nassert solution(\"1 2 3 1\") == 2\nassert solution(\"10 2 1 7\") == 0\n\nfrom typing import List"
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\"\n"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"6\"\n"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"6\""
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"6\"\nassert solution(\"3 2\") == \"6\"\nassert solution(\"3 4\") == \"0\"\nassert solution(\"0 1\") == \"3\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"1 3\") == \"2\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"10 3\") == \"2\"\nassert solution(\"20 10\") == \"0\""
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"6\"\n"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\") == \"6\"\nassert solution(\"4 3\") == \"10\"\nassert solution(\"5 4\") == \"12\"\nassert solution(\"6 5\") == \"14\"\nassert solution(\"7 6\") == \"16\"\n"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '6', 'Your solution is not correct.'"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"6\"\nassert solution(\"4 2\") == \"12\"\nassert solution(\"10 3\") == \"3\"\nassert solution(\"5 4\") == \"10\""
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"6\\n\", \"Test failed\"\nprint(\"Test passed\")"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"6\\n\", \"The solution is incorrect. Expected: '6\\n', but got: '{}'\".format(solution(\"3 2\"))"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 2) == \"6\"\nprint(\"Correct\")"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"  # sample output\n"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\""
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == 0\nassert solution(\"2\\n1 2\") == 2\n\nfrom typing import List"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2\\n2 3\\n3 4\\n\") == \"6\\n\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\") == \"10\\n\"\nassert solution(\"5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n\") == \"14\\n\"\nassert solution(\"6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n\") == \"18\\n\"\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n\") == \"22\\n\"\nassert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n\") == \"26\\n\"\nassert solution(\"9\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n\") == \"30\\n\"\nassert solution(\"10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n\") == \"34\\n\"\nassert solution(\"11\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n\") == \"38\\n\"\nassert solution(\"12\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n\") == \"42\\n\"\nassert solution(\"13\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n\") == \"46\\n\"\nassert solution(\"14\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n\") == \"50\\n\"\nassert solution(\"15\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n\") == \"54\\n\"\nassert solution(\"16\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 "
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    2\n    1 2\n    \"\"\"\n) == '2\\n'\n\nassert solution(\n    \"\"\"\n    3\n    1 2\n    3 4\n    5 6\n    \"\"\"\n) == '11\\n'\n\nassert solution(\n    \"\"\"\n    4\n    1 2\n    3 4\n    5 6\n    \"\"\"\n) == '10\\n'\n\nassert solution(\n    \"\"\"\n    5\n    1 2\n    3 4\n    5 6\n    7 8\n    \"\"\"\n) == '12\\n'\n\nassert solution(\n    \"\"\"\n    6\n    1 2\n    3 4\n    5 6\n    7 8\n    9 10\n    \"\"\"\n) == '15\\n'\n\nassert solution(\n    \"\"\"\n    7\n    1 2\n    3 4\n    5 6\n    7 8\n    9 10\n    11 12\n    \"\"\"\n) == '23\\n'\n\nassert solution(\n    \"\"\"\n    8\n    1 2\n    3 4\n    5 6\n    7 8\n    9 10\n    11 12\n    13 14\n    \"\"\"\n) == '32\\n'\n\nassert solution(\n    \"\"\"\n    9\n    1 2\n    3 4\n    5 6\n    7 8\n    9 10\n    11 12\n    13 14\n    15 16\n    \"\"\"\n) == '49\\n'\n\nassert solution(\n    \"\"\"\n    10\n    1 2\n    3 4\n    5 6\n    7 8\n    9 10\n    11 12\n    13 14\n    15 16\n    17 18\n    \"\"\"\n) == '64\\n'\n\nassert solution(\n    \"\"\"\n    11\n    1 2\n    3 4\n    5 6\n    7 8\n    9 10\n    11 12\n    13 14\n    15 16\n    17 18\n    19 20\n    \"\"\"\n) == '81\\n'\n\nassert solution(\n    \"\"\"\n    12\n    1 2\n    3 4\n    5 6\n    7 8\n    9 10\n    11 12\n    13 14\n    15 16\n    17 18\n    19 20\n    21 22\n    \"\"\"\n) == '100\\n'\n\nassert solution(\n    \"\"\"\n    13\n    1 2\n    3 4\n    5 6\n    7 8\n    9 10\n    11 12\n    13 14\n    15 16\n    17 18\n    19 20\n    21 22\n    23 24\n    \"\"\"\n) == '121\\n'\n\nassert solution(\n    \"\"\"\n    14\n    1 2\n    3 4\n    5 6\n    7 8\n    9 10\n    11 12\n    13 14\n    15 16\n    17 18\n    19 20\n    21 22\n    23 24\n    25 26\n    \"\"\"\n) == '144\\n'\n\nassert solution(\n    \"\"\"\n    15\n    1 2\n    3 4\n    5 6\n    7 8\n    9 10\n    11 12\n    13 14\n    15 16\n    17 18\n    19 20\n    21 22\n    23 24\n    25 26\n    27 28\n    \"\"\"\n) == '171\\n'\n\nassert solution(\n    \"\"\"\n    16\n    1 2\n    3 4\n    5 6\n    7 8\n    9 10\n    11 12\n    13 14\n    15 16\n    17 18\n    19 20\n    21 22\n    23 24\n    25 26\n    27 28\n    29 30\n    \"\"\"\n) == '190\\n'\n\nassert solution(\n    \"\"\"\n    17\n    1 2\n    3 4\n    5 6\n    7 8\n    9 10\n    11 12\n    13 14\n    15 16\n    17 18\n    19 20\n    21 22\n    23 24\n    25 26\n    27 28\n    29 30\n    31 32\n    \"\"\"\n) == '211\\n'"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\\n\", solution(stdin)"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2\\n2 3\\n3 4\\n\") == \"1\\n\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == \"0\\n\""
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\\n\", \"Test failed\" # expected output: 2\n"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2\\n3 4\\n\") == \"3\\n\"\nassert solution(\"4\\n1 2\\n3 4\\n5 6\\n\") == \"4\\n\"\nassert solution(\"6\\n1 2\\n3 4\\n5 6\\n7 8\\n\") == \"6\\n\"\nassert solution(\"7\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n\") == \"7\\n\"\nassert solution(\"8\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n\") == \"8\\n\"\nassert solution(\"9\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n\") == \"9\\n\"\nassert solution(\"10\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n\") == \"10\\n\"\nassert solution(\"11\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n\") == \"11\\n\"\nassert solution(\"12\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\\n\") == \"12\\n\"\nassert solution(\"13\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\\n21 22\\n\") == \"13\\n\"\nassert solution(\"14\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\\n21 22\\n23 24\\n\") == \"14\\n\"\nassert solution(\"15\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\\n21 22\\n23 24\\n25 26\\n\") == \"15\\n\"\nassert solution(\"16\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\\n21 22\\n23 24\\n25 26\\n27 28\\n\") == \"16\\n\"\nassert solution(\"17\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\\n21 22\\n23 24\\n25 26\\n27 28\\n29 30\\n\") == \"17\\n\"\nassert solution(\"18\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\\n21 22\\n23 2"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"1\"\nassert solution(4) == \"2\"\nassert solution(5) == \"1\"\nassert solution(6) == \"1\"\nassert solution(7) == \"1\"\nassert solution(8) == \"1\"\nassert solution(9) == \"1\"\nassert solution(10) == \"1\"\nassert solution(11) == \"1\"\nassert solution(12) == \"2\"\nassert solution(13) == \"1\"\nassert solution(14) == \"1\"\nassert solution(15) == \"1\"\nassert solution(16) == \"1\"\nassert solution(17) == \"1\"\nassert solution(18) == \"1\"\nassert solution(19) == \"1\"\nassert solution(20) == \"1\"\nassert solution(21) == \"1\"\nassert solution(22) == \"1\"\nassert solution(23) == \"2\"\nassert solution(24) == \"2\"\nassert solution(25) == \"2\"\nassert solution(26) == \"2\"\nassert solution(27) == \"1\"\nassert solution(28) == \"1\"\nassert solution(29) == \"1\"\nassert solution(30) == \"1\"\nassert solution(31) == \"1\"\nassert solution(32) == \"2\"\nassert solution(33) == \"2\"\nassert solution(34) == \"1\"\nassert solution(35) == \"1\"\nassert solution(36) == \"1\"\nassert solution(37) == \"1\"\nassert solution(38) == \"2\"\nassert solution(39) == \"1\"\nassert solution(40) == \"1\"\nassert solution(41) == \"1\"\nassert solution(42) == \"2\"\nassert solution(43) == \"2\"\nassert solution(44) == \"2\"\nassert solution(45) == \"2\"\nassert solution(46) == \"1\"\nassert solution(47) == \"1\"\nassert solution(48) == \"1\"\nassert solution(49) == \"2\"\nassert solution(50) == \"2\"\nassert solution(51) == \"2\"\nassert solution(52) == \"2\"\nassert solution(53) == \"1\"\nassert solution(54) == \"1\"\nassert solution(55) == \"2\"\nassert solution(56) == \"1\"\nassert solution(57) == \"2\"\nassert solution(58) == \"2\"\nassert solution(59) == \"2\"\nassert solution(60) == \"1\"\nassert solution(61) == \"1\"\nassert solution(62) == \"1\"\nassert solution(63) == \"1\"\nassert solution(64) == \"2\"\nassert solution(65) == \"2\"\nassert solution(66) == \"2\"\nassert solution(67) == \"1\"\nassert solution(68) == \"1\"\nassert solution(69) == \"1\"\nassert solution(70) == \"1\"\nassert solution(71) == \"1\"\nassert solution(72) == \"1\"\nassert solution(73) == \"2\"\nassert solution(74) == \"2\"\nassert solution(75) == \"2\"\nassert solution(76) == \"2\"\nassert solution(77) == \"2\"\nassert solution(78) == \"2\"\nassert solution(79) == \"2\"\nassert solution(80) == \"1\"\nassert solution(81) == \"2\"\nassert solution(82) == \"1\"\nassert solution(83) == \"2\"\nassert solution(84) == \"2\"\nassert solution(85) == \"2\"\nassert solution(86) == \"1\"\nassert solution(87) == \"2\"\nassert solution(88) == \"1\"\nassert solution(89) == \"2\"\nassert solution(90) == \"2\"\nassert solution(91) == \"2\"\nassert solution(92) == \"1\"\nassert solution(93) == \"2\"\nassert solution(94) == \"1\"\nassert solution(95) == \"2\"\nassert solution(96) == \"2\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n0 2 0\\n3 0 1\\n\") == \"2\\n\"\nassert solution(\"3\\n0 2 0\\n1 0 3\\n\") == \"4\\n\"\nassert solution(\"11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\\n\") == \"18\\n\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n0 2 0\\n3 0 1\\n\") == \"2\\n\"\nassert solution(\"3\\n0 2 0\\n1 0 3\\n\") == \"4\\n\"\nassert solution(\"11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\\n\") == \"18\\n\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1\\n2\\n2\\n3\\n3\\n3\\n4\\n4\\n4\\n4\\n4\\n5\\n5\\n5\\n5\\n5\\n6\\n6\\n6\\n6\\n6\\n6\\n7\\n7\\n7\\n7\\n7\\n7\\n8\\n8\\n8\\n8\\n8\\n8\\n9\\n9\\n9\\n9\\n9\\n9\\n10\\n10\\n10\\n10\\n10\\n10\\n11\\n11\\n11\\n11\\n11\\n11\\n12\\n12\\n12\\n12\\n12\\n12\\n13\\n13\\n13\\n13\\n13\\n13\\n14\\n14\\n14\\n14\\n14\\n14\\n15\\n15\\n15\\n15\\n15\\n15\\n16\\n16\\n16\\n16\\n16\\n16\\n17\\n17\\n17\\n17\\n17\\n17\\n17\\n18\\n18\\n18\\n18\\n18\\n18\\n19\\n19\\n19\\n19\\n19\\n19\\n20\\n20\\n20\\n20\\n20\\n20\\n21\\n21\\n21\\n21\\n21\\n21\\n22\\n22\\n22\\n22\\n22\\n22\\n23\\n23\\n23\\n23\\n23\\n23\\n24\\n24\\n24\\n24\\n24\\n24\\n25\\n25\\n25\\n25\\n25\\n25\\n26\\n26\\n26\\n26\\n26\\n26\\n27\\n27\\n27\\n27\\n27\\n27\\n28\\n28\\n28\\n28\\n28\\n28\\n29\\n29\\n29\\n29\\n29\\n29\\n30\\n30\\n30\\n30\\n30\\n30\\n31\\n31\\n31\\n31\\n31\\n31\\n32\\n32\\n32\\n32\\n32\\n32\\n33\\n33\\n33\\n33\\n33\\n33\\n34\\n34\\n34\\n34\\n34\\n34\\n35\\n35\\n35\\n35\\n35\\n35\\n36\\n36\\n36\\n36\\n36\\n36\\n37\\n37\\n37\\n37\\n37\\n37\\n37\\n38\\n38\\n38\\n38\\n38\\n38\\n39\\n39\\n39\\n39\\n39\\n39\\n40\\n40\\n40\\n40\\n40\\n40\\n41\\n41\\n41\\n41\\n41\\n41\\n42\\n42\\n42\\n42\\n42\\n42\\n43\\n43\\n43\\n43\\n43\\n43\\n44\\n44\\n44\\n44\\n44\\n44\\n45\\n45\\n45\\n45\\n45\\n46\\n46\\n46\\n46\\n46\\n46\\n47\\n4"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n0 2 0\\n3 0 1\") == \"2\"\nassert solution(\"3\\n0 2 0\\n1 0 3\") == \"4\"\nassert solution(\"11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\") == \"18\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(None) == \"No input\"\nassert solution(\"\") == \"No input\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"2\"\nassert solution(11) == \"18\"\nassert solution(3, 0, 1) == \"2\"\nassert solution(3, 0, 2, 1) == \"2\"\nassert solution(3, 0, 3, 1, 2) == \"2\"\nassert solution(3, 0, 3, 2, 1, 1) == \"2\"\nassert solution(3, 0, 3, 1, 1, 1, 2, 1, 2, 1, 1) == \"2\"\nassert solution(3, 0, 3, 1, 2, 2, 1, 1, 2, 1, 2, 1, 1, 2) == \"2\"\nassert solution(3, 0, 3, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1) == \"2\"\nassert solution(3, 0, 3, 3, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n0 2 0\\n3 0 1\") == \"2\"\nassert solution(\"3\\n0 2 0\\n1 0 3\") == \"4\"\nassert solution(\"11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\") == \"18\"\n"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n0 2 0\\n3 0 1\") == \"2\"\nassert solution(\"11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\") == \"18\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == '2\\n'\n"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n0 2 0\\n3 0 1\\n\") == \"2\\n\"\nassert solution(\"11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\\n\") == \"18\\n\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 10\\ncode*s\\ncodeforces\\n\") == \"YES\"\nassert solution(\"6 5\\nvk*cup\\nvkcup\\n\") == \"YES\"\nassert solution(\"1 1\\nv\\nk\\n\") == \"NO\"\nassert solution(\"9 6\\ngfgf*gfgf\\ngfgfgf\\n\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aba*aba\") == \"YES\"\nassert solution(\"codeforces\") == \"YES\"\nassert solution(\"vkcup\") == \"YES\"\nassert solution(\"v\") == \"NO\"\nassert solution(\"k\") == \"NO\"\nassert solution(\"gfgf*gfgf\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 10\\ncode*s\\ncodeforces\") == \"YES\\n\"\nassert solution(\"6 5\\nvk*cup\\nvkcup\") == \"YES\\n\"\nassert solution(\"1 1\\nv\\nk\") == \"NO\\n\"\nassert solution(\"9 6\\ngfgf*gfgf\\ngfgfgf\") == \"NO\\n\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"code*s\") == \"YES\"\nassert solution(\"codeforces\") == \"YES\"\nassert solution(\"vk*cup\") == \"YES\"\nassert solution(\"v\") == \"NO\"\nassert solution(\"k\") == \"NO\"\nassert solution(\"gfgf*gfgf\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"code*s\") == \"YES\"\nassert solution(\"codeforces\") == \"YES\"\nassert solution(\"vk*cup\") == \"YES\"\nassert solution(\"v\") == \"NO\"\nassert solution(\"k\") == \"NO\"\nassert solution(\"gfgf*gfgf\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"YES\", \"Testcase 1\"\n\nassert solution() == \"YES\", \"Testcase 2\"\n\nassert solution() == \"YES\", \"Testcase 3\"\n\nassert solution() == \"NO\", \"Testcase 4\"\n\nassert solution() == \"NO\", \"Testcase 5\"\n\nassert solution() == \"NO\", \"Testcase 6\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"YES\", \"No solution found.\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\").read()) == \"YES\"\nassert solution(open(\"input1.txt\").read()) == \"YES\"\nassert solution(open(\"input2.txt\").read()) == \"YES\"\nassert solution(open(\"input3.txt\").read()) == \"NO\"\nassert solution(open(\"input4.txt\").read()) == \"NO\"\nassert solution(open(\"input5.txt\").read()) == \"NO\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0.1 0.2 0.3 0.8\\n2\\n0.1 0.2\") == \"0.260000000000\"\nassert solution(\"2\\n0.1 0.2\") == \"0.260000000000\"\n"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '0.260000000000', \"Expected 0.260000000000, got {}\".format(solution(input()))"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '0.260000000000'"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n0.1 0.2 0.3 0.8\") == \"0.800000000000\\n\"\nassert solution(\"2\\n0.1 0.2\") == \"0.260000000000\\n\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n0.1 0.2 0.3 0.8\") == \"0.8\"\nassert solution(\"2\\n0.1 0.2\") == \"0.26\"\n"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Input\\n4\\n0.1 0.2 0.3 0.8\\n\\nOutput\\n0.800000000000\\n\\nInput\\n2\\n0.1 0.2\\n\\nOutput\\n0.260000000000') == '0.260000000000\\n'\nassert solution('Input\\n2\\n0.1 0.2\\n\\nOutput\\n0.260000000000') == '0.260000000000\\n'"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n0.1 0.2 0.3 0.8\") == \"0.8\"\nassert solution(\"2\\n0.1 0.2\") == \"0.26\"\n"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '0.800000000000'\nassert solution(input()) == '0.260000000000'"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n0.1 0.2 0.3 0.8\\n') == '0.800000000000'\nassert solution('2\\n0.1 0.2\\n') == '0.260000000000'"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '0.260000000000'\n"
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"5.0000000000\\n\"\n\nprint(\"Pass\")"
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5.0000000000\"\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"5.0000000000\\n\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    5 10 1 2 5\n    ''') == '5.0000000000'\n\nassert solution('''\n    3 6 1 2 1\n    ''') == '4.7142857143'"
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == '5.0000000000\\n'"
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5.0000000000\\n\"\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\\n\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5.0000000000\"\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output\nprint(f\"Correct\") if correct else print(f\"Incorrect\")"
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test case {case_num} failed: expected output {expected_output}, but got {solution(input())}\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5.0000000000\"\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\\n\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\\n\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0.250\", \"The output is not as expected\"\nprint(\"All test cases passed\")\n"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\\n3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.250\", \"Incorrect solution\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\\n\") == \"0.279\", \"Incorrect solution\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\\n\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\\n\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\\n3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.250\", \"Your solution is incorrect!\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\\n3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.250\\n\", \"Testcase 1 Failed\"\n\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\\n3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.279\\n\", \"Testcase 2 Failed\"\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\\n\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\\n\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 5\\n5 2\") == \"18\"\nassert solution(\"0 1\\n0 0\") == \"8\"\nassert solution(\"1 5\\n5 2\") == \"18\"\nassert solution(\"0 1\\n0 0\") == \"8\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 5\\n5 2\\n\") == \"18\"\n\nassert solution(\"0 1\\n0 0\\n\") == \"8\"\n\nassert solution(\"1 0\\n0 0\\n\") == \"0\"\n\nassert solution(\"1 5\\n0 0\\n\") == \"0\"\n\nassert solution(\"1 0\\n1 0\\n\") == \"0\"\n\nassert solution(\"1 1\\n2 0\\n\") == \"2\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"18\"\nassert solution(input()) == \"8\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 5\\n5 2') == '18'\nassert solution('0 1\\n0 0') == '8'\n"
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5\\n5 2\\n\") == 18\nassert solution(\"0 1\\n0 0\\n\") == 8"
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1, 5) == 18\nassert solution(0, 1) == 8\n\nsolution(1, 5) = 18\nsolution(0, 1) = 8"
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '18\\n'\nassert solution(input()) == '8\\n'"
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 18, \"The length of minimal path of the quadcopter to surround the flag and return back is incorrect.\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5\\n5 2\\n\") == 18\nassert solution(\"0 1\\n0 0\\n\") == 8"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2) == \"10\"\nassert solution(10) == \"244\""
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == \"4\"\nassert solution(2) == \"10\"\nassert solution(10) == \"244\""
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    '''\n    3\n    1 2 3\n    4\n    1 1 2 2\n    5\n    1 4 1 4 9\n''') == '0'\n\nassert solution(\n    '''\n    4\n    1 1 2 2\n    5\n    1 4 1 4 9\n''') == '2'\n\nassert solution(\n    '''\n    5\n    1 4 1 4 9\n''') == '2'"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '2'\nassert solution('5') == '2'"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"0\\n\"\nassert solution(\"4\\n1 1 2 2\\n\") == \"2\\n\"\nassert solution(\"5\\n1 4 1 4 9\\n\") == \"2\\n\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"0\\n\"\nassert solution(\"4\\n1 1 2 2\\n\") == \"2\\n\"\nassert solution(\"5\\n1 4 1 4 9\\n\") == \"2\\n\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\\n4\\n1 1 2 2\\n5\\n1 4 1 4 9\\n\") == \"0\\n2\\n2\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n1 2 3\\n4\\n1 1 2 2\\n5\\n1 4 1 4 9\\n6\\n1 5 6 9\\n0\\n1 6 7 8\\n2\\n1 7 8 9') == '0\\n'\nassert solution('4\\n1 1 2 2\\n5\\n1 4 1 4 9\\n6\\n1 5 6 9\\n7\\n1 6 7 8\\n8\\n1 7 8 9\\n9\\n1 8 9 10\\n10\\n1 9 10 11\\n11\\n1 10 11 12\\n12\\n1 11 12 13\\n13\\n1 12 13 14\\n14\\n1 13 14 15\\n15\\n1 14 15 16\\n16\\n1 15 16 17\\n17\\n1 16 17 18\\n18\\n1 17 18 19\\n19\\n1 18 19 20\\n20\\n1 19 20 21\\n21\\n1 20 21 22\\n22\\n1 21 22 23\\n23\\n1 22 23 24\\n24\\n1 23 24 25\\n25\\n1 24 25 26\\n26\\n1 25 26 27\\n27\\n1 26 27 28\\n28\\n1 27 28 29\\n29\\n1 28 29 30\\n30\\n1 29 30 31\\n31\\n1 30 31 32\\n32\\n1 31 32 33\\n33\\n1 32 33 34\\n34\\n1 33 34 35\\n35\\n1 34 35 36\\n36\\n1 35 36 37\\n37\\n1 36 37 38\\n38\\n1 37 38 39\\n39\\n1 38 39 40\\n40\\n1 39 40 41\\n41\\n1 40 41 42\\n42\\n1 41 42 43\\n43\\n1 42 43 44\\n44\\n1 43 44 45\\n45\\n1 44 45 46\\n46\\n1 45 46 47\\n47\\n1 46 47 48\\n48\\n1 47 48 49\\n49\\n1 48 49 50\\n50\\n1 49 50 51\\n51\\n1 50 51 52\\n52\\n1 51 52 53\\n53\\n1 52 53 54\\n54\\n1 53 54 55\\n55\\n1 54 55 56\\n56\\n1 55 56 57\\n57\\n1 56 57 58\\n58\\n1 57 58 59\\n59\\n1 58 59 60\\n60\\n1 59 60 61\\n61\\n1 60 61 62\\n62\\n1 61 62 63\\n63\\n1 62 63 64\\n64\\n"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == 2\nassert solution(4) == 2\nassert solution(5) == 2\nassert solution(3) == 0\nassert solution(2) == 2\nassert solution(1) == 1"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2 3\\n') == '0\\n'\nassert solution('4\\n1 1 2 2\\n') == '2\\n'\nassert solution('5\\n1 4 1 4 9\\n') == '2\\n'"
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('aaabccc') == \"YES\"\nassert solution('bbacc') == \"NO\"\nassert solution('aabc') == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('aaabccc') == \"YES\"\nassert solution('bbacc') == \"NO\"\nassert solution('aabc') == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('aaabccc') == \"YES\", \"Solution 'aaabccc' is not correct.\"\nassert solution('bbacc') == \"NO\", \"Solution 'bbacc' is not correct.\"\nassert solution('aabc') == \"YES\", \"Solution 'aabc' is not correct.\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\"\n"
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n4 1 2 5 3\\n\") == \"2\\n\"\nassert solution(\"4\\n4 1 3 2\\n\") == \"2\\n\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"2\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n4 1 2 5 3\\n4\\n4 1 3 2\\n\") == \"2\\n\"\nassert solution(\"4\\n4 1 3 2\\n\") == \"2\\n\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\", \"Test 1 failed\"\nassert solution(input()) == \"2\", \"Test 2 failed\"\nassert solution(input()) == \"2\", \"Test 3 failed\"\nassert solution(input()) == \"2\", \"Test 4 failed\"\nassert solution(input()) == \"2\", \"Test 5 failed\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n4 1 2 5 3\\n4\\n4 1 3 2\\n\") == \"2\"\nassert solution(\"4\\n4 1 3 2\\n\") == \"2\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 2, \"Expected output: 2, actual output: {}\".format(solution(input()))"
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n4 1 2 5 3\\n4\\n4 1 3 2\") == \"2\\n\"\nassert solution(\"4\\n4 1 3 2\") == \"2\\n\"\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n4 1 2 5 3\") == \"2\"\nassert solution(\"4\\n4 1 3 2\") == \"2\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n4 1 2 5 3\\n4 1 3 2\\n5\\n1 2 3 4 5\") == \"2\\n\"\n\nassert solution(\"4\\n4 1 3 2\\n5\\n1 2 3 4 5\") == \"2\\n\"\n\nassert solution(\"10\\n4 1 2 5 3\\n4 1 3 2\\n5\\n1 2 3 4 5\") == \"5\\n\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Solution: {solution(input())}, Expected Output: {expected_output}\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 1\") == 3.5\nassert solution(\"6 3\") == 4.958333333333\nassert solution(\"2 2\") == 1.75\n"
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    6 1\n    \"\"\"\n) == \"3.500000000000\"\n\nassert solution(\n    \"\"\"\n    6 3\n    \"\"\"\n) == \"4.958333333333\"\n\nassert solution(\n    \"\"\"\n    2 2\n    \"\"\"\n) == \"1.750000000000\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 4.958333333333\nassert solution() == 4.958333333333\nassert solution() == 1.750000000000\nassert solution() == 1.750000000000\nassert solution() == 2.500000000000\n"
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6 1') == '3.5'\nassert solution('6 3') == '4.96'\nassert solution('2 2') == '1.75'"
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test cases failed\"\nprint(\"Test cases passed\")"
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 1\\n6 3\\n2 2\\n2 2\\n2 2\\n\") == \"3.500000000000\\n4.958333333333\\n1.750000000000\\n\"\nassert solution(\"6 3\\n2 2\\n\") == \"4.958333333333\\n\"\nassert solution(\"2 2\\n\") == \"1.750000000000\\n\"\nassert solution(\"2 2\\n\") == \"1.750000000000\\n\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6 1\\n') == '3.500000000000'\nassert solution('6 3\\n') == '4.958333333333'\nassert solution('2 2\\n') == '1.750000000000'"
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6 1') == '3.5', 'The expected output is incorrect.'\nassert solution('6 3') == '4.96', 'The expected output is incorrect.'\nassert solution('2 2') == '1.75', 'The expected output is incorrect.'"
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 1\") == \"3.500000000000\"\nassert solution(\"6 3\") == \"4.958333333333\"\nassert solution(\"2 2\") == \"1.750000000000\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Test Case {t+1} Failed\"\n"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\nassert solution(\"4\\n4\\n<--\\n2\\n<>\") == \"3\\n5\\n3\\n0\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\\n3\\n<--\\n2\\n<>\") == \"3\\n5\\n3\\n0\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\nassert solution(\"3\\n5\\n3\\n0\") == \"3\\n5\\n3\\n0\"\nassert solution(\"2\\n3\\n4\\n-><-\\n1\\n1\\n<>\") == \"3\\n5\\n3\\n0\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n4\\t-><-\\n5\\t>>>>>\\n3\\t<--\\n2\\t<>\") == \"3\\n5\\n3\\n0\"\nassert solution(\"4\\n2\\t-><-\\n1\\t<--\\n3\\t<>\") == \"2\\n0\"\nassert solution(\"4\\n1\\t-><-\\n3\\t<--\\n2\\t<>\") == \"3\\n0\"\nassert solution(\"4\\n0\\t-><-\\n3\\t<--\\n2\\t<>\") == \"0\\n0\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == output, f\"Test case {i+1} failed: expected {output}, got {solution(input)}\"\nprint(\"Test case passed\")"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"0\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '3\\n5\\n3\\n0', 'The correct output is not provided.'\n"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3\\n5\\n3\\n0\"\nassert solution() == \"5\\n3\\n5\"\nassert solution() == \"5\\n5\\n0\"\nassert solution() == \"0\\n5\\n0\""
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n4 5\\n4 5\\n4 10') == '16\\n9 9 10 '\nassert solution('4\\n1 100\\n100 1\\n1 100\\n100 1') == '202\\n101 101 101 101'\nassert solution('3\\n1 1\\n100 100\\n1 1') == '-1'"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n4 5\\n4 5\\n4 10\") == \"16\\n9 9 10\\n\"\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\") == \"202\\n101 101 101 101\\n\"\nassert solution(\"3\\n1 1\\n100 100\\n1 1\") == \"-1\\n\""
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n4 5\\n4 5\\n4 10\") == \"16\\n9 9 10\"\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\") == \"202\\n101 101 101 101\"\nassert solution(\"3\\n1 1\\n100 100\\n1 1\") == \"-1\""
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\"16\n9 9 10 \n-1\"\"\""
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4 5\\n4 5\\n4 10\") == \"16\\n9 9 10\\n\"\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\") == \"202\\n101 101 101 101\\n\"\nassert solution(\"3\\n1 1\\n100 100\\n1 1\") == \"-1\""
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n4 5\\n4 5\\n4 10\\n') == '16\\n9 9 10\\n'\nassert solution('4\\n1 100\\n100 1\\n1 100\\n100 1\\n') == '202\\n101 101 101 101\\n'\nassert solution('3\\n1 1\\n100 100\\n1 1\\n') == '-1\\n'\n\nfrom typing import List"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\n4 5\\n4 10\\n\") == 16\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\\n\") == 202\nassert solution(\"3\\n1 1\\n100 100\\n1 1\\n\") == -1"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n4 5\\n4 5\\n4 10') == '16\\n9 9 10\\n'\nassert solution('4\\n1 100\\n100 1\\n1 100\\n100 1') == '202\\n101 101 101 101\\n'\nassert solution('3\\n1 1\\n100 100\\n1 1\\n') == '-1\\n'"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n4 5\\n4 5\\n4 10\\n\") == \"16\\n9 9 10\\n\"\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\\n\") == \"202\\n101 101 101 101\\n\"\nassert solution(\"3\\n1 1\\n100 100\\n1 1\\n\") == \"-1\"\n"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n4 5\\n4 10\\n') == '16\\n9 9 10\\n'\nassert solution('4\\n1 100\\n100 1\\n1 100\\n100 1\\n') == '202\\n101 101 101 101\\n'\nassert solution('3\\n1 1\\n100 100\\n1 1\\n') == '-1\\n'"
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"0 2 \"\nassert solution(5) == \"0 1 3 \"\nassert solution(1) == \"1 \"\nassert solution(2) == \"2 \""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 1 1 1 1\") == \"1 2 2\\n\"\nassert solution(\"3\\n1 2 3\") == \"0 2\\n\"\nassert solution(\"5\\n1 2 3 2 2\") == \"0 1 3\\n\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n1 1 1 1 1') == '1 2 2\\n'\nassert solution('3\\n1 2 3') == '0 2\\n'\nassert solution('5\\n1 2 3 2 2') == '0 1 3\\n'"
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\nfor n in [1, 2, 3, 4, 5]:\n    assert solution(input()) == output()"
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n1 1 1 1 1\\n') == '1 2 2\\n'\nassert solution('3\\n1 2 3\\n') == '0 2\\n'\nassert solution('5\\n1 2 3 2 2\\n') == '0 1 3\\n'"
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 1 1 1 1\\n\") == \"1 2 2\\n\", \"The first example is not correct.\"\nassert solution(\"3\\n1 2 3\\n\") == \"0 2\\n\", \"The second example is not correct.\"\nassert solution(\"5\\n1 2 3 2 2\\n\") == \"0 1 3\\n\", \"The third example is not correct.\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5) == '1 2 2\\n', 'Testcase 1 failed'\nassert solution(3) == '0 2\\n', 'Testcase 2 failed'\nassert solution(5) == '0 1 3\\n', 'Testcase 3 failed'"
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == \"1 2 2\"\nassert solution(3) == \"0 2\"\nassert solution(5) == \"0 1 3\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 1 1 1 1\") == \"1 2 2\\n\"\nassert solution(\"3\\n1 2 3\") == \"0 2\\n\"\nassert solution(\"5\\n1 2 3 2 2\") == \"0 1 3\\n\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('101101') == '110110'\nassert solution('10010110') == '01100011'\nassert solution('10') == '01'"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_1) == output_1, \"Test 1 failed\"\nassert solution(input_2) == output_2, \"Test 2 failed\"\nassert solution(input_3) == output_3, \"Test 3 failed\"\nassert solution(input_4) == output_4, \"Test 4 failed\"\nassert solution(input_5) == output_5, \"Test 5 failed\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Input {input()} is incorrect. Output {output()} is incorrect.\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"101101\") == \"110110\"\nassert solution(\"10010110\") == \"01100011\"\nassert solution(\"10\") == \"01\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('101101') == '110110'\nassert solution('10010110') == '01100011'\nassert solution('10') == '01'"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"101101\\n110\\n\") == \"110110\\n\"\nassert solution(\"10010110\\n100011\\n\") == \"01100011\\n\"\nassert solution(\"10\\n11100\\n\") == \"01\\n\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"101101\") == \"110110\"\nassert solution(\"10010110\") == \"01100011\"\nassert solution(\"10\") == \"01\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"101101\") == \"110110\"\nassert solution(\"10010110\") == \"01100011\"\nassert solution(\"10\") == \"01\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"101101\\n110\") == \"110110\"\nassert solution(\"10010110\\n100011\") == \"01100011\"\nassert solution(\"10\\n11100\") == \"01\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"101101\\n110\\n\") == \"110110\\n\"\nassert solution(\"10010110\\n100011\\n\") == \"01100011\\n\"\nassert solution(\"10\\n11100\\n\") == \"01\\n\""
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\") == \"1\"\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 1 1 0\") == \"-1\"\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1\") == \"0\""
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 4, 1) == -1, \"Expected -1, but got {}\".format(solution(3, 4, 1))  # Test case 3\nassert solution(5, 5, 2) == 1, \"Expected 1, but got {}\".format(solution(5, 5, 2))  # Test case 4\nassert solution(3, 4, 1) == 0, \"Expected 0, but got {}\".format(solution(3, 4, 1))  # Test case 5"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'Output\\n1'"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 'TODO'\n"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == -1, \"Expected -1, got\"\nassert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\") == 1, \"Expected 1, got\"\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 0 0 1\") == -1, \"Expected -1, got\""
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\") == 1\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 0 0 1\") == -1\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1\") == 0"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == -1  # Test case 1"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\") == 1\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 0 0 1\") == -1\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1\") == 0"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\\n1\\n1\\n1\\n1\\n1\\n\""
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n\") == \"1\"\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n0 1 1 0\\n\") == \"-1\"\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n\") == \"0\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0') == '2 2 3 1 2 2'"
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\") == \"2 2 3 1 2 2 3 1 2 3 1 2 3 1 2 3 1 2 3\"\nassert solution(\"3\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\") == \"9999 10000 9998\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Expected '{output}', got '{solution(input())}'\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"2 2 3 1 2 1\"\nassert solution(2) == \"0 0 0 0 0\"\nassert solution(1) == \"0\"\nassert solution(5) == \"2 2 3 1 2 1\"\nassert solution(3) == \"2 2 3 1 2 1\"\nassert solution(2) == \"0 0 0 0 0\"\nassert solution(1) == \"0\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\") == \"2 2 3 1 2 4\"\nassert solution(\"3\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\") == \"9999 10000 9998\"\nassert solution(\"5\\n10 0 0 1 1\\n0 10 0 1 1\\n10 10 0 1 1\\n10 10 10 1 1\\n10 10 10 1 1\") == \"10 10 10 10 10 10\"\nassert solution(\"3\\n1 2 3\\n2 3 4\\n3 4 5\") == \"1 2 3 4 5\"\nassert solution(\"5\\n10 0 0 1 1\\n0 10 0 1 1\\n10 10 0 1 1\\n10 10 10 1 1\\n10 10 10 1 1\") == \"10 10 10 10 10 10\"\nassert solution(\"3\\n1 2 3\\n2 3 4\\n3 4 5\") == \"1 2 3 4 5\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\\n') == '2 2 3 1 2 2'\nassert solution('3\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\\n') == '9999 10000 9998'"
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: solution({input()}) should return {expected_output}, but returned {solution(input())}\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\") == \"2 2 3 1 2 10000\"\nassert solution(\"3\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\") == \"9999 10000 9998\"\nassert solution(\"5\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\") == \"2 2 3 1 2 10000\"\nassert solution(\"3\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\") == \"9999 10000 9998\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2 2 3 1 2 2 2 2\\n\"\nassert solution() == \"9999 10000 9998\\n\""
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\\n') == 22\nassert solution('5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\\n') == 103\nassert solution('6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n') == 105\nassert solution('3\\n00 5000\\n00 5000\\n00 5000\\n') == 0"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\") == \"22\\n\"\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\\n\") == \"103\\n\"\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n\") == \"105\\n\"\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\\n\") == \"0\\n\""
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\\n') == '22\\n'\nassert solution('5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\\n') == '103\\n'\nassert solution('6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n') == '105\\n'\nassert solution('3\\n00 5000\\n00 5000\\n00 5000\\n') == '0\\n'\n"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\\n\") == \"22\"\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\\n\") == \"103\"\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n\") == \"105\"\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\\n\") == \"0\""
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\\n\") == 22\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\\n\") == 103\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n\") == 105\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\\n\") == 0"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\\n\") == \"22\"\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\\n\") == \"103\"\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n\") == \"105\"\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\\n\") == \"0\""
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\\n') == '22'\nassert solution('5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\\n') == '103'\nassert solution('6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n') == '105'\nassert solution('3\\n00 5000\\n00 5000\\n00 5000\\n') == '0'"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9') == 22\nassert solution('5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1') == 103\nassert solution('6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n') == 105\nassert solution('3\\n00 5000\\n00 5000\\n00 5000') == 0"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\\n\") == 22\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\\n\") == 103\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n\") == 105\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\\n\") == 0"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output\n\nfor i in range(n):\n    for j in range(m):\n        assert solution(stdin) == expected_output\n\nassert solution(stdin) == expected_output"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n2 3 2 3\"\nassert solution(\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n1 3 1 3\"\nassert solution(\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n3 3 2 3\"\nassert solution(\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\") == \"NO\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n2 3 2 3\\n\"\nassert solution(\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n1 3 1 3\\n\"\nassert solution(\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n3 3 2 3\\n\"\nassert solution(\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\\n\") == \"NO\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n2 3 2 3\\n\"\nassert solution(\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n1 3 1 3\\n\"\nassert solution(\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n3 3 2 3\\n\"\nassert solution(\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\") == \"NO\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n2 3 2 3\"\nassert solution(\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n1 3 1 3\"\nassert solution(\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n3 3 2 3\"\nassert solution(\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\") == \"NO\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"YES\\n2 3 2 3\"\n"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n2 3 2 3\\nYES\\n1 3 1 3\\nYES\\n3 3 2 3\\n\"\nassert solution(\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n1 3 1 3\\nYES\\n3 3 2 3\\n\"\nassert solution(\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n3 3 2 3\\n\"\nassert solution(\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\\n\") == \"NO\\n\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n2 3 2 3\\n\"\nassert solution(\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n1 3 1 3\\n\"\nassert solution(\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n3 3 2 3\\n\"\nassert solution(\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\\n\") == \"NO\\n\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\\n') == 'YES\\n2 3 2 3\\n'\nassert solution('3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\\n') == 'YES\\n1 3 1 3\\n'\nassert solution('3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\\n') == 'YES\\n3 3 2 3\\n'\nassert solution('3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\\n') == 'NO'"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n2 3 2 3\\nYES\\n1 3 1 3\\nYES\\n3 3 2 3\\nNO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n4 1\n2 3 4 1\n1 2 3 4\n''') == 'NO'\n\nassert solution('''\n4 1\n4 3 1 2\n3 4 2 1\n''') == 'YES'\n\nassert solution('''\n4 3\n4 3 1 2\n3 4 2 1\n''') == 'YES'\n\nassert solution('''\n4 2\n4 3 1 2\n2 1 4 3\n''') == 'YES'\n\nassert solution('''\n4 1\n4 3 1 2\n2 1 4 3\n''') == 'NO'"
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\\n\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\\n\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\\n\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\\n\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\\n\") == \"NO\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 1\\n2 3 4 1\\n1 2 3 4\\n') == 'NO'\nassert solution('4 1\\n4 3 1 2\\n3 4 2 1\\n') == 'YES'\nassert solution('4 3\\n4 3 1 2\\n3 4 2 1\\n') == 'YES'\nassert solution('4 2\\n4 3 1 2\\n2 1 4 3\\n') == 'YES'\nassert solution('4 1\\n4 3 1 2\\n2 1 4 3\\n') == 'NO'"
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"NO\"  # Solution 1\nassert solution() == \"YES\" # Solution 2\nassert solution() == \"YES\" # Solution 3\nassert solution() == \"YES\" # Solution 4\nassert solution() == \"NO\"  # Solution 5"
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 1\\n2 3 4 1\\n1 2 3 4\\n') == 'NO'\nassert solution('4 1\\n4 3 1 2\\n3 4 2 1\\n') == 'YES'\nassert solution('4 3\\n4 3 1 2\\n3 4 2 1\\n') == 'YES'\nassert solution('4 2\\n4 3 1 2\\n2 1 4 3\\n') == 'YES'\nassert solution('4 1\\n4 3 1 2\\n2 1 4 3\\n') == 'NO'\nassert solution('4 1\\n4 3 1 2\\n4 2 3 1\\n') == 'YES'"
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\"\n"
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 1\\n2 3 4 1\\n1 2 3 4') == 'NO'\nassert solution('4 1\\n4 3 1 2\\n3 4 2 1') == 'YES'\nassert solution('4 3\\n4 3 1 2\\n3 4 2 1') == 'YES'\nassert solution('4 2\\n4 3 1 2\\n2 1 4 3') == 'YES'\nassert solution('4 1\\n4 3 1 2\\n2 1 4 3') == 'NO'"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4\\n\") == \"1 1\\n3 1\\n1 5\\n4 4\\n\"\nassert solution(\"7\\n\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\") == \"1 1\\n3 1\\n1 5\\n4 4\"\nassert solution(\"7\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Input\\n4\\n\\nInput\\n7\\n\\n\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\"\nassert solution(\"Input\\n7\\n\\nInput\\n4\\n\\n\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\"\nassert solution(\"Input\\n5\\n\\nInput\\n4\\n\\n\") == \"1 5\\n4 4\\n\"\n"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == output, \"Test failed.\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"1 1\\n3 1\\n1 5\\n4 4\\n\"\nassert solution(\"7\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(str(input())) == \"\"\"\n1 1\n3 1\n1 5\n4 4\n\"\"\".strip()\n\nassert solution(str(input())) == \"\"\"\n2 1\n1 2\n4 1\n5 2\n2 6\n5 7\n6 6\n\"\"\".strip()\n\nassert solution(str(input())) == \"\"\"\n7\n6\n5\n4\n3\n2\n1\n0\n\"\"\".strip()"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"1 1\\n3 1\\n1 5\\n4 4\\n\"\nassert solution(\"7\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4\") == \"1 1\\n3 1\\n1 5\\n4 4\\n\"\nassert solution(\"7\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4') == '1 1\\n3 1\\n1 5\\n4 4\\n'\nassert solution('7') == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n'"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n') == -1\nassert solution('3\\n1 2 3\\n') == 3"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\") == 3\nassert solution(\"1\\n1\") == 1\nassert solution(\"1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 "
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\") == 3\nassert solution(\"1\\n1\") == -1"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Solution: {solution(input())}, Expected: {expected}\""
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Test failed: expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1\\n\") == -1\n\nassert solution(\"3\\n1 2 3\\n\") == 3\n\nassert solution(\"1\\n2\\n\") == 0\n\nassert solution(\"1\\n2\\n3\\n4\\n\") == 3\n\nassert solution(\"1\\n2\\n3\\n4\\n5\\n\") == 3\n\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n\") == 4"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\\n\") == \"-1\\n\"  # Polycarpus doesn't have the ability to empty chests\nassert solution(\"3\\n1 2 3\\n\") == \"3\\n\"  # Polycarpus has the ability to empty chests\nassert solution(\"3\\n1 2 3\\n1 2 3\\n1 2 3\\n\") == \"3\\n\"  # Polycarpus has the ability to empty all the chests\nassert solution(\"5\\n1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\\n\") == \"5\\n\"  # Polycarpus has the ability to empty all the chests"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1\\n\") == \"-1\"\nassert solution(\"3\\n1 2 3\\n\") == \"3\"\nassert solution(\"1\\n2\\n\") == \"-1\"\nassert solution(\"1\\n1\\n\") == \"-1\""
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\""
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\\n\") == \"-1\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"3\\n\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"46 2\") == [\"7\", \"0 1 0 0 1 1 1\"]\nassert solution(\"2018 214\") == [\"3\", \"92 205 1\"]"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"46 2\") == \"7\\n0 1 0 0 1 1 1\\n\"\nassert solution(\"2018 214\") == \"3\\n92 205 1\\n\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"\"\"\n7\n0 1 0 0 1 1 1\n\n3\n92 205 1\n\"\"\"\n"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"46 2\\n2018 214\\n\") == \"3\\n92 205 1\\n\"\n\nassert solution(\"2018 214\\n\") == \"2\\n92 205 1\\n\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"46 2\") == \"7\\n0 1 0 0 1 1 1\"\nassert solution(\"2018 214\") == \"3\\n92 205 1\"\n"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"46 2\") == \"7\\n0 1 0 0 1 1 1\"\nassert solution(\"2018 214\") == \"3\\n92 205 1\"\n"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('46 2') == '7\\n0 1 0 0 1 1 1'\nassert solution('2018 214') == '3\\n92 205 1'"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('46 2') == '7\\n0 1 0 0 1 1 1'\nassert solution('2018 214') == '3\\n92 205 1'\nassert solution('') == '-1'\nassert solution('46 2 3') == '-1'"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"46 2\\n2018 214\\n\") == \"3\\n92 205 1\\n\"\n"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 20 20\\n6 2\\n1 3\\n2 6\\n\") == 5.0\nassert solution(\"4 1 1\\n2 3\\n3 2\\n2 3\\n3 2\\n\") == 0.4"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 20 20\\n6 2\\n1 3\\n2 6\\n\") == 5.0\nassert solution(\"4 1 1\\n2 3\\n3 2\\n2 3\\n3 2\\n\") == 0.4\n"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"5.000000000000000\""
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, \"Your solution is incorrect!\""
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    3 20 20\n    6 2\n    1 3\n    2 6\n    \"\"\"\n) == \"5.000000000000000\\n\"\n\nassert solution(\n    \"\"\"\n    4 1 1\n    2 3\n    3 2\n    2 3\n    3 2\n    \"\"\"\n) == \"0.400000000000000\\n\""
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 5.0\n"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 20 20\\n6 2\\n1 3\\n2 6\") == 5.0\nassert solution(\"4 1 1\\n2 3\\n3 2\\n2 3\\n3 2\") == 0.4"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    3 20 20\n    6 2\n    1 3\n    2 6\n    \"\"\"\n) == \"5.000000000000000\"\n\nassert solution(\n    \"\"\"\n    4 1 1\n    2 3\n    3 2\n    2 3\n    3 2\n    \"\"\"\n) == \"0.400000000000000\""
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 20 20\\n6 2\\n1 3\\n2 6\") == 5.0\nassert solution(\"4 1 1\\n2 3\\n3 2\\n2 3\\n3 2\") == 0.4"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 20 20\\n6 2\\n1 3\\n2 6\") == 5.0\nassert solution(\"4 1 1\\n2 3\\n3 2\\n2 3\\n3 2\") == 0.4"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Test failed: expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n2\\n8\\n2') == '4\\n'\nassert solution('5\\n2\\n8\\n2') == '5\\n'\nassert solution('4\\n3\\n8\\n2') == '4\\n'\nassert solution('5\\n3\\n8\\n2') == '5\\n'\n\nprint('All tests passed!')"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"4\", \"Test 1\"\nassert solution(\"8 2\") == \"5\", \"Test 2\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3') == '4', \"Test 1\"\nassert solution('8 2') == '5', \"Test 2\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"2 3\") == \"4\"\nassert solution(stdin=\"8 2\") == \"5\"\n"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == 4\nassert solution(\"8 2\") == 5"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'Output', \"Please complete the solution\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n4 5 7\\n\") == \"Conan\"\nassert solution(\"2\\n1 1\\n\") == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Conan\"\nassert solution(input()) == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n4 5 7\") == \"Conan\"\nassert solution(\"2\\n1 1\") == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n4 5 7\\n\\n2\\n1 1\\n\") == \"Conan\"\nassert solution(\"2\\n1 1\\n\\n\") == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4 5 7\") == \"Conan\\n\"\nassert solution(\"2\\n1 1\") == \"Agasa\\n\"\n"
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, got: {solution(input())}\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='3\\n4 5 7\\n2\\n1 1\\n') == 'Conan'\nassert solution(stdin='2\\n1 1\\n') == 'Agasa'"
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Got {solution(input())}, expected {expected}\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test case failed: {input()} -> {output}\" for input, output in zip(input_data, output_data)"
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''3\n4 5 7''') == 'Conan'\nassert solution('''2\n1 1''') == 'Agasa'"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"3 3\\n3 3\\n. #\\n..#\\n#.#\"\nassert solution(\"4 3\") == \"4 3\\n4 3\\n. #\\n..#\\n#.#\\n.#.#\\n..##\\n.#..\\n#....\\n#.....\\n#...#\"\nassert solution(\"5 3\") == \"5 3\\n5 3\\n. #\\n..#\\n#.#\\n.#.#\\n..##\\n.#..\\n#....\\n#.....\\n#...#\""
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"3 3\\n3 2\\n....\\n....\\n\"\nassert solution(\"4 5\") == \"5 5\\n5 4\\n....\\n....\\n\"\nassert solution(\"6 7\") == \"7 7\\n7 6\\n....\\n....\\n\"\nassert solution(\"8 9\") == \"9 9\\n9 8\\n....\\n....\\n\"\nassert solution(\"10 11\") == \"11 11\\n11 10\\n....\\n....\\n\"\nassert solution(\"12 13\") == \"13 13\\n13 12\\n....\\n....\\n\"\nassert solution(\"14 15\") == \"15 15\\n15 14\\n....\\n....\\n\""
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"3 3\\n3\\n#.#\"\nassert solution(\"5 5\") == \"5 5\\n5\\n#.#\""
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"\"\"\n3 3\n##.\n..#\n"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"3 3\\n3 3\\n##\\n..#\\n#.#\"\n"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"\"\"3 3\n##.\n..#\n"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n\") == \"3 3\\n##.\\n..#\\n#.#\\n\""
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"\"\"3 3\n#.\n..#\n"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"2 3\") == \"\"\"3 3\n..#\n"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 4\\n+ 1\\n+ 2\\n- 2\\n- 1') == ['4', '1 3 4 5 ', '1']\nassert solution('3 2\\n+ 1\\n- 2\\n\\n\\n+ 1\\n- 2') == ['1', '3']\nassert solution('2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n\\n+ 1\\n- 1\\n+ 2\\n- 2') == ['0', '2 3']\nassert solution('5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n\\n+ 1\\n- 1\\n+ 2\\n- 2\\n+ 1\\n- 1\\n+ 2\\n- 2') == ['3', '2 3 5 ']"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n3 2\\n+ 1\\n- 2\\n\\n2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n') == '4\\n1 3 4 5 1\\n\\n\\n\\n3\\n2 3 5 1\\n\\n'\nassert solution('3 2\\n+ 1\\n- 2\\n\\n2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n') == '1\\n3 2 5 1\\n\\n'\nassert solution('2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n') == '0\\n'"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Input\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\nOutput\\n4\\n1 3 4 5 \\nInput\\n3 2\\n+ 1\\n- 2\\n\\nOutput\\n1\\n3\\n\\nInput\\n2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\nOutput\\n0\\n\\nInput\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\nOutput\\n3\\n2 3 5 \\nInput\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\nOutput\\n0\") == \"Output\\n4\\n1 3 4 5 \\nOutput\\n1\\n3\\n\\nOutput\\n0\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('+ 1') == '4\\n1 3 4 5 '\nassert solution('- 2') == '3\\n2 3 '\nassert solution('- 1') == '1\\n3 4 5 '\nassert solution('- 3') == '2\\n3 '\nassert solution('+ 3') == '1\\n3 4 5 '\nassert solution('+ 4') == '2\\n3 '\nassert solution('- 4') == '1\\n3 4 5 '"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\") == \"4\\n1 3 4 5 \"\nassert solution(\"3 2\\n+ 1\\n- 2\\n\") == \"1\\n3 \nInput\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\") == \"0\"\nassert solution(\"5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\") == \"3\\n2 3 5 \"\nassert solution(\"2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\") == \"0\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n3 2\\n+ 1\\n- 2\\n\\n2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n') == '4\\n1 3 4 5 \\n3\\n1 3 \\n0\\n\\n2\\n3\\n2\\n\\n0'\nassert solution('3 2\\n+ 1\\n- 2\\n\\n2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n') == '1\\n3 2\\n\\n0\\n'\nassert solution('2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n') == '0\\n'\nassert solution('5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n') == '3\\n2 3 5 \\n\\n1\\n3\\n\\n0\\n'"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('') == 0\nassert solution('5 4\\n+') == 4\nassert solution('5 4\\n- 2\\n- 1\\n') == 4\nassert solution('3 2\\n+ 1\\n- 2\\n') == 1\nassert solution('2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n') == 0\nassert solution('5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n') == 3\nassert solution('2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n') == 0"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0\\n\"\n"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 4\\n+ 1\\n+ 2\\n- 2\\n- 1') == '4\\n1 3 4 5'\nassert solution('3 2\\n+ 1\\n- 2\\n') == '1\\n3'\nassert solution('2 4\\n+ 1\\n- 1\\n+ 2\\n- 2') == '0\\n'\nassert solution('5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4') == '3\\n2 3 5'\nassert solution('2 4\\n+ 1\\n- 2\\n+ 2\\n- 1') == '0'"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Solution should return {output}, but returned {solution(input())}.\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3\\na 2 3\\na 2 3\\n9\\n\\nx 1\\n5 4 2 4 5\\ny 2\\n5\\n') == '4\\n'\nassert solution('5 1\\n5 4 2 4 5\\nx 2\\n5\\n') == '1\\n'\nassert solution('') == '0\\n'"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Output does not match expected output. \\nInput: {input()} \\nOutput: {output}\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 2 3\\n1 2 3\\n9\\n\") == \"4\\n\"\nassert solution(\"5 1\\n5 4 2 4 5\\n2\\n5\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '4'"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\n1 2 3\\n1 2 3\\n9\\n') == '4\\n'\nassert solution('5 1\\n5 4 2 4 5\\n2\\n5\\n') == '1\\n'\nassert solution('') == '0\\n'\nassert solution('3 3\\n1 2 3\\n1 2 3\\n9\\n\\n5 1\\n5 4 2 4 5\\n2\\n5\\n') == '1\\n'\nprint(\"All tests passed!\")"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n1 2 3\\n1 2 3\\n9\") == \"4\"\nassert solution(\"5 1\\n5 4 2 4 5\\n2\\n5\") == \"1\"\nassert solution(\"1 1\\n1 2 3 4 5\\n2\\n3\") == \"0\"\nassert solution(\"1 1\\n1 2 3 4 5\\n2\\n3\") == \"0\"\nassert solution(\"1 1\\n1 2 3 4 5\\n2\\n3\") == \"0\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n1 2 3\\n1 2 3\\n9\") == \"4\"\nassert solution(\"5 1\\n5 4 2 4 5\\n2\\n5\") == \"1\"\n\nfrom typing import List"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"4\\n\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n1 2 3\\n1 2 3\\n9\\n\") == \"4\\n\"\nassert solution(\"5 1\\n5 4 2 4 5\\n2\\n5\\n\") == \"1\\n\"\n\nprint(\"All tests passed.\")"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 2 3\\n1 2 3\\n9\") == \"4\"\nassert solution(\"5 1\\n5 4 2 4 5\\n2\") == \"1\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\ncba\") == \"NO\"\nassert solution(\"3 4\\ncba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\ncba\") == \"NO\"\nassert solution(\"3 4\\ncba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\ncba') == 'NO'\nassert solution('3 4\\ncba') == 'cbd'\nassert solution('4 4\\nabcd') == 'abda'"
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3\\ncba') == 'NO'\nassert solution('3 4\\ncba') == 'cbd'\nassert solution('4 4\\nabcd') == 'abda'"
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\ncba\") == \"NO\"\nassert solution(\"3 4\\ncba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\ncba\") == \"NO\"\nassert solution(\"3 4\\ncba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\ncba') == 'NO'\nassert solution('3 4\\ncba') == 'cbd'\nassert solution('4 4\\nabcd') == 'abda'"
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\ncba\\n\") == \"NO\"\nassert solution(\"3 4\\ncba\\n\") == \"cbd\"\nassert solution(\"4 4\\nabcd\\n\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\ncaba\") == \"NO\"\nassert solution(\"3 4\\ncaba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3\\ncba') == 'NO'\nassert solution('3 4\\ncba') == 'cbd'\nassert solution('4 4\\nabcd') == 'abda'"
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\") == \"quailty\"\nassert solution(\"6 1\") == \"once again\"\nassert solution(\"6 5\") == \"tokitsukaze\"\nassert solution(\"4 1\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\") == \"quailty\"\nassert solution(\"6 1\") == \"once again\"\nassert solution(\"6 5\") == \"tokitsukaze\"\nassert solution(\"4 1\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\"\n\nfrom typing import List"
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\") == \"quailty\"\nassert solution(\"6 1\") == \"once again\"\nassert solution(\"6 5\") == \"tokitsukaze\"\nassert solution(\"4 1\") == \"once again\"\nassert solution(\"4 3\") == \"quailty\"\n"
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\"\nassert solution(\"4 1\\n0011\") == \"once again\"\nassert solution(\"4 1\\n0011\") == \"once again\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(b'4 2\\n0101') == 'quailty'\nassert solution(b'6 1\\n010101') == 'once again'\nassert solution(b'6 5\\n010101') == 'tokitsukaze'\nassert solution(b'4 1\\n0011') == 'once again'"
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"50\"\nassert solution(input()) == \"7\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\"\nassert solution(\"1 2 10\\n11\") == \"7\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"50\\n\", \"Solution not found\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\"\nassert solution(r\"1 2 10\\n11\") == \"7\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 4 50\\n20 100\\n60 10 40 80') == '50'\nassert solution('1 2 10\\n11') == '7'"
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\\n\"\nassert solution(\"1 2 10\\n11\") == \"7\\n\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\"\n\nassert solution(\"1 2 10\\n11\") == \"7\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 4 50\\n20 100\\n60 10 40 80') == '50'\nassert solution('1 2 10\\n11\\n15 7') == '7'"
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\"\nassert solution(\"1 2 10\\n11\") == \"7\"\n"
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n1 1\\n\") == \"1 6\\n\"\nassert solution(\"3 2\\n0 0\\n\") == \"1 3\\n\"\nassert solution(\"1 10\\n5 3\\n\") == \"5 5\\n\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n1 1\\n\\n3 2\\n0 0\\n\\n1 10\\n5 3\") == \"1 6\\n5 5\"\nassert solution(\"3 2\\n0 0\\n\\n1 10\\n5 3\") == \"1 3\\n5 5\"\nassert solution(\"1 10\\n5 3\") == \"5 5\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n1 1\\n\") == \"1 6\\n\"\nassert solution(\"3 2\\n0 0\\n\") == \"1 3\\n\"\nassert solution(\"1 10\\n5 3\\n\") == \"5 5\\n\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n1 1\\n3 2\\n1 10\\n5 3\") == \"1 6\\n5 5\"\nassert solution(\"3 2\\n0 0\\n1 3\\n1 10\") == \"1 3\\n5 5\"\nassert solution(\"1 10\\n5 3\") == \"5 5\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n1 1\\n\") == \"1 6\\n\"\nassert solution(\"3 2\\n0 0\\n\") == \"1 3\\n\"\nassert solution(\"1 10\\n5 3\\n\") == \"5 5\\n\"\n"
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n1 1\\n\\n3 2\\n0 0\\n\\n1 10\\n5 3\") == \"1 6\\n5 5\\n\"\nassert solution(\"3 2\\n0 0\\n\\n1 10\\n5 3\") == \"1 3\\n\"\nassert solution(\"1 10\\n5 3\") == \"5 5\\n\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n1 1\\n\") == \"1 6\\n\"\nassert solution(\"3 2\\n0 0\\n\") == \"1 3\\n\"\nassert solution(\"1 10\\n5 3\\n\") == \"5 5\\n\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(str(1)) == '1 6'\nassert solution(str(3)) == '1 3'\nassert solution(str(1)) == '5 5'"
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n1 1\\n3 1\\n2 2\\n1 2\\n4 2\\n\") == \"1 6\\n\"\nassert solution(\"3 2\\n0 0\\n4 2\\n\") == \"1 3\\n\"\nassert solution(\"1 10\\n5 3\\n\") == \"5 5\\n\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n-2 5 -1\\n') == '2\\n2 3\\n3 3\\n'\nprint(\"All test cases pass\")"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input(\"Enter the length of the integer sequence N: \")) == \"2\\n3 3\\n\"\nassert solution(input(\"Enter the length of the integer sequence N: \")) == \"2\\n2 3\\n\"\nassert solution(input(\"Enter the length of the integer sequence N: \")) == \"2\\n3 3\\n\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n-2 5 -1\") == \"2\\n2 3\\n3 3\"\nassert solution(\"1\\n1 2 3\") == \"0\\n1 2 3\"\nassert solution(\"1\\n-1 2 3 4\") == \"1\\n-1 2 3 4\"\nassert solution(\"3\\n1 -2 3 -4 5\") == \"1\\n-2 3 -4 5\"\nassert solution(\"5\\n-1 0 1 2 3 4\") == \"0\\n-1 0 1 2 3 4\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\\n2 3\\n3 3\"\n"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"-2 5 -1\") == \"2\\n2 3\\n3 3\"\nassert solution(\"4 6 3\") == \"2\\n2 3\\n3 3\"\nassert solution(\"1 2 3 4 5\") == \"2\\n2 3\\n3 3\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\\n2 3\\n3 3\\n\"\nassert solution(\"3\") == \"2\\n2 3\\n3 3\\n\"\nassert solution(\"2\\n-2 5 -1\\n\") == \"2\\n2 3\\n3 3\\n\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"\"\"\n2\n2 3\n3 3\n\"\"\"\n"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n-2 5 -1\\n\") == \"2\\n2 3\\n3 3\\n\"\nassert solution(\"5\\n-10 0 10\\n\") == \"1\\n-10\\n10\\n\"\nassert solution(\"2\\n-2 -2\\n\") == \"1\\n-2 -2\\n2 -2\\n\"\nassert solution(\"3\\n-2 5 -1\\n\") == \"2\\n2 3\\n3 3\\n\"\nassert solution(\"5\\n-10 0 10\\n\") == \"1\\n-10\\n10\\n\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n-2 5 -1\") == \"2\\n2 3\\n3 3\\n\"\nassert solution(\"1\\n1 2 3\") == \"0\\n1 2 3\\n\"\nassert solution(\"2\\n1 2 3\") == \"2\\n1 2 3\\n\"\nassert solution(\"2\\n1 1 1\") == \"2\\n1 1 1\\n\"\nassert solution(\"10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"2\\n1 2 3 4 5 6 7 8 9 10\\n\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n0 3\\n1 5\\n\\n1\\n0 4\\n\\n2\\n1 10\\n2 2\") == \"3\"\nassert solution(\"1\\n0 4\\n\\n2\\n1 10\\n2 2\") == \"1\"\nassert solution(\"2\\n1 10\\n2 2\") == \"3\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n0 3\\n1 5\\n\") == \"3\\n\"\nassert solution(\"1\\n0 4\\n\") == \"1\\n\"\nassert solution(\"2\\n1 10\\n2 2\\n\") == \"3\\n\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n0 4\") == \"1\"\nassert solution(\"2\\n1 10\\n2 2\") == \"3\"\nassert solution(\"2\\n0 3\\n1 5\") == \"3\"\nassert solution(\"2\\n0 3\\n1 5\") == \"3\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3\\n\"\nprint(\"Pass\")"
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Input\\n2\\n0 3\\n1 5\\n\\nOutput\\n3\\n\\nInput\\n1\\n0 4\\n\\nOutput\\n1\\n\\nInput\\n2\\n1 10\\n2 2\\n\\nOutput\\n3\") == \"3\\n1\\n3\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n0 3\\n1 5\\n') == '3'\nassert solution('1\\n0 4\\n') == '1'\nassert solution('2\\n1 10\\n2 2\\n') == '3'"
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3\\n\"\nassert solution(open(\"input2.txt\", \"r\")) == \"1\\n\"\nassert solution(open(\"input3.txt\", \"r\")) == \"3\\n\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\"\nassert solution() == \"1\"\nassert solution() == \"3\"\nassert solution() == \"1\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected_output, f\"Solution is incorrect. Expected: {expected_output}, Received: {solution}\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 18\\n5 6 1 10 12 2\\n\") == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\"\nassert solution(\"3 50\\n25 25 50\\n\") == \"3\\n0 25 50\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n6 18\n5 6 1 10 12 2\n''') == '''\n16\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18 \n'''\n\nassert solution('''\n3 50\n25 25 50\n''') == '''\n3\n0 25 50\n'''"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 18\\n5 6 1 10 12 2\\n\") == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\"\nassert solution(\"3 50\\n25 25 50\\n\") == \"3\\n0 25 50\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 6 1 10 12 2') == '16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\\n'"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 18\\n5 6 1 10 12 2\\n\") == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\\n\"\nassert solution(\"3 50\\n25 25 50\\n\") == \"3\\n0 25 50\\n\"\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6 18\\n5 6 1 10 12 2') == '16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18'\nassert solution('3 50\\n25 25 50') == '3\\n0 25 50'"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Test failed. Expected output: {expected}, got: {solution(stdin)}\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(example) == output, f\"Error: Your solution is incorrect. Please check the input and output examples.\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\\n\"\nassert solution(stdin) == \"3\\n0 25 50\\n\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10 12\\n5 6 1 10 12 2\\n') == '16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\\n'\nassert solution('10 12\\n5 6 1 10 12 2\\n') == '16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\\n'\nassert solution('10 12\\n5 6 1 10 12 2\\n') == '16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\\n'\nassert solution('10 12\\n5 6 1 10 12 2\\n') == '16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\\n'\nassert solution('10 12\\n5 6 1 10 12 2\\n') == '16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\\n'\nassert solution('10 12\\n5 6 1 10 12 2\\n') == '16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\\n'"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6') == 3\nassert solution('2') == 2"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"2\") == \"2\""
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Output\\n3\", \"Test 1 failed\""
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(6) == \"3\", \"The expected output is '3'. But, your code is wrong. Please see the problem statement.\"\nassert solution(2) == \"2\", \"The expected output is '2'. But, your code is wrong. Please see the problem statement.\""
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(6) == 3\nassert solution(2) == 2"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"2\") == \"2\""
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(6) == 3\nassert solution(2) == 2"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 3\nassert solution(2) == 2"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(6) == 3\nassert solution(2) == 2"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2) == 2\nassert solution(5) == 3\nassert solution(6) == 4\nassert solution(7) == 3"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 1\\n20 2\\n30 3\\n\") == \"180\\n\"\nassert solution(\"3\\n3 1\\n2 2\\n4 3\\n\") == \"21\\n\"\nassert solution(\"1\\n5 10\\n\") == \"50\\n\""
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 180\nassert solution(3) == 21\nassert solution(1) == 50"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 180"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n10 1\\n20 2\\n30 3\\n\") == \"180\"\nassert solution(\"3\\n3 1\\n2 2\\n4 3\\n\") == \"21\"\nassert solution(\"1\\n5 10\\n\") == \"50\""
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n10 1\\n20 2\\n30 3\") == \"180\"\nassert solution(\"3\\n3 1\\n2 2\\n4 3\") == \"21\"\nassert solution(\"1\\n5 10\") == \"50\""
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 180\nassert solution(3) == 21\nassert solution(1) == 50"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n10 1\\n20 2\\n30 3\") == \"180\\n\"\nassert solution(\"3\\n3 1\\n2 2\\n4 3\") == \"21\\n\"\nassert solution(\"1\\n5 10\") == \"50\\n\""
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"180\\n\" # solution1"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\n1\\n20\\n2\\n30\\n3\\n\") == \"180\"\nassert solution(\"3\\n1\\n2\\n3\\n\") == \"21\"\nassert solution(\"1\\n5\\n10\\n\") == \"50\""
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n10 1\\n20 2\\n30 3\") == \"180\"\nassert solution(\"3\\n3 1\\n2 2\\n4 3\") == \"21\"\nassert solution(\"1\\n5 10\") == \"50\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n0 1 2 3 4\") == \"1\"\nassert solution(\"3\\n0 0 10\") == \"2\"\nassert solution(\"5\\n0 1 2 3 4\") == \"1\"\nassert solution(\"4\\n0 0 0 0\") == \"4\"\nassert solution(\"9\\n0 1 0 2 0 1 1 2 10\") == \"3\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n0 0 10\") == \"2\"\nassert solution(\"5\\n0 1 2 3 4\") == \"1\"\nassert solution(\"4\\n0 0 0 0\") == \"4\"\nassert solution(\"9\\n0 1 0 2 0 1 1 2 10\") == \"3\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 2\nassert solution(2) == 1\nassert solution(3) == 4\nassert solution(4) == 4\nassert solution(5) == 1\nassert solution(6) == 4\nassert solution(7) == 1\nassert solution(8) == 2\nassert solution(9) == 3"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n0 0 10\\n5\\n0 1 2 3 4\\n4\\n0 0 0 0\\n9\\n0 1 0 2 0 1 1 2 10\\n3\\n0 0 0 10 20 30 40 50\\n5\") == \"2\"\nassert solution(\"5\\n0 1 2 3 4\\n4\\n0 0 0 0\\n9\\n0 1 0 2 0 1 1 2 10\\n3\\n0 0 0 10 20 30 40 50\\n5\") == \"1\"\nassert solution(\"4\\n0 0 0 0\\n4\\n0 0 0 0\\n9\\n0 1 0 2 0 1 1 2 10\\n3\\n0 0 0 10 20 30 40 50\\n5\") == \"4\"\nassert solution(\"9\\n0 1 0 2 0 1 1 2 10\\n3\\n0 0 0 10 20 30 40 50\\n5\") == \"3\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"1\"\nassert solution(\"4\") == \"4\"\nassert solution(\"9\") == \"3\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\", \"Expected output: 2, got: {}\".format(solution(stdin))"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n0 0 10\\n\") == \"2\\n\"\nassert solution(\"5\\n0 1 2 3 4\\n\") == \"1\\n\"\nassert solution(\"4\\n0 0 0 0\\n\") == \"4\\n\"\nassert solution(\"9\\n0 1 0 2 0 1 1 2 10\\n\") == \"3\\n\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0 10\") == \"2\"\nassert solution(\"5 0 2 3 4\") == \"1\"\nassert solution(\"4 0 0 0\") == \"4\"\nassert solution(\"9 0 1 2 10\") == \"3\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 2\nassert solution(5) == 1\nassert solution(4) == 4\nassert solution(9) == 3"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"4\\n0 0\\n0 1\\n1 0\\n1 1\\n\""
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\\n\") == \"5\\n\"\nassert solution(\"5\\n0 0\\n0 1\\n1 0\\n1 1\\n\") == \"5\\n\"\nassert solution(\"6\\n0 0\\n0 1\\n1 0\\n1 1\\n2 0\\n2 1\\n2 2\\n\") == \"7\\n\"\nassert solution(\"7\\n0 0\\n0 1\\n1 0\\n1 1\\n2 0\\n2 1\\n2 2\\n\") == \"7\\n\"\nassert solution(\"8\\n0 0\\n0 1\\n1 0\\n1 1\\n2 0\\n2 1\\n2 2\\n3 0\\n3 1\\n3 2\\n3 3\\n\") == \"9\\n\"\nassert solution(\"9\\n0 0\\n0 1\\n1 0\\n1 1\\n2 0\\n2 1\\n2 2\\n3 0\\n3 1\\n3 2\\n3 3\\n\") == \"9\\n\"\nassert solution(\"10\\n0 0\\n0 1\\n1 0\\n1 1\\n2 0\\n2 1\\n2 2\\n3 0\\n3 1\\n3 2\\n3 3\\n4 0\\n4 1\\n4 2\\n4 3\\n4 4\\n4 5\\n4 6\\n4 7\\n4 8\\n4 9\\n4 10\\n4 11\\n4 12\\n4 13\\n4 14\\n4 15\\n4 16\\n4 17\\n4 18\\n4 19\\n4 20\\n4 21\\n4 22\\n4 23\\n4 24\\n4 25\\n4 26\\n4 27\\n4 28\\n4 29\\n4 30\\n4 31\\n4 32\\n4 33\\n4 34\\n4 35\\n4 36\\n4 37\\n4 38\\n4 39\\n4 40\\n4 41\\n4 42\\n4 43\\n4 44\\n4 45\\n4 46\\n4 47\\n4 48\\n4 49\\n4 50\\n4 51\\n4 52\\n4 53\\n4 54\\n4 55\\n4 56\\n4 57\\n4 58\\n4 59\\n4 60\\n4 61\\n4 62\\n4 63\\n4 64\\n4 65\\n4 66\\n4 67\\n4 68\\n4 69\\n4 70\\n4 71\\n4 72\\n4 73\\n4 74\\n4 75\\n4 76\\n4 77\\n4 78\\n4 79\\n4 80\\n4 81\\n4 82\\n4 83\\n4 84\\n4 85\\n4 86\\n4 87\\n4 88\\n4 89\\n4 90\\n4 91\\n4 92\\n4 93\\n4 94\\n4 95\\n4 96\\n4 97\\n4 98\\n4 99\\n4 100\\n4 101\\n4 102\\n4 103\\n4 104\\n4 105\\n4 106\\n4 107\\n4 108\\n4 109\\n"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"5\\n\", \"The correct output is not found.\""
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n4\n0 0\n0 1\n1 0\n1 1\n''') == '5\\n'\n\nimport math"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"5\\n\""
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 'print(sum(2**i for i in range(len(S))))'"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n4\n0 0\n0 1\n1 0\n1 1\n''') == '5'"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"5\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\\n\") == \"5\""
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"5\\n\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '4\\n', \"Incorrect Output\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"1\"  # Test case 1\nassert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"4\"  # Test case 2\n"
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"4\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"4\"\n"
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\\n\"\nassert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\\n\"\nassert solution(\"3\\nW 1\\nW 3\\nB 2\\nB 1\\nB 3\") == \"4\\n\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\\n\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n    3\n        B 1\n        W 2\n        B 3\n        W 1\n        W 3\n        B 2\n\"\"\") == \"4\\n\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\"\nassert solution(\"2\\nW 1\\nB 1\\nW 2\\nW 3\\nB 3\\nW 4\") == \"5\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\\n\"\nassert solution(\"6\\nW 1\\nW 3\\nB 2\\nW 2\\nB 1\\nW 3\\nB 1\") == \"4\\n\"\nassert solution(\"2\\nB 1\\nB 2\\nW 2\\nW 1\\nW 3\") == \"3\\n\"\nassert solution(\"10\\nB 1\\nB 2\\nB 3\\nB 4\\nW 2\\nB 1\\nW 3\\nB 2\") == \"6\\n\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, \"B 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\"\nassert solution(4, \"B 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\"\nassert solution(4, \"B 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\"\nassert solution(5, \"B 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"3\"\nassert solution(6, \"B 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"2\"\nassert solution(7, \"B 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"1\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == '''\n4\n4\n4\n4\n4\n'''\n\nassert solution == '''\n4\n4\n4\n4\n4\n'''"
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"1\\n2\\n2\\n\") == \"3\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n"
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Test {i+1} failed: {solution(input())}!= {expected}\"\nfor i, (b, g, n) in enumerate(test_cases):\n    expected = [1, 1, 1, 1, 2, 1]\n    solution(f\"{b} {g} {n}\")\n    assert expected == solution(f\"{b} {g} {n}\"), f\"Test {i+1} failed: {solution(f\"{b} {g} {n}\")}!= {expected}\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n6\\n3\\n') == 4\nassert solution('5\\n3\\n5\\n') == 4\nassert solution('5\\n3\\n5\\n') == 4"
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n6\\n3\\n') == 4\nassert solution('5\\n3\\n5\\n') == 4"
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5, 6, 3) == 4\nassert solution(5, 3, 5) == 4"
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"4\\n\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n4 2\\n\") == \"2\"\nassert solution(\"8\\n1 2 4 8 16 32 64 576\\n\") == \"32\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Incorrect output: {solution(input())}!= {output()}\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"2\\n\", \"Test case 1\"\nassert solution(\"8\") == \"32\\n\", \"Test case 2\"\nassert solution(\"4\") == \"2\\n\", \"Test case 3\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n4 2\\n\") == \"2\"\nassert solution(\"8\\n1 2 4 8 16 32 64 576\\n\") == \"32\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\", \"Output should be 2\"\n\nimport math\n\nn = int(input())\na = list(map(int, input().split()))\n\nlargest_not_perfect = -1\nlargest_perfect_square = -1\n\nfor i in a:\n    if math.sqrt(i) ** 2!= int(math.sqrt(i)):\n        largest_not_perfect = i\n    else:\n        largest_perfect_square = i"
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\", \"The largest number in the array that is not a perfect square is not 2.\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"8\") == \"32\"\nassert solution(\"4\") == \"2\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\") == 2\nassert solution(\"8\") == 32"
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    '''\n    2\n    4 2\n    8\n    1 2 4 8 16 32 64 576\n    '''\n) == '2\\n'\n\nassert solution(\n    '''\n    10\n    1 2 3 4 5 6 7 8 9 10\n    '''\n) == '5\\n'\n\nassert solution(\n    '''\n    5\n    1 2 3 4 5\n    '''\n) == '4\\n'\n\nassert solution(\n    '''\n    10\n    1 2 3 4 5 6 7 8 9 10\n    '''\n) == '5\\n'\n\nassert solution(\n    '''\n    10\n    1 2 3 4 5 6 7 8 9 10\n    '''\n) == '5\\n'"
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"8\") == \"32\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"400 4\\n100 300 450 500\\n\") == \"2\\n\"\nassert solution(\"50 2\\n100 25\\n\") == \"3\\n\"\nassert solution(\"400 1000\\n\") == \"-1\\n\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Output\"\n"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\\n\"\nassert solution(input()) == \"3\\n\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"400 4\\n100 300 450 500\") == \"2\"\nassert solution(\"50 2\\n100 25\") == \"3\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"400 4\\n100 300 450 500\") == \"2\\n\"\nassert solution(\"50 2\\n100 25\") == \"3\\n\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"400 4\\n100 300 450 500\") == \"2\"\nassert solution(\"50 2\\n100 25\") == \"3\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"400 4\\n100 300 450 500\") == \"2\"\nassert solution(\"50 2\\n100 25\") == \"3\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"400 4\\n100 300 450 500\\n\") == \"2\\n\"\nassert solution(\"50 2\\n100 25\\n\") == \"3\\n\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Test failed. Expected: {expected}, Received: {solution(input())}\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\") == \"6\\n\"\nassert solution(\"8 4\") == \"8\\n\"\nassert solution(\"1 2\") == \"2\\n\"\nassert solution(\"10 10\") == \"10\\n\"\nassert solution(\"1 10\") == \"1\\n\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"6\\n\", \"Test failed!\"\nprint(\"Test passed!\")"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"6\\n\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\") == \"6\\n\"\n"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\") == \"6\\n\", \"The correct output should be: 6\\n\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4, 2) == \"6\"\nassert solution(7, 3) == \"12\"\nassert solution(10, 2) == \"42\"\nassert solution
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\") == \"6\"\nassert solution(\"4 3\") == \"3\"\nassert solution(\"5 6\") == \"10\"\nassert solution(\"4 6\") == \"12\"\nassert solution(\"4 10\") == \"18\"\nassert solution(\"4 5\") == \"14\"\nassert solution(\"7 7\") == \"12\"\n"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\") == \"6\\n\"\n"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\") == \"6\\n\", \"Output should be 6.\"\nassert solution(\"10 10\") == \"10\\n\", \"Output should be 10.\"\nassert solution(\"4 10\") == \"12\\n\", \"Output should be 12.\"\nassert solution(\"1 1\") == \"1\\n\", \"Output should be 1.\"\nassert solution(\"10 2\") == \"2\\n\", \"Output should be 2.\"\n"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"6\\n\""
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3') == '499122178\\n499122178\\n499122178\\n'\nassert solution('4') == '499122178\\n499122178\\n499122178\\n'\nassert solution('5') == '499122178\\n499122178\\n499122178\\n'\nassert solution('6') == '499122178\\n499122178\\n499122178\\n'\nassert solution('7') == '499122178\\n499122178\\n499122178\\n'\nassert solution('8') == '499122178\\n499122178\\n499122178\\n'"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == '499122178\\n499122178\\n499122178'"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"499122178\\n499122178\\n499122178\"\n"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3') == '499122178\\n499122178\\n499122178'\nassert solution('1') == '3\\n3\\n3'\nassert solution('4') == '2\\n2\\n2'\nassert solution('5') == '1\\n1\\n1'\nassert solution('6') == '0\\n0\\n0'\nassert solution('7') == '0\\n0\\n0'\nassert solution('8') == '0\\n0\\n0'\n"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"499122178\\n499122178\\n499122178\"\n"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"499122178\\n499122178\\n499122178\\n\"\nassert solution(\"5\") == \"234567890\\n234567890\\n234567890\\n\"\nassert solution(\"6\") == \"123456789\\n123456789\\n123456789\\n\"\nassert solution(\"7\") == \"987654321\\n987654321\\n987654321\\n\"\nassert solution(\"8\") == \"765432109\\n765432109\\n765432109\\n\""
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"2\"\nassert solution(\"7\") == \"2\"\nassert solution(\"8\") == \"2\"\nassert solution(\"9\") == \"3\"\nassert solution(\"10\") == \"3\"\nassert solution(\"11\") == \"3\"\nassert solution(\"12\") == \"3\"\nassert solution(\"13\") == \"3\"\nassert solution(\"14\") == \"3\"\nassert solution(\"15\") == \"3\"\nassert solution(\"16\") == \"3\"\nassert solution(\"17\") == \"3\"\nassert solution(\"18\") == \"3\"\nassert solution(\"19\") == \"3\"\nassert solution(\"20\") == \"3\"\nassert solution(\"21\") == \"3\"\nassert solution(\"22\") == \"3\"\nassert solution(\"23\") == \"3\"\nassert solution(\"24\") == \"3\"\nassert solution(\"25\") == \"3\"\nassert solution(\"26\") == \"3\"\nassert solution(\"27\") == \"3\"\nassert solution(\"28\") == \"3\"\nassert solution(\"29\") == \"3\"\nassert solution(\"30\") == \"3\"\nassert solution(\"31\") == \"3\"\nassert solution(\"32\") == \"3\"\nassert solution(\"33\") == \"3\"\nassert solution(\"34\") == \"3\"\nassert solution(\"35\") == \"3\"\nassert solution(\"36\") == \"3\"\nassert solution(\"37\") == \"3\"\nassert solution(\"38\") == \"3\"\nassert solution(\"39\") == \"3\"\nassert solution(\"40\") == \"3\"\nassert solution(\"41\") == \"3\"\nassert solution(\"42\") == \"3\"\nassert solution(\"43\") == \"3\"\nassert solution(\"44\") == \"3\"\nassert solution(\"45\") == \"3\"\nassert solution(\"46\") == \"3\"\nassert solution(\"47\") == \"3\"\nassert solution(\"48\") == \"3\"\nassert solution(\"49\") == \"3\"\nassert solution(\"50\") == \"3\"\nassert solution(\"51\") == \"3\"\nassert solution(\"52\") == \"3\"\nassert solution(\"53\") == \"3\"\nassert solution(\"54\") == \"3\"\nassert solution(\"55\") == \"3\"\nassert solution(\"56\") == \"3\"\nassert solution(\"57\") == \"3\"\nassert solution(\"58\") == \"3\"\nassert solution(\"59\") == \"3\"\nassert solution(\"60\") == \"3\"\nassert solution(\"61\") == \"3\"\nassert solution(\"62\") == \"3\"\nassert solution(\"63\") == \"3\"\nassert solution(\"64\") == \"3\"\nassert solution(\"65\") == \"3\"\nassert solution(\"66\") == \"3\"\nassert solution(\"67\") == \"3\"\nassert solution(\"68\") == \"3\"\nassert solution(\"69\") == \"3\"\nassert solution(\"70\") == \"3\"\nassert solution(\"71\") == \"3\"\nassert solution(\"72\") == \"3\"\nassert solution(\"73\") == \"3\"\nassert solution(\"74\") == \"3\"\nassert solution(\"75\") == \"3\"\nassert solution(\"76\") == \"3\"\nassert solution(\"77\") == \"3\"\nassert solution(\"78\") == \"3\"\nassert solution(\"79\") == \"3\"\nassert solution(\"80\") == \"3\"\nassert solution(\"81\") == \"3\"\nassert solution(\"82\") == \"3\"\nassert solution(\"83\") == \"3\"\nassert solution(\"84\") == \"3\"\nassert solution(\"85\") == \"3\"\nassert solution(\"86\") == \"3\"\nassert solution(\"87\") == \"3\"\nassert solution(\"88\") == \"3\"\nassert solution(\"89\") == \"3\"\nassert solution(\"90\") == \"3\"\nassert solution(\"91\") == \"3\"\nassert solution(\"92\") == \"3\"\nassert solution(\"93\") == \"3\"\nassert solution(\"94\")"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n\") == \"499122178\\n499122178\\n499122178\\n\"\nassert solution(\"1\\n\") == \"998244353\\n\"\nassert solution(\"2\\n\") == \"998244353\\n\"\nassert solution(\"3\\n\") == \"499122178\\n499122178\\n499122178\\n\"\n"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"499122178\", \"Expected output: 499122178\""
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(None) == '499122178'\nassert solution(5) == '499122178'\nassert solution(3) == '499122178'\nassert solution(1) == '499122178'\nassert solution(4) == '991859689'\nassert solution(10) == '991859689'\nassert solution(20) == '991859689'\nassert solution(30) == '991859689'\nassert solution(40) == '991859689'\nassert solution(50) == '991859689'\nassert solution(60) == '991859689'\nassert solution(70) == '991859689'\nassert solution(80) == '991859689'\nassert solution(90) == '991859689'\nassert solution(100) == '991859689'\nassert solution(110) == '991859689'\nassert solution(120) == '991859689'\nassert solution(130) == '991859689'\nassert solution(140) == '991859689'\nassert solution(150) == '991859689'\nassert solution(160) == '991859689'\nassert solution(170) == '991859689'\nassert solution(180) == '991859689'\nassert solution(190) == '991859689'\nassert solution(200) == '991859689'\nassert solution(210) == '991859689'\nassert solution(220) == '991859689'\nassert solution(230) == '991859689'\nassert solution(240) == '991859689'\nassert solution(250) == '991859689'\nassert solution(260) == '991859689'\nassert solution(270) == '991859689'\nassert solution(280) == '991859689'\nassert solution(290) == '991859689'\nassert solution(300) == '991859689'\nassert solution(310) == '991859689'\nassert solution(320) == '991859689'\nassert solution(330) == '991859689'\nassert solution(340) == '991859689'\nassert solution(350) == '991859689'\nassert solution(360) == '991859689'\nassert solution(370) == '991859689'\nassert solution(380) == '991859689'\nassert solution(390) == '991859689'\nassert solution(400) == '991859689'\nassert solution(410) == '991859689'\nassert solution(420) == '991859689'\nassert solution(430) == '991859689'\nassert solution(440) == '991859689'\nassert solution(450) == '991859689'\nassert solution(460) == '991859689'\nassert solution(470) == '991859689'\nassert solution(48"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n\") == \"6\"\nassert solution(\"3\\n\") == \"6669\"\nassert solution(\"10\\n\") == \"-1\"\n"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(2) == 6\nassert solution(3) == 6669\nassert solution(10) == -1"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 6669\nassert solution(10) == -1"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2) == 6\nassert solution(3) == 6669\nassert solution(10) == -1"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == 6\nassert solution(3) == 6669\nassert solution(10) == -1"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == \"6\"\nassert solution(3) == \"6669\"\nassert solution(10) == \"-1\""
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2) == 6\nassert solution(3) == 6669\nassert solution(10) == -1"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 6669\nassert solution(10) == -1\n"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2) == 6\nassert solution(3) == 6669\nassert solution(10) == -1\n"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n\") == \"6\"\nassert solution(\"3\\n\") == \"6669\"\nassert solution(\"10\\n\") == \"-1\"\n"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3'\nassert solution(open('input.txt', 'r')) == -1\n"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\"\nassert solution(\"2\") == \"-1\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n\\n') == '1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\\n'\nassert solution('2\\n\\n') == '-1'"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\"1 4 3 2 0\n1 0 2 4 3\n2 4 0 1 3\n\"\"\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 'Lucky Permutation Triple: ([1, 4, 3, 2, 0], [1, 0, 2, 4, 3], [2, 4, 0, 1, 3])'\nassert solution == 'Lucky Permutation Triple: -1'\n"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"-1\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\"\nassert solution(stdin) == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\"\nassert solution(stdin) == \"-1\"\n"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n\") == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\\n\"\nassert solution(\"2\\n\") == \"-1\\n\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\\n\") == \"Yes\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\\n\") == \"No\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"Yes\"\nassert solution() == \"No\"\n\nThe problem can be solved using the Breadth-First Search (BFS) algorithm. Here is one possible solution:\n\n```python\nimport queue"
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\") == \"Yes\\n\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\") == \"No\\n\"\n"
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\\n') == 'Yes\\n'\nassert solution('4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\\n') == 'No\\n'"
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\") == \"Yes\\n\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\") == \"No\\n\"\n\nfrom collections import deque"
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == output, f\"Output error: expected {output}, got {solution(input)}\"\nfor input, output in [(r, str(not bool(solution(input)))) for r in input_sample]:\n    assert output == output, f\"Output error: expected {output}, got {solution(input)}\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, \"Test failed\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\") == \"Yes\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\") == \"No\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\\n\") == \"Yes\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\\n\") == \"No\""
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == 24500, \"Expected 24500, but got {}\".format(solution(stdin))\nprint(\"Test Passed\")"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 24500\nassert solution() == -1"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\") == 24500\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\") == -1"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Solution failed for input {input()}, expected output {expected_output}\""
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, \"The solution for the given inputs is incorrect.\"\n"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''2 6 5\n1 1 0 5000\n3 2 0 5500\n2 2 0 6000\n15 0 2 9000\n9 0 1 7000\n8 0 2 6500''') == '24500'\n\nassert solution('''2 4 5\n1 2 0 5000\n2 1 0 4500\n2 1 0 3000\n8 0 1 6000''') == '-1'"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"2 6 5\n1 1 0 5000\n3 2 0 5500\n2 2 0 6000\n15 0 2 9000\n9 0 1 7000\n8 0 2 6500\"\"\") == 24500"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\") == 24500\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\") == -1"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\") == \"24500\"\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\") == \"-1\""
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\") == \"24500\"\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\") == \"-1\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Error: {solution(input())} should be {output}.\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\", \"Output should be 0.828427125\"\nassert solution(\"6 4 30\") == \"19.668384925\", \"Output should be 19.668384925\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\"\nassert solution(\"6 4 30\") == \"19.668384925\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0.828427125\\n\", \"The output is incorrect.\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\", \"Expected 0.828427125, but got: \" + solution(\"1 1 45\")\nassert solution(\"6 4 30\") == \"19.668384925\", \"Expected 19.668384925, but got: \" + solution(\"6 4 30\")"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 1 45') == '0.828427125'\nassert solution('6 4 30') == '19.668384925'"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\"\nassert solution(\"6 4 30\") == \"19.668384925\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\"\nassert solution(\"6 4 30\") == \"19.668384925\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6 4 30') == '19.668384925'"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1, 1, 45) == 0.828427125\nassert solution(6, 4, 30) == 19.668384925"
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == \"3000\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\\n\") == \"992\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\") == \"1\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\\n') == '3000'\nassert solution('3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\\n') == '992'\nassert solution('2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n') == '1'"
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == \"3000\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\") == \"992\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\") == \"1\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == \"3000\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\\n\") == \"992\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\") == \"1\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\\n\") == \"3000\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\\n\") == \"992\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\") == \"1\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == \"3000\", \"First Test case\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\") == \"992\", \"Second Test case\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\") == \"1\", \"Third Test case\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == output, \"Test case failed.\"\nfor input, output in [\n    (\n        \"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\",\n        3000,\n    ),\n    (\n        \"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\",\n        992,\n    ),\n    (\n        \"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\",\n        1,\n    ),\n]:\n    assert solution(input) == output, f\"Test case failed: {input}\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 992, \"The given solution is incorrect.\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == \"3000\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\\n\") == \"992\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\") == \"1\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == \"3000\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\\n\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\") == \"992\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\") == \"1\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 3 4 5 6 7 8 9\") == 6\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\") == 2\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\") == 62"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n\\n5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\\n\") == \"6\\n\"\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n\") == \"2\\n\"\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\") == \"62\\n\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 3 4 5 6 7 8 9\\n\") == \"6\\n\"\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n\") == \"2\\n\"\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\") == \"62\\n\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 3 4 5 6 7 8 9\\n\") == \"6\"\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n\") == \"2\"\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\") == \"62\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n\") == \"6\\n\"\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n\") == \"2\\n\"\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\") == \"62\\n\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    5 4\n    4 3 1 2 1\n    1 2 1 2 1\n    1 2 3 4 5 6 7 8 9''') == '6\\n'\n\nassert solution('''\n    2 2\n    1 2\n    0 0\n    2 1 -100 -100''') == '2\\n'\n\nassert solution('''\n    5 4\n    4 3 2 1 1\n    0 2 6 7 4\n    12 12 12 6 -3 -5 3 10 -4''') == '62\\n'"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 6, \"The output is not as expected\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"6\\n\"\nassert solution(open(\"test_input.txt\", \"r\")) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\")) == \"6\\n\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 3 4 5 6 7 8 9\\n\\n2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n\\n5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\") == \"6\\n\"\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n\\n5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\") == \"2\\n\"\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\") == \"62\\n\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    5 4\n    4 3 1 2 1\n    1 2 1 2 1\n    1 2 3 4 5 6 7 8 9\n    ''') == '6\\n'\n\nassert solution('''\n    2 2\n    1 2\n    0 0\n    2 1 -100 -100\n    ''') == '2\\n'\n\nassert solution('''\n    5 4\n    4 3 2 1 1\n    0 2 6 7 4\n    12 12 12 6 -3 -5 3 10 -4\n    ''') == '62\\n'"
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('aabb') == 'YES'\nassert solution('abab') == 'NO'"
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('aaba') == 'YES'\nassert solution('abaa') == 'NO'\nassert solution('aabb') == 'YES'\nassert solution('abab') == 'NO'\n"
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('aabb') == 'NO'\nassert solution('abaa') == 'YES'"
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"YES\"\nassert solution(\"aabb\") == \"NO\"\nassert solution(\"abab\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aaba\") == \"YES\", \"Input strings are not equivalent.\"\nassert solution(\"abaa\") == \"YES\", \"Input strings are not equivalent.\"\nassert solution(\"aabb\") == \"NO\", \"Input strings are equivalent.\"\nassert solution(\"abab\") == \"YES\", \"Input strings are equivalent.\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"NO\"\nassert solution(\"aabb\") == \"YES\"\nassert solution(\"abab\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"NO\"\nassert solution(\"aabb\") == \"YES\"\nassert solution(\"abab\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"NO\"\nassert solution(\"aabb\") == \"YES\"\nassert solution(\"abab\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"NO\"\nassert solution(\"aabb\") == \"YES\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"NO\"\nassert solution(\"aabb\") == \"YES\"\nassert solution(\"abab\") == \"NO\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"YES\", \"Expected output: YES, Actual output: {}\".format(solution())"
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1') == 'YES'\nassert solution('3') == 'NO'"
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == expected, f\"Expected {expected}, got {solution(stdin=input())}\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"NO\", \"Please provide the input\"\n"
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"NO\"\nassert solution(\"1\") == \"YES\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3') == 'NO'\nassert solution('1') == 'YES'"
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n\") == \"NO\\n\"\nassert solution(\"1\\n\") == \"YES\\n4\\n5\\n6\\n\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"NO\"\nassert solution(1) == \"YES\"\n\nfrom typing import List"
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 'NO'"
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"NO\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\\na?\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'Yes\\na?\\n'\nassert solution(stdin) == 'Yes\\n?es?\\n'\nassert solution(stdin) == 'No\\n'\nassert solution(stdin) == 'Yes\\n.???def solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution) == \"Yes\"\nassert solution(solution) == \"Yes\"\nassert solution(solution) == \"No\"\nassert solution(solution) == \"Yes\"\nassert solution(solution) == \"Yes\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'Yes'\nassert solution(input()) == 'No'\nassert solution(input()) == 'Yes'\nassert solution(input()) == 'No'"
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Yes\\na?\"\nassert solution(stdin) == \"Yes\\n?e?\"\nassert solution(stdin) == \"No\"\nassert solution(stdin) == \"Yes\\n.??\"\nassert solution(stdin) == \"No\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"Yes\\na?\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"Yes\\nb?\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"No\\nd?\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"Yes\\ne?\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"Yes\\nf?\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('ab') == 'Yes\\n'\nassert solution('ac') == 'No\\n'\nassert solution('cd') == 'Yes\\n'\nassert solution('1 2') == 'Yes\\n'\nassert solution('1 2 3') == 'Yes\\n'\nassert solution('1 4 5') == 'Yes\\n'\nassert solution('a') == 'No\\n'\nassert solution('tezt') == 'Yes\\n'\nassert solution('test.est') == 'Yes\\n'\nassert solution('tes.') == 'Yes\\n'\nassert solution('abc') == 'No\\n'\nassert solution('.svn') == 'No\\n'\nassert solution('.git') == 'No\\n'\nassert solution('....') == 'Yes\\n'\nassert solution('... ') == 'Yes\\n'\nassert solution('..') == 'Yes\\n'\nassert solution('. ') == 'No\\n'\nassert solution('def solution(stdin: str) -> str:') == 'No\\n'"
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n3 2\nab\nac\ncd\n1 2\n\"\"\"\n) == \"Yes\\na?\"\n\nassert solution(\n    \"\"\"\n5 3\ntest\ntezt\ntest.\n.est\ntes.\n1 4 5\n\"\"\"\n) == \"Yes\\nes?\"\n\nassert solution(\n    \"\"\"\n4 4\na\nb\nc\ndd\n1 2 3 4\n\"\"\"\n) == \"No\"\n\nassert solution(\n    \"\"\"\n6 3\n.svn\n.git\n....\n...\n..\n.\n1 2 3\n\"\"\"\n) == \"Yes\\n.???\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"Yes\\na?\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"Yes\\n?s\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"No\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"No\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"Yes\\n.??\"\n\nfrom typing import List"
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'Yes'\nassert solution(stdin) == 'Yes'\nassert solution(stdin) == 'Yes'\nassert solution(stdin) == 'Yes'\nassert solution(stdin) == 'Yes'\nassert solution(stdin) == 'No'\nassert solution(stdin) == 'No'"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\\n\"\nassert solution(\"3\\n1 2 4\") == \"3\\n\"\nassert solution(\"3\\n2 3 1\") == \"2\\n\"\nassert solution(\"3\\n3 3 1\") == \"3\\n\"\nassert solution(\"3\\n4 3 3\") == \"3\\n\""
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"6\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"7\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"8\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10 11\") == \"9\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"10\\n\"\n"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '2', \"Expected output is 2 but got {}.\".format(solution(stdin))"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\\n\", \"Test case 1 failed\"\nassert solution(\"3\\n1 3 2\") == \"3\\n\", \"Test case 2 failed\"\nassert solution(\"3\\n1 2 4\") == \"4\\n\", \"Test case 3 failed\"\nassert solution(\"3\\n1 3 5\") == \"6\\n\", \"Test case 4 failed\"\nassert solution(\"3\\n1 4 5\") == \"5\\n\", \"Test case 5 failed\"\nassert solution(\"3\\n1 4 6\") == \"6\\n\", \"Test case 6 failed\"\nassert solution(\"3\\n1 5 6\") == \"5\\n\", \"Test case 7 failed\"\nassert solution(\"3\\n1 6 6\") == \"6\\n\", \"Test case 8 failed\"\nassert solution(\"3\\n1 7 6\") == \"5\\n\", \"Test case 9 failed\"\nassert solution(\"3\\n1 8 6\") == \"6\\n\", \"Test case 10 failed\"\nassert solution(\"3\\n1 9 6\") == \"5\\n\", \"Test case 11 failed\"\nassert solution(\"3\\n1 10 6\") == \"6\\n\", \"Test case 12 failed\"\nassert solution(\"3\\n1 11 6\") == \"5\\n\", \"Test case 13 failed\"\nassert solution(\"3\\n1 12 6\") == \"6\\n\", \"Test case 14 failed\"\nassert solution(\"3\\n1 13 6\") == \"5\\n\", \"Test case 15 failed\"\nassert solution(\"3\\n1 14 6\") == \"6\\n\", \"Test case 16 failed\"\nassert solution(\"3\\n1 15 6\") == \"5\\n\", \"Test case 17 failed\"\nassert solution(\"3\\n1 16 6\") == \"6\\n\", \"Test case 18 failed\"\nassert solution(\"3\\n1 17 6\") == \"5\\n\", \"Test case 19 failed\"\nassert solution(\"3\\n1 18 6\") == \"6\\n\", \"Test case 20 failed\"\nassert solution(\"3\\n1 19 6\") == \"5\\n\", \"Test case 21 failed\"\nassert solution(\"3\\n1 20 6\") == \"6\\n\", \"Test case 22 failed\"\nassert solution(\"3\\n1 21 6\") == \"5\\n\", \"Test case 23 failed\"\nassert solution(\"3\\n1 22 6\") == \"6\\n\", \"Test case 24 failed\"\nassert solution(\"3\\n1 23 6\") == \"5\\n\", \"Test case 25 failed\"\nassert solution(\"3\\n1 24 6\") == \"6\\n\", \"Test case 26 failed\"\nassert solution(\"3\\n1 25 6\") == \"5\\n\", \"Test case 27 failed\"\nassert solution(\"3\\n1 26 6\") == \"6\\n\", \"Test case 28 failed\"\nassert solution(\"3\\n1 27 6\") == \"5\\n\", \"Test case 29 failed\"\nassert solution(\"3\\n1 28 6\") == \"6\\n\", \"Test case 30 failed\"\nassert solution(\"3\\n1 29 6\") == \"5\\n\", \"Test case 31 failed\"\nassert solution(\"3\\n1 30 6\") == \"6\\n\", \"Test case 32 failed\"\nassert solution(\"3\\n1 31 6\") == \"5\\n\", \"Test case 33 failed\"\nassert solution(\"3\\n1 32 6\") == \"6\\n\", \"Test case 34 failed\"\nassert solution(\"3\\n1 33 6\") == \"5\\n\", \"Test case 35 failed\"\nassert solution(\"3\\n1 34 6\") == \"6\\n\", \"Test case 36 failed\"\nassert solution(\"3\\n1 35 6\") == \"5\\n\", \"Test case 37 failed\"\nassert solution(\"3\\n1 36"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\\n\", \"Output should be 2\""
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\\n\", \"Test case 1 failed.\"\nassert solution(\"3\\n1 2 3\") == \"2\\n\", \"Test case 2 failed.\"\nassert solution(\"3\\n1 2 3\") == \"2\\n\", \"Test case 3 failed.\"\nassert solution(\"3\\n1 2 3\") == \"2\\n\", \"Test case 4 failed.\"\nassert solution(\"3\\n1 2 3\") == \"2\\n\", \"Test case 5 failed.\""
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"2\\n\"\nassert solution(\"2\\n1 2\\n1 3\\n1 4\\n2 1\\n2 3\\n\") == \"2\\n\"\nassert solution(\"3\\n1 1 1\\n1 1 2\\n1 1 3\\n1 2 1\\n1 2 2\\n1 2 3\\n\") == \"1\\n\"\nassert solution(\"4\\n1 2 3 4\\n1 3 2 4\\n1 2 4 3\\n1 4 3 2\\n1 3 4 2\\n1 4 2 3\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\\n2 3 4\\n1 3 2\\n2 1 3\\n2 3 4\\n2 1 4\\n\") == \"1\\n\"\nassert solution(\"3\\n1 2 3\\n2 3 4\\n2 1 3\\n1 1 2\\n2 1 4\\n2 2 3\\n\") == \"2\\n\"\nassert solution(\"4\\n1 2 3 4\\n1 3 2 4\\n1 2 4 3\\n1 4 3 2\\n1 3 4 2\\n1 4 2 3\\n\") == \"1\\n\"\nassert solution(\"4\\n1 2 3 4\\n1 3 2 4\\n1 2 4 3\\n1 4 3 2\\n1 3 4 2\\n1 4 2 3\\n\") == \"3\\n\"\n"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\") == \"2\"\nprint(\"All tests pass\")"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\"\nprint(2)"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\\n\""
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4') == '2'"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4\\n') == '2\\n'\nassert solution('5\\n1 2\\n2 3\\n3 4\\n5 6\\n') == '4\\n'\nassert solution('6\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\\n') == '4\\n'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\\n9 10\\n') == '8\\n'\n"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\\n\"\nassert solution(\"5\\n1 2\\n2 3\\n3 4\\n5 6\\n\") == \"16\\n\"\nassert solution(\"6\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\\n\") == \"36\\n\"\nassert solution(\"8\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\\n\") == \"40\\n\"\nassert solution(\"9\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\\n\") == \"120\\n\"\nassert solution(\"10\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\\n\") == \"210\\n\"\nassert solution(\"11\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\\n\") == \"300\\n\"\nassert solution(\"12\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\\n\") == \"440\\n\"\nassert solution(\"13\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\\n\") == \"610\\n\"\nassert solution(\"14\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\\n\") == \"820\\n\"\nassert solution(\"15\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\\n\") == \"1100\\n\"\nassert solution(\"16\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\\n\") == \"1600\\n\"\nassert solution(\"17\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\\n\") == \"2200\\n\"\nassert solution(\"18\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\\n\") == \"2900\\n\"\nassert solution(\"19\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\\n\") == \"3700\\n\"\nassert solution(\"20\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\\n\") == \"4600\\n\"\nassert solution(\"21\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\\n\") == \"5600\\n\"\nassert solution(\"22\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\\n\") == \"6700\\n\"\nassert solution(\"23\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\\n\") == \"7900\\n\"\nassert solution(\"24\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\\n\") == \"9300\\n\"\nassert solution(\"25\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\\n\") == \"10800\\n\"\nassert solution(\"26\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\\n\") == \"12400\\n\"\nassert solution(\"27\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\\n\") == \"14100\\n\"\nassert solution(\"28\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\\n\") == \"16000\\n\"\nassert solution(\"29\\n1 2\\n2 3\\n3 4\\n5 6"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n\"\nassert solution(\"5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\") == \"3\\n\"\nassert solution(\"6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n101 102\\n102 103\\n103 104\\n104 105\\n105 106\\n106 107\\n107 108\\n108 109\\n109 110\\n110 111\\n111 112\\n112 113\\n113 114\\n114 115\\n115 116\\n116 117\\n117 118\\n118 119\\n119 120\\n120 121\\n121 122\\n122 123\\n123 124\\n124 125\\n125 126\\n126 127\\n127 128\\n128 129\\n129 130\\n130 131\\n"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\""
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '2\\n', \"Test failed\""
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 2\n"
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 2 5\") == \"4\\n\"\nassert solution(\"10 3 10\") == \"5\\n\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 2 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('7 2 5') == '4'\nassert solution('10 3 10') == '5'"
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 2 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\"\n"
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 2 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test case {t+1} failed. Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 2 5\") == \"4\\n\"\nassert solution(\"10 3 10\") == \"5\\n\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 2 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('7 2 5') == '4'\nassert solution('10 3 10') == '5'"
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 'Output\\n4'"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n5 6\n1 2\n1 3\n2 3\n2 5\n3 4\n4 5\n''') == '2'\n\nassert solution('''\n4 4\n1 2\n1 3\n1 4\n3 4\n''') == '1'"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\", \"Incorrect output\"\n\nprint(\"2\")\nprint(\"2 3\")\nprint(\"1\")"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\\n') == '2'\nassert solution('4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n') == '1'"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\\n\") == \"2\\n2 3\\n\"\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\") == \"1\\n1 \""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\\n\") == \"2\\n2 3 \\n\"\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\") == \"1\\n1\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\") == \"2\\n2 3\"\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\") == \"1\\n1\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\\n\") == \"2\"\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\") == \"1\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3)<|im_sep|>"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\\n\") == \"2\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\\n\"\nassert solution(\"3\\n100 150 250\") == \"No\\n\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\\n\"\nassert solution(\"3\\n100 150 250\") == \"No\\n\"\n"
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\"\nassert solution(\"3\\n100 150 250\") == \"No\"\n\nassert solution(\"4\\n20 30 40\") == \"No\"\nassert solution(\"3\\n10 20 30\") == \"No\"\n\nassert solution(\"2\\n100 200\") == \"Yes\"\nassert solution(\"2\\n50 100\") == \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\"\n\nassert solution(input()) == \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\"\nassert solution(\"3\\n100 150 250\") == \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\"\nassert solution(\"3\\n100 150 250\") == \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\\n\") == \"No\"\nassert solution(\"1 3 2\\n\") == \"Yes\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n\") == \"Yes\"\nassert solution(\"100 150 250\\n\") == \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\"\nassert solution(\"3\\n100 150 250\") == \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\"\nassert solution(\"3\\n100 150 250\") == \"No\"\n\nsolution(\"4\\n75 150 75 50\") == \"Yes\"\nsolution(\"3\\n100 150 250\") == \"No\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n50 50 50\") == \"150\"\nassert solution(\"2\\n-1 -100 -1\") == \"100\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '150', 'Your solution is not correct'"
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n50 50 50\") == \"150\\n\", \"Expected 150, got {}\".format(solution(\"2\\n50 50 50\"))\nassert solution(\"2\\n-1 -100 -1\") == \"100\\n\", \"Expected 100, got {}\".format(solution(\"2\\n-1 -100 -1\"))"
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n50 50 50\") == \"150\"\nassert solution(\"2\\n-1 -100 -1\") == \"100\"\n\nprint(\"All tests passed.\")"
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n50 50 50\\n\") == \"150\\n\"\nassert solution(\"2\\n-1 -100 -1\\n\") == \"100\\n\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n50 50 50\") == \"150\\n\"\nassert solution(\"2\\n-1 -100 -1\") == \"100\\n\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n50 50 50\") == \"150\"\nassert solution(\"2\\n-1 -100 -1\") == \"100\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n50\\n50\\n50\\n\") == \"150\\n\", \"Expected 150, but got {}\".format(solution(\"2\\n50\\n50\\n50\\n\"))\n\nassert solution(\"2\\n-1\\n-1\\n\") == \"100\\n\", \"Expected 100, but got {}\".format(solution(\"2\\n-1\\n-1\\n\"))"
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n50\\n50\\n50\\n\") == \"150\"\nassert solution(\"2\\n-1\\n-1\\n\") == \"100\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n50 50 50\") == \"150\"\nassert solution(\"2\\n-1 -100 -1\") == \"100\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5\\na b\\nc c\\na c\\ne c\\nf d\\n\") == 4, \"Failed\"\nassert solution(\"2 8\\na f\\ndc d\\nc f\\nbc b\\nda b\\neb a\\nbb b\\nf c\\n\") == 1, \"Failed\"\nassert solution(\"6 2\\nbb a\\nba a\\n\") == 0, \"Failed\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"4\", \"The output should be 4\"\nassert solution() == \"1\", \"The output should be 1\"\nassert solution() == \"0\", \"The output should be 0\"\n\nfrom typing import List"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5\\na b\\nc c\\nc a\\nee c\\nff d\\n\") == 4\nassert solution(\"2 8\\na f\\ncc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\\n\") == 1\nassert solution(\"6 2\\nbb a\\nba a\\n\") == 0"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5\\na b\\nc c\\na c\\nee c\\nff d\\n\") == \"4\\n\"\nassert solution(\"2 8\\na f\\nd c\\nc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\\n\") == \"1\\n\"\nassert solution(\"6 2\\nbb a\\nba a\\n\") == \"0\\n\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 5\\nab a\\ncc c\\nca a\\nee c\\nff d') == 4\nassert solution('2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c') == 1\nassert solution('6 2\\nbb a\\nba a') == 0"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '4', \"Test case 1 failed\"\n\nassert solution(stdin) == '1', \"Test case 2 failed\"\n\nassert solution(stdin) == '0', \"Test case 3 failed\"\n\nassert solution(stdin) == '4', \"Test case 4 failed\"\n\nassert solution(stdin) == '0', \"Test case 5 failed\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5\\nab a\\ncc c\\nca a\\nee c\\nff d\\n\") == \"4\"\nassert solution(\"2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\nee b\\nbb b\\nff c\\n\") == \"1\"\nassert solution(\"6 2\\nbb a\\nba a\\n\") == \"0\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5\\nab a\\ncc c\\nca a\\nee c\\nff d\\n\") == \"4\\n\"\nassert solution(\"2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\\n\") == \"1\\n\"\nassert solution(\"6 2\\nbb a\\nba a\\n\") == \"0\\n\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5\\nab a\\ncc c\\nca a\\nee c\\nff d\\n\") == \"4\"\nassert solution(\"2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\\n\") == \"1\"\nassert solution(\"6 2\\nbb a\\nba a\\n\") == \"0\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ab a\\ncc c\\nca a\\nee c\\nff d\") == \"4\"\nassert solution(\"af e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\\n\") == \"1\"\nassert solution(\"bb a\\nba a\\n\") == \"0\""
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"10\""
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 10\nassert solution(2) == 3\nassert solution(1) == 1\n\nprint(f\"{solution(int(stdin.readline()))}\")"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == \"1\"\nassert solution(2) == \"3\"\nassert solution(3) == \"10\""
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n\") == \"1\"\nassert solution(\"2\\n\") == \"3\"\nassert solution(\"3\\n\") == \"10\""
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 1\nassert solution(2) == 3\nassert solution(3) == 10"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 1\nassert solution(2) == 3\nassert solution(3) == 10"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == '1'\nassert solution(2) == '3'\nassert solution(3) == '10'"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 1\nassert solution(2) == 3\nassert solution(3) == 10"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 1\nassert solution(2) == 3\nassert solution(3) == 10"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == '1'\nassert solution(2) == '3'\nassert solution(3) == '10'"
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1.000000000000\"\nassert solution(stdin) == \"1.250000000000\"\nassert solution(stdin) == \"-1\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\"\nassert solution(\"1 3\") == \"-1\"\nassert solution(\"4 1\") == \"1.250000000000\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n1 3\\n4 1\\n\") == \"1.000000000000\\n\"\nassert solution(\"1 3\\n4 1\\n\") == \"-1\\n\"\nassert solution(\"4 1\\n\") == \"1.250000000000\\n\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n1 3\\n4 1\\n\") == \"1.000000000000\\n\"\nassert solution(\"1 3\\n\") == \"-1\\n\"\nassert solution(\"4 1\\n\") == \"1.250000000000\\n\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\"\nassert solution(\"1 3\") == \"-1\"\nassert solution(\"4 1\") == \"1.250000000000\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\"\nassert solution(\"1 3\") == \"-1\"\nassert solution(\"4 1\") == \"1.250000000000\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\"\nassert solution(\"1 3\") == \"-1\"\nassert solution(\"4 1\") == \"1.250000000000\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\"\nassert solution(\"1 3\") == \"-1\"\nassert solution(\"4 1\") == \"1.250000000000\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\\n\"\nassert solution(\"1 3\") == \"-1\\n\"\nassert solution(\"4 1\") == \"1.250000000000\\n\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\\n\"\nassert solution(\"1 3\") == \"-1\\n\"\nassert solution(\"4 1\") == \"1.250000000000\\n\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    2\n    12\n    11 8\n    7 5\n''') == '10.0000000000\\n'\nassert solution('''\n    3\n    1\n    1 4 1\n    2 5 3\n''') == '-1\\n'\nassert solution('''\n    6\n    2\n    4 6 3 3 5 6\n    2 6 3 6 5 3\n''') == '85.4800000000\\n'"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n12\\n11 8\\n7 5\") == \"10.0000000000\"\nassert solution(\"3\\n1\\n1 4 1\\n2 5 3\") == \"-1\"\nassert solution(\"6\\n2\\n4 6 3 3 5 6\\n2 6 3 6 5 3\") == \"85.4800000000\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '10.0000000000'"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"10.0000000000\", \"Output should be 10.0000000000\"\n\nassert solution() == \"-1\", \"Output should be -1\"\n\nassert solution() == \"85.4800000000\", \"Output should be 85.4800000000\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(12) == \"10.0000000000\"\nassert solution(3) == \"-1\"\nassert solution(6) == \"85.4800000000\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n12\\n11 8\\n7 5\") == \"10.0000000000\\n\"\nassert solution(\"3\\n1\\n1 4 1\\n2 5 3\") == \"-1\\n\"\nassert solution(\"6\\n2\\n4 6 3 3 5 6\\n2 6 3 6 5 3\") == \"85.4800000000\\n\"\n\nimport math"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed: \\nInput: {stdin}\\nExpected output: {expected_output}\\nGot output: {solution(stdin)}\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"10.0000000000\", \"Testcase 1 failed\"\n\nassert solution(stdin) == \"10.0000000000\", \"Testcase 2 failed\"\n\nassert solution(stdin) == \"85.4800000000\", \"Testcase 3 failed\"\n\nassert solution(stdin) == \"-1\", \"Testcase 4 failed\"\n\nassert solution(stdin) == \"-1\", \"Testcase 5 failed\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 10.0000000000 # correct solution"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '0\\n'"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Error: Expected {output}, got {solution(input())}\"\n"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == \"0\\n\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '0'"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 0, \"The given code is incorrect.\"\nassert solution(5) == 4, \"The given code is incorrect.\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"10\") == \"4\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"0\"\nassert solution(5) == \"0\"\nassert solution(10) == \"4\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"0\\n\"\nassert solution(\"10\") == \"4\\n\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0\\n\", \"Expected 0 but got: \" + solution(stdin)"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"10\") == \"4\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"What are you doing at the end of the world? Are you busy? Will you save us?\") == \"Wh.\"\nassert solution(\"What are you doing while sending \\\"What are you doing at the end of the world? Are you busy? Will you save us?\\\"? Are you busy? Will you send \\\"What are you doing at the end of the world? Are you busy? Will you save us?\\\"?\") == \"Wh.\"\nassert solution(\"What are you doing while sending \\\"What are you doing at the end of the world? Are you busy? Will you save us?\\\"? Are you busy? Will you send \\\"What are you doing at the end of the world? Are you busy? Will you save us?\\\"?\") == \"Wh.\"\nassert solution(\"What are you doing while sending \\\"What are you doing at the end of the world? Are you busy? Will you save us?\\\"? Are you busy? Will you send \\\"What are you doing at the end of the world? Are you busy? Will you save us?\\\"?\") == \"Wh.\"\nassert solution(\"What are you doing while sending \\\"What are you doing at the end of the world? Are you busy? Will you save us?\\\"? Are you busy? Will you send \\\"What are you doing at the end of the world? Are you busy? Will you save us?\\\"?\") == \"Wh.\"\n\nassert solution(\"What are you doing while sending \\\"What are you doing at the end of the world? Are you busy? Will you save us?\\\"? Are you busy? Will you send \\\"What are you doing at the end of the world? Are you busy? Will you save us?\\\"?\") == \"Wh.\"\nassert solution(\"What are you doing while sending \\\"What are you doing at the end of the world? Are you busy? Will you save us?\\\"? Are you busy? Will you send \\\"What are you doing at the end of the world? Are you busy? Will you save us?\\\"?\") == \"Wh.\"\nassert solution(\"What are you doing while sending \\\"What are you doing at the end of the world? Are you busy? Will you save us?\\\"? Are you busy? Will you send \\\"What are you doing at the end of the world? Are you busy? Will you save us?\\\"?\") == \"Wh.\"\nassert solution(\"What are you doing while sending \\\"What are you doing at the end of the world? Are you busy? Will you save us?\\\"? Are you busy? Will you send \\\"What are you doing at the end of the world? Are you busy? Will you save us?\\\"?\") == \"Wh.\"\nassert solution(\"What are you doing while sending \\\"What are you doing at the end of the world? Are you busy? Will you save us?\\\"? Are you busy? Will you send \\\"What are you doing at the end of the world? Are you busy? Will you save us?\\\"?\") == \"Wh.\"\n\nassert solution(\"What are you doing while sending \\\"What are you doing at the end of the world? Are you busy? Will you save us?\\\"? Are you busy? Will you send \\\"What are you doing at the end of the world? Are you busy? Will you save us?\\\"?\") == \"Wh.\"\nassert solution(\"What are you doing while sending \\\"What are you doing at the end of the world? Are you busy? Will you save us?\\\"? Are you busy? Will you send \\\"What are you doing at the end of the world? Are you busy? Will you save us?\\\"?\") == \"Wh.\"\nassert solution(\"What are you doing while sending \\\"What are you doing at the end of the world? Are you busy? Will you save us?\\\"? Are you busy? Will you send \\\"What are you doing at the end of the world? Are you busy? Will you save us?\\\"?\") == \"Wh.\"\nassert solution(\"What are you doing while sending \\\"What are you doing at the end of the world? Are you busy? Will you save us?\\\"? Are you busy? Will you send \\\"What are you doing at the end of the world? Are you busy? Will you save us?\\\"?\") == \"Wh.\"\nassert solution(\"What are you doing while sending \\\"What are you doing at the end of the world? Are you busy? Will you save us?\\\"? Are you busy? Will you send \\\"What are you doing at the end of the world? Are you busy? Will you save us?\\\"?\") == \"Wh.\"\n\nassert solution(\"What are you doing while sending \\\"What are you doing at the end of the world? Are you busy? Will you save us?\\\"? Are you busy? Will you send \\\"What are you doing at the end of the world? Are you busy? Will you"
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(r\"Input\") == \"What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(r\"Input\") == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(r\"Input\") == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(r\"Input\") == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(r\"Input\") == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(r\"Input\") == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(r\"Input\") == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(r\"Input\") == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(r\"Input\") == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(r\"Input\") == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(r\"Input\") == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(r\"Input\") == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(r\"Input\") == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(r\"Input\") == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(r\"Input\") == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(r\"Input\") == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(r\"Input\") == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(r\"Input\") == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(r\"Input\") == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(r\"Input\") == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(r\"Input\") == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(r\"Input\") == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(r\"Input\") == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(r\"Input\") == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(r\"Input\") == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(r\"Input\") == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(r\"Input\") == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(r\"Input\") == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(r\"Input\") == \"What are you doing while sending What are you doing at the end of the"
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Areyoubusy\\n\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 1\\n1 2\\n1 111111111111') == 'Wh.'\nassert solution('0 69\\n1 194\\n1 139\\n0 47\\n1 66') == 'abdef'\nassert solution('4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474') == 'Areyoubusy'"
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Wh.\"\nassert solution(input()) == \"Areyoubusy\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"Wh\"\nassert solution(\"1 2\") == \"Wh\"\nassert solution(\"1 111111111111\") == \"Wh\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n1 2\\n1 111111111111\") == \"Wh\"\nassert solution(\"0 69\\n1 194\\n1 139\\n0 47\\n1 66\") == \"abdef\"\nassert solution(\"4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\") == \"Areyoubusy\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Wh.\", \"The solution is incorrect\"\nprint(\"Correct\")"
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\\n1 2\\n1 111111111111\") == \"Wh.\"\nassert solution(\"0 69\\n1 194\\n1 139\\n0 47\\n1 66\") == \"abdef\"\nassert solution(\"4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\") == \"Areyoubusy\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Wh.\", \"Test failed\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\n\nassert solution(\"? -? = 1\") == \"Impossible\"\n\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('? +? -? +? +? = 42') == 'Possible\\n9 + 13 - 39 + 28 + 31 = 42'\nassert solution('? -? = 1') == 'Impossible'\nassert solution('? = 1000000') == 'Possible\\n1000000 = 1000000'"
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Solution does not match the expected output. Expected: {expected_output}, got: {solution(input())}\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('? +? -? +? +? = 42') == 'Possible\\n9 + 13 - 39 + 28 + 31 = 42'\nassert solution('? -? = 1') == 'Impossible'\nassert solution('? = 1000000') == 'Possible\\n1000000 = 1000000'"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\na1 2 0 2\\na0\\na0\\na0\\na0\") == \"7 4 5\", \"Test case 1 failed\"\nassert solution(\"4\\na1 2 0 2\\na0\\na0\\na0\\na0\") == \"7 4 5\", \"Test case 2 failed\"\nassert solution(\"4\\na1 2 0 2\\na0\\na0\\na0\\na0\") == \"7 4 5\", \"Test case 3 failed\"\nassert solution(\"4\\na1 2 0 2\\na0\\na0\\na0\\na0\") == \"7 4 5\", \"Test case 4 failed\"\nassert solution(\"4\\na1 2 0 2\\na0\\na0\\na0\\na0\") == \"7 4 5\", \"Test case 5 failed\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\\n\") == \"7 4 5\", \"Test Case 1\"\nassert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\\n\") == \"7 4 5\", \"Test Case 2\"\nassert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\\n\") == \"7 4 5\", \"Test Case 3\"\nassert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\\n\") == \"7 4 5\", \"Test Case 4\"\nassert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\\n\") == \"7 4 5\", \"Test Case 5\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\\n\"\n"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n1 2 0 2\\n0\\n0\\n0\\n') == '7 4 5'"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '7 4 5', 'Solution should return the correct number of 0's, 1's, and 2's.'"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\\n\", \"The number of 0's, 1's, and 2's should be 7, 4, and 5, respectively.\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\\n\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\"\n"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\na1 2 0 2\\na0\\na0\\na0\") == \"7 4 5\\n\"\nassert solution(\"4\\na0 1 2 0\\na0\\na0\\na0\") == \"1 2 0\\n\"\nassert solution(\"4\\na0 0 1 2\\na0\\na0\\na0\") == \"0 1 2\\n\"\nassert solution(\"4\\na0 0 0 0\\na0\\na0\\na0\") == \"0 0 0\\n\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6\\naabddc') == 'Yes'\nassert solution('3\\nabc') == 'No'\nassert solution('3\\njjj') == 'Yes'"
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\naabddc\") == \"Yes\"\nassert solution(\"3\\nabc\") == \"No\"\nassert solution(\"3\\njjj\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\naabddc\") == \"Yes\"\nassert solution(\"3\\nabc\") == \"No\"\nassert solution(\"3\\njjj\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\naabddc\") == \"Yes\"\nassert solution(\"3\\nabc\") == \"No\"\nassert solution(\"3\\njjj\") == \"Yes\"\n\nfrom typing import List"
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6\\naabddc') == 'Yes'\nassert solution('3\\nabc') == 'No'\nassert solution('3\\njjj') == 'Yes'"
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aabddc\") == \"Yes\"\nassert solution(\"abc\") == \"No\"\nassert solution(\"jjj\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('abc') == 'No'\nassert solution('aabddc') == 'Yes'\nassert solution('jjj') == 'Yes'"
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6\\nabdc') == 'Yes'\nassert solution('3\\nabc') == 'No'\nassert solution('3\\njjj') == 'Yes'"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2\") == \"54\"\nassert solution(\"7 4\") == \"1728\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2\") == \"54\", \"Output should be 54\"\nassert solution(\"7 4\") == \"1728\", \"Output should be 1728\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n\") == \"54\\n\"\nassert solution(\"7 4\\n\") == \"1728\\n\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == \"54\", \"Test case 1 failed\"\nassert solution(stdin=input()) == \"1728\", \"Test case 2 failed\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1728\"\n"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(str(5) + \" \" + str(2)) == \"54\"\nassert solution(str(7) + \" \" + str(4)) == \"1728\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 12\nassert solution(10) == 1306\nassert solution(5) == 25\nassert solution(7) == 1728\nassert solution(8) == 1728"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Test failed for input {stdin}, expected output {expected}\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\") == \"54\"\nassert solution(\"7 4\") == \"1728\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 1728"
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\\n\") == \"2 4\\n\", \"Test 1 Failed\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\\n\") == \"2 1\\n\", \"Test 2 Failed\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\\n\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\\n\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\\n\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\\n\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2 4\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\\n\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\\n\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\\n\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\\n\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"The output is incorrect. Please check the solution.\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW') == '2 4\\n'\nassert solution('3 3\\nWWW\\nBWW\\nWWW') == '2 1\\n'"
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"10 9 10 10 9\"\nprint(\"All test cases pass!\")"
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n\") == \"10 9 10 10 9\\n\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\\n\") == \"5 6\\n\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"10 9 10 10 9\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n\") == \"10 9 10 10 9\\n\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\\n\") == \"5 6\\n\"\nassert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n\") == \"10 9 10 10 9\\n\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n\") == \"10 9 10 10 9\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\\n\") == \"5 6\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n\") == \"10 9 10 10 9\\n\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\\n\") == \"5 6\\n\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == '''\n10 9 10 10 9 \n\nInput\n2 3\n1 2\n1 2\n1 2\n\nOutput\n5 6 \n\nInput\n5 7\n2 4\n5 1\n2 3\n3 4\n4 1\n5 3\n3 5\n\nOutput\n10 9 10 10 9 \n'''"
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"10 9 10 10 9\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"10 9 10 10 9\\n5 6\"\nassert solution() == \"10 9 10 10 9\\n5 6\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '10 9 10 10 9\\n5 6\\n'\nprint(\"All tests passed.\")"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\\n\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3') == '2\\n'"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\\n\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n\") == \"2\"\n"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n') == '2\\n'\nassert solution('1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n') == '2\\n'\n"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected_output, f\"The function should return {expected_output}, but it returns {solution}\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '2\\n'\n"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\\n\") == \"2\\n\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n\") == \"2\\n\"\nassert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\\n\") == \"2\\n\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\") == \"2\"\n"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n\") == \"2\\n\"\n\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n\") == \"2\\n\"\n\nassert solution(\"1 2\\n-2 -2\\n2\\n0 0 0\\n1 0 0\\n\") == \"2\\n\"\n\nassert solution(\"1 2\\n-2 -2\\n2\\n0 0 0\\n1 0 0\\n\") == \"3\\n\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n\") == \"2\\n\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n\") == \"2\\n\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Kevin\"\n"
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n2 1\n3 4\n''') == 'Kevin'\n\nassert solution('''\n1 2\n3\n''') == 'Nicky'"
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_str=\"2 1\\n3 4\") == \"Kevin\"\nassert solution(input_str=\"1 2\\n3\") == \"Nicky\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\"\nassert solution(\"1 2\\n3\") == \"Nicky\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n3 4\\n\") == \"Kevin\"\nassert solution(\"1 2\\n3\\n\") == \"Nicky\"\n"
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\"\nassert solution(\"1 2\\n3\") == \"Nicky\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n3 4\\n\") == \"Kevin\"\nassert solution(\"1 2\\n3\\n\") == \"Nicky\"\nassert solution(\"2 1\\n3\\n\") == \"Kevin\"\n"
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\"\nassert solution(\"1 2\\n3\") == \"Nicky\"\n"
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\"\nassert solution(\"1 2\\n3\") == \"Nicky\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n3 4\\n\") == \"Kevin\"\nassert solution(\"1 2\\n3\\n\") == \"Nicky\""
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case_no} failed: expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got {solution(input())}.\"\n"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 1, 2, 3) == [3]\nassert solution(3, 2, 2, 2) == [1, 1, 1]\nassert solution(2, 2, 1) == [-1]\n\nfrom typing import List"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3\\n1 2 3\\n1 2 3\\n2\\n2 1\\n-1\"\nassert solution(stdin) == \"3\\n2 2 2\\n2\\n1 1 1\"\nassert solution(stdin) == \"2\\n2 1\\n-1\"\nassert solution(stdin) == \"-1\"\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 3\\n2 2 2\\n3\\n2 1\\n\") == \"3\\n1 2 3\\n1 2 3\\n2\\n\"\nassert solution(\"3\\n2 2 2\\n2 1\\n\") == \"1\\n1 1 1\\n2\\n\"\nassert solution(\"2\\n2 1\\n\") == \"-1\\ndef solution(stdin: str) -> str:pass\"\n"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"3\\n1 2 3\\n1 2 3\\n\"\nassert solution(\"3\\n2 2 2\\n\") == \"1\\n1 1 1\\n2\\n\"\nassert solution(\"2\\n2 1\\n\") == \"-1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Solution did not match expected output:\\nExpected: {expected_output}\\nActual: {solution(input())}\""
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 1, 2, 3) == '3'\nassert solution(3, 2, 2, 2) == '1'\nassert solution(2, 2, 1) == '-1'"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, \"1 2 3\\n2 2 2\\n3\") == 1\nassert solution(3, \"2 2 2\") == 1\nassert solution(2, \"2 1\") == -1\nassert solution(2, \"def solution(stdin: str) -> str:\\n    pass\\n\") == -1"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Input\\n3\\n1 2 3\\n\") == \"Output\\n3\\n1 2 3\\n1 2 3\\n\"\nassert solution(\"Input\\n3\\n2 2 2\\n\") == \"Output\\n1\\n1 1 1\\n2\\n\"\nassert solution(\"Input\\n2\\n2 1\\n\") == \"Output\\n-1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\"\nassert solution(\"1\") == \"1\"\n\nfrom typing import List"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11\") == 6\nassert solution(\"01\") == 2\nassert solution(\"1\") == 1\n"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('11') == '6'\nassert solution('01') == '2'\nassert solution('1') == '1'"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('11') == '6'\nassert solution('01') == '2'\nassert solution('1') == '1'"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('11') == '6'\nassert solution('01') == '2'\nassert solution('1') == '1'"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n15\\n\") == \"1\\n\"\nassert solution(\"3\\n1 1 2\\n\") == \"3\\n\"\nassert solution(\"2\\n5 7\\n\") == \"4\\n\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n15\\n\") == \"1\\n\"\nassert solution(\"3\\n1 1 2\\n\") == \"3\\n\"\nassert solution(\"2\\n5 7\\n\") == \"4\\n\"\n\nimport math\n"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Input '{input()}' should return '{output()}' but got '{solution(input())}'\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '3'\nassert solution(input()) == '4'"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Solution failed for {input()} and expected output {output}\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n15\") == \"1\\n\"\nassert solution(\"3\\n1 1 2\") == \"3\\n\"\nassert solution(\"2\\n5 7\") == \"4\\n\"\n"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test cases failed.\"\nprint(\"Test cases passed.\")"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n15\") == \"1\\n\"\nassert solution(\"3\\n1 1 2\") == \"3\\n\"\nassert solution(\"2\\n5 7\") == \"4\\n\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n15\") == \"1\"\nassert solution(\"3\\n1 1 2\") == \"3\"\nassert solution(\"2\\n5 7\") == \"4\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"solution\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\", \"Test failed\"\nassert solution(stdin) == \"YES\", \"Test failed\"\nassert solution(stdin) == \"YES\", \"Test failed\"\nassert solution(stdin) == \"NO\", \"Test failed\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n4\\n1 2 3 0\\n0 3 2 1\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\\n4\\n1 2 3 0\\n0 3 2 1\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n1 0 2\\n2 0 1\") == \"NO\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n1 0 2\\n2 0 1\\n4\\n1 2 3 0\\n0 3 2 1\\n').startswith('YES')\nassert solution('2\\n1 0\\n0 1\\n').startswith('YES')\nassert solution('4\\n1 2 3 0\\n0 3 2 1\\n').startswith('NO')"
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"YES\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'YES'\nassert solution(input()) == 'YES'\nassert solution(input()) == 'NO'"
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'YES'\nassert solution(open('input_2.txt', 'r').read()) == 'YES'\nassert solution(open('input_3.txt', 'r').read()) == 'NO'"
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"9000\\n\", \"Expected result is 9000, but got {}\".format(solution(stdin))"
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '9000\\n', 'Test case 1 failed'\n\nassert solution(stdin) == '1160\\n', 'Test case 2 failed'\n\nstdin = '''\n6\n8 10 9 9 8 10\n1 1 1 1 1 1\n'''"
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"9000\", \"Incorrect output\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"9000\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"9000\"\nassert solution(3) == \"1160\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    6\n    8 10 9 9 8 10\n    1 1 1 1 1 1\n    \"\"\"\n) == \"9000\"\n\nassert solution(\n    \"\"\"\n    6\n    8 10 9 9 8 10\n    1 10 5 5 1 10\n    \"\"\"\n) == \"1160\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"9000\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n8 10 9 9 8 10\\n1 1 1 1 1 1\\n\") == \"9000\\n\"\n\nassert solution(\"6\\n8 10 9 9 8 10\\n1 10 5 5 1 10\\n\") == \"1160\\n\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''6\n8 10 9 9 8 10\n1 1 1 1 1 1''') == '''9000'''\n\nassert solution('''6\n8 10 9 9 8 10\n1 10 5 5 1 10''') == '''1160'''"
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"9000\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n2 3\\n1 4\\n1 4\\n2 1\") == 6\nassert solution(\"8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4\") == 1"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('sample_input.txt', 'r')) == \"6\\n\"\nassert solution(open('input.txt', 'r')) == \"1\\n\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"6\\n\", \"Please provide the correct input.\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 2\\n2 3\\n1 4\\n1 4\\n2 1\\n') == 6\nassert solution('8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4\\n') == 1"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 2\\n2 3\\n1 4\\n1 4\\n2 1\\n') == '6\\n'\nassert solution('8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4\\n') == '1\\n'"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"6\", \"Output is incorrect\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '1', \"Incorrect output\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n2 3\\n1 4\\n1 4\\n2 1\") == \"6\\n\\n1\\n\"\nassert solution(\"8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4\") == \"1\\n\\n\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n2 3\\n1 4\\n1 4\\n2 1\") == 6\nassert solution(\"8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4\") == 1"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n2 3\\n1 4\\n1 4\\n2 1\") == \"6\\n\\n\"\n\nassert solution(\"8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4\") == \"1\\n\"\n\nassert solution(\"1 2 3 4 5 6 7 8\") == \"9\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Input:\\n{}\\nOutput:\\n{}\\n\".format(input(), output())"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n2 2 3 4 6\\n') == '5\\n'\nassert solution('4\\n2 4 6 8\\n') == '-1\\n'\nassert solution('3\\n2 6 9\\n') == '4\\n'"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test Failed\"\n"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n5\n2 2 3 4 6\n''') == '5\\n'\n\nassert solution('''\n4\n2 4 6 8\n''') == '-1\\n'\n\nassert solution('''\n3\n2 6 9\n''') == '4\\n'\n\nassert solution('''\n5\n2 2 3 4 6\n''') == '-1\\n'\n\nassert solution('''\n5\n2 2 3 4 6\n''') == '-1\\n'"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Test failed. Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 2 3 4 6\\n\\n4\\n2 4 6 8\\n\\n3\\n2 6 9\\n\") == \"-1\\n\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 2 3 4 6\\n\") == \"5\\n\"\nassert solution(\"4\\n2 4 6 8\\n\") == \"-1\\n\"\nassert solution(\"3\\n2 6 9\\n\") == \"4\\n\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 2 3 4 6\\n\\n4\\n2 4 6 8\\n\\n3\\n2 6 9\\n\") == \"5\\n\\n-1\\n\"\n\nassert solution(\"4\\n2 4 6 8\\n\\n3\\n2 6 9\\n\") == \"-1\\n\\n4\\n\"\n\nassert solution(\"3\\n2 6 9\\n\") == \"4\\n\\n4\\n\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abacabaca\") == \"aca\"\nassert solution(\"abaca\") == \"0\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('abacabaca') == '3\\naca\\nba\\nca', 'First test'\n\nassert solution('abaca') == '0', 'Second test'"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('abacabaca') == '3\\naca\\nba\\nca\\n'\nassert solution('abaca') == '0\\n'\n\nassert solution('abc') == '1\\nabc\\n'\nassert solution('abcde') == '2\\nabc\\ndef\\n'\nassert solution('abcdef') == '3\\nabc\\ndef\\ngf\\n'\nassert solution('abcdefgh') == '4\\nabc\\ndef\\ngf\\nhg\\n'\nassert solution('abcdefghi') == '5\\nabc\\ndef\\ngf\\nhg\\ni\\n'\nassert solution('abcdefghij') == '6\\nabc\\ndef\\ngf\\nhg\\ni\\nj\\n'\nassert solution('abcdefghijk') == '7\\nabc\\ndef\\ngf\\nhg\\ni\\nj\\nk\\n'\nassert solution('abcdefghijkl') == '8\\nabc\\ndef\\ngf\\nhg\\ni\\nj\\nk\\nl\\n'\nassert solution('abcdefghijklm') == '9\\nabc\\ndef\\ngf\\nhg\\ni\\nj\\nk\\nl\\nm\\n'\nassert solution('abcdefghijklmno') == '10\\nabc\\ndef\\ngf\\nhg\\ni\\nj\\nk\\nl\\nm\\nno\\n'\nassert solution('abcdefghijklmnopq') == '11\\nabc\\ndef\\ngf\\nhg\\ni\\nj\\nk\\nl\\nm\\nno\\np\\n'\nassert solution('abcdefghijklmnopqrs') == '12\\nabc\\ndef\\ngf\\nhg\\ni\\nj\\nk\\nl\\nm\\nno\\np\\nr\\n'\nassert solution('abcdefghijklmnopqrsu') == '13\\nabc\\ndef\\ngf\\nhg\\ni\\nj\\nk\\nl\\nm\\nno\\np\\nr\\ns\\n'\nassert solution('abcdefghijklmnopqrsuv') == '14\\nabc\\ndef\\ngf\\nhg\\ni\\nj\\nk\\nl\\nm\\nno\\np\\nr\\ns\\nv\\n'\nassert solution('abcdefghijklmnopqrsuvw') == '15\\nabc\\ndef\\ngf\\nhg\\ni\\nj\\nk\\nl\\nm\\nno\\np\\nr\\ns\\nv\\nw\\n'\nassert solution('abcdefghijklmnopqrsuvwxyz') == '16\\nabc\\ndef\\ngf\\nhg\\ni\\nj\\nk\\nl\\nm\\nno\\np\\nr\\ns\\nv\\nw\\nx\\n'\nassert solution('abcdefghijklmnopqrsuvwxyz1234567890') == '17\\nabc\\ndef\\ngf\\nhg\\ni\\nj\\nk\\nl\\nm\\nno\\np\\nr\\ns\\nv\\nw\\nx\\nx\\n'\n\nassert solution('abcdefghijklmnopqrstuvwxyz') == '18\\nabcdefghijklmnopqrstuvwxyz\\n'\nassert solution('abcdefghijklmnopqrstuvwxyz1234567890') == '19\\nabcdefghijklmnopqrstuvwxyz1234567890\\n'\nassert solution('abcdefghijklmnopqrstuvwxyz12345678901234567890') == '20\\nabcdefghijklmnopqrstuvwxyz12345678901234567890\\n'\nassert solution('abcdefghijklmnopqrstuvwxyz123456789012345678901234567890') == '21\\nabcdefghijklmnopqrstuvwxyz123456789012345678901234567890\\n'\nassert solution('abcdefghijklmnopqrstuvwxyz1234567890123456789012345678901234567890') == '22\\nabcdefghijklmnopqrstuvwxyz1234567890123456789012345678901234567890\\n'\nassert solution('abcdefghijklmnopqrstuvwxyz1234567890123456789012345678901234567890"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('abacabaca') == 3\nassert solution('abaca') == 0"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abacabaca\") == [\"aca\", \"ba\", \"ca\"]\nassert solution(\"abaca\") == [\"aca\"]"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\"\n\nprint(solution(\"abacabaca\")) # Output: \"3\\naca\\nba\\nca\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\\n\"\n"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('abacabaca') == '3\\naca\\nba\\nca'\nassert solution('abaca') == '0'\n"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\""
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 5\\n1#2#3') == 2\nassert solution('4 5\\n11..2\\n#..22\\n#.323\\n.#333') == 2\nassert solution('1 5\\n1#2#3') == -1"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\") == 2\nassert solution(\"1 5\\n1#2#3\") == -1"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 5\\n11..2\\n#..22\\n#.323\\n.#333\\nOutput\\n2\\nInput\\n1 5\\n1#2#3\\nOutput\\n-1\\ndef solution(stdin: str) -> str:\\n    pass\\n') == 2\nassert solution('1 5\\n1#2#3\\nOutput\\n-1\\ndef solution(stdin: str) -> str:\\n    pass\\n') == -1"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 5\\n11..2\\n#..22\\n#.323\\n.#333') == 2\nassert solution('1 5\\n1#2#3') == -1"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 5\\n11..2\\n#..22\\n#.323\\n.#333\\n') == 2\nassert solution('1 5\\n1#2#3\\n') == -1\n"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 2\n"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2\nassert solution() == -1"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\\n\") == 2\nassert solution(\"1 5\\n1#2#3\\n\") == -1"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n4 5\n11..2\n"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 2\nassert solution(2) == 2\nassert solution(3) == -1\nassert solution(4) == -1\nassert solution(5) == 1\nassert solution(6) == 1\nassert solution(7) == 2\nassert solution(8) == 2\nassert solution(9) == 3\nassert solution(10) == 3\nassert solution(11) == 3\nassert solution(12) == 4\nassert solution(13) == 4\nassert solution(14) == 4\nassert solution(15) == 4\nassert solution(16) == 5\nassert solution(17) == 5\nassert solution(18) == 5\nassert solution(19) == 5\nassert solution(20) == 5\nassert solution(21) == 5\nassert solution(22) == 6\nassert solution(23) == 6\nassert solution(24) == 6\nassert solution(25) == 6\nassert solution(26) == 6\nassert solution(27) == 6\nassert solution(28) == 6\nassert solution(29) == 6\nassert solution(30) == 6\nassert solution(31) == 6\nassert solution(32) == 7\nassert solution(33) == 7\nassert solution(34) == 7\nassert solution(35) == 7\nassert solution(36) == 7\nassert solution(37) == 7\nassert solution(38) == 7\nassert solution(39) == 7\nassert solution(40) == 7\nassert solution(41) == 7\nassert solution(42) == 8\nassert solution(43) == 8\nassert solution(44) == 8\nassert solution(45) == 8\nassert solution(46) == 8\nassert solution(47) == 8\nassert solution(48) == 8\nassert solution(49) == 8\nassert solution(50) == 8\nassert solution(51) == 8\nassert solution(52) == 9\nassert solution(53) == 9\nassert solution(54) == 9\nassert solution(55) == 9\nassert solution(56) == 9\nassert solution(57) == 9\nassert solution(58) == 9\nassert solution(59) == 9\nassert solution(60) == 10\nassert solution(61) == 10\nassert solution(62) == 10\nassert solution(63) == 10\nassert solution(64) == 10\nassert solution(65) == 10\nassert solution(66) == 10\nassert solution(67) == 10\nassert solution(68) == 11\nassert solution(69) == 11\nassert solution(70) == 11\nassert solution(71) == 11\nassert solution(72) == 11\nassert solution(73) == 11\nassert solution(74) == 11\nassert solution(75) == 11\nassert solution(76) == 12\nassert solution(77) == 12\nassert solution(78) == 12\nassert solution(79) == 12\nassert solution(80) == 12\nassert solution(81) == 12\nassert solution(82) == 12\nassert solution(83) == 12\nassert solution(84) == 13\nassert solution(85) == 13\nassert solution(86) == 13\nassert solution(87) == 13\nassert solution(88) == 13\nassert solution(89) == 13\nassert solution(90) == 13\nassert solution(91) == 13\nassert solution(92) == 13\nassert solution(93) == 14\nassert solution(94) == 14\nassert solution(95) == 14\nassert solution(96) == 14\nassert solution(97) == 14\nassert solution(98) == 14\nassert solution(99) == 14\nassert solution(10"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8\") == \"6\", \"Output incorrect.\"\nassert solution(\"3\") == \"-1\", \"Output incorrect.\"\nprint(solution(\"\"))"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('8') == '6'\nassert solution('3') == '-1'"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('8') == '6', 'Incorrect output'\nassert solution('3') == '-1', 'Incorrect output'"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('8') == '6'\nassert solution('3') == '-1'"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8\") == \"6\"\nassert solution(\"3\") == \"-1\""
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8\") == 6\nassert solution(\"3\") == -1"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('8\\n))((())()\\n') == '6\\n'\nassert solution('3\\n(()\\n') == '-1\\n'"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8\\n())((()\\n\") == 6\nassert solution(\"3\\n(()\\n\") == -1"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8\") == \"6\"\nassert solution(\"3\") == \"-1\""
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('8') == '6'\nassert solution('3') == '-1'"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '1\\n3 1'"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3 5\\n4 4 0\\n1 3\\n3 2\\n3 1\\n') == '1'\nassert solution('4 5 4\\n2 1 0 3\\n4 3\\n3 2\\n1 2\\n1 4\\n1 3\\n') == '4'"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    3 3 5\n    4 4 0\n    1 3\n    3 2\n    3 1\n    \"\"\"\n) == \"1\\n3\\n\"\n\nassert solution(\n    \"\"\"\n    4 5 4\n    2 1 0 3\n    4 3\n    3 2\n    1 2\n    1 4\n    1 3\n    \"\"\"\n) == \"4\\n1 2 3 4\\n\""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 5\\n4 4 0\\n1 3\\n3 2\\n3 1\") == \"1\\n3 \"\nassert solution(\"4 5 4\\n2 1 0 3\\n4 3\\n3 2\\n1 2\\n1 4\\n1 3\") == \"4\\n1 2 3 4 \"\n\nfrom typing import List"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, \"The expected output is:\\n\" + expected_output + \"\\nBut the actual output is:\\n\" + solution(input())"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 5\\n4 4 0\\n1 3\\n3 2\\n3 1\\n\") == \"1\\n3 \"\nassert solution(\"4 5 4\\n2 1 0 3\\n4 3\\n3 2\\n1 2\\n1 4\\n1 3\\n\") == \"4\\n1 2 3 4 \"\n"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Incorrect output: expected '{output()}' but got '{solution(input())}'\""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"8\"\n"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"8\""
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"8\\n\"\nassert solution(\"5 5\") == \"1\\n\""
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"8\""
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 3') == '8\\n' # correct output"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"8\\n\""
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"8\\n\"\n"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '8', 'Your solution is incorrect'"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution.__doc__) == 'Output\\n8\\n'"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"8\"\n"
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"5\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"100\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\n1 2\\n2 3\\n\") == \"5\\n\"\nassert solution(\"100 3\\n1 2\\n2 1\\n3 1\\n\") == \"4\\n\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n1 2\\n2 3\\n\") == \"5\\n\"\nassert solution(\"100 3\\n1 2\\n2 1\\n3 1\\n\") == \"4\\n\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\\n\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r\"5 2\\n1 2\\n2 3\\n\") == \"5\\n\"\nassert solution(r\"100 3\\n1 2\\n2 1\\n3 1\\n\") == \"4\\n\"\nassert solution(r\"1 2\\n1 1\\n2 100\\n\") == \"100\\n\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\n1 2\\n2 3\\n\") == \"5\\n\"\nassert solution(\"100 3\\n1 2\\n2 1\\n3 1\\n\") == \"4\\n\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\\n\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"5\\n\"\nassert solution() == \"4\\n\"\nassert solution() == \"100\\n\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"The solution {output} does not match the expected output {input()}\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"Output\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"5\"\nassert solution() == \"4\"\nassert solution() == \"100\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n1 2\\n2 3\\n\") == \"5\\n\"\nassert solution(\"100 3\\n1 2\\n2 1\\n3 1\\n\") == \"4\\n\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\\n\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aaabb\") == \"6\", \"Test failed\"\nassert solution(\"usaco\") == \"1\", \"Test failed\"\nassert solution(\"lol\") == \"2\", \"Test failed\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aaabb\") == 6\nassert solution(\"usaco\") == 1\nassert solution(\"lol\") == 2"
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aaabb\") == 6\nassert solution(\"usaco\") == 1\nassert solution(\"lol\") == 2"
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aaabb\") == \"6\", \"Test case 1 failed\"\nassert solution(\"usaco\") == \"1\", \"Test case 2 failed\"\nassert solution(\"lol\") == \"2\", \"Test case 3 failed\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aaabb\") == \"6\"\nassert solution(\"usaco\") == \"1\"\nassert solution(\"lol\") == \"2\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aaabb\") == 6\nassert solution(\"usaco\") == 1\nassert solution(\"lol\") == 2\n"
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aaabb\") == \"6\"\nassert solution(\"usaco\") == \"1\"\nassert solution(\"lol\") == \"2\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aaabb\") == \"6\"\nassert solution(\"usaco\") == \"1\"\nassert solution(\"lol\") == \"2\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aaabb\") == \"6\"\nassert solution(\"usaco\") == \"1\"\nassert solution(\"lol\") == \"2\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aaabb\") == \"6\"\nassert solution(\"usaco\") == \"1\"\nassert solution(\"lol\") == \"2\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"4\\n\") == \"2\\n\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == '1'\nassert solution(4) == '2'"
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == '1'\nassert solution(4) == '2'\n"
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"4\\n\") == \"2\\n\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == '1'\nassert solution(4) == '2'\n"
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\\n\"\nassert solution(input()) == \"2\\n\"\n"
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"2\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Test failed for input {input()}, expected output {expected}, got {solution(input())}\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 4\\n2 5\\n3 6\") == \"-1\\n1 2\\n2 1\"\nassert solution(\"1 4\\n2 5\\n3 6\\n\") == \"-1\\n1 2\\n2 1\"\nassert solution(\"1 4\\n2 5\\n3 6\\n3 6\") == \"3 6\\n1 2\\n2 1\"\nassert solution(\"1 4\\n2 5\\n3 6\\n3 6\\n3 6\\n\") == \"3 6\\n1 2\\n2 1\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 4\\n2 5\\n3 6\") == \"1 2\\n2 1\\n1 2\"\nassert solution(\"5 1\\n2 3\\n3 4\") == \"1 2\\n2 1\\n1 2\"\nassert solution(\"1 2\\n3 4\\n5 6\") == \"1 2\\n2 1\\n1 2\"\nprint(\"-1\")"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n3\n1 4\n2 5\n3 6\n\"\"\") == '1 2\\n2 1\\n1 2\\n'\n\nassert solution(\n\"\"\"\n1\n4\n1\n1\n\"\"\") == '1 1\\n1 1\\n1 1\\n1 1\\n'\n\nassert solution(\n\"\"\"\n3\n1 4\n2 5\n1 1\n\"\"\") == '-1\\n'"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 4\\n2 5\\n3 6\") == \"1 2\\n2 1\\n1 2\"\nassert solution(\"4\\n2 5\\n3 6\") == \"1 2\"\nassert solution(\"6\\n1 4\\n2 5\") == \"1 2\"\nassert solution(\"4\\n2 4\\n3 5\") == -1\n"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 4\\n2 5\\n3 6\") == \"1 2\\n2 1\\n1 2\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Input\\n3\\n1 4\\n2 5\\n3 6\\n\\nOutput\\n1 2\\n2 1\\n1 2\\n\") == '1 2\\n2 1\\n1 2\\n'\nassert solution(\"Input\\n3\\n1 1\\n1 2\\n1 3\\n\\nOutput\\n1 1\\n1 1\\n1 1\\n\") == '1 1\\n1 1\\n1 1\\n'\nassert solution(\"Input\\n2\\n3 1\\n2 2\\n\\nOutput\\n2 1\\n2 1\\n\") == '2 1\\n2 1\\n'\nassert solution(\"Input\\n1\\n3 1\\n3 2\\n\\nOutput\\n2 1\\n2 1\\n\") == '-1\\n'\n"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}, Received {solution(input())}.\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"1 2\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '''1 2\n2 1'''"
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"2 1\"\nassert solution(1) == \"1\"\nassert solution(2) == \"2\"\nassert solution(8) == \"4\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2 1\"\nassert solution(\"8\") == \"4\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"2 1\"\nassert solution(8) == \"4\"\nassert solution(5) == \"2\"\nassert solution(2) == \"1\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2 1\"\nassert solution(\"8\") == \"4\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test case failed.\"\nfor _ in range(test_cases):\n    n = int(input())\n    slimes = [int(x) for x in input().split()]\n    result = sum(slimes)\n    print(result)"
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1\\n') == '1\\n', \"Output should be 1\"\nassert solution('2\\n') == '2\\n', \"Output should be 2\"\nassert solution('3\\n') == '2 1\\n', \"Output should be 2 1\"\nassert solution('8\\n') == '4\\n', \"Output should be 4\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2 1\"\nassert solution(\"8\") == \"4\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2 1\"\nassert solution(\"8\") == \"4\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == \"1\"\nassert solution(2) == \"2\"\nassert solution(3) == \"2 1\"\nassert solution(8) == \"4\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1\\n') == '1\\n'\nassert solution('2\\n') == '2\\n'\nassert solution('3\\n') == '2 1\\n'\nassert solution('8\\n') == '4\\n'"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output '{expected_output}', got '{solution(stdin)}'.\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aabaac\") == \"2\\naba aca \\n\"\nassert solution(\"0rTrT022\") == \"1\\n02TrrT20 \\n\"\nassert solution(\"aA\") == \"2\\na A\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aabaac\") == \"aba aca\"\nassert solution(\"0rTrT022\") == \"02TrrT20\"\nassert solution(\"aA\") == \"a A\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\naabaac\") == \"2\\naba aca\"\nassert solution(\"8\\n0rTrT022\") == \"1\\n02TrrT20\"\nassert solution(\"2\\nA\") == \"2\\nA\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"6\\naabaac\") == \"2\\naba aca\"\nassert solution(stdin=\"8\\n0rTrT022\") == \"1\\n02TrrT20\"\nassert solution(stdin=\"2\\nA\") == \"2\\nA\"\n\nfrom typing import List"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aabaac\") == \"2\\naba aca\\n\"\nassert solution(\"0rTrT022\") == \"1\\n02TrrT20\\n\"\nassert solution(\"aA\") == \"2\\nA A\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, but got: {solution(stdin)}\"\n\nfrom typing import List"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == [\"aba aca\", \"02TrrT20\", \"a A\", \"def\", \"def\", \"a A\"]"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(8) == \"1\\n02TrrT20\"\nassert solution(2) == \"2\\nA A\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"6\\naabaac\\n\") == \"2\\naba aca \\n\"\nassert solution(stdin=\"8\\n0rTrT022\\n\") == \"1\\n02TrrT20 \\n\"\nassert solution(stdin=\"2\\nA\\n\") == \"2\\nA A\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\na**d\\n2\\abcd\\nacbd\\n\") == \"2\"\nassert solution(\"5\\nlo*er\\n2\\lover\\nloser\\n\") == \"0\"\nassert solution(\"3\\na*a\\n2\\aaa\\aba\\n\") == \"1\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"a**d\") == 2\nassert solution(\"abcd\") == 2\nassert solution(\"acbd\") == 2\nassert solution(\"lo*er\") == 0\nassert solution(\"a*a\") == 1"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == expected, f\"Got '{solution(stdin=input())}' expected '{expected}'\"\n"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"a**d\\n2\\nabcd\\nacbd\\n\") == \"2\"\nassert solution(\"lo*er\\n2\\nlover\\nloser\\n\") == \"0\"\nassert solution(\"a*a\\n2\\naaa\\naba\\n\") == \"1\"\n"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"The given code is not the correct solution. Expected: {expected}, Received: {solution(input())}\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\na**d\\n2\\abcd\\nacbd\") == \"2\"\nassert solution(\"5\\nlo*er\\n2\\lover\\nloser\") == \"0\"\nassert solution(\"3\\na*a\\n2\\aaa\\aba\") == \"1\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\na**d\\n2\\abcd\\nacbd\\n\") == \"2\"\nassert solution(\"5\\nlo*er\\n2\\lover\\nloser\\n\") == \"0\"\nassert solution(\"3\\na*a\\n2\\aaa\\aba\\n\") == \"1\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Solution: {solution(input())}, Expected: {expected}\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\na**d\\n2\\nabcd\\nacbd\\n') == '2', 'Incorrect output'\nassert solution('5\\nlo*er\\n2\\nlover\\nloser\\n') == '0', 'Incorrect output'\nassert solution('3\\na*a\\n2\\naaa\\naba\\n') == '1', 'Incorrect output'\nassert solution('') == '0', 'Incorrect output'"
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\\n\"\nassert solution(stdin) == \"2\\n\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\") == \"1\\n\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\") == \"2\\n\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\\n\") == \"1\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\\n\") == \"2\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"tests/test_inputs/sample_1.txt\", \"r\").read()) == \"1\\n\"\nassert solution(open(\"tests/test_inputs/sample_2.txt\", \"r\").read()) == \"2\\n\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 1, 1, 1, 1, 1, 1, 2, 0, 2, 0, 0, 4, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 3, 2, 1, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 1, 1, 2, 1, 0, 0, 1, 0, 2, 0, 1, 2, 2, 1, 0, 1, 1, 1, 0, 2, 1, 0, 0, 1, 1, 0, 1, 0, 2, 2, 2, 0, 1, 1, 1, 2, 0, 1, 1, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 0, 1, 0, 2, 2, 1, 0, 2, 1, 0, 1, 0, 1, 0, 1, 2, 1, 1, 1, 2, 2, 2, 1, 0, 1, 0, 1, 0, 1, 2, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, "
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\\n\") == \"1\\n\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\\n\") == \"2\\n\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\\n\") == \"1\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\\n\") == \"2\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 'Output\\n1\\n'\n"
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"The solution is incorrect, expected {output}, got {solution(input())}.\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\") == \"1\\n\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\") == \"2\\n\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 40\nassert solution(10) == 1\nassert solution(100) == 1\nassert solution(1000) == 1\nassert solution(10000) == 1\nassert solution(1000000) == 1\nassert solution(42) == 1\nassert solution(2) == 2\nassert solution(3) == 2\nassert solution(4) == 2\nassert solution(5) == 3\nassert solution(6) == 3\nassert solution(7) == 3\nassert solution(8) == 4\nassert solution(9) == 4\nassert solution(10) == 5\nassert solution(11) == 5\nassert solution(12) == 6\nassert solution(13) == 6\nassert solution(14) == 6\nassert solution(15) == 7\nassert solution(16) == 7\nassert solution(17) == 7\nassert solution(18) == 8\nassert solution(19) == 8\nassert solution(20) == 9\nassert solution(21) == 9\nassert solution(22) == 10\nassert solution(23) == 10\nassert solution(24) == 11\nassert solution(25) == 11\nassert solution(26) == 12\nassert solution(27) == 12\nassert solution(28) == 13\nassert solution(29) == 13\nassert solution(30) == 14\nassert solution(31) == 14\nassert solution(32) == 15\nassert solution(33) == 15\nassert solution(34) == 16\nassert solution(35) == 16\nassert solution(36) == 17\nassert solution(37) == 17\nassert solution(38) == 18\nassert solution(39) == 18\nassert solution(40) == 19\nassert solution(41) == 19\nassert solution(42) == 20\nassert solution(43) == 20\nassert solution(44) == 21\nassert solution(45) == 21\nassert solution(46) == 22\nassert solution(47) == 22\nassert solution(48) == 23\nassert solution(49) == 23\nassert solution(50) == 24\nassert solution(51) == 24\nassert solution(52) == 25\nassert solution(53) == 25\nassert solution(54) == 26\nassert solution(55) == 26\nassert solution(56) == 27\nassert solution(57) == 27\nassert solution(58) == 28\nassert solution(59) == 28\nassert solution(60) == 29\nassert solution(61) == 29\nassert solution(62) == 30\nassert solution(63) == 30\nassert solution(64) == 31\nassert solution(65) == 31\nassert solution(66) == 32\nassert solution(67) == 32\nassert solution(68) == 33\nassert solution(69) == 33\nassert solution(70) == 34\nassert solution(71) == 34\nassert solution(72) == 35\nassert solution(73) == 35\nassert solution(74) == 36\nassert solution(75) == 36\nassert solution(76) == 37\nassert solution(77) == 37\nassert solution(78) == 38\nassert solution(79) == 38\nassert solution(80) == 39\nassert solution(81) == 39\nassert solution(82) == 40\nassert solution(83) == 40\nassert solution(84) == 41\nassert solution(85) == 41\nassert solution(86) == 42\nassert solution(87) == 42\nassert solution(88) == 43\nassert solution(89) == 43\nassert solution(90"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Palindromic tree is better than splay tree\"\n"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1, 1) == 40\nassert solution(1, 42) == 1\nassert solution(6, 4) == 172"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"40\"\nassert solution(\"1 42\") == \"1\"\nassert solution(\"6 4\") == \"172\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Palindromic tree is better than splay tree\", \"Test failed\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"Palindromic tree is better than splay tree\", \"Your solution is incorrect.\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1, 1) == 40\nassert solution(1, 42) == 1\nassert solution(6, 4) == 172"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\\n\", \"Output should be '1'\\n\"\n\nassert solution(stdin) == \"40\\n\", \"Output should be '40'\\n\"\n\nassert solution(stdin) == \"1\\n\", \"Output should be '1'\\n\"\n\nassert solution(stdin) == \"172\\n\", \"Output should be '172'\\n\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Palindromic tree is better than splay tree\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='1 1\\n') == '40'\nassert solution(stdin='1 42\\n') == '1'\nassert solution(stdin='6 4\\n') == '172'"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 5\nassert \"Everything has been planned out. No more hidden concerns. The condition of Cytus is also perfect.\\n\\nThe time right now...... 00:01:12......\\n\\nIt's time.\" == solution(input)\n"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 5, \"Expected output: 5, but got: {}\".format(solution())"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2 1 4\\n\") == \"5\"\nassert solution(\"2\\n2 1 4\\n\") == \"6\"\nassert solution(\"3\\n1 4 4\\n\") == \"6\"\nassert solution(\"3\\n1 4 1\\n\") == \"6\"\nassert solution(\"4\\n3 1 4 4\\n\") == \"6\"\nassert solution(\"4\\n3 1 4 1\\n\") == \"6\"\nassert solution(\"5\\n3 1 4 1 5\\n\") == \"11\"\nassert solution(\"5\\n3 1 4 1 5\\n\") == \"11\"\nassert solution(\"5\\n3 1 4 1 5\\n\") == \"11\"\n"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 1 4\") == 5\nassert solution(\"4\\n3 1 4 4\") == 6\nassert solution(\"4\\n3 1 4 1\") == 6\nassert solution(\"5\\n3 1 4 1 5\") == 11"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 5, \"The solution is incorrect.\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '5\\n6'"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 1 4\\n\") == \"5\\n\"\nassert solution(\"4\\n3 1 4 4\\n\") == \"6\\n\"\nassert solution(\"4\\n3 1 4 1\\n\") == \"6\\n\"\nassert solution(\"5\\n3 1 4 1 5\\n\") == \"11\\n\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n2 1 4') == 5, \"Test case 1 failed\"\nassert solution('4\\n3 1 4 4') == 6, \"Test case 2 failed\"\nassert solution('4\\n3 1 4 1') == 6, \"Test case 3 failed\"\nassert solution('5\\n3 1 4 1 5') == 11, \"Test case 4 failed\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 5, \"Test failed for input [3]\"\nassert solution(4) == 6, \"Test failed for input [4]\"\nassert solution(4) == 6, \"Test failed for input [4]\"\nassert solution(5) == 11, \"Test failed for input [5]\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 5, \"Your solution is incorrect. \\n\\nThe correct solution should be 5.\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '1'\n"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\\n4\\n1 0 0 -1\\n\\nOutput\\n1\\n\\nInput\\n2\\n1 -1\\n\\nOutput\\n2\") == \"1\\n\\n2\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('Input\\n4\\n1 0 0 -1\\n\\nOutput\\n1\\n\\nInput\\n2\\n1 -1\\n\\nOutput\\n2\\n') == ['1\\n', '2\\n']\n"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\", \"Expected output: 1, received: {}\".format(solution())"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\", \"The value of min_{i} \u2260 j\u00a0\u00a0f(i, j) should be 1.\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n1 0 0 -1\\n2\\n1 -1\\n') == '1\\n2\\n'\nassert solution('2\\n1 -1\\n') == '2\\n'"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Input\\n4\\n1 0 0 -1\\n\\nOutput\\n1\\n\\nInput\\n2\\n1 -1\\n\\nOutput\\n2\\ndef solution(stdin: str) -> str:\\n    pass\") == \"1\"\nassert solution(\"Input\\n2\\n1 -1\\n\\nOutput\\n2\\ndef solution(stdin: str) -> str:\\n    pass\") == \"2\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1', \"The given code does not work.\"\n"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 0 0 -1\\n2\\n1 -1\\n\") == \"1\\n\"\nassert solution(\"2\\n1 -1\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4) == 1\nassert solution(2) == 2"
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('test_input.txt', 'r').read()) == '0'\nassert solution(open('test_input2.txt', 'r').read()) == '1'\nassert solution(open('test_input3.txt', 'r').read()) == '0'\nassert solution(open('test_input4.txt', 'r').read()) == '0'\nassert solution(open('test_input5.txt', 'r').read()) == '0'"
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\\n\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\\n\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\\n\") == \"1\\n\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\") == \"1\\n\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    2 0 0\n    1 2\n    2 3''') == '2'\nassert solution('''\n    2 1 0\n    1 2\n    2 2''') == '0'\nassert solution('''\n    2 5 7\n    3 4\n    14 4''') == '1'"
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\\n\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\\n\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\\n\") == \"1\\n\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 2, \"Incorrect solution\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\\n\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\\n\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\\n\") == \"1\\n\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\") == \"2\"\nassert solution(\"2 1 0\\n1 2\\n2 2\") == \"0\"\nassert solution(\"2 5 7\\n3 4\\n14 4\") == \"1\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\") == \"1\\n\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\") == \"2\"\nassert solution(\"2 1 0\\n1 2\\n2 2\") == \"0\"\nassert solution(\"2 5 7\\n3 4\\n14 4\") == \"1\"\n"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 2\\n01001\\n2 4\\n3 5') == '6\\n', \"Solution is not correct\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 2\\n01001\\n2 4\\n3 5') == '6\\n', \"Your solution is not correct.\"\n"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\\n\") == \"6\\n\"\nassert solution(\"5 1\\n01101\\n1 3\\n2 4\\n3 5\\n\") == \"6\\n\"\nassert solution(\"5 3\\n01101\\n1 3\\n2 4\\n3 5\\n\") == \"13\\n\"\nassert solution(\"5 1\\n01101\\n1 3\\n2 4\\n3 5\\n\") == \"6\\n\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\\n\") == \"6\\n\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"3 5\\n00101\\n1 3\\n4 5\\n2 4\") == \"2\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 2"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\\n\") == \"6\\n\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\\n\") == \"6\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\\n\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\\n\") == \"6\\n\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\\n5 2\\n01001\\n2 4\\n3 5\\n\") == \"6\\n\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\\n5 2\\n01001\\n2 4\\n3 5\\n5 2\\n01001\\n2 4\\n3 5\\n5 2\\n01001\\n2 4\\n3 5\\n5 2\\n01001\\n2 4\\n3 5\\n5 2\\n01001\\n2 4\\n3 5\\n5 2\\n01001\\n2 4\\n3 5\\n5 2\\n01001\\n2 4\\n3 5\\n5 2\\n01001\\n2 4\\n3 5\\n5 2\\n01001\\n2 4\\n3 5\\n5 2\\n01001\\n2 4\\n3 5\\n5 2\\n01001\\n2 4\\n3 5\\n5 2\\n01001\\n2 4\\n3 5\\n5 2\\n01001\\n2 4\\n3 5\\n5 2\\n01001\\n2 4\\n3 5\\n5 2\\n01001\\n2 4\\n3 5\\n5 2\\n01001\\n2 4\\n3 5\\n5 2\\n01001\\n2 4\\n3 5\\n5 2\\n01001\\n2 4\\n3 5\\n5 2\\n01001\\n2 4\\n3 5\\n5 2\\n01001\\n2 4\\n3 5\\n5 2\\n01001\\n2 4\\n3 5\\n5 2\\n01001\\n2 4\\n3 5\\n5 2\\n01001\\n2 4\\n3 5\\n5 2\\n01001\\n2 4\\n3 5\\n5 2\\n01001\\n2 4\\n3 5\\n5 2\\n01001\\n2 4\\n3 5\\n5 2\\n01001\\n2 4\\n3 5\\n5 2\\n01001\\n2 4\\n3 5\\n5 2\\n01001\\n2 4\\n3 5\\n5 2\\n01001\\n2 4\\n3 5\\n5 2\\n01001\\n2 4\\n3 5\\n5 2\\n01001\\n2 4\\n3 5\\n5 2\\n01001\\n2 4\\n3 5\\n5 2\\n01001\\n2 4\\n3 5\\n5 2\\n01001\\n2 4\\n3 5\\n5 2\\n01001\\n2 4\\n3 5\\n5 2\\n01001\\n2 4\\n3 5\\n5 2\\n01001\\n2 4\\n3 5\\n5 2\\n01001\\n2 4\\n3 5\\n5 2\\n01001\\n2 4\\n3 5\\n5 2\\n01001\\n2 4\\n3 5\\n5 2\\n01001\\"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\\n\") == \"6\\n\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\\n\") == \"6\\n\"\nassert solution(\"10 3\\n00101\\n01001\\n00101\\n01001\\n01001\\n\") == \"320\\n\"\nassert solution(\"10 10\\n00101\\n00101\\n00101\\n00101\\n00101\\n\") == \"160\\n\"\n"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6\"\nassert solution(stdin) == \"13\""
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1 1 1 1\") == \"6\"\nassert solution(\"1 2 1 2 1 2\") == \"13\"\nassert solution(\"1 3 2 4 2 3\") == \"11\"\nassert solution(\"1 4 3 6 3 4\") == \"10\"\nassert solution(\"1 5 4 8 4 5\") == \"9\""
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1 1 1 1\") == 6\nassert solution(\"1 2 1 2 1 2\") == 13"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1 1 1 1\") == \"6\"\nassert solution(\"1 2 1 2 1 2\") == \"13\""
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1 1 1 1\") == \"6\"\nassert solution(\"1 2 1 2 1 2\") == \"13\""
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 1 1 1\") == 6\nassert solution(\"1 2 1 2 1 2\") == 13"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"6\\n\", \"Output not as expected\"\nassert solution(stdin) == \"13\\n\", \"Output not as expected\""
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1 1 1 1\") == \"6\"\nassert solution(\"1 2 1 2 1 2\") == \"13\"\n\nfrom typing import List"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1 1 1 1\") == 6\nassert solution(\"1 2 1 2 1 2\") == 13"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"6\\n\", \"Your solution should return the number of triangles with one 1 centimeter side.\"\n\nimport math"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n2 3 4 6 9') == '4'\nassert solution('9\\n1 2 3 5 6 7 8 9 10') == '4'"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n2 3 4 6 9\\n') == '4\\n'\n\nassert solution('9\\n1 2 3 5 6 7 8 9 10\\n') == '4\\n'"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'Output', '\\n\\n'.join(['Input', input(), 'Output'])"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\\n\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\\n\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\\n\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 3 4 6 9\\n\") == \"4\\n\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\\n\") == \"4\\n\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''5\n2 3 4 6 9''') == '4'\nassert solution('''9\n1 2 3 5 6 7 8 9 10''') == '4'"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\\n\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\\n\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 3 4 6 9\\n\") == \"4\\n\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\\n\") == \"4\\n\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n2\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == 'SURGERY COMPLETE'\nassert solution('''\n2\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == 'SURGERY COMPLETE'\nassert solution('''\n2\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == 'SURGERY COMPLETE'\nassert solution('''\n2\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == 'SURGERY COMPLETE'"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"SURGERY COMPLETE\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n2\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == '''\nSURGERY COMPLETE\nIR\nR SrS\nS rr\nI lldll\nDONE\nSURGERY FAILED\n'''"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\"\nassert solution(\"1\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\"\nassert solution(\"3\\n4\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\"\nassert solution(\"3\\n4\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\"\nassert solution(\"3\\n4\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\"\nassert solution(\"3\\n4\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\"\nassert solution(\"3\\n4\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\"\nassert solution(\"3\\n4\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\"\nassert solution(\"3\\n4\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\"\nassert solution(\"3\\n4\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\"\nassert solution(\"3\\n4\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\"\nassert solution(\"3\\n4\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\"\nassert solution(\"3\\n4\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\"\nassert solution(\"3\\n4\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\"\nassert solution(\"3\\n4\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\"\nassert solution(\"3\\n4\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\"\nassert solution(\"3\\n4\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\"\nassert solution(\"3\\n4\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\"\n"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n') == 'SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\\n'\n\nassert solution('2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n') == 'SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\\n'"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\\nDONE\"\nassert solution(\"1\\n1\") == \"SURGERY COMPLETE\\nDONE\"\nassert solution(\"4\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\nDONE\"\n"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\"\n\nassert solution(\"3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\"\n\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\"\n\nassert solution(\"3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\"\n\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\"\n\nassert solution(\"3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i + 1} failed: got '{solution(input())}' but expected '{expected_output}'.\"\nfor i, (N, A, B) in enumerate(input().split()):\n    assert solution(f\"{N} {A} {B}\") == expected_output, f\"Test case {i + 1} failed: got '{solution(f\"{N} {A} {B}\")}' but expected '{expected_output}'.\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9 2 5\\n\") == \"6 5 8 3 4 1 9 2 7\"\nassert solution(\"3 2 1\\n\") == \"1 2 3\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 2, 1) == \"1 2 3\"\nassert solution(9, 2, 5) == \"6 5 8 3 4 1 9 2 7\"\nassert solution(1, 6, 7) == \"-1\"\nassert solution(1, 6, 7, 8, 3, 4, 9, 2, 7) == \"-1\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('9 2 5\\n3 2 1\\n') == '6 5 8 3 4 1 9 2 7'\nassert solution('2 5 8\\n6 5 9\\n1 4 3\\n') == '6 5 9 3 4 2 8 1 7'\nassert solution('1 2 3\\n4 5 6\\n7 8 9\\n') == '-1'"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('9 2 5') == '6 5 8 3 4 1 9 2 7'\nassert solution('3 2 1') == '1 2 3'"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\"\nassert solution(\"3 2 1\") == \"1 2 3\"\nassert solution(\"1 2\") == \"-1\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\"\nassert solution(\"3 2 1\") == \"1 2 3\"\n"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(10, 2, 5) == \"6 5 8 3 4 1 9 2 7\"\nassert solution(3, 2, 1) == \"1 2 3 \"\nassert solution(1, 2, 3) == -1\nassert solution(1, 2, 4) == \"2 3 4 \"\nassert solution(1, 2, 5) == -1"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(9, 2, 5) == [6, 5, 8, 3, 4, 1, 9, 2, 7]\nassert solution(3, 2, 1) == [1, 2, 3]\n\nprint(\"-1\")"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 2 1') == '1 2 3'\nassert solution('9 2 5') == '6 5 8 3 4 1 9 2 7'\nassert solution('10 1 2') == -1"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n3 2 1\") == \"3\\n\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\") == \"5000000000\\n\"\nassert solution(\"3 2\\n1 0 1\") == \"2\\n\"\nassert solution(\"4 4\\n2 8 4 1\") == \"4\\n\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 2\\n3 2 1\\n') == '3\\n'\nassert solution('5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n') == '5000000000\\n'\nassert solution('3 2\\n1 0 1\\n') == '2\\n'\nassert solution('4 4\\n2 8 4 1\\n') == '4\\n'"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 2, 3, 2, 1) == 3\nassert solution(5, 1, 1000000000, 1000000000, 1000000000, 1000000000) == 5000000000\nassert solution(3, 2, 1, 0, 1) == 2\nassert solution(4, 4, 2, 8, 4, 1) == 4"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 3\nassert solution(5, 1) == 5\nassert solution(3, 2, 1, 1) == 2\nassert solution(4, 2, 8, 4, 1) == 4"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 2\\n3 2 1') == 3\nassert solution('5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000') == 5000000000\nassert solution('3 2\\n1 0 1') == 2\nassert solution('4 4\\n2 8 4 1') == 4"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n3 2 1\\n\") == \"3\\n\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n\") == \"5000000000\\n\"\nassert solution(\"3 2\\n1 0 1\\n\") == \"2\\n\"\nassert solution(\"4 4\\n2 8 4 1\\n\") == \"4\\n\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Got {solution(stdin)}, expected {expected}\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 2\\n3 2 1\\n') == '3\\n'\nassert solution('5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n') == '5000000000\\n'\nassert solution('3 2\\n1 0 1\\n') == '2\\n'\nassert solution('4 4\\n2 8 4 1\\n') == '4\\n'"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 2\\n3 2 1') == '3\\n'\nassert solution('5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000') == '5000000000\\n'\nassert solution('3 2\\n1 0 1') == '2\\n'\nassert solution('4 4\\n2 8 4 1') == '4\\n'"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"bwwwbwwbw\") == 5\nassert solution(\"bwwbwwb\") == 3"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"bwwwbwwbw\") == 5\nassert solution(\"bwwbwwb\") == 3"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\"\nassert solution(\"bwwbwwb\") == \"3\""
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"bwwwbwwbw\") == 5, \"Expected 5, got {}\".format(solution(\"bwwwbwwbw\"))\nassert solution(\"bwwbwwb\") == 3, \"Expected 3, got {}\".format(solution(\"bwwbwwb\"))"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('bwwwbwwbw') == 5\nassert solution('bwwbwwb') == 3"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"bwwwbwwbw\") == 5\nassert solution(\"bwwbwwb\") == 3\n"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\"\nassert solution(\"bwwbwwb\") == \"3\""
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"bwwwbwwbw\") == 5, \"Expected output: 5, but got: {}\".format(solution(\"bwwwbwwbw\"))\nassert solution(\"bwwbwwb\") == 3, \"Expected output: 3, but got: {}\".format(solution(\"bwwbwwb\"))\n"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\"\nassert solution(\"bwwbwwb\") == \"3\"\nassert solution(\"\") == \"0\""
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"bwwwbwwbw\") == 5, \"Expected 5, but got {} instead.\".format(solution(\"bwwwbwwbw\"))\nassert solution(\"bwwbwwb\") == 3, \"Expected 3, but got {} instead.\".format(solution(\"bwwbwwb\"))"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\\n4 5\\n3 2\\n1 2\\n.....\\n.***. \\n...** \\n*.... \\n\\nOutput\\n10\\n\\nInput\\n4 4\\n2 2\\n0 1\\n....\\n..*. \\n....\\n....\\n\\nOutput\\n7\") == 10\nassert solution(\"Input\\n4 4\\n2 2\\n0 1\\n....\\n..*. \\n....\\n....\\n\\nOutput\\n7\") == 7\n"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(example1) == 10, \"Example 1: Incorrect output\"\nassert solution(example2) == 7, \"Example 2: Incorrect output\"\nassert solution(example3) == 7, \"Example 3: Incorrect output\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\n3 2\\n1 2\\n.....\\n.***.\\n...**\\n*....\\n\") == 10\nassert solution(\"4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\") == 7"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\n3 2\\n1 2\\n.....\\n.***. \\n...**\\n*....\\n\") == 10\nassert solution(\"4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\") == 7\n"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 10, \"The solution is incorrect.\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 10, \"The given code is incorrect\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\n3 2\\n1 2\\n.....\\n.***. \\n...** \\n*....\\n\") == \"10\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 10, \"The solution is incorrect.\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"10\", \"Test failed\"\nprint(\"Test passed\")"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Input\") == \"Output\\n10\\n\"\nassert solution(\"Input\") == \"Output\\n7\\n\"\nassert solution(\"Input\") == \"Output\\n7\\n\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 4 2 2\") == \"2\"\nassert solution(\"6\\n1 2 4 4 4 9\") == \"2\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\\n4\\n1 4 2 2\\n\") == \"Output\\n2\\n\\n\"\nassert solution(\"Input\\n6\\n1 2 4 4 4 9\\n\") == \"Output\\n2\\n\\n\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test case {index+1} failed. Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 4 2 2\\n6\\n1 2 4 4 4 9\\n\") == \"2\\n\"\nassert solution(\"6\\n1 2 4 4 4 9\\n\") == \"2\\n\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 4 2 2\\n6\\n1 2 4 4 4 9\\n\") == \"2\"\nassert solution(\"6\\n1 2 4 4 4 9\\n\") == \"2\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 4 2 2\\n\") == \"2\"\nassert solution(\"6\\n1 2 4 4 4 9\\n\") == \"2\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"2\\n\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n1 4 2 2\\n6\\n1 2 4 4 4 9\\n') == '2\\n'\nassert solution('10\\n5 10 15 20 10 20\\n') == '2\\n'\nassert solution('5\\n1 2 3 4 5\\n') == '1\\n'\nassert solution('10\\n1 1 1 1 1 1\\n') == '0\\n'\nassert solution('10\\n
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '2' # expected output: 2\nassert solution() == '2' # expected output: 2"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 1\\naba\") == \"7\"\nassert solution(\"4 1 1\\nabcd\") == \"4\"\nassert solution(\"4 10 1\\naaaa\") == \"12\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 3, 1) == 7\nassert solution(4, 1, 1) == 4\nassert solution(4, 10, 1) == 12"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aba\") == \"7\"\nassert solution(\"abcd\") == \"4\"\nassert solution(\"aaaa\") == \"12\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test case failed\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aba\") == \"7\"\nassert solution(\"abcd\") == \"4\"\nassert solution(\"aaaa\") == \"12\"\n\nsolution = lambda s: str.replace(s, \"a\", \"a\")\n\nsolution(\"aba\")\nsolution(\"abcd\")\nsolution(\"aaaa\")"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aba\") == \"7\"\nassert solution(\"abcd\") == \"4\"\nassert solution(\"aaaa\") == \"12\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aba\") == \"7\"\nassert solution(\"abcd\") == \"4\"\nassert solution(\"aaaa\") == \"12\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('aba') == '7'\nassert solution('abcd') == '4'\nassert solution('aaaa') == '12'"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aba\") == \"7\"\nassert solution(\"abcd\") == \"4\"\nassert solution(\"aaaa\") == \"12\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 1\\naba\\n\") == \"7\"\nassert solution(\"4 1 1\\nabcd\\n\") == \"4\"\nassert solution(\"4 10 1\\naaaa\\n\") == \"12\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 3') == '1'\nassert solution('4 5') == '1'\nassert solution('5 10') == '1'\nassert solution('1 10') == '1'\nassert solution('3 4') == '2'\nassert solution('2 6') == '2'\nassert solution('4 10') == '2'\nassert solution('3 1') == '2'\nassert solution('2 5') == '3'\nassert solution('4 7') == '3'\nassert solution('3 2') == '3'\nassert solution('2 4') == '4'\nassert solution('4 8') == '4'\nassert solution('3 3') == '4'\nassert solution('2 3') == '5'\nassert solution('4 9') == '5'\nassert solution('3 1') == '5'\nassert solution('2 2') == '5'\nassert solution('4 6') == '6'\nassert solution('3 2') == '6'\nassert solution('2 1') == '6'\nassert solution('4 5') == '6'\nassert solution('3 3') == '6'\nassert solution('2 2') == '7'\nassert solution('4 4') == '7'\nassert solution('3 2') == '7'\nassert solution('2 1') == '7'\nassert solution('4 3') == '8'\nassert solution('3 1') == '8'\nassert solution('2 1') == '8'\nassert solution('4 2') == '9'\nassert solution('3 1') == '9'\nassert solution('2 1') == '9'\nassert solution('4 1') == '10'\nassert solution('3 1') == '10'\nassert solution('2 1') == '10'\nassert solution('4 0') == '10'\nassert solution('3 0') == '10'\nassert solution('2 0') == '10'\nassert solution('4 -1') == '10'\nassert solution('3 -1') == '10'\nassert solution('2 -1') == '10'\nassert solution('4 1000') == '10'\nassert solution('3 1000') == '10'\nassert solution('2 1000') == '10'\nassert solution('4 0000') == '10'\nassert solution('3 0000') == '10'\nassert solution('2 0000') == '10'\nassert solution('4 -1000') == '10'\nassert solution('3 -1000') == '10'\nassert solution('2 -1000') == '10'\nassert solution('4 1000000000') == '10'\nassert solution('3 1000000000') == '10'\nassert solution('2 1000000000') == '10'\nassert solution('4 0000000000') == '10'\nassert solution('3 0000000000') == '10'\nassert solution('2 0000000000') == '10'\nassert solution('4 -1000000000') == '10'\nassert solution('3 -1000000000') == '10'\nassert solution('2 -1000000000') == '10'\nassert solution('4 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"2 1\\n\") == \"1\\n\", \"Error: Incorrect output for sample input 2 1\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n\") == \"1\\n\"\nassert solution(\"3 1\\n\") == \"2\\n\"\nassert solution(\"4 1\\n\") == \"3\\n\"\nassert solution(\"5 1\\n\") == \"4\\n\"\nassert solution(\"6 1\\n\") == \"5\\n\"\nassert solution(\"7 1\\n\") == \"6\\n\"\nassert solution(\"8 1\\n\") == \"7\\n\"\nassert solution(\"9 1\\n\") == \"8\\n\"\nassert solution(\"10 1\\n\") == \"9\\n\"\nassert solution(\"11 1\\n\") == \"10\\n\"\nassert solution(\"12 1\\n\") == \"11\\n\"\nassert solution(\"13 1\\n\") == \"12\\n\"\nassert solution(\"14 1\\n\") == \"13\\n\"\nassert solution(\"15 1\\n\") == \"14\\n\"\nassert solution(\"16 1\\n\") == \"15\\n\"\nassert solution(\"17 1\\n\") == \"16\\n\"\nassert solution(\"18 1\\n\") == \"17\\n\"\nassert solution(\"19 1\\n\") == \"18\\n\"\nassert solution(\"20 1\\n\") == \"19\\n\"\nassert solution(\"21 1\\n\") == \"20\\n\"\nassert solution(\"22 1\\n\") == \"21\\n\"\nassert solution(\"23 1\\n\") == \"22\\n\"\nassert solution(\"24 1\\n\") == \"23\\n\"\nassert solution(\"25 1\\n\") == \"24\\n\"\nassert solution(\"26 1\\n\") == \"25\\n\"\nassert solution(\"27 1\\n\") == \"26\\n\"\nassert solution(\"28 1\\n\") == \"27\\n\"\nassert solution(\"29 1\\n\") == \"28\\n\"\nassert solution(\"30 1\\n\") == \"29\\n\"\nassert solution(\"31 1\\n\") == \"30\\n\"\nassert solution(\"32 1\\n\") == \"31\\n\"\nassert solution(\"33 1\\n\") == \"32\\n\"\nassert solution(\"34 1\\n\") == \"33\\n\"\nassert solution(\"35 1\\n\") == \"34\\n\"\nassert solution(\"36 1\\n\") == \"35\\n\"\nassert solution(\"37 1\\n\") == \"36\\n\"\nassert solution(\"38 1\\n\") == \"37\\n\"\nassert solution(\"39 1\\n\") == \"38\\n\"\nassert solution(\"40 1\\n\") == \"39\\n\"\nassert solution(\"41 1\\n\") == \"40\\n\"\nassert solution(\"42 1\\n\") == \"41\\n\"\nassert solution(\"43 1\\n\") == \"42\\n\"\nassert solution(\"44 1\\n\") == \"43\\n\"\nassert solution(\"45 1\\n\") == \"44\\n\"\nassert solution(\"46 1\\n\") == \"45\\n\"\nassert solution(\"47 1\\n\") == \"46\\n\"\nassert solution(\"48 1\\n\") == \"47\\n\"\nassert solution(\"49 1\\n\") == \"48\\n\"\nassert solution(\"50 1\\n\") == \"49\\n\"\nassert solution(\"51 1\\n\") == \"50\\n\"\nassert solution(\"52 1\\n\") == \"51\\n\"\nassert solution(\"53 1\\n\") == \"52\\n\"\nassert solution(\"54 1\\n\") == \"53\\n\"\nassert solution(\"55 1\\n\") == \"54\\n\"\nassert solution(\"56 1\\n\") == \"55\\n\"\nassert solution(\"57 1\\n\") == \"56\\n\"\nassert solution(\"58 1\\n\") == \"57\\n\"\nassert solution(\"59 1\\n\") == \"58\\n\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == \"1\\n\"\nassert solution(\"1 2\") == \"2\\n\"\nassert solution(\"3 2 1 3\") == \"1\\n2\\n3\\n\"\nassert solution(\"1 1 1 1\") == \"1\\n1\\n1\\n1\\n\"\nassert solution(\"4 3\") == \"1\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"2 3\") == \"1\\n2\\n3\\n\"\nassert solution(\"3 4\") == \"1\\n1\\n1\\n2\\n2\\n3\\n3\\n\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\", \"Sample Output: 1\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"2 1\\n\") == \"1\\n\"\nassert solution(stdin=\"1 1\\n\") == \"1\\n\"\nassert solution(stdin=\"3 1\\n\") == \"1\\n\"\nassert solution(stdin=\"4 1\\n\") == \"1\\n\"\nassert solution(stdin=\"5 1\\n\") == \"1\\n\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == \"1\"\n"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1', 'Test failed'\nprint(1)"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n\") == \"1\\n\"\nassert solution(\"3 3\\n\") == \"2\\n\"\nassert solution(\"4 3\\n\") == \"1\\n\"\nassert solution(\"5 4\\n\") == \"3\\n\"\nassert solution(\"6 5\\n\") == \"4\\n\"\nassert solution(\"7 6\\n\") == \"5\\n\"\nassert solution(\"8 7\\n\") == \"6\\n\"\nassert solution(\"9 8\\n\") == \"7\\n\"\nassert solution(\"10 9\\n\") == \"8\\n\"\nassert solution(\"11 10\\n\") == \"9\\n\"\nassert solution(\"12 11\\n\") == \"10\\n\"\nassert solution(\"13 12\\n\") == \"11\\n\"\nassert solution(\"14 13\\n\") == \"12\\n\"\nassert solution(\"15 14\\n\") == \"13\\n\"\nassert solution(\"16 15\\n\") == \"14\\n\"\nassert solution(\"17 16\\n\") == \"15\\n\"\nassert solution(\"18 17\\n\") == \"16\\n\"\nassert solution(\"19 18\\n\") == \"17\\n\"\nassert solution(\"20 19\\n\") == \"18\\n\"\nassert solution(\"21 20\\n\") == \"19\\n\"\nassert solution(\"22 21\\n\") == \"20\\n\"\nassert solution(\"23 22\\n\") == \"21\\n\"\nassert solution(\"24 23\\n\") == \"22\\n\"\nassert solution(\"25 24\\n\") == \"23\\n\"\nassert solution(\"26 25\\n\") == \"24\\n\"\nassert solution(\"27 26\\n\") == \"25\\n\"\nassert solution(\"28 27\\n\") == \"26\\n\"\nassert solution(\"29 28\\n\") == \"27\\n\"\nassert solution(\"30 29\\n\") == \"28\\n\"\nassert solution(\"31 30\\n\") == \"29\\n\"\nassert solution(\"32 31\\n\") == \"30\\n\"\nassert solution(\"33 32\\n\") == \"31\\n\"\nassert solution(\"34 33\\n\") == \"32\\n\"\nassert solution(\"35 34\\n\") == \"33\\n\"\nassert solution(\"36 35\\n\") == \"34\\n\"\nassert solution(\"37 36\\n\") == \"35\\n\"\nassert solution(\"38 37\\n\") == \"36\\n\"\nassert solution(\"39 38\\n\") == \"37\\n\"\nassert solution(\"40 39\\n\") == \"38\\n\"\nassert solution(\"41 40\\n\") == \"39\\n\"\nassert solution(\"42 41\\n\") == \"40\\n\"\nassert solution(\"43 42\\n\") == \"41\\n\"\nassert solution(\"44 43\\n\") == \"42\\n\"\nassert solution(\"45 44\\n\") == \"43\\n\"\nassert solution(\"46 45\\n\") == \"44\\n\"\nassert solution(\"47 46\\n\") == \"45\\n\"\nassert solution(\"48 47\\n\") == \"46\\n\"\nassert solution(\"49 48\\n\") == \"47\\n\"\nassert solution(\"50 49\\n\") == \"48\\n\"\nassert solution(\"51 50\\n\") == \"49\\n\"\nassert solution(\"52 51\\n\") == \"50\\n\"\nassert solution(\"53 52\\n\") == \"51\\n\"\nassert solution(\"54 53\\n\") == \"52\\n\"\nassert solution(\"55 54\\n\") == \"53\\n\"\nassert solution(\"56 55\\n\") == \"54\\n\"\nassert solution(\"57 56"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\") == \"1\"\nprint(1)\n"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"8\"\nassert solution(open(\"example_1.txt\", \"r\")) == \"8\"\nassert solution(open(\"example_2.txt\", \"r\")) == \"3\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"8\"\nassert solution() == \"3\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == output, f\"Test failed for the given input.\\nInput: {input}\\nOutput: {output}\\n\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 2\\n2 2 2 2\\n') == '8\\n'\n\nassert solution('4 -3\\n3 -6 -3 12\\n') == '3\\n'"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 2\\n2 2 2 2\\n') == '8\\n'\nassert solution('4 -3\\n3 -6 -3 12\\n') == '3\\n'"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''4 2\n2 2 2 2''') == 8\nassert solution('''4 -3\n3 -6 -3 12''') == 3\n\nfrom typing import List"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 8\nprint(\"All tests passed!\")"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n2 2 2 2\\n\") == \"8\"\nassert solution(\"4 -3\\n3 -6 -3 12\\n\") == \"3\"\n\nfrom typing import List"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"8\"\n"
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\\n\") == \"11\"\nassert solution(\"4 2 1 300 1000\\na A\\nA aa\\naA aa\\nAa aa\\nA a\\n\") == \"5\"\n"
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Testcase {test_case} failed. Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\") == \"11\\n\"\nassert solution(\"4 2 1 300 1000\\nA A\\nA aa\\naa AA\\nAA a\") == \"5\\n\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\") == \"11\"\nassert solution(\"4 2 1 300 1000\\na A\\nA aa\\naA aa\\nA aa\\nA aa\\nA aa\") == \"5\"\n"
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"11\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\") == \"11\"\nassert solution(\"4 2 1 300 1000\\nA A\\nA aa\\naa AA\\nA\") == \"5\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"11\", \"Expected output: 11, but got: {}\".format(solution())"
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\") == \"11\"\nassert solution(\"4 2 1 300 1000\\nA A\\nA aa\\naa AA\\nAA a\") == \"5\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"3 5 3 1 8\nBerBank University\nUniversity BerMall\nUniversity BerBank\"\"\") == \"11\"\n\nassert solution(\"\"\"4 2 1 300 1000\na A\nA aa\naa AA\nAA a\"\"\") == \"5\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\\n\") == \"11\"\nassert solution(\"4 2 1 300 1000\\na A\\nA aa\\naA AA\\nA aaA\") == \"5\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"YES\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\\n4\\n1 1 1 4\") == \"YES\"\nassert solution(\"Input\\n5\\n1 1 5 2 1\") == \"NO\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"YES\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 1 1 4\") == \"YES\"\nassert solution(\"5\\n1 1 5 2 1\") == \"NO\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 1 1 4\\n\") == \"YES\\n\"\nassert solution(\"5\\n1 1 5 2 1\\n\") == \"NO\\n\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"YES\\n\", \"The output should be YES\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Incorrect output: {solution(input())}!= {output}\"\nfor i in range(n):\n    c_i = int(input())\n    assert 1 <= c_i <= n, f\"Invalid input: c_{i} must be between 1 and {n}\"\nprint(\"YES\")"
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n1 1 1 4') == 'YES\\n'\nassert solution('5\\n1 1 5 2 1') == 'NO\\n'"
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 1 1 4\") == \"YES\\n\"\nassert solution(\"5\\n1 1 5 2 1\") == \"NO\\n\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 1 1 4\") == \"YES\"\nassert solution(\"5\\n1 1 5 2 1\") == \"NO\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\\n\") == \"-15\\n\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"1\\n\"\nassert solution(\"3\\n5 1 -5\\n\") == \"-5\\n\"\nassert solution(\"2\\n900 1000\\n\") == \"1100\\n\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\\n\\n4\\n1 1 1 1\\n\\n3\\n5 1 -5\\n\\n2\\n900 1000\\n\") == \"15\\n\"\nassert solution(\"4\\n1 1 1 1\\n\\n3\\n5 1 -5\\n\\n2\\n900 1000\\n\") == \"1\\n\"\nassert solution(\"3\\n5 1 -5\\n\\n2\\n900 1000\\n\") == \"-5\\n\"\nassert solution(\"2\\n900 1000\\n\") == \"1100\\n\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\") == \"-15\"\nassert solution(\"4\\n1 1 1 1\") == \"1\"\nassert solution(\"3\\n5 1 -5\") == \"-5\"\nassert solution(\"2\\n900 1000\") == \"1100\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\") == \"-15\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"3\\n5 1 -5\") == \"-5\\n\"\nassert solution(\"2\\n900 1000\") == \"1100\\n\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Input\\n5\\n10 5 0 -5 -10\\n\") == \"-15\"\nassert solution(\"Input\\n4\\n1 1 1 1\\n\") == \"1\"\nassert solution(\"Input\\n3\\n5 1 -5\\n\") == \"-5\"\nassert solution(\"Input\\n2\\n900 1000\\n\") == \"1100\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\\n\\n4\\n1 1 1 1\\n\\n3\\n5 1 -5\\n\\n2\\n900 1000\") == \"-15\\n\"\nassert solution(\"4\\n1 1 1 1\\n\\n3\\n5 1 -5\\n\\n2\\n900 1000\") == \"1\\n\"\nassert solution(\"3\\n5 1 -5\\n\\n2\\n900 1000\") == \"-5\\n\"\nassert solution(\"2\\n900 1000\") == \"1100\\n\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n10 5 0 -5 -10\\n\\n4\\n1 1 1 1\\n\\n3\\n5 1 -5\\n\\n2\\n900 1000') == '-15\\n'\nassert solution('4\\n1 1 1 1\\n\\n3\\n5 1 -5\\n\\n2\\n900 1000') == '1\\n'\nassert solution('3\\n5 1 -5\\n\\n2\\n900 1000') == '-5\\n'\nassert solution('2\\n900 1000') == '1100\\n'"
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\") == \"-15\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"3\\n5 1 -5\") == \"-5\\n\"\nassert solution(\"2\\n900 1000\") == \"1100\\n\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1100\", \"Incorrect output\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n10 5 0 -5 -10\\n\\n4\\n1 1 1 1\\n\\n3\\n5 1 -5\\n\\n2\\n900 1000\\n') == '1100'"
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 'YES', \"Please implement the solution\"\n"
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n1 2\\n') == 'YES'\nassert solution('3\\n1 2\\n2 3\\n') == 'NO'\nassert solution('5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n') == 'NO'\nassert solution('6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n') == 'YES'"
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"YES\"\nassert solution(\"3\\n1 2\\n2 3\\n\") == \"NO\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"NO\"\nassert solution(\"6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"YES\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: '{expected_output}', Received output: '{solution(input())}'\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Input\\n2\\n1 2\\nOutput\\nYES\\nInput\\n3\\n1 2\\n2 3\\nOutput\\nNO\\nInput\\n5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\nOutput\\nYES\") == \"YES\"\nassert solution(\"Input\\n3\\n1 2\\n2 3\\nOutput\\nNO\\nInput\\n5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\nOutput\\nYES\") == \"NO\"\nassert solution(\"Input\\n5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\nOutput\\nYES\") == \"NO\"\nassert solution(\"Input\\n6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\nOutput\\nYES\") == \"YES\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Input\") == \"YES\"\nassert solution(\"Input\\n3\\n2 3\") == \"NO\"\nassert solution(\"Input\\n5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\") == \"NO\"\nassert solution(\"Input\\n6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\") == \"YES\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('Input\\n2\\n1 2\\n\\nOutput\\nYES\\nInput\\n3\\n1 2\\n2 3\\n\\nOutput\\nNO\\nInput\\n5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\\nOutput\\nYES\\n') == 'YES\\n'\nassert solution('Input\\n3\\n1 2\\n2 3\\n\\nOutput\\nNO\\nInput\\n5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\\nOutput\\nNO\\nInput\\n6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\\nOutput\\nYES\\n') == 'NO\\n'\nassert solution('Input\\n5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\\nOutput\\nNO\\nInput\\n6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\\nOutput\\nYES\\n') == 'NO\\n'\n"
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\\n2\\n1 2\\n\") == \"YES\"\nassert solution(\"Input\\n3\\n1 2\\n2 3\\n\") == \"NO\"\nassert solution(\"Input\\n5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"NO\"\nassert solution(\"Input\\n6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"YES\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"YES\"\nassert solution(\"3\\n1 2\\n2 3\\n\") == \"NO\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"NO\"\nassert solution(\"6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"YES\"\n\nfrom typing import List"
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    2\n    1 2\n    2 3\n    3 1\n    ''') == 'YES'\n\nassert solution('''\n    3\n    1 2\n    2 3\n    3 1\n    ''') == 'NO'\n\nassert solution('''\n    5\n    1 2\n    1 3\n    1 4\n    2 5\n    2 6\n    ''') == 'NO'\n\nassert solution('''\n    6\n    1 2\n    1 3\n    1 4\n    2 5\n    2 6\n    ''') == 'YES'"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\\n2\\n2 6\\n\") == \"1\\n2 6\\n\"\nassert solution(\"2\\n2 6\\n\") == \"0\\n2\\n\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\\n\" + \"2 3\" + \"\\n\"\nassert solution(stdin) == \"0\\n\" + \"2 3\" + \"\\n\"\nassert solution(stdin) == \"1\\n\" + \"6\" + \"\\n\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == output, f\"Output: {output}, Expected: {solution(stdin)}\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 1\nassert solution(2) == 0"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 1\nassert solution(2) == 0\n\nfrom itertools import permutations"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\\n2\\n\"\nassert solution() == \"1\\n2\\n3\\n4\\n\"\nassert solution() == \"1\\n2\\n3\\n4\\n5\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n1\\n2\\n\"\nassert solution() == \"0\\n1\\n2\\n3\\n\"\nassert solution() == \"0\\n1\\n2\\n3\\n4\\n\"\nassert solution() == \"0\\n1\\n2\\n3\\n4\\n5\\n\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"The function returns incorrect output for input {input()}, expected output {expected_output}\"\n\nfrom collections import defaultdict\nfrom bisect import bisect_left"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([3]) == 1\nassert solution([2]) == 0\nassert solution([2, 6]) == 0"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1 2 3\\n2\\n2 6') == '1\\n2\\n'\n\nassert solution('2\\n2 6') == '0\\n'"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\\n2\\n2 6\") == \"1\\n2 6\\n\"\nassert solution(\"2\\n2 6\") == \"0\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\naab\\nccb\") == \"6\\n\"\nassert solution(\"5\\nabc\\ndef\\nghi\") == \"128\\n\"\nassert solution(\"6\\naabbbccc\\ndddddddd\\ngghhhhhhh\") == \"2000\\n\"\nassert solution(\"1\\naabb\\nccc\") == \"1\\n\"\nassert solution(\"1\\naabb\\nccc\") == \"1\\n\"\nassert solution(\"3\\nabc\\ndef\\nghi\\n\") == \"12\\n\"\nassert solution(\"2\\naaa\\nbbbb\\nccc\\ndddd\") == \"12\\n\"\nassert solution(\"1\\na\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\\nk\\nl\\nm\\nn\\no\\np\\nq\\nr\\ns\\nt\\nu\\nv\\nw\\nx\\ny\\nz\\n\") == \"1000000007\\n\"\nassert solution(\"1\\naaa\\n\") == \"1\\n\"\nassert solution(\"1\\na\\n\") == \"1\\n\"\nassert solution(\"1\\nb\\n\") == \"1\\n\"\nassert solution(\"1\\nc\\n\") == \"1\\n\"\nassert solution(\"1\\nd\\n\") == \"1\\n\"\nassert solution(\"1\\ne\\n\") == \"1\\n\"\nassert solution(\"1\\nf\\n\") == \"1\\n\"\nassert solution(\"1\\ng\\n\") == \"1\\n\"\nassert solution(\"1\\nh\\n\") == \"1\\n\"\nassert solution(\"1\\ni\\n\") == \"1\\n\"\nassert solution(\"1\\nj\\n\") == \"1\\n\"\nassert solution(\"1\\nk\\n\") == \"1\\n\"\nassert solution(\"1\\nl\\n\") == \"1\\n\"\nassert solution(\"1\\nm\\n\") == \"1\\n\"\nassert solution(\"1\\nn\\n\") == \"1\\n\"\nassert solution(\"1\\no\\n\") == \"1\\n\"\nassert solution(\"1\\np\\n\") == \"1\\n\"\nassert solution(\"1\\nq\\n\") == \"1\\n\"\nassert solution(\"1\\nr\\n\") == \"1\\n\"\nassert solution(\"1\\ns\\n\") == \"1\\n\"\nassert solution(\"1\\nt\\n\") == \"1\\n\"\nassert solution(\"1\\nu\\n\") == \"1\\n\"\nassert solution(\"1\\nv\\n\") == \"1\\n\"\nassert solution(\"1\\nw\\n\") == \"1\\n\"\nassert solution(\"1\\nx\\n\") == \"1\\n\"\nassert solution(\"1\\ny\\n\") == \"1\\n\"\nassert solution(\"1\\nz\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\naab\\nccb\") == \"6\""
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\naab\\nccb\") == \"6\\n\", \"Test case 1 failed.\"\nassert solution(\"3\\naab\\nccc\") == \"0\\n\", \"Test case 2 failed.\"\nassert solution(\"4\\naaabbbb\\nnncccddd\") == \"4\\n\", \"Test case 3 failed.\"\nassert solution(\"3\\naabb\\nccc\") == \"9\\n\", \"Test case 4 failed.\"\nassert solution(\"2\\naba\\nabb\") == \"12\\n\", \"Test case 5 failed.\""
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\naab\\nccb\\n\") == \"6\""
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\naab\\nccb\\n\") == \"6\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\naab\\nccb\") == \"6\"\nprint(\"All tests passed successfully\")"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\naab\\nccb\\n\") == \"6\"\nassert solution(\"4\\nnaaa\\naaaa\\n\") == \"5\"\nassert solution(\"5\\npaaa\\npaaa\\n\") == \"3\"\nassert solution(\"6\\nnnnnn\\nnnnnn\\nnnnnn\\nnnnnn\\n\") == \"1\"\nassert solution(\"7\\naaabbb\\nccddddeeeeee\\n\") == \"2\""
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '6', \"Expected '6', got '{}'\".format(solution(input()))"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\naab\\nccb\") == 6\n"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(None) == \"The number of ways to paint the dominoes is modulo 1000000007.\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(input())) == \"YES\" or solution(str(input())) == \"NO\"\n"
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output\nfor input_ in [sample_input1, sample_input2]:\n    assert solution(input_) == sample_output\nprint(\"All tests passed!\")"
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\\n\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\\n\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\\n\") == \"NO\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\\n\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\\n\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\\n\") == \"NO\"\n\nfrom collections import Counter"
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == output, f\"Expected {output}, got {solution(input)}\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"NO\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\\n\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\\n\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\\n\") == \"NO\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\nfor i in range(test_case):\n    n, m, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    table = [[0] * (m - k + 1) for _ in range(n)]\n    for i in range(n):\n        for j in range(m - k + 1):\n            table[i][j] = a[i]\n            a.pop(0)\n    print(solution(a))"
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\") == \"NO\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\\n\") == \"4\\n\"\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\\n\") == \"3\\n\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\\n\") == \"4\\n\"\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\\n\") == \"3\\n\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\\n\") == \"4\"\n\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\\n\") == \"3\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\") == \"4\"\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\") == \"3\"\n\nsolution = \"\"\"def solution(stdin: str) -> str:\n    n, m = map(int, stdin.split())\n    black_rectangles = set(map(tuple, input().split()))\n    total_cost = 0\n    for rectangle in black_rectangles:\n        total_cost += min(rectangle[0], rectangle[1]) * min(rectangle[2], rectangle[3])\n    return str(total_cost)\n\"\"\"\n\nprint(solution(\"10 2\\n4 1 5 10\\n1 4 10 5\")) # Output: \"4\"\nprint(solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\")) # Output: \"3\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\\n\") == \"4\\n\"\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\\n\") == \"3\\n\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\nr'''\n10 2\n4 1 5 10\n1 4 10 5\n'''\n) == '4'\n\nassert solution(\nr'''\n7 6\n2 1 2 1\n4 2 4 3\n2 5 2 5\n2 3 5 3\n1 2 1 2\n3 2 5 3\n'''\n) == '3'\n\nassert solution(\nr'''\n10 2\n4 1 5 10\n1 4 10 5\n4 2 4 3\n2 5 2 5\n2 3 5 3\n1 2 1 2\n3 2 5 3\n2 1 1 1\n4 1 5 10\n1 4 10 5\n'''\n) == '4'"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\\n\") == \"4\"\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\\n\") == \"3\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"4\", \"Your solution should return 4.\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"3\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\").read()) == \"Output\"\nassert solution(open(\"input2.txt\").read()) == \"Output\"\nassert solution(open(\"input3.txt\").read()) == \"Output\"\nassert solution(open(\"input4.txt\").read()) == \"Output\"\nassert solution(open(\"input5.txt\").read()) == \"Output\""
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {index+1} failed\"\n"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10') == 'no\\nyes\\nyes\\nno\\nyes'\n"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10') == 'no\\nyes\\nyes\\nno\\nyes'"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"yes\\n\""
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_file) == expected_output, f\"Test case {i+1} failed: {solution(input_file)}!= {expected_output}\" for i, (input_file, expected_output) in enumerate(test_cases)"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10\") == \"no\\nyes\\nyes\\nyes\""
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10\") == \"no\\nyes\\nyes\\nno\\nyes\""
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n5\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10\") == \"no\\nyes\\nyes\\nyes\\nno\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"The solution is incorrect.\"\n"
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"\"\"2\n1 0 2 1 0\"\"\"\n\nassert solution(input()) == \"\"\"3\n5 2 0 1\"\"\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\\n\") == \"2\\n1 0 2 1 0\\n\"\n\nassert solution(\"4 2\\n1 4\\n2 4\\n\") == \"3\\n5 2 0 1\\n\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\\n1 0 2 1 0\\n\"\n\nassert solution(stdin) == \"3\\n5 2 0 1\\n\"\n\nassert solution(stdin) == \"3\\n5 2 0 1\\n\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 3\\n2 5\\n4 5\") == \"2\"\nassert solution(\"4 2\\n1 4\\n2 4\") == \"3\"\nassert solution(\"1 2\\n2 3\") == \"2\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 3\\n1 3\\n2 5\\n4 5') == '2\\n1 0 2 1 0'\nassert solution('4 2\\n1 4\\n2 4') == '3\\n5 2 0 1'"
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\\n\") == \"2\\n1 0 2 1 0\\n\"\nassert solution(\"4 2\\n1 4\\n2 4\\n\") == \"3\\n5 2 0 1\\n\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\\n\") == \"2\\n1 0 2 1 0\\n\"\nassert solution(\"4 2\\n1 4\\n2 4\\n\") == \"3\\n5 2 0 1\\n\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 3\\n1 3\\n2 5\\n4 5') == '2\\n1 0 2 1 0\\n\\n3\\n5 2 0 1'\nassert solution('4 2\\n1 4\\n2 4') == '3\\n5 2 0 1'"
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '2\\n1 0 2 1 0\\n5'\nassert solution() == '3\\n5 2 0 1'\n"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"YES\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\\n\") == \"NO\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"YES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n\") == \"NO\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n3 3\n1 0 1\n2 1 3\n2 1 2\n2 2 3\n''') == 'NO'\nassert solution('''\n3 3\n1 0 1\n3 1 2 3\n1 2\n2 1 3\n''') == 'YES'\nassert solution('''\n3 3\n1 0 1\n3 1 2 3\n2 1 2\n1 3\n''') == 'NO'"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'NO'"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\") == \"NO\\n\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"YES\\n\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n\") == \"NO\\n\"\n\nprint(\"All test cases pass\")"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Input:\\n{input()}\\nOutput:\\n{output()}\\n\"\n"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\\n\") == \"YES\\n\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"NO\\n\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n\") == \"YES\\n\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"NO\"\n"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"YES\"\nassert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\\n\") == \"NO\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"YES\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Input\\n3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\\n\") == \"YES\"\nassert solution(\"Input\\n3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"NO\"\nassert solution(\"Input\\n3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n\") == \"NO\""
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"(((#)((#))\\n\") == \"1\\n2\\n\"\nassert solution(\"()((#((#(#()\") == \"2\\n2\\n1\\n\"\nassert solution(\"#\\n\") == \"-1\\n\"\nassert solution(\"#\\n#\") == \"-1\\n\"\nassert solution(\"#\\n#\") == \"-1\\n\"\nassert solution(\"#\\n#\") == \"-1\\n\""
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('(((#)((#)')) == '12222')\nassert solution('()((#((#(#()')) == '222122')\nassert solution('#') == '-1'\nassert solution('(#)') == '-1'"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"(((#)((#)\n\nOutput\n1\n2\n\nInput\n()((#((#(#()\n\nOutput\n2\n2\n1\nInput\n"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''()((#((#(#()\n''') == 1\nassert solution('''#\n''') == -1\nassert solution
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"(((#)((#)\")) == \"1\\n2\\n\"\nassert solution(\"()((#((#(#()\")) == \"2\\n2\\n1\\n\"\nassert solution(\"#\") == \"-1\\n\"\nassert solution(\"(#)\") == \"-1\\n\"\nassert solution(\"\") == \"-1\\n\""
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n(((#)((#)\n''') == 1\nassert solution('''\n()((#((#(#()\n''') == 2\nassert solution('''\n"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"((#)((#))\") == \"1\\n2\\n\", \"Example 1\")\nassert solution(\"()((#((#(#()\")) == \"2\\n2\\n1\\n\", \"Example 2\")\nassert solution(\"#\") == \"-1\\n\", \"Example 3\")\nassert solution(\"(#)\") == \"-1\\n\", \"Example 4\")\nprint(\"All test cases pass\")"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('') == '1', \"Test case 1\"\nassert solution('((#)((#)))') == '1', \"Test case 2\"\nassert solution('()((#((#(#()')) == '2 2 1', \"Test case 3\"\nassert solution('#') == '-1', \"Test case 4\"\nassert solution('(#)') == '-1', \"Test case 5\""
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('((#)((#))') == '1\\n2\\n')\nassert solution('()((#((#(#()'))') == '2\\n2\\n1\\n')\nassert solution('#') == '-1\\n'\nassert solution('#') == '-1\\n'\n"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"(((#)((#)\")) == \"1\\n2\"\nassert solution(\"()((#((#(#()\")) == \"2\\n2\\n1\"\nassert solution(\"#\") == \"-1\"\nassert solution(\"#\") == \"-1\""
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n4 0\\n0 4\") == \"-1\\nxoxox\"\nassert solution(\"4 0\\n0 4\") == \"16\\no\"\nassert solution(\"0 4\") == \"-16\\nxxxx\""
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"-1\\nxoxox\"\nassert solution(\"4 0\") == \"16\\noooo\"\nassert solution(\"0 4\") == \"-16\\nxxxx\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n4 0\\n0 4\\n\") == \"16\\noooo\\nxxxx\\n\"\nassert solution(\"10 3\\n2 2\\n1 2\\n\") == \"24\\nooo\\nooo\\n\"\nassert solution(\"5 1\\n1 3\\n2 3\\n\") == \"6\\nxoo\\nooo\\n\"\nassert solution(\"6 4\\n3 2\\n4 3\\n\") == \"16\\nooxx\\nooxx\\n\"\nassert solution(\"1 10\\n10 10\\n10 10\\n\") == \"55\\nxxxx\\nxxxx\\n\"\nassert solution(\"1 10\\n10 10\\n10 10\\n\") == \"55\\nxxxx\\nxxxx\\n\""
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r'2 3') == '-1\\nxoxox'\nassert solution(r'4 0') == '16\\no'\nassert solution(r'0 4') == '-16\\no'\n"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(solution) == \"1\"\nassert solution(solution(\"2 3\")) == \"-1\"\nassert solution(solution(\"4 0\")) == \"16\"\nassert solution(solution(\"0 4\")) == \"-16\""
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Got {solution(input())} instead of {expected}\"\n"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output\nassert solution(\"2 3\") == '-1\\nxoxox'\nassert solution(\"4 0\") == '16\\no'\nassert solution(\"0 4\") == '-16\\no'\nassert solution(\"\") == ''\nassert solution(\"def solution(stdin: str) -> str:\\n    pass\") == '-1'\nassert solution(\"Input\\n0 4\") == '-16\\no'\n\nfrom typing import List"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.readline().strip()) == '-1'\nassert solution(sys.stdin.readline().strip()) == 'xoxox'\nassert solution(sys.stdin.readline().strip()) == '16'\nassert solution(sys.stdin.readline().strip()) == '-16'\nassert solution(sys.stdin.readline().strip()) == 'xxxx'"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '-1\\nxxxx'\nassert solution(stdin='2 3\\n') == '-1\\nxoxox\\n'\nassert solution(stdin='4 0\\n') == '16\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"-1\"\nassert solution(\"4 0\") == \"16\"\nassert solution(\"0 4\") == \"-16\""
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"17\""
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"17\", \"Incorrect answer. Please check the test case.\"\n\nfrom typing import List\n"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"17\"\n"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '17\\n'\nprint('Test passed')"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1\") == \"17\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"17\"\n"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"17\", \"Sample Input does not satisfy the given constraints.\""
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1\") == \"17\"\n"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1\") == \"17\"\n"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1\") == \"17\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n2 3\n1 2 1\n2 1 2\n''') == '2 2 2\\n2 2 2\\n'\n\nassert solution('''\n2 2\n1 2\n3 4\n''') == '2 3\\n3 2\\n'"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n1 2 1\\n2 1 2\\n\") == \"2 2 2\\n2 2 2\\n\"\nassert solution(\"2 2\\n1 2\\n3 4\\n\") == \"2 3\\n3 2\\n\"\n"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == \"\"\"2 2 \n2 2 \n\"\"\"\n\nassert solution(open('example_input.txt', 'r')) == \"\"\"2 3 \n3 2 \n\"\"\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n1 2 1\\n2 1 2\") == \"2 2 2\\n2 2 2\\n\"\nassert solution(\"2 2\\n1 2\\n3 4\") == \"2 3 \\n3 2 \""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '''\n2 2 \n2 2 \n'''"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == solution(stdin)"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n1 2 1\\n2 1 2\") == \"2 2 2\\n2 2 2\\n\"\nassert solution(\"2 2\\n1 2\\n3 4\") == \"2 3\\n3 2\\n\"\n"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n1 2 1\\n2 1 2\\n\") == \"2 2 2\\n2 2 2\\n\"\nassert solution(\"2 2\\n1 2\\n3 4\\n\") == \"2 3\\n3 2\\n\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n1 2 1\\n2 1 2\") == \"2 2 2\\n2 2 2\\n\"\nassert solution(\"2 2\\n1 2\\n3 4\") == \"2 3\\n3 2 \"\n\nfrom typing import List"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"332748119\"\nassert solution(open(\"input_2.txt\", \"r\")) == \"332748119\"\nassert solution(open(\"input_3.txt\", \"r\")) == \"160955686\"\nassert solution(open(\"input_4.txt\", \"r\")) == \"185138929\"\nassert solution(open(\"input_5.txt\", \"r\")) == \"974061117\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_data) == output_data, f\"Test failed for input: {input_data}, expected output: {output_data}, got: {solution(input_data)}\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 1\\n0 1\\n2 1\\n') == '332748119\\n332748119\\n'\nassert solution('1 2\\n1\\n1\\n') == '3\\n'\nassert solution('3 3\\n0 1 1\\n4 3 5\\n') == '160955686\\n185138929\\n974061117\\n'"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('Input\\n2 1\\n0 1\\n2 1\\n') == 'Output\\n332748119\\n332748119\\n'\nassert solution('Input\\n1 2\\n1\\n1\\n') == 'Output\\n3\\n'\nassert solution('Input\\n3 3\\n0 1 1\\n4 3 5\\n') == 'Output\\n160955686\\n185138929\\n974061117\\n'"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '332748119\\n332748119\\n3\\n160955686\\n185138929\\n974061117'"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"332748119\"\nassert solution(stdin) == \"332748119\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"160955686\"\nassert solution(stdin) == \"185138929\"\nassert solution(stdin) == \"974061117\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1 5 2 6\") == \"11\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"6\\n\"\nassert solution(\"5\\n1 100 101 100 1\") == \"102\\n\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3 1 5 2 6\") == \"11\"\nassert solution(\"5\\n1 2 3 4 5\") == \"6\"\nassert solution(\"5\\n1 100 101 100 1\") == \"102\"\n"
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n3 1 5 2 6\\n5\\n1 2 3 4 5\\n5\\n1 100 101 100 1\\n\") == \"11\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n5\\n1 100 101 100 1\\n\") == \"6\\n\"\nassert solution(\"5\\n1 100 101 100 1\\n\") == \"102\\n\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1\\n5\\n2\\n6\") == \"11\"\nassert solution(\"5\\n1\\n2\\n3\\n4\\n5\") == \"6\"\nassert solution(\"5\\n1\\n100\\n101\\n100\\n1\") == \"102\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 11\nassert solution(2) == 6\nassert solution(3) == 102"
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1 5 2 6\") == \"11\\n\"\nassert solution(\"5 1 2 3 4 5\") == \"6\\n\"\nassert solution(\"1 100 101 100 1\") == \"102\\n\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output() # check if the output matches the expected output"
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 5 2 6\\n\") == \"11\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"6\"\nassert solution(\"5\\n1 100 101 100 1\\n\") == \"102\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3 1 5 2 6\\n5\\n1 2 3 4 5\\n5\\n1 100 101 100 1\\n\") == \"11\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n5\\n1 100 101 100 1\\n\") == \"6\\n\"\nassert solution(\"5\\n1 100 101 100 1\\n\") == \"102\\n\"\n"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"Yes\\n\"\nassert solution() == \"No\\n\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\\n') == 'Yes'\nassert solution('3 1\\n1 3\\n2 3\\n') == 'No'\n\nassert solution('14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\\n') == 'Yes'\nassert solution('3 1\\n1 3\\n2 3\\n') == 'No'"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"Yes\"\n"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\") == \"Yes\"\nassert solution(\"3 1\\n1 3\\n2 3\") == \"No\"\n"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\") == \"Yes\\n\"\nassert solution(\"3 1\\n1 3\\n2 3\") == \"No\\n\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"Yes\", \"Please provide the correct input\"\nassert solution(stdin) == \"No\", \"The given graph is not a hedgehog\"\n"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"Yes\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6') == 'Yes'\nassert solution('3 1\\n1 3\\n2 3') == 'No'\n"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"Yes\"\n"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\") == \"Yes\"\nassert solution(\"3 1\\n1 3\\n2 3\") == \"No\"\n"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n.#.\n###\n##.\n''') == '1\\n'\n\nassert solution('''\n4 2\n##\n.#\n.#\n##\n''') == '-1\\n'\n\nassert solution('''\n4 5\n....#\n####.\n.###.\n.#...\n''') == '2\\n'\n\nassert solution('''\n2 1\n.\n"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(example_input1) == \"1\", \"Solution for example input 1 failed\"\nassert solution(example_input2) == \"-1\", \"Solution for example input 2 failed\"\nassert solution(example_input3) == \"2\", \"Solution for example input 3 failed\"\nassert solution(example_input4) == \"1\", \"Solution for example input 4 failed\"\nassert solution(example_input5) == \"2\", \"Solution for example input 5 failed\""
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n.#\\n##. \\n\\n4 2\\n##\\n.#\\n.#\\n##\\n\\n4 5\\n....#\\n####. \\n.###.\\n.#... \\n\\n2 1\\n. \\n# \\n\\n3 5\\n.....\\n.....\\n.....\\n\\n\") == \"1\"\nassert solution(\"4 2\\n##\\n.#\\n.#\\n##\\n\\n4 5\\n....#\\n####. \\n.###.\\n.#... \\n\\n2 1\\n. \\n# \\n\\n3 5\\n.....\\n.....\\n.....\\n\\n\") == \"-1\"\nassert solution(\"4 5\\n....#\\n####. \\n.###.\\n.#... \\n\\n2 1\\n. \\n# \\n\\n3 5\\n.....\\n.....\\n.....\\n\\n\") == \"2\""
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n#.\\n##. \\n\") == \"1\"\nassert solution(\"4 2\\n##\\n.#\\n##\\n\") == \"0\"\nassert solution(\"4 5\\n....#\\n####. \\n.###. \\n.#... \\n\") == \"2\"\nassert solution(\"2 1\\n. \\n# \\n\") == \"0\"\nassert solution(\"3 5\\n.....\\n.....\\n.....\\n\") == \"0\""
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n#.\\n##.\\n\") == \"1\\n\"\nassert solution(\"4 2\\n##\\n.#\\n.#\\n##\\n\") == \"-1\\n\"\nassert solution(\"4 5\\n....#\\n####.\\n.###.\\n.#...\\n\") == \"2\\n\"\nassert solution(\"2 1\\n. \\n# \\n\") == \"-1\\n\"\nassert solution(\"3 5\\n.....\\n.....\\n.....\\n\") == \"0\\n\""
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n.#.\\n###\\n##. \\n\") == \"1\\n\"\nassert solution(\"4 2\\n##\\n.#\\n.#\\n##\\n\") == \"-1\\n\"\nassert solution(\"4 5\\n....#\\n####. \\n.###. \\n.#... \\n\") == \"2\\n\"\nassert solution(\"2 1\\n. \\n# \\n\") == \"-1\\n\"\nassert solution(\"3 5\\n..... \\n..... \\n..... \\n\") == \"0\\n\""
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('Input\\n3 3\\n.#. \\n###. \\n##. \\n\\nInput\\n4 2\\n##\\n.#\\n.#\\n##\\n\\nInput\\n4 5\\n....# \\n####. \\n.###. \\n.#... \\n\\nInput\\n2 1\\n.\\n# \\n\\nInput\\n3 5\\n.....\\n.....\\n.....\\n\\nOutput\\n1\\n\\nInput\\n4 5\\n.....# \\n####.#\\n#.##.#\\n#...##\\n#...##\\n#...##\\n\\nOutput\\n2\\n\\nInput\\n2 1\\n..## \\n#... \\n\\nOutput\\n-1\\n\\nInput\\n3 5\\n....# \\n#...# \\n#...# \\n#...# \\n#...# \\n\\nOutput\\n0\\n\\n') == 'Output\\n1\\n\\nInput\\n3 5\\n....# \\n#...# \\n#...# \\n#...# \\n#...# \\n\\nOutput\\n0\\n\\n'\n"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n3 3\n.#.\n###\n##.\n''') == '1'\nassert solution('''\n4 2\n##\n.#\n.#\n##\n''') == '-1'\nassert solution('''\n4 5\n....#\n####.\n.###.\n.#...\n''') == '2'\nassert solution('''\n2 1\n.\n"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1\\n\"\n\nassert solution() == \"2\\n\"\n\nassert solution() == \"-1\\n\"\n\nassert solution() == \"2\\n\"\n\nassert solution() == \"-1\\n\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n1 0 2 3\\n\") == \"YES\\n1 2 2 3\\n\"\nassert solution(\"3 10\\n10 10 10\\n\") == \"YES\\n10 10 10\\n\"\nassert solution(\"5 6\\n6 5 6 2 2\\n\") == \"NO\\n\"\nassert solution(\"3 5\\n0 0 0\\n\") == \"YES\\n5 4 2\\n\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1 0 2 3\\n\") == \"YES\\n1 2 2 3\\n\"\nassert solution(\"3 10\\n10 10 10\\n\") == \"YES\\n10 10 10 \\n\"\nassert solution(\"5 6\\n6 5 6 2 2\\n\") == \"NO\\n\"\nassert solution(\"3 5\\n0 0 0\\n\") == \"YES\\n5 4 2\\n\"\n"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"YES\\n1 2 2 3\"\nassert solution(input()) == \"YES\\n10 10 10\"\nassert solution(input()) == \"YES\\n5 4 2\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\\n5 10 15 10 10\"\n"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected, f\"Your solution is incorrect. Expected: {expected}, Received: {solution}\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n1 0 2 3\\n\") == \"YES\\n1 2 2 3\\n\"\nassert solution(\"3 10\\n10 10 10\\n\") == \"YES\\n10 10 10\\n\"\nassert solution(\"5 6\\n6 5 6 2 2\\n\") == \"NO\\n\"\nassert solution(\"3 5\\n0 0 0\\n\") == \"YES\\n5 4 2\\n\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 'YES\\n1 2 2 3\\nYES\\n10 10 10 \\nYES\\n5 4 2'\n"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed for input '{input()}'\\nExpected output: {output}\\nGot: {solution(input())}\"\nfor i in range(int(input())):\n    a, q = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(solution(str(a) + str(q)))\n"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"YES\\n1 2 2 3\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n1 0 2 3\\n\\n3 10\\n10 10 10\\n\\n5 6\\n6 5 6 2 2\\n\\n3 5\\n0 0 0\\n\\nYES\\n1 2 2 3\\nYES\\n10 10 10\\nNO\\nYES\\n5 4 2\\nNO\") == \"YES\\n1 2 2 3\\nYES\\n10 10 10\\nNO\\nYES\\n5 4 2\\nNO\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test cases do not match: {solution(input())}!= {expected_output}\"\n"
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == solution(stdin)"
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\") == \"4 3 6 2\\n\"\nassert solution(\"1\\n42\") == \"42  \\n\"\nassert solution(\"2\\n1 1 1 1\") == \"1 1 \\n\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\", \"No input given.\"\nassert solution(\"2\\n1 1 1 1\") == \"1 1\", \"Test case 1\"\nassert solution(\"2\\n1 1 1 1\\n42\") == \"42 42\", \"Test case 2\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Input\\n4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\\n\") == \"4 3 6 2\", \"The output should be 4 3 6 2\"\nassert solution(\"Input\\n1\\n42\\n\") == \"42\", \"The output should be 42\"\nassert solution(\"Input\\n2\\n1 1 1 1\\n\") == \"1 1\", \"The output should be 1 1\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\") == \"4 3 6 2\\n\"\nassert solution(\"1\\n42\") == \"42 42\\n\"\nassert solution(\"2\\n1 1 1 1\") == \"1 1 1 1\\n\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Input\\n4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\\n\") == \"4 3 6 2\\n\"\nassert solution(\"Input\\n1\\n42\\n\") == \"42  \\n\"\nassert solution(\"Input\\n2\\n1 1 1 1\\n\") == \"1 1\\n\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Input\\n4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\\n\\nOutput\\n4 3 6 2\\nInput\\n1\\n42\\n\\nOutput\\n42 \") == \"4 3 6 2\\n\"\nassert solution(\"Input\\n1\\n42\\n\\nOutput\\n42 \") == \"42 \"\nassert solution(\"Input\\n2\\n1 1 1 1\\n\\nOutput\\n1 1\\n\") == \"1 1\\n\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"4 3 6 2\", \"Incorrect output\"\nassert solution() == \"42 1 1\", \"Incorrect output\"\nassert solution() == \"1 1 1 1\", \"Incorrect output\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\") == \"4 3 6 2\\n\"\nassert solution(\"1\\n42\") == \"42 \nassert solution(\"2\\n1 1 1 1\") == \"1 1\\n\"\n\nfrom itertools import permutations"
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"4 3 6 2\\n42\\n1 1\\n1 1\\n\", \"Test case 1 failed\"\nassert solution() == \"4 3 6 2\\n42\\n1 1\\n1 1\\n\", \"Test case 2 failed\"\nassert solution() == \"4 3 6 2\\n42\\n1 1\\n1 1\\n\", \"Test case 3 failed\"\nassert solution() == \"4 3 6 2\\n42\\n1 1\\n1 1\\n\", \"Test case 4 failed\"\nassert solution() == \"4 3 6 2\\n42\\n1 1\\n1 1\\n\", \"Test case 5 failed\"\nassert solution() == \"4 3 6 2\\n42\\n1 1\\n1 1\\n\", \"Test case 6 failed\"\nassert solution() == \"4 3 6 2\\n42\\n1 1\\n1 1\\n\", \"Test case 7 failed\"\nassert solution() == \"4 3 6 2\\n42\\n1 1\\n1 1\\n\", \"Test case 8 failed\"\nassert solution() == \"4 3 6 2\\n42\\n1 1\\n1 1\\n\", \"Test case 9 failed\"\nassert solution() == \"4 3 6 2\\n42\\n1 1\\n1 1\\n\", \"Test case 10 failed\"\nprint(\"All test cases passed\")\n"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\\n\") == \"3\\n\"\nassert solution(\"3\\n1 1\\n2 1\\n3 1\\n\") == \"6\\n\"\nassert solution(\"4\\n2 1\\n2 2\\n3 1\\n3 2\\n\") == \"6\\n\"\nassert solution(\"3\\n1 1\\n2 1\\n3 1\\n4 1\\n\") == \"6\\n\"\nassert solution(\"3\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n\") == \"6\\n\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\\n\") == \"3\\n\"\nassert solution(\"3\\n1 1\\n2 1\\n3 1\\n\") == \"6\\n\"\nassert solution(\"4\\n2 1\\n2 2\\n3 1\\n3 2\\n\") == \"6\\n\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n1 1\\n1 2\\n1 3') == '3'\nassert solution('3\\n1 1\\n2 1\\n3 1') == '6'\nassert solution('4\\n2 1\\n2 2\\n3 1\\n3 2') == '6'\nprint('All tests passed!')"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\\n\") == \"3\\n\"\nassert solution(\"3\\n1 1\\n2 1\\n3 1\\n\") == \"6\\n\"\nassert solution(\"4\\n2 1\\n2 2\\n3 1\\n3 2\\n\") == \"6\\n\"\nassert solution(\"1\\n2 1\\n3 1\\n\") == \"1\\n\"\nassert solution(\"2\\n3 1\\n\") == \"2\\n\"\nassert solution(\"3\\n4 1\\n\") == \"1\\n\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(solution) == \"1\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"6\"\nassert solution(input()) == \"6\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\\n\") == \"3\"\nassert solution(\"3\\n1 1\\n2 1\\n3 1\\n\") == \"6\"\nassert solution(\"4\\n2 1\\n2 2\\n3 1\\n3 2\\n\") == \"6\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3\\n6\\n6\\n\"\nassert solution(open(\"input.txt\", \"r\")) == \"3\\n6\\n6\\n\"\nassert solution(open(\"input.txt\", \"r\")) == \"3\\n6\\n6\\n\"\nassert solution(open(\"input.txt\", \"r\")) == \"3\\n6\\n6\\n\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"3\\n6\\n6\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1 1\\n1 2\\n1 3\\n') == '3\\n'\nassert solution('3\\n1 1\\n2 1\\n3 1\\n') == '6\\n'\nassert solution('4\\n2 1\\n2 2\\n3 1\\n3 2\\n') == '6\\n'\nassert solution('3\\n1 1\\n2 1\\n3 1\\n') == '3\\n'\nassert solution('3\\n1 1\\n2 1\\n3 1\\n') == '6\\n'"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"6\\n\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n.E.\\nE.E\\n.E.\\n\") == \"1 1\\n2 2\\n3 3\\n\"\nassert solution(\"3\\nEEE\\nE..\\nE.E\\n\") == \"-1\\n\"\nassert solution(\"5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n\") == \"3 3\\n1 3\\n2 2\\n4 4\\n5 3\\n\"\n"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\") == -1\nassert solution(\"3\\n.E.\\nE.E\\n.E.\\n\") == [1, 1]\nassert solution(\"3\\nEEE\\nE..\\nE.E\\n\") == [-1]\nassert solution(\"5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n\") == [3, 3]\nassert solution(\"5\\nEEE\\nE.EE\\nE..E\\n.EE.E\\nEE.EE\\n\") == [-1]"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == output, \"Test failed\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n\") == \"\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n.E.\\nE.E.\\n.E.\\n\") == \"1 1\\n2 2\\n3 3\"\nassert solution(\"3\\nEEE\\nE..\\nE.E.\\n\") == \"-1\"\nassert solution(\"5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n\") == \"3 3\\n1 3\\n2 2\\n4 4\\n5 3\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n.E.\\nE.E\\n.E.\\n\") == \"1 1\\n2 2\\n3 3\"\nassert solution(\"3\\nEEE\\nE..\\nE.E\\n\") == \"-1\"\nassert solution(\"5\\nEE.EE\\nE.EE.\\nE...E\\n.EE.E\\nEE.EE\\n\") == \"3 3\\n1 3\\n2 2\\n4 4\\n5 3\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"-1\" # Test 1\nassert solution() == \"1 1\\n2 2\\n3 3\" # Test 2\nassert solution() == \"-1\" # Test 3\nassert solution() == \"3 3\\n1 3\\n2 2\\n4 4\\n5 3\" # Test 4"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n.E.\\ne.E.\\n.E.\") == \"1 1\\n2 2\\n3 3\"\nassert solution(\"3\\nEEE\\nE..\\nE.E\") == \"-1\"\nassert solution(\"5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n\") == \"3 3\\n1 3\\n2 2\\n4 4\\n5 3\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n.E.\\ne.E\\n.E.\\n\") == \"1 1\\n2 2\\n3 3\"\nassert solution(\"3\\nEEE\\ne..\\nE.E\\n\") == \"-1\"\nassert solution(\"5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n\") == \"3 3\\n1 3\\n2 2\\n4 4\\n5 3\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''3\n.E.\nE.E\n.E.''') == '''1 1\n2 2\n3 3'''\n\nassert solution('''3\nEEE\nE..\nE.E\n''') == '''-1'''\n\nassert solution('''5\nEE.EE\nE.EE.\nE...E\n.EE.E\nEE.EE\n''') == '''3 3\n1 3\n2 2\n4 4\n5 3'''"
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"32\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 2\\n10 -1 2 2 2 2 2 2 -1 10\") == \"32\\n\", \"Test failed\"\nassert solution(\"5 10\\n-1 -1 -1 -1 -1\") == \"-1\\n\", \"Test failed\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10 2\\n10 -1 2 2 2 2 2 2 -1 10') == '32'\nassert solution('5 10\\n-1 -1 -1 -1 -1') == '-1'"
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Output: 32\\n\", \"The output is not correct.\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"The output is not correct. Received: {output}, Expected: {output}\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"32\"\n"
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"32\", \"Test Failed\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Error: Expected {output}, got {solution(input())}\"\n"
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '32\\n'\nassert solution(stdin) == '-1\\n'"
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10 2\\n10 -1 2 2 2 2 2 2 -1 10') == '32\\n'\n\nassert solution('5 10\\n-1 -1 -1 -1 -1') == '-1\\n'"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_data) == expected_output, f\"Solution does not return the expected output.\\nExpected output: {expected_output}\\nGot: {solution(input_data)}\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1 2\\n1 1 1\\n\") == \"3\\n\"\nassert solution(\"4 2 3\\n1 2 4 8\\n\") == \"79\\n\"\n\nfor _ in range(int(input())):\n    n, k, x = map(int, input().split())\n    a = list(map(int, input().split()))\n    result = solution(str(n) + \" \" + str(k) + \" \" + str(x) + \"\\n\")\n    print(result)"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 1 2\\n1 1 1\\n') == '3'\nassert solution('4 2 3\\n1 2 4 8\\n') == '79'\n"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1 2\") == \"3\\n\"\nassert solution(\"4 2 3\") == \"79\\n\"\n"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 1 2\\n1 1 1') == '3'\nassert solution('4 2 3\\n1 2 4 8') == '79'"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1 2\\n1 1 1\\n\") == \"3\\n\"\nassert solution(\"4 2 3\\n1 2 4 8\\n\") == \"79\\n\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2 3\") == \"79\"\nassert solution(\"3 1 2\") == \"3\"\nassert solution(\"5 2 1\") == \"7\"\nassert solution(\"3 1 1\") == \"1\"\nassert solution(\"1000 1000 1000\") == \"1000\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 2\\n1 1 1\\n\") == \"3\"\nassert solution(\"4 2 3\\n1 2 4 8\\n\") == \"79\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 2\\n1 1 1\\n\") == \"3\\n\"\nassert solution(\"4 2 3\\n1 2 4 8\\n\") == \"79\\n\"\n"
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input(\"Enter the value of K: \")) == \"7\\n7\\n4\\n7\\n7\"\n"
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n\") == \"7\\n7\\n4\\n7\\n7\\n\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '''7\n7\n4\n7\n7'''\n"
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_data) == output_data, f\"Test failed. Please check the solution and the input data.\"\nprint(\"Test passed!\")"
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n\") == \"7\\n7\\n4\\n7\\n7\\n\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"5 5\") == \"512\\n512\\n1024\\n512\\n512\"\nassert solution(\"2 2\") == \"14\\n14\\n7\"\nassert solution(\"4 4\") == \"5\\n5\\n1\\n5\\n5\"\nassert solution(\"1 3\") == \"1\\n1\\n1\\n1\\n1\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 3) == \"7\\n7\\n4\\n7\\n7\"\nassert solution(3, 4) == \"7\\n7\\n7\\n7\"\nassert solution(4, 4) == \"7\\n4\\n7\"\nassert solution(4, 5) == \"4\\n7\"\n"
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"7\"\nassert solution(\"5 5\") == \"120\"\nassert solution(\"3 4\") == \"4\"\nassert solution(\"5 6\") == \"160\"\nassert solution(\"4 6\") == \"8\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"2 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"2 2\") == \"4\\n4\\n4\"\nassert solution(\"1 2\") == \"4\\n4\\n4\"\nassert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"4 4\") == \"16\\n16\\n16\"\nassert solution(\"5 5\") == \"25\\n25\\n25\"\nassert solution(\"6 6\") == \"36\\n36\\n36\"\nassert solution(\"7 7\") == \"51\\n51\\n51\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"5 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"6 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"7 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"8 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"9 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"10 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"11 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"12 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"13 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"14 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"15 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"16 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"17 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"18 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"19 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"20 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"21 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"22 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"23 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"24 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"25 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"26 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"27 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"28 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"29 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"30 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"31 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"32 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"33 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"34 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"35 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"36 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"37 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"38 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"39 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"40 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"41 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"42 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"43 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"44 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"45 3"
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\\n\") == \"6\\n\"\nassert solution(\"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\\n\") == \"9\\n\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 6\nprint(\"Test Passed\")"
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\") == \"6\"\nassert solution(\"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\") == \"9\"\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"6\"\nassert solution(stdin) == \"9\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\") == \"6\\n\"\nassert solution(\"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\") == \"9\\n\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n7 2\n1 5 6 2\n1 3\n3 2\n4 5\n3 7\n4 3\n4 6\n''') == '6'\n\nassert solution('''\n9 3\n3 2 1 6 5 9\n8 9\n3 2\n2 7\n3 4\n7 6\n4 5\n2 1\n2 8\n''') == '9'"
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n7 2\n1 5 6 2\n1 3\n3 2\n4 5\n3 7\n4 3\n4 6\n''') == '6\\n'\n\nassert solution('''\n9 3\n3 2 1 6 5 9\n8 9\n3 2\n2 7\n3 4\n7 6\n4 5\n2 1\n2 8\n''') == '9\\n'\n\nassert solution('''\n10 4\n1 2 3 4\n5 6 7 8\n9 10\n11 12\n13 14\n15 16\n17 18\n19 20\n21 22\n23 24\n25 26\n''') == '52\\n'\n\nassert solution('''\n10 4\n1 2 3 4\n5 6 7 8\n9 10\n11 12\n13 14\n15 16\n17 18\n19 20\n21 22\n23 24\n25 26\n27 28\n''') == '104\\n'\n\nassert solution('''\n10 4\n1 2 3 4\n5 6 7 8\n9 10\n11 12\n13 14\n15 16\n17 18\n19 20\n21 22\n23 24\n25 26\n27 28\n29 30\n31 32\n33 34\n''') == '211\\n'\n\nassert solution('''\n10 4\n1 2 3 4\n5 6 7 8\n9 10\n11 12\n13 14\n15 16\n17 18\n19 20\n21 22\n23 24\n25 26\n27 28\n29 30\n31 32\n33 34\n35 36\n''') == '282\\n'"
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n7 2\n1 5 6 2\n1 3\n3 2\n4 5\n3 7\n4 3\n4 6\n\"\"\") == \"6\\n\"\n\nassert solution(\"\"\"\n9 3\n3 2 1 6 5 9\n8 9\n3 2\n2 7\n3 4\n7 6\n4 5\n2 1\n2 8\n\"\"\") == \"9\\n\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"6\"\nassert solution(input()) == \"9\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\\n\") == \"6\\n\"\nassert solution(\"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\\n\") == \"9\\n\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('0010100') == 3\nassert solution('111') == -1"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt').read()) == \"3\\n3 1 3 4\\n3 2 5 6\\n1 7\\n-1\"\n"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0010100\") == \"3\\n3 1 3 4\\n3 2 5 6\\n1 7\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('0010100') == '3\\n3 1 3 4\\n3 2 5 6\\n1 7'\nassert solution('111') == '-1'"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('0010100') == 3\nassert solution('111') == -1"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0010100\") == 3\nassert solution(\"111\") == -1"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0010100\") == \"3\"\nassert solution(\"111\") == \"-1\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0010100\") == \"3\\n3 1 3 4\\n3 2 5 6\\n1 7\"\nassert solution(\"111\") == \"-1\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0010100\") == \"3\\n3 1 3 4\\n3 2 5 6\\n1 7\"\nassert solution(\"111\") == \"-1\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}.\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"You can find the number of distinct evolution plans such that if all Pokemon in all the gyms are evolved, the number of Pokemon of each type in each of the gyms remains the same.\"\n"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n2 1 2\\n2 2 3\") == \"1\\n\"\nassert solution(\"1 3\\n3 1 2 3\\n\") == \"6\\n\"\nassert solution(\"2 4\\n2 1 2\\n3 2 3 4\\n\") == \"2\\n\"\nassert solution(\"2 2\\n3 2 2 1\\n2 1 2\\n\") == \"1\\n\"\nassert solution(\"3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n\") == \"24\\n\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"The output is incorrect.\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Output {output} does not match the expected output.\"\nprint(\"OK\")"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3\\n2 1 2\\n2 2 3\\n') == '1'\nassert solution('1 3\\n3 1 2 3\\n') == '6'\nassert solution('2 4\\n2 1 2\\n3 2 3 4\\n') == '2'\nassert solution('2 2\\n3 2 2 1\\n2 1 2\\n') == '1'\nassert solution('3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n') == '24'"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '1\\n'"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n2 1 2\\n2 2 3\\n\") == \"1\\n\"\nassert solution(\"1 3\\n3 1 2 3\\n\") == \"6\\n\"\nassert solution(\"2 4\\n2 1 2\\n3 2 3 4\\n\") == \"2\\n\"\nassert solution(\"2 2\\n3 2 2 1\\n2 1 2\\n\") == \"1\\n\"\nassert solution(\"3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n\") == \"24\\n\"\n"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n2 1 2\\n2 2 3\\n\") == \"1\\n\"\nassert solution(\"1 3\\n3 1 2 3\\n\") == \"6\\n\"\nassert solution(\"2 4\\n2 1 2\\n3 2 3 4\\n\") == \"2\\n\"\nassert solution(\"2 2\\n3 2 2 1\\n2 1 2\\n\") == \"1\\n\"\nassert solution(\"3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n\") == \"24\\n\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\\n5\\n1 4 2 3 1\\n\") == \"Output\\n3\\nInput\\n4\\n1 5 4 7\\nOutput\\n6\\n\"\nassert solution(\"Input\\n4\\n1 5 4 7\\n\") == \"Output\\n6\\n\"\nassert solution(\"Input\\n5\\n1 2 3 4 5\\n\") == \"Output\\n1\\nInput\\n5\\n1 6 5 4 3\\nOutput\\n1\\n\"\nassert solution(\"Input\\n10\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"Output\\n9\\n\"\nassert solution(\"Input\\n10\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"Output\\n9\\n\"\nassert solution(\"Input\\n10\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"Output\\n9\\n\"\nassert solution(\"Input\\n10\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"Output\\n9\\n\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 3\nassert solution() == 6"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '3'\nassert solution(input()) == '6'"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n1 4 2 3 1\\n4\\n1 5 4 7\\n') == '3\\n'\nassert solution('4\\n1 5 4 7\\n') == '6\\n'\n"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 4 2 3 1\\n4\\n1 5 4 7\") == \"3\"\nassert solution(\"4\\n1 5 4 7\") == \"6\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == '3'\nassert solution(4) == '6'\nassert solution(10) == '6'\n\nfrom typing import List"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Expected output: '{expected_output}', got: '{solution(input())}'\"\n"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 4 2 3 1\\n4\\n1 5 4 7\") == \"3\\n\"\nassert solution(\"4\\n1 5 4 7\") == \"6\\n\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 4 2 3 1\\n4\\n1 5 4 7\\n\") == \"3\"\nassert solution(\"4\\n1 5 4 7\\n\") == \"6\"\n"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"4\\n\"\nassert solution() == \"20\\n\"\nassert solution() == \"62\\n\""
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == expected, f\"Solution: {solution(input)}, Expected: {expected}\" for input, expected in [(\"2\", \"4\"), (\"4\", \"20\"), (\"5\", \"62\")]"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n1 2\\n\\n4\\n1 1 2 3\\n\\n5\\n1 1 1 1 1') == 4\nassert solution('4\\n1 1 2 3\\n\\n5\\n1 1 1 1 1') == 20\nassert solution('5\\n1 1 1 1 1\\n\\n6\\n1 1 1 1 1') == 62"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"20\"\nassert solution(stdin) == \"62\""
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 4, \"Expected 4, got {}\".format(solution(3))\nassert solution(6) == 20, \"Expected 20, got {}\".format(solution(6))\nassert solution(11) == 62, \"Expected 62, got {}\".format(solution(11))"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n1 2\\n') == '4\\n'\nassert solution('4\\n1 1 2 3\\n') == '20\\n'\nassert solution('5\\n1 1 1 1 1\\n') == '62\\n'"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 4\nassert solution(2) == 20\nassert solution(3) == 62\nassert solution(4) == 4"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 2\") == 4\nassert solution(\"4\\n1 1 2 3\") == 20\nassert solution(\"5\\n1 1 1 1 1\") == 62\nassert solution(\"1 2 3\") == 1"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"answer\", \"Your solution is not correct. Please check the provided code.\"\n"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"20\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(r\"3\\n1 1\\n1 1\\n1 1\") == \"6\"\nassert solution(r\"4\\n1 2\\n2 1\\n3 5\\n5 3\\n\") == \"15\"\nassert solution(r\"1\\n5 6\") == \"7\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == expected, f\"Test failed: {solution(input)}!= {expected}\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 6\nassert solution(4) == 15\nassert solution(1) == 7"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '6'\nassert solution() == '15'\nassert solution() == '7'"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1\\n1 1\\n1 1\") == \"6\"\nassert solution(\"4\\n1 2\\n2 1\\n3 5\\n5 3\\n\") == \"15\"\nassert solution(\"1\\n5 6\\n\") == \"7\"\n"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Input\\n3\\n1 1\\n1 1\\n1 1\\nOutput\\n6\\nInput\\n4\\n1 2\\n2 1\\n3 5\\n5 3\\nOutput\\n15\\nInput\\n1\\n5 6\\nOutput\\n7\\n\") == \"6\\n15\\n7\\n\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\\n1\\n\") == \"6\"\nassert solution(\"1\\n2\\n1\\n3\\n5\\n\") == \"15\"\nassert solution(\"1\\n5 6\\n\") == \"7\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 1\\n1 1\\n1 1\") == \"6\"\nassert solution(\"4\\n1 2\\n2 1\\n3 5\\n5 3\\n\") == \"15\"\nassert solution(\"1\\n5 6\\n\") == \"7\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1\\n1 1\\n1 1\") == \"6\\n\"\nassert solution(\"4\\n1 2\\n2 1\\n3 5\\n5 3\\n1\\n5 6\\n\") == \"15\\n\"\nassert solution(\"1\\n5 6\\n\") == \"7\\n\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=None) == solution(stdin=\"Input\\n3\\n1 1\\n1 1\\n1 1\\n\\nOutput\\n6\\n\\nInput\\n4\\n1 2\\n2 1\\n3 5\\n5 3\\n\\nOutput\\n15\\n\\nInput\\n1\\n5 6\\n\\nOutput\\n7\\n\\n\")"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n4\\n2\\n\") == \"1\\n\"\nassert solution(\"2\\n1\\n4 4\\n2\\n\") == \"3\\n\"\nassert solution(\"3\\n3 3\\n10 10 10\\n17\\n\") == \"6\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\") == 1\nassert solution(\"2\") == 3\nassert solution(\"3\") == 6\nassert solution(\"4\") == 1\nassert solution(\"5\") == 1"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n4\\n2\\n\") == \"1\"\nassert solution(\"2\\n1\\n4 4\\n2\\n\") == \"3\"\nassert solution(\"3\\n3 3\\n10 10 10\\n17\\n\") == \"6\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: {solution(input())}!= {expected_output}\"\nprint(\"Test passed\")"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n4\\n2\\n\") == \"1\\n\"\nassert solution(\"2\\n1\\n4 4\\n2\\n\") == \"3\\n\"\nassert solution(\"3\\n3 3\\n10 10 10\\n17\\n\") == \"6\\n\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test case {case} failed. Expected output: {expected_output}, got: {solution(input())}\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n4\\n2\\n\\n17\") == \"1\\n\"\nassert solution(\"2\\n1\\n4 4\\n2\\n\") == \"3\\n\"\nassert solution(\"3\\n3 3\\n10 10 10\\n17\") == \"6\\n\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '1'"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Solution is {solution(input())}, expected output is {expected_output}\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\\n\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\\n\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\\n\") == \"0\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\") == \"0\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\") == \"0\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\\n\") == \"10\\n\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\\n\") == \"0\\n\"\nassert solution(\"3 5 6 11\\n1 2 1\\n\") == \"0\\n\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == # Solution"
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3 3 100\\n1 1 1') == '10'\nassert solution('3 6 5 1000000007\\n1 2 3') == '0'\nassert solution('3 5 6 11\\n1 2 1') == '0'\n\nfrom functools import reduce"
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\") == \"0\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\\n\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\\n\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\\n\") == \"0\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\\n\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\\n\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\\n\") == \"0\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"10\\n\"\nassert solution(input()) == \"0\\n\"\nassert solution(input()) == \"0\\n\"\n"
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"intel\") == \"YES\"\nassert solution(\"code\") == \"NO\"\nassert solution(\"ch allenge\") == \"YES\"\nassert solution(\"a bcd efghijklmnopqrstuvwxyz\") == \"NO\"\nassert solution(\"to be or not to be that is the question whether tis nobler in the mind to suffer the slings and arrows of outrageous fortune or to take arms against a sea of troubles\") == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\") == \"YES\\n\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghi\\njklmnopqrstu\\nvwxyz\") == \"NO\\n\"\nassert solution(\"4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\") == \"YES\\n\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\") == \"YES\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghi\\njklmnopqrstu\\nvwxyz\") == \"NO\"\nassert solution(\"4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\") == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\") == \"YES\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghi\\njklmnopqrstu\\nvwxyz\") == \"NO\"\nassert solution(\"4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\") == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"3\\n2 2 3\\nintel\\ncode\\nch allenge\"\n) == \"YES\"\n\nassert solution(\n    \"4\\n1 2 3 1\\na\\nbcdefghi\\nijklmnopqrstuvwxyz\"\n) == \"NO\"\n\nassert solution(\n    \"4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\"\n) == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\") == \"YES\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghi\\njklmnopqrstu\\nvwxyz\") == \"NO\"\nassert solution(\"4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\the slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\") == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Input\") == \"YES\"\nassert solution(\"Input\") == \"NO\"\nassert solution(\"Input\") == \"YES\"\nassert solution(\"Input\") == \"NO\"\nassert solution(\"Input\") == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\") == \"YES\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghi\\njklmnopqrstu\\nwxyz\") == \"NO\"\nassert solution(\"4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\") == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\") == \"YES\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghi\\njklmnopqrstu\\nvwxyz\") == \"NO\"\nassert solution(\"4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\") == \"YES\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n3 1 5\\n') == '26\\n'\nassert solution('1\\n10\\n') == '10\\n'"
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 1 5\") == \"26\"\nassert solution(\"1\\n10\") == \"10\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n3 1 5\\n1\\n10') == '26\\n'\nassert solution('1\\n10\\n') == '10\\n'"
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n3 1 5') == '26\\n'\nassert solution('1\\n10') == '10\\n'\n\nfor case in [\n    ('3\\n3 1 5'),\n    ('1\\n10'),\n]:\n    print(solution(case))"
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 1 5\") == \"26\"\nassert solution(\"1\\n10\") == \"10\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 1 5\\n\") == \"26\\n\"\nassert solution(\"1\\n10\\n\") == \"10\\n\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 1 5\") == \"26\\n\"\nassert solution(\"1\\n10\") == \"10\\n\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 1 5\") == \"26\"\nassert solution(\"1\\n10\") == \"10\"\n"
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n3 1 5\\n') == '26\\n'\nassert solution('1\\n10\\n') == '10\\n'"
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 1 5\") == \"26\"\nassert solution(\"1\\n10\") == \"10\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 4) == \"3\"\nassert solution(3, 40) == \"32\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 4') == 3\nassert solution('3 40') == 32"
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '3'\nassert solution(stdin) == '32'"
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n1 3 5\\n\") == \"3\"\nassert solution(\"3 40\\n10 30 50\\n\") == \"32\"\n"
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n1 3 5\\n\") == \"3\\n\"\nassert solution(\"3 40\\n10 30 50\\n\") == \"32\\n\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n1 3 5\\n\") == \"3\"\nassert solution(\"3 40\\n10 30 50\\n\") == \"32\"\n\nsolution = '''\n"
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 4\\n1 3 5\\n') == '3\\n'\nassert solution('3 40\\n10 30 50\\n') == '32\\n'"
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n1 3 5\") == \"3\\n\"\nassert solution(\"3 40\\n10 30 50\") == \"32\\n\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\") == \"3\"\nassert solution(\"3 40\") == \"32\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n1 3 5\") == \"3\"\nassert solution(\"3 40\\n10 30 50\") == \"32\"\nassert solution(\"\") == \"0\"\nassert solution(\"1 2\\n3\") == \"1\"\n"
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    9 1\n    1 1\n    5 10\n    1 3\n    11 14\n    5 5\n    10 10\n    3 6\n    6 12\n    7 7\n    4 11\n    \"\"\"\n) == \"1 4 5 6 7 8 9\\n\"\n\nassert solution(\n    \"\"\"\n    5 1\n    1 1\n    3 3\n    2 3\n    1 2\n    3 4\n    4 5\n    \"\"\"\n) == \"1 2 4\\n\"\n\nassert solution(\n    \"\"\"\n    5 1\n    1 1\n    3 3\n    3 3\n    4 4\n    4 4\n    5 5\n    \"\"\"\n) == \"1 2\\n\"\n\nassert solution(\n    \"\"\"\n    5 1\n    1 1\n    3 3\n    3 3\n    4 4\n    4 4\n    5 5\n    \"\"\"\n) == \"1 2\\n\"\n\nassert solution(\n    \"\"\"\n    5 1\n    1 1\n    3 3\n    3 3\n    4 4\n    4 4\n    5 5\n    \"\"\"\n) == \"1 2\\n\"\n\nassert solution(\n    \"\"\"\n    5 1\n    1 1\n    3 3\n    3 3\n    4 4\n    4 4\n    5 5\n    \"\"\"\n) == \"1 2\\n\"\n\nassert solution(\n    \"\"\"\n    5 1\n    1 1\n    3 3\n    3 3\n    4 4\n    4 4\n    5 5\n    \"\"\"\n) == \"1 2\\n\"\n\nassert solution(\n    \"\"\"\n    5 1\n    1 1\n    3 3\n    3 3\n    4 4\n    4 4\n    5 5\n    \"\"\"\n) == \"1 2\\n\"\n\nassert solution(\n    \"\"\"\n    5 1\n    1 1\n    3 3\n    3 3\n    4 4\n    4 4\n    5 5\n    \"\"\"\n) == \"1 2\\n\"\n\nassert solution(\n    \"\"\"\n    5 1\n    1 1\n    3 3\n    3 3\n    4 4\n    4 4\n    5 5\n    \"\"\"\n) == \"1 2\\n\"\n\nassert solution(\n    \"\"\"\n    5 1\n    1 1\n    3 3\n    3 3\n    4 4\n    4 4\n    5 5\n    \"\"\"\n) == \"1 2\\n\"\n\nassert solution(\n    \"\"\"\n    5 1\n    1 1\n    3 3\n    3 3\n    4 4\n    4 4\n    5 5\n    \"\"\"\n) == \"1 2\\n\"\n\nassert solution(\n    \"\"\"\n    5 1\n    1 1\n    3 3\n    3 3\n    4 4\n    4 4\n    5 5\n    \"\"\"\n) == \"1 2\\n\"\n\nassert solution(\n    \"\"\"\n    5 1\n    1 1\n    3 3\n    3 3\n    4 4\n    4 4\n    5 5\n    \"\"\"\n) == \"1 2\\n\"\n\nassert solution(\n    \"\"\"\n    5 1\n    1 1\n    3 3\n    3 3\n    4 4\n    4 4\n    5 5\n    \"\"\"\n) == \"1 2\\n\"\n\nassert solution(\n    \"\"\"\n    5 1\n    1 1\n    3 3\n    3 3\n    4 4\n    4 4\n    5 5\n    \"\"\"\n) == \"1 2\\n\"\n\nassert solution(\n    \"\"\"\n    5 1\n    1 1\n    3 3\n    3 3\n    4 4\n    4 4\n    5 5\n    \"\"\"\n) == \"1 2\\n\"\n\nassert solution(\n    \"\"\"\n    5 1\n    1 1\n    3 3\n    3 3\n    4 4\n    4 4\n    5 5\n    \"\"\"\n) == \"1 2\\n\"\n\nassert solution(\n    \"\"\"\n    5 1\n    1 1\n    3 3\n    3 3\n    4 4\n    4 4\n    5 5\n    \"\"\"\n) == \"1 2\\n\"\n\nassert solution(\n    \"\"\"\n    5 1\n    1 1\n    3 3\n    3 3\n    4 4\n    4 4\n    5 5\n    \"\"\"\n) == \"1 2\\n\"\n\nassert solution(\n    \"\"\"\n    5 1\n    1 1\n    3 3\n    3 3\n    4 4\n    4 4\n    5 5\n    \"\"\"\n) == \"1 2\\n\"\n\nassert solution(\n   "
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == [1, 4, 5, 6, 7, 8, 9], \"Test 1 failed\"\nassert solution(sample_input_2) == [1, 2, 4], \"Test 2 failed\"\nassert solution(sample_input_3) == [1, 2], \"Test 3 failed\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == ['1 4 5 6 7 8 9']\nassert solution() == ['1 2 4']\nassert solution() == ['1 2']\nassert solution() == []"
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9 1\\n1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11\") == \"1 4 5 6 7 8 9\\n\", \"Test 1 failed\"\nassert solution(\"5 1\\n1 1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5\\n\") == \"1 2 4\\n\", \"Test 2 failed\"\nassert solution(\"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n\") == \"1 2\\n\", \"Test 3 failed\"\nassert solution(\"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n\") == \"1 2\\n\", \"Test 4 failed\"\n\nsolution(\"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n\") == \"1 2\\n\", \"Test 5 failed\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9 1\\n1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11\\n\") == \"1 4 5 6 7 8 9\\n\"\nassert solution(\"5 1\\n1 1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5\\n\") == \"1 2 4\\n\"\nassert solution(\"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n\") == \"1 2\\n\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_str) == expected_output, f\"Test case failed: {solution(input_str)}!= {expected_output}\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9 1\\n1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11\") == \"1 4 5 6 7 8 9\\n\", \"Sample Input 1 incorrect\"\nassert solution(\"5 1\\n1 1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5\\n\") == \"1 2 4\\n\", \"Sample Input 2 incorrect\"\nassert solution(\"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n\") == \"1 2\\n\", \"Sample Input 3 incorrect\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt').read()) == \"1 4 5 6 7 8 9\", \"Expected output: 1 4 5 6 7 8 9, but got: \" + solution(open('input.txt').read())"
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1 4 5 6 7 8 9\"\n"
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == \"Output\\n1\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\\n\") == \"1\\n\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\\n\") == \"0\\n\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\\n\") == \"2\\n\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == output, f\"Input: {input}, Output: {output}\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\\n\"\n\nassert solution(stdin) == \"0\\n\"\n\nassert solution(stdin) == \"2\\n\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\\n\") == \"1\\n\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\\n\") == \"0\\n\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\\n\") == \"2\\n\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1\"\n\nassert solution(stdin) == \"0\"\n\nassert solution(stdin) == \"2\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\") == 1\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\") == 0\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\") == 2"
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"3 2\n2 1\n1 2.0\n1 3.100\n\"\"\") == \"1\"\nassert solution(\"\"\"3 3\n1 5.0\n2 5.5\n3 6.0\n\"\"\") == \"0\"\nassert solution(\"\"\"6 3\n1 14.284235\n2 17.921382\n1 20.328172\n3 20.842331\n1 25.790145\n1 27.204125\n\"\"\") == \"2\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\") == \"1\\n\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\") == \"0\\n\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\") == \"2\\n\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\") == \"1\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\") == \"0\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\") == \"2\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\"\n"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"6 2\\n2 3 6 5 4 10\") == \"3\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\"\n"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6 2\\n2 3 6 5 4 10') == '3'"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\"\nassert solution(\"5 1\\n1 2 3 4 5\") == \"2\"\nassert solution(\"5 3\\n2 4 6 8 10\") == \"5\"\nassert solution(\"5 4\\n1 3 5 7 9\") == \"5\"\nassert solution(\"5 5\\n3 6 9 10 12\") == \"7\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"3\"\n"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\"\nassert solution(\"5 3\\n7 5 8 10\") == \"2\"\nassert solution(\"4 2\\n1 2 3 4\") == \"2\"\nassert solution(\"6 2\\n1 2 3 4 5 6\") == \"3\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\"\n"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6 2\\n2 3 6 5 4 10') == '3'\nassert solution('6 2\\n2 3 6 5 4 10') == '3'\nassert solution('6 2\\n2 3 6 5 4 10') == '3'\nassert solution('6 2\\n2 3 6 5 4 10') == '3'\nassert solution('6 2\\n2 3 6 5 4 10') == '3'"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"4\\n\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\\n\") == \"10\\n\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 2\\n3\\n1 2 3\\n9\\n1 2 1 3 2 2 2 2 3\\n\") == \"2\\n4\\n10\\n\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Test failed for input {input()}, expected {expected}\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 2\\n3\\n1 2 3\\n9\\n1 2 1 3 2 2 2 2 2 3\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\\n9\\n1 2 1 3 2 2 2 2 2 3\\n\") == \"4\\n\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 2 3\\n\") == \"10\\n\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 5"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"4\\n\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\\n\") == \"10\\n\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 2\\n\\n3\\n1 2 3\\n\\n9\\n1 2 1 3 2 2 2 2 2 3\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\\n\\n9\\n1 2 1 3 2 2 2 2 2 3\\n\") == \"4\\n\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 2 3\\n\") == \"10\\n\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"4\"\nassert solution(\"9\") == \"10\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"4\\n\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\\n\") == \"10\\n\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\\n\"\nassert solution() == \"2\\n\"\nassert solution() == \"4\\n\"\nassert solution() == \"10\\n\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(10) == '4'\nprint(\"Success\")"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\\n\", \"The correct output is not given.\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n\") == \"4\\n\", \"Input not provided\"\n\ncount = 0\nn = int(stdin.readline())\n\nfor i in range(1, n + 1):\n    a_i = 1\n    a_j = a_i\n    for j in range(i, n + 1):\n        a_k = a_i + 1\n        if a_j == a_k:\n            count += 1\n        a_i = a_j\n        a_j = a_k\n\nprint(count)\n"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='1\\n') == '4\\n'\nassert solution(stdin='2\\n') == '4\\n'\nassert solution(stdin='3\\n') == '4\\n'\nassert solution(stdin='4\\n') == '4\\n'\nassert solution(stdin='5\\n') == '4\\n'\nassert solution(stdin='6\\n') == '4\\n'\nassert solution(stdin='7\\n') == '4\\n'\nassert solution(stdin='8\\n') == '4\\n'\nassert solution(stdin='9\\n') == '4\\n'\nassert solution(stdin='10\\n') == '4\\n'\nassert solution(stdin='11\\n') == '4\\n'\nassert solution(stdin='12\\n') == '4\\n'\nassert solution(stdin='13\\n') == '4\\n'\nassert solution(stdin='14\\n') == '4\\n'\nassert solution(stdin='15\\n') == '4\\n'\nassert solution(stdin='16\\n') == '4\\n'\nassert solution(stdin='17\\n') == '4\\n'\nassert solution(stdin='18\\n') == '4\\n'\nassert solution(stdin='19\\n') == '4\\n'\nassert solution(stdin='20\\n') == '4\\n'\nassert solution(stdin='21\\n') == '4\\n'\nassert solution(stdin='22\\n') == '4\\n'\nassert solution(stdin='23\\n') == '4\\n'\nassert solution(stdin='24\\n') == '4\\n'\nassert solution(stdin='25\\n') == '4\\n'\nassert solution(stdin='26\\n') == '4\\n'\nassert solution(stdin='27\\n') == '4\\n'\nassert solution(stdin='28\\n') == '4\\n'\nassert solution(stdin='29\\n') == '4\\n'\nassert solution(stdin='30\\n') == '4\\n'\nassert solution(stdin='31\\n') == '4\\n'\nassert solution(stdin='32\\n') == '4\\n'\nassert solution(stdin='33\\n') == '4\\n'\nassert solution(stdin='34\\n') == '4\\n'\nassert solution(stdin='35\\n') == '4\\n'\nassert solution(stdin='36\\n') == '4\\n'\nassert solution(stdin='37\\n') == '4\\n'\nassert solution(stdin='38\\n') == '4\\n'\nassert solution(stdin='39\\n') == '4\\n'\nassert solution(stdin='40\\n') == '4\\n'\nassert solution(stdin='41\\n') == '4\\n'\nassert solution(stdin='42\\n') == '4\\n'\nassert solution(stdin='43\\n') == '4\\n'\nassert solution(stdin='44\\n') == '4\\n'\nassert solution(stdin='45\\n') == '4\\n'\nassert solution(stdin='46\\n') == '4\\n'\nassert solution(stdin='47\\n') == '4\\n'\nassert solution(stdin='48\\n') == '4\\n'\nassert solution(stdin='49\\n') == '4\\n'\nassert solution(stdin='50\\n') == '4\\n'\nassert solution(stdin='51\\n') == '4\\n'\nassert solution(stdin='52\\n') == '4\\n'\nassert solution(stdin='53\\n') == '4\\n'\nassert solution(stdin='54\\n') == '4\\n'\nassert solution(stdin='55\\n') == '4\\n'\nassert solution(stdin='56\\n') == '4\\n'\nassert solution(stdin='57\\n') == '4\\n'\nassert solution(stdin='58\\n') == '4\\n'\nassert solution(stdin='59\\n') == '4\\n'\nassert solution(stdin='60\\n') == '4\\n'\nassert solution(stdin='61\\n') == '4\\n"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(10) == \"4\"\nassert solution(5) == \"1\"\nassert solution(10) == \"4\"\nassert solution(100) == \"1\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '4\\n'"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n\") == \"4\\n\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"4\\n\", \"Incorrect output.\\n\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"4\\n\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"4\\n\"\nassert solution(1) == \"1\\n\"\nassert solution(10) == \"2\\n\"\nassert solution(100) == \"21\\n\"\nassert solution(1000) == \"2187\\n\"\nassert solution(10000) == \"218771\\n\"\n"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\\n\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\\n\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\\n\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\\n\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\\n\") == \"5\\n\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"5\\n\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 6\\n1 5 1 4\") == \"5\"\nassert solution(\"10 5\\n1 2 3 4 5\\n\") == \"9\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == \"5\\n\"\n"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 2 4\\n\") == \"4\\n\"\nassert solution(\"4 6\\n1 5 1 5\\n\") == \"4\\n\"\nassert solution(\"4 6\\n1 5 1 6\\n\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\\n\") == \"5\\n\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == output, f\"Solution does not match the expected output. Input: {input}, Output: {output}\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 6\\n1 5 1 4\") == \"5\"\nassert solution(\"5 6\\n2 3 4 5 6\") == \"5\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\"\nassert solution(\"6 6\\n2 3 4 5 6\") == \"5\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '5'"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == \"5\\n\"\nassert solution(\"6 2\\n5 3 2 1\\n\") == \"3\\n\"\nassert solution(\"5 10\\n1 2 3 4 5\\n\") == \"2\\n\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"+-+-+\") == \"1\", \"Polycarpus just has been out of luck lately! As soon as he found a job in the \\\"Binary Cat\\\" cafe, the club got burgled. All ice-cream was stolen.\"\nassert solution(\"---\") == \"3\", \"Right now the police wonders what minimum number of distinct people Polycarpus could have seen. Assume that he sees anybody coming in or out of the club. Each person could have come in or out an arbitrary number of times.\"\n"
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"+-+-+\") == \"1\\n\", \"The solution should return the minimum number of people in the club\"\n\nassert solution(\"---\") == \"3\\n\", \"The solution should return the minimum number of people in the club\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"+-+-+\") == \"1\", \"Polycarpus just has been out of luck lately!\"\nassert solution(\"---\") == \"3\", \"Polycarpus just has been out of luck lately!\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"+-+-+\") == \"1\"\nassert solution(\"---\") == \"3\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\") == 1\nassert solution(\"+-\") == 1\nassert solution(\"-+--\") == 2\nassert solution(\"---\") == 3"
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"+-+-+\") == \"1\\n\"\n\nassert solution(\"---\") == \"3\\n\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"+-+-+\") == \"1\\n\", \"The solution should be 1\"\nassert solution(\"---\") == \"3\\n\", \"The solution should be 3\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\\n\", \"Incorrect output for sample 1\"\nassert solution(stdin) == \"3\\n\", \"Incorrect output for sample 2\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"+-+-+\") == \"1\"\nassert solution(\"---\") == \"3\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '1\\n'\n"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n\") == \"10110\\n\"\n"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n\") == \"10110\", \"The correct output is not provided.\"\n"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\") == \"10110\""
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == '10110'"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(example) == expected, f\"Test failed for example input: {example}, expected output: {expected}\""
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 10110, \"Incorrect solution\""
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n10\nAND 9 4\nIN 1\nIN 1\nXOR 6 5\nAND 3 7\nIN 0\nNOT 10\nIN 1\nIN 1\nAND 2 8\n''') == '''\n10110\n'''"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '10110'"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r\"\"\"\n10\nAND 9 4\nIN 1\nIN 1\nXOR 6 5\nAND 3 7\nIN 0\nNOT 10\nIN 1\nIN 1\nAND 2 8\n\"\"\") == \"10110\\n\", \"Test case 1 failed\"\n\nassert solution(r\"\"\"\n10\nAND 9 4\nIN 1\nIN 1\nXOR 6 5\nAND 3 7\nIN 0\nNOT 10\nIN 1\nIN 1\nAND 2 8\n\"\"\") == \"10110\\n\", \"Test case 2 failed\"\n\nassert solution(r\"\"\"\n10\nAND 9 4\nIN 1\nIN 1\nXOR 6 5\nAND 3 7\nIN 0\nNOT 10\nIN 1\nIN 1\nAND 2 8\n\"\"\") == \"10110\\n\", \"Test case 3 failed\"\n\nassert solution(r\"\"\"\n10\nAND 9 4\nIN 1\nIN 1\nXOR 6 5\nAND 3 7\nIN 0\nNOT 10\nIN 1\nIN 1\nAND 2 8\n\"\"\") == \"10110\\n\", \"Test case 4 failed\"\n\nassert solution(r\"\"\"\n10\nAND 9 4\nIN 1\nIN 1\nXOR 6 5\nAND 3 7\nIN 0\nNOT 10\nIN 1\nIN 1\nAND 2 8\n\"\"\") == \"10110\\n\", \"Test case 5 failed\"\n\nassert solution(r\"\"\"\n10\nAND 9 4\nIN 1\nIN 1\nXOR 6 5\nAND 3 7\nIN 0\nNOT 10\nIN 1\nIN 1\nAND 2 8\n\"\"\") == \"10110\\n\", \"Test case 6 failed\"\n\nassert solution(r\"\"\"\n10\nAND 9 4\nIN 1\nIN 1\nXOR 6 5\nAND 3 7\nIN 0\nNOT 10\nIN 1\nIN 1\nAND 2 8\n\"\"\") == \"10110\\n\", \"Test case 7 failed\"\n\nassert solution(r\"\"\"\n10\nAND 9 4\nIN 1\nIN 1\nXOR 6 5\nAND 3 7\nIN 0\nNOT 10\nIN 1\nIN 1\nAND 2 8\n\"\"\") == \"10110\\n\", \"Test case 8 failed\"\n\nassert solution(r\"\"\"\n10\nAND 9 4\nIN 1\nIN 1\nXOR 6 5\nAND 3 7\nIN 0\nNOT 10\nIN 1\nIN 1\nAND 2 8\n\"\"\") == \"10110\\n\", \"Test case 9 failed\""
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(10) == '10110', \"Test 1 failed\"\nassert solution(11) == '11001', \"Test 2 failed\"\nassert solution(12) == '11000', \"Test 3 failed\"\nassert solution(13) == '11110', \"Test 4 failed\"\nassert solution(14) == '11010', \"Test 5 failed\"\n"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\\n\") == \"2\"\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\\n\") == \"2\"\n"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\\n1 3\"\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == \"2\\n1 2\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == 2\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == 2"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\\n1 3\\n\", \"The output is incorrect.\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    5 3 1\n    1 2 3 2 1\n    1 2 3\n''') == '2\\n1 3\\n'\nassert solution('''\n    6 3 2\n    1 3 2 2 3 1\n    1 2 3\n''') == '2\\n1 2\\n'"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 3 1\\n1 2 3 2 1\\n1 2 3\\n') == '2\\n1 3\\n'\nassert solution('6 3 2\\n1 3 2 2 3 1\\n1 2 3\\n') == '2\\n1 2\\n'"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\\n1 3\"\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == \"2\\n1 2\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\\n1 3\\n\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '2\\n1 3\\n'\n"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\\n\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"your_answer\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 1 2\\n1 3\\n1 2\\n') == '2\\n'\nassert solution('3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n') == '0\\n'"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"\"\"\n2\n\"\"\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 1 2\\n1 3\\n1 2\\n\\n3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\") == \"2\\n\"\n\nassert solution(\"3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\\n\\n\\n\") == \"0\\n\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 1 2\\n1 3\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\") == \"0\\n\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 1 2\\n1 3\\n1 2\\n\\n3 3 1\\n2\\n1 2\\n1 3\\n2 3\") == \"2\\n\"\nassert solution(\"3 3 1\\n2\\n1 2\\n1 3\\n2 3\") == \"0\\n\"\nassert solution(\"4 2 3\\n1 3\\n2 3\\n3 1\\n1 4\\n4 2\\n4 5\\n2 4\\n\") == \"2\\n\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\n\\n# Input\\n# Output\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\\n\") == \"3\", \"The solution is incorrect.\"\nassert solution(\"4\\n100 100 100 100\\n\") == \"1\", \"The solution is incorrect.\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\\n\") == \"4\", \"The solution is incorrect.\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\") == \"3\\n\"\nassert solution(\"4\\n100 100 100 100\") == \"1\\n\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\") == \"4\\n\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\\n\") == \"3\"\nassert solution(\"4\\n100 100 100 100\\n\") == \"1\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\\n\") == \"4\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, but got {solution(input())}\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected: {output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\") == \"3\\n\"\nassert solution(\"4\\n100 100 100 100\") == \"1\\n\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\") == \"4\\n\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\\n\") == \"3\"\nassert solution(\"4\\n100 100 100 100\\n\") == \"1\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\\n\") == \"4\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\\n\\n4\\n100 100 100 100\\n\\n8\\n7 6 5 4 3 2 2 3\\n\\n3\") == \"3\\n\"\nassert solution(\"4\\n100 100 100 100\\n\\n1\\n100 100 100 100\") == \"1\\n\"\nassert solution(\"6\\n10 2 3 5 4 2\\n\\n4\\n100 100 100 100\\n\\n8\\n7 6 5 4 3 2 2 3\\n\\n3\") == \"3\\n\"\n"
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution_input) == solution_output, \"Test failed for the given input and output\"\nfor solution_input in [\n    [6, 10, 2, 3, 5, 4, 2],\n    [4, 100, 100, 100],\n    [8, 7, 6, 5, 4, 3, 2, 2, 3],\n]:\n    solution_output = 3\n    assert solution(solution_input) == solution_output, \"Test failed for the given input and output\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\") == \"3\\n\", \"The output should be '3\\n' but it is {}\".format(solution(\"6\\n10 2 3 5 4 2\"))"
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''4 3\n1 2\n1 1\n3 1 3 2\n2 1 1''') == 'Yes\\n2'\n\nassert solution('''6 5\n2 1 2\n2 1 2\n3 1 2 3\n2 1 5\n2 4 4\n2 4 4''') == 'Yes\\n0'\n\nassert solution('''4 3\n4 3 2 2 1\n3 1 1 3\n3 2 3 3\n2 3 1''') == 'No'"
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\\n2 3\\n\"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"Yes\\n0\\n\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\") == \"No\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4, 3) == \"Yes\"\nassert solution(6, 5) == \"Yes\"\nassert solution(4, 3) == \"No\"\n"
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4 3\n1 2\n1 1\n3 1 3 2\n2 1 1\n\"\"\") == \"Yes\\n2\\n2 3 \"\n\nassert solution(\"\"\"\n6 5\n2 1 2\n2 1 2\n3 1 2 3\n2 1 5\n2 4 4\n2 4 4\n\"\"\") == \"Yes\\n0\"\n\nassert solution(\"\"\"\n4 3\n4 3 2 2 1\n3 1 1 3\n3 2 3 3\n2 3 1\n\"\"\") == \"No\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"Yes\\n2\\n2 3 \"\nassert solution() == \"No\\n0\"\n"
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1') == 'Yes\\n2\\n2 3 \\n'\n\nassert solution('6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4') == 'Yes\\n0'\n\nassert solution('4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1') == 'No'"
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"Yes\"\n\nassert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\\n2 3 \"\n\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"No\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\\n2 3\"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"Yes\\n0\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\") == \"No\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"Yes\\n0\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\") == \"No\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\\n2 3 \"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"Yes\\n0\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4) == \"20\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"0 2 1 4 3\"  # expected output: \"20\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"12\") == \"20\"\nassert solution(\"10\") == \"0 1 2 3 4\"\nassert solution(\"15\") == \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14\"\nassert solution(\"30\") == \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\"\nassert solution(\"50\") == \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\"\nassert solution(\"100\") == \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4) == \"20\"\n"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4) == 20\nassert solution(5) == '0 2 1 4 3'"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"20\\n0 2 1 4 3\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(4) == \"20\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4) == \"20\\n0 2 1 4 3\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '20\\n0 2 1 4 3', 'Please fill in the solution'"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4) == \"20\\n0 2 1 4 3\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n1 1\") == \"YES\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\") == \"NO\"\nassert solution(\"2 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\") == \"YES\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\") == \"YES\"\nassert solution(\"2 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\") == \"NO\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n1 1\") == \"YES\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n0 0\") == \"NO\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n1 1\\n') == 'YES'\nassert solution('3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n') == 'NO'"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n1 1\\n') == 'YES\\n'\nassert solution('3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n0 0\\n1 1\\n') == 'NO\\n'"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n0 0\") == \"YES\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\") == \"NO\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n1 1\") == \"YES\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\") == \"NO\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0\n''') == 'YES'\n\nassert solution('''\n3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0\n''') == 'NO'\n\nassert solution('''\n3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0\n''') == 'YES'\n\nassert solution('''\n3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0\n''') == 'NO'\n\nassert solution('''\n3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0\n''') == 'YES'\n\nassert solution('''\n3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0\n''') == 'NO'\n\nassert solution('''\n3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0\n''') == 'YES'\n\nassert solution('''\n3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0\n''') == 'NO'\n\nassert solution('''\n3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0\n''') == 'YES'\n\nassert solution('''\n3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0\n''') == 'NO'\n\nassert solution('''\n3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0\n''') == 'YES'\n\nassert solution('''\n3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0\n''') == 'NO'\n\nassert solution('''\n3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0\n''') == 'YES'\n\nassert solution('''\n3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0\n''') == 'NO'"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n1 1\\n') == 'YES'\nassert solution('3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n') == 'NO'\nassert solution('3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n') == 'YES'"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\") == \"YES\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\") == \"NO\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"YES\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n1\\n1\\n1\\n') == '1\\n3\\n7\\n'\nassert solution('5\\n1\\n0\\n1\\n0\\n1\\n') == '1\\n4\\n10\\n22\\n43\\n'\nassert solution('9\\n1\\n1\\n0\\n0\\n0\\n1\\n1\\n0\\n1\\n') == '1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\\n'\n\nfrom typing import List"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Test failed: expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\") == 1\nassert solution(\"11\") == 3\nassert solution(\"111\") == 7\nassert solution(\"0\") == 0\nassert solution(\"0011\") == 4\nassert solution(\"0101\") == 10\nassert solution(\"1110\") == 22\nassert solution(\"1111\") == 43"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Input\\n3\\n1\\n1\\n1\") == \"1\\n3\\n7\"\nassert solution(\"Input\\n5\\n1\\n0\\n1\\n0\\n1\") == \"1\\n4\\n10\\n22\\n43\"\nassert solution(\"Input\\n9\\n1\\n1\\n0\\n0\\n0\\n1\\n1\\n0\\n1\") == \"1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\"\n\nfrom typing import List\n"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\\n3\\n7\\n\"\nassert solution() == \"1\\n4\\n10\\n22\\n43\\n\"\nassert solution() == \"1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\\n\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1\\n1\\n1\") == \"1\\n3\\n7\\n\"\nassert solution(\"5\\n1\\n0\\n1\\n0\") == \"1\\n4\\n10\\n22\\n43\\n\"\nassert solution(\"9\\n1\\n1\\n0\\n0\\n0\\n1\\n1\\n0\\n1\\n\") == \"1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\\n\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Solution is incorrect. Output: {output()}, Input: {input()}\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1\n1\n1\n''') == '1\\n3\\n7\\n'\n\nassert solution('''\n5\n1\n0\n1\n0\n1\n''') == '1\\n4\\n10\\n22\\n43\\n'\n\nassert solution('''\n9\n1\n1\n0\n0\n0\n1\n1\n0\n1\n''') == '1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\\n'"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1\\n1\\n\") == \"1\\n3\\n7\"\nassert solution(\"1\\n0\\n1\\n\") == \"1\\n4\\n10\"\nassert solution(\"1\\n1\\n1\\n\") == \"1\\n3\\n7\"\nassert solution(\"1\\n0\\n1\\n\") == \"1\\n4\\n10\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n\") == \"1\\n3\\n7\\n\"\nassert solution(\"5\\n1\\n0\\n1\\n0\\n1\\n\") == \"1\\n4\\n10\\n22\\n43\\n\"\nassert solution(\"9\\n1\\n1\\n0\\n0\\n0\\n1\\n1\\n0\\n1\\n\") == \"1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\\n\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == 'First\\nSecond\\nFirst\\n'"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n\") == \"First\\nSecond\\nFirst\\n\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\") == \"First\\nSecond\\nFirst\\n\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\") == \"First\\nSecond\\nFirst\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\") == \"First\\nSecond\\nFirst\"\nassert solution(\"1\\n1 0\\n1 1\\n1 2\") == \"First\\nFirst\"\nassert solution(\"2\\n2 0\\n2 1\\n2 2\") == \"Second\\nSecond\"\nassert solution(\"5\\n5 0\\n5 1\\n5 2\\n5 3\\n5 4\\n5 5\") == \"First\\nFirst\"\nassert solution(\"5\\n5 0\\n5 1\\n5 2\\n5 3\\n5 4\\n5 5\") == \"Second\\nSecond\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"\"\"\nFirst\nSecond\nFirst\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 'First'"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == 'First\\nSecond\\nFirst\\n'"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'First\\nSecond\\nFirst', \"The solution should output First, but it is currently outputting {solution(stdin)}.\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''3\n3 0\n6 2\n1 2\n2 3\n15 10\n12 14\n8 3\n10 1\n14 6\n12 6\n1 9\n13 1\n2 5\n3 9\n7 2''') == 'First\\nSecond\\nFirst'\n\nfor i in range(1, 11):\n    test_case = '''{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}\n{} {}"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('abba') == ['Mike']\nassert solution('cba') == ['Mike', 'Mike', 'Mike', 'def']"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Mike\"\nassert solution(\"hello\") == \"Mike\"\nassert solution(\"world\") == \"Mike\"\nassert solution(\"abcd\") == \"Ann\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('test_case_1.txt', 'r')) == ['Mike', 'Ann']\nassert solution(open('test_case_2.txt', 'r')) == ['Mike', 'Mike', 'Mike', 'def solution(stdin: str) -> str:', 'Mike']\nassert solution(open('test_case_3.txt', 'r')) == ['Mike', 'Mike', 'Mike', 'def solution(stdin: str) -> str:', 'Ann']"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Mike\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('abba') == 'Mike\\nAnn\\nAnn'\nassert solution('cba') == 'Mike\\nMike\\nMike\\ndef solution(stdin: str) -> str:\n    pass'"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('abba') == ['Mike', 'Ann']\nassert solution('cba') == ['Mike', 'Mike', 'Mike', 'def solution(stdin: str) -> str:pass']"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"test_inputs/test_input_1.txt\", \"r\")) == \"Mike\"\nassert solution(open(\"test_inputs/test_input_2.txt\", \"r\")) == \"Ann\"\nassert solution(open(\"test_inputs/test_input_3.txt\", \"r\")) == \"Ann\"\nassert solution(open(\"test_inputs/test_input_4.txt\", \"r\")) == \"Mike\"\nassert solution(open(\"test_inputs/test_input_5.txt\", \"r\")) == \"def\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abba\") == \"Mike\\nAnn\\nAnn\\nMike\"\nassert solution(\"cba\") == \"Mike\\nMike\\nMike\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'Mike\\nAnn\\nAnn\\nMike'\n"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Mike\"\n\nsolution = \"\"\"def solution(stdin: str) -> str:\n    s = stdin.strip()\n    k = int(stdin.split()[1])\n    l, r = 0, len(s) - 1\n    while l <= r:\n        mid = (l + r) // 2\n        if s[mid] >= s[mid + 1]:\n            l = mid + 1\n        else:\n            r = mid - 1\n    print(s[l:r + 1])"
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected: {output}, but got: {solution(input())}\"\n"
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\") == \"0\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 2\\n8 3 8\\n1 2\\n2 3\\n') == '0\\n'\nassert solution('3 2\\n8 12 8\\n1 2\\n2 3\\n') == '2\\n'"
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"0\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\\n\") == \"0\"\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\\n\") == \"2\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\\n\") == \"0\"\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\\n\") == \"2\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\\n\") == \"0\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\") == \"0\\n\"\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\") == \"2\\n\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\") == 0\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\") == 2"
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 4\\n\") == \"ababacd\"\nassert solution(\"4 7\\n\") == \"-1\"\n\nfrom typing import List"
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('7 4') == 'ababacd'\nassert solution('4 7') == '-1'"
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-1\"\n"
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('test_input.txt', 'r')) == 'ababacd'\nassert solution(open('test_input2.txt', 'r')) == '-1'\nprint('All tests passed.')"
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 2) == \"ababacd\"\nassert solution(5, 2) == \"-1\"\nassert solution(3, 5) == \"def\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"ababacd\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-1\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2 1 2\\n') == '4\\n'\nassert solution('10\\n1 1 2 2 2 1 1 2 2 1\\n') == '9\\n'"
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2 1 2\") == 4\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\") == 9\nassert solution(\"4\\n1 2 1 2\") == 4\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\") == 9"
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n1 2 1 2\\n') == '4\\n'\nassert solution('10\\n1 1 2 2 2 1 1 2 2 1\\n') == '9\\n'"
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2 1 2\\n\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"9\\n\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 2 1 2') == '4'\nassert solution('10\\n1 1 2 2 2 1 1 2 2 1') == '9'\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2 1 2\\n') == '4\\n'\nassert solution('10\\n1 1 2 2 2 1 1 2 2 1\\n') == '9\\n'"
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('Input') == 'Output'"
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2 1 2\\n\") == \"4\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"9\"\n"
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''4\n1 2 1 2\n''') == '4\\n'\n\nassert solution('''10\n1 1 2 2 2 1 1 2 2 1\n''') == '9\\n'"
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_str=\"4\\n1 2 1 2\\n10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"4\\n\"\nassert solution(input_str=\"10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"9\\n\"\n\nfrom typing import List\n"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '2\\n++-'"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 2 1\\n1 1 2\\n2 2 1') == '2\\n-\\n2\\n+'\nassert solution('6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3') == '6\\n++-\\n2\\n+-+'"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 1\\n1 1 2\\n2 2 1\") == \"2\\n-\\n2\"\nassert solution(\"6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\") == \"6\\n++-\\n2\\n+-+\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 1\\n1 1 2\\n2 2 1\\n\") == \"2\\n-\\n2\\n+\"\nassert solution(\"6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\\n\") == \"6\\n++-\\n2\\n+-+def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 1\\n1 1 2\\n2 2 1\") == \"2\\n-\\n2\\n+\"\nassert solution(\"6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\") == \"6\\n++-\\n2\\n+-+\"\n\nfrom typing import List"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 1\\n1 1 2\\n2 2 1\\n\") == \"2\"\nassert solution(\"6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\\n\") == \"6\\n++-\\n2\\n+-+\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"10 10 1\\n1 2 3\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9\\n8 9 10\\n9 10 11\\n10 11 12\\n11 12 13\\n12 13 14\\n13 14 15\\n14 15 16\\n15 16 17\\n16 17 18\\n17 18 19\\n18 19 20\\n19 20 21\\n20 21 22\\n21 22 23\\n22 23 24\\n23 24 25\\n24 25 26\\n25 26 27\\n26 27 28\\n27 28 29\\n28 29 30\\n29 30 31\\n30 31 32\\n31 32 33\\n32 33 34\\n33 34 35\\n34 35 36\\n35 36 37\\n36 37 38\\n37 38 39\\n38 39 40\\n39 40 41\\n40 41 42\\n41 42 43\\n42 43 44\\n43 44 45\\n44 45 46\\n45 46 47\\n46 47 48\\n47 48 49\\n48 49 50\\n49 50 51\\n50 51 52\\n51 52 53\\n52 53 54\\n53 54 55\\n54 55 56\\n55 56 57\\n56 57 58\\n57 58 59\\n58 59 60\\n59 60 61\\n60 61 62\\n61 62 63\\n62 63 64\\n63 64 65\\n64 65 66\\n65 66 67\\n66 67 68\\n67 68 69\\n68 69 70\\n69 70 71\\n70 71 72\\n71 72 73\\n72 73 74\\n73 74 75\\n74 75 76\\n75 76 77\\n76 77 78\\n77 78 79\\n78 79 80\\n79 80 81\\n80 81 82\\n81 82 83\\n82 83 84\\n83 84 85\\n84 85 86\\n85 86 87\\n86 87 88\\n87 88 89\\n88 89 90\\n89 90 91\\n90 91 92\\n91 92 93\\n92 93 94\\n93 94 9"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '2\\n-2\\n2\\n+'"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Output mismatch: expected {output}, got {solution(input())}\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '2\\n++\\n2\\n+-\\n'\n\nfrom typing import List"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\\n-1\\n2\"\nassert solution(input()) == \"6\\n++-1\\n2\"\nassert solution(input()) == \"3\\n+-\\n1\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1689') == '1869', '1689'\nassert solution('18906') == '18690', '18906'"
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1689\") == \"1869\", \"The first example should output 1869.\"\nassert solution(\"18906\") == \"18690\", \"The second example should output 18690.\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Incorrect output. Please check your code and solution.\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1689') == '1869'\nassert solution('18906') == '18690'"
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1689) == 1869, \"Input 1689 is not correct\"\nassert solution(18906) == 18690, \"Input 18906 is not correct\"\n"
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1689) == \"1869\"\nassert solution(18906) == \"18690\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n1 3\\n3 4\\n\") == \"2\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\") == \"-1\"\nassert solution(\"5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\") == \"3\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n4 2\n1 3\n3 4\n''') == '2'\n\nassert solution('''\n4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n''') == '-1'\n\nassert solution('''\n5 5\n4 2\n3 5\n4 5\n5 1\n1 2\n''') == '3'"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    '''\n    Input\n    4 2\n    '''\n) == '2\\n'\n\nassert solution(\n    '''\n    Input\n    4 6\n    '''\n) == '-1\\n'\n\nassert solution(\n    '''\n    Input\n    5 5\n    '''\n) == '3\\n'"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n1 3\\n3 4\\n\") == \"2\\n\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 1\\n1 2\\n\") == \"-1\\n\"\nassert solution(\"5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\") == \"3\\n\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n1 3\\n3 4\\n\") == \"2\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\") == \"-1\"\nassert solution(\"5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\") == \"3\"\nassert solution(\"4 4\\n1 1\\n1 2\\n1 3\\n2 3\\n2 4\\n3 4\\n\") == \"-1\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 2\\n1 3\\n3 4\\n\\n4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 1\\n1 2\\n\\n5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\\n5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2') == '2'\nassert solution('4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\\n5 1\\n1 2\\n\\n5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2') == '-1'\nassert solution('5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\\n5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n') == '3'"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 2"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_1) == '2'\nassert solution(input_2) == '-1'\nassert solution(input_3) == '3'"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Incorrect output\"\n"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3\\n\"\nassert solution() == \"9\\n\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n4 7\\n\") == \"3\\n\"\nassert solution(\"3\\n4 3 1\\n\") == \"9\\n\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\\n\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n4 7\") == \"3\"\nassert solution(\"3\\n4 3 1\") == \"9\"\n"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3\\n\", \"Test case 1 failed\"\nassert solution(stdin) == \"9\\n\", \"Test case 2 failed\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n4 7\\n\") == \"3\"\nassert solution(\"3\\n4 3 1\\n\") == \"9\"\n"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n4 7\\n\") == \"3\\n\"\nassert solution(\"3\\n4 3 1\\n\") == \"9\\n\"\n"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n4 7\") == \"3\"\nassert solution(\"3\\n4 3 1\") == \"9\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '3\\n', \"The correct output should be 3.\\nActual output: \" + solution(stdin)\n"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Input\\n2\\n4 7\\n\\nInput\\n3\\n4 3 1\\n\\nOutput\\n3\\n\\nInput\\n2\\n4 7\\n\\nOutput\\n3\\n\\nInput\\n3\\n4 3 1\\n\\nOutput\\n9\") == \"3\\n\\n9\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r').read()) == '9'\nassert solution(open('input_2.txt', 'r').read()) == '2'\nassert solution(open('input_3.txt', 'r').read()) == '0'\nassert solution(open('input_4.txt', 'r').read()) == '-1'"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"9\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"-1\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n3\n4 8 5\n''') == '9\\n'\n\nassert solution('''\n5\n3 10 2 1 5\n''') == '2\\n'\n\nassert solution('''\n4\n0 5 15 10\n''') == '0\\n'\n\nassert solution('''\n1\n1\n''') == '-1\\n'"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n4 8 5\") == \"9\\n\"\nassert solution(\"5\\n3 10 2 1 5\") == \"2\\n\"\nassert solution(\"4\\n0 5 15 10\") == \"0\\n\"\nassert solution(\"1\\n1\") == \"-1\\n\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4 8 5\") == \"9\"\nassert solution(\"5\\n3 10 2 1 5\") == \"2\"\nassert solution(\"4\\n0 5 15 10\") == \"0\"\nassert solution(\"1\\n1\") == \"-1\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n4 8 5\\n5\\n4\\n0 5 15 10\\n1\\n1\\n\") == \"9\"\nassert solution(\"5\\n3 10 2 1 5\\n4\\n0 5 15 10\\n1\\n1\\n\") == \"2\"\nassert solution(\"4\\n0 5 15 10\\n1\\n1\\n\") == \"0\"\nassert solution(\"1\\n1\\n\") == \"-1\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n4 8 5\\n5\\n4\\n0 5 15 10\\n1\\n1\\n') == '9'\nassert solution('5\\n3 10 2 1 5\\n4\\n0 5 15 10\\n1\\n1\\n') == '2'\nassert solution('4\\n0 5 15 10\\n1\\n1\\n') == '0'\nassert solution('1\\n1\\n') == '-1'"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n4 8 5\\n5\\n4\\n0 5 15 10\\n1\\n1\\n\") == \"9\"\nassert solution(\"5\\n3 10 2 1 5\\n4\\n0 5 15 10\\n1\\n1\\n\") == \"2\"\nassert solution(\"4\\n0 5 15 10\\n1\\n1\\n\") == \"0\"\nassert solution(\"1\\n1\\n\") == \"-1\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n4 8 5') == '9\\n'\nassert solution('5\\n3 10 2 1 5') == '2\\n'\nassert solution('4\\n0 5 15 10') == '0\\n'\nassert solution('1\\n1') == '-1\\n'"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n4 8 5\\n\\n5\\n3 10 2 1 5\\n\\n4\\n0 5 15 10\\n\\n1\\n1\\n') == '9\\n'\nassert solution('5\\n3 10 2 1 5\\n\\n4\\n0 5 15 10\\n\\n1\\n1\\n') == '2\\n'\nassert solution('4\\n0 5 15 10\\n\\n1\\n1\\n') == '0\\n'\nassert solution('1\\n1\\n') == '-1\\n'\n"
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\") == \"3\\n\"\nassert solution(\"13 4 5\\n7 8 9 10\") == \"1\\n\"\nassert solution(\"10 20 5\") == \"0\\n\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected_output, f\"Your solution is incorrect. Please check the given examples and the function signature.\"\n"
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\") == \"3\\n\"\nassert solution(\"13 4 5\\n7 8 9 10\") == \"1\\n\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\\n\") == \"3\\n\"\nassert solution(\"13 4 5\\n7 8 9 10\\n\") == \"1\\n\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\\n\") == \"3\"\nassert solution(\"13 4 5\\n7 8 9 10\\n\") == \"1\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\") == \"3\\n\"\nassert solution(\"13 4 5\\n7 8 9 10\") == \"1\\n\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n10 4 5\n3 5 7 10\n''') == '3'\nassert solution('''\n13 4 5\n7 8 9 10\n''') == '1'"
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='10 4 5\\n3 5 7 10') == '3\\n'\nassert solution(stdin='13 4 5\\n7 8 9 10') == '1\\n'"
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='10 4 5\\n3 5 7 10\\n\\n13 4 5\\n7 8 9 10') == '3\\n'\nassert solution(stdin='13 4 5\\n7 8 9 10\\n\\n') == '1\\n'"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n101\\n3 3\\n3 2\\n3 1\") == \"2\"\nassert solution(\"4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\") == \"4\"\nassert solution(\"6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\") == \"6\""
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n101\\n3 3\\n3 2\\n3 1\\n\") == \"2\"\nassert solution(\"4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\\n\") == \"4\"\nassert solution(\"6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n\") == \"6\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 2\nassert solution(4) == 4\nassert solution(6) == 6"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected: '{expected_output}', Received: '{solution(input())}'\""
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n101\\n3 3\\n3 2\\n3 1\\n\") == \"2\"\nassert solution(\"4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\\n\") == \"4\"\nassert solution(\"6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n\") == \"6\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_data) == output_data, f\"Test failed for input {input_data}, expected output {output_data}\""
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n101\\n3 3\\n3 2\\n3 1\\n\") == \"2\\n\"\nassert solution(\"4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\\n\") == \"4\\n\"\nassert solution(\"6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n\") == \"6\\n\""
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\npass\""
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n101\\n3 3\\n3 2\\n3 1\") == \"2\"\nassert solution(\"4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\\n1 5\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\") == \"4\"\nassert solution(\"6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\") == \"6\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\") == \"1111\"\nassert solution(\"5 3\") == \"01010\"\nassert solution(\"7 3\") == \"1011011\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4, 4) == '1111'\nassert solution(5, 3) == '01010'\nassert solution(7, 3) == '1011011'"
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\") == \"01010\"\nassert solution(\"7 3\") == \"1011011\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('Input\\n4 4\\nOutput\\n1111\\nInput\\n5 3\\nOutput\\n01010\\nInput\\n7 3\\nOutput\\n1011011') == '1111\\n01010\\n1011011'\nassert solution('Input\\n6 6\\nOutput\\n0000') == '0000'\nassert solution('Input\\n2 2\\nOutput\\n00') == '00'\nassert solution('Input\\n10 10\\nOutput\\n
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 4') == '1111', 'Test case 1 failed'\nassert solution('5 3') == '01010', 'Test case 2 failed'\nassert solution('7 3') == '1011011', 'Test case 3 failed'"
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4 4\n\"\"\") == \"1111\"\n\nassert solution(\"\"\"\n5 3\n\"\"\") == \"01010\"\n\nassert solution(\"\"\"\n7 3\n\"\"\") == \"1011011\"\n\nassert solution(\"\"\"\n8 5\n\"\"\") == \"0000000\"\n\nassert solution(\"\"\"\n1 3\n\"\"\") == \"001\"\n\nassert solution(\"\"\"\n9 4\n\"\"\") == \"11111\"\n\nassert solution(\"\"\"\n10 5\n\"\"\") == \"1001001\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1111\", \"1 incorrect solution\"\nassert solution(input()) == \"01010\", \"2 incorrect solution\"\nassert solution(input()) == \"1011011\", \"3 incorrect solution\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\") == \"1111\", \"Test 1\"\nassert solution(\"5 3\") == \"01010\", \"Test 2\"\nassert solution(\"7 3\") == \"1011011\", \"Test 3\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\") == \"1111\"\nassert solution(\"5 3\") == \"01010\"\nassert solution(\"7 3\") == \"1011011\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, \"Incorrect output\"\n"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n\") == \"1/2\\n\"\nassert solution(\"3\\n1 1 1\\n\") == \"0/1\\n\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(input())) == \"0/1\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"0/1\"\nassert solution(1) == \"1/2\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n\\n3\\n1 1 1\\n\\n\") == \"1/2\\n\"\nassert solution(\"3\\n1 1 1\\n\\n\") == \"0/1\\n\"\nassert solution(\"2\\n1 2 3 4\\n\\n\") == \"1/3\\n1/4\\n\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1 1 1') == '0/1\\n', 'Test 1'\nassert solution('1\\n1') == '1/1\\n', 'Test 2'\nassert solution('1\\n2') == '2/1\\n', 'Test 3'\nassert solution('1\\n3') == '1/2\\n', 'Test 4'\nassert solution('1\\n4') == '0/2\\n', 'Test 5'"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1/2\\n0/1\", \"Test case not passed\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1/2\", \"Test failed\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n\") == \"1/2\"\nassert solution(\"3\\n1 1 1\\n\") == \"0/1\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Output is {output}, but the problem statement asks you to return the gcd(p, q) as a fraction, which you cannot do.\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n\") == \"1 0 1 0 0\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n') == '1 0 1 0 0\\n'\nassert solution('5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\\n') == '4 3 2 1 0\\n'\n\nsolution = '''\n"
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n\") == \"1 0 1 0 0\\n\"\nassert solution(\"5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\\n\") == \"4 3 2 1 0\\n\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == output"
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n\") == \"1 0 1 0 0\\n\"\nassert solution(\"5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\\n\") == \"4 3 2 1 0\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n1 2\\n2 2\\n3 2\\n4 2\\n\") == \"2 1 0 1 0\\n\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n\") == \"1 0 1 0 0\\n\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output, f\"Input: {stdin}\\nOutput: {solution(stdin)}\\nExpected output: {expected_output}\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\") == \"1 0 1 0 0\\n\"\nassert solution(\"5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\") == \"4 3 2 1 0\\n\"\n"
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Input {input()} should output {output()}, but got {solution(input())}.\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n4 5 1 7 4\") == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\"\nassert solution(\"2\\n1 2\") == \"0\\n2\\n11\\n11\"\nassert solution(\"3\\n1 1 1\") == \"1\\n0\\n0\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\"1\n8\n01010\n00011\n01010\n10010\n00011\n11000\n00011\n11000\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Solution does not match the expected output. \\nInput: {stdin}\\nExpected Output: {expected}\\nActual Output: {solution(stdin)}\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('Input\\n5\\n4 5 1 7 4\\n\\nOutput\\n1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\\n') == '1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\\n'\nassert solution('Input\\n2\\n1 2\\n\\nOutput\\n0\\n2\\n11\\n11\\n') == '0\\n2\\n11\\n11\\n'\nassert solution('Input\\n3\\n1 1 1\\n\\nOutput\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n') == '1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n4 5 1 7 4\\n\") == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\"\nassert solution(\"2\\n1 2\\n\") == \"0\\n2\\n11\\n11\"\nassert solution(\"3\\n1 1 1\\n\") == \"1\\n0\\n\"\n"
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == output, f\"Test failed: solution(stdin) == output, expected output: '{output}', got: '{solution(stdin)}'\"\nprint(\"Test passed\")"
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n4 5 1 7 4\\n\\n1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\") == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\"\nassert solution(\"2\\n1 2\\n\\n0\\n2\\n11\\n11\\n\\n11\\n11\\n11\") == \"0\\n2\\n11\\n11\\n\\n11\\n11\\n11\"\nassert solution(\"3\\n1 1 1\\n\\n1\\n0\\n0\\n\\n1\\n1\\n1\") == \"1\\n0\\n0\\n\\n1\\n1\\n1\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n4 5 1 7 4\") == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\"\nassert solution(\"2\\n1 2\") == \"0\\n2\\n11\\n11\"\nassert solution(\"3\\n1 1 1\") == \"1\\n0\\n11\\n11\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n4 5 1 7 4\\n\\n1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\\n\\n2\\n1 2\\n\\n3\\n1 1 1\\n\\n\") == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\\n\\n\"\nassert solution(\"2\\n1 2\\n\\n3\\n1 1 1\\n\\n\") == \"0\\n2\\n11\\n11\\n\"\nassert solution(\"3\\n1 1 1\\n\\n\") == \"1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == '1\\n'\n"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1\\n\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\\n\"\nassert solution(\"1\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\\n\"\nassert solution(\"2\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"2\\n\"\nassert solution(\"4\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"4\\n\"\nassert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"6\\n\"\nassert solution(\"1\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\\n\"\nassert solution(\"2\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"2\\n\"\nassert solution(\"4\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"4\\n\"\nassert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"6\\n\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\").read()) == \"1\\n\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\\n\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5') == '1'"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\\n\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n') == '1'"
    }
]