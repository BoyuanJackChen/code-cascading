[
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2 3\") == \"5\\n\"\nassert solution(\"8\\n( 2 ( 2 1 ) ) 3\") == \"9\\n\"\nassert solution(\"4\\n( 12 3 )\") == \"36\\n\"\nassert solution(\"6\\n( 2 ) ( 3 )\") == \"5\\n\"\nassert solution(\"6\\n( ( 2 3 ) )\") == \"5\\n\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test Failed\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n2 3\\n\") == \"5\\n\"\nassert solution(\"8\\n( 2 ( 2 1 ) ) 3\\n\") == \"9\\n\"\nassert solution(\"4\\n( 12 3 )\\n\") == \"36\\n\"\nassert solution(\"6\\n( 2 ) ( 3 )\\n\") == \"5\\n\"\nassert solution(\"6\\n( ( 2 3 ) )\\n\") == \"5\\n\"\n"
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n2 3') == '5\\n'\nassert solution('8\\n( 2 ( 2 1 ) ) 3') == '9\\n'\nassert solution('4\\n( 12 3 )') == '36\\n'\nassert solution('6\\n( 2 ) ( 3 )') == '5\\n'\nassert solution('6\\n( ( 2 3 ) )') == '5\\n'"
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n2 3\") == \"5\"\nassert solution(\"8\\n( 2 ( 2 1 ) ) 3\") == \"9\"\nassert solution(\"4\\n( 12 3 )\") == \"36\"\nassert solution(\"6\\n( 2 ) ( 3 )\") == \"5\"\nassert solution(\"6\\n( ( 2 3 ) )\") == \"5\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test case {test_case_index+1} failed.\\nExpected output: {output}\\nActual output: {solution(input())}\"\n"
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"79\"\nassert solution() == \"9\"\nassert solution() == \"36\"\nassert solution() == \"5\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test Case {case + 1} failed: {input()}, Expected Output: {output}, Actual Output: {solution(input())}\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"The solution for the problem {input()} is incorrect. Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test Case {i + 1} is incorrect. Expected output: {output}, but got: {solution(input())}\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0\") == \"0\", \"Solution 1 should return 0.\"\nassert solution(\"009990001\") == \"3\", \"Solution 2 should return 3.\"\nassert solution(\"29998\") == \"5\", \"Solution 3 should return 5.\"\nassert solution(\"610\") == \"4\", \"Solution 4 should return 4.\"\nassert solution(\"981\") == \"2\", \"Solution 5 should return 2.\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0\") == \"0\", \"0 should be equal to 0\"\nassert solution(\"009990001\") == \"3\", \"009990001 should be equal to 3\"\nassert solution(\"29998\") == \"5\", \"29998 should be equal to 5\"\nassert solution(\"610\") == \"4\", \"610 should be equal to 4\"\nassert solution(\"981\") == \"2\", \"981 should be equal to 2\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0\") == \"0\\n\"\nassert solution(\"009990001\") == \"3\\n\"\nassert solution(\"29998\") == \"5\\n\"\nassert solution(\"610\") == \"4\\n\"\nassert solution(\"981\") == \"2\\n\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"009990001\") == \"3\"\nassert solution(\"29998\") == \"5\"\nassert solution(\"610\") == \"4\"\nassert solution(\"981\") == \"2\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0\") == \"0\\n\", \"Sabotage! exclaimed J.R. Diddly, president and founder of Diddly Widgets Inc.\"\nassert solution(\"009990001\") == \"3\\n\", \"Vandalism, perhaps. Nothing's actually been damaged.\"\nassert solution(\"29998\") == \"5\\n\", \"It's a palindrome.\"\nassert solution(\"610\") == \"4\\n\", \"It's a palindrome.\"\nassert solution(\"981\") == \"2\\n\", \"No.\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0\") == \"0\", \"Sample Input 1: 0\"\nassert solution(\"009990001\") == \"3\", \"Sample Input 2: 009990001\"\nassert solution(\"29998\") == \"5\", \"Sample Input 3: 29998\"\nassert solution(\"610\") == \"4\", \"Sample Input 4: 610\"\nassert solution(\"981\") == \"2\", \"Sample Input 5: 981\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Test failed for input: {input()}, expected output: {expected}\"\n"
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0\") == \"0\", \"Sample Input 1: 0\"\nassert solution(\"009990001\") == \"3\", \"Sample Input 2: 009990001\"\nassert solution(\"29998\") == \"5\", \"Sample Input 3: 29998\"\nassert solution(\"610\") == \"4\", \"Sample Input 4: 610\"\nassert solution(\"981\") == \"2\", \"Sample Input 5: 981\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0\") == \"0\", \"Test failed\"  # Solution: 0\nassert solution(\"009990001\") == \"3\", \"Test failed\"  # Solution: 3\nassert solution(\"29998\") == \"5\", \"Test failed\"  # Solution: 5\nassert solution(\"610\") == \"4\", \"Test failed\"  # Solution: 4\nassert solution(\"981\") == \"2\", \"Test failed\"  # Solution: 2\n"
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0\") == \"0\", \"Test case 1 failed: The output should be 0\"\nassert solution(\"009990001\") == \"3\", \"Test case 2 failed: The output should be 3\"\nassert solution(\"29998\") == \"5\", \"Test case 3 failed: The output should be 5\"\nassert solution(\"610\") == \"4\", \"Test case 4 failed: The output should be 4\"\nassert solution(\"981\") == \"2\", \"Test case 5 failed: The output should be 2\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\") == \"seems legit\\n\"\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\") == \"insufficient service\\n\"\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\") == \"tampered odometer\\n\"\nassert solution(\"2\\n2013 1 0\\n2013 2 0\") == \"seems legit\\n\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\\n\") == \"seems legit\"\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\\n\") == \"insufficient service\"\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\\n\") == \"tampered odometer\"\nassert solution(\"2\\n2013 1 0\\n2013 2 0\\n\") == \"seems legit\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\") == \"seems legit\"\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\") == \"insufficient service\"\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\") == \"tampered odometer\"\nassert solution(\"2\\n2013 1 0\\n2013 2 0\") == \"seems legit\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\") == \"seems legit\"\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\") == \"insufficient service\"\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\") == \"tampered odometer\"\nassert solution(\"2\\n2013 1 0\\n2013 2 0\") == \"seems legit\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"seems legit\"\nassert solution() == \"insufficient service\"\nassert solution() == \"tampered odometer\"\n"
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"seems legit\"\nassert solution(2) == \"insufficient service\"\nassert solution(1) == \"tampered odometer\"\nassert solution(4) == \"seems legit\"\n"
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"seems legit\"\nassert solution(2) == \"insufficient service\"\nassert solution(4) == \"tampered odometer\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"seems legit\"\nassert solution(2) == \"insufficient service\"\nassert solution(4) == \"tampered odometer\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\") == \"seems legit\\n\"\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\") == \"insufficient service\\n\"\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\") == \"tampered odometer\\n\"\nassert solution(\"2\\n2013 1 0\\n2013 2 0\") == \"seems legit\\n\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 2017, 4, 0, 2017, 8, 12000, 2018, 8, 42000) =='seems legit'\nassert solution(3, 2017, 4, 0, 2017, 8, 12000, 2018, 8, 42001) == 'insufficient service'\nassert solution(2, 2017, 11, 0, 2018, 1, 1000) == 'tampered odometer'\nassert solution(2, 2013, 1, 0, 2013, 2, 0) =='seems legit'"
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2\\n0 2 3\\n0 1\\n1\") == \"3\"\nassert solution(\"5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n\") == \"2\"\nassert solution(\"6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\") == \"2\"\nassert solution(\"4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n\") == \"4\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(input())) == 'Output goes here', \"Test failed\"\n"
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2\\n0 2 3\\n0 1\\n1\\n\\n5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n2 4\\n\\n6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n\\n\") == \"3\\n\"\nassert solution(\"5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n2 4\\n\\n6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n\") == \"2\\n\"\nassert solution(\"6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n\") == \"2\\n\"\nassert solution(\"4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n\\n\") == \"4\\n\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Sample Input 1\") == \"3\\n\"\nassert solution(\"Sample Input 2\") == \"2\\n\"\nassert solution(\"Sample Input 3\") == \"2\\n\"\nassert solution(\"Sample Input 4\") == \"4\\n\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"3\"\n"
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2\\n0 2 3\\n0 1\\n1\\n\") == \"3\\n\"\nassert solution(\"5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n\") == \"2\\n\"\nassert solution(\"6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\") == \"2\\n\"\nassert solution(\"4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n\") == \"4\\n\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('test_input_1.txt').read()) == '3\\n'\nassert solution(open('test_input_2.txt').read()) == '2\\n'\nassert solution(open('test_input_3.txt').read()) == '2\\n'\nassert solution(open('test_input_4.txt').read()) == '4\\n'"
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Sample Input 1\") == \"3\\n\"\nassert solution(\"Sample Input 2\") == \"2\\n\"\nassert solution(\"Sample Input 3\") == \"2\\n\"\nassert solution(\"Sample Input 4\") == \"4\\n\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Output the minimum number of colors required to color all vertices of the graph such that no vertices that share an edge are colored using the same color!\\n\"\n"
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Input 1') == 'Output 1'\nassert solution('Input 2') == 'Output 2'\nassert solution('Input 3') == 'Output 3'\nassert solution('Input 4') == 'Output 4'"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"IMPOSSIBLE\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"test_input.txt\", \"r\").read()) == \"2\\n\"\nassert solution(open(\"test_input_2.txt\", \"r\").read()) == \"3\\n\"\nassert solution(open(\"test_input_3.txt\", \"r\").read()) == \"IMPOSSIBLE\\n\"\nassert solution(open(\"test_input_4.txt\", \"r\").read()) == \"IMPOSSIBLE\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n2\nBLUE 1 5000\nRED 5001 10000\n''') == '2'\n\nassert solution('''\n3\nBLUE 1 6000\nRED 2000 8000\nWHITE 7000 10000\n''') == '3'\n\nassert solution('''\n4\nBLUE 1 3000\nRED 2000 5000\nORANGE 4000 8000\nGREEN 7000 10000\n''') == 'IMPOSSIBLE'\n\nassert solution('''\n2\nBLUE 1 4000\nRED 4002 10000\n''') == 'IMPOSSIBLE'"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\\n\"\nassert solution() == \"3\\n\"\nassert solution() == \"IMPOSSIBLE\\n\"\nassert solution() == \"IMPOSSIBLE\\n\"\n"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '2\\n'\nassert solution() == '3\\n'\nassert solution() == 'IMPOSSIBLE\\n'\nassert solution() == 'IMPOSSIBLE\\n'\nassert solution() == '3\\n'\nassert solution() == 'IMPOSSIBLE\\n'\nassert solution() == '2\\n'"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\nBLUE 1 5000\\nRED 5001 10000\\n') == '2\\n'\nassert solution('3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\n') == '3\\n'\nassert solution('4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\n') == 'IMPOSSIBLE\\n'"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\nBLUE 1 5000\\nRED 5001 10000\\n\") == \"2\\n\"\nassert solution(\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\n\") == \"3\\n\"\nassert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"2\\nBLUE 1 4000\\nRED 4002 10000\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"\") == \"\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\nRED 2000 8000\\nORANGE 4000 8000\\nGREEN 7000 10000\") == \"3\\nIMPOSSIBLE\\n\"\nassert solution(\"2\\nBLUE 1 5000\\nRED 5001 10000\") == \"2\\n\"\nassert solution(\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\") == \"3\\n\"\nassert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\") == \"IMPOSSIBLE\\n\"\nassert solution(\"2\\nBLUE 1 4000\\nRED 4002 10000\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == expected_output_1, f\"Test 1 failed: expected output '{expected_output_1}', got '{solution(sample_input_1)}'.\"\nassert solution(sample_input_2) == expected_output_2, f\"Test 2 failed: expected output '{expected_output_2}', got '{solution(sample_input_2)}'.\"\nassert solution(sample_input_3) == expected_output_3, f\"Test 3 failed: expected output '{expected_output_3}', got '{solution(sample_input_3)}'.\"\nassert solution(sample_input_4) == expected_output_4, f\"Test 4 failed: expected output '{expected_output_4}', got '{solution(sample_input_4)}'.\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"PRATTATTATTIC\") == 6, \"Invalid output\"\nassert solution(\"GGGGGGGGG\") == 1, \"Invalid output\"\nassert solution(\"PRIME\") == 5, \"Invalid output\"\nassert solution(\"BABBABABBABBA\") == 6, \"Invalid output\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Solution 1 is incorrect\"\nassert solution(\"GGGGGGGGG\") == \"1\", \"Solution 2 is incorrect\"\nassert solution(\"PRIME\") == \"5\", \"Solution 3 is incorrect\"\nassert solution(\"BABBABABBABBA\") == \"6\", \"Solution 4 is incorrect\"\n"
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Sample Output 1\"\nassert solution(\"GGGGGGGGG\") == \"1\", \"Sample Output 2\"\nassert solution(\"PRIME\") == \"5\", \"Sample Output 3\"\nassert solution(\"BABBABABBABBA\") == \"6\", \"Sample Output 4\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"PRATTATTATTIC\") == 6, \"The weight of the maximal factoring of the input string 'PRATTATTATTIC' should be 6.\"\nassert solution(\"GGGGGGGGG\") == 1, \"The weight of the maximal factoring of the input string 'GGGGGGGGG' should be 1.\"\nassert solution(\"PRIME\") == 5, \"The weight of the maximal factoring of the input string 'PRIME' should be 5.\"\nassert solution(\"BABBABABBABBA\") == 6, \"The weight of the maximal factoring of the input string 'BABBABABBABBA' should be 6.\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\"\nassert solution(\"GGGGGGGGG\") == \"1\"\nassert solution(\"PRIME\") == \"5\"\nassert solution(\"BABBABABBABBA\") == \"6\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Incorrect output for the sample input 1\"\nassert solution(\"GGGGGGGGG\") == \"1\", \"Incorrect output for the sample input 2\"\nassert solution(\"PRIME\") == \"5\", \"Incorrect output for the sample input 3\"\nassert solution(\"BABBABABBABBA\") == \"6\", \"Incorrect output for the sample input 4\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('PRATTATTATTIC') == 6, 'Sample Input 1'\nassert solution('GGGGGGGGG') == 1, 'Sample Input 2'\nassert solution('PRIME') == 5, 'Sample Input 3'\nassert solution('BABBABABBABBA') == 6, 'Sample Input 4'"
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"PRATTATTATTIC\") == 6, \"Expected output: 6, but got: \" + str(solution(\"PRATTATTATTIC\"))\nassert solution(\"GGGGGGGGG\") == 1, \"Expected output: 1, but got: \" + str(solution(\"GGGGGGGGG\"))\nassert solution(\"PRIME\") == 5, \"Expected output: 5, but got: \" + str(solution(\"PRIME\"))\nassert solution(\"BABBABABBABBA\") == 6, \"Expected output: 6, but got: \" + str(solution(\"BABBABABBABBA\"))\n"
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Expected output 6, got: \" + solution(\"PRATTATTATTIC\")\nassert solution(\"GGGGGGGGG\") == \"1\", \"Expected output 1, got: \" + solution(\"GGGGGGGGG\")\nassert solution(\"PRIME\") == \"5\", \"Expected output 5, got: \" + solution(\"PRIME\")\nassert solution(\"BABBABABBABBA\") == \"6\", \"Expected output 6, got: \" + solution(\"BABBABABBABBA\")\n"
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Sample Input 1\"\nassert solution(\"GGGGGGGGG\") == \"1\", \"Sample Input 2\"\nassert solution(\"PRIME\") == \"5\", \"Sample Input 3\"\nassert solution(\"BABBABABBABBA\") == \"6\", \"Sample Input 4\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('D 1\\nD 2\\nE\\nD 3\\nD 1\\nE') == '0\\n'\nassert solution('D 2\\nD 1\\nE\\nD 1\\nD 2\\nE') == '1\\n'\nassert solution('I 1 X\\nD 1\\nE\\nE') == '0\\n'\nassert solution('I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE') == '0\\n'"
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n') == '0', \"Test Case 1 failed\"\nassert solution('D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n') == '1', \"Test Case 2 failed\"\nassert solution('I 1 X\\nD 1\\nE\\nE\\n') == '0', \"Test Case 3 failed\"\nassert solution('I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n') == '0', \"Test Case 4 failed\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n\") == \"0\\n\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n\") == \"1\\n\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\\n\") == \"0\\n\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == \"0\\n\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('D 1\\nD 2\\nE\\nD 3\\nD 1\\nE') == '0\\n'\nassert solution('D 2\\nD 1\\nE\\nD 1\\nD 2\\nE') == '1\\n'\nassert solution('I 1 X\\nD 1\\nE\\nE') == '0\\n'\nassert solution('I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE') == '0\\n'"
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '0'\nassert solution(input()) == '1'\nassert solution(input()) == '0'\nassert solution(input()) == '1'\nassert solution(input()) == '0'"
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n\") == \"0\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n\") == \"1\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\\n\") == \"0\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == \"0\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\") == \"0\", \"Sample Output 1\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\") == \"1\", \"Sample Output 2\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\") == \"0\", \"Sample Output 3\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\") == \"0\", \"Sample Output 4\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n\") == \"0\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n\") == \"1\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\\n\") == \"0\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == \"0\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\") == \"0\", \"Sample Output 1\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\") == \"1\", \"Sample Output 2\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\") == \"0\", \"Sample Output 3\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\") == \"0\", \"Sample Output 4\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n') == '0', \"Solution 1\"\nassert solution('D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n') == '1', \"Solution 2\"\nassert solution('I 1 X\\nD 1\\nE\\nE\\n') == '0', \"Solution 3\"\nassert solution('I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n') == '0', \"Solution 4\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Test case {i+1} failed: got {solution(stdin)}, expected {expected}\"\nfor i, (d, b, f, t_0, t_1, t_2) in enumerate(test_cases):\n    assert solution(f\"d {d} b {b} f {f} t_0 {t_0} t_1 {t_1} t_2 {t_2}\") == expected, f\"Test case {i+1} failed: got {solution(f\"d {d} b {b} f {f} t_0 {t_0} t_1 {t_1} t_2 {t_2}\")}, expected {expected}\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\"\nassert solution(\"10 399 0 0 0 0\") == \"399\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\"\nassert solution(\"10 399 0 0 0 0\") == \"399\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"The provided solution {solution(input())} is not correct. Please provide the correct solution for this problem.\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test failed.\"\n"
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"300\\n\", \"The output is incorrect.\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 0 1 0 0 0') == '300'\nassert solution('5 0 1 0 1 0') == '1900'\nassert solution('6 0 1 1 0 0') == '2300'\nassert solution('10 399 0 0 0 0') == '399'"
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Solution does not match the expected output.\\nInput: {stdin}\\nExpected Output: {expected}\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\\n\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\\n\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\\n\"\nassert solution(\"10 399 0 0 0 0\") == \"399\\n\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n2 10\n1 12\n1 13\n\"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n2 10\n1 5\n1 12\n\"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n2 10\n1 5\n1 4\n\"\"\"\n) == \"2\\n\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 10\\n1 12\\n1 13\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 12\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 4\") == \"2\\n\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 10\\n1 12\\n1 13\") == \"2\"\nassert solution(\"2 10\\n1 5\\n1 12\") == \"2\"\nassert solution(\"2 10\\n1 5\\n1 4\") == \"2\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 10\\n1 12\\n1 13\\n\") == \"2\"\nassert solution(\"2 10\\n1 5\\n1 12\\n\") == \"2\"\nassert solution(\"2 10\\n1 5\\n1 4\\n\") == \"2\"\nassert solution(\"2 10\\n1 5\\n4 1\\n\") == \"2\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\", \"Your code is incorrect.\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '2\\n', \"Sample Output 1\"\nassert solution(stdin) == '2\\n', \"Sample Output 2\"\nassert solution(stdin) == '2\\n', \"Sample Output 3\"\nassert solution(stdin) == '2\\n', \"Sample Output 4\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 10\\n1 12\\n1 13\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 12\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 4\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n4 1\") == \"2\\n\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 10\\n1 12\\n1 13\\n\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 12\\n\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 4\\n\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n4 1\\n\") == \"2\\n\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\\n\"\n"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n4\n10 10 5\n10 20 5\n20 10 5\n20 20 5\n''') == '28.0000000000'\n\nassert solution('''\n4\n10 10 5\n10 20 1\n20 10 12\n20 20 8\n''') == '36.2842712475'\n\nassert solution('''\n6\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3\n''') == '28.9705627480'\n\nassert solution('''\n8\n4 4 1\n4 6 1\n4 8 1\n6 6 14\n8 4 1\n8 6 1\n8 8 1\n99 6 -8\n''') == '32.0000000000'\n\nassert solution('''\n4\n5 5 5\n1 1 10\n3 1 7\n5 3 1\n''') == 'IMPOSSIBLE'\n\nassert solution('''\n4\n10 10 5\n10 20 1\n20 10 12\n20 20 8\n''') == 'IMPOSSIBLE'\n\nassert solution('''\n6\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3\n''') == 'IMPOSSIBLE'\n\nassert solution('''\n8\n4 4 1\n4 6 1\n4 8 1\n6 6 14\n8 4 1\n8 6 1\n8 8 1\n99 6 -8\n''') == 'IMPOSSIBLE'\n\nassert solution('''\n4\n5 5 5\n1 1 10\n3 1 7\n5 3 1\n''') == 'IMPOSSIBLE'"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"4\n10 10 5\n10 20 5\n20 10 5\n20 20 5\n\"\"\") == \"28\"\n\nassert solution(\"\"\"4\n10 10 5\n10 20 1\n20 10 12\n20 20 8\n\"\"\") == \"36.2842712475\"\n\nassert solution(\"\"\"6\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3\n\"\"\") == \"28.970562748\"\n\nassert solution(\"\"\"8\n4 4 1\n4 6 1\n4 8 1\n6 6 14\n8 4 1\n8 6 1\n8 8 1\n99 6 -8\n\"\"\") == \"32\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 28"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    4\n    10 10 5\n    10 20 5\n    20 10 5\n    20 20 5\n    \"\"\"\n) == \"28\"\n\nassert solution(\n    \"\"\"\n    4\n    10 10 5\n    10 20 1\n    20 10 12\n    20 20 8\n    \"\"\"\n) == \"36.2842712475\"\n\nassert solution(\n    \"\"\"\n    6\n    1 1 15\n    5 1 100\n    9 1 56\n    1 5 1\n    5 5 33\n    9 5 3\n    \"\"\"\n) == \"28.970562748\"\n\nassert solution(\n    \"\"\"\n    8\n    4 4 1\n    4 6 1\n    4 8 1\n    6 6 14\n    8 4 1\n    8 6 1\n    8 8 1\n    99 6 -8\n    \"\"\"\n) == \"32\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\") == 28\nassert solution(\"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\") == 36.2842712475\nassert solution(\"6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n\") == 28.970562748\nassert solution(\"8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\\n\") == 32"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\") == 28\nassert solution(\"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\") == 36.2842712475\nassert solution(\"6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\") == 28.970562748\nassert solution(\"8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\") == 32"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4\n10 10 5\n10 20 5\n20 10 5\n20 20 5\n\"\"\") == \"28\"\nassert solution(\"\"\"\n4\n10 10 5\n10 20 1\n20 10 12\n20 20 8\n\"\"\") == \"36.2842712475\"\nassert solution(\"\"\"\n6\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3\n\"\"\") == \"28.970562748\"\nassert solution(\"\"\"\n8\n4 4 1\n4 6 1\n4 8 1\n6 6 14\n8 4 1\n8 6 1\n8 8 1\n99 6 -8\n\"\"\") == \"32\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"sample_input1.txt\", \"r\")) == \"28\\n\"\nassert solution(open(\"sample_input2.txt\", \"r\")) == \"36.2842712475\\n\"\nassert solution(open(\"sample_input3.txt\", \"r\")) == \"28.970562748\\n\"\nassert solution(open(\"sample_input4.txt\", \"r\")) == \"32\\n\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    4\n    10 10 5\n    10 20 5\n    20 10 5\n    20 20 5\n    \"\"\"\n) == \"28\"\n\nassert solution(\n    \"\"\"\n    4\n    10 10 5\n    10 20 1\n    20 10 12\n    20 20 8\n    \"\"\"\n) == \"36.2842712475\"\n\nassert solution(\n    \"\"\"\n    6\n    1 1 15\n    5 1 100\n    9 1 56\n    1 5 1\n    5 5 33\n    9 5 3\n    \"\"\"\n) == \"28.970562748\"\n\nassert solution(\n    \"\"\"\n    8\n    4 4 1\n    4 6 1\n    4 8 1\n    6 6 14\n    8 4 1\n    8 6 1\n    8 8 1\n    99 6 -8\n    \"\"\"\n) == \"32\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_1) == \"28\", \"Incorrect output for sample input 1\"\nassert solution(input_2) == \"36.2842712475\", \"Incorrect output for sample input 2\"\nassert solution(input_3) == \"28.970562748\", \"Incorrect output for sample input 3\"\nassert solution(input_4) == \"32\", \"Incorrect output for sample input 4\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"Solution does not match the expected output: {solution(stdin)}!= {expected_output}\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\\n1\\n1\\n1\\n\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == '3'\nassert solution(sample_input_2) == '1'\nassert solution(sample_input_3) == '1'\nassert solution(sample_input_4) == '1'"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\") == \"3\"\nassert solution(\"3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8\") == \"1\"\nassert solution(\"3\\n2 1 6 5\\n2 5 5 4\\n5 1 7 7\") == \"1\"\nassert solution(\"2\\n-1 -2 -1 -1\\n-1 2 -1 -1\") == \"1\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 3 9 5\\n2 2 6 8\\n4 8 9 3\") == \"3\"\nassert solution(\"5 2 7 10\\n7 4 4 10\\n2 4 10 8\") == \"1\"\nassert solution(\"2 1 6 5\\n2 5 5 4\\n5 1 7 7\") == \"1\"\nassert solution(\"-1 -2 -1 -1\\n-1 2 -1 -1\") == \"1\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\\n\") == \"3\\n\"\nassert solution(\"3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8\\n\") == \"1\\n\"\nassert solution(\"3\\n2 1 6 5\\n2 5 5 4\\n5 1 7 7\\n\") == \"1\\n\"\nassert solution(\"2\\n-1 -2 -1 -1\\n-1 2 -1 -1\\n\") == \"1\\n\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\\n\") == \"3\\n\"\nassert solution(\"3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8\\n\") == \"1\\n\"\nassert solution(\"3\\n2 1 6 5\\n2 5 5 4\\n5 1 7 7\\n\") == \"1\\n\"\nassert solution(\"2\\n-1 -2 -1 -1\\n-1 2 -1 -1\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'Output the number of distinct points for which there is at least one pair of line segments that intersects or touches at this point.\\nIf there are infinitely many such points, output -1.'"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\") == \"3\\n\"\nassert solution(\"3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8\") == \"1\\n\"\nassert solution(\"3\\n2 1 6 5\\n2 5 5 4\\n5 1 7 7\") == \"1\\n\"\nassert solution(\"2\\n-1 -2 -1 -1\\n-1 2 -1 -1\") == \"1\\n\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\""
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(10) == \"10\"\nassert solution(55) == \"55\"\nassert solution(101) == \"-1\"\nassert solution(1234321) == \"94708\""
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\") == \"10\", \"Expected 10 but got {}\".format(solution(\"10\"))\nassert solution(\"55\") == \"55\", \"Expected 55 but got {}\".format(solution(\"55\"))\nassert solution(\"101\") == \"-1\", \"Expected -1 but got {}\".format(solution(\"101\"))\nassert solution(\"1234321\") == \"94708\", \"Expected 94708 but got {}\".format(solution(\"1234321\"))"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708\n"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(10) == 10, \"Solution does not work for the given sample input 1.\"\nassert solution(55) == 55, \"Solution does not work for the given sample input 2.\"\nassert solution(101) == -1, \"Solution does not work for the given sample input 3.\"\nassert solution(1234321) == 94708, \"Solution does not work for the given sample input 4.\""
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10) == \"10\\n\"\nassert solution(55) == \"55\\n\"\nassert solution(101) == \"-1\\n\"\nassert solution(1234321) == \"94708\\n\""
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(10) == \"10\"\nassert solution(55) == \"55\"\nassert solution(101) == \"-1\"\nassert solution(1234321) == \"94708\""
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(10) == 10, \"Test Case 1 Failed\"\nassert solution(55) == 55, \"Test Case 2 Failed\"\nassert solution(101) == -1, \"Test Case 3 Failed\"\nassert solution(1234321) == 94708, \"Test Case 4 Failed\""
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(10) == '10'\nassert solution(55) == '55'\nassert solution(101) == '-1'\nassert solution(1234321) == '94708'"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 0 0 0 3\\n') == '6'\nassert solution('1 2 0 0 5\\n') == '2'\nassert solution('1 2 0 0 4\\n') == '4'\nassert solution('1 2 0 0 6\\n') == '0'"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"The output of the function is '{solution(input())}', but the expected output is '{expected_output}'.\""
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3 0 0 0 3) == 6\nassert solution(1 2 0 0 5) == 2\nassert solution(1 2 0 0 4) == 4\nassert solution(1 2 0 0 6) == 0\n"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 0 0 0 3\") == 6\nassert solution(\"1 2 0 0 5\") == 2\nassert solution(\"1 2 0 0 4\") == 4\nassert solution(\"1 2 0 0 6\") == 0\n"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 0, 0, 0, 3) == 6\nassert solution(1, 2, 0, 0, 5) == 2\nassert solution(1, 2, 0, 0, 4) == 4\nassert solution(1, 2, 0, 0, 6) == 0\n"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 0 0 0 3\") == 6\nassert solution(\"1 2 0 0 5\") == 2\nassert solution(\"1 2 0 0 4\") == 4\nassert solution(\"1 2 0 0 6\") == 0"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3 0 0 0 3) == 6, \"The expected output is not correct.\"\nassert solution(1 2 0 0 5) == 2, \"The expected output is not correct.\"\nassert solution(1 2 0 0 4) == 4, \"The expected output is not correct.\"\nassert solution(1 2 0 0 6) == 0, \"The expected output is not correct.\""
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 0 0 0 3\") == \"6\"\nassert solution(\"1 2 0 0 5\") == \"2\"\nassert solution(\"1 2 0 0 4\") == \"4\"\nassert solution(\"1 2 0 0 6\") == \"0\""
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == '6'\nassert solution(open('test_case_1.txt', 'r')) == '6'\nassert solution(open('test_case_2.txt', 'r')) == '2'\nassert solution(open('test_case_3.txt', 'r')) == '4'\nassert solution(open('test_case_4.txt', 'r')) == '0'"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3 0 0 0 3) == 6\nassert solution(1 2 0 0 5) == 2\nassert solution(1 2 0 0 4) == 4\nassert solution(1 2 0 0 6) == 0\n\nfrom typing import List"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Incorrect output. Expected {output()}, but got {solution(input())}\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\"\n"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Solution is incorrect. Expected: {expected}, Received: {solution(stdin)}\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(f\"{0.5 -5.301 3.098}\\n{0.5 8 8}\\n{1 8 8}\\n{0.5 -8 8}\") == f\"{-1.26167861 3.88425357}\\n{9.21068947 2.56226688}\\n{6.22375968 -0.31921472}\\n{-4.36385220 9.46891588}\"\nassert solution(f\"{0.5 -5.301 3.098}\\n{0.5 8 8}\\n{1 8 8}\\n{0.5 -8 8}\") == f\"{-1.26167861 3.88425357}\\n{9.21068947 2.56226688}\\n{6.22375968 -0.31921472}\\n{-4.36385220 9.46891588}\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\"\n\nfrom typing import List\nimport math"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == output, f\"Your solution is incorrect.\\nExpected output: {output}\\nActual output: {solution(stdin=input())}\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input(1)) == sample_output(1)\nassert solution(sample_input(2)) == sample_output(2)\nassert solution(sample_input(3)) == sample_output(3)\nassert solution(sample_input(4)) == sample_output(4)"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'\nassert solution('0.5 -8 8') == '-4.36385220 9.46891588'"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\"\n"
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\\n\") == \"1\\n2\\n\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\\n\") == \"1\\n1\\n\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n\") == \"0\\n2\\n4\\n5\\n\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    2 2\n    1 2\n    2 1\n    \"\"\"\n) == \"1\\n2\"\n\nassert solution(\n    \"\"\"\n    3 3\n    1 2\n    2 3\n    3 1\n    \"\"\"\n) == \"1\\n1\"\n\nassert solution(\n    \"\"\"\n    4 5\n    1 2\n    1 3\n    3 2\n    2 4\n    3 4\n    \"\"\"\n) == \"0\\n2\\n4\\n5\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n2 2\n1 2\n2 1\n\"\"\"\n) == \"1\\n2\\n\"\n\nassert solution(\n    \"\"\"\n3 3\n1 2\n2 3\n3 1\n\"\"\"\n) == \"1\\n1\\n\"\n\nassert solution(\n    \"\"\"\n4 5\n1 2\n1 3\n3 2\n2 4\n3 4\n\"\"\"\n) == \"0\\n2\\n4\\n5\\n\"\n\nassert solution(\n    \"\"\"\n4 5\n1 2\n2 3\n2 4\n3 1\n4 1\n\"\"\"\n) == \"2\\n4\\n5\\n\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 2\\n1 2\\n2 1\\n') == '1\\n2'\nassert solution('3 3\\n1 2\\n2 3\\n3 1\\n') == '1\\n1'\nassert solution('4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n') == '0\\n2\\n4\\n5'\n\nsolution = '''\n"
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 2\\n1 2\\n2 1\\n') == '1\\n2'\nassert solution('3 3\\n1 2\\n2 3\\n3 1\\n') == '1\\n1'\nassert solution('4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n') == '0\\n2\\n4\\n5'"
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\") == \"1\\n2\\n\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\") == \"1\\n1\\n\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\") == \"0\\n2\\n4\\n5\\n\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n2 1\\n2 1\") == [\"1\", \"2\"]\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\\n1 2\\n2 3\\n3 1\") == [\"1\", \"1\"]\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\") == [\"0\", \"2\", \"4\"]\n"
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected, f\"Your solution is incorrect. \\nExpected: {expected}\\nActual: {solution}\"\n"
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '1\\n2'\nassert solution(open('sample_input.txt', 'r')) == '1\\n1'\nassert solution(open('sample_input.txt', 'r')) == '0\\n2'\nassert solution(open('sample_input.txt', 'r')) == '2\\n4'\nassert solution(open('sample_input.txt', 'r')) == '4\\n5'"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n\") == \"11\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n\") == \"infinity\"\nassert solution(\"2 1 0 1\\n0 1 2\\n\") == \"2\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"infinity\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n4 5 0 3\n0 1 1\n1 2 2\n2 0 4\n2 3 1\n2 3 3\n''') == '11\\n'\n\nassert solution('''\n5 5 0 4\n0 1 1\n1 2 1\n2 3 1\n3 0 1\n2 4 1\n''') == 'infinity\\n'\n\nassert solution('''\n2 1 0 1\n0 1 2\n''') == '2\\n'\n\nassert solution('''\n3 3 1 2\n0 1 1\n1 0 1\n1 2 1\n''') == 'infinity\\n'"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"\"\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\") == \"11\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\") == \"infinity\"\nassert solution(\"2 1 0 1\\n0 1 2\") == \"2\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\") == \"infinity\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\") == \"11\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\") == \"infinity\"\nassert solution(\"2 1 0 1\\n0 1 2\") == \"2\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\") == \"infinity\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n\") == \"11\\n\"\n\nassert solution(\n    \"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n\") == \"infinity\\n\"\n\nassert solution(\n    \"2 1 0 1\\n0 1 2\\n\") == \"2\\n\"\n\nassert solution(\n    \"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"infinity\\n\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n\") == \"11\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n\") == \"infinity\"\nassert solution(\"2 1 0 1\\n0 1 2\\n\") == \"2\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"infinity\"\nassert solution(\"1 2 3 4\\n5 6 7 8\\n9 10 11 12\\n13 14 15 16\\n\") == \"infinity\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\") == \"11\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\") == \"infinity\"\nassert solution(\"2 1 0 1\\n0 1 2\") == \"2\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\") == \"infinity\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n4 5 0 3\n0 1 1\n1 2 2\n2 0 4\n2 3 1\n2 3 3\n''') == '11\\n'\nassert solution('''\n5 5 0 4\n0 1 1\n1 2 1\n2 3 1\n3 0 1\n2 4 1\n''') == 'infinity\\n'\nassert solution('''\n2 1 0 1\n0 1 2\n''') == '2\\n'\nassert solution('''\n3 3 1 2\n0 1 1\n1 0 1\n1 2 1\n''') == 'infinity\\n'"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\") == \"11\\n\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\") == \"infinity\\n\"\nassert solution(\"2 1 0 1\\n0 1 2\") == \"2\\n\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\") == \"infinity\\n\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Solution for Input {input()} is incorrect. Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"6\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    '''4 2 1 2 1\n2 1 2\n2 3 4\n'''\n) == '6'\n\nassert solution(\n    '''3 3 1 1\n1 1\n2 2 3\n'''\n) == '0'\n\nassert solution(\n    '''3 2 2 3\n1 1\n2 2 3\n'''\n) == '18'\n\nassert solution(\n    '''3 1 2 3\n2 1 2\n0\n'''\n) == '12'"
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\") == \"6\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\") == \"0\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\") == \"18\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\") == \"12\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"18\", \"Test failed\"\nassert solution() == \"0\", \"Test failed\"\nassert solution() == \"12\", \"Test failed\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 2 1 2 1\\n2 1 2\\n2 3 4') == '6'\nassert solution('3 3 1 1\\n1 1\\n2 2 3') == '0'\nassert solution('3 2 2 3\\n1 1\\n2 2 3') == '18'\nassert solution('3 1 2 3\\n2 1 2\\n0') == '12'"
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"6\\n\"\nassert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\\n\") == \"6\\n\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\\n\") == \"0\\n\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\\n\") == \"18\\n\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\\n\") == \"12\\n\"\n"
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\") == \"6\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\") == \"0\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\") == \"18\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\") == \"12\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n4 2 1 2 1\n2 1 2\n2 3 4\n''') == '6\\n'\n\nassert solution('''\n3 3 1 1\n1 1\n2 2 3\n''') == '0\\n'\n\nassert solution('''\n3 2 2 3\n1 1\n2 2 3\n''') == '18\\n'\n\nassert solution('''\n3 1 2 3\n2 1 2\n0\n''') == '12\\n'"
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Your solution is incorrect.\"\nassert solution(sample_input_2) == sample_output_2, \"Your solution is incorrect.\"\nassert solution(sample_input_3) == sample_output_3, \"Your solution is incorrect.\"\nassert solution(sample_input_4) == sample_output_4, \"Your solution is incorrect.\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Output a single integer that is equal to the number of distinct integers k whose decimal representation contains the digits of 2^e as a substring.\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Solution is incorrect. Expected: {output}, Got: {solution(input())}\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10000001) == \"468559\"\nassert solution(10000005) == \"49401\"\nassert solution(100000016) == \"20\"\nassert solution(90000000000000000000) == \"1\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1000000 1') == '468559'\nassert solution('1000000 5') == '49401'\nassert solution('1000000 16') == '20'\nassert solution('9000000000000000000 62') == '1'"
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input(\"Enter n and e: \")) == \"Output a single integer that is equal to the number of distinct integers k whose decimal representation contains the digits of 2^e as a substring.\\n\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1000000 1\") == \"468559\"\nassert solution(\"1000000 5\") == \"49401\"\nassert solution(\"1000000 16\") == \"20\"\nassert solution(\"9000000000000000000 62\") == \"1\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1000000, 1) == 468559, \"Solution 1 failed\"\nassert solution(1000000, 5) == 49401, \"Solution 2 failed\"\nassert solution(1000000, 16) == 20, \"Solution 3 failed\"\nassert solution(9000000000000000000, 62) == 1, \"Solution 4 failed\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"The solution provided for the problem does not match the expected output. Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1000000 1') == '468559'\nassert solution('1000000 5') == '49401'\nassert solution('1000000 16') == '20'\nassert solution('9000000000000000000 62') == '1'\n\nfrom typing import List"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Output\"\n"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(None) == \"Input Error\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 9\\n5 4 1\\n\") == \"1\\n\"\nassert solution(\"4 13\\n2 2 2 2\\n\") == \"3\\n\"\nassert solution(\"18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\\n\") == \"12\\n\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 9\\n5 4 1\\n') == '1\\n'\nassert solution('4 13\\n2 2 2 2\\n') == '3\\n'\nassert solution('18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\\n') == '12\\n'"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 9\\n5 4 1\") == \"1\"\nassert solution(\"4 13\\n2 2 2 2\") == \"3\"\nassert solution(\"18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\") == \"12\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 9\\n5 4 1\\n') == '1\\n'\nassert solution('4 13\\n2 2 2 2\\n') == '3\\n'\nassert solution('18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\\n') == '12\\n'"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\", \"You need to implement the solution for this problem.\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 9\\n5 4 1') == '1\\n'\nassert solution('4 13\\n2 2 2 2') == '3\\n'\nassert solution('18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6') == '12\\n'"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 9\\n5 4 1\\n4 13\\n18 90\\n1 2 3 4 5 6 1 2 3 4 5 6\\n') == '12\\n'\nassert solution('3 9\\n5 4 1\\n4 13\\n18 90\\n1 2 3 4 5 6 7 8 9 10 11 12\\n') == '7\\n'\nassert solution('3 9\\n5 4 1\\n4 13\\n18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\\n') == '12\\n'\nassert solution('3 9\\n5 4 1\\n4 13\\n18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\\n2 2\\n') == '2\\n'\nassert solution('3 9\\n5 4 1\\n4 13\\n18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\\n2 2 2\\n') == '1\\n'\n"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n4 7 8\\n5\\n2 3 4 5 8\\n\") == 3\n"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('3\\n4 7 8\\n') == '3'\nassert solution('5\\n2 3 4 5 8\\n') == '5'"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 0\nassert solution(3) == 3\nassert solution(5) == 5"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3,4,7,8) == 5\nassert solution(5,2,3,4,5,8) == 5\nassert solution(1,1) == 0\nassert solution(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100) == 0\nassert solution(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100) == 5"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n4 7 8\") == \"3\\n\"\nassert solution(\"5\\n2 3 4 5 8\") == \"5\\n\""
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == expected_output_1, f\"Sample Input 1: {sample_input_1}\\nSample Output 1: {expected_output_1}\"\nassert solution(sample_input_2) == expected_output_2, f\"Sample Input 2: {sample_input_2}\\nSample Output 2: {expected_output_2}\"\nassert solution(sample_input_3) == expected_output_3, f\"Sample Input 3: {sample_input_3}\\nSample Output 3: {expected_output_3}\""
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 5, \"The maximum revenue you can achieve by selling all 3 pieces of data is 5.\"\nassert solution(1) == 0, \"The maximum revenue you can achieve by selling all 1 piece of data is 0.\""
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"3\\n\"\nassert solution(4) == \"3\\n\"\nassert solution(10) == \"0\\n\"\nassert solution(13) == \"5\\n\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\") == \"4\\n\", \"Sample Input 1\"\nassert solution(\"149\") == \"17\\n\", \"Sample Input 2\"\nassert solution(\"123476544\") == \"11112\\n\", \"Sample Input 3\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 4\nassert solution(2) == 17\nassert solution(3) == 11112\nassert solution(4) == -1\nassert solution(5) == -1"
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(6) == 4\nassert solution(149) == 17\nassert solution(123476544) == 11112"
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6') == '4'\nassert solution('149') == '17'\nassert solution('123476544') == '11112'"
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\"\n\nprint(\"Tests passed.\")"
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\") == \"adcb\\n\", \"Sample Input 1\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\") == \"IMPOSSIBLE\\n\", \"Sample Input 2\"\nassert solution(\"f 2\\ndea\\ncfb\") == \"AMBIGUOUS\\ndef solution(stdin: str) -> str: pass\\n\", \"Sample Input 3\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('d 4\\ncab\\ncda\\nccc\\nbadca\\n') == 'adcb\\n'\nassert solution('c 4\\nabc\\nbca\\ncab\\naca\\n') == 'IMPOSSIBLE\\n'\nassert solution('f 2\\ndea\\ncfb\\n') == 'AMBIGUOUS\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\") == \"adcb\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\") == \"IMPOSSIBLE\"\nassert solution(\"f 2\\ndea\\ncfb\") == \"AMBIGUOUS\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('d 4\\ncab\\ncda\\nccc\\nbadca') == 'adcb\\n'\n\nassert solution('c 4\\nabc\\nbca\\ncab\\naca') == 'IMPOSSIBLE\\n'\n\nassert solution('f 2\\ndea\\ncfb') == 'AMBIGUOUS\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\\n\") == \"adcb\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\\n\") == \"IMPOSSIBLE\"\nassert solution(\"f 2\\ndea\\ncfb\\n\") == \"AMBIGUOUS\"\n\nsolution = input()"
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test Case {tc+1} failed\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\") == \"adcb\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\") == \"IMPOSSIBLE\"\nassert solution(\"f 2\\ndea\\ncfb\") == \"AMBIGUOUS\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('d 4\\ncab\\ncda\\nccc\\nbadca\\nf 2\\ndea\\ncfb\\n') == 'adcb\\n'\nassert solution('c 4\\nabc\\nbca\\ncab\\naca\\nf 2\\ndea\\ncfb\\n') == 'IMPOSSIBLE\\n'\nassert solution('f 2\\ndea\\ncfb\\n') == 'AMBIGUOUS\\n'"
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\") == \"adcb\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\") == \"IMPOSSIBLE\"\nassert solution(\"f 2\\ndea\\ncfb\") == \"AMBIGUOUS\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\") == \"adcb\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\") == \"IMPOSSIBLE\"\nassert solution(\"f 2\\ndea\\ncfb\") == \"AMBIGUOUS\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3 3 3') == '9', \"Input 1 is incorrect\"\nassert solution('10 20 0 0') == '10', \"Input 2 is incorrect\"\nassert solution('100 20 543 12') == '164', \"Input 3 is incorrect\"\n\nfrom typing import List"
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3 3 3\\n10 20 0 0\\n100 20 543 12\") == \"9\\n164\\n\", \"Test 1 failed\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3 3 3\\n10 20 0 0\\n100 20 543 12\\n\") == 9\nassert solution(\"2 4 2 4\\n0 0 0 0\\n0 0 0 0\\n\") == 10\nassert solution(\"1 3 2 3\\n0 0 0 0\\n0 0 0 0\\n\") == 9\nassert solution(\"4 4 4 4\\n1 1 1 1\\n1 1 1 1\\n\") == 164\nassert solution(\"3 3 3 3\\n1 1 1 1\\n1 1 1 1\\n\") == 9\n"
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"164\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Test {test_case_number} failed\"\n\ntest_case_number = 1\nstdin = \"\"\"\n2 3 3 3\n10 20 0 0\n100 20 543 12\n\"\"\"\nexpected = \"\"\"\n9\n164\n\"\"\"\n"
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3 3 3') == '9\\n'\nassert solution('10 20 0 0') == '10\\n'\nassert solution('100 20 543 12') == '164\\n'"
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3 3 3\\n10 20 0 0\\n100 20 543 12\") == \"9\\n10\\n164\\n\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3 3 3\\n10 20 0 0\\n100 20 543 12\") == \"9\\n164\"\nassert solution(\"2 4 6 8\\n1 2 3 4\\n5 6 7 8\\n9 10 11 12\") == \"9\\n16\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    2 3 3 3\n    10 20 0 0\n    100 20 543 12\n    \"\"\"\n) == \"9\\n\"\n\nassert solution(\n    \"\"\"\n    5 5 5 5\n    5 5 5 5\n    5 5 5 5\n    5 5 5 5\n    \"\"\"\n) == \"9\\n\"\n\nassert solution(\n    \"\"\"\n    2 3 3 3\n    10 20 0 0\n    100 20 543 12\n    100 20 543 12\n    \"\"\"\n) == \"164\\n\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"164\", \"Test case 3\"\nassert solution(stdin) == \"10\", \"Test case 2\"\nassert solution(stdin) == \"9\", \"Test case 1\"\nassert solution(stdin) == \"10\", \"Test case 1\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"yes\", \"Incorrect solution\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    4 2 3\n    0 1\n    1 0\n    -1 0\n    0 -1\n    -1 1 0\n    2 1 0\n    \"\"\"\n) == \"yes\"\n\nassert solution(\n    \"\"\"\n    4 3 3\n    0 1\n    1 2\n    -1 2\n    0 -1\n    -1 1 -2\n    -1 -1 2\n    0 -1 0\n    \"\"\"\n) == \"no\"\n\nassert solution(\n    \"\"\"\n    3 2 3\n    2 1\n    0 0\n    -1 -2\n    1 1 -2\n    3 6 12\n    \"\"\"\n) == \"yes\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"example.txt\").read()) == \"no\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\\n\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\\n\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\\n\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0') == 'yes', \"The code is incorrect.\"\nassert solution('4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0') == 'no', \"The code is incorrect.\"\nassert solution('3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12') == 'yes', \"The code is incorrect.\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\\n\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\\n\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\\n\") == \"yes\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\"\n"
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\\n\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\\n\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\\n\") == \"yes\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'yes'\nassert solution(open('input_2.txt', 'r').read()) == 'no'\nassert solution(open('input_3.txt', 'r').read()) == 'yes'"
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"652526\") == 4, \"Invalid test case 1.\"\nassert solution(\"12121131221\") == 7, \"Invalid test case 2.\"\nassert solution(\"123456789\") == 1, \"Invalid test case 3.\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"652526\") == \"4\", \"Sample Input 1\"\nassert solution(\"12121131221\") == \"7\", \"Sample Input 2\"\nassert solution(\"123456789\") == \"1\", \"Sample Input 3\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"652526\") == \"4\", \"The output should be 4\"\nassert solution(\"12121131221\") == \"7\", \"The output should be 7\"\nassert solution(\"123456789\") == \"1\", \"The output should be 1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"652526\") == \"4\\n\", \"Test Input 1\"\nassert solution(\"12121131221\") == \"7\\n\", \"Test Input 2\"\nassert solution(\"123456789\") == \"1\\n\", \"Test Input 3\"\n"
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\\nSample Input 1:\\n3 3\\n1\\n1 2\\n2 3\\n1 3\\nSample Output 1:\\n0\\n\\nSample Input 2:\\n4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\nSample Output 2:\\n24\\n\\nSample Input 3:\\n6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\nSample Output 3:\\n800\\n\") == \"0\\n\"\nassert solution(\"4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\nSample Input 2:\\n4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\nSample Output 2:\\n24\\n\\nSample Input 3:\\n6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\nSample Output 3:\\n800\\n\") == \"24\\n\"\nassert solution(\"6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\nSample Input 3:\\n6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\nSample Output 3:\\n800\\n\") == \"800\\n\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\\n\") == \"0\\n\"\nassert solution(\"4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n\") == \"24\\n\"\nassert solution(\"6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\n\") == \"800\\n\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 800"
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\\n\") == \"0\\n\"\nassert solution(\"4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n\") == \"24\\n\"\nassert solution(\"6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\n\") == \"800\\n\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\\n\") == \"0\\n\"\nassert solution(\"4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n\") == \"24\\n\"\nassert solution(\"6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\n\") == \"800\\n\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\\nSample Output 1: 0\\n\\n3 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\nSample Output 2: 24\\n\\n6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\nSample Output 3: 800\") == \"0\\n\"\nassert solution(\"4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\nSample Output 2: 24\\n\\n6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\nSample Output 3: 800\") == \"24\\n\"\nassert solution(\"6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\nSample Output 3: 800\") == \"800\\n\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\\n\") == \"0\\n\"\nassert solution(\"4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n\") == \"24\\n\"\nassert solution(\"6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\n\") == \"800\\n\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\nassert solution(input3) == output3\n\ninput1 = \"\"\"\n3 3\n1\n1 2\n2 3\n1 3\n\"\"\"\n\noutput1 = \"0\"\n\ninput2 = \"\"\"\n4 4\n24 10\n1 3\n2 3\n2 4\n1 4\n\"\"\"\n\noutput2 = \"24\"\n\ninput3 = \"\"\"\n6 8\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6\n\"\"\"\n\noutput3 = \"800\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_string) == output_string, f\"Test failed for sample input {sample_input}, expected {output_string}, got {solution(input_string)}\" for sample_input, output_string in [(\"Sample Input 1\", \"0\"), (\"Sample Input 2\", \"24\"), (\"Sample Input 3\", \"800\")]."
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 3 2 4\\n\") == \"1 4\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"1 2 3 4 5\\n\"\nassert solution(\"4\\n2 1 4 3\\n\") == \"-1\\n\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 3 2 4\") == \"1 4\\n\", \"Test 1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1 2 3 4 5\\n\", \"Test 2\"\nassert solution(\"4\\n2 1 4 3\") == \"-1\\n\", \"Test 3\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 3 2 4\") == \"1 4\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1 2 3 4 5\\n\"\nassert solution(\"4\\n2 1 4 3\") == \"-1\\n\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 3 2 4\") == \"1 4\\n\", \"Test 1 failed\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1 2 3 4 5\\n\", \"Test 2 failed\"\nassert solution(\"4\\n2 1 4 3\") == \"-1\\n\", \"Test 3 failed\"\n\nsolution = \"\"\"\nfrom typing import List"
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 3 2 4\") == [\"1\", \"4\"]\nassert solution(\"5\\n1 2 3 4 5\") == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(\"4\\n2 1 4 3\") == [\"-1\"]"
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input(\"Enter the length of the given sequence: \")) == \"1 4\"\nassert solution(input(\"Enter the length of the given sequence: \")) == \"1 2 3 4 5\"\nassert solution(input(\"Enter the length of the given sequence: \")) == \"-1\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 3 2 4\\n\") == \"1 4\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"1 2 3 4 5\\n\"\nassert solution(\"4\\n2 1 4 3\\n\") == \"-1\\n\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 3 2 4\") == \"1 4\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1 2 3 4 5\\n\"\nassert solution(\"4\\n2 1 4 3\") == \"-1\\n\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 3 2 4\\n\") == \"1 4\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"1 2 3 4 5\\n\"\nassert solution(\"4\\n2 1 4 3\\n\") == \"-1\\n\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 3 2 4\\n\") == \"1 4\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"1 2 3 4 5\\n\"\nassert solution(\"4\\n2 1 4 3\\n\") == \"-1\\n\""
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"8\", \"Incorrect output.\"\nassert solution(stdin) == \"8\", \"Incorrect output.\"\nassert solution(stdin) == \"1\", \"Incorrect output.\"\nassert solution(stdin) == \"5\", \"Incorrect output.\""
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 8\\n..#..#..\\n.######.\\n.######.\\n..#..#..\\n\") == 8\nassert solution(\"3 3\\n...\\n.#.\\n...\\n\") == 1\nassert solution(\"2 6\\n.#####\\n#####.\\n\") == 5"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == \"8\"\nassert solution(open('input2.txt', 'r')) == \"1\"\nassert solution(open('input3.txt', 'r')) == \"5\"\n"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"8\"\nassert solution(open(\"input.txt\", \"r\")) == \"5\"\nassert solution(open(\"input.txt\", \"r\")) == \"1\""
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test case failed. Expected: {output}, Got: {solution(input())}\"\n"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == output, \"The solution is incorrect\"\nprint(f\"The solution is {output}\")\n"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"8\\n\"\nassert solution() == \"1\\n\"\nassert solution() == \"5\\n\""
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test case failed.\""
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"8\", \"The solution is incorrect.\""
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '8', 'Test case 1 failed'\nassert solution(stdin) == '8', 'Test case 2 failed'\nassert solution(stdin) == '1', 'Test case 3 failed'"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1') == '6\\n19 12 2 18 5 5'\nassert solution('3 3 3\\n3 1 1\\n1 3 2\\n3 2 3') == '13\\n4 2 6 1 9 7 5 5 7 1 2 3 3'\nassert solution('3 2 2\\n1 2\\n2 1\\n1 2') == '-1'"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == 6\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\") == 13\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == -1"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == \"6\\n19 12 2 18 5 5\\n\"\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\") == \"13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\\n\"\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == \"-1\\ndef solution(stdin: str) -> str: pass\""
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"6\\n19 12 2 18 5 5\\n4 2 6 1 9 7 5 5 7 1 2 3 3\\n13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\""
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected_output, f\"The solution is {solution} but the expected output is {expected_output}\""
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n\") == \"6\\n19 12 2 18 5 5\\n\"\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\\n\") == \"13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\\n\"\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\\n\") == \"-1\\n\""
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == 6\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\") == 13\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == -1"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == \"6\\n19 12 2 18 5 5\"\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\") == \"13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\"\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == \"-1\"\n\nfrom typing import List"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1') == '6\\n19 12 2 18 5 5'\nassert solution('3 3 3\\n3 1 1\\n1 3 2\\n3 2 3') == '13\\n4 2 6 1 9 7 5 5 7 1 2 3 3'\nassert solution('3 2 2\\n1 2\\n2 1\\n1 2') == '-1'\nassert solution('4 2 5\\n1 2 3\\n2 3 4\\n3 4 5\\n6 7 8\\n9 10 11\\n12 13 14') == '21\\n5 10 15 20 25 30 35 40 45 50'\nassert solution('3 2 2\\n1 2\\n2 1\\n1 2') == '-1'"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == \"6\\n19 12 2 18 5 5\\n4 2 6 1 9 7 5 5 7 1 2 3 3\"\nassert solution(open(\"sample_input.txt\", \"r\")) == \"13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\\n-1\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"Output 1\\n5 1\\n\"\nassert solution(open(\"sample_input1.txt\", \"r\").read()) == \"Output 1\\n5 1\\n\"\nassert solution(open(\"sample_input2.txt\", \"r\").read()) == \"Output 2\\n1 5\\n\"\nassert solution(open(\"sample_input3.txt\", \"r\").read()) == \"Output 3\\n3 2\\n\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == expected_output, f\"Test case {i + 1} failed.\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"5 1\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n3\\n3\\n3\\n3\\n3\\n1\\n2\\n3\\n4\\n\\n4\\n\\n4\\n\\n\") == \"5 1\\n\"\nassert solution(\"5\\n4\\n3\\n2\\n1\\n0\\n1\\n2\\n3\\n4\\n\") == \"1 5\\n\"\nassert solution(\"4\\n1\\n5\\n3\\n6\\n1\\n2\\n3\\n\\n4\\n\\n4\\n\\n\\n\") == \"3 2\\n\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    5\n    3\n    3\n    3\n    3\n    3\n    1\n    2\n    3\n    4\n    \"\"\"\n) == \"\"\"\n5 1\n\"\"\"\n\nassert solution(\n    \"\"\"\n    5\n    4\n    3\n    2\n    1\n    0\n    1\n    2\n    3\n    4\n    \"\"\"\n) == \"\"\"\n1 5\n\"\"\"\n\nassert solution(\n    \"\"\"\n    4\n    1\n    5\n    3\n    6\n    1\n    2\n    3\n    \"\"\"\n) == \"\"\"\n3 2\n\"\"\"\n\nfrom sympy.ntheory import isprime"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test case {t+1} failed!\" for t, (input, output) in enumerate(zip(input_list, output_list))"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected, f\"Solution: {solution}, Expected: {expected}\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"5 1\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(input())) == str(input()), \"Inputs do not match.\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\"\nassert solution() == \"5\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Test case 1 failed\"\nassert solution(sample_input_2) == sample_output_2, \"Test case 2 failed\"\nassert solution(sample_input_3) == sample_output_3, \"Test case 3 failed\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 1"
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\", \"Your solution is incorrect.\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(str(5)) == \"1\"\nassert solution(str(6)) == \"5\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 1, \"Expected 1, got: {} instead.\".format(solution(3))\nassert solution(10) == 5, \"Expected 5, got: {} instead.\".format(solution(10))\nassert solution(5) == 5, \"Expected 5, got: {} instead.\".format(solution(5))"
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output\nprint(\"PASS\") if all(True for i, j, k in inputs) else print(\"FAIL\")"
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n3 0\\n3 1\\n3 2\\n3 3\\n3 4\\n\") == \"1\"\nassert solution(\"5\\n4 0\\n3 1\\n2 2\\n1 3\\n0 4\\n\") == \"5\"\nassert solution(\"6\\n3 0\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n\") == \"5\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1\\n\", \"The code does not return the correct output.\\n\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n3 0\\n3 1\\n3 2\\n3 3\\n3 4') == '1\\n'\nassert solution('5\\n4 0\\n3 1\\n2 2\\n1 3\\n0 4') == '5\\n'\nassert solution('6\\n3 0\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1') == '5\\n'"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"4\\n3\\n4\\n5\\n6\\n\", \"Sample Output 3: Expected '4\\n3\\n4\\n5\\n6\\n' but got '{}'.\".format(solution())"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"0\\n\"\nassert solution() == \"4\\n3\\n4\\n5\\n6\\n\"\nassert solution() == \"5\\n1\\n2\\n3\\n6\\n7\\n\""
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8\\n1 3 1\\n2 3 1\\n3 4 3\\n4 5 4\\n5 6 3\\n6 7 2\\n6 8 2\") == \"4\\n3\\n4\\n5\\n6\"\nassert solution(\"8\\n1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n5 6 2\\n7 8 1\") == \"0\"\nassert solution(\"9\\n1 2 2\\n1 3 1\\n1 4 5\\n1 5 5\\n2 6 3\\n3 7 3\\n4 8 1\\n5 9 2\") == \"5\\n1\\n2\\n3\\n6\\n7\""
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"\"\"\n4\n3\n4\n5\n6\n\"\"\""
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"Output 1:\\n3\\n4\\n5\\n6\\n\"\n"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8\\n1 3 1\\n2 3 1\\n3 4 3\\n4 5 4\\n5 6 3\\n6 7 2\\n6 8 2\") == \"4\\n3\\n4\\n5\\n6\\n\"\nassert solution(\"8\\n1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n5 6 2\\n7 8 1\") == \"0\\n\"\nassert solution(\"9\\n1 2 2\\n1 3 1\\n1 4 5\\n1 5 5\\n2 6 3\\n3 7 3\\n4 8 1\\n5 9 2\") == \"5\\n1\\n2\\n3\\n6\\n7\\n\""
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0\\n0\\n1\\n2\\n4\\n\""
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\nassert solution(input3) == output3"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8\\n1 3 1\\n2 3 1\\n3 4 3\\n4 5 4\\n5 6 3\\n6 7 2\\n6 8 2\\n\") == \"4\\n3\\n4\\n5\\n6\\n\"\nassert solution(\"8\\n1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n5 6 2\\n7 8 1\\n\") == \"0\\n\"\nassert solution(\"9\\n1 2 2\\n1 3 1\\n1 4 5\\n1 5 5\\n2 6 3\\n3 7 3\\n4 8 1\\n5 9 2\\n\") == \"5\\n1\\n2\\n3\\n6\\n7\\n\""
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '0'"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\nV1 V2 V1 V1 V2\\n\") == \"5\\n\"\nassert solution(\"2 1\\nV1 V2 V1 V1 V2\\n\") == \"6\\n\"\nassert solution(\"1 2\\nR10 V1 V2 V1 E\\n\") == \"30\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r').read()) == 30"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"5\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\nV1 V2 V1 V1 V2\\nSample Input 1\\nSample Output 1\\nSample Input 2\\nSample Output 2\\nSample Input 3\\nSample Output 3\") == \"5\"\nassert solution(\"2 1\\nV1 V2 V1 V1 V2\\nSample Input 1\\nSample Output 1\\nSample Input 2\\nSample Output 2\\nSample Input 3\\nSample Output 3\") == \"6\"\nassert solution(\"1 2\\nR10 V1 V2 V1 E\\nSample Input 1\\nSample Output 1\\nSample Input 2\\nSample Output 2\\nSample Input 3\\nSample Output 3\") == \"30\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output() for input, output in [\n    (input1, output1),\n    (input2, output2),\n    (input3, output3),\n]"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == solution(stdin=None) # test case 1\nassert solution == solution(stdin=\"1 2\\nV1 V2 V1 V1 V2\") # test case 2\nassert solution == solution(stdin=\"1 2\\nR10 V1 V2 V1 E\") # test case 3"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\nV1 V2 V1 V1 V2\\n\") == \"5\"\nassert solution(\"2 1\\nV1 V2 V1 V1 V2\\n\") == \"6\"\nassert solution(\"1 2\\nR10 V1 V2 V1 E\\n\") == \"30\"\n"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 2\\nV1 V2 V1 V1 V2\\n') == '5'\nassert solution('2 1\\nV1 V2 V1 V1 V2\\n') == '6'\nassert solution('1 2\\nR10 V1 V2 V1 E\\n') == '30'"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(str(int(input()) + 1)) == str(int(input()))\nassert solution(str(int(input()) + 2)) == str(int(input()) + 1)\nassert solution(str(int(input()) + 3)) == str(int(input()) + 2)"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\nV1 V2 V1 V1 V2\\n\") == \"5\"\nassert solution(\"2 1\\nV1 V2 V1 V1 V2\\n\") == \"6\"\nassert solution(\"1 2\\nR10 V1 V2 V1 E\\n\") == \"30\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10 24') == '38'\nassert solution('10 11') == 'impossible'\nassert solution('9 216') == '546'"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(10, 24) == 38\nassert solution(10, 11) == \"impossible\"\nassert solution(9, 216) == 546"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 24\") == \"38\"\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == \"546\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 24\") == \"38\", \"Test 1 failed.\"\nassert solution(\"10 11\") == \"impossible\", \"Test 2 failed.\"\nassert solution(\"9 216\") == \"546\", \"Test 3 failed.\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 24\") == \"38\"\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == \"546\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 24\") == 38\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == 546"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 24\") == \"38\\n\", \"Incorrect output 1\"\nassert solution(\"10 11\") == \"impossible\\n\", \"Incorrect output 2\"\nassert solution(\"9 216\") == \"546\\n\", \"Incorrect output 3\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10 24') == '38', \"Test failed for input 1\"\nassert solution('10 11') == 'impossible', \"Test failed for input 2\"\nassert solution('9 216') == '546', \"Test failed for input 3\""
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 466.662\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"20 60 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10\") == \"466.662\"\nassert solution(\"3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2\") == \"10.00005\"\nassert solution(\"3 4 1 0\\n0 2 0.25 8\") == \"2.0\""
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"20 60 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10\") == \"466.662\"\nassert solution(\"3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2\") == \"10.00005\"\nassert solution(\"3 4 1 0\\n0 2 0.25 8\") == \"2.0\""
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"20 60 2 1\n5 15 0.33333 30\n22 60 0.66666 70\n0 10\"\"\") == \"466.662\"\n\nassert solution(\"\"\"3 4 2 1\n1 3 0.25 8\n2 4 0.66667 15\n1 2\"\"\") == \"10.00005\"\n\nassert solution(\"\"\"3 4 1 0\n0 2 0.25 8\"\"\") == \"2.0\""
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"20 60 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10\") == 466.662\nassert solution(\"3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2\") == 10.00005\nassert solution(\"3 4 1 0\\n0 2 0.25 8\") == 2.0\n"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"20 60 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10\") == 466.662, \"Incorrect answer for sample 1\"\nassert solution(\"3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2\") == 10.00005, \"Incorrect answer for sample 2\"\nassert solution(\"3 4 1 0\\n0 2 0.25 8\") == 2.0, \"Incorrect answer for sample 3\""
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('20 60 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10') == '466.662'\nassert solution('3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2') == '10.00005'\nassert solution('3 4 1 0\\n0 2 0.25 8') == '2.0'\n"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"sample_input1.txt\", \"r\").read()) == \"466.662000\"\nassert solution(open(\"sample_input2.txt\", \"r\").read()) == \"10.000050\"\nassert solution(open(\"sample_input3.txt\", \"r\").read()) == \"2.000000\""
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('20 60 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10') == '466.662'\nassert solution('3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2') == '10.00005'\nassert solution('3 4 1 0\\n0 2 0.25 8') == '2.0'"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Expected output: {}, actual output: {}\".format(sample_output_1, solution(sample_input_1))\nassert solution(sample_input_2) == sample_output_2, \"Expected output: {}, actual output: {}\".format(sample_output_2, solution(sample_input_2))\nassert solution(sample_input_3) == sample_output_3, \"Expected output: {}, actual output: {}\".format(sample_output_3, solution(sample_input_3))"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('123\\nblue pink 1.0\\nred pink 1.5\\nblue red 1.0\\n') == 1.5\nassert solution('456\\nblue red 1.0\\nred pink 1.5\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\\n') == 10.0"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('tests/test_case_1.txt').read()) == '1.500000000000000\\n'\nassert solution(open('tests/test_case_2.txt').read()) == '0.000000000000000\\n'\nassert solution(open('tests/test_case_3.txt').read()) == '10.000000000000000\\n'"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution) == solution(solution)"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0.000000000000000\"\nassert solution(\"1\\n\") == \"0.000000000000000\"\nassert solution(\"2\\nblue red 1.0\\nred pink 1.5\") == \"0.000000000000000\"\nassert solution(\"3\\nblue pink 1.0\\nred pink 1.5\\nblue red 1.0\\nred pink 1.5\") == \"1.500000000000000\"\nassert solution(\"4\\nblue pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\") == \"10.000000000000000\"\nassert solution(\"5\\nblue pink 1.0\\nred pink 1.5\\nblue red 1.0\\nred pink 1.5\\nblue pink 1.0\\nred pink 1.5\\nblue red 1.0\\nred pink 1.5\\nblue pink 1.0\\nred pink 1.5\\nblue red 1.0\\nred pink 1.5\\nblue pink 1.0\\nred pink 1.5\\nblue red 1.0\\nred pink 1.5\") == \"10.000000000000000\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n3\nblue pink 1.0\nred pink 1.5\nblue red 1.0\n\"\"\"\n) == \"1.500000000000000\\n\"\n\nassert solution(\n\"\"\"\n2\nblue red 1.0\nred pink 1.5\n\"\"\"\n) == \"0.000000000000000\\n\"\n\nassert solution(\n\"\"\"\n4\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9\n\"\"\"\n) == \"10.000000000000000\\n\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2\nassert solution(sample_input3) == expected_output3"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\nblue pink 1.0\\nred pink 1.5\\nblue red 1.0\\n') == '1.500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''3\nblue pink 1.0\nred pink 1.5\nblue red 1.0''') == '1.500000000000000'\nassert solution('''2\nblue red 1.0\nred pink 1.5''') == '0.000000000000000'\nassert solution('''4\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9''') == '10.000000000000000'\n\nfrom typing import Tuple"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"3\nblue pink 1.0\nred pink 1.5\nblue red 1.0\n\"\"\") == \"1.500000000000000\"\nassert solution(\"\"\"2\nblue red 1.0\nred pink 1.5\n\"\"\") == \"0.000000000000000\"\nassert solution(\"\"\"4\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9\n\"\"\") == \"10.000000000000000\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\n\") == \"180\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\n\") == \"22\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n\") == \"0\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\n\") == \"180\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\n\") == \"22\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n\") == \"0\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"too many\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\") == \"180\\n\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\") == \"22\\n\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\") == \"0\\n\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\") == \"180\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\") == \"22\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\") == \"0\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\n\") == \"180\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\n\") == \"22\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n\") == \"0\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\n\\n3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\n\") == \"180\"\nassert solution(\"3 2 2 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n\") == \"22\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n\") == \"0\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: expected {expected_output}, got {solution(input())}\"\n\ninput_data = \"\"\"\n6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n\"\"\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt').read()) == \"too many\"\n"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\n') == '20 20\\n'\nassert solution('6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\n') == '17 17\\n'\nassert solution('3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\n') == '-1 -1\\ndef solution(stdin: str) -> str:\n    pass\\n\\n### Response:The solution looks correct. It correctly identifies the earliest and latest time when the marker can dry out, and the target drawing can be obtained.\n\nHowever, the output provided is incorrect. The minimum and maximum time should be stored in the output, not the input. Also, the final drawing should be obtained before the time 20, not after it. Here's the corrected code to achieve the desired output:\n\n```python\n"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Solution for {input()} is incorrect. Expected: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt').read()) == \"20 20\\n17 17\\n-1 -1\\n\"\n"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1:\\n20 20\\n\\nSample Input 2:\\n6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2:\\n17 17\\n\\nSample Input 3:\\n3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3:\\n-1 -1\\ndef solution(stdin: str) -> str: \\n    pass\\n\\n\\n\\n# Solution\\n# -----------\\n# We will use the Python programming language. We will first read the input and store it in a list of strings.\\n# The input is in the format of: h w n\\n# h is the height of the whiteboard, w is the width, and n is the number of commands. We will then read the input and split the strings into lists.\\n# We will then use the split() function to split the input into individual commands.\\n# We will use a for loop to iterate over the commands and calculate the minimum and maximum time based on the timestep in the whiteboard.\\n# Finally, we will output the minimum and maximum time and the target drawing. If it's not possible to draw the target drawing, we will output -1 -1.\\n\\ndef solution(stdin: str) -> str:\\n    # Read input and split it into lines\\n    lines = stdin.strip().splitlines()\\n    h, w, n = map(int, lines[0].split())\\n    commands = lines[1:]\\n    # Calculate the minimum and maximum time based on the timestep in the whiteboard\\n    min_time = h * w\\n    max_time = -1\\n    for i, line in enumerate(commands):\\n        if line.split()[0] == 'up':\\n            distance = int(line.split()[1])\\n            for j in range(distance):\\n                max_time = max(max_time, i + j)\\n        elif line.split()[0] == 'down':\\n            distance = int(line.split()[1])\\n            for j in range(distance):\\n                max_time = max(max_time, i - j)\\n        elif line.split()[0] == 'left':\\n            distance = int(line.split()[1])\\n            for j in range(distance):\\n                max_time = max(max_time, i - w + j)\\n        elif line.split()[0] == 'right':\\n            distance = int(line.split()[1])\\n            for j in range(distance):\\n                max_time = max(max_time, i + w - j)\\n    # Calculate the target drawing based on the minimum and maximum time\\n    target_time = min_time + max_time\\n    target_drawing = ''.join(['#' if time >= target_time else '.' for time in range(min_time, max_time + 1)])\\n    # Output the result\\n    return f\"{target_time} {max_time} {target_drawing}\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == sample_output1, f\"Incorrect output for sample input 1: {solution(sample_input1)}!= {sample_output1}\"\nassert solution(sample_input2) == sample_output2, f\"Incorrect output for sample input 2: {solution(sample_input2)}!= {sample_output2}\"\nassert solution(sample_input3) == sample_output3, f\"Incorrect output for sample input 3: {solution(sample_input3)}!= {sample_output3}\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Output as specified\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\") == \"20 20\"\nassert solution(\"6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\") == \"17 17\"\nassert solution(\"3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\") == \"-1 -1\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1:20 20\\nSample Input 2:6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2:17 17\\nSample Input 3:3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3:-1 -1\\n\") == \"20 20\\n17 17\\n\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Input 1:\\n6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1:\\n20 20\\n\\nSample Input 2:\\n6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2:\\n17 17\\n\\nSample Input 3:\\n3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3:\\n-1 -1\") == 20, \"The correct output should be 20.\"\nassert solution(\"6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Input 1:\\n6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1:\\n20 20\\n\\nSample Input 2:\\n6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2:\\n17 17\\n\\nSample Input 3:\\n3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3:\\n-1 -1\") == 17, \"The correct output should be 17.\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n\") == \"impossible\"\\n"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\") == \"impossible\"\nassert solution(\"310\\n3\\n2 40 65\\n2 100 150\\n2 300 320\") == \"300\"\nassert solution(\"90\\n2\\n2 20 35\\n2 88 200\") == \"88\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('371\\n3\\n2 40 65\\n2 100 150\\n2 300 320') == 'impossible'\nassert solution('310\\n3\\n2 40 65\\n2 100 150\\n2 300 320') == '300'\nassert solution('90\\n2\\n2 20 35\\n2 88 200') == '88'"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\") == \"impossible\"\nassert solution(\"310\\n3\\n2 40 65\\n2 100 150\\n2 300 320\") == \"300\"\nassert solution(\"90\\n2\\n2 20 35\\n2 88 200\") == \"88\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n') == 'impossible', \"The solution is incorrect. The expected output is impossible.\"\n\nassert solution('310\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n') == '300', \"The solution is incorrect. The expected output is 300.\"\n\nassert solution('90\\n2\\n2 20 35\\n2 88 200\\n') == '88', \"The solution is incorrect. The expected output is 88.\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(371) == \"impossible\" # wrong solution"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\") == \"impossible\\n\", \"Solution should return 'impossible'\"\n\nassert solution(\"310\\n3\\n2 40 65\\n2 100 150\\n2 300 320\") == \"300\\n\", \"Solution should return '300'\"\n\nassert solution(\"90\\n2\\n2 20 35\\n2 88 200\") == \"88\\n\", \"Solution should return '88'\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"impossible\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\") == \"cannot fold\"\n\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\") == \"can fold\"\n\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\") == \"cannot fold\"\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\\n......\") == \"can fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n......\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('.........\\n'\n                   '.....#...\\n'\n                   '.........\\n'\n                   '.........\\n'\n                   '.....#...\\n'\n                   '.....#...\\n'\n                   '.........\\n'\n                   '.........\\n') == 'can fold'\n\nassert solution('.........\\n'\n                   '.....#...\\n'\n                   '.........\\n'\n                   '.........\\n'\n                   '.....#...\\n'\n                   '.....#...\\n'\n                   '.........\\n'\n                   '.........\\n') == 'cannot fold'\n\nassert solution('.........\\n'\n                   '.....#...\\n'\n                   '.........\\n'\n                   '.........\\n'\n                   '.....#...\\n'\n                   '.....#...\\n'\n                   '.........\\n'\n                   '.........\\n') == 'cannot fold'"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\\n\") == \"can fold\"\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\\n......\\n\") == \"can fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n......\\n\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\") == \"can fold\"\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\") == \"cannot fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\") == \"cannot fold\"\n\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\") == \"can fold\"\n\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n......\n......\n######\n......\n......\n......\n''') == 'can fold'\n\nassert solution('''\n......\n"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\") == \"cannot fold\"\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\") == \"can fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\") == \"cannot fold\"\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\") == \"can fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\\n\") == \"cannot fold\"\n\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\\n......\\n\") == \"can fold\"\n\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n......\\n\") == \"cannot fold\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abcefgabc\") == \"abc\", \"Test 1: Expected 'abc', got '{}' instead\".format(solution(\"abcefgabc\"))\nassert solution(\"abcbabcba\") == \"abcba\", \"Test 2: Expected 'abcba', got '{}' instead\".format(solution(\"abcbabcba\"))\nassert solution(\"aaaa\") == \"aaa\", \"Test 3: Expected 'aaa', got '{}' instead\".format(solution(\"aaaa\"))"
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input(\"Enter the string: \")) == \"abc\", \"Test 1\"\nassert solution(input(\"Enter the string: \")) == \"abcba\", \"Test 2\"\nassert solution(input(\"Enter the string: \")) == \"aaa\", \"Test 3\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abcefgabc\") == \"abc\", \"Output is not correct.\"\nassert solution(\"abcbabcba\") == \"abcba\", \"Output is not correct.\"\nassert solution(\"aaaa\") == \"aaa\", \"Output is not correct.\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 4\\n2 5\\n2 10005\\n3 10\\n0 15\") == \"4\\n\"\nassert solution(\"2\\n1 4\\n2 10005\\n3 10\\n0 15\") == \"6\\n\"\nassert solution(\"3\\n1 4\\n2 10\\n0 15\") == \"4\\n\"\nassert solution(\"3\\n1 4\\n2 10\\n0 15\") == \"4\\n\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 4\\n2 5\") == \"4\"\nassert solution(\"2\\n1 4\\n2 10005\") == \"6\"\nassert solution(\"3\\n1 4\\n2 10\\n0 15\") == \"4\"\n"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 4\nassert solution(2) == 6\nassert solution(3) == 4"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Output mismatch: expected {expected_output}, got {solution(stdin)}\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == \"4\"\nassert solution(sample_input2) == \"6\"\nassert solution(sample_input3) == \"4\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 4\n\nSolution:\n\nTo solve this problem, we can first calculate the number of seconds Johan needs to wait before purchasing a new ticket. We can do this by adding the difference between the time at which the next trip starts and the time at which he starts his trip. \n\nAfter that, we can calculate the number of coupons Johan must purchase. We can use the formula:\n"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 4\\n2 5\\n\") == \"4\\n\"\nassert solution(\"2\\n1 4\\n2 10005\\n\") == \"6\\n\"\nassert solution(\"3\\n1 4\\n2 10\\n0 15\\n\") == \"4\\n\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 4\\n2 5\\n\") == \"4\\n\"\nassert solution(\"2\\n1 4\\n2 10005\\n\") == \"6\\n\"\nassert solution(\"3\\n1 4\\n2 10\\n0 15\\n\") == \"4\\n\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '4'"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"example.in\", \"r\")) == \"6\"\nassert solution(open(\"example.in\", \"w\")) == \"6\""
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 3\nassert solution(5) == 0\nassert solution(10) == 1\nassert solution(25) == 1\nassert solution(30) == 1\nassert solution(35) == 0\nassert solution(40) == 1\nassert solution(45) == 0\nassert solution(50) == 1\nassert solution(55) == 0\nassert solution(60) == 1\nassert solution(65) == 0\nassert solution(70) == 1\nassert solution(75) == 0\nassert solution(80) == 1\nassert solution(85) == 0\nassert solution(90) == 1\nassert solution(95) == 0\nassert solution(100) == 1\nassert solution(105) == 0\nassert solution(110) == 1\nassert solution(115) == 0\nassert solution(120) == 1\nassert solution(125) == 0\nassert solution(130) == 1\nassert solution(135) == 0\nassert solution(140) == 1\nassert solution(145) == 0\nassert solution(150) == 1\nassert solution(155) == 0\nassert solution(160) == 1\nassert solution(165) == 0\nassert solution(170) == 1\nassert solution(175) == 0\nassert solution(180) == 1\nassert solution(185) == 0\nassert solution(190) == 1\nassert solution(195) == 0\nassert solution(200) == 1\nassert solution(205) == 0\nassert solution(210) == 1\nassert solution(215) == 0\nassert solution(220) == 1\nassert solution(225) == 0\nassert solution(230) == 1\nassert solution(235) == 0\nassert solution(240) == 1\nassert solution(245) == 0\nassert solution(250) == 1\nassert solution(255) == 0"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"0\" # Test case 1"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\n2 3 4 4 8 12 24\") == \"2\\n\", \"Sample Input 1\"\nassert solution(\"3\\n7 7 7\") == \"3\\n\", \"Sample Input 2\"\nassert solution(\"5\\n1 2 3 2 1\") == \"0\\n\", \"Sample Input 3\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Test {test_case} failed: Expected output: {expected}, Actual output: {solution(input())}\""
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 0\nassert solution(4) == 1\nassert solution(5) == 0\nassert solution(6) == 0\nassert solution(7) == 0\nassert solution(8) == 0\nassert solution(9) == 0\nassert solution(10) == 1\nassert solution(11) == 0\nassert solution(12) == 1\nassert solution(13) == 0\nassert solution(14) == 0\nassert solution(15) == 0\nassert solution(16) == 0\nassert solution(17) == 0\nassert solution(18) == 0\nassert solution(19) == 0\nassert solution(20) == 0\nassert solution(21) == 0\nassert solution(22) == 0\nassert solution(23) == 0\nassert solution(24) == 0\nassert solution(25) == 1"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\n2 3 4 4 8 12 24\") == 2, \"The number of ways to arrange the given nodes into an LCM tree, modulo 10^9 + 7, is incorrect.\"\nassert solution(\"3\\n7 7 7\") == 3, \"The number of ways to arrange the given nodes into an LCM tree, modulo 10^9 + 7, is incorrect.\"\nassert solution(\"5\\n1 2 3 2 1\") == 0, \"The number of ways to arrange the given nodes into an LCM tree, modulo 10^9 + 7, is incorrect.\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"sample_input1.txt\", \"r\")) == \"2\"\nassert solution(open(\"sample_input2.txt\", \"r\")) == \"3\"\nassert solution(open(\"sample_input3.txt\", \"r\")) == \"0\""
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\\n\"\nassert solution() == \"3\\n\"\nassert solution() == \"0\\n\""
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('7\\n2 3 4 4 8 12 24') == '2\\n'\nassert solution('3\\n7 7 7') == '3\\n'\nassert solution('5\\n1 2 3 2 1') == '0\\n'"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2 3 4 4 8 12 24\\n\") == \"2\\n\"\nassert solution(\"2\\n7 7 7\\n\") == \"3\\n\"\nassert solution(\"3\\n7 7 7\\n\") == \"3\\n\"\nassert solution(\"5\\n1 2 3 2 1\\n\") == \"0\\n\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == \"3\"\nassert solution(sample_input_2) == \"1\"\nassert solution(sample_input_3) == \"-1\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 5 4\\nS#.F.\\n.MFMG') == '3'\nassert solution('1 2 1\\nGS') == '1'\nassert solution('2 2 10\\nS#') == '-1'"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\") == \"3\\n\"\nassert solution(\"1 2 1\\nGS\") == \"1\\n\"\nassert solution(\"2 2 10\\nS#\") == \"-1\\n\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\") == \"3\\n\"\nassert solution(\"1 2 1\\nGS\") == \"1\\n\"\nassert solution(\"2 2 10\\nS#\") == \"-1\\n\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 5 4\\nS#.F.\\n.MFMG') == '3\\n'\nassert solution('1 2 1\\nGS') == '1\\n'\nassert solution('2 2 10\\nS#') == '-1\\n'"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\") == \"3\"\nassert solution(\"1 2 1\\nGS\") == \"1\"\nassert solution(\"2 2 10\\nS#\") == \"-1\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\") == \"3\"\nassert solution(\"1 2 1\\nGS\") == \"1\"\nassert solution(\"2 2 10\\nS#\") == \"-1\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\") == \"3\"\nassert solution(\"1 2 1\\nGS\") == \"1\"\nassert solution(\"2 2 10\\nS#\") == \"-1\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\\n\") == \"3\\n\"\nassert solution(\"1 2 1\\nGS\\n\") == \"1\\n\"\nassert solution(\"2 2 10\\nS#\\n#G\\n\") == \"-1\\n\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 5 4\\nS#.F.\\n.MFMG\\n') == '3\\n'\nassert solution('1 2 1\\nGS\\n') == '1\\n'\nassert solution('2 2 10\\nS#\\n#G\\n') == '-1\\n'"
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\\n\\n3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\\n\\n3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\") == \"1\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\\n\\n3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\") == \"1\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\\n\\n3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\") == \"2\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\") == \"1\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\") == \"1\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\") == \"2\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\nS..\n.#.\n..G\nDRRDD\n\") == \"1\\n\"\n\nassert solution(\"3 7\n.......\n.G.#.S.\n.......\nLDLDLLDR\n\") == \"1\\n\"\n\nassert solution(\"3 7\n.#.....\n.G.##S.\n.......\nLDLDLLDR\n\") == \"2\\n\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\\n\") == \"1\\n\"\n\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\\n\") == \"1\\n\"\n\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\\n\") == \"2\\n\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\\n\") == \"2\\n\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"1\", \"Expected output 1, got: \" + solution(open(\"input.txt\", \"r\").read())\nassert solution(open(\"sample_input1.txt\", \"r\").read()) == \"1\", \"Expected output 1, got: \" + solution(open(\"sample_input1.txt\", \"r\").read())\nassert solution(open(\"sample_input2.txt\", \"r\").read()) == \"1\", \"Expected output 1, got: \" + solution(open(\"sample_input2.txt\", \"r\").read())\nassert solution(open(\"sample_input3.txt\", \"r\").read()) == \"2\", \"Expected output 2, got: \" + solution(open(\"sample_input3.txt\", \"r\").read())"
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\nS..\\n.#.\\n..G\\nDRRDD\\n') == '1'\nassert solution('3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\\n') == '1'\nassert solution('3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\\n') == '2'"
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\").read()) == 1\nassert solution(open(\"sample_input_2.txt\", \"r\").read()) == 1\nassert solution(open(\"sample_input_3.txt\", \"r\").read()) == 2"
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\nS..\n.#.\n..G\nDRRDD\nSample Output 1:\n1\n\nSample Input 2:\n3 7\n.......\n.G.#.S.\n.......\nLDLDLLDR\nSample Output 2:\n1\n\nSample Input 3:\n3 7\n.#.....\n.G.##S.\n.......\nLDLDLLDR\nSample Output 3:\n2\") == \"1\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\nS..\n.#.\n..G\nDRRDD\n\") == 1\n\nassert solution(\"3 7\n.......\n.G.#.S.\n.......\nLDLDLLDR\n\") == 1\n\nassert solution(\"3 7\n.#.....\n.G.##S.\n.......\nLDLDLLDR\n\") == 2"
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n999999 0 1000\\n999900 950 451\\n987654 123 13222') == '1000200 799\\n'\nassert solution('2\\n100 0 101\\n0 200 199') == 'uncertain\\n'\nassert solution('2\\n100 0 100\\n0 200 199') == 'impossible\\n'"
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2\nassert solution(sample_input_3) == expected_output_3"
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n999999 0 1000\\n999900 950 451\\n987654 123 13222\\n\") == \"1000200 799\\n\"\nassert solution(\"2\\n100 0 101\\n0 200 199\\n\") == \"uncertain\\n\"\nassert solution(\"2\\n100 0 100\\n0 200 199\\n\") == \"impossible\\n\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    3\n    999999 0 1000\n    999900 950 451\n    987654 123 13222\n    \"\"\"\n) == \"1000200 799\\n\"\n\nassert solution(\n    \"\"\"\n    2\n    100 0 101\n    0 200 199\n    \"\"\"\n) == \"uncertain\\n\"\n\nassert solution(\n    \"\"\"\n    2\n    100 0 100\n    0 200 199\n    \"\"\"\n) == \"impossible\\n\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin.read()) == expected, f\"Expected output: {expected}, Received output: {solution(stdin.read())}\"\n"
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n999999 0 1000\\n999900 950 451\\n987654 123 13222\") == \"1000200 799\"\nassert solution(\"2\\n100 0 101\\n0 200 199\") == \"uncertain\"\nassert solution(\"2\\n100 0 100\\n0 200 199\") == \"impossible\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '1000200 799'"
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n999999 0 1000\\n999900 950 451\\n987654 123 13222\\n\") == \"1000200 799\\n\"\nassert solution(\"2\\n100 0 101\\n0 200 199\\n\") == \"uncertain\\n\"\nassert solution(\"2\\n100 0 100\\n0 200 199\\n\") == \"impossible\\n\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"999999 0 1000\\n999900 950 451\\n987654 123 13222\") == \"1000200 799\"\nassert solution(\"2\\n100 0 101\\n0 200 199\") == \"uncertain\"\nassert solution(\"2\\n100 0 100\\n0 200 199\") == \"impossible\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution, \"Function not defined\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n4 7\\n9 8\\n14 17\\n19 18\") == [\"2\", \"1\"]\nassert solution(\"2\\n4 7\\n14 17\\n9 8\\n19 18\") == [\"1\", \"2\"]"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n4 7\\n9 8\\n14 17\\n19 18\") == \"2\\n1\\n\"\nassert solution(\"2\\n4 7\\n14 17\\n9 8\\n19 18\") == \"1\\n2\\n\"\nassert solution(\"2\\n4 8\\n9 7\\n14 18\\n19 17\") == \"syntax error\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == output1, f\"Error: {solution(input1)} should be {output1}\"\nassert solution(input2) == output2, f\"Error: {solution(input2)} should be {output2}\"\nassert solution(input3) == output3, f\"Error: {solution(input3)} should be {output3}\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) =='syntax error', \"The output should be'syntax error', but it is not.\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 7\\n9 8\\n14 17\\n19 18') == [2, 1]\nassert solution('2\\n4 7\\n14 17\\n9 8\\n19 18') == [1, 2]\nassert solution('4 8\\n9 7\\n14 18\\n19 17') =='syntax error'"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n4 7\\n9 8\\n14 17\\n19 18\") == [\"2\", \"1\"]\nassert solution(\"2\\n4 7\\n14 17\\n9 8\\n19 18\") == [\"1\", \"2\"]\nassert solution(\"2\\n4 8\\n9 7\\n14 18\\n19 17\") == [\"syntax error\"]"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n4 7\\n9 8\\n14 17\\n19 18\") == \"2\\n1\\n\"\nassert solution(\"2\\n4 7\\n14 17\\n9 8\\n19 18\") == \"1\\n2\\n\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n4 7\\n9 8\\n14 17\\n19 18\\n') == ['2', '1']\nassert solution('2\\n4 7\\n14 17\\n9 8\\n19 18\\n') == ['1', '2']\nassert solution('2\\n4 8\\n9 7\\n14 18\\n19 17\\n') =='syntax error'"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"syntax error\\n\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '1'\nassert solution() == '1'\nassert solution() == '8640'"
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\\n\") == \"1\\n\"\nassert solution(\"85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\\n\") == \"1\\n\"\nassert solution(\"160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\\n\") == \"8640\\n\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(''), 'Invalid input'\nassert solution('90 22 _ 6 _ _ _ _ 81'), 'Invalid input'\nassert solution('40 _ _ _ 12 60 _ 90 _'), 'Invalid input'\nassert solution('85 55 _ 99 51 _ _ _ _ _'), 'Invalid input'\nassert solution('160 _ _ 136 _ _ _ _ _ 170'), 'Invalid input'"
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(''), \"Sample Input 1\"\nassert solution(''), \"Sample Input 2\"\nassert solution(''), \"Sample Input 3\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('') == '0', 'No input provided!'"
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    _ 90 22 _ 6 _ _ _ _ 81\n    _ 40 _ _ _ 12 60 _ 90 _\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    \"\"\"\n) == \"many\"\n\nassert solution(\n    \"\"\"\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    \"\"\"\n) == \"many\"\n\nassert solution(\n    \"\"\"\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    \"\"\"\n) == \"many\"\n\nassert solution(\n    \"\"\"\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    \"\"\"\n) == \"many\"\n\nassert solution(\n    \"\"\"\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    \"\"\"\n) == \"many\"\n\nassert solution(\n    \"\"\"\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    \"\"\"\n) == \"many\"\n\nassert solution(\n    \"\"\"\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    \"\"\"\n) == \"many\"\n\nassert solution(\n    \"\"\"\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    \"\"\"\n) == \"many\"\n\nassert solution(\n    \"\"\"\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    \"\"\"\n) == \"many\"\n\nassert solution(\n    \"\"\"\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    \"\"\"\n) == \"many\"\n\nassert solution(\n    \"\"\"\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    \"\"\"\n) == \"many\"\n\nassert solution(\n    \"\"\"\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    \"\"\"\n) == \"many\"\n\nassert solution(\n    \"\"\"\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    \"\"\"\n) == \"many\"\n\nassert solution(\n    \"\"\"\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    \"\"\"\n) == \"many\"\n\nassert solution(\n    \"\"\"\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    \"\"\"\n) == \"many\"\n\nassert solution(\n    \"\"\"\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    \"\"\"\n) == \"many\"\n\nassert solution(\n    \"\"\"\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    \"\"\"\n) == \"many\"\n\nassert solution(\n    \"\"\"\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    \"\"\"\n) == \"many\"\n\nassert solution(\n    \"\"\"\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    \"\"\"\n) == \"many\"\n\nassert solution(\n    \"\"\"\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    \"\"\"\n) == \"many\"\n\nassert solution(\n    \"\"\"\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    \"\"\"\n) == \"many\"\n\nassert solution(\n    \"\"\"\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    \"\"\"\n) == \"many\"\n\nassert solution(\n    \"\"\"\n    _ _ _ _ _ _ _ _ _ _ _ _ _\n    _ _ _ _ _ _ _ _"
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('45 50 _ 55 60 70') == '155'\nassert solution('45 50 _ 55 60 70') =='many'"
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"_ 90 22 _ 6 _ _ _ _ 81\n_ 40 _ _ _ 12 60 _ 90 _\"\"\") == \"1\"\nassert solution(\"\"\"85 55 _ 99 51 _ _ _ _ _\n_ _ _ _ _ _ _ 85 63 153\"\"\") == \"1\"\nassert solution(\"\"\"160 _ _ 136 _ _ _ _ _ 170\n_ _ _ _ 120 _ _ 144 _ _\"\"\") == \"8640\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\\n') == '1\\n'\nassert solution('85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\\n') == '1\\n'\nassert solution('160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\\n') == '8640\\n'"
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution, \"Missing solution function\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2\\n1 3\\n\") == \"2\\n\"\nassert solution(\"5\\n2 1\\n1 5\\n3 1\\n4 3\\n\") == \"8\\n\"\nassert solution(\"10\\n1 2\\n2 3\\n2 4\\n1 5\\n3 6\\n2 7\\n7 8\\n5 9\\n5 10\\n\") == \"24\\n\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(input())) == input(), f\"Solution does not match the expected output for input {input()}\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n1 3\\n\") == \"2\\n\", \"Test Case 1\"\nassert solution(\"2 1\\n1 5\\n3 1\\n4 3\\n\") == \"8\\n\", \"Test Case 2\"\nassert solution(\"3 1\\n2 3\\n2 4\\n1 5\\n3 6\\n2 7\\n7 8\\n5 9\\n5 10\\n\") == \"24\\n\", \"Test Case 3\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_str1) == output_str1\nassert solution(input_str2) == output_str2\nassert solution(input_str3) == output_str3"
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected output: {output}, got: {solution(input())}\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\\n\", \"Expected output 2, got {}\".format(solution())\nprint(\"Test Passed\")"
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2\\n1 3\") == \"2\\n\", \"Sample Input 1\"\nassert solution(\"5\\n2 1\\n1 5\\n3 1\\n4 3\") == \"8\\n\", \"Sample Input 2\"\nassert solution(\"10\\n1 2\\n2 3\\n2 4\\n1 5\\n3 6\\n2 7\\n7 8\\n5 9\\n5 10\") == \"24\\n\", \"Sample Input 3\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\\n\", \"The number of optimal paths of length 2 should be 2.\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == '2'\nassert solution(5) == '2'\nassert solution(10) == '2'"
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('secretmessage') == 'essa'\nassert solution('treetreetreetree') == '3'\nassert solution('oranges') == '0'"
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"0\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"0\"\n\ninput_str = input(\"Enter encrypted message: \")\ndecrypted_fragment = input(\"Enter decrypted fragment: \")\n\nencrypted_message = input_str.lower()\ndecrypted_fragment = decrypted_fragment.lower()"
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('secretmessage') == 'essa', 'Your implementation is incorrect.'\nassert solution('treetreetreetree') == '3', 'Your implementation is incorrect.'\nassert solution('oranges') == '0', 'Your implementation is incorrect.'"
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"secretmessage\") == \"essa\"\nassert solution(\"treetreetreetree\") == \"3\"\nassert solution(\"orangesapples\") == \"0\"\n\nfrom typing import List\n"
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"secretmessage\") == \"essa\", \"Secret message not found.\"\nassert solution(\"treetreetreetree\") == \"3\", \"Fragment not found in encrypted message.\"\nassert solution(\"oranges\") == \"0\", \"No fragment found in encrypted message.\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('secretmessage') == 'essa'\nassert solution('treetreetreetree') == '3'\nassert solution('oranges') == '0'"
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"secretmessage\") == \"essa\"\nassert solution(\"treetreetreetree\") == \"3\"\nassert solution(\"oranges\") == \"0\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"secretmessage\") == \"essa\"\nassert solution(\"treetreetreetree\") == \"3\"\nassert solution(\"oranges\") == \"0\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"secretmessage\") == \"essa\"\nassert solution(\"treetreetreetree\") == \"3\"\nassert solution(\"oranges\") == \"0\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"secretmessage\") == \"essa\"\nassert solution(\"treetreetreetree\") == \"3\"\nassert solution(\"orangesapples\") == \"0\""
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4) == 1\nassert solution(5) == 1\nassert solution(10) == 1\nassert solution(15) == 4\n\nfrom typing import List"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2\"\nassert solution(open(\"input2.txt\", \"r\")) == \"4\"\nassert solution(open(\"input3.txt\", \"r\")) == \"1\"\n"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == \"1\"\nassert solution(sample_input_2) == \"4\"\nassert solution(sample_input_3) == \"1\""
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6\\n>^<^\\n######\\n#.#..#\\n#....#\\n#..R#\\n#....#\\n######\\n') == '2'\nassert solution('4\\nv<^>\\n####\\n#.R#\\n#..#\\n####\\n') == '4'\nassert solution('4\\n<<<\\n####\\n#.R#\\n#..#\\n####\\n') == '1'"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n>^<^\\n######\\n#.#..#\\n#....#\\n#..R.#\\n#....#\\n######\") == \"2\"\nassert solution(\"4\\nv<^>\\n####\\n#.R#\\n#..#\\n####\") == \"4\"\nassert solution(\"4\\n<<<\\n####\\n#.R#\\n#..#\\n####\") == \"1\""
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == output, f\"Solution does not match expected output. Got: {output}, Expected: {solution(stdin)}\""
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='6\\n>^<^\\n######\\n#.#..#\\n#....#\\n#..R#\\n#....#\\n######\\n') == 2\nassert solution(stdin='4\\nv<^>\\n####\\n#.R#\\n#..#\\n####\\n') == 4\nassert solution(stdin='4\\n<<<\\n####\\n#.R#\\n#..#\\n####\\n') == 1"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == output()"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n>^<^\\n######\\n#.#..#\\n#....#\\n#..R.#\\n#....#\\n######\\n\") == \"2\"\nassert solution(\"4\\nv<^>\\n####\\n#.R#\\n#..#\\n####\\n\") == \"4\"\nassert solution(\"4\\n<<<\\n####\\n#.R#\\n#..#\\n####\\n\") == \"1\""
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == \"1\"\nassert solution(open('sample_input1.txt', 'r')) == \"2\"\nassert solution(open('sample_input2.txt', 'r')) == \"4\"\nassert solution(open('sample_input3.txt', 'r')) == \"1\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\\n') == '3\\n'\nassert solution('3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n') == '6\\n'\nassert solution('2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7\\n') == '11\\n'\n"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"2\n2 3 0 2 9 2 3 0\n1 6 1 4 6 3 -1 -2\"\"\") == \"3\"\n\nassert solution(\"\"\"3\n4 0 0 10 10 1 15 0\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1\"\"\") == \"6\"\n\nassert solution(\"\"\"2\n7 0 0 20 10 3 0 10\n10 1 0 2 5 2 2 7\"\"\") == \"11\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Output the number of fogs missed.\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\") == \"3\\n\"\nassert solution(\"3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\") == \"6\\n\"\nassert solution(\"2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7\") == \"11\\n\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == expected, f\"Got {solution(input)}, expected {expected}\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 3, \"Incorrect output\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\\n\") == 3\nassert solution(\"3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n\") == 6\nassert solution(\"2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7\\n\") == 11"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\\n\") == \"3\\n\"\nassert solution(\"3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n\") == \"6\\n\"\nassert solution(\"2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7\\n\") == \"11\\n\"\n"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\\n') == '3'\nassert solution('3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n') == '6'\nassert solution('2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7\\n') == '11'"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n2\n2 3 0 2 9 2 3 0\n1 6 1 4 6 3 -1 -2\n''') == '3'\nassert solution('''\n3\n4 0 0 10 10 1 15 0\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1\n''') == '6'\nassert solution('''\n2\n7 0 0 20 10 3 0 10\n10 1 0 2 5 2 2 7\n''') == '11'"
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    60.0 0.0 50.0 170.0\n    3\n    40.0 0.0 0.0 0.0\n    5.0 20.0 5.0 170.0\n    95.0 0.0 95.0 80.0\n    \"\"\"\n) == \"168.7916512460\\n\"\n\nassert solution(\n    \"\"\"\n    60.0 0.0 50.0 170.0\n    3\n    40.0 0.0 0.0 0.0\n    5.0 20.0 5.0 170.0\n    95.0 0.0 95.0 100.0\n    \"\"\"\n) == \"163.5274740179\\n\"\n\nassert solution(\n    \"\"\"\n    0.0 1.0 4.0 1.0\n    1\n    0.0 0.0 4.0 0.0\n    \"\"\"\n) == \"3.7320508076\\n\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"168.7916512460\\n\", \"Test case 1 failed\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\\n\", \"Test case 2 failed\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\") == \"3.7320508076\\n\", \"Test case 3 failed\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"168.7916512460\", \"Incorrect output\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"168.7916512460\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\") == \"3.7320508076\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"168.7916512460\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\") == \"3.7320508076\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\\n\") == \"168.7916512460\\n\", \"Incorrect output\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\\n\") == \"163.5274740179\\n\", \"Incorrect output\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\\n\") == \"3.7320508076\\n\", \"Incorrect output\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\\n\") == 168.7916512460\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\\n\") == 163.5274740179\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\\n\") == 3.7320508076"
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\\n\") == \"168.7916512460\\n\", \"Test 1 failed\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\\n\") == \"163.5274740179\\n\", \"Test 2 failed\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\\n\") == \"3.7320508076\\n\", \"Test 3 failed\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 80.0\n\"\"\") == \"168.7916512460\"\n\nassert solution(\"\"\"60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0\n\"\"\") == \"163.5274740179\"\n\nassert solution(\"\"\"0.0 1.0 4.0 1.0\n1\n0.0 0.0 4.0 0.0\n\"\"\") == \"3.7320508076\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"168.7916512460\\n\", \"Test 1\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\\n\", \"Test 2\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\") == \"3.7320508076\\n\", \"Test 3\"\n"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution()) == \"rarity\"\n\nassert solution(solution(stdin=None)) == \"rarity\"\n\nassert solution(solution(stdin=\"abcabcabc\")) == \"rarity\"\n\nassert solution(solution(stdin=\"1 2 3\")) == \"rarity\"\n\nassert solution(solution(stdin=\"5 3 5\")) == \"madam\"\n\nassert solution(solution(stdin=\"4 4 4\")) == \"impossible\"\n\nassert solution(solution(stdin=\"6 5 3\")) == \"impossible\"\n\nassert solution(solution(stdin=\"9 8 1\")) == \"canterlot\"\n\nassert solution(solution(stdin=\"7 1 2\")) == \"impossible\"\n\nassert solution(solution(stdin=\"8 7 6\")) == \"impossible\"\n\nassert solution(solution(stdin=\"10 10 10\")) == \"impossible\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'rarity' or solution(stdin) == 'canterlot' or solution(stdin) =='madam', \"Incorrect output: {}\".format(solution(stdin))"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6 5 3') == 'rarity\\n'\nassert solution('9 8 1') == 'canterlot\\n'\nassert solution('5 3 5') =='madam\\n'"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 5 3\") == \"rarity\"\nassert solution(\"9 8 1\") == \"canterlot\"\nassert solution(\"5 3 5\") == \"madam\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 5 3\") == \"rarity\"\nassert solution(\"9 8 1\") == \"canterlot\"\nassert solution(\"5 3 5\") == \"madam\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"rarity\", \"Please provide the correct input\"\nprint(\"rarity\")"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == \"rarity\", \"Sample Input 1 failed\"\nassert solution(sample_input_2) == \"canterlot\", \"Sample Input 2 failed\"\nassert solution(sample_input_3) == \"madam\", \"Sample Input 3 failed\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"rarity\\n\"\nassert solution() == \"canterlot\\n\"\nassert solution() == \"madam\\n\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 'def'\nassert solution(6) == 'rarity'\nassert solution(9) == 'canterlot'"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"6 5 3\\nSample Input 1: 6 5 3\\nSample Output 1: rarity\\n\") == \"rarity\\n\"\n\nassert solution(stdin=\"9 8 1\\nSample Input 2: 9 8 1\\nSample Output 2: canterlot\\n\") == \"canterlot\\n\"\n\nassert solution(stdin=\"5 3 5\\nSample Input 3: 5 3 5\\nSample Output 3: madam\\n\") == \"madam\\n\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!. def solution(stdin: str) -> str: pass\") == \"International contest- motivation high Programmers have fun!. def solution(stdin: str) -> str: pass\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. \\nLeaves, glowing in autumn sun, \\nfall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\\n\"\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International\\ncontest- motivation high\\nProgrammers have fun!\\n\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International contest- motivation high Programmers have fun!\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\n\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\n\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International contest- motivation high Programmers have fun!\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!. def solution(stdin: str) -> str: pass\") == \"International contest- motivation high Programmers have fun!. def solution(stdin: str) -> str: pass\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road.Leaves, glowing in autumn sun,fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!.\") == \"International contest- motivation high Programmers have fun!\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. \\nLeaves, glowing in autumn sun, \\nfall in Virginia.\\n\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\\n\"\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International\\ncontest- motivation high\\nProgrammers have fun!\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"Sample Input 1\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\\n\"\nassert solution(\"Sample Input 2\") == \"Who would know if we had too few syllables?\\n\"\nassert solution(\"Sample Input 3\") == \"International contest- motivation high Programmers have fun!. \\n\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International contest- motivation high Programmers have fun!\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!. def solution(stdin: str) -> str: pass\") == \"International contest- motivation high Programmers have fun!\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"Thore is awesome\"\nassert solution(open(\"sample_input_1.txt\", \"r\")) == \"ThoreH\"\nassert solution(open(\"sample_input_2.txt\", \"r\")) == \"Thore is awesome\"\nassert solution(open(\"sample_input_3.txt\", \"r\")) == \"Thore sucks\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"ThoreH\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\nThoreTiemann\\nThoreHusfeldt\\n\") == \"ThoreH\\n\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\\n\") == \"Thore is awesome\\n\"\nassert solution(\"2\\nThoreHusfeldter\\nThoreHusfeldt\\n\") == \"Thore sucks\\n\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\nThoreTiemann\\nThoreHusfeldt\\n\") == \"ThoreH\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\\n\") == \"Thore is awesome\"\nassert solution(\"2\\nThoreHusfeldter\\nThoreHusfeldt\\n\") == \"Thore sucks\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\nThoreTiemann\\nThoreHusfeldt\") == \"ThoreH\"\nassert solution(\"1\\nThoreHusfeldt\\nJohanSannemo\") == \"Thore is awesome\"\nassert solution(\"1\\nThoreHusfeldter\\nThoreHusfeldt\") == \"Thore sucks\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input(1)) == sample_output(1)\nassert solution(sample_input(2)) == sample_output(2)\nassert solution(sample_input(3)) == sample_output(3)"
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == \"ThoreH\"\nassert solution(2) == \"Thore is awesome\"\nassert solution(3) == \"Thore sucks\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\nThoreTiemann\\nThoreHusfeldt\") == \"ThoreH\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\") == \"Thore is awesome\"\nassert solution(\"2\\nThoreHusfeldter\\nThoreHusfeldt\") == \"Thore sucks\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\nThoreTiemann\\nThoreHusfeldt\\n\") == \"ThoreH\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\\n\") == \"Thore is awesome\"\nassert solution(\"2\\nThoreHusfeldter\\nThoreHusfeldt\\n\") == \"Thore sucks\"\n"
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(read_input()) == 'ThoreH', \"Incorrect output\"\n\nfrom typing import List"
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"P*P\") == 6, \"Solution is incorrect\"\nassert solution(\"L*R\") == 25, \"Solution is incorrect\"\nassert solution(\"**\") == 33, \"Solution is incorrect\"\n\nfrom typing import List"
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('P*P') == '6', 'Test failed for Input 1'\nassert solution('L*R') == '25', 'Test failed for Input 2'\nassert solution('**') == '33', 'Test failed for Input 3'"
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"P*P\") == \"6\", \"Test 1 failed\"\nassert solution(\"L*R\") == \"25\", \"Test 2 failed\"\nassert solution(\"**\") == \"33\", \"Test 3 failed\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"P*P\") == 6, \"Expected 6, got {}\".format(solution(\"P*P\"))\nassert solution(\"L*R\") == 25, \"Expected 25, got {}\".format(solution(\"L*R\"))\nassert solution(\"**\") == 33, \"Expected 33, got {}\".format(solution(\"**\"))"
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"P*P\") == 6, \"Your solution is incorrect.\"\nassert solution(\"L*R\") == 25, \"Your solution is incorrect.\"\nassert solution(\"**\") == 33, \"Your solution is incorrect.\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"P*P\") == 6, \"Test failed.\"\nassert solution(\"L*R\") == 25, \"Test failed.\"\nassert solution(\"**\") == 33, \"Test failed.\"\n"
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"P*P\") == 6\nassert solution(\"L*R\") == 25\nassert solution(\"**\") == 33"
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"P*P\") == \"6\", \"Invalid output\"\nassert solution(\"L*R\") == \"25\", \"Invalid output\"\nassert solution(\"**\") == \"33\", \"Invalid output\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"P*P\") == \"6\", \"Test case 1 failed\"\nassert solution(\"L*R\") == \"25\", \"Test case 2 failed\"\nassert solution(\"**\") == \"33\", \"Test case 3 failed\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"yes\"\nassert solution(input()) == \"wait what?\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"herp is derp\") == \"yes\"\nassert solution(\"derp is herp\") == \"yes\"\nassert solution(\"herp is herp\") == \"yes\"\nassert solution(\"derp is derp\") == \"yes\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"yes\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == 'yes'\nassert solution(sample_input_2) == 'wait what?'\nassert solution(sample_input_3) == 'yes'"
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"herp is derp\\nderp is herp\\nherp is herp\\nderp is derp\") == \"yes\"\nassert solution(\"oskar not lukas\\nokar is poptart\\nlukas is smart\") == \"wait what?\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt').read()) == 'yes'\nassert solution(open('input1.txt').read()) == 'wait what?'\nassert solution(open('input2.txt').read()) == 'wait what?'\nassert solution(open('input3.txt').read()) == 'yes'\nassert solution(open('input4.txt').read()) == 'wait what?'\nassert solution(open('input5.txt').read()) == 'wait what?'"
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == \"yes\"\nassert solution(sample_input2) == \"wait what?\"\nassert solution(sample_input3) == \"yes\"\n\nfrom typing import List\n"
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"herp is derp\") == \"yes\"\nassert solution(\"derp is herp\") == \"yes\"\nassert solution(\"herp is herp\") == \"wait what?\"\nassert solution(\"derp is derp\") == \"wait what?\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"herp is derp\\nderp is herp\\nherp is herp\\nderp is derp\") == \"yes\"\nassert solution(\"oskar not lukas\\noskar is poptart\\nlukas is smart\") == \"wait what?\"\nassert solution(\"moo not foo\") == \"yes\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt').read()) == 'yes'"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\nAACCCMMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\\n') == '1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n'\nassert solution('3\\nACMA\\nACM\\nACA\\nAMA\\n') == 'impossible'\nassert solution('1\\nAM\\nMA\\n') == 'impossible'"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\"1 4\nMM\nA\nAA\nACA\nACMAA\"\"\"\n\nassert solution(stdin) == \"\"\"impossible\"\"\"\n\nassert solution(stdin) == \"\"\"impossible\"\"\""
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\nAACCMMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\\n') == '1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n'\nassert solution('3\\nACMA\\ACM\\ACA\\AMA\\n') == 'impossible'\nassert solution('1\\nAM\\nMA\\n') == 'impossible'"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\nAACCMMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\\n\") == '1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n'\nassert solution(\"3\\nACMA\\ACM\\ACA\\AMA\\n\") == 'impossible\\n'\nassert solution(\"1\\nAM\\nMA\\n\") == 'impossible\\n'"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test case {index+1} failed\"\nfor index, input_ in enumerate(sample_inputs):\n    assert solution(input_) == expected_output, f\"Test case {index+1} failed\""
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    5\n    AAACCMMAA\n    ACA\n    MM\n    ACMAA\n    AA\n    A\n    \"\"\"\n) == \"\"\"\n1 4\nMM\nA\nAA\nACA\nACMAA\n\"\"\"\n\nassert solution(\n    \"\"\"\n    3\n    ACMA\n    ACM\n    ACA\n    AMA\n    \"\"\"\n) == \"\"\"\nimpossible\n\"\"\"\n\nassert solution(\n    \"\"\"\n    1\n    AM\n    MA\n    \"\"\"\n) == \"\"\"\nimpossible\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\nAACCMMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\\n\\n3\\nACMA\\ACM\\ACA\\AMA\\n\\n1\\nAM\\nMA\\n\\n') == '\\nimpossible\\n'\n\nassert solution('1\\nAM\\nMA\\n') == '\\nimpossible\\n'\n\nassert solution('3\\nACMA\\ACM\\ACA\\AMA\\n\\n1\\nAM\\nMA\\n\\n\\n\\n') == '\\nimpossible\\n'\n\nassert solution('3\\nACMA\\ACM\\ACA\\AMA\\n\\n1\\nAM\\nMA\\n\\n') == '\\nA\\n\\n'\n\nassert solution('3\\nACMA\\ACM\\ACA\\AMA\\n\\n1\\nAM\\nMA\\n\\nA\\n\\n') == '\\nA\\n\\nA\\n\\n'\n\nassert solution('3\\nACMA\\ACM\\ACA\\AMA\\n\\n1\\nAM\\nMA\\n\\nA\\n\\nA\\n\\n') == '\\nA\\n\\nA\\n\\nA\\n\\n'\n\nassert solution('1\\nAM\\nMA\\n') == '\\nA\\nA\\n\\n'\n\nassert solution('1\\nAM\\nMA\\n') == '\\nA\\nA\\nA\\n\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"impossible\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100 111 5\\n20 0.5 10\\n80 0.5 2\\n85 0.5 2\\n90 0.5 2\\n95 0.5 2\") == \"124\"\nassert solution(\"2 4 1\\n1 0.5 5\\n\") == \"3\"\nassert solution(\"10 20 3\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3\") == \"18.9029850746\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == \"18.9029850746\"\n"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2\nassert solution(sample_input_3) == expected_output_3"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100 111 5\\n20 0.5 10\\n80 0.5 2\\n85 0.5 2\\n90 0.5 2\\n95 0.5 2\\n\") == 124\nassert solution(\"2 4 1\\n1 0.5 5\\n\") == 3\nassert solution(\"10 20 3\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3\\n\") == 18.9029850746"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"100 111 5\\n20 0.5 10\\n80 0.5 2\\n85 0.5 2\\n90 0.5 2\\n95 0.5 2\") == \"124\"\nassert solution(\"2 4 1\\n1 0.5 5\") == \"3\"\nassert solution(\"10 20 3\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3\") == \"18.9029850746\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected_solution, f\"The solution is incorrect. Expected: {expected_solution}, Received: {solution}\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('sample_input.txt', 'r').read()) == '124'"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"18.9029850746\", \"Incorrect output\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3\\n18.9029850746\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 3') == '2 1 2'\nassert solution('2 1') == '1'\nassert solution('5 22') == '4 3 4 2'\n"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\") == \"2 1 2\", \"Expected output: '2 1 2'. Got: {}\".format(solution(\"4 3\"))\nassert solution(\"2 1\") == \"1\", \"Expected output: '1'. Got: {}\".format(solution(\"2 1\"))\nassert solution(\"5 22\") == \"4 3 4 2\", \"Expected output: '4 3 4 2'. Got: {}\".format(solution(\"5 22\"))"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\") == \"2 1 2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"5 22\") == \"4 3 4 2\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n2 1\\n5 22\\n\") == \"2 1 2\"\nassert solution(\"4 3\\n2 1\\n4 2\\n\") == \"1\"\nassert solution(\"4 3\\n3 1\\n\") == \"2\"\nassert solution(\"4 3\\n3 1\\n4 2\\n\") == \"1\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input(\"Enter n and k: \")) == output(\"Output\")"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n2 1\\n5 22\") == \"2 1 4 3\"\nassert solution(\"2 1\\n4 3\\n5 22\") == \"1\"\nassert solution(\"3 2\\n4 2\\n5 2\\n1 1\") == \"4 2 5 2\"\nassert solution(\"5 4\\n1 3\\n2 2\") == \"4 2 5 2\"\n\nfrom typing import List"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2 1 2\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Test Failed. Input: {input()}, Expected Output: {output()}, Received Output: {solution(input())}\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test failed for {input()}, expected: {output}, got: {solution(input())}\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n2 1\\n\") == \"2 1 2\\n\"\nassert solution(\"2 1\\n\") == \"1\\n\"\nassert solution(\"5 22\\n\") == \"4 3 4 2\\n\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 4\\n1 2\\n1 3\\n3 4\\n2 4') == '2\\n'\nassert solution('7 6\\n1 2\\n2 3\\n2 5\\n6 3\\n7 2\\n3 4') == '2\\n'\nassert solution('7 5\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7') == '0\\n'"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == '2', 'Sample Input 1'\nassert solution(sample_input2) == '2', 'Sample Input 2'\nassert solution(sample_input3) == '0', 'Sample Input 3'"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 4\\n1 2\\n1 3\\n3 4\\n2 4\\n') == '2'\nassert solution('7 6\\n1 2\\n2 3\\n2 5\\n6 3\\n7 2\\n3 4\\n') == '2'\nassert solution('7 5\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\\n') == '0'"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n3 4\\n2 4\\n\") == \"2\\n\"\nassert solution(\"7 6\\n1 2\\n2 3\\n2 5\\n6 3\\n7 2\\n3 4\\n\") == \"2\\n\"\nassert solution(\"7 5\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\\n\") == \"0\\n\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected_output, f\"Solution is incorrect. Expected {expected_output}, but got {solution}.\"\n"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\\n\", \"Expected output: 2\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Sample Input 1\") == \"2\\n\", \"Sample Input 1\"\nassert solution(\"Sample Input 2\") == \"2\\n\", \"Sample Input 2\"\nassert solution(\"Sample Input 3\") == \"0\\n\", \"Sample Input 3\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == expected_output, f\"Test case {index + 1} failed.\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n3 4\\n2 4\\n\") == \"2\\n\"\nassert solution(\"7 6\\n1 2\\n2 3\\n2 5\\n6 3\\n7 2\\n3 4\\n\") == \"2\\n\"\nassert solution(\"7 5\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\\n\") == \"0\\n\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n3 4\\n2 4\") == \"2\"\nassert solution(\"7 6\\n1 2\\n2 3\\n2 5\\n6 3\\n7 2\\n3 4\") == \"2\"\nassert solution(\"7 5\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\") == \"0\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\nfor input_ in [20, -10, 0, 20]:\n    assert solution(f\"{input_}\\n1.00 0.10\") == 20.0, f\"Expected 20.0, got {solution(f\"{input_}\\n1.00 0.10\")}\"\nfor input_ in [-10, 10, 0, 20]:\n    assert solution(f\"{input_}\\n10.00 1.00\") == 3.14159265, f\"Expected 3.14159265, got {solution(f\"{input_}\\n10.00 1.00\")}\"\nfor input_ in [0, 20]:\n    assert solution(f\"{input_}\\n1.00 0.10\") == 28.2644591, f\"Expected 28.2644591, got {solution(f\"{input_}\\n1.00 0.10\")}\"\n"
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == \"20.00000000\", \"Solution 1 test failed.\"\nassert solution(sample_input2) == \"3.14159265\", \"Solution 2 test failed.\"\nassert solution(sample_input3) == \"28.26445910\", \"Solution 3 test failed.\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"20 0\\n1.00 0.10\\n\") == \"20.00000000\\n\"\nassert solution(\"20 10\\n10.00 1.00\\n\") == \"3.14159265\\n\"\nassert solution(\"0 20\\n1.00 0.10\\n\") == \"28.26445910\\n\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"20 0\\n1.00 0.10\") == 20.0, \"Invalid output.\"\nassert solution(\"-10 10\\n10.00 1.00\") == 3.14159265, \"Invalid output.\"\nassert solution(\"0 20\\n1.00 0.10\") == 28.26445910, \"Invalid output.\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=r\"\"\"\n20 0\n1.00 0.10\n\"\"\") == \"20.00000000\"\n\nassert solution(stdin=r\"\"\"\n-10 10\n10.00 1.00\n\"\"\") == \"3.14159265\"\n\nassert solution(stdin=r\"\"\"\n0 20\n1.00 0.10\n\"\"\") == \"28.26445910\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"20 0\\n1.00 0.10\\n\") == \"20.00000000\\n\"\nassert solution(stdin=\"-10 10\\n10.00 1.00\\n\") == \"3.14159265\\n\"\nassert solution(stdin=\"0 20\\n1.00 0.10\\n\") == \"28.26445910\\n\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"20 0\\n1.00 0.10\\n\") == \"20.00000000\\n\", \"Incorrect output for sample input 1\"\nassert solution(\" -10 10\\n10.00 1.00\\n\") == \"3.14159265\\n\", \"Incorrect output for sample input 2\"\nassert solution(\"0 20\\n1.00 0.10\\n\") == \"28.26445910\\n\", \"Incorrect output for sample input 3\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"20 0\\n1.00 0.10\") == \"20.00000000\\n\"\nassert solution(\"-10 10\\n10.00 1.00\") == \"3.14159265\\n\"\nassert solution(\"0 20\\n1.00 0.10\") == \"28.26445910\\n\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"20 0\\n1.00 0.10\\n\") == \"20.00000000\\n\"\nassert solution(\"0 -10\\n10.00 1.00\\n\") == \"3.14159265\\n\"\nassert solution(\"0 20\\n1.00 0.10\\n\") == \"28.26445910\\n\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('20 0\\n1.00 0.10\\n') == '20.00000000'\nassert solution('-10 10\\n10.00 1.00\\n') == '3.14159265'\nassert solution('0 20\\n1.00 0.10\\n') == '28.26445910'"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2 100\\n1 100\\n4 70\\n3 70\\n\") == \"170\\n\", \"Test 1 failed\"\nassert solution(\"2\\n2 120\\n3 50\\n2 80\\n\") == \"150\\n\", \"Test 2 failed\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 100\\n1 100\\n4 70\\n3 70\") == 170\nassert solution(\"3\\n2 120\\n3 50\\n2 80\") == 150"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 100\\n1 100\\n4 70\\n3 70\") == 170\nassert solution(\"3 120\\n2 50\\n2 80\") == 150"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"150\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"170\", \"The solution should return 170.\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 100\\n1 100\\n4 70\\n3 70\") == \"170\"\nassert solution(\"3\\n2 120\\n3 50\\n2 80\") == \"150\"\nassert solution(\"4\\n2 100\\n1 100\\n4 70\\n3 70\") == \"170\"\nassert solution(\"3\\n2 120\\n3 50\\n2 80\") == \"150\"\nassert solution(\"4\\n2 100\\n1 100\\n4 70\\n3 70\") == \"170\"\nassert solution(\"3\\n2 120\\n3 50\\n2 80\") == \"150\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '150'\n"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2 100\\n1 100\\n4 70\\n3 70\\n\") == \"170\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 100\\n1 100\\n4 70\\n3 70\\n\") == \"170\"\nassert solution(\"3\\n2 120\\n3 50\\n2 80\\n\") == \"150\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 100\\n1 100\\n4 70\\n3 70\") == \"170\"\nassert solution(\"3\\n2 120\\n3 50\\n2 80\") == \"150\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n1 2\\n1 3\\n2 4\\n\\n6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\\n\") == \"2\"\nassert solution(\"6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\\n\") == \"5\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1 2\\n1 3\\n2 4\\n\") == \"2\\n\"\nassert solution(\"6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\\n\") == \"5\\n\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 3\\n1 2\\n1 3\\n2 4\\n') == '2\\n'\nassert solution('6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\\n') == '5\\n'"
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '2', \"Incorrect output\"\n"
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\n2\\n1\\n2\\n3\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == 3\nassert solution(\"10\\n2\\n1\\n2\\n3\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == 5"
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    4 3\n    1 2\n    1 3\n    2 4\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    6 6\n    1 2\n    1 3\n    2 4\n    3 4\n    3 5\n    5 6\n    \"\"\"\n) == \"5\\n\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n1 2\\n1 3\\n2 4\\n\") == \"2\\n\"\nassert solution(\"6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\\n\") == \"5\\n\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"5\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n1 2\\n1 3\\n2 4\\n\") == 2\nassert solution(\"6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\\n\") == 5\n"
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Received: {solution(input())}\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0.5\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3\n1\n0\n2 1 2\n1 0\n1 0\"\"\") == 0.5\n\nassert solution(\"\"\"8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\"\"\") == 0.0446429"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(None) == \"Not enough input provided\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '0.0446429', 'Enter the correct input for the problem statement'"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"0.5\", \"The answer should be correct within an absolute or relative error of 10^{-6}\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '0.0446429', \"Incorrect output.\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"0.5\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    3\n    1\n    0\n    2 1 2\n    1 0\n    1 0\n    ''') == '0.5'\n\nassert solution('''\n    8\n    6\n    1 0 2 3 0 1\n    7 1 2 3 4 5 6 7\n    1 0\n    2 0 3\n    2 0 2\n    1 0\n    1 0\n    1 0\n    1 0\n    ''') == '0.0446429'"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1\\n0\\n2 1 2\\n1 0\\n1 0\\n\") == \"0.5\"\nassert solution(\"8\\n6\\n1 0 2 3 0 1\\n7 1 2 3 4 5 6 7\\n1 0\\n2 0 3\\n2 0 2\\n1 0\\n1 0\\n1 0\\n1 0\\n\") == \"0.0446429\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == output\n"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(r\"6\\n1 2 3 3 2 1\") == \"3\\n1 6 1\\n2 5 2\\n3 4 3\"\nassert solution(r\"4\\n1 2 1 2\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n1 2 3 3 2 1\") == \"3\\n1 6 1\\n2 5 2\\n3 4 3\\nIMPOSSIBLE\"\nassert solution(\"4\\n1 2 1 2\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 2 3 3 2 1\\n\") == \"3\\n1 6 1\\n2 5 2\\n3 4 3\"\nassert solution(\"4\\n1 2 1 2\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n1 2 3 3 2 1\") == \"3\\n1 6 1\\n2 5 2\\n3 4 3\"\nassert solution(\"4\\n1 2 1 2\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin.read()) == expected, f\"Testcase failed with input: {stdin}\"\n"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n1 2 3 3 2 1\") == \"3\\n1 6 1\\n2 5 2\\n3 4 3\"\nassert solution(\"4\\n1 2 1 2\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    6\n    1 2 3 3 2 1\n    \"\"\"\n) == '3\\n1 6 1\\n2 5 2\\n3 4 3'\n\nassert solution(\n    \"\"\"\n    4\n    1 2 1 2\n    \"\"\"\n) == 'IMPOSSIBLE'"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output, f\"Expected {expected_output}, got {solution(stdin)}\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"For input {input()}, expected output {expected}, but got {solution(input())}\"\n\ninput_data = \"\"\"\n6\n1 2 3 3 2 1\n\"\"\"\n\ninput_data = [int(x) for x in input_data.split()]\n\nexpected = \"\"\"\n3\n1 6 1\n2 5 2\n3 4 3\n\"\"\"\n\nexpected = [int(x) for x in expected.split()]\n\nsolution = lambda x: \"IMPOSSIBLE\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1 2 100\"\nassert solution() == \"1 2 100 2 28 27\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '1 2 100', 'Expected output: 1 2 100'\n"
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2\\n1 100\\n1 1\\n\") == \"1 2 100\\n\"\nassert solution(\"2\\n5 10 20 30 40 50\\n2 28 27\\n\") == \"10 20 28 27 30 40 50\\n\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='3\\n1 2\\n1 100\\n1 1\\n2\\n5 10 20 30 40 50\\n2 28 27\\n') == '1 2 100\\n1 1 28 27\\n'"
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n3\n1 2\n1 100\n1 1\n''') == '1 2 100'\n\nassert solution('''\n2\n5 10 20 30 40 50\n2 28 27\n''') == '10 20 28 27 30 40 50'"
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2\\n1 100\\n1 1\\n\") == \"1 2 100\\n\"\nassert solution(\"2\\n5 10 20 30 40 50\\n2 28 27\\n\") == \"10 20 28 27 30 40 50\\n\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2\\n1 100\\n1 1\\n2\\n5 10 20 30 40 50\\n2 28 27\") == \"1 2 100\\n1 100 5 20 30 40 2 28 27\"\nassert solution(\"2\\n5 10 20 30 40 50\\n2 28 27\") == \"10 20 28 27 30 40 50\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 2\n1 100\n1 1\n''') == '1 2 100'\n\nassert solution('''\n2\n5 10 20 30 40 50\n2 28 27\n''') == '10 20 28 27 30 40 50'"
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    3\n    1 2\n    1 100\n    1 1\n    \"\"\"\n) == \"1 2 100\\n\"\n\nassert solution(\n    \"\"\"\n    2\n    5 10 20 30 40 50\n    2 28 27\n    \"\"\"\n) == \"10 20 28 27 30 40 50\\n\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(None) == ''"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 506\n"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0\\nSample Input 1\\nSample Output 1\\n0\\nSample Input 2\\nSample Output 2\\n0\\n\") == \"2600\\n506\\ndef solution(stdin: str) -> str: pass\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == '2600'"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == \"2600\"\nassert solution(sample_input_2) == \"506\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 506, \"The correct solution is not returned for the given input.\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0\\n\") == \"2600\"\nassert solution(\"3\\nAB 1 1\\nAC 2 1\\nBC 2 1\\n\") == \"506\"\n"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {case_num} has an incorrect output. Expected output: '{expected_output}', but got: '{solution(stdin)}'.\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('Sample Input 1') == '2600', \"Your solution is incorrect. Please see the examples for sample inputs.\"\nassert solution('Sample Input 2') == '506', \"Your solution is incorrect. Please see the examples for sample inputs.\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2600\"\nassert solution(stdin) == \"506\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"()))\") == \"possible\"\nassert solution(\")))(\") == \"impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"()\") == \"possible\"\nassert solution(\"(())\") == \"possible\"\nassert solution(\"()()\") == \"possible\"\nassert solution(\"()())()\") == \"possible\"\nassert solution(\"(())(()\")) == \"impossible\"\nassert solution(\"(()())\")) == \"impossible\"\nassert solution(\"(()(())\")) == \"impossible\"\nassert solution(\"(()(()()))\") == \"impossible\"\nassert solution(\"()())(())\") == \"impossible\"\nassert solution(\"(())(())\") == \"impossible\"\nassert solution(\"()(()))()\") == \"impossible\"\nassert solution(\"()(()))(())()\") == \"impossible\"\nassert solution(\"(())())(())\") == \"impossible\"\nassert solution(\"((()))\") == \"impossible\"\nassert solution(\"())\") == \"impossible\"\nassert solution(\"(()())\") == \"impossible\"\nassert solution(\"(())\") == \"impossible\"\nassert solution(\"()())\") == \"impossible\"\nassert solution(\"()())()\") == \"impossible\"\nassert solution(\"(())(()\")) == \"impossible\"\nassert solution(\"(()())\")) == \"impossible\"\nassert solution(\"(()(())\")) == \"impossible\"\nassert solution(\"(()(()()))\") == \"impossible\"\nassert solution(\"()())(())\") == \"impossible\"\nassert solution(\"(())(())\") == \"impossible\"\nassert solution(\"()(()))()\") == \"impossible\"\nassert solution(\"()(()))(())()\") == \"impossible\"\nassert solution(\"(())())(())\") == \"impossible\"\nassert solution(\"((()))\") == \"impossible\"\nassert solution(\"())\") == \"impossible\"\nassert solution(\"(()())\") == \"impossible\"\nassert solution(\"(())\") == \"impossible\"\nassert solution(\"()())\") == \"impossible\"\nassert solution(\"()())()\") == \"impossible\"\nassert solution(\"(())(()\")) == \"impossible\"\nassert solution(\"(()())\")) == \"impossible\"\nassert solution(\"(()(())\")) == \"impossible\"\nassert solution(\"(()(()()))\") == \"impossible\"\nassert solution(\"()())(())\") == \"impossible\"\nassert solution(\"(())(())\") == \"impossible\"\nassert solution(\"()(()))()\") == \"impossible\"\nassert solution(\"()(()))(())()\") == \"impossible\"\nassert solution(\"(())())(())\") == \"impossible\"\nassert solution(\"((()))\") == \"impossible\"\nassert solution(\"())\") == \"impossible\"\nassert solution(\"(()())\") == \"impossible\"\nassert solution(\"(())\") == \"impossible\"\nassert solution(\"()())\") == \"impossible\"\nassert solution(\"()())()\") == \"impossible\"\nassert solution(\"(())(()\")) == \"impossible\"\nassert solution(\"(()())\")) == \"impossible\"\nassert solution(\"(()(())\")) == \"impossible\"\nassert solution(\"(()(()()))\") == \"impossible\"\nassert solution(\"()())(())\") == \"impossible\"\nassert solution(\"(())(())\") == \"impossible\"\nassert solution(\"()(()))()\") == \"impossible\"\nassert solution(\"()(()))(())()\") == \"impossible\"\nassert solution(\"(())())(())\") == \"impossible\"\nassert solution(\"((()))\") == \"impossible\"\nassert solution(\"())\") == \"impossible\"\nassert solution(\"(()())\") == \"impossible\"\nassert solution(\"(())\") == \"impossible\"\nassert solution(\"()())\") == \"impossible\"\nassert solution(\"()())()\") == \"impossible\"\nassert solution(\"(())(()\")) == \"impossible\"\nassert solution(\"(()())\")) == \"impossible\"\nassert solution(\"(()(())\")) == \"impossible\"\nassert solution(\"(()(()()))\") == \"impossible\"\nassert solution(\"()())(())\") == \"impossible\"\nassert solution(\"(())(())\") == \"impossible\"\nassert solution(\"()(()))()\") == \"impossible\"\nassert solution(\"()(()))(())()\") == \"impossible\"\nassert solution(\"(())())(())\") == \"impossible\"\nassert solution(\"((()))\") == \"impossible\"\nassert solution(\"())\") == \"impossible\"\nassert solution(\"(()())\") == \"impossible\"\nassert solution(\"(())\") == \"impossible\"\nassert solution(\"()())\") == \"impossible\"\nassert solution(\"()())()\") == \"impossible\"\nassert solution(\"(())(()\")) == \"impossible\"\nassert solution(\"(()())\")) == \"impossible\"\nassert solution(\"(()(())\")) == \"impossible\"\nassert solution(\"(()(()()))\") == \"impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"()\") == \"possible\"\nassert solution(\"()()\") == \"possible\"\nassert solution(\"(()())\") == \"impossible\"\nassert solution(\"((()))\") == \"possible\"\nassert solution(\"(()())(())\") == \"possible\"\nassert solution(\"((())\") == \"impossible\"\nassert solution(\"(())()\") == \"impossible\"\nassert solution(\"()()())\") == \"possible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"())\") == \"possible\"\nassert solution(\"()()\") == \"possible\"\nassert solution(\"(()())()\") == \"possible\"\nassert solution(\"(())\") == \"impossible\"\nassert solution(\"(())()\") == \"impossible\"\nassert solution(\"(()))\") == \"impossible\"\nassert solution(\"(())(())\") == \"impossible\"\nassert solution(\"((()))(())\") == \"impossible\"\nassert solution(\"(())((()))\") == \"impossible\"\nassert solution(\"(())(())(())())\") == \"impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"()\") == \"possible\"\nassert solution(\"(())\") == \"possible\"\nassert solution(\"()())\") == \"possible\"\nassert solution(\"()()(\") == \"possible\"\nassert solution(\"(())(())\") == \"possible\"\n\nassert solution(\"()\") == \"possible\"\nassert solution(\"(())\") == \"impossible\"\nassert solution(\"()())\") == \"impossible\"\nassert solution(\"()()(\") == \"impossible\"\nassert solution(\"(())(())\") == \"impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"()))\") == \"possible\"\nassert solution(\")))(\") == \"impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('()))' == 'possible', 'Example 1 failed'\nassert solution('(())' == 'possible', 'Example 2 failed'"
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"()))\"), \"possible\"\nassert solution(\"()()\"), \"possible\"\nassert solution(\"(())\"), \"possible\"\nassert solution(\"(())(())\"), \"possible\"\nassert solution(\"(())(())()\"), \"possible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('()))') == 'possible'\nassert solution('(())') == 'possible'\nassert solution('()()') == 'possible'\nassert solution('(())()') == 'possible'\nassert solution('())(') == 'impossible'\nassert solution('()())') == 'impossible'\nassert solution('(()())') == 'impossible'\nassert solution('(()())(')) == 'possible'\nassert solution('(())()()') == 'possible'\nassert solution('(())())') == 'possible'\nassert solution('()(())()') == 'possible'\nassert solution('())()()()') == 'possible'\nassert solution('())') == 'possible'\nassert solution('())()()()()') == 'possible'\nassert solution('()(())') == 'impossible'\nassert solution('(())') == 'impossible'\nassert solution('()()()()()()') == 'impossible'\nassert solution('()())()()()()') == 'impossible'"
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"()))\") == \"possible\"\nassert solution(\")))(\") == \"impossible\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400\") == \"1800\"\nassert solution(\"2 2\\n1 1800 3600 1800\\n1 1900 3600 1600\") == \"impossible\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 3\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400\\n') == '1800'\nassert solution('2 2\\n1 1800 3600 1800\\n1 1900 3600 1600\\n') == 'impossible'"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '1800'"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400\") == \"1800\\n\"\nassert solution(\"2 2\\n1 1800 3600 1800\\n1 1900 3600 1600\") == \"impossible\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(str(input())) == '1800'"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1800\", \"The earliest time you can book a train for from station 1, in order to earn this restitutive reward should be 1800 seconds.\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n2 3\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400') == '1800'\nassert solution('1\\n2 2\\n1 1800 3600 1800\\n1 1900 3600 1600') == 'impossible'"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n2 3\n1 1800 9000 1800\n1 2000 9200 1600\n1 2200 9400 1400\n''') == '1800\\n'\nassert solution('''\n2 2\n1 1800 3600 1800\n1 1900 3600 1600\n''') == 'impossible\\n'"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 3\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400\\n') == '1800\\n'\nassert solution('2 2\\n1 1800 3600 1800\\n1 1900 3600 1600\\n') == 'impossible\\n'"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"A1-B2 B1-A2 A3-B3 A2-B3 A1-B1 A3-B1 A2-B2\"\nassert solution(\"2 3\") == \"A1-B1 A2-C2 B2-C1 A1-C1 A2-B1 B2-C2 A1-B2 A2-C1 B1-C2 A1-C2 A2-B2 B1-C1\"\n"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n2 3\\n\") == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\n\"\nassert solution(\"2 3\\n\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\\n\""
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Expected: {expected_output}, Actual: {solution(input())}\""
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output\n\nfrom typing import List"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 2') == ['A1-B2 B1-A2 A3-B3', 'A2-B3 B2-A3 A1-B1', 'A3-B1 B3-A1 A2-B2']\nassert solution('2 3') == ['A1-B1 A2-C2 B2-C1', 'A1-C1 A2-B1 B2-C2', 'A1-B2 A2-C1 B1-C2', 'A1-C2 A2-B2 B1-C1']"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'Output one line per round in the playing schedule. Each line should contain a space separated list of games. A game is in the format \"<player>-<player>\". The players in the first team are denoted as \"A1, A2,..., An\"; the second team B1, B2,..., Bn and so on.'"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == '''\nA1-B2 B1-A2 A3-B3\nA2-B3 B2-A3 A1-B1\nA3-B1 B3-A1 A2-B2\nA1-B1 A2-C2 B2-C1\nA1-C1 A2-B1 B2-C2\nA1-B2 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1\n'''\n"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n3 2\nSample Output 1:\nA1-B2 B1-A2 A3-B3\nA2-B3 B2-A3 A1-B1\nA3-B1 B3-A1 A2-B2\n\"\"\"\n) == \"\"\"\nA1-B2 B1-A2 A3-B3\nA2-B3 B2-A3 A1-B1\nA3-B1 B3-A1 A2-B2\n\"\"\"\n\nassert solution(\n    \"\"\"\n2 3\nSample Output 2:\nA1-B1 A2-C2 B2-C1\nA1-C1 A2-B1 B2-C2\nA1-B2 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1\n\"\"\"\n) == \"\"\"\nA1-B1 A2-C2 B2-C1\nA1-C1 A2-B1 B2-C2\nA1-B2 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1\n\"\"\""
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(r'2 2\\n..\\n..') == '7'\nassert solution(r'4 4\\nX.XX\\nX..X\\n..X.\\n..XX') == '9'"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '9'"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n..\\n..\") == \"7\"\nassert solution(\"4 4\\nX.XX\\nX..X\\n..X.\\n..XX\") == \"9\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\nX.XX\\nX..X\\n..X. \\n..XX\") == \"9\"\n"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"7\"\nassert solution(stdin) == \"9\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n..\\n..\") == \"7\\n\"\nassert solution(\"4 4\\nX.XX\\nX..X\\n..X.\\n..XX\") == \"9\\n\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n..\\n..\") == \"7\"\nassert solution(\"4 4\\nX.XX\\nX..X\\n..X. \\n..XX\") == \"9\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(r\"2 2\\n..\\n..\") == \"7\"\nassert solution(r\"4 4\\nX.XX\\nX..X\\n..X.\\n..XX\") == \"9\"\n"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Output a single integer, which is the minimum cost for the knight to reach the goal at (0,0). Output -1 if it is not possible to reach the goal.\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == \"600\", \"Incorrect output\"\nassert solution(sample_input2) == \"100\", \"Incorrect output\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1 1 1 1 500\\n2\\n3 3 2 2 100\\n1 1 1 1 500\") == 600\nassert solution(\"2\\n2 0 2 1 100\\n6 0 8 1 1\\n1 1 1 1 500\") == 100"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n3 3 2 2 100\\n1 1 1 1 500\\n\") == 600\nassert solution(\"2\\n2 0 2 1 100\\n6 0 8 1 1\\n\") == 100"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n3 3 2 2 100\\n1 1 1 1 500\\n\") == \"600\"\nassert solution(\"2\\n2 0 2 1 100\\n6 0 8 1 1\\n\") == \"100\"\nassert solution(\"1\\n2 0 2 1 100\\n6 0 8 1 1\\n\") == \"-1\"\nassert solution(\"1\\n2 0 2 1 100\\n6 0 8 1 1\\n\") == \"-1\"\n\nfrom typing import List"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n3 3 2 2 100\\n1 1 1 1 500\") == \"600\\n\"\nassert solution(\"2\\n2 0 2 1 100\\n6 0 8 1 1\") == \"100\\n\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\"\n"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '600\\n'\n"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'Output the minimum cost to reach square (0,0) or -1 if it is not possible to reach the goal.'"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n3 3 2 2 100\\n1 1 1 1 500\\n\") == 600\nassert solution(\"2\\n2 0 2 1 100\\n6 0 8 1 1\\n\") == 100"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\") == 3\nassert solution(\"361\") == 3\nassert solution(\"2\") == 0"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 3\nassert solution(2) == 0"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 361) == 3\nassert solution(2, 11) == 0"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == expected, f\"Expected {expected}, got {solution(stdin=input())}\""
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 3"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n361\") == \"3\"\nassert solution(\"2\\n11\") == \"0\""
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\") == 3\nassert solution(\"361\") == 3\nassert solution(\"2\") == 0"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n361\\n\") == \"3\"\nassert solution(\"2\\n11\\n\") == \"0\""
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 3\nassert solution(2) == 0"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n361\") == \"3\"\nassert solution(\"2\\n11\") == \"0\""
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output\n"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output\nprint(\"Correct\")\n"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"10\""
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Solution: {solution(input())}, Expected Output: {expected}\"\n\nfrom typing import List"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == \"10\"\nassert solution(open(\"sample_input2.txt\", \"r\")) == \"cancel road trip\""
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"10\""
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == \"10\"\nassert solution(sample_input2) == \"cancel road trip\""
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"10\"\n"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 10\\n2 100\\n1 10\\n11 5\") == \"10\"\nassert solution(\"3 10\\n2 100\\n1 10\\n13 5\") == \"cancel road trip\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 9\\n2 8\\n1 1\\n3 4\\n5 100\\n\") == \"1 8 9 9 100 101 108 109 109\"\nassert solution(\"5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\\n\") == \"0 7 8 11 15 16 19\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n\") == \"1 2 3 4 5\"\n\nfrom typing import List"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 9\\n2 8\\n1 1\\n3 4\\n5 100\") == \"1 8 9 9 100 101 108 109 109\"\nassert solution(\"5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\") == \"0 7 8 11 15 16 19\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 9\\n2 8\\n1 1\\n3 4\\n5 100\") == \"1 8 9 9 100 101 108 109 109\"\nassert solution(\"5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\") == \"0 7 8 11 15 16 19\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 9\\n2 8\\n1 1\\n3 4\\n5 100\") == \"1 8 9 9 100 101 108 109 109\"\nassert solution(\"5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\") == \"0 7 8 11 15 16 19\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 9\\n2 8\\n1 1\\n3 4\\n5 100\") == \"1 8 9 9 100 101 108 109 109\"\nassert solution(\"5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\") == \"0 7 8 11 15 16 19\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output, f\"Test failed: {solution(sample_input)}!= {sample_output}\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 9\\n2 8\\n1 1\\n3 4\\n5 100') == '1 8 9 9 100 101 108 109 109'\nassert solution('5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8') == '0 7 8 11 15 16 19'"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 9\\n2 8\\n1 1\\n3 4\\n5 100\\n\") == \"1 8 9 9 100 101 108 109 109\\n\"\nassert solution(\"5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\\n\") == \"0 7 8 11 15 16 19\\n\"\nassert solution(\"4 10\\n2 5\\n1 3\\n3 8\\n5 5\\n\") == \"2 6 8 10 13 15\\n\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n\") == \"2 3 5 7 9\\n\"\nassert solution(\"2 2\\n3 3\\n4 4\\n5 5\\n\") == \"2 3 5 7 9\\n\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 9\\n2 8\\n1 1\\n3 4\\n5 100\") == \"1 8 9 9 100 101 108 109 109\\n\"\nassert solution(\"5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\") == \"0 7 8 11 15 16 19\\n\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3') == '1\\n'\nassert solution('1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3') == '3\\n'\nassert solution('1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3') == '1\\n'"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    1 3 3\n    0 0 1\n    3 3\n    -3 3\n    3 -3\n    3 0\n    0 3\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    1 5 3\n    0 0 1\n    3 3\n    -3 3\n    3 -3\n    3 0\n    0 3\n    \"\"\"\n) == \"3\\n\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('example_input1.txt', 'r').read()) == '1\\n'\nassert solution(open('example_input2.txt', 'r').read()) == '3\\n'"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('liam_tower_defense.txt', 'r')) == '3\\n'\nassert solution(open('no_villages.txt', 'r')) == '3\\n'\nassert solution(open('no_minions.txt', 'r')) == '3\\n'\nassert solution(open('no_attack.txt', 'r')) == '3\\n'\nassert solution(open('single_attack.txt', 'r')) == '1\\n'\nassert solution(open('single_attack_2.txt', 'r')) == '2\\n'\nassert solution(open('single_attack_3.txt', 'r')) == '3\\n'"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == 1\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == 3"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == \"1\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == \"3\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == 1, \"The maximum number of enemy minions that Liam can destroy with a single attack should be 1.\"\n\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == 3, \"The maximum number of enemy minions that Liam can destroy with a single attack should be 3.\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == 1\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == 3"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == 1\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 0\\n0 3\") == 3"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == 1, \"Example 1 Failed\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == 3, \"Example 2 Failed\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\") == \"4\\n4\\n2\\n2\\n0\"\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\") == \"2\\n0\\n0\\n2\\n0\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\\n\") == \"4\\n4\\n2\\n2\\n0\\n\"\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\\n\") == \"2\\n0\\n0\\n2\\n0\\n\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 10000\\n1\\n1\\n1\\n1\\n1') == '4\\n4\\n2\\n2\\n0\\n'\nassert solution('5 9\\n1\\n1\\n10\\n1\\n9') == '2\\n0\\n0\\n2\\n0\\n'"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str: pass\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\\n\") == \"4\\n4\\n2\\n2\\n0\\n\"\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\\n\") == \"2\\n0\\n0\\n2\\n0\\n\"\nassert solution(\"5 10000\\n2 10000\\n1\\n1\\n1\\n1\\n\") == \"4\\n4\\n2\\n2\\n0\\n\"\nassert solution(\"5 9\\n2 10000\\n1\\n1\\n10\\n1\\n9\\n\") == \"2\\n0\\n0\\n2\\n0\\n\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 10000\\n1\\n1\\n1\\n1\\n1\\n') == '4\\n4\\n2\\n2\\n0\\n'\nassert solution('5 9\\n1\\n1\\n10\\n1\\n9\\n') == '2\\n0\\n0\\n2\\n0\\n'"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\") == \"4\\n4\\n2\\n2\\n0\\n\"\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\") == \"2\\n0\\n0\\n2\\n0\\n\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 10000\\n1\\n1\\n1\\n1\\n1') == ['4', '4', '2', '2', '0']\n\nassert solution('5 9\\n1\\n1\\n10\\n1\\n9') == ['2', '0', '0', '2', '0']"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\\n\") == \"4\\n4\\n2\\n2\\n0\\n\"\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\\n\") == \"2\\n0\\n0\\n2\\n0\\n\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\ne\\n\") == \"NE\\n\"\nassert solution(\"4\\nkava\\n\") == \"DA\\nak\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\nne\\n\") == \"NE\"\nassert solution(\"4\\nkava\\n\") == \"DA\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\nne\") == \"NE\\n\"\nassert solution(\"4\\nkava\") == \"DA\\nak\\ndef solution(stdin: str) -> str:\n    pass\"\n"
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\nkava\") == \"DA\"\nassert solution(\"2\\ne\") == \"NE\"\nassert solution(\"4\\nne\") == \"NE\"\nassert solution(\"4\\nk\") == \"DA\"\nassert solution(\"4\\nkava\") == \"DA\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\ne\\n\") == \"NE\\n\"\nassert solution(\"4\\nkava\\n\") == \"DA\\nak\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\nne\\n\") == \"NE\\nk\\n\"\n\nassert solution(\"4\\nkava\\n\") == \"DA\\nak\\ndef\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\nne\") == \"NE\"\nassert solution(\"4\\nkava\") == \"DA\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\nkava\") == \"DA\"\nassert solution(\"2\\nne\") == \"NE\"\nassert solution(\"3\\nabc\") == \"NE\"\nassert solution(\"1\\nxyz\") == \"NE\"\nassert solution(\"1\\nabc\") == \"NE\"\nassert solution(\"1\\ndjk\") == \"NE\"\n"
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\ne\\n\") == \"NE\\n\"\nassert solution(\"4\\nkava\\n\") == \"DA\\nak\\ndef solution(stdin: str) -> str: \\n    pass\\n\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\nne\\n') == 'NE\\n'\nassert solution('4\\nkava\\n') == 'DA\\nak\\ndef solution(stdin: str) -> str:\n    pass'"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0\\n0\\n3\\n2\\n\"\n"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2\") == \"2\\n0\\n2\\n1\"\nassert solution(\"8 10 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8\") == \"0\\n0\\n3\\n2\""
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2\") == \"2\\n0\\n2\\n1\\n\\n0\\n0\\n3\\n2\\n\"\nassert solution(\"8 10 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8\") == \"0\\n0\\n3\\n2\\n\\n0\\n0\\n2\\n0\\n0\\n\""
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2') == '2\\n0\\n2\\n1'\n\nassert solution('8 10 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8') == '0\\n0\\n3\\n2'"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == output, f\"Solution should return {output}, but returned {solution(input)}.\\nInput: {input}\\nOutput: {output}\"\n"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2\") == \"2\\n0\\n2\\n1\\n\"\n\nassert solution(\"8 10 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8\") == \"0\\n0\\n3\\n2\\n\""
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2') == '2\\n0\\n2\\n1\\n\\n0\\n0\\n3\\n2\\n2\\n1\\n0\\n0\\n1\\n0\\n0\\n0\\n1\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2\") == \"2\\n0\\n2\\n1\"\nassert solution(\"8 10 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8\") == \"0\\n0\\n3\\n2\""
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2') == '2\\n0\\n2\\n1\\n'\nassert solution('8 10 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8') == '0\\n0\\n3\\n2\\n'"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\\n0\\n2\\n1\\n\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\\n2 1 3\\n\") == 2"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\\n2 1 3\") == \"2\\n\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\\n2 1 3\") == \"2\\n\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\\n2 1 3\\n') == '2'"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\\n2 1 3\") == \"2\\n\"\nassert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 3\\n1 1 1\\n1 1 2\\n1 1 3\\n2 2 2\") == \"1\\n\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n\\treturn \\\"\\\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\\n2 1 3\\n') == 2"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == 2, \"Sample Output 1 is incorrect\"\nassert solution(sample_input_2) == 1, \"Sample Output 2 is incorrect\"\n\nfrom typing import List"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == \"40.500000000\"\nassert solution(2) == \"49.000000000\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"40.500000000\\n\", \"Test Case 1 Failed\"\nassert solution(stdin) == \"49.000000000\\n\", \"Test Case 2 Failed\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"49.000000000\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"40.500000000\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"40.500000000\\n\"\nassert solution(open(\"input_2.txt\", \"r\")) == \"49.000000000\\n\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"40.500000000\\n\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 15\\nD 4 10 1\\nC 6 1\\n\\n3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\n\\n\") == \"40.500000000\\n\"\nassert solution(\"1 1\\nD 1 1 1\\nC 1 1\\n\\n\") == \"impossible\\n\"\nassert solution(\"1 1\\nD 1 1 1\\nC 1 1\\n\\n1 1\\nD 1 1 1\\nC 1 1\\n\\n1 1\\nD 1 1 1\\nC 1 1\\n\") == \"impossible\\nimpossible\\n\"\nassert solution(\"1 1\\nD 1 1 1\\nC 1 1\\n\\n1 1\\nD 1 1 1\\nC 1 1\\n\") == \"40.500000000\\nimpossible\\n\"\nassert solution(\"1 1\\nD 1 1 1\\nC 1 1\\n\\n1 1\\nD 1 1 1\\nC 1 1\\n1 1\\nD 1 1 1\\nC 1 1\\n1 1\\nD 1 1 1\\nC 1 1\\n\") == \"impossible\\n40.500000000\\n\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 15\\nD 4 10 1\\nC 6 1') == '40.500000000\\n'\nassert solution('3 15\\nD 4 10 1\\nC 6 1\\nC 9 3') == '49.000000000\\n'\nassert solution('') == 'impossible\\n'"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 15\\nD 4 10 1\\nC 6 1\\nSample Output 1: 40.500000000\\n\\nSample Input 2: 3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\nSample Output 2: 49.000000000\\n\") == \"49.000000000\\n\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 15\\nD 4 10 1\\nC 6 1\\n\\n\\n3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\") == \"40.500000000\"\nassert solution(\"2 15\\nD 4 10 1\\nC 6 1\\n\\n\\n3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\n\\n\\n2 14\") == \"impossible\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == \"5 4 9 3 1 10 7 6 2\"\nassert solution(\"10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == \"fail\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"5 4 9 3 1 10 7 6 2\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Solution is incorrect. Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == '5 4 9 3 1 10 7 6 2'"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(10, 'a 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7') == '5 4 9 3 1 10 7 6 2'\nassert solution(10, 'a 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7') == 'fail'"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output() for input, output in zip(test_inputs, test_outputs)"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"5 4 9 3 1 10 7 6 2\"\nassert solution() == \"fail\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"5 4 9 3 1 10 7 6 2\"\nassert solution(open(\"sample_input.txt\", \"r\")) == \"5 4 9 3 1 10 7 6 2\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt')) == '5 4 9 3 1 10 7 6 2\\n'"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(None) == 'fail'\nassert solution(\"\") == 'fail'\nassert solution(\"1\") == 'fail'\nassert solution(\"1 2 3\") == 'fail'\nassert solution(\"1 2\") == 'fail'\nassert solution(\"1 2 3 4\") == 'fail'"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"00:00\\n01:01\") == \"3\\n00:00\\n01:00\\n01:01\"\nassert solution(\"00:08\\n00:00\") == \"3\\n00:08\\n00:09\\n00:00\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('00:00') == 3, \"Test 1\"\nassert solution('01:01') == 3, \"Test 2\"\nassert solution('00:08') == 3, \"Test 3\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"00:00\") == \"3\\n00:00\\n01:01\\n\"\nassert solution(\"00:08\") == \"3\\n00:08\\n00:09\\n00:00\\n\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"00:00\\n01:01\") == \"3\\n00:00\\n01:00\\n01:01\"\nassert solution(\"00:08\\n00:00\") == \"3\\n00:08\\n00:09\\n00:00\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('00:00\\n01:01') == '3\\n00:00\\n01:00\\n01:01\\n'\nassert solution('00:08\\n00:00') == '3\\n00:08\\n00:09\\n00:00\\n'"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('00:00\\n01:01') == '3\\n00:00\\n01:00\\n01:01\\n'\nassert solution('00:08\\n00:00') == '3\\n00:08\\n00:09\\n00:00\\n'"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"00:00\\n01:01\") == \"3\\n00:00\\n01:00\\n01:01\\n\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"00:00\\n01:01\") == \"3\\n00:00\\n01:00\\n01:01\\n\"\nassert solution(\"00:08\\n00:00\") == \"3\\n00:08\\n00:09\\n00:00\\n\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('00:00\\n01:01') == '3\\n00:00\\n01:00\\n01:01\\n'\nassert solution('00:08\\n00:00') == '3\\n00:08\\n00:09\\n00:00\\n'\n"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"(())\") == \"4,4:4:4:\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(()) == \"4,8:8,8:\"\nassert solution(()) == \"4,4:\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('(())') == '4,8:8,8:'\nassert solution('()') == '4,4:'"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"(abc)\") == \"4,2:3,2:def:g:abc:ghi:def:ghi:\"\nassert solution(\"((()))\") == \"4,4:8,8:()\"\nassert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"(((())))\") == \"4,8:10,8:10:()\"\nassert solution(\"(())((()))\") == \"4,8:12,8:12:()\"\nassert solution(\"(())()\") == \"4,8:12,8:12:()\"\nassert solution(\"((())())\") == \"4,8:16,8:16:()\"\nassert solution(\"(())(())\") == \"4,8:16,8:16:()\"\nassert solution(\"((()()))\") == \"4,8:16,8:16:()\"\nassert solution(\"(())(())\") == \"4,8:16,8:16:()\"\nassert solution(\"((()()()))\") == \"4,8:16,8:16:()\"\nassert solution(\"(())(())()\") == \"4,8:16,8:16:()\"\nassert solution(\"(())(())(())()\") == \"4,8:16,8:16:()\"\nassert solution(\"(())(())()(())()\") == \"4,8:16,8:16:()\"\nassert solution(\"(())(())(())()()\") == \"4,8:16,8:16:()\"\nassert solution(\"(())(())(())()())(())\") == \"4,8:16,8:16:()\"\nassert solution(\"(())(())(())()())(())(()()))\") == \"4,8:16,8:16:()\"\nassert solution(\"(())(())(())()())(())(()()))(())()\") == \"4,8:16,8:16:()\"\nassert solution(\"(())(())(())()())(())(()()))(())()(())()\") == \"4,8:16,8:16:()\"\nassert solution(\"(())(())(())()())(())(()()))(())()()())\") == \"4,8:16,8:16:()\"\nassert solution(\"(())(())(())()())(())(()()))(())()())(())()\") == \"4,8:16,8:16:()\"\nassert solution(\"(())(())(())()())(())(()()))(())()())(())()(())()\") == \"4,8:16,8:16:()\"\nassert solution(\"(())(())(())()())(())(()()))(())()())(())()(())()()\") == \"4,8:16,8:16:()\"\nassert solution(\"(())(())(())()())(())(()()))(())()())(())()(())()()()()()()()\") == \"4,8:16,8:16:()\"\nassert solution(\"(())(())(())()())(())(()()))(())()())(())()(())()()()()()()()()()()\") == \"4,8:16,8:16:()\"\nassert solution(\"(())(())(())()())(())(()()))(())()())(())()(())()()()()()()()()()()()()()()()()()\") == \"4,8:16,8:16:()\"\nassert solution(\"(())(())(())()())(())(()()))(())()())(())()(())()()()()()()()()()()()()()()()()()()()\") == \"4,8:16,8:16:()\"\nassert solution(\"(())(())(())()())(())(()()))(())()())(())()(())()()()()()()()()()()()()()()()()()()()()()\") == \"4,8:16,8:16:()\"\nassert solution(\"(())(())(())()())(())(()()))(())()())(())()(())()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\"\n\nfrom typing import List"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"(())\") == \"4,4:\"\nassert solution(\"(abc)\") == \"4,4:8,8:\"\nassert solution(\"((abc))\") == \"4,8:8,8:\"\nassert solution(\"((ab(c)))\") == \"4,8:8,8:\"\nassert solution(\"((ab(c))\") == \"4,8:8,8:\"\nassert solution(\"((a(bc)))\") == \"4,8:8,8:\"\nassert solution(\"((a(bc)))\") == \"4,8:8,8:\"\n\nimport re"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\"\nassert solution(\"()\") == \"4,4:\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('(())') == '4,8:8,8:'\nassert solution('()') == '4,4:'\nassert solution('()') == '4,4:'"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\"\nassert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"(())(())\") == \"4,8:8,8:4,8:8,8:\"\nassert solution(\"(())(()()))\") == \"4,8:8,8:4,8:8,8:4,8:8,8:\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == # Solution here\n"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 5, \"Test failed\"\nassert solution() == 185, \"Test failed\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == {\n    \"Sample Input 1\": \"5\",\n    \"Sample Input 2\": \"185\"\n}"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n26 02 03 03 1\\n26 02 03 03 2\") == \"5\\n185\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(solution(solution(stdin=solution.stdin))) == -1\nassert solution(solution(solution(stdin=\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n26 02 03 03 1\\n26 02 03 03 2\\n1 1\\n26 02 03 03 3\\n26 02 03 03 2\\n26 02 03 03 4\\n1 1\\n26 02 03 03 3\\n26 02 03 03 2\\n26 02 03 03 5\\n1 1\\n26 02 03 03 3\\n26 02 03 03 2\\n26 02 03 03 6\") == \"5\\n185\"\nassert solution(\"1 1\\n26 02 03 03 1\\n26 02 03 03 2\\n1 1\\n26 02 03 03 3\\n26 02 03 03 2\\n26 02 03 03 4\\n1 1\\n26 02 03 03 3\\n26 02 03 03 2\\n26 02 03 03 5\\n1 1\\n26 02 03 03 3\\n26 02 03 03 2\\n26 02 03 03 6\\n1 1\\n26 02 03 03 4\\n26 02 03 03 3\\n26 02 03 03 2\\n26 02 03 03 7\") == \"5\\n185\"\nassert solution(\"1 1\\n26 02 03 03 1\\n26 02 03 03 2\\n1 1\\n26 02 03 03 3\\n26 02 03 03 2\\n26 02 03 03 4\\n1 1\\n26 02 03 03 3\\n26 02 03 03 2\\n26 02 03 03 5\\n1 1\\n26 02 03 03 3\\n26 02 03 03 2\\n26 02 03 03 6\\n1 1\\n26 02 03 03 4\\n26 02 03 03 3\\n26 02 03 03 2\\n26 02 03 03 7\\n1 1\\n26 02 03 03 4\\n26 02 03 03 3\\n26 02 03 03 2\\n26 02 03 03 8\") == \"-1\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_data) == output_data, f\"Test failed. Expected {output_data}, got {solution(input_data)}.\" for input_data, output_data in [\n    # Test case 1\n    (\"1 1\\n26 02 03 03 1\\n26 03 04 05 1\", \"5\"),\n\n    # Test case 2\n    (\"1 1\\n26 02 03 03 2\\n26 03 04 05 2\", \"185\"),\n]"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == \"5\", \"Expected output: 5\"\nassert solution(sample_input_2) == \"185\", \"Expected output: 185\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {solution(input())}, expected output: {expected_output}\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Impossible\\n\", \"Output should be 'Impossible'\\n\"\n"
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"TODO\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\\n\") == \"5 6 1 2 3 4\\n\"\nassert solution(\"4 2\\n3 4 1 2\\n\") == \"2 3 4 1\\n\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2 3 4 1\", \"Your solution is incorrect.\"\n"
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\"\nassert solution(\"4 2\\n3 4 1 2\") == \"2 3 4 1\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"\"\"\n5 6 1 2 3 4\n2 3 4 1\n\"\"\"\n"
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\\n\") == \"5 6 1 2 3 4 \"\nassert solution(\"4 2\\n3 4 1 2\\n\") == \"2 3 4 1\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6 2\\n3 4 5 6 1 2') == '5 6 1 2 3 4\\n'\nassert solution('4 2\\n3 4 1 2') == '2 3 4 1\\n'\n"
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output() for input_, output_ in zip(sample_inputs, sample_outputs)\n\nn = int(input())\nk = int(input())"
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"The output {solution(input())} does not match the expected output {expected_output}\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1374 2\\n210 1\") == \"7413\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Solution did not return expected output.\\nExpected: {output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input(\"Enter n and k: \")) == \"Enter n and k: 1374 2\"\nassert solution(input(\"Enter n and k: \")) == \"Enter n and k: 210 1\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1374 2\\n210 1\") == \"7413\\n201\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1374 2\") == \"7413\"\nassert solution(\"210 1\") == \"201\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2\n\nsample_input_1 = \"1374 2\"\nsample_input_2 = \"210 1\"\nexpected_output_1 = \"7413\"\nexpected_output_2 = \"201\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Expected: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, \"Expected: {}\\nGot: {}\".format(output, solution(input()))"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 1\\n1 0\") == \"0.666666666666667\"\nassert solution(\"3\\n0 0\\n1 1\\n2 0\") == \"0.733333333333333\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 0.666666666666667\n\nprint(\"Sample Output 1:\", 0.666666666666667)\n\nassert solution() == 0.733333333333333\n\nprint(\"Sample Output 2:\", 0.733333333333333)"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"0.666666666666667\\n\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"0.733333333333333\\n\"\n"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"0.666666666666667\"\nassert solution() == \"0.733333333333333\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 1\\n1 0\") == \"0.666666666666667\"\nassert solution(\"3\\n0 0\\n1 1\\n2 0\") == \"0.733333333333333\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1\\n0 0\\n0 1\\n1 1\\n1 0\\n') == '0.666666666666667'\nassert solution('2\\n0 0\\n1 1\\n2 0\\n') == '0.733333333333333'"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input1) == 0.666666666666667\nassert solution(input2) == 0.733333333333333"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 1\\n1 0\") == \"0.666666666666667\"\nassert solution(\"3\\n0 0\\n1 1\\n2 0\") == \"0.733333333333333\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0.666666666666667\\n\"\nassert solution(stdin) == \"0.733333333333333\\n\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == output, f\"Test case {i + 1} failed. Expected output: {output}, got: {solution(input)}\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Expected: {output()}\\nGot: {solution(input())}\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Output the minimum total cost (in dollars) to provide a wireless network that covers every corridor.\\n\", \"Test failed\"\nassert solution(stdin2) == \"Output the minimum total cost (in dollars) to provide a wireless network that covers every corridor.\\n\", \"Test failed\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 9\nprint(solution) # output: 9"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n2 3 4\n10 1 3\n0 1 20\n''') == '9'\nassert solution('''\n2 3 100\n10 1 10\n10 1 10\n''') == '21'"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 9, \"Incorrect solution\"\nprint(\"Correct solution\")"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('sample_input1.txt', 'r')) == \"9\\n\"\nassert solution(open('sample_input2.txt', 'r')) == \"21\\n\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"TODO\" # Add your solution here\n"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"9\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"9\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3 4\\n10 1 3\\n0 1 20\") == \"9\"\nassert solution(\"2 3 100\\n10 1 10\\n10 1 10\") == \"21\"\n"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\\n\") == 2\nassert solution(\"9 2 7 -\\n1 1 1 2\\n\") == 4"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 2, \"Your solution is incorrect\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('8 2 7 -\\n1 1 1 2\\n') == '2'\nassert solution('9 2 7 -\\n1 1 1 2\\n') == '4'"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\\n\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\\n\") == \"4\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\\n\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\\n\") == \"4\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\\n\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\\n\") == \"4\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\\n\") == \"2\\n\"\nassert solution(\"9 2 7 -\\n1 1 1 2\\n\") == \"4\\n\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Solution: {solution(stdin)}, Expected: {expected}\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\\n\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\\n\") == \"4\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\") == \"3\\n4\"\nassert solution(\"4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\") == \"2\\n3\\n2\\n1\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\\n4\\n3\\n2\\n1\", \"Test 1\"\nassert solution() == \"2\\n3\\n2\\n1\", \"Test 2\"\nassert solution() == \"1\", \"Test 3\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 3\nprint(\"All tests passed successfully\")"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\") == \"3\\n4\\n3\\n2\\n1\"\nassert solution(\"4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\") == \"2\\n3\\n2\\n1\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\") == \"3\\n4\"\nassert solution(\"4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\") == \"2\\n3\\n2\\n1\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(r'4 3\\n1 2 5\\n2 3 5\\n3 4 5') == '3\\n4\\n3\\n2\\n1'\nassert solution(r'4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8') == '2\\n3\\n2\\n1'"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\") == \"3\\n4\"\nassert solution(\"4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\") == \"2\\n3\\n2\\n1\"\nassert solution(\"1 1000000000 0\\n2 0 1000000000\\n1 1 1000000000\\n0 1 1000000000\") == \"1000000000\"\n"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\") == '3\\n4\\n3\\n2\\n1'"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"24\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\\n1\\n\"  # Example 1\nassert solution(stdin) == \"3\\n2 1\\n\"  # Example 2"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n2 1\") == \"6\"\nassert solution(\"3 4\\n2 3 1\") == \"24\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n2 1\") == \"6\\n\"\nassert solution(\"3 4\\n2 3 1\") == \"24\\n\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n2 1\") == \"6\\n\"\nassert solution(\"3 4\\n2 3 1\") == \"24\\n\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n2 1\") == 6\nassert solution(\"3 4\\n2 3 1\") == 24"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"24\"\n"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == \"Invalid Input\"  # Test case for invalid input"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 3\\n2 1') == '6'\nassert solution('3 4\\n2 3 1') == '24'\n\nfrom typing import List"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == \"2\"\nassert solution(sample_input_2) == \"1\"\n\nfrom typing import List"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 2\") == 2\nassert solution(\"5\\n3 4 5 1 2\") == 1"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Solution does not match the expected output. \\n\\nSample Input 1: {stdin}\\nExpected Output 1: {expected}\"\nassert solution(stdin) == expected, f\"Solution does not match the expected output. \\n\\nSample Input 2: {stdin}\\nExpected Output 2: {expected}\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed for solution({stdin}), expected output: {expected_output}, got: {solution(stdin)}\"\n"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '2', \"The expected output is '2', but got: {}\".format(solution(stdin))"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\"\nassert solution(\"5\\n3 4 5 1 2\\n\") == \"1\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 2\") == 2\nassert solution(\"5\\n3 4 5 1 2\") == 1"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"5\\n3 4 5 1 2\\n\") == \"1\\n\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''2\n1 2\n''') == '2\\n'\n\nassert solution('''5\n3 4 5 1 2\n''') == '1\\n'"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 2, \"Test case 1 failed.\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '9\\n'\n"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}\\nGot: {solution(stdin)}\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 9"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == '9', 'Incorrect output'\nassert solution(sample_input2) == '4', 'Incorrect output'"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\n1 4 10\\n5 2 6\\n11 1 3') == 9\nassert solution('3 3\\n1 3 1\\n2 1 2\\n1 1 1') == 4"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"9\\n\", \"Your implementation is incorrect. Please update the function signature and return type.\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0\\n\", \"Expected output: 0\\nGot: {}\\n\".format(solution())"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '0'\n"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == '9'\nassert solution(sample_input_2) == '4'"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 9\n"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"6\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == '3\\n'"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 1 3 4\\n1 2\\n1 3\\n3 4\\n\") == \"6\\n\"\nassert solution(\"4\\n3 4 5 6\\n1 2\\n1 3\\n2 4\\n\") == \"3\\n\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == '6'\nassert solution(sample_input2) == '3'"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(str(input())) == \"6\", \"Sample Output 1\"\nassert solution(str(input())) == \"3\", \"Sample Output 2\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n2 1 3 4\\n1 2\\n1 3\\n3 4\\n') == '6'\nassert solution('4\\n3 4 5 6\\n1 2\\n1 3\\n2 4\\n') == '3'"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n4\n2 1 3 4\n1 2\n1 3\n3 4\n''') == '6\\n'\n\nassert solution('''\n4\n3 4 5 6\n1 2\n1 3\n2 4\n''') == '3\\n'"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == \"6\\n\", \"Sample Input 1\"\nassert solution(sample_input2) == \"3\\n\", \"Sample Input 2\"\n\nfrom typing import List"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r').read()) == \"6\\n\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n2\n1 10\n5 8\n''') == '18\\n8\\n'\n\nassert solution('''\n3\n17 144\n121 121\n89 98\n''') == '265\\n25\\n10\\n'"
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 10\\n5 8\") == \"18\\n8\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\") == \"265\\n25\\n10\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Your solution does not match the expected output. \\n\\nInput: \\n{stdin}\\n\\nExpected output: \\n{expected}\\n\\nActual output: \\n{solution(stdin)}\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 10\\n5 8\\n') == '18\\n8\\n'\nassert solution('17 144\\n121 121\\n89 98\\n') == '265\\n25\\n10\\n'"
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 10\\n5 8\\n\") == \"18\\n8\\n\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\\n\") == \"265\\n25\\n10\\n\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 10\\n5 8\\n\") == \"18\\n8\\n\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\\n\") == \"265\\n25\\n10\\n\"\n"
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 'Solution Output', 'The solution function should return the expected output.'\nprint('All test cases passed.')"
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == \"18\\n8\"\nassert solution(sample_input_2) == \"265\\n25\\n10\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Test failed: {solution(input())}!= {output()}\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Q 1\\n1 10\\n5 8\\nQ 2\\n17 144\\n121 121\\n89 98\\n\") == \"18\\n8\\n\"\nassert solution(\"Q 3\\n17 144\\n121 121\\n89 98\\n\") == \"265\\n25\\n10\\n\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input) == output\nassert abs(solution(input) - output) < 10**-6"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\\n\") == \"0.50000000\\n\"\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\\n\") == \"12.50000000\\n\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\") == 0.5\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\") == 12.5\n"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 0.50000000, \"Expected output is 0.50000000, but got {}\".format(solution(input()))"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\\n\") == 0.50000000\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\\n\") == 12.50000000"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == 0.5\nassert solution(open('input.txt', 'r')) == 12.5"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(input())) == \"0.50000000\\n\", \"Test case 1 failed.\"\nassert solution(str(input())) == \"12.50000000\\n\", \"Test case 2 failed.\"\nassert solution(str(input())) == \"0.00000000\\n\", \"Test case 3 failed.\"\nassert solution(str(input())) == \"0.00000000\\n\", \"Test case 4 failed.\"\nassert solution(str(input())) == \"0.00000000\\n\", \"Test case 5 failed.\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '0.50000000', \"Test 1 failed\"\nassert solution(stdin) == '12.50000000', \"Test 2 failed\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\") == \"0.50000000\"\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\") == \"12.50000000\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\") == \"2\\n\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\") == \"1\\n\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\") == \"2\\n\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\") == \"1\\n\"\n"
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\\n\") == \"2\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\\n\") == \"1\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\") == 2\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\") == 1"
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\") == \"2\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\") == \"1\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\\n\") == \"2\\n\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\\n\") == \"1\\n\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\\n\") == \"2\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\\n\") == \"1\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 1 3\\n0 1\\n1 2\\n2 3\\n1') == '2'\nassert solution('4 0 4\\n0 2\\n0 1\\n2 1\\n2 3') == '1'"
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\") == \"2\\n\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\") == \"1\\n\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\\n\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 1\") == \"6\"\nassert solution(\"2 2 2\") == \"30\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='1 2 1') == '6'\nassert solution(stdin='2 2 2') == '30'"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Test failed. Expected output: {expected}, got: {solution(input())}\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 1\") == \"6\"\nassert solution(\"2 2 2\") == \"30\"\n\nfrom sympy import ModularInteger"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 1\") == \"6\"\nassert solution(\"2 2 2\") == \"30\"\n"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 2 1') == '6\\n', \"The output is incorrect\"\nassert solution('2 2 2') == '30\\n', \"The output is incorrect\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 1\") == \"6\"\nassert solution(\"2 2 2\") == \"30\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"1 2 1\") == 6\nassert solution(stdin=\"2 2 2\") == 30"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test {test_num} failed: Expected output: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"sample_input1.txt\", \"r\")) == \"2021 2020 2020\"\nassert solution(open(\"sample_input2.txt\", \"r\")) == \"impossible\"\n\nfrom typing import List"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2020 2020 2020\") == \"2021 2020 2020\"\nassert solution(\"2\\n1 9999999\") == \"impossible\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    '''\n    3\n    2020 2020 2020\n    '''\n) == '''\n    2021 2020 2020\n    '''\n\nassert solution(\n    '''\n    2\n    1 9999999\n    '''\n) == '''\n    impossible\n    '''"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input1) == output1, \"Error in sample input 1\"\nassert solution(input2) == output2, \"Error in sample input 2\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n2020 2020 2020') == '2021 2020 2020'\nassert solution('2\\n1 9999999') == 'impossible'"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2020 2020 2020\") == \"2021 2020 2020\"\nassert solution(\"2\\n1 9999999\") == \"impossible\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Incorrect output. Expected '{output()}', got '{solution(input())}'\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2020 2020 2020\") == \"2021 2020 2020\"\nassert solution(\"2\\n1 9999999\") == \"impossible\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2020 2020 2020\") == \"2021 2020 2020\\n\"\nassert solution(\"2\\n1 9999999\") == \"impossible\\n\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Test case failed: {solution(input())}!= {output()}\"\n"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '2', \"The output should be 2.\"\n"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Input:\\n{input()}\\nOutput:\\n{output}\"\n"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"30 70\") == \"11\", \"Solution 1 incorrect\"\nassert solution(\"66 69\") == \"2\", \"Solution 2 incorrect\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"30 70\") == \"11\"\nassert solution(\"66 69\") == \"2\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(30, 70) == 11, \"The expected output is 11, but got: {}\".format(solution(30, 70))\nassert solution(66, 69) == 2, \"The expected output is 2, but got: {}\".format(solution(66, 69))"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(30, 70) == 11, \"Expected 11, got: {}\".format(solution(30, 70))\nassert solution(66, 69) == 2, \"Expected 2, got: {}\".format(solution(66, 69))"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"30 70\") == \"11\"\nassert solution(\"66 69\") == \"2\"\n\nfrom typing import List"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"30 70\") == \"11\", \"Sample Input 1\"\nassert solution(\"66 69\") == \"2\", \"Sample Input 2\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"30 70\") == \"11\"\nassert solution(\"66 69\") == \"2\""
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\npass\\n'\n"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"4\\n\"\n"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 0\\n>@\\n>~\") == \"2\\n\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\") == \"4\\n\""
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 0\\n>@\\n>~\") == \"2\\n\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\") == \"4\\n\""
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 0\\n>@\\n>~\") == \"2\\n\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#\\n>>>>~\") == \"4\\n\""
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 0\\n>@\\n>~\") == \"2\\n\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\") == \"4\\n\""
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    2 2 0\n    >\n    ~\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    3 5 1\n    >@<\n    ~#~<\n    \"\"\"\n) == \"4\\n\""
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 2 0\\n>@\\n>~') == '2'\nassert solution('3 5 1\\n>>@<<\\n>~#~<\\n>>>>~') == '4'\n"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 2 0\\n>@\\n>~') == '2'\nassert solution('3 5 1\\n>>@<<\\n>~#\\n>>>>~') == '4'"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 0\\n>@\\n>~\") == \"2\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\") == \"4\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\"\n"
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('143175=120') == '14+31+75=120'\nassert solution('5025=30') == '5+025=30'"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Test failed for input {input()}, expected output {output()}, got {solution(input())}\""
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Your solution is not correct. Expected: {expected}, Received: {solution(stdin)}\""
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(stdin)}\"\n"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == output, f\"Input: {stdin}\\nOutput: {output}\\n\\nInput should be:\\n{output}\"\n"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n\") == \"1 2\"\nassert solution(\"8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n1\\n\") == \"-1\"\n\nfrom typing import List"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, \"Test failed\"\nfor input, output in zip(sample_input, sample_output):\n    print(f\"Input: {input}\\nOutput: {output}\\n\")"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '''1 2'''\nassert solution(stdin) == '''-1'''"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\") == \"1 2\"\nassert solution(\"8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n1\") == \"-1\""
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('8\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4') == '1 2'\nassert solution('8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n1') == '-1'"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1 2\"\nassert solution(stdin) == \"1 2\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1101) == 1\nassert solution(1) == 0"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    '''1101\n1100\n1111\n1111\n1100\n1101\n1111\n1110\n1110\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1101') == '1', 'Test case 1 failed'\nassert solution('1') == '0', 'Test case 2 failed'"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1101') == '1'\nassert solution('1') == '0'"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1101\") == \"1\"\nassert solution(\"1\") == \"0\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1101') == '1'\nassert solution('1') == '0'"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1101') == '1', 'Test case 1 failed'\nassert solution('1') == '0', 'Test case 2 failed'"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1101') == '1\\n'\nassert solution('1') == '0\\n'"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1101') == '1'\nassert solution('1') == '0'"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == ['1', '0', '2']"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1\\n2 3\\n3 1\") == \"1\\n0\\n2\\n\\n3\\n1\\n2\\n3\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input1) == output1, \"Incorrect output 1\"\nassert solution(input2) == output2, \"Incorrect output 2\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '''1\n0\n2\n'''\n"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"\"\"\n1\n0\n2\n\"\"\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1\") == \"1\\n0\\n2\\n\\n3\\n3\\n3\\n1\\n\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Expected output '{expected}', but got '{solution(stdin)}'.\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1') == '1\\n0\\n2\\n'\nassert solution('2 1\\n4 1 6 3 6\\n7 3 4 2 6 5 6 1\\n1 2') == '3\\n'"
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 1\\n1 2 3 4\\n\") == \"4.000000\"\nassert solution(\"4 2\\n2 4 3 4\\n\") == \"3.666666\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 1\\n1 2 3 4\\n\") == \"4.000000\"\nassert solution(\"4 2\\n2 4 3 4\\n\") == \"3.666666\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 1\\n1 2 3 4\") == \"4.000000\"\nassert solution(\"4 2\\n2 4 3 4\") == \"3.666666\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"4.000000\\n\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 1\\n1 2 3 4\\n\") == \"4.000000\"\nassert solution(\"4 2\\n2 4 3 4\\n\") == \"3.666666\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 1\\n1 2 3 4\") == \"4.000000\"\nassert solution(\"4 2\\n2 4 3 4\") == \"3.666666\"\n\nfrom typing import List"
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '4.000000\\n'"
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}, solution:\\n{solution(input())}\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"4.000000\"\nassert solution() == \"3.666666\""
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt').read()) == '0.750'\nprint(\"All tests passed!\")"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"0.750\", \"Expected output: 0.750, but got: {}\".format(solution(input()))"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0.750\""
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\") == \"0.750\"\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\") == \"0.625\""
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\") == \"0.750\"\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\") == \"0.625\"\n"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test case failed\"\nfor i in range(1, 6):\n    assert round(solution(input()), 3) == round(output(), 3), f\"Test case {i} failed\""
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\") == 0.75\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\") == 0.625"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.0 0.0\n0.0 2.0\n\"\"\") == \"0.75\"\n\nassert solution(\"\"\"\n2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n\"\"\") == \"0.62\""
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\") == \"0.750\\n\", \"Example 1: The artwork can be made perfectly balanced by separating the sections into equal sizes with equal heights. However, the difference between the maximum and minimum heights of sand in the sections is 0.75 units.\"\n\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\") == \"0.625\\n\", \"Example 2: The artwork can be made perfectly balanced by separating the sections into equal sizes with equal heights. However, the difference between the maximum and minimum heights of sand in the sections is 0.625 units.\""
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\") == 0.75\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\") == 0.625"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == \"2\"\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == \"37\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    3 3\n    1 2 4\n    0 3 6\n    4 0 3\n    \"\"\"\n) == 2\n\nassert solution(\n    \"\"\"\n    3 4\n    2 3 0 7\n    0 0 2 1\n    0 0 3 0\n    \"\"\"\n) == 37"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == 2, \"Expected 2, got {}\".format(solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\"))\n\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == 37, \"Expected 37, got {}\".format(solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\"))"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == \"2\", \"Expected output 1: 2, but got: \" + solution(sample_input1)\nassert solution(sample_input2) == \"37\", \"Expected output 2: 37, but got: \" + solution(sample_input2)"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\n1 2 4\\n0 3 6\\n4 0 3') == '2'\nassert solution('3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0') == '37'"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"37\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == \"2\\n\"\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == \"37\\n\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == \"2\\n\"\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == \"37\\n\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\\n\", \"The output should be '2'\\n\"\nassert solution(input()) == \"37\\n\", \"The output should be '37'\\n\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == \"2\"\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == \"37\"\n"
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == ['10', '14', '18']\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\") == ['1', '4', '9', '16']"
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == \"10\\n14\\n18\\n\"\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\") == \"1\\n4\\n9\\n16\\n\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == \"10\\n14\\n18\\n\"\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\") == \"1\\n4\\n9\\n16\\n\"\n"
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Output M lines, the sums calculated by Luka, in order in which he calculated them.\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == \"10\\n14\\n18\\n\"\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\") == \"1\\n4\\n9\\n16\\n\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == [\"10\", \"14\", \"18\"]\nassert solution(open(\"input2.txt\", \"r\")) == [\"1\", \"4\", \"9\", \"16\"]"
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == \"10\\n14\\n18\"\nassert solution(sample_input2) == \"1\\n4\\n9\\n16\"\n\nsample_input1 = \"\"\"\n4 3\n1234\n1 4\n1 4\n1 4\n\"\"\"\n\nsample_input2 = \"\"\"\n4 4\n1234\n1 1\n1 2\n1 3\n1 4\n\"\"\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == \"10\\n14\\n18\"\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\") == \"1\\n4\\n9\\n16\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\n"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\\n\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Test failed: expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == \"2\"\n"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2 3\\n1 3\\n2 3\\n3 4\\n\") == \"2\"\nassert solution(\"5 2 4\\n1 3\\n3 4\\n2 4\\n4 5\\n\") == \"1\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 2 3\\n1 3\\n2 3\\n3 4\\n4 5\\n2 4\\n5 4\\n1 3\\n3 4\\n4 5\\n2 4\\n5 4\\n1 3\\n3 4\\n4 5\\n2 4\\n5 4\\n1 3\\n3 4\\n4 5\\n2 4\\n5 4\\n1 3\\n3 4\\n4 5\\n2 4\\n5 4\\n1 3\\n3 4\\n4 5\\n2 4\\n5 4\\n1 3\\n3 4\\n4 5\\n2 4\\n5 4\\n1 3\\n3 4\\n4 5\\n2 4\\n5 4\\n1 3\\n3 4\\n4 5\\n2 4\\n5 4\\n1 3\\n3 4\\n4 5\\n2 4\\n5 4\\n1 3\\n3 4\\n4 5\\n2 4\\n5 4\\n1 3\\n3 4\\n4 5\\n2 4\\n5 4\\n1 3\\n3 4\\n4 5\\n2 4\\n5 4\\n1 3\\n3 4\\n4 5\\n2 4\\n5 4\\n1 3\\n3 4\\n4 5\\n2 4\\n5 4\\n1 3\\n3 4\\n4 5\\n2 4\\n5 4\\n1 3\\n3 4\\n4 5\\n2 4\\n5 4\\n1 3\\n3 4\\n4 5\\n2 4\\n5 4\\n1 3\\n3 4\\n4 5\\n2 4\\n5 4\\n1 3\\n3 4\\n4 5\\n2 4\\n5 4\\n1 3\\n3 4\\n4 5\\n2 4\\n5 4\\n1 3\\n3 4\\n4 5\\n2 4\\n5 4\\n1 3\\n3 4\\n4 5\\n2 4\\n5 4\\n1 3\\n3 4\\n4 5\\n2 4\\n5 4\\n1 3\\n3 4\\n4 5\\n2 4\\n5 4\\n1 3\\n3 4\\n4 5\\n2 4\\n5 4\\n1 3\\n3 4\\n4 5\\n2 4\\n5 4\\n1 3\\n3 4\\n4 5\\n2 4\\n5 4\\n1 3\\n3 4\\n4 5\\n2 4\\n5 4\\n1 3\\n3 4\\n4 5\\n2 4\\n5 4\\n1 3\\n3 4\\n4 5\\n2 4\\n5 4\\n1 3\\n3 4\\n4 5\\n2 4\\n5 4\\n1 3\\n3 4\\n4 5\\n2 4\\n5 4\\n1 3\\n3 4\\n4 5\\n2 4\\n5 4\\n1 3\\n3 4\\n4 5\\n2 4\\n5 4\\n1 3\\n3 4\\n4 5\\n2 4\\n5 4\\n1 3\\n3 4\\n4 5\\n2 4\\n5 4\\n1 3\\n3 4\\n4 5\\n2 4\\n5 4\\n1 3\\n3 4\\n4 5\\n2 4\\n5 4\\n1 3\\n3 4\\n4 5\\n2 4\\n5 4\\n1 3\\n3 4\\n4"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '2\\n'"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n4 2 3\\n1 3\\n2 3\\n3 4\\nSample Output 1: 2\\n\\nSample Input 2: 5 2 4\\n1 3\\n3 4\\n2 4\\n4 5\\nSample Output 2: 1\\n\") == \"2\\n\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input1) == output1, \"Expected output: {}, got: {}\".format(output1, solution(input1))\nassert solution(input2) == output2, \"Expected output: {}, got: {}\".format(output2, solution(input2))\n\ninput1 = \"\"\"\n4 2 3\n1 3\n2 3\n3 4\n\"\"\"\n\noutput1 = \"2\"\ninput2 = \"\"\"\n5 2 4\n1 3\n3 4\n2 4\n4 5\n\"\"\"\n\noutput2 = \"1\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0') == 'no'\nassert solution('2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1') == 'no'\n\nassert solution('1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0') == 'yes'\nassert solution('2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1') == 'yes'"
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"no\"\nassert solution(stdin) == \"no\"\nassert solution(stdin) == \"no\"\nassert solution(stdin) == \"no\"\nassert solution(stdin) == \"no\"\nassert solution(stdin) == \"yes\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\\n\") == \"no\\n\"\n\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\\n\") == \"no\\n\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\") == \"no\\n\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\") == \"no\\n\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\\n2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\\n\") == \"no\"\n\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\\n\") == \"no\"\n\nsolution = \"\"\"\nfrom typing import List"
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\\n\") == \"no\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\\n\") == \"no\"\n"
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"1\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\"\"\") == \"no\"\n\nassert solution(\"\"\"2\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\"\"\") == \"no\"\n\nassert solution(\"\"\"\n1\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\n\"\"\") == \"no\"\n\nassert solution(\"\"\"\n1\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\n\"\"\") == \"yes\"\n\nassert solution(\"\"\"\n2\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\n\"\"\") == \"yes\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"yes\"\n"
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\") == \"no\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\") == \"no\"\nassert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\") == \"yes\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\") == \"yes\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"yes\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='3 3\\n1 2\\n2 3\\n1 3\\n') == 'YES\\n1 3\\n2 1\\n3 2\\n'\nassert solution(stdin='4 3\\n1 2\\n1 3\\n1 4\\n') == 'NO\\ndef solution(stdin: str) -> str:\\n    pass'\n"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(None) == \"NO\"\nassert solution(\"\") == \"NO\"\nassert solution(\"Input\") == \"NO\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 2\\n2 3\\n1 3\\n\") == \"YES\\n1 3\\n2 1\\n3 2\\n\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"NO\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected {sample_output}, got {solution(sample_input)}\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n1 2\\n2 3\\n1 3\\n\") == \"YES\\n1 3\\n2 1\\n3 2\\n\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"NO\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Solution does not match expected output. Expected: {expected}, Received: {solution(stdin)}\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n1 2\\n2 3\\n1 3\") == \"YES\\n1 3\\n2 1\\n3 2\\n\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\") == \"NO\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"YES\\n1 3\\n2 1\\n3 2\\n\", \"Test 1 failed\"\n\nassert solution() == \"NO\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test 2 failed\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"YES\\n1 3\\n2 1\\n3 2\"\nassert solution() == \"NO\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 2\\n2 3\\n1 3\\n\") == \"YES\\n1 3\\n2 1\\n3 2\\n\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"NO\"\n"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(r'''\n3 3\n0 > 1\n1 = 2\n0 = 2\n''') == 'consistent'\n\nassert solution(r'''\n5 5\n0 = 1\n1 = 2\n3 = 4\n0 > 3\n1 > 4\n''') == 'consistent'\n\nassert solution(r'''\n3 3\n0 > 1\n1 = 2\n0 = 2\n3 > 1\n1 > 2\n0 < 3\n2 = 3\n''') == 'inconsistent'\n\nassert solution(r'''\n5 5\n0 = 1\n1 = 2\n3 = 4\n0 > 3\n1 > 4\n3 > 1\n1 > 2\n0 < 3\n2 = 3\n4 > 3\n1 > 4\n''') == 'inconsistent'"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution, \"Solution not defined\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"consistent\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'consistent'"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=sys.stdin.readline()) == \"consistent\"\n\nSolution:\n"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n0 > 1\\n1 = 2\\n0 = 2\") == \"inconsistent\"\nassert solution(\"5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\") == \"consistent\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    3 3\n    0 > 1\n    1 = 2\n    0 = 2\n    ''') == 'inconsistent'\n\nassert solution('''\n    5 5\n    0 = 1\n    1 = 2\n    3 = 4\n    0 > 3\n    1 > 4\n    ''') == 'consistent'"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(read_input()) == 'consistent'"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == 'consistent'\nassert solution(sample_input2) == 'consistent'"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Error: {solution(input())}!= {expected_output}\"\n"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_string) == output_string, f\"Test case {test_case_num} failed. Expected output: {output_string}, but got: {solution(input_string)}\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1\") == 1.57079633\nassert solution(\"4\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0\") == 41938.65135885"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == '1.57079633\\n', \"Test case 1 failed.\"\nassert solution(open('input.txt', 'r')) == '41938.65135885\\n', \"Test case 2 failed.\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1\") == \"1.57079633\\n41938.65135885\"\nassert solution(\"4\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0\") == \"41938.65135885\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1\") == \"1.57079633\"\nassert solution(\"4\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0\") == \"41938.65135885\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 1.57079633, \"Incorrect answer\"\nassert solution() == 41938.65135885, \"Incorrect answer\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == '1.57079633\\n41938.65135885'"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 1.57079633, \"Incorrect output: 1.57079633\"\nassert solution() == 41938.65135885, \"Incorrect output: 41938.65135885\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1\") == 1.57079633\nassert solution(\"4\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0\") == 41938.65135885"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11\\nsabcabcfabc\") == \"3\"\nassert solution(\"18\\ntrutrutiktiktappop\") == \"4\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11\\nsabcabcfabc\") == \"3\"\nassert solution(\"18\\ntrutrutiktiktappop\") == \"4\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"12\"  # expected output: 3\nassert solution(input()) == \"16\"  # expected output: 4\n\nfrom typing import List"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('11\\nsabcabcfabc') == '3'\nassert solution('18\\ntrutrutiktiktappop') == '4'"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11\\nsabcabcfabc\\n\") == \"3\"\nassert solution(\"18\\ntrutrutiktiktappop\\n\") == \"4\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11\\nsabcabcfabc\") == \"3\"\nassert solution(\"18\\ntrutrutiktiktappop\") == \"4\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3\"\nassert solution() == \"4\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11sabcabcfabc\") == \"3\"\nassert solution(\"18trutrutiktiktappop\") == \"4\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='11\\nsabcabcfabc') == 3\nassert solution(stdin='18\\ntrutrutiktiktappop') == 4"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3\\n\", \"Expected output: 3\\n, but got: {}\"\nassert solution(stdin) == \"4\\n\", \"Expected output: 4\\n, but got: {}\"\nassert solution(stdin) == \"0\\n\", \"Expected output: 0\\n, but got: {}\"\n"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n2 3 1\\n3 1 2') == '2\\n', \"Expected: '2\\n', but got: '{}'\".format(solution('3\\n2 3 1\\n3 1 2'))\nassert solution('6\\n5 1 6 3 2 4\\n4 6 5 1 3 2') == '5\\n', \"Expected: '5\\n', but got: '{}'\".format(solution('6\\n5 1 6 3 2 4\\n4 6 5 1 3 2'))"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n2 3 1\\n3 1 2') == 2\nassert solution('6\\n5 1 6 3 2 4\\n4 6 5 1 3 2') == 5"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n2 3 1\\n3 1 2\\n6\\n5 1 6 3 2 4\\n4 6 5 1 3 2') == '2'\nassert solution('6\\n5 1 6 3 2 4\\n4 6 5 1 3 2') == '5'"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2\\n'"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: solution({input()})!= expected_output({expected_output})\"\n"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\nr'''\n3\n2 3 1\n3 1 2\n'''\n) == '2\\n'"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 2, 3) == 2\nassert solution(6, 5, 1, 6, 3, 2, 4) == 5"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 3 1\\n3 1 2\") == \"2\\n\"\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\") == \"5\\n\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}, but got {solution(input())}\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\\n\"\nassert solution(stdin) == \"9\\n\"\n"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n0 10 20\\n0 10\\n\") == \"4\\n\"\nassert solution(\"6 1\\n0 10 20 26 40 50\\n0 40\\n\") == \"9\\n\"\n"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 1\\n0 10 20\\n0 10') == '4'\nassert solution('6 1\\n0 10 20 26 40 50\\n0 40') == '9'"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 1\n0 10 20\n0 10\n\"\"\") == \"4\"\nassert solution(\"\"\"\n6 1\n0 10 20 26 40 50\n0 40\n\"\"\") == \"9\"\n"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 1\\n0 10 20\\n0 10\\n') == '4'\nassert solution('6 1\\n0 10 20 26 40 50\\n0 40\\n') == '9'"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 'your output here'\n"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 1\n0 10 20\n0 10\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n6 1\n0 10 20 26 40 50\n0 40\n\"\"\") == \"9\""
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n0 10 20\\n0 10\") == \"4\"\nassert solution(\"6 1\\n0 10 20 26 40 50\\n0 40\") == \"9\""
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == \"4\", \"Your solution is incorrect\"\nassert solution(sample_input_2) == \"9\", \"Your solution is incorrect\""
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n0 10 20\\n0 10\\n6 1\\n0 10 20 26 40 50\\n0 40\\n\") == \"4\\n\"\nassert solution(\"3 1\\n0 10 20\\n0 10\\n6 1\\n0 10 20 26 40 50\\n0 40\\n\") == \"4\\n\"\nassert solution(\"3 1\\n0 10 20\\n0 10\\n6 1\\n0 10 20 26 40 50\\n0 40\\n\") == \"4\\n\"\nassert solution(\"3 1\\n0 10 20\\n0 10\\n6 1\\n0 10 20 26 40 50\\n0 40\\n\") == \"4\\n\"\nassert solution(\"3 1\\n0 10 20\\n0 10\\n6 1\\n0 10 20 26 40 50\\n0 40\\n\") == \"4\\n\"\nassert solution(\"3 1\\n0 10 20\\n0 10\\n6 1\\n0 10 20 26 40 50\\n0 40\\n\") == \"4\\n\"\nassert solution(\"3 1\\n0 10 20\\n0 10\\n6 1\\n0 10 20 26 40 50\\n0 40\\n\") == \"4\\n\"\nassert solution(\"3 1\\n0 10 20\\n0 10\\n6 1\\n0 10 20 26 40 50\\n0 40\\n\") == \"4\\n\"\nassert solution(\"3 1\\n0 10 20\\n0 10\\n6 1\\n0 10 20 26 40 50\\n0 40\\n\") == \"4\\n\"\nassert solution(\"3 1\\n0 10 20\\n0 10\\n6 1\\n0 10 20 26 40 50\\n0 40\\n\") == \"4\\n\"\nassert solution(\"3 1\\n0 10 20\\n0 10\\n6 1\\n0 10 20 26 40 50\\n0 40\\n\") == \"4\\n\"\nassert solution(\"3 1\\n0 10 20\\n0 10\\n6 1\\n0 10 20 26 40 50\\n0 40\\n\") == \"4\\n\"\nassert solution(\"3 1\\n0 10 20\\n0 10\\n6 1\\n0 10 20 26 40 50\\n0 40\\n\") == \"4\\n\"\nassert solution(\"3 1\\n0 10 20\\n0 10\\n6 1\\n0 10 20 26 40 50\\n0 40\\n\") == \"4\\n\"\nassert solution(\"3 1\\n0 10 20\\n0 10\\n6 1\\n0 10 20 26 40 50\\n0 40\\n\") == \"4\\n\"\nassert solution(\"3 1\\n0 10 20\\n0 10\\n6 1\\n0 10 20 26 40 50\\n0 40\\n\") == \"4\\n\"\nassert solution(\"3 1\\n0 10 20\\n0 10\\n6 1\\n0 10 20 26 40 50\\n0 40\\n\") == \"4\\n\"\nassert solution(\"3 1"
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\") == \"equal\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\\n\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\\n\") == \"equal\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\") == \"equal\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\") == \"not equal\\n\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\") == \"equal\\n\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\\nSample Output 1: not equal\\n\\nSample Input 2:sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\\nSample Output 2:equal\\n\") == \"not equal\\nnot equal\\n\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\") == \"not equal\\n\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\") == \"equal\\n\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\") == \"equal\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\") == \"not equal\"\nassert solution(\"concat(concat([3,2,1],[4,5,6]),concat([3,4,5],[6,7,8]))\") == \"not equal\"\nassert solution(\"concat(sorted([1,2,3,4,5,6]),concat([3,4,5],[6,7,8]))\") == \"equal\"\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\") == \"not equal\\n\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\") == \"equal\\n\"\nassert solution(\"def solution(stdin: str) -> str:\\n\\tpass\\n\") == \"not equal\\n\"\n"
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\") == \"equal\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"Oh no\"\nassert solution(\"1 3\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"1\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 2\\n3 2\\n1 2 1 2\\n2 3 1 2') == 'Oh no'\nassert solution('1 3\\n3 2\\n1 2 1 2\\n2 3 1 2') == '1'"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == solution(sample_output)"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n3 2\\n1 2 1 2\\n2 3 1 2\\n\") == \"Oh no\"\nassert solution(\"1 3\\n3 2\\n1 2 1 2\\n2 3 1 2\\n\") == \"1\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input1) == \"Oh no\", \"Your solution should return 'Oh no'\"\nassert solution(input2) == \"1\", \"Your solution should return '1'\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"Oh no\"\nassert solution(\"1 3\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"1\"\n"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''1 2\n3 2\n1 2 1 2\n2 3 1 2''') == 'Oh no'\n\nassert solution('''1 3\n3 2\n1 2 1 2\n2 3 1 2''') == '1'"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"Oh no\\n\", \"Expected output: Oh no\\n, but got: {}\".format(solution())"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == 'Oh no'\n"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 2\\n3 2\\n1 2 1 2\\n2 3 1 2') == 'Oh no'\nassert solution('1 3\\n3 2\\n1 2 1 2\\n2 3 1 2') == '1'"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2') == 3\nassert solution('5 5\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1') == 'impossible'\n"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    4 4\n    1 2 2\n    2 3 1\n    3 4 1\n    4 1 2\n    \"\"\"\n) == 3\n\nassert solution(\n    \"\"\"\n    5 5\n    1 2 1\n    2 3 1\n    2 4 1\n    2 5 1\n    4 5 1\n    \"\"\"\n) == \"impossible\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == \"3\\n\"\nassert solution(sample_input2) == \"impossible\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == '3'"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n4 4\n1 2 2\n2 3 1\n3 4 1\n4 1 2\n''') == '3'\nassert solution('''\n5 5\n1 2 1\n2 3 1\n2 4 1\n2 5 1\n4 5 1\n''') == 'impossible'"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\\n5 5\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\") == \"3\"\nassert solution(\"1 2 2\\n1 2 1\\n1 2 1\\n1 2 1\\n1 2 1\\n1 2 1\") == \"impossible\"\n"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == '3'\nassert solution(sample_input2) == 'impossible'"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == \"3\"\nassert solution(sample_input2) == \"impossible\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n4 4\n1 2 2\n2 3 1\n3 4 1\n4 1 2\n''') == '3\\n'\n\nassert solution('''\n5 5\n1 2 1\n2 3 1\n2 4 1\n2 5 1\n4 5 1\n''') == 'impossible\\n'"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n4 4\n1 2 2\n2 3 1\n3 4 1\n4 1 2\n''') == '3'\n\nassert solution('''\n5 5\n1 2 1\n2 3 1\n2 4 1\n2 5 1\n4 5 1\n''') == 'impossible'"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Sample Input 1:\\n5\\n2 1 1 1 3\\nSample Output 1:\\n2\\n\") == \"2\\n\"\nassert solution(\"Sample Input 2:\\n1\\n22\\nSample Output 2:\\n4\\n\") == \"4\\n\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Sample Input 1\") == \"2\", \"Input 1 is incorrect.\"\nassert solution(\"Sample Input 2\") == \"4\", \"Input 2 is incorrect.\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == 2, \"Test case 1 failed\"\nassert solution(5) == 2, \"Test case 2 failed\"\nassert solution(5) == 2, \"Test case 3 failed\"\nassert solution(5) == 2, \"Test case 4 failed\"\nassert solution(5) == 2, \"Test case 5 failed\"\nassert solution(5) == 2, \"Test case 6 failed\"\nassert solution(5) == 2, \"Test case 7 failed\"\nassert solution(5) == 2, \"Test case 8 failed\"\nassert solution(5) == 2, \"Test case 9 failed\"\nassert solution(5) == 2, \"Test case 10 failed\"\nassert solution(5) == 2, \"Test case 11 failed\"\nassert solution(5) == 2, \"Test case 12 failed\"\nassert solution(5) == 2, \"Test case 13 failed\"\nassert solution(5) == 2, \"Test case 14 failed\"\nassert solution(5) == 2, \"Test case 15 failed\"\nassert solution(5) == 2, \"Test case 16 failed\"\nassert solution(5) == 2, \"Test case 17 failed\"\nassert solution(5) == 2, \"Test case 18 failed\"\nassert solution(5) == 2, \"Test case 19 failed\"\nassert solution(5) == 2, \"Test case 20 failed\"\nassert solution(5) == 2, \"Test case 21 failed\"\nassert solution(5) == 2, \"Test case 22 failed\"\nassert solution(5) == 2, \"Test case 23 failed\"\nassert solution(5) == 2, \"Test case 24 failed\"\nassert solution(5) == 2, \"Test case 25 failed\"\nassert solution(5) == 2, \"Test case 26 failed\"\nassert solution(5) == 2, \"Test case 27 failed\"\nassert solution(5) == 2, \"Test case 28 failed\"\nassert solution(5) == 2, \"Test case 29 failed\"\nassert solution(5) == 2, \"Test case 30 failed\"\nassert solution(5) == 2, \"Test case 31 failed\"\nassert solution(5) == 2, \"Test case 32 failed\"\nassert solution(5) == 2, \"Test case 33 failed\"\nassert solution(5) == 2, \"Test case 34 failed\"\nassert solution(5) == 2, \"Test case 35 failed\"\nassert solution(5) == 2, \"Test case 36 failed\"\nassert solution(5) == 2, \"Test case 37 failed\"\nassert solution(5) == 2, \"Test case 38 failed\"\nassert solution(5) == 2, \"Test case 39 failed\"\nassert solution(5) == 2, \"Test case 40 failed\"\nassert solution(5) == 2, \"Test case 41 failed\"\nassert solution(5) == 2, \"Test case 42 failed\"\nassert solution(5) == 2, \"Test case 43 failed\"\nassert solution(5) == 2, \"Test case 44 failed\"\nassert solution(5) == 2, \"Test case 45 failed\"\nassert solution(5) == 2, \"Test case 46 failed\"\nassert solution(5) == 2, \"Test case 47 failed\"\nassert solution(5) == 2, \"Test case 48 failed\"\nassert solution(5) == 2, \"Test case 49 failed\"\nassert solution(5) == 2, \"Test case 50 failed\"\nassert solution(5) == 2, \"Test case 51 failed\"\nassert solution(5) == 2, \"Test case 52 failed\"\nassert solution(5) == 2, \"Test case 53 failed\"\nassert solution(5) == 2, \"Test case 54 failed\"\nassert solution(5) == 2, \"Test case 55 failed\"\nassert solution(5) == 2, \"Test case 56 failed\"\nassert solution(5) == 2, \"Test case 57 failed\"\nassert solution(5) == 2,"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 1 1 1 3\\n1\\n22\\n\") == \"2\"\nassert solution(\"1\\n22\\n\") == \"4\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 1 1 1 3\\n\") == \"2\"\nassert solution(\"1\\n22\\n\") == \"4\"\n"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == 2\nassert solution(2, 1, 1, 1, 3) == 2\nassert solution(1, 22) == 4"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"4\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 1 1 1 3\\n1\\n22\\n\") == \"2\"\nassert solution(\"1\\n22\\n\") == \"4\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 1 1 1 3\\n\") == \"2\\n\"\nassert solution(\"1\\n22\\n\") == \"4\\n\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == '2', \"The solution for sample_input_1 is incorrect\"\nassert solution(sample_input_2) == '4', \"The solution for sample_input_2 is incorrect\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n3\n3 1 5\n\"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"\n4\n1 2 3 4\n\"\"\"\n) == \"2\\n\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Your solution is {solution(stdin)}, but expected {expected}\"\n"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"3\\n3 1 5\\n\"\n) == \"3\\n\", \"Expected '3', but got '{}' instead\".format(solution(\n    \"3\\n3 1 5\\n\"\n))\n\nassert solution(\n    \"4\\n1 2 3 4\\n\"\n) == \"2\\n\", \"Expected '2', but got '{}' instead\".format(solution(\n    \"4\\n1 2 3 4\\n\"\n))"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n3 1 5') == '3\\n'\nassert solution('4\\n1 2 3 4') == '2\\n'"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == output, f\"Input:\\n{stdin}\\n\\nOutput:\\n{output}\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3\\n\"\nassert solution(\"3\\n1 1 5\\n\") == \"3\\n\"\nassert solution(\"4\\n1 2 3 4\\n\") == \"2\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'Output the desired number on a single line.\\n', 'The function should return the desired output.'"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 1 5\\n\") == \"3\\n\", \"Test case 1 failed.\"\nassert solution(\"4\\n1 2 3 4\\n\") == \"2\\n\", \"Test case 2 failed.\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, \"Test failed.\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 1 5\") == \"3\\n\", \"Test 1 failed.\"\nassert solution(\"4\\n1 2 3 4\") == \"2\\n\", \"Test 2 failed.\""
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input1.txt', 'r').read()) == \"\"\"- +d-\"\"\"\nassert solution(open('input2.txt', 'r').read()) == \"\"\"<any> <empty>\"\"\""
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('a+b-c\\na-b+d-c') == ['- +d-', '']"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(a'b-c') == '- -'\nassert solution(a'-b+d-c') == '- -d'\nassert solution(a'knuth-morris-pratt') == '<any> <empty>'\nassert solution(a'knuthmorrispratt') == '<any> <empty>'"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(r'''\na+b-c\na-b+d-c\nknuth-morris-pratt\nknuthmorrispratt\n''') == '''\n- +d-\n<any> <empty>\n"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('a+b-c') == '- +d-'\nassert solution('knuth-morris-pratt') == 'def <empty>'"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('a+b-c\\na-b+d-c') == '- +d-'\nassert solution('knuth-morris-pratt\\knuthmorrispratt') == '<any> <empty>'"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('a+b-c\\na-b+d-c\\nknuth-morris-pratt\\knuthmorrispratt') == '- +d-\\n<any> <empty>'\nassert solution('') == '<empty>'\nassert solution('abc') == '<any>'\nassert solution('a\\nb\\nc') == '<empty>'"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r\"\"\"\na+b-c\na-b+d-c\n\"\"\") == [\"- +d-\", \"<any>\", \"<empty>\"]\n\nassert solution(r\"\"\"\nknuth-morris-pratt\nknuthmorrispratt\n\"\"\") == [\"<any>\", \"<empty>\", \"def solution(stdin: str) -> str:pass\"]\n\nassert solution(r\"\"\"\na-b+c-\na+b-c\n\"\"\") == [\"- +c-\", \"a - b\", \"+ c -\", \"a + b -\"]"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    '''\n    a+b-c\n    a-b+d-c\n    '''\n) == '''\n- +d-\n<any> <empty>\n'''\n\nassert solution(\n    '''\n    knuth-morris-pratt\n    knuthmorrispratt\n    '''\n) == '''\n"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('sample.in', 'r')) == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\\n11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n\", \"Input does not match\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\n\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\nassert solution(\"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\\n\") == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n\"\n"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6') == '0\\n1\\n3\\n2\\n3\\n5\\n3\\n'\nassert solution('3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10') == '11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10'"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\n') == '0\\n1\\n3\\n2\\n3\\n5\\n3\\n'\nassert solution('3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\\n') == '11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n'"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\nassert solution(\"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\") == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\nassert solution(\"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\") == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '0\\n0\\n0\\n0\\n0\\n0\\n', 'The function should return the correct output.'"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''1 1\n0\n7\nt 0\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\n''') == '0\\n1\\n3\\n2\\n3\\n5\\n3\\n'\n\nassert solution('''3 0\n2 6 6\n10\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10\n''') == '11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n'"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\n\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\nassert solution(\"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\\n\") == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n\"\nassert solution(\"5 10\\n100\\n0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\n\") == \"20\\n10\\n5\\n3\\n5\\n5\\n3\\n5\\n3\\n\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution\nfrom typing import List"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == \"2\\n4 6\"\nassert solution(\"5 6\\n1 2 2\\n2 3 2\\n3 5 2\\n1 4 3\\n4 5 3\\n1 5 6\") == \"0\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == \"2\\n4 6\"\nassert solution(\"5 6\\n1 2 2\\n2 3 2\\n3 5 2\\n1 4 3\\n4 5 3\\n1 5 6\") == \"0\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == \"2\\n4 6\"\nassert solution(\"5 6\\n1 2 2\\n2 3 2\\n3 5 2\\n1 4 3\\n4 5 3\\n1 5 6\") == \"0\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == \"2\\n4 6\"\nassert solution(\"5 6\\n1 2 2\\n2 3 2\\n3 5 2\\n1 4 3\\n4 5 3\\n1 5 6\") == \"0\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == \"2\\n4 6\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\\n4 6\\n\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == \"2\\n4 6\"\nassert solution(\"5 6\\n1 2 2\\n2 3 2\\n3 5 2\\n1 4 3\\n4 5 3\\n1 5 6\") == \"0\"\n\nfrom typing import List"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\\n4 6\\n\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution.__doc__.startswith(\"Write 5 lines of code to test the correctness of solution:\")\n\nfrom typing import List"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('12\\n1 1\\n1 2\\n1 3\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\\n') == '\\n4\\n5\\n6\\n1\\n2\\n3\\n'\nassert solution('6\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n') == '\\n1\\n2\\n3\\n'"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"12\\n1 1\\n1 2\\n1 3\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\\n\") == \"4\\n5\\n6\\n1\\n2\\n3\\n\"\nassert solution(\"6\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n\") == \"1\\n2\\n3\\n\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_str) == output_str, f\"Test failed. Input: {input_str}, Output: {output_str}\" for input_str, output_str in zip(input_strs, output_strs)"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('tests/sample_input.txt', 'r').read()) == '4\\n5\\n6\\n1\\n2\\n3\\n'\nprint('Test Passed')"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test case {case_num} failed\"\nfor case_num, (input_data, expected_output) in enumerate(test_cases):\n    assert solution(input_data) == expected_output, f\"Test case {case_num} failed\"\n"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 4\nassert solution(4) == 5\nassert solution(5) == 6\nassert solution(6) == 1\nassert solution(7) == 2\nassert solution(8) == 3"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"12\\n1 1\\n1 2\\n1 3\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\\n\") == \"4\\n5\\n6\\n1\\n2\\n3\\n\"\nassert solution(\"6\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n\") == \"1\\n2\\n3\\n\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4\\n5\\n6\\n1\\n2\\n3\\n\", \"Test failed\"\n"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, \"Expected output: {}, Received output: {}\".format(output, solution(input()))"
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Solution Not Available\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('PPPPCCCC') == '8'\n"
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"CPCC\") == \"1\", \"Test 1 failed\"\nassert solution(\"PPPPCCCC\") == \"8\", \"Test 2 failed\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"CPCC\") == \"1\", \"Sample Input 1\"\nassert solution(\"PPPPCCCC\") == \"8\", \"Sample Input 2\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"CPCC\") == 1\nassert solution(\"PPPPCCCC\") == 8"
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"CPCC\") == \"1\\n\"\nassert solution(\"PPPPCCCC\") == \"8\\n\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\""
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}\""
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"\"\"\n1 2 3\n1 3\n2 3\n3\n\"\"\""
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2 1\\n1 2\\n2 3\\n2\\nSample Input 2: 3 2 1\\n1 3\\n2 3\\n3\\nSample Output 2: 3\\n\") == [\"3\"]\nassert solution(\"3 2 1\\n1 3\\n2 3\\n3\\nSample Input 3: 3 2 1\\n1 3\\n2 3\\n3\\nSample Output 3: 3 2 1\\n\") == [\"3\", \"2\", \"1\"]\nassert solution(\"3 2 1\\n1 2\\n2 3\\n2\\nSample Input 2: 3 2 1\\n1 3\\n2 3\\n3\\nSample Output 2: 3 2 1\\n\") == [\"3\", \"2\", \"1\"]"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2 1\\n1 2\\n2 3\\n2\\n\") == [\"1\", \"2\", \"3\"]\nassert solution(\"3 2 1\\n1 3\\n2 3\\n3\\n\") == [\"3\"]\nassert solution(\"3 2 1\\n1 4\\n2 3\\n3\\n\") == []\n"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''3 2 1\n1 2\n2 3\n2''') == '1 2 3\\n'\nassert solution('''3 2 1\n1 3\n2 3\n3''') == '3\\n'\nassert solution('''3 2 1\n1 3\n2 4\n3''') == '1 2 3\\n'\nassert solution('''3 2 1\n1 4\n2 3\n3''') == '3\\n'\nassert solution('''3 2 1\n1 4\n2 5\n3''') == '1 2 3\\n'\nassert solution('''3 2 1\n1 5\n2 4\n3''') == '3\\n'"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"\"\"1 2 3\"\"\"\nassert solution() == \"\"\"3\"\"\"\nassert solution() == \"\"\"\"\"\""
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '1 2 3\\n3\\n'\n"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected, f\"Expected {expected}, got {solution}\""
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2 1\\n1 2\\n2 3\\n2\\n\") == [\"1\", \"2\", \"3\"]"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"sherlock_holmes.txt\", \"r\")) == [\"1\", \"2\", \"3\"]"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    5 3\n    2 4 2 3 4\n    \"\"\"\n) == 39\n\nassert solution(\n    \"\"\"\n    5 1\n    1 0 1 1 1\n    \"\"\"\n) == 4"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\\n\") == \"39\"\nassert solution(\"5 1\\n1 0 1 1 1\\n\") == \"4\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\\n\") == \"39\\n\", \"Test 1 failed\"\nassert solution(\"5 1\\n1 0 1 1 1\\n\") == \"4\\n\", \"Test 2 failed\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\") == \"39\"\nassert solution(\"5 1\\n1 0 1 1 1\") == \"4\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\\n\") == \"39\"\nassert solution(\"5 1\\n1 0 1 1 1\\n\") == \"4\"\n"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\") == \"39\"\nassert solution(\"5 1\\n1 0 1 1 1\") == \"4\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 3\\n2 4 2 3 4\\n') == '39\\n'\nassert solution('5 1\\n1 0 1 1 1\\n') == '4\\n'"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input1) == output1, f\"Test 1 failed: {input1}\"\nassert solution(input2) == output2, f\"Test 2 failed: {input2}\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"39\", \"Please add the output for sample input 1\"\n\nassert solution(stdin) == \"4\", \"Please add the output for sample input 2\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 3\\n2 4 2 3 4\\n') == '39\\n'\nassert solution('5 1\\n1 0 1 1 1\\n') == '4\\n'"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '1 1 2\\n2 3 1\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == \"1 1 2\\n2 3 1\\n\"\nassert solution(open('input2.txt', 'r')) == \"1 1 2\\n2 4 3\\n\""
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test case {case_num+1} failed: expected output {expected_output}, got {solution(input())}\"\n"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '1 1 2\\n2 4 3'"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\nxx.\\nxxx\\n...\") == \"1 1 2\\n2 3 1\"\nassert solution(\"4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx\") == \"1 1 2\\n2 4 3\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\""
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(solution.input) == solution.output"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\nxx.\\nxxx\\n...\") == \"1 1 2\\n2 3 1\\n\"\nassert solution(\"4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx\") == \"1 1 2\\n2 4 3\\ndef solution(stdin: str) -> str:    pass\""
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('tests/sample_input_1.txt', 'r')) == '1 1 2\\n2 3 1'\nassert solution(open('tests/sample_input_2.txt', 'r')) == '1 1 2\\n2 4 3'"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input1) == \"1 1 2\\n2 3 1\\n\"\nassert solution(input2) == \"1 1 2\\n2 4 3\""
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\nxx.\\nxxx\\n...\\n\") == \"1 1 2\\n2 3 1\"\nassert solution(\"4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx\\n\") == \"1 1 2\\n2 4 3\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\") == \"indistinguishable\\n\"\nassert solution(\"2 0 1\\n1 1 1\\n0 0 0\") == \"0\\n\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"indistinguishable\"\n"
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\"
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"indistinguishable\", \"Expected 'indistinguishable' but got '{}'\".format(solution(stdin))\nprint(\"indistinguishable\")"
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"indistinguishable\"\n"
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"indistinguishable\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\") == \"indistinguishable\"\nassert solution(\"2 0 1\\n1 1 1\\n0 0 0\") == \"0\"\n"
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"indistinguishable\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\") == \"indistinguishable\"\nassert solution(\"2 0 1\\n1 1 1\\n0 0 0\") == \"0\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\"\nassert solution(\"\") == \"\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\"\n"
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\"\n"
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0110\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\") == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\"\nassert solution(\"0111\\n1110\\n0111\\n1110\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\") == \"1111\\n0111\\n1110\\n1111\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output\nprint(output)"
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10000') == '+0000', \"Incorrect output\"\nassert solution('1111') == '+000-', \"Incorrect output\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10000\") == \"+0000\", \"Your solution is incorrect.\"\nassert solution(\"1111\") == \"+000-\", \"Your solution is incorrect.\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\"\n"
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10000') == '+0000', \"Incorrect result: Expected '+0000', got '{}'.\".format(solution('10000'))\nassert solution('1111') == '+000-', \"Incorrect result: Expected '+000-', got '{}'.\".format(solution('1111'))"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '9'\nprint(\"All tests passed\")"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"Output\\n320\\n\"\nprint(\"All tests pass!\")"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\") == \"9\", \"The expected output is not correct. Please check the code.\"\nassert solution(\"2 1 1 1\\n2 2\\n1\\n1\\n1 2 1\") == \"2\", \"The expected output is not correct. Please check the code.\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\\n\") == \"9\"\n\nassert solution(\"2 1 1 1\\n2 2\\n1\\n1\\n1 2 1\\n\") == \"2\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == '9'"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got {solution(input())}.\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"9\", \"Incorrect Output\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(input())) == '9'\n"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Wrong output: {solution(stdin=input())}\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\") == \"9\"\nassert solution(\"2 1 1 1\\n2 2\\n1\\n1\\n1 2 1\\n\") == \"2\""
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\") == 2\nassert solution(\"3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\") == 7"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n3 3 1\n2 2\n1 1 R\n010\n000\n000\n''') == '2'\n\nassert solution('''\n3 4 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301\n''') == '7'"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == output1, \"Test 1 failed\"\nassert solution(input2) == output2, \"Test 2 failed\""
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 3, 1) == 2\nassert solution(3, 4, 2) == 7"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n    3 3 1\n    2 2\n    1 1 R\n    010\n    000\n    000\n\"\"\") == \"2\\n\"\n\nassert solution(\"\"\"\n    3 4 2\n    2 2\n    3 4 R\n    2327\n    6009\n    2112\n    3 2 R\n    1310\n    2101\n    1301\n\"\"\") == \"7\\n\""
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == \"2\"\nassert solution(sample_input2) == \"7\"\n\nfrom typing import List"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == expected_output, f\"Expected output: {expected_output}\\nGot: {solution(input)}\""
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n3 3 1\n2 2\n1 1 R\n010\n000\n000\n''') == '2'\n\nassert solution('''\n3 4 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301\n''') == '7'\n\nassert solution('''\n3 2 1\n2 2\n1 1 L\n010\n000\n000\n''') == '-1'"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == expected_output, f\"Your solution is incorrect. Expected output: {expected_output}, Received output: {solution(input)}\"\nfor line in input:\n    assert len(line.split()) == 5, f\"Invalid line format: {line}\"\n    assert int(line.split()[0]) >= 3 and int(line.split()[0]) <= 50, f\"Invalid N: {line.split()[0]}\"\n    assert int(line.split()[1]) >= 3 and int(line.split()[1]) <= 50, f\"Invalid M: {line.split()[1]}\"\n    assert int(line.split()[2]) == 1, f\"Invalid K: {line.split()[2]}\"\n    assert int(line.split()[3]) >= 0 and int(line.split()[3]) <= 9, f\"Invalid X: {line.split()[3]}\"\n    assert int(line.split()[4]) >= 0 and int(line.split()[4]) <= 9, f\"Invalid Y: {line.split()[4]}\"\n    for i in range(5):\n        assert int(line.split()[5 + i]) >= 0 and int(line.split()[5 + i]) <= 9, f\"Invalid digit: {line.split()[5 + i]}\"\n        for j in range(5):\n            assert int(line.split()[5 + i + 1 + j]) >= 0 and int(line.split()[5 + i + 1 + j]) <= 9, f\"Invalid digit: {line.split()[5 + i + 1 + j]}\"\n    assert int(line.split()[5 + 10]) == 1, f\"Invalid trap position: {line.split()[5 + 10]}\"\n    assert int(line.split()[5 + 11]) == 1, f\"Invalid trap position: {line.split()[5 + 11]}\"\n    assert int(line.split()[5 + 12]) == 1, f\"Invalid trap position: {line.split()[5 + 12]}\"\n    assert int(line.split()[5 + 13]) == 1, f\"Invalid trap position: {line.split()[5 + 13]}\"\n    assert int(line.split()[5 + 14]) == 1, f\"Invalid trap position: {line.split()[5 + 14]}\"\n    assert int(line.split()[5 + 15]) == 1, f\"Invalid trap position: {line.split()[5 + 15]}\"\n    assert int(line.split()[5 + 16]) == 1, f\"Invalid trap position: {line.split()[5 + 16]}\"\n    assert int(line.split()[5 + 17]) == 1, f\"Invalid trap position: {line.split()[5 + 17]}\"\n    assert int(line.split()[5 + 18]) == 1, f\"Invalid trap position: {line.split()[5 + 18]}\"\n    assert int(line.split()[5 + 19]) == 1, f\"Invalid trap position: {line.split()[5 + 19]}\"\n    assert int(line.split()[5 + 20]) == 1, f\"Invalid trap position: {line.split()[5 + 20]}\"\n    assert int(line.split()[5 + 21]) == 1, f\"Invalid trap position: {line.split()[5 + 21]}\"\n    assert int(line.split()[5 + 22]) == 1, f\"Invalid trap position: {line.split()[5 + 22]}\"\n    assert int(line.split()[5 + 23]) == 1, f\"Invalid trap position: {line.split()[5 + 23]}\"\n    assert int(line.split()[5 + 24]) == 1, f\"Invalid trap position: {line.split()[5 + 24]}\"\n    assert int(line.split()[5 + 25]) == 1, f\"Invalid trap position: {line.split()[5 + 25]}\"\n    assert int(line.split()[5 + 26]) == 1, f\"Invalid trap position: {line.split()[5 + 26]}\"\n    assert int(line.split()[5 + 27]) == 1, f\"Invalid trap position: {line.split()[5 + 27]}\"\n    assert int(line.split()[5 + 28]) == 1, f\"Invalid trap position: {line.split()[5 + 28]}\"\n    "
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 2 1 2 3\") == \"2\\n\"\nassert solution(\"8\\n1 2 4 1 1 2 5 1\") == \"4\\n\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == '2'"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\\n\", \"Expected output 2, got {}\".format(solution(stdin))"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n2 2 1 2 3\\n') == '2'\nassert solution('8\\n1 2 4 1 1 2 5 1\\n') == '4'\n"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test case failed\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    5\n    2 2 1 2 3\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    8\n    1 2 4 1 1 2 5 1\n    \"\"\"\n) == \"4\\n\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n2 2 1 2 3\\n') == '2\\n'\nassert solution('8\\n1 2 4 1 1 2 5 1\\n') == '4\\n'"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n2 2 1 2 3\\n') == '2'\nassert solution('8\\n1 2 4 1 1 2 5 1\\n') == '4'\n"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 2 1 2 3\") == 2\nassert solution(\"8\\n1 2 4 1 1 2 5 1\") == 4"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"D 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\") == \"NE\\nNE\\nNE\"\nassert solution(\"D 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\") == \"3\\n1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"D 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\n\") == \"NE\\nNE\\nNE\\n\"\nassert solution(\"D 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\\n\") == \"3\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"P 1\\nP 2\\nP 3\\n\") == \"NE\\nNE\\nNE\\n\"\nassert solution(\"P 1\\nP 2\\nP 3\\n\") == \"NE\\nNE\\nNE\\n\"\nassert solution(\"P 1\\nP 2\\nP 3\\n\") == \"NE\\nNE\\nNE\\n\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6\\nD 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\nSample Output 1:\\nNE\\nNE\\nNE\\n') == 'NE\\nNE\\nNE\\n'\nassert solution('6\\nD 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\\nSample Output 2:\\n3\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n') == '3\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"NE\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"D 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\n\") == \"NE\\nNE\\nNE\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"D 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\n\") == \"NE\\nNE\\nNE\\n\"\nassert solution(\"D 8 8\\nD 2 4\\nD 5 6\\nP 2\\nP 4\\n\") == \"3\\n1\\n\"\n\nsolution(\"D 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\n\") == \"NE\\nNE\\nNE\\n\"\nsolution(\"D 8 8\\nD 2 4\\nD 5 6\\nP 2\\nP 4\\n\") == \"3\\n1\\n\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\nfor i in range(1, 4):\n    assert solution(stdin) == expected\nfor i in range(4, 6):\n    assert solution(stdin) == expected\nfor i in range(6, 8):\n    assert solution(stdin) == expected\nassert solution(stdin) == expected\n\nsolution = '''\n"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('D 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\n') == 'NE\\nNE\\nNE\\n'\nassert solution('D 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\\n') == '3\\n1\\n'"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(str(6)) == 'NE'\nassert solution(str(6)) == 'NE'\nassert solution(str(6)) == 'NE'\n"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    '6\\nD 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\n'\n) == 'NE\\nNE\\nNE\\n'\n\nassert solution(\n    '6\\nD 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\\n'\n) == '3\\n1\\n'"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    '''\n    2 2 1 10\n    0 0\n    1 4\n    3 2\n    '''\n) == '2'\n\nassert solution(\n    '''\n    2 3 5 6\n    1 1\n    1 1 6\n    1 2 2\n    '''\n) == '5'"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected_output\n"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 1 10\\n0 0\\n1 4\\n3 2\") == \"2\"\nassert solution(\"2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\") == \"5\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n2 2 1 10\n0 0\n1 4\n3 2\n''') == '2'\n\nassert solution('''\n2 3 5 6\n1 1\n1 1 6\n1 2 2\n''') == '5'"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == # Write your solution here"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '2\\n5\\n'"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''2 2 1 10\n0 0\n1 4\n3 2''') == '2\\n'\nassert solution('''2 3 5 6\n1 1\n1 1 6\n1 2 2''') == '5\\n'"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    2 2 1 10\n    0 0\n    1 4\n    3 2''') == '2\\n'\n\nassert solution('''\n    2 3 5 6\n    1 1\n    1 1 6\n    1 2 2''') == '5\\n'"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 2 1 10\\n0 0\\n1 4\\n3 2') == '2\\n'\nassert solution('2 3 5 6\\n1 1\\n1 1 6\\n1 2 2') == '5\\n'\n\nfrom typing import List"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 1 10\\n0 0\\n1 4\\n3 2\") == 2\nassert solution(\"2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\") == 5\nassert solution(\"2 2 1 10\\n0 0\\n1 4\\n3 2\") == 2\nassert solution(\"1 0\\n1 0 5 6\\n2 2 3 4 5\") == 7\nassert solution(\"1 1 1 1\\n1 1 1 1\") == 1\nassert solution(\"1 0 1 0\") == 1\nassert solution(\"1 0 1 0 1 0 1 0 1 0\") == 0\n"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(), \"Test case 1 failed\""
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2.0000000000\\n\"\n"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\") == \"2.0000000000\\n\", \"Test 1 Failed\"\nassert solution(\"1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5\") == \"2.0000000000\\n\", \"Test 2 Failed\""
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2.0000000000\", \"Incorrect solution\""
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2.0000000000\", \"Incorrect solution\""
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution, \"No solution provided\"\n"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2') == 2.0\nassert solution('5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5') == 2.0"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2.0000000000\\n\"\n"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\") == \"2.0000000000\"  # Test 1\nassert solution(\"5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5\") == \"2.0000000000\"  # Test 2"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2.0000000000\\n'\nprint('Test Passed')"
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"The output for sample case {input()} is {solution(input())}, while the expected output is {expected_output}\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\"\nassert solution(\"1 100 10\") == \"9\\n19\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\\n\", \"sample input 1\"\nassert solution(\"1 100 10\") == \"9\\n19\\n\", \"sample input 2\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\"\nassert solution(\"1 100 10\") == \"9\\n19\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\\n\", \"The first line should contain the number of integers in the interval with the digit sum equal to S.\"\nassert solution(\"1 100 10\") == \"9\\n19\\n\", \"The second line should contain the smallest such integer.\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 9 5\\n1 100 10\") == \"1\\n9\\n19\"\nassert solution(\"5 10 3\\n10 50 20\") == \"1\\n5\\n15\"\nassert solution(\"1 100 10\") == \"1\\n9\\n19\"\nassert solution(\"5 10 3\\n10 50 20\") == \"1\\n5\\n15\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\"\nassert solution(\"1 100 10\") == \"9\\n19\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 9 5\\n1 100 10\") == \"1\\n9\\n19\"\n"
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 9 5\\n1 100 10\") == \"1\\n9\\n19\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 9 5\\n1 100 10\") == \"1\\n9\\n19\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n1\\n1\\n\") == \"1\\n1\\n\"\nassert solution(\"4 5\\n4 1 2 4 4\\n4 3 2 1\\n\") == \"7\\n4 4 2 4 4 1 4\\n\"\nassert solution(\"1 1\\n1\\n2\\n\") == \"1\\n2\\n\"\nassert solution(\"1 2\\n3 4 5 6\\n7 8 9\\n\") == \"3\\n8 9\\n\"\nassert solution(\"2 2\\n1 2 3 4 5\\n6 7 8 9 10\\n\") == \"1\\n5\\n\"\nassert solution(\"1 1\\n2 2 3 3 4 4\\n\") == \"2\\n3 3 4 4\\n\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n1\\n1\\n\") == \"1\\n1\"\nassert solution(\"4 5\\n4 1 2 4 4\\n4 3 2 1\\n\") == \"7\\n4 4 2 4 4 1 4\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n1\\n1\") == \"1\\n1\"\nassert solution(\"4 5\\n4 1 2 4 4\\n4 3 2 1\") == \"7\\n4 4 2 4 4 1 4\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n1\\n1\\n\") == \"1\\n1 \"\nassert solution(\"4 5\\n4 1 2 4 4\\n4 3 2 1\\n\") == \"7\\n4 4 2 4 4 1 4\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n1\\n1\\n\") == \"1\\n1\\n\"\nassert solution(\"4 5\\n4 1 2 4 4\\n4 3 2 1\\n\") == \"7\\n4 4 2 4 4 1 4\"\nassert solution(\"1 2 3\\n1 2 3\\n4 5 6\\n\") == \"2\\n4\\n\"\nassert solution(\"1 2 2 1 1\\n1 1 2 1 1\\n1 1 1 1 1\\n1 2 2 2 1\\n\") == \"3\\n3\\n2\\n\"\nassert solution(\"1 2 2\\n3 4 5\\n6 7 8\\n\") == \"1\\n4\\n\"\nassert solution(\"1 2\\n2 1\\n1 1\\n\") == \"1\\n4\\n\"\nassert solution(\"1 2 2\\n1 2 2\\n1 2 2\\n\") == \"2\\n2\\n\"\nassert solution(\"1 2 2\\n1 2 2\\n1 2 2\\n\") == \"2\\n2\\n\"\nassert solution(\"1 2 2\\n1 2 2\\n1 2 2\\n\") == \"2\\n2\\n\"\nassert solution(\"1 2 2\\n1 2 2\\n1 2 2\\n\") == \"2\\n2\\n\"\nassert solution(\"1 2 2\\n1 2 2\\n1 2 2\\n\") == \"2\\n2\\n\"\nassert solution(\"1 2 2\\n1 2 2\\n1 2 2\\n\") == \"2\\n2\\n\"\nassert solution(\"1 2 2\\n1 2 2\\n1 2 2\\n\") == \"2\\n2\\n\"\nassert solution(\"1 2 2\\n1 2 2\\n1 2 2\\n\") == \"2\\n2\\n\"\nassert solution(\"1 2 2\\n1 2 2\\n1 2 2\\n\") == \"2\\n2\\n\"\nassert solution(\"1 2 2\\n1 2 2\\n1 2 2\\n\") == \"2\\n2\\n\"\nassert solution(\"1 2 2\\n1 2 2\\n1 2 2\\n\") == \"2\\n2\\n\"\nassert solution(\"1 2 2\\n1 2 2\\n1 2 2\\n\") == \"2\\n2\\n\"\nassert solution(\"1 2 2\\n1 2 2\\n1 2 2\\n\") == \"2\\n2\\n\"\nassert solution(\"1 2 2\\n1 2 2\\n1 2 2\\n\") == \"2\\n2\\n\"\nassert solution(\"1 2 2\\n1 2 2\\n1 2 2\\n\") == \"2\\n2\\n\"\nassert solution(\"1 2 2\\n1 2 2\\n1 2 2\\n\") == \"2\\n2\\n\"\nassert solution(\"1 2 2\\n1 2 2\\n1 2 2\\n\") == \"2\\n2\\n\"\nassert solution(\"1 2 2\\n1 2 2\\n1 2 2\\n\") == \"2\\n2\\n\"\nassert solution(\"1 2 2\\n1 2 2\\n1 2 2\\n\") == \"2\\n2\\n\"\nassert solution(\"1 2 2\\n1 2 2\\n1 2 2\\n\") == \"2\\n2\\n\"\nassert solution(\"1 2 2\\n1 2 2\\n1 2 2\\n\") == \"2\\n2\\n\"\nassert solution(\"1 2 2\\n1 2 2\\n1 2 2\\n\") == \"2\\n2\\n\"\nassert solution(\"1 2 2\\n1 2 2\\n1 2 2"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n1\\n1\\n\") == \"1\\n1\\n\"\nassert solution(\"4 5\\n4 1 2 4 4\\n4 3 2 1\\n\") == \"7\\n4 4 2 4 4 1 4\\n\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n1\\n1\\n\") == \"1\\n1\\n\"\nassert solution(\"4 5\\n4 1 2 4 4\\n4 3 2 1\\n\") == \"7\\n4 4 2 4 4 1 4\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\\n1\\n1\") == \"1\\n1\"\nassert solution(\"4 5\\n4 1 2 4 4\\n4 3 2 1\") == \"7\\n4 4 2 4 4 1 4\"\n"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 1\\n1\\n1\\n') == '1\\n1 \\n'\nassert solution('4 5\\n4 1 2 4 4\\n4 3 2 1\\n') == '7\\n4 4 2 4 4 1 4'"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2, 10, 3, 2) == 4\nassert solution(10, 10, 5, 0) == 10"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 10 3 2\") == \"4\"\nassert solution(\"10 10 5 0\") == \"10\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == expected, f\"Solution is {solution()}, expected {expected}\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"4\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"4\\n\", \"Expected Output: 4\\n\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 10 3 2\") == \"4\", \"Expected output: 4\"\nassert solution(\"10 10 5 0\") == \"10\", \"Expected output: 10\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 10 3 2\\n10 10 5 0') == '4\\n', \"The output is incorrect.\"\nassert solution('20 10 3 2\\n10 10 5 0') == '10\\n', \"The output is incorrect.\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"M\", \"Test case failed\"\nassert solution() == \"M\", \"Test case failed\"\nassert solution() == \"M\", \"Test case failed\"\nassert solution() == \"M\", \"Test case failed\"\nassert solution() == \"M\", \"Test case failed\"\nassert solution() == \"M\", \"Test case failed\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 10 3 2\\n10 10 5 0') == '4'\nassert solution('10 10 5 0') == '10'"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '4', 'Incorrect Output'\n"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1 20\\n0123456789\\n\") == 10\nassert solution(\"6 100 9294\\n23689\\n\") == 111"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1 20\\n0123456789\\n\") == \"10\"\nassert solution(\"6 100 9294\\n23689\\n\") == \"111\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1 20\\n0123456789\\n\") == \"10\\n\"\nassert solution(\"6 100 9294\\n23689\\n\") == \"111\\n\"\n"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1 20\\n0123456789\") == \"10\"\nassert solution(\"6 100 9294\\n23689\") == \"111\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Got {solution(input())}, expected {expected}\"\n\nX, A, B = map(int, input().split())"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1 20\\n0123456789\") == 10\nassert solution(\"6 100 9294\\n23689\") == 111"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 1 20\\n0123456789\\n') == '10\\n'\nassert solution('6 100 9294\\n23689\\n') == '111\\n'\n\nsolution('2 1 20\\n0123456789\\n') == '10\\n'\nsolution('6 100 9294\\n23689\\n') == '111\\n'"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1 20\\n0123456789\") == \"10\"\nassert solution(\"6 100 9294\\n23689\") == \"111\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Input:\\n{input()}\\nOutput:\\n{output}\\n\"\n"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1 20\\n0123456789\") == \"10\"\nassert solution(\"6 100 9294\\n23689\") == \"111\"\n"
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1.500000 2.666667\", \"Testcase 1 failed\"\nassert solution() == \"1.500000 3.666667\", \"Testcase 2 failed\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Output two numbers 1.500000 and 2.666667\", \"Testcase 1 failed\"\nassert solution(stdin) == \"Output two numbers 1.500000 and 3.666667\", \"Testcase 2 failed\"\nassert solution(stdin) == \"Output two numbers 0 and 0\", \"Testcase 3 failed\"\nassert solution(stdin) == \"Output two numbers 1.500000 and 2.666667\", \"Testcase 4 failed\"\nassert solution(stdin) == \"Output two numbers 1.500000 and 3.666667\", \"Testcase 5 failed\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n') == '1.500000 2.666667\\n'\nassert solution('5 2\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n') == '1.500000 3.666667\\n'"
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution"
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n    5 3\n    1 R 4\n    2 R 2\n    3 R 2\n    4 S 2\n    5 S 1\n    \"\"\") == \"\"\"\n    1.500000 2.666667\n    \"\"\"\n\nassert solution(\"\"\"\n    5 2\n    1 R 4\n    2 R 2\n    3 R 2\n    4 S 2\n    5 S 1\n    \"\"\") == \"\"\"\n    1.500000 3.666667\n    \"\"\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Received: {solution(input())}\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(str(input())) == expected\n"
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution"
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.500000 2.666667\"\nassert solution(\"5 2\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.500000 3.666667\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1.500000 2.666667\""
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 6\\n101010\\n111001\\n101001\") == \"3\\n\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\") == \"3\\n\"\nassert solution(\"3 6\\n101010\\n111001\\n101001\\n101010\\n111001\\n111001\\n101001\\n101010\\n111001\\n111001\\n101001\\n111001\\n101010\\n101010\\n101010\\n111001\\n111001\\n101001\\n111001\\n101010\\n111001\\n111001\\n101001\\n111001\\n111001\\n111001\\n111001\\n101010\\n111001\\n101010\\n101010\\n111001\\n111001\\n101001\\n111001\\n101010\\n111001\\n111001\\n111001\\n111001\\n111001\\n101010\\n111001\\n101010\\n101010\\n111001\\n111001\\n101001\\n111001\\n101010\\n111001\\n111001\\n111001\\n111001\\n111001\\n101010\\n111001\\n101010\\n101010\\n111001\\n111001\\n101001\\n111001\\n101010\\n111001\\n111001\\n111001\\n111001\\n111001\\n101010\\n111001\\n101010\\n101010\\n111001\\n111001\\n101001\\n111001\\n101010\\n111001\\n111001\\n111001\\n111001\\n111001\\n101010\\n111001\\n101010\\n101010\\n111001\\n111001\\n101001\\n111001\\n101010\\n111001\\n111001\\n111001\\n111001\\n111001\\n101010\\n111001\\n101010\\n101010\\n111001\\n111001\\n101001\\n111001\\n101010\\n111001\\n111001\\n111001\\n111001\\n111001\\n101010\\n111001\\n101010\\n101010\\n111001\\n111001\\n10"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Solution failed for input {input()}, expected output {expected}\"\n"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Solution returned {solution(input())}, but expected {expected}\""
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''3 6\n101010\n111001\n101001''') == 3\nassert solution('''4 5\n10010\n01010\n10101\n01001''') == 3"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 6\\n101010\\n111001\\n101001') == 3\nassert solution('4 5\\n10010\\n01010\\n10101\\n01001') == 3"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n3 6\n101010\n111001\n101001\n\"\"\"\n) == \"3\\n\"\nassert solution(\n    \"\"\"\n4 5\n10010\n01010\n10101\n01001\n\"\"\"\n) == \"3\\n\"\nassert solution(\n    \"\"\"\n1 2\n1\n1\n1\n\"\"\"\n) == \"-1\\n\"\n"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == '3'\nassert solution(sample_input2) == '3'"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\\n\") == \"3 -1\\n3 1\\n\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\\n') == '-3 -1\\n3 1\\n'\nassert solution('4\\n2 4\\n6 -1\\n3 5\\n-1 -1\\n') == '3 4\\n3 -1\\n'"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\") == \"-3 -1\\n3 1\"\nassert solution(\"4\\n2 4\\n6 -1\\n3 5\\n-1 -1\") == \"3 4\\n3 -1\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"\"\"\n-3 -1\n3 1\n\"\"\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\") == \"-3 -1\\n3 1\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(None) == 'Sample Output 1'\nassert solution(open('input.txt', 'r')) == 'Sample Output 2'"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\\n') == '-3 -1\\n3 1\\n'\nassert solution('4\\n2 4\\n6 -1\\n3 5\\n-1 -1\\n') == '3 4\\n3 -1\\n'"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\\n\") == \"-3 -1\\n3 1\\n\"\nassert solution(\"4\\n2 4\\n6 -1\\n3 5\\n-1 -1\\n\") == \"3 4\\n3 -1\\n\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\") == \"-3 -1\\n3 1\\n\"\nassert solution(\"4\\n2 4\\n6 -1\\n3 5\\n-1 -1\") == \"3 4\\n3 -1\\n\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"-3 -1\"\nassert solution(6) == \"3 1\"\nassert solution(10) == \"3 1\"\nassert solution(20) == \"3 2\"\nassert solution(25) == \"3 2\"\n"
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    3 6 5 45 20\n    0 0\n    2 0\n    1 1.5\n    ''') == '2 5.086781\\n'\n\nassert solution('''\n    3 0.25 2 45 20\n    0 0\n    2 0\n    1 1.5\n    ''') == '1 12.715255\\n'"
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\") == \"2 5.086781\"\nassert solution(\"3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5\") == \"1 12.715255\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2 5.086781\"\nassert solution() == \"1 12.715255\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Expected output: {expected}\\nGot: {solution(stdin)}\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 6 5 45 20\\n0 0\\n2 0\\n1 1.5') == '2 5.086781\\n'\nassert solution('3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5') == '1 12.715255\\n'"
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Output two numbers i and T i\\n1 12.715255\\n2 5.086781\\n\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\") == \"2 5.086781\"\nassert solution(\"3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5\") == \"1 12.715255\"\n\nimport math"
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Output two numbers i and T_ i, denoting the index i and the time T_ i in seconds when that happens. The index corresponds to the order in the input. T_ i must be given with an absolute error of less than 10^{-3}! You may assume that no two vertices hit the wall within 10^{-2} seconds of each other, and that the first vertex to hit the wall would pierce it for at least 10^{-3} seconds.\"\n"
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\\n\"\n) == \"2 5.086781\\n\"\n\nassert solution(\n    \"3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5\\n\"\n) == \"1 12.715255\\n\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\\n\") == \"2 5.086781\\n\"\nassert solution(\"3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5\\n\") == \"1 12.715255\\n\""
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n\") == \"8\", \"Test 1 Failed\"\nassert solution(\"0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n\") == \"8\", \"Test 1 Failed\"\n\nassert solution(\"0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n\") == \"8\", \"Test 1 Failed\"\nassert solution(\"0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n\") == \"8\", \"Test 1 Failed\"\n\nassert solution(\"0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n\") == \"8\", \"Test 1 Failed\"\nassert solution(\"0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n\") == \"8\", \"Test 1 Failed\"\n\nassert solution(\"0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n\") == \"8\", \"Test 1 Failed\"\nassert solution(\"0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n\") == \"8\", \"Test 1 Failed\"\n\nassert solution(\"0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n\") == \"8\", \"Test 1 Failed\"\nassert solution(\"0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n\") == \"8\", \"Test 1 Failed\"\n\nassert solution(\"0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n\") == \"8\", \"Test 1 Failed\"\nassert solution(\"0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n\") == \"8\", \"Test 1 Failed\"\n\nassert solution(\"0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n\") == \"8\", \"Test 1 Failed\"\nassert solution(\"0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n\") == \"8\", \"Test 1 Failed\"\n\nassert solution(\"0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"8\\n\", \"Please modify the solution to return the number of ways the guards can be placed on a single line.\""
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6\\n0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1') == 8\nassert solution('4\\n5 1 7 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4') == 1"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1') == '8'\nassert solution('5 1 7 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4') == '1'"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\") == \"8\", \"The number of ways the guards can be placed is incorrect.\"\n\nassert solution(\"5 1 7 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4\") == \"1\", \"The number of ways the guards can be placed is incorrect.\""
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1') == 8\nassert solution('5 1 7 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4') == 1"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\") == \"8\""
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1') == '8'\nassert solution('0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n2 0 0 1') == '1'"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"8\"\nassert solution() == \"1\""
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 8\nassert solution() == 1"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == \"4 3\"\nassert solution(2) == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1234567890) == \"impossible\"  # impossible\nassert solution(9) == \"impossible\"  # impossible\nassert solution(10) == \"impossible\"  # impossible"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(7) == \"4 3\"\nassert solution(10) == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\") == \"4 3\"\nassert solution(\"10\") == \"impossible\"\n\nfrom typing import Tuple"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == \"4 3\"\nassert solution(10) == \"impossible\"\n\nfrom typing import List"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(10) == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\") == \"4 3\\n\"\nassert solution(\"10\") == \"impossible\\n\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1\\n2\\n4\\n3\\n3\\n4\\n4\\n5\\n6\\n10\\n10\") == \"impossible\"\nassert solution(\"2\\n2\\n4\\n4\\n6\\n5\\n10\\n10\\n12\\n10\\n15\\n12\\n15\\n18\\n15\\n21\\n18\\n24\\n21\\n27\\n24\\n30\\n27\\n32\\n30\\n35\\n32\\n38\\n35\\n41\\n38\\n44\\n41\\n47\\n44\\n50\\n47\\n52\\n50\\n55\\n52\\n58\\n55\\n61\\n58\\n64\\n61\\n67\\n64\\n70\\n67\\n72\\n70\\n75\\n72\\n78\\n75\\n81\\n78\\n84\\n81\\n87\\n84\\n90\\n87\\n92\\n90\\n95\\n92\\n98\\n95\\n101\\n98\\n104\\n101\\n107\\n104\\n110\\n107\\n112\\n110\\n115\\n112\\n118\\n115\\n121\\n118\\n124\\n121\\n127\\n124\\n130\\n127\\n132\\n130\\n135\\n132\\n138\\n135\\n141\\n138\\n144\\n141\\n147\\n144\\n150\\n147\\n152\\n150\\n155\\n152\\n158\\n155\\n161\\n158\\n164\\n161\\n167\\n164\\n170\\n167\\n172\\n170\\n175\\n172\\n178\\n175\\n181\\n178\\n184\\n181\\n187\\n184\\n190\\n187\\n192\\n190\\n195\\n192\\n198\\n195\\n201\\n198\\n204\\n201\\n207\\n204\\n210\\n207\\n212\\n210\\n215\\n212\\n218\\n215\\n221\\n218\\n224\\n221\\n227\\n224\\n230\\n227\\n232\\n230\\n235\\n232\\n238\\n235\\n241\\n238\\n244\\n241\\n247\\n244\\n250\\n247\\n252\\n250\\n255\\n252\\n258\\n255\\n261\\n258\\n264\\n261\\n267\\n264\\n270\\n267\\n272\\n270\\n275\\n272\\n278\\n275\\n281\\n278\\n284\\n281\\n287\\n284\\n290\\n287\\n292\\n290\\n295\\n292\\n298\\n295\\n"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1\\n3\\n\") == \"16\"\nassert solution(\"4\\n2\\n4\\n1\\n4\\n\") == \"109\"\n"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == '16'\nassert solution(sample_input2) == '109'"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"16\", \"Incorrect output for sample input 1\"\n\nassert solution() == \"109\", \"Incorrect output for sample input 2\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"16\\n\"\nassert solution(open(\"input.txt\", \"r\")) == \"109\\n\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Got {solution(input())}, expected {expected}\"\n\nsolution = lambda: int(input())\nexpected = int(input())\nassert solution(input()) == expected, f\"Got {solution(input())}, expected {expected}\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == \"16\", \"Test 1 failed\"\nassert solution(sample_input_2) == \"109\", \"Test 2 failed\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=f) == f\"16\\n\"\nassert solution(stdin=f) == f\"109\\n\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == \"16\"\nassert solution(sample_input2) == \"109\"\n\nfrom typing import List"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '109', 'Solution not implemented'"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == output, f\"Expected {output}, got {solution(stdin=input())}\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"Sample Output 2:\\n5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\"\n"
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 'Output'\n"
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n5 1\\n1 2\\n1 2\\n1 2\") == \"3\\n1 2 1\\n1 2 2\\n1 2 2\"\nassert solution(\"4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\") == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == output, f\"Test failed for {input} and {output}\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '3'\nassert solution() == '1 2 1'\nassert solution() == '1 2 2'\nassert solution() == '1 2 2'\nassert solution() == '1 2 2'"
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n2 3\n5 1\n1 2\n1 2\n1 2\n''') == '''\n3\n1 2 1\n1 2 2\n1 2 2\n'''\n\nassert solution('''\n4 3\n5 3 1 1\n1 3\n2 3\n4 1\n''') == '''\n5\n1 3 1\n2 3 2\n4 1 0\n2 4 1\n3 1 0\n'''"
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_str) == output_str, f\"Error: solution({input_str})!= output_str({output_str})\" for input_str, output_str in [\n    (\"\", \"\"),\n    (\"2 3\", \"3\"),\n    (\"4 3\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n    (\"5 3 1 1\", \"5\"),\n   "
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n2 3\n5 1\n1 2\n1 2\n1 2\n''') == '''\n3\n1 2 1\n1 2 2\n1 2 2\n'''\n\nassert solution('''\n4 3\n5 3 1 1\n1 3\n2 3\n4 1\n''') == '''\n5\n1 3 1\n2 3 2\n4 1 0\n2 4 1\n3 1 0\n'''"
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 3\\n5 1\\n1 2\\n1 2\\n1 2') == ['3', '1 2 1', '1 2 2', '1 2 2']\nassert solution('4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1') == ['5', '1 3 1', '2 3 2', '4 1 0', '2 4 1', '3 1 0']"
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Input') == 'Output'"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '1 2'"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1 2\"\nassert solution() == \"impossible\""
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin: str) == expected_output, f\"Expected {expected_output}, got {solution(stdin)}\""
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 3\\n6 7\\n0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1\\n') == ['1', '2']\nassert solution('2 1\\n20 3\\n0 1 1\\n10 1 0\\n10 2 1\\n') == ['impossible']"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == expected_output, \"Your solution is incorrect. Expected output: {}\\nGot: {}\".format(expected_output, solution)"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1 2\", \"Your solution is incorrect.\"\nassert solution() == \"impossible\", \"Your solution is incorrect.\"\nassert solution() == \"1 1\", \"Your solution is incorrect.\""
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == [\"1\", \"2\"]\nassert solution(sample_input_2) == [\"impossible\"]"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"\n"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == \"5 2\"\nassert solution(2020) == \"2020 1\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(10) == \"5 2\"\nassert solution(2020) == \"2020 1\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == \"5 2\"\nassert solution(10) == \"5 2\"\nassert solution(2020) == \"2020 1\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == (5, 2)\nassert solution(2020) == (2020, 1)"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\") == \"5 2\"\nassert solution(\"2020\") == \"2020 1\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10) == \"5 2\"\nassert solution(2020) == \"2020 1\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(10) == '5 2'\nassert solution(2020) == '2020 1'"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(10) == \"5 2\"\nassert solution(2020) == \"2020 1\"\n"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(10) == (5, 2)\nassert solution(2020) == (2020, 1)"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\") == \"5 2\\n\"\nassert solution(\"2020\") == \"2020 1\\n\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"impossible\"\nassert solution() == \"unique\"\nassert solution() == \"ambiguous\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\") == \"impossible\"\nassert solution(\"3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\") == \"unique\"\nassert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\") == \"unique\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\n') == 'impossible'\nassert solution('3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\n') == 'unique'\nassert solution('3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\n') == 'impossible'\n"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\n') == 'impossible\\n'\nassert solution('3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\n') == 'unique\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('3\\n3\\n1 apple\\n1 banana\\n2 cherry\\n3\\nbanana\\napple\\n') == 'unique\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('3\\n3\\n0 apple\\n0 banana\\n0 cherry\\n2 orange\\noak\\n') == 'impossible\\n'\nassert solution('3\\n3\\n0 apple\\n0 banana\\n0 cherry\\n2 orange\\noak\\n') == 'impossible\\n'"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"impossible\" # Change this line to implement your solution\n"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\") == \"impossible\"\nassert solution(\"3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\") == \"unique\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"impossible\"\nassert solution() == \"unique\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"impossible\"\n\nfrom typing import List"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == \"unique\"\nassert solution(sample_input2) == \"ambiguous\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(input())) == \"0\", \"Test 1 failed\"\nassert solution(str(input())) == \"1\", \"Test 2 failed\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n1 0 10\n''') == '0'\n\nassert solution('''\n1 2 10\n''') == '1'"
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 0 10\") == \"0\"\nassert solution(\"1 2 10\") == \"1\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 0 10') == 0\nassert solution('1 2 10') == 1"
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 0 10') == '0'\nassert solution('1 2 10') == '1'\n\nfrom typing import List"
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 0 10\") == \"0\"\nassert solution(\"1 2 10\") == \"1\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 0 10') == '0'\nassert solution('1 2 10') == '1'"
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 0 10\") == \"0\"\nassert solution(\"1 2 10\") == \"1\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Expected output: {expected}, Received: {solution(input())}\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 0 10\") == \"0\", \"Sample Input 1 failed\"\nassert solution(\"1 2 10\") == \"1\", \"Sample Input 2 failed\""
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == output1, f\"Solution for sample input 1 should be {output1}, but got {solution(input1)}\"\nassert solution(input2) == output2, f\"Solution for sample input 2 should be {output2}, but got {solution(input2)}\""
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n............................................................\n............................................................\n....XXXX....................................................\n....XXXX..................................XXXX..............\n....XXXX...................................XXX..............\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"............................................................\\n............................................................\\n....XXXX....................................................\\n....XXXX..................................XXXX..............\\n....XXXX...................................XXX..............\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\\\n....XXXX....................................................\n....XXXX..................................XXXX..............\n....XXXX...................................XXX..............\n....XXXX....................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n.............................................."
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"....XXXX....................................................\\n....XXXX..................................XXXX..............\\n....XXXX...................................XXX..............\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('............................................................\\n............................................................\\n....XXXX....................................................\\n....XXXX..................................XXXX..............\\n....XXXX...................................XXX..............\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"..X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X....X...."
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"....XXXX..................................XXXX...........................XXX................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX......................................"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n   .X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2\n\nfrom typing import List"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n') == 'apples are great!\\n fresh apples!\\n'\nassert solution('7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n') ==' =  \\n  + +\\n  + +\\n  + +\\n  + +\\n    \\n  + +\\n  + +\\n  + +\\n  + +\\n  + +\\n    \\n  + +\\n  + +\\n  + +\\n  + +\\n  + +\\n    \\n'"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are +\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our fresh apples!\\n\") == \"apples are great!\\n check out our fresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are    +\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our fresh apples!\\n\") == \" apples are great!\\n fresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"  =  +\\n + +\\n +++\\n +\\n +++\\n\"\nassert solution(\"1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n\") == \"3 4\\n5 6\\n7 8\\n9 10\\n\"\nassert solution(\"1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n\") == \"5 6\\n7 8\\n9 10\\n1 2\\n3 4\\n\"\nassert solution(\"1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n1 2\\n3 4\\n5 6"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are      +\\n+ way better!      +\\n+ #oranges>apples  +\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\n fresh apples!\\n\"\n\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n+     +\\n+++++++\\n\"\n\nassert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are      +\\n+ way better!      +\\n+ #oranges>apples  +\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\n fresh apples!\\n\"\n\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n+     +\\n+++++++\\n\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++++++++++++++++++++++++++\\n+ oranges are +\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++++++++++++++++++++++++++\\n check out our fresh apples!\\n\") == \" apples are great!\\n\"\n\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"    \\n\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"apples are great!\") == \" apples are great!\"\nassert solution(\"oranges are way better!\") == \" oranges are way better!\"\nassert solution(\"#oranges>apples\") == \" #oranges>apples\"\nassert solution(\"check out our fresh apples!\") == \" check out our fresh apples!\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('sample_input.txt', 'r').read()) == '''apples are great!\n fresh apples!'''\n\nassert solution(open('sample_input2.txt', 'r').read()) == '''\n +  =  +\n + +++ +\n + + + +\n + +++ +\n +     +\n+++++++\n'''"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are +\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our fresh apples!\\nSample Output 1:\\n apples are great!\\n\\n check out our fresh apples!\\n\\n\") == \" apples are great!\\n\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\nSample Output 2:\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2\n\nsample_input1 = '''\n8 20\n apples are great!  \n++++++++++++++++++++\n+ oranges are      +\n+ way better!      +\n+ #oranges>apples  +\n++++++++++++++++++++\n check out our      \n fresh apples!      \n'''\n\nexpected_output1 = '''\n apples are great!  \n check out our  \n fresh apples!  \n'''\n\nsample_input2 = '''\n7 7\n+++++++\n+  =  +\n+ +++ +\n+ + + +\n+ +++ +\n+     +\n+++++++\n'''\n\nexpected_output2 = '''\n       \n       \n       \n       \n       \n       \n       \n'''"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"HH\") == \"2.0\"\nassert solution(\"H?\") == \"1.5\"\n"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('HH') == '2.0'\nassert solution('H?') == '1.5'"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == output, \"Input and output do not match\"\n"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2.0\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"HH\") == \"2.0\", \"The solution should be 2.0\"\nassert solution(\"H?\") == \"1.5\", \"The solution should be 1.5\"\n"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('HH') == '2.0', \"Your solution is incorrect.\"\nassert solution('H?') == '1.5', \"Your solution is incorrect.\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"HH\") == \"2.0\", \"Please solve the problem using the provided code.\"\nassert solution(\"H?\") == \"1.5\", \"Please solve the problem using the provided code.\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"HH\") == \"2.0\", \"The output should be 2.0\"\nassert solution(\"H?\") == \"1.5\", \"The output should be 1.5\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('HH') == '2.0', 'Sample Input 1'\nassert solution('H?') == '1.5', 'Sample Input 2'\n\nfrom typing import List"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('HH') == '2.0', 'Sample Input 1'\nassert solution('H?') == '1.5', 'Sample Input 2'"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 'Output 1'\nassert solution(input()) == 'Output 2'"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'Output 1:\\n1\\n0001\\n0001\\n0011\\n1111\\n'\nassert solution(input()) == 'Output 2:\\n6\\n0011\\n0011\\n0111\\n1101\\n'"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n0001\\n0001\\n0011\\n1110') == '1\\n0001\\n0001\\n0011\\n1111'\nassert solution('4\\n1111\\n1111\\n1111\\n1111') == '6\\n0011\\n0011\\n0111\\n1101'\nassert solution('4\\n1000\\n1000\\n1000\\n1000') == '1'\nassert solution('4\\n0101\\n0101\\n0101\\n0101') == '0'\nassert solution('4\\n1110\\n1110\\n1110\\n1110') == '0'\nassert solution('4\\n1000\\n0000\\n0000\\n0000') == '0'\nassert solution('4\\n0000\\n0000\\n0000\\n0000') == '0'\nassert solution('4\\n0000\\n0000\\n0000\\n0000') == '0'\nassert solution('4\\n0000\\n0000\\n0000\\n0000') == '0'\nassert solution('4\\n0000\\n0000\\n0000\\n0000') == '0'\nassert solution('4\\n0000\\n0000\\n0000\\n0000') == '0'\nassert solution('4\\n0000\\n0000\\n0000\\n0000') == '0'\nassert solution('4\\n0000\\n0000\\n0000\\n0000') == '0'\nassert solution('4\\n0000\\n0000\\n0000\\n0000') == '0'\nassert solution('4\\n0000\\n0000\\n0000\\n0000') == '0'\nassert solution('4\\n0000\\n0000\\n0000\\n0000') == '0'\nassert solution('4\\n0000\\n0000\\n0000\\n0000') == '0'\nassert solution('4\\n0000\\n0000\\n0000\\n0000') == '0'\nassert solution('4\\n0000\\n0000\\n0000\\n0000') == '0'\nassert solution('4\\n0000\\n0000\\n0000\\n0000') == '0'\nassert solution('4\\n0000\\n0000\\n0000\\n0000') == '0'\nassert solution('4\\n0000\\n0000\\n0000\\n0000') == '0'\nassert solution('4\\n0000\\n0000\\n0000\\n0000') == '0'\nassert solution('4\\n0000\\n0000\\n0000\\n0000') == '0'\nassert solution('4\\n0000\\n0000\\n0000\\n0000') == '0'\nassert solution('4\\n0000\\n0000\\n0000\\n0000') == '0'\nassert solution('4\\n0000\\n0000\\n0000\\n0000') == '0'\nassert solution('4\\n0000\\n0000\\n0000\\n0000') == '0'\nassert solution('4\\n0000\\n0000\\n0000\\n00"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\") == \"1\\n0001\\n0001\\n0011\\n1111\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\nprint(\"Correct\")"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\") == \"1\\n0001\\n0001\\n0011\\n1111\"\nassert solution(\"4\\n1111\\n1111\\n1111\\n1111\") == \"6\\n0011\\n0011\\n0111\\n1101\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n0001\\n0001\\n0011\\n1110') == '1\\n0001\\n0001\\n0011\\n1111\\n', \"Test 1\"\nassert solution('4\\n1111\\n1111\\n1111\\n1111') == '6\\n0011\\n0011\\n0111\\n1101\\n', \"Test 2\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\nh 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\") == 2\nassert solution(\"4\\nh 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\") == 4"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\\n\"\n"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"h 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\") == \"2\"\nassert solution(\"h 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\") == \"4\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\\n\" # expected output: 2"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\") == 0\nassert solution(\"h 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\") == 2\nassert solution(\"h 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\") == 4"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\nh 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\") == \"2\"\nassert solution(\"4\\nh 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\") == \"4\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"h 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\") == \"2\"\nassert solution(\"h 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\") == \"4\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('h 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3') == '2\\n'\nassert solution('h 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3') == '4\\n'"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"The output {solution(input())} is different from the expected output {output()}\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\\n\"\nassert solution() == \"4\\n\"\nassert solution() == \"4\\n\"\nassert solution() == \"2\\n\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5') == '2\\n'\nassert solution('3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8') == '4\\n'"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\\n') == '2'\nassert solution('3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\\n') == '4'"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '2', \"Testcase 1 is invalid\"\n\nsolution()"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == expected\n\nfrom typing import List"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"4\\n\"\n"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\") == \"2\\n\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\") == \"4\\n\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\") == \"2\\n\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\") == \"4\\n\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\") == \"2\\n\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\") == \"4\\n\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\") == \"2\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\") == \"4\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Output the length of the longest sub-array so that each element in the sub-array appears exactly twice.\\n\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 2 3 3 4 2\\n\") == \"2\"\nassert solution(\"8\\n1 2 1 3 1 3 1 2\\n\") == \"4\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Output the length of the longest sub-array so that each element in the sub-array appears exactly twice.\\n\", \"Test Failed\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('8\\n1 2 1 3 1 3 1 2') == '4', \"The output should be '4'.\"\n\nsolution('6\\n1 2 3 3 4 2')"
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == \"2\"\nassert solution(sample_input_2) == \"4\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == \"2\"\nassert solution(sample_input_2) == \"4\"\n\nsample_input_1 = \"6\\n1 2 3 3 4 2\"\nsample_input_2 = \"8\\n1 2 1 3 1 3 1 2\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 2 3 3 4 2\") == 2, \"Output 1 incorrect.\"\nassert solution(\"8\\n1 2 1 3 1 3 1 2\") == 4, \"Output 2 incorrect.\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n1 2 3 3 4 2\\n\") == \"2\\n\"\nassert solution(\"8\\n1 2 1 3 1 3 1 2\\n\") == \"4\\n\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\") == \"4\\n0\\n\"\nassert solution(\"2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\") == \"4\\n2\\n\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i + 1} failed. Expected output: {expected_output}, but got {solution(input())}\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\\n') == '4\\n0\\n'\nassert solution('2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\\n') == '4\\n2\\n'\n"
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\") == \"4\\n0\\n\"\nassert solution(\"2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\") == \"4\\n2\\n\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\\n\") == \"4\\n0\\n\"\nassert solution(\"2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\\n\") == \"4\\n2\\n\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\\n0\\n\"\n"
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2\n\nfrom typing import List"
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\\n\") == \"4\\n0\\n\"\nassert solution(\"2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\\n\") == \"4\\n2\\n\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\\n') == '4\\n0\\n'\nassert solution('2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\\n') == '4\\n2\\n'"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2') == '1\\n'\nassert solution('0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2') == 'impossible\\n'"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2') == '1'\nassert solution('4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2') == 'impossible'"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\\n\") == \"1\\n\"\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\\n\") == \"impossible\\n\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\") == \"1\\n\"\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\") == \"impossible\\n\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\\n\"\n"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\\n\") == \"1\\n\"\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\\n\") == \"impossible\\n\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\") == \"1\"\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\") == \"impossible\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\") == 1\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\") == \"impossible\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\\n\") == \"1\\n\"\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\\n\") == \"impossible\\n\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == '''\n"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\\n') == '35\\n18\\n3\\n'\nassert solution('11 3\\n3 7 10\\n3\\n0 10\\n2 6\\n7 7\\n') == '8\\n2\\n1\\n'"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '35\\n18\\n3\\n8\\n2\\n1\\n'\n"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\\n\") == \"35\\n18\\n3\\n8\\n2\\n1\\n\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\\n') == '35\\n18\\n3\\n'\n\nassert solution('11 3\\n3 7 10\\n3\\n0 10\\n2 6\\n7 7\\n') == '8\\n2\\n1\\n'"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Solution is incorrect. Expected: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 5, \"Test failed\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1\\n2\\n3\\n4\\n\") == \"0\\n1\\n3\\n6\\n\", \"Test case 1\"\nassert solution(\"5\\n3\\n2\\n4\\n1\\n5\\n\") == \"0\\n1\\n2\\n4\\n6\\n\", \"Test case 2\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1\\n2\\n3\\n4\") == \"0\\n1\\n3\\n6\\n\\n0\\n1\\n2\\n4\\n6\\n\"\nassert solution(\"5\\n3\\n2\\n4\\n1\\n5\") == \"0\\n1\\n2\\n4\\n6\\n\\n0\\n1\\n2\\n4\\n6\\n\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4, 1, 2, 3, 4) == \"0\\n1\\n3\\n6\\n\"\nassert solution(5, 3, 2, 4, 1, 5) == \"0\\n1\\n2\\n4\\n6\\n\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1\\n2\\n3\\n4\\n\") == \"0\\n1\\n3\\n6\\n\"\nassert solution(\"5\\n3\\n2\\n4\\n1\\n5\\n\") == \"0\\n1\\n2\\n4\\n6\\n\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('sample_input1.txt', 'r')) == \"0\\n1\\n3\\n6\\n\"\nassert solution(open('sample_input2.txt', 'r')) == \"0\\n1\\n2\\n4\\n6\\n\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1\\n2\\n3\\n4\\n\") == \"0\\n1\\n3\\n6\\n\"\nassert solution(\"5\\n3\\n2\\n4\\n1\\n5\\n\") == \"0\\n1\\n2\\n4\\n6\\n\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"\"\"0\n1\n3\n6\"\"\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1\\n2\\n3\\n4\\n\") == \"0\\n1\\n3\\n6\\n\"\nassert solution(\"5\\n3\\n2\\n4\\n1\\n5\\n\") == \"0\\n1\\n2\\n4\\n6\\n\"\n\nSolution:\nWe will use a recursive approach to solve this problem. We will start by taking input for the number of nodes and then insert the numbers in order. Once we have inserted all the nodes, we will compute the depth of each node and print the values of $C$. \n\nLet's first define a recursive function `insert_numbers(stdin: str)` that takes input from the user and returns the output. This function will be used to insert the numbers in the binary search tree.\n\n```python\n"
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"0\\n1\\n3\\n6\\n\", \"Test case 1 failed\"\n\nassert solution() == \"0\\n1\\n2\\n4\\n6\\n\", \"Test case 2 failed\"\n\nassert solution() == \"0\\n1\\n2\\n4\\n6\\n\", \"Test case 3 failed\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == output1, f\"Expected {output1}, got {solution(input1)}\"\nassert solution(input2) == output2, f\"Expected {output2}, got {solution(input2)}\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '4 3 1 2\\n'\nassert solution() == '2 4 1 3\\n'\nassert solution() == '4 3 1 2\\n'\nassert solution() == '2 4 1 3\\n'\nassert solution() == '4 3 1 2\\n'\n"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin: str) == \"2 4 1 3\\n4 3 1 2\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2 4 1 3\"\nassert solution(input()) == \"4 3 1 2\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '2 4 1 3\\n4 3 1 2'\n"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt').read()) == \"2 4 1 3\\n4 3 1 2\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\") == \"2 4 1 3\"\nassert solution(\"0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\") == \"4 3 1 2\"\nassert solution(\"4 3 1 2\\n1 4 0 3\\n0 2 3 2\\n3 3 5 4\") == \"4 3 1 2\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\") == \"2 4 1 3\\n4 3 1 2\"\nassert solution(\"4\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\") == \"4 3 1 2\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_data) == expected_output, \"Expected output not found.\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == 'Theta wins', 'Input 1 does not satisfy the requirements'\nassert solution('89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49') == 'Theta wins', 'Input 2 does not satisfy the requirements'"
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == 'Theta wins', 'Expected \"Theta wins\", but got \"{}\"'.format(solution('23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5'))\n\nassert solution('89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49') == 'Theta wins', 'Expected \"Theta wins\", but got \"{}\"'.format(solution('89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49'))\n\nassert solution('') == 'Theta loses', 'Expected \"Theta loses\", but got \"{}\"'.format(solution(''))"
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\"\nassert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ51\") == \"Theta loses\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK498\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'charlatan\\n'"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'charlatan\\n'\nprint('All tests passed.')"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 2\\n1 charlatan 1\\n1 not charlatan 1') == ['charlatan']\nassert solution('2 1\\n1 and fabulist 1 fabulist 2') == ['fabulist']\nassert solution('1 3\\n1 and charlatan 1 charlatan 2\\n1 xor truther 1 truther 2') == ['fabulist', 'truther']"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"charlatan\", \"The solution should return the string 'charlatan'\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 2\\n1 charlatan 1\\n1 not charlatan 1\\n') == 'charlatan\\n'\nassert solution('2 1\\n1 and fabulist 1 fabulist 2\\n') == 'fabulist\\ntruther\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\n1 charlatan 1\\n1 not charlatan 1\") == \"charlatan\\n\"\n\nassert solution(\"2 1\\n1 and fabulist 1 fabulist 2\") == \"fabulist\\n\"\n\nassert solution(\"1 1\\n1 truther 1 charlatan 1\") == \"charlatan\\n\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n1 charlatan 1\\n1 not charlatan 1\\n\") == \"charlatan\\n\"\nassert solution(\"2 1\\n1 and fabulist 1 fabulist 2\\n\") == \"fabulist\\ntruther\\ndef solution(stdin: str) -> str: \\n    pass\\n\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 2\\n1 charlatan 1\\n1 not charlatan 1\\n') == ['charlatan']\nassert solution('2 1\\n1 and fabulist 1 fabulist 2\\n') == ['fabulist']\nassert solution('1 3\\n1 charlatan 1\\n1 charlatan 2\\n') == ['charlatan']\nassert solution('1 4\\n1 truther 1\\n1 charlatan 1\\n') == ['charlatan']\nassert solution('1 5\\n1 truther 1\\n1 fabulist 1\\n') == ['fabulist']\nassert solution('1 6\\n1 truther 1\\n1 charlatan 1\\n1 not charlatan 1\\n') == ['charlatan']"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == [\"charlatan\", \"fabulist\", \"truther\"]"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n1 charlatan 1\\n1 not charlatan 1\\n\") == [\"charlatan\"]\nassert solution(\"2 1\\n1 and fabulist 1 fabulist 2\\n\") == [\"fabulist\", \"truther\", \"def\"]"
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == output, f\"Test Case Failed. Expected output: '{output}', but got: '{stdin}'\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\") == \"4\"\nassert solution(\"3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\") == \"3\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\") == \"4\\n\"\nassert solution(\"3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\") == \"3\\n\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == \"4\", \"First example\"\nassert solution(sample_input2) == \"3\", \"Second example\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"The function should return {expected_output}, but it returns {solution(input())}.\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_1) == output_1, \"The solution for sample input 1 is incorrect.\"\nassert solution(input_2) == output_2, \"The solution for sample input 2 is incorrect.\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\\n\") == \"4\\n\", \"The solution is incorrect.\"\nassert solution(\"3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\\n\") == \"3\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\\n\") == \"4\"\nassert solution(\"1.00 5.00\\n2.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\\n\") == \"3\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Input {input()} should produce output {output}, but got {solution(input())}\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output() for input, output in zip(inputs, outputs)\n"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n2 5 2\nR..?.\n.X...\n100 100 7 100 8\n''') == '16'\n\nassert solution('''\n2 3 1\nX..\n.?.\n10 1000 1\n''') == '10'"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 5 2\\nR..?\\n.X...\\n100 100 7 100 8\\n\") == \"16\"\nassert solution(\"2 3 1\\nX..\\n.?.\\n10 1000 1\\n\") == \"10\""
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8\") == \"16\"\nassert solution(\"2 3 1\\nX..\\n.?.\\n10 1000 1\") == \"10\""
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"16\\n\"\n"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8\") == \"16\"\nassert solution(\"2 3 1\\nX..\\n.?.\\n10 1000 1\") == \"10\"\n"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Test case {test_case} failed. Expected output: {expected_output}, but got: {solution(stdin=input())}\"\nfor test_case in range(1, 3):\n    input_str = input()\n    expected_output = input()\n    actual_output = solution(stdin=input_str)\n    print(f\"Test case {test_case}:\")\n    print(f\"Expected output: {expected_output}\")\n    print(f\"Actual output: {actual_output}\")\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8') == '16'\nassert solution('2 3 1\\nX..\\n.?.\\n10 1000 1') == '10'"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 5 2\\nR..?\\n.X...\\n100 100 7 100 8') == '16'\nassert solution('2 3 1\\nX..\\n.?.\\n10 1000 1') == '10'"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n0 4 4\\n1 5 1\\n2 6 1\") == \"1.414\\n\"\nassert solution(\"6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\") == \"5.657\\n\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3\\n0 4 4\\n1 5 1\\n2 6 1\\n') == '1.414'\nassert solution('6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\\n') == '5.657'"
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'output'"
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3\\n0 4 4\\n1 5 1\\n2 6 1\\n') == '1.414'\nassert solution('6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\\n') == '5.657'"
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1.414\"\nassert solution(open(\"input2.txt\", \"r\")) == \"5.657\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n0 4 4\\n1 5 1\\n2 6 1\") == \"1.414\"\nassert solution(\"6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\") == \"5.657\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\n0 4 4\\n1 5 1\\n2 6 1') == '1.414'\nassert solution('6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10') == '5.657'"
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    3 3\n    0 4 4\n    1 5 1\n    2 6 1\n    \"\"\"\n) == \"1.414\"\n\nassert solution(\n    \"\"\"\n    6 11\n    0 0 1\n    0 1 2\n    1 0 3\n    1 1 4\n    5 5 1\n    20 20 10\n    \"\"\"\n) == \"5.657\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt').read()) == \"1.414\\n\"\nassert solution(open('input2.txt').read()) == \"5.657\\n\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1.0\\n\"\nassert solution(stdin) == \"0.433\\n\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 1 1 1 1\") == 1.0\nassert solution(\"3 1 1 1\") == 0.433"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('') == 0\n\nn = int(stdin.readline())\nsegments = list(map(int, stdin.readline().split()))\n\nmax_area = 0\nfor i in range(n):\n    a = segments[i]\n    b = segments[(i + 1) % n]\n    area = ((a + b) // 2) * (a + b) / 2\n    max_area = max(max_area, area)\n\nprint(max_area)\n"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"0.433\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 1 1 1 1\") == 1.0, \"1.0\"\nassert solution(\"3 1 1 1\") == 0.433, \"0.433\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 1 1 1 1') == '1.0'\nassert solution('3 1 1 1') == '0.433'"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1.0\"\nprint(\"1.0\")"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Solution: {solution(input())}, Expected Output: {output()}\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == output1, f\"Incorrect output for sample input 1: {solution(input1)}\"\nassert solution(input2) == output2, f\"Incorrect output for sample input 2: {solution(input2)}\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\") == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\"\nassert solution(\"8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15\") == \"36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3\"\n"
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\\n\") == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\\n\"\nassert solution(\"8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15\\n\") == \"36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3\\n\"\n"
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"You can't travel through a plant in the negative direction.\"\nassert solution == \"You can't travel through a plant in the negative direction.\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\") == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\"\nassert solution(\"8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15\") == \"36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3\"\n"
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''6 5\n1 1 5\n2 1 5\n1 2 4\n2 3 5\n3 2 30\n3 3 5''') == '''5\n4\n1 1\n2 1\n2 3\n3 3\n'''\n\nassert solution('''8 10\n1 1 15\n2 2 30\n1 2 8\n2 1 7\n3 2 8\n2 3 7\n4 2 100\n3 3 15''') == '''36\n5\n1 1\n1 2\n2 2\n3 2\n3 3\n'''"
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\") == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\\n\"\nassert solution(\"8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15\") == \"36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3\\n\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"\"\"\n5\n4\n1 1\n2 1\n2 3\n3 3\n\"\"\"\n\nassert solution() == \"\"\"\n36\n5\n1 1\n1 2\n2 2\n3 2\n3 3\n\"\"\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 'Solution is correct', \"Solution is incorrect\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2 1\\n2 1\\n1 2\\n\") == \"1\\n\"\nassert solution(\"1\\n3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"3\\n\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"2 1\n2 1\n1 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"3 2\n2 1 3\n1 3\n2 3\n\"\"\") == \"3\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\\n\") == \"1\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"3\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin: str) == output, f\"Test failed with input {stdin}, expected output {output}\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"Output: 1\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\\n\") == \"1\\n\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"3\\n\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\\n\") == \"1\\n\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"3\\n\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\"\n\nassert solution() == \"3\"\n\nassert solution() == \"2\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 1\\n2 1\\n1 2\\n2 1\\n2 3\\n1 3\\n2 3\\n') == '1\\n'\nassert solution('3 2\\n2 1 3\\n1 3\\n2 3\\n') == '3\\n'"
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\\n\") == \"1\\n\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"3\\n\"\nassert solution(\"2 2\\n1 2 3\\n3 2\\n\") == \"2\\n\""
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\") == -1\nassert solution(\"6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\") == 5\n"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"5 8\n1 4\n4 5\n1 5\n1 2\n1 3\n2 3\n3 5\n2 5\"\"\") == -1\n\nassert solution(\"\"\"6 5\n2 4\n3 5\n1 5\n3 6\n1 6\"\"\") == 5"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\\n\") == -1\nassert solution(\"6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\\n\") == 5"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(stdin=input())}\""
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"5\\n\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"5\\n\"\n"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == -1"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5') == 1\nassert solution('6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6') == 5\n\nfrom typing import List"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == -1, \"Input 1 should return -1\"\n\nassert solution() == 5, \"Input 2 should return 5\""
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('day_09/example_input_1.txt', 'r')) == '-1'\nassert solution(open('day_09/example_input_2.txt', 'r')) == '5'"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"4.00\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 1\\n1 1\\n5 1\\n5 5\\n4 2\\n\") == 4.0\nassert solution(\"6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\\n\") == 9.0"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 1\\n1 1\\n5 1\\n5 5\\n4 2\\n\") == 4.00, \"Output not matching.\"\nassert solution(\"6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\\n\") == 9.00, \"Output not matching.\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 1\\n1 1\\n5 1\\n5 5\\n4 2\") == \"4.00\"\nassert solution(\"6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\") == \"9.00\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4 1\n1 1\n5 1\n5 5\n4 2\n\"\"\") == \"4.00\"\n\nassert solution(\"\"\"\n6 3\n-8 -8\n0 -1\n8 -8\n1 0\n0 10\n-1 0\n\"\"\") == \"9.00\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 1\\n1 1\\n5 1\\n5 5\\n4 2\\n') == '4.00', 'The output is incorrect.'\nassert solution('6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\\n') == '9.00', 'The output is incorrect.'\n"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"4.00\\n\", \"The expected output should be 4.00\"\nprint(\"The expected output should be 4.00\")"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output\nprint(f\"{output:.2f}\")"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n\") == [\"2 1 2 3\", \"1 2 1 2\", \"2 1 2 3\", \"1 2 1 2\"]\nassert solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n\") == [\"3 1 1\", \"1 3 1\", \"1 1 1\"]"
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\"\nassert solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\") == \"3 1 1\\n1 3 1\\n1 1 1\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n') == '2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n'\nassert solution('3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n') == '3 1 1\\n1 3 1\\n1 1 1\\n'"
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, \"Incorrect output\"\n"
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test failed. Input: {}, Output: {}, Expected Output: {}\".format(input(), solution(input()), output())"
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n\"\nassert solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n\") == \"3 1 1\\n1 3 1\\n1 1 1\\n\"\n"
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n') == '2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n'\nassert solution('3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n') == '3 1 1\\n1 3 1\\n1 1 1\\n'\n\nsolution('4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n') == '2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n'\nsolution('3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n') == '3 1 1\\n1 3 1\\n1 1 1\\n'"
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n4 3 2\nPAINT 2 0 0 3 3\nPAINT 3 0 3 3 3\n''') == '''\n2 1 2 3\n1 2 1 2\n2 1 2 3\n1 2 1 2\n'''\n\nassert solution('''\n3 3 4\nPAINT 3 0 0 1 1\nSAVE\nPAINT 2 1 1 2 2\nLOAD 1\n''') == '''\n3 1 1\n1 3 1\n1 1 1\n'''"
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Mismatch\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\"\n"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\") == \"1 4 2 3\"\nassert solution(\"5 1\") == \"-1\"\n"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n5 1\\n\") == \"1 4 2 3\\n-1\"\nassert solution(\"4 3\\n5 1\\n4 3\\n5 1\\n\") == \"1 4 2 3\\n-1\"\nassert solution(\"4 2\\n5 1\\n4 3\\n5 1\\n\") == \"1 4 2 3\\n-1\"\nassert solution(\"4 2\\n5 1\\n4 3\\n5 1\\n4 3\\n5 1\\n\") == \"1 4 2 3\\n-1\"\nassert solution(\"4 2\\n5 1\\n4 3\\n5 1\\n4 3\\n5 1\\n4 3\\n5 1\\n4 3\\n5 1\\n\") == \"1 4 2 3\\n-1\"\nassert solution(\"4 2\\n5 1\\n4 3\\n5 1\\n4 3\\n5 1\\n4 3\\n5 1\\n4 3\\n5 1\\n4 3\\n5 1\\n4 3\\n5 1\\n\") == \"1 4 2 3\\n-1\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"example_input.txt\", \"r\")) == \"1 4 2 3\"\nassert solution(open(\"example_input_2.txt\", \"r\")) == \"-1\"\nassert solution(open(\"example_input_3.txt\", \"r\")) == \"1 4 2 3\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n\") == \"1 4 2 3\"\nassert solution(\"5 1\\n\") == \"-1\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == -1"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\") == \"1 4 2 3\"\nassert solution(\"5 1\") == \"-1\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '1 4 2 3'"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([3, 3, 3, 3, 3, 2, 2, 2, 2, 2]) == \"1 2 3 4 3\"\nassert solution([3, 3, 2, 2, 2]) == \"1 2 3\"\nassert solution([3, 3, 2, 2, 2, 1]) == \"1 2 3\"\nassert solution([3, 3, 2, 2, 2, 1, 1, 1]) == \"1 2 3\"\nassert solution([3, 3, 2, 2, 2, 1, 1, 1, 1, 1]) == \"1 2 3\"\nassert solution([3, 3, 2, 2, 2, 1, 1, 1, 1, 1, 1]) == \"1 2 3\"\nassert solution([3, 3, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1]) == \"1 2 3\"\nassert solution([3, 3, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1]) == \"1 2 3\"\nassert solution([3, 3, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1]) == \"1 2 3\"\nassert solution([3, 3, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]) == \"1 2 3\"\nassert solution([3, 3, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]) == \"1 2 3\"\nassert solution([3, 3, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]) == \"1 2 3\"\nassert solution([3, 3, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]) == \"1 2 3\"\nassert solution([3, 3, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]) == \"1 2 3\"\nassert solution([3, 3, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]) == \"1 2 3\"\nassert solution([3, 3, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]) == \"1 2 3\"\nassert solution([3, 3, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]) == \"1 2 3\"\nassert solution([3, 3, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]) == \"1 2 3\"\nassert solution([3, 3, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Incorrect output: {solution(input())}, expected {expected_output}\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n4 2\\n2 1\\n1 3\\n\") == \"1\\n\"\nassert solution(\"4\\n5 0\\n2 6\\n8 6\\n5 7\\n\") == \"0\\n\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test failed: {output}!= {solution(input())}\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == '1\\n'\n\nfrom collections import Counter"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == expected_output, f\"Test failed for input {input_str}\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 1"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\\n\", \"Sample Output 1: 1\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == '1\\n'\nassert solution(open('input.txt', 'r')) == '0\\n'"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n4 2\\n2 1\\n1 3\") == 1"
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\") == \"4 140\\n\", \"Test 1 failed\"\nassert solution(\"2 1 0 1\\n0 1 1000 100\") == \"1000 100000\\n\", \"Test 2 failed\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\\n') == '4 140\\n'\n\nassert solution('2 1 0 1\\n0 1 1000 100\\n') == '1000 100000\\n'"
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == \"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\\n\"\nassert solution(input2) == \"1000 100000\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\\n\") == \"4 140\"\nassert solution(\"2 1 0 1\\n0 1 1000 100\\n\") == \"1000 100000\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\") == \"4 140\"\nassert solution(\"2 1 0 1\\n0 1 1000 100\") == \"1000 100000\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4 4 0 3\n0 1 4 10\n1 2 2 10\n0 2 4 30\n2 3 4 10\n\"\"\") == \"4 140\\n\"\n\nassert solution(\"\"\"\n2 1 0 1\n0 1 1000 100\n\"\"\") == \"1000 100000\\n\"\n\nassert solution(\"\"\"\n4 4 0 3\n0 1 4 10\n1 2 2 10\n0 2 4 30\n2 3 4 10\n\"\"\") == \"4 140\\n\"\n\nassert solution(\"\"\"\n2 1 0 1\n0 1 1000 100\n\"\"\") == \"1000 100000\\n\"\n\nassert solution(\"\"\"\n4 4 0 3\n0 1 4 10\n1 2 2 10\n0 2 4 30\n2 3 4 10\n\"\"\") == \"4 140\\n\"\n\nassert solution(\"\"\"\n2 1 0 1\n0 1 1000 100\n\"\"\") == \"1000 100000\\n\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\") == \"4 140\\n\", \"Expected output: '4 140\\n' but got: '{}'\".format(solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\"))\n\nassert solution(\"2 1 0 1\\n0 1 1000 100\") == \"1000 100000\\n\", \"Expected output: '1000 100000\\n' but got: '{}'\".format(solution(\"2 1 0 1\\n0 1 1000 100\"))"
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\") == \"4 140\"\nassert solution(\"2 1 0 1\\n0 1 1000 100\") == \"1000 100000\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\\n\") == \"4 140\"\nassert solution(\"2 1 0 1\\n0 1 1000 100\\n\") == \"1000 100000\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"impossible\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20\\n') == 3\nassert solution('8 2\\n8 3\\n5 7\\n') == 'impossible'"
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20') == 3\nassert solution('8 2\\n8 3\\n5 7') == 'impossible'"
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20\") == \"3\\n\", \"Invalid output\"\nassert solution(\"8 2\\n8 3\\n5 7\") == \"impossible\\n\", \"Invalid output\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    100 7\n    1 50\n    50 70\n    70 90\n    90 40\n    20 60\n    60 80\n    80 20\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n    8 2\n    8 3\n    5 7\n    \"\"\"\n) == \"impossible\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20\\n\"\n) == \"3\\n\"\n\nassert solution(\n    \"8 2\\n8 3\\n5 7\\n\"\n) == \"impossible\\n\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"impossible\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20') == '3'\nassert solution('8 2\\n8 3\\n5 7') == 'impossible'"
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20\") == 3\nassert solution(\"8 2\\n8 3\\n5 7\") == \"impossible\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"120\") == \"5\"\nassert solution(\"51090942171709440000\") == \"21\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(120) == 5, \"The solution is incorrect. It should be 5.\"\nassert solution(51090942171709440000) == 21, \"The solution is incorrect. It should be 21.\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(120) == 5\nassert solution(51090942171709440000) == 21"
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(120) == 5, \"Incorrect output 1\"\nassert solution(51090942171709440000) == 21, \"Incorrect output 2\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(120) == 5, \"Sample Input 1 is incorrect.\"\nassert solution(51090942171709440000) == 21, \"Sample Input 2 is incorrect.\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"120\") == \"5\"\nassert solution(\"51090942171709440000\") == \"21\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(120) == 5, \"The output should be 5\"\nassert solution(51090942171709440000) == 21, \"The output should be 21\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"120\") == \"5\", \"Example 1\"\nassert solution(\"51090942171709440000\") == \"21\", \"Example 2\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(120) == 5, \"Expected output: 5, but got: \" + str(solution(120))\n\nassert solution(51090942171709440000) == 21, \"Expected output: 21, but got: \" + str(solution(51090942171709440000))"
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(120) == 5\nassert solution(51090942171709440000) == 21"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'Output the number of ways.\\n'"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10 1 2') == '45'\nassert solution('3 3 3') == '10'"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 45, \"The correct answer is 45\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 1 2\") == 45\nassert solution(\"3 3 3\") == 10"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Output the number of ways. As the number of ways could be large, output them modulo 10^6 + 7.\\n\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 1 2\") == \"45\\n\", \"Sample Input 1\"\nassert solution(\"3 3 3\") == \"10\\n\", \"Sample Input 2\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 1 2\") == \"45\\n\"\nassert solution(\"3 3 3\") == \"10\\n\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '45'"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"45\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n\") == \"18\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n\") == \"20\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n10\\n\") == \"impossible\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"impossible\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n10\\n') == '18'\nassert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n') == '20'\nprint(\"All tests passed.\")"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"impossible\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"TODO: implement solution\"\n"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n\") == \"18\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n\") == \"20\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '18', \"Error 1: Incorrect output\"\n\nfrom typing import List"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n10\") == \"18\\n\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\") == \"20\\n\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    5\n    3 1\n    4 1\n    5 9\n    2 6\n    5 3\n    5\n    ''') == '20'"
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 5 10\\n7 8 2\\n\") == \"3\\n\"\nassert solution(\"3\\n-1 -1 -1\\n5 5 5\\n10 10 10\\n\") == \"11\\n\"\nassert solution(\"5\\n2 4 6\\n-3 -5 7\\n8 10 12\\n\") == \"17\\n\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == '3\\n'\nassert solution(sample_input_2) == '11\\n'"
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3\\n\"\nassert solution(open(\"input2.txt\", \"r\")) == \"11\\n\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1\\n1 5 10\\n7 8 2\\n2\\n3\\n-1 -1 -1\\n5 5 5\\n10 10 10\\n3') == '3\\n11\\n'"
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    2\n    1 5 10\n    7 8 2\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n    3\n    -1 -1 -1\n    5 5 5\n    10 10 10\n    \"\"\"\n) == \"11\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 5 10\\n7 8 2\\n3\\n-1 -1 -1\\n5 5 5\\n10 10 10\\n\") == \"3\\n\"\nassert solution(\"3\\n-1 -1 -1\\n5 5 5\\n10 10 10\\n\") == \"11\\n\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1 5 10\\n7 8 2\\n2\\n3\\n-1 -1 -1\\n5 5 5\\n10 10 10\") == \"3\\n\", \"Output is incorrect.\"\nassert solution(\"2\\n1 5 10\\n7 8 2\\n2\\n3\\n-1 -1 -1\\n5 5 5\\n10 10 10\") == \"3\\n\", \"Output is incorrect.\"\nassert solution(\"3\\n-1 -1 -1\\n5 5 5\\n10 10 10\") == \"11\\n\", \"Output is incorrect.\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 5 10\\n7 8 2\") == \"3\\n\"\nassert solution(\"3\\n-1 -1 -1\\n5 5 5\\n10 10 10\") == \"11\\n\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n1 5 10\\n7 8 2\\n1\\n-1 -1 -1\\n5 5 5\\n10 10 10') == '3\\n11\\n'\nprint('All tests passed.')"
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == '3\\n'\nassert solution(open('sample_input1.txt', 'r')) == '3\\n'\nassert solution(open('sample_input2.txt', 'r')) == '11\\n'"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2\"\n"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"0\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"The output '{solution(stdin)}' does not match the expected output '{expected}'.\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"3 1\\n110\\n011\\n4 2\\n1000\\n1000\\n0000\\n0010\\n\") == 2\nassert solution(stdin=\"3 1\\n110\\n011\\n4 2\\n1000\\n1000\\n0000\\n0010\\n\") == 0"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"Output\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '2\\n'"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n110\\n011\\n\") == 2\nassert solution(\"4 2\\n1000\\n1000\\n0000\\n0010\\n\") == 0"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"your solution here\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('sample_input1.txt', 'r')) == 1\nassert solution(open('sample_input2.txt', 'r')) == 5"
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '1', \"Your solution is incorrect\"\n"
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\", \"Solution is incorrect\"\nprint(\"Solution is correct\")"
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2\\n\") == \"1\\n\", \"Test case 1 failed\"\nassert solution(\"3\\n1 3 2\\n2\\n\") == \"5\\n\", \"Test case 2 failed\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test case {case_num} failed. Expected output: {expected_output}, got: {solution(input())}\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"The solution is incorrect. Expected output: {expected_output}, but got: {solution(stdin)}\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n1 3 2\\n2\\n\") == \"1\\n\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 1, \"Young Mirko has been buying voodoo dolls lately. Considering that he is very interested in the cheapest purchase possible, he has been tracking the prices of voodoo dolls each day. His price list consists of doll prices in the last 3 days, where doll price a_ i represents the price of a doll i days ago.\"\n\nassert solution(3) == 1, \"Young Mirko has been buying voodoo dolls lately. Considering that he is very interested in the cheapest purchase possible, he has been tracking the prices of voodoo dolls each day. His price list consists of doll prices in the last 3 days, where doll price a_ i represents the price of a doll i days ago.\"\n\nassert solution(2) == 5, \"Young Mirko has been buying voodoo dolls lately. Considering that he is very interested in the cheapest purchase possible, he has been tracking the prices of voodoo dolls each day. His price list consists of doll prices in the last 3 days, where doll price a_ i represents the price of a doll i days ago.\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\\n\", \"Young Mirko has been buying voodoo dolls lately. Considering that he is very interested in the cheapest purchase possible, he has been tracking the prices of voodoo dolls each day. His price list consists of doll prices in the last 3 days, where doll price 3 represents the price of a doll 3 days ago. He has noticed a connection between the average doll price in a sequence of consecutive days and the price on the following day. He wants to test his hunch and is puzzled by a very interesting question: \\\"For a given P, how many different consecutive subsequences in the last 3 days are there, when the average doll price was greater than or equal to P?\\\"Two consecutive subsequences are considered different if their beginnings or ends are different. The first and only line of output must contain the answer to Mirko\u2019s question for a given P.\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1\\n\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"1 100 20\") == \"0\"\nassert solution(stdin=\"10 10 1\") == \"19\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'crash'"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 0, \"The program does not crash when executed\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"1 100 20\") == \"0\\n\"\nassert solution(stdin=\"10 10 1\") == \"19\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin: str) == \"crashing line\"\n"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abc\") == \"c\"\nassert solution(\"def\") == \"f\"\nassert solution(\"ghi\") == \"g\"\nassert solution(\"jkl\") == \"i\"\nassert solution(\"mno\") == \"m\"\nassert solution(\"pqr\") == \"p\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 100 20\") == 0"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin: str) == \"0\"\n\nimport time"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution.__name__ =='solution', 'Solution must have name \"solution\"'\n\nimport time"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"0\", \"Output the worst-case time to find the crashing line when using an optimal strategy.\"\n\nfrom typing import List"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\nclassa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0') == 'SHIP IT'\nassert solution('4\\na b c d\\na 1\\nimport d, b, c\\nb 2\\nimport d\\nimport c\\nc 1\\nimport c\\nd 0') == 'c'\nassert solution('5\\nimport d, b, c\\nb 2\\nimport d\\nimport c\\nc 1\\nimport c\\nd 0') == 'c'"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == \"c\"\nassert solution(sample_input_2) == \"SHIP IT\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"SHIP IT\", \"Expected SHIP IT but got {}\".format(solution(stdin))"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"a b c d\\na 1\\nimport d, b, c\\nb 2\\nimport d\\nimport c\\nc 1\\nimport c\\nd 0\\n\") == \"c\\n\", \"Your solution is incorrect.\"\n\nassert solution(\"classa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\\n\") == \"SHIP IT\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input1.txt\", \"r\")) == \"c\"\nassert solution(open(\"input2.txt\", \"r\")) == \"SHIP IT\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"a b c d\\na 1\\nimport d, b, c\\nb 2\\nimport d\\nimport c\\nc 1\\nimport c\\nd 0\") == \"c\\n\"\nassert solution(\"classa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\") == \"SHIP IT\\n\"\n\nsolution(\"classa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\") == \"SHIP IT\\n\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('sample_input.txt')) == 'SHIP IT'\n"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\").read()) == \"SHIP IT\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'c'"
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5+3+x\\n9 10\") == \"1\\n\"\nassert solution(\"20+3+x\\n0 5\") == \"2\\n\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test case failed\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5+3+x\\n9 10\") == \"1\", \"Solution 1 should return 1.\"\nassert solution(\"20+3+x\\n0 5\") == \"2\", \"Solution 2 should return 2.\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1\\n\"\n"
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5+3+x\") == \"1\"\nassert solution(\"20+3+x\") == \"2\"\nassert solution(\"5+3-x\") == \"1\"\nassert solution(\"5*3*x\") == \"0\"\nassert solution(\"5+3*x\") == \"1\"\nassert solution(\"2*3*x\") == \"6\"\nassert solution(\"5+3*x*x\") == \"1\"\nassert solution(\"5+3*x*x*x\") == \"1\"\nassert solution(\"5+3*x*x*x*x\") == \"1\"\nassert solution(\"5+3*x*x*x*x*x\") == \"1\"\nassert solution(\"5+3*x*x*x*x*x*x\") == \"1\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5+3+x\\n9 10\") == \"1\"\nassert solution(\"20+3+x\\n0 5\") == \"2\"\n"
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5+3+x\\n9 10\") == \"1\", \"Invalid input 1\"\nassert solution(\"20+3+x\\n0 5\") == \"2\", \"Invalid input 2\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\", \"Incorrect answer\"\n"
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5+3+x\") == \"1\\n\", \"Your solution is incorrect. Expected 1, got: {}\".format(solution(\"5+3+x\"))\nassert solution(\"20+3+x\") == \"2\\n\", \"Your solution is incorrect. Expected 2, got: {}\".format(solution(\"20+3+x\"))"
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_str=\"5+3+x\\n9 10\") == \"1\"\nassert solution(input_str=\"20+3+x\\n0 5\") == \"2\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 10\\n0 15\\n5 20') == 'yes'\nassert solution('2 10\\n1 15\\n0 20') == 'no'"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Test {test_case} failed. Expected output: '{expected}', but got: '{solution(input())}'\"\nfor test_case in range(1, 3):\n    n, t = map(int, input().split())\n    a, b = map(int, input().split())\n    expected = 'yes'\n    actual = solution(input())\n    if actual == expected:\n        print(f\"Test {test_case} passed.\")\n    else:\n        print(f\"Test {test_case} failed. Expected output: '{expected}', but got: '{actual}'\")"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"yes\"\n"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"yes\"\nassert solution() == \"no\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == \"yes\"\nassert solution(open('input.txt', 'r')) == \"no\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(), \"Sample Input 2\"\n"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(r'Sample Input 1\\n2 10\\n0 15\\n5 20\\nSample Output 1\\nyes\\n') == 'yes'\nassert solution(r'Sample Input 2\\n2 10\\n1 15\\n0 20\\nSample Output 2\\nno\\n') == 'no'\n\nfrom typing import List"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 10\\n0 15\\n5 20\\n') == 'yes\\n'\nassert solution('2 10\\n1 15\\n0 20\\n') == 'no\\n'"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed: {expected_output}, but got {solution(stdin)}\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == 'yes', 'Sample Input 1 failed'\nassert solution(sample_input_2) == 'no', 'Sample Input 2 failed'"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green\\n\") == 0.25\nassert solution(\"4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red\\n\") == 0"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green') == '0.25'"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green\\n4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red') == '0.25'\n"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, but got: {solution(stdin)}\""
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green') == '0.25'\nassert solution('4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red') == '0'"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n4 4 4\n3\n2 green\n18 yellow\n34 red\n5 green\n''') == '0.25\\n'\n\nassert solution('''\n4 4 4\n4\n2 green\n6 yellow\n10 red\n14 green\n4 red\n''') == '0\\n'"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == 0.25\nassert solution(open('input.txt', 'r')) == 0.0\n"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"0.25\"\n"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green\") == 0.25\nassert solution(\"4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red\") == 0.0"
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Test failed. Output: '{solution(input())}', Expected: '{output}'\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"3\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n4 3\") == \"inf\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n3\\n1\\n4\\n3\\n2\\n4\\n2\\n5\\n6\\n6\\n5\\n3\\n4\\n4\\n3\\n\") == \"3\"\nassert solution(\"1\\n3\\n1\\n4\\n3\\n2\\n4\\n2\\n5\\n6\\n6\\n5\\n3\\n4\\n4\\n3\\n\") == \"inf\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n\") == \"3\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n\") == \"inf\"\n\nfrom collections import defaultdict\nfrom itertools import combinations"
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"3\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n4 3\") == \"inf\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"3\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"inf\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    6 7\n    1 3\n    1 4\n    3 2\n    4 2\n    5 6\n    6 5\n    3 4\n    4 3\n    \"\"\"\n) == 3\n\nassert solution(\n    \"\"\"\n    6 8\n    1 3\n    1 4\n    3 2\n    4 2\n    5 6\n    6 5\n    3 4\n    4 3\n    \"\"\"\n) == \"inf\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"3\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"inf\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == \"4\\n\", \"Sample Input 1\"\nassert solution(input2) == \"2\\n\", \"Sample Input 2\"\n\nfrom typing import List"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Test failed. Expected '{expected}', got '{solution(stdin)}'.\"\n"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == '4', 'Incorrect output for sample input 1'\nassert solution(sample_input2) == '2', 'Incorrect output for sample input 2'"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\") == \"4\"\nassert solution(\"12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\\n\") == \"2\"\n"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 4\\n1 2 3 4\\n') == 4\nassert solution('12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\\n') == 2"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"4\"\n\nfrom typing import List"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 4\\n1 2 3 4') == '4\\n'\nassert solution('12 3\\n2 3 4 5 6 7 4 7 8 8 12 12') == '2\\n'"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, \"Test failed.\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n1 2 3 4\") == \"4\\n\"\nassert solution(\"12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\") == \"2\\n\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == 'Output 1: 4\\n'\nassert solution(open('sample_input.txt', 'r')) == 'Output 2: 2\\n'"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 'hoose\\nnoises\\nnoise\\n', \"The output is incorrect.\""
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n5\nhoose\nhose\nnose\nnoises\nnoise\n''') == '''\nhoose\nnoises\nnoise\n'''\n\nassert solution('''\n4\nhose\nhoose\noose\nmoose\n''') == '''\nhoose\nmoose\n"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"hoose\\nhose\\nose\\noises\\noise\\n\") == \"hoose\\noises\\noise\"\nassert solution(\"hoose\\nhose\\nose\\noises\\noise\\n\") == \"hoose\\noises\\noise\""
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\nhoose\\nhoese\\nnose\\nnoises\\nnoise\\n\") == \"hoose\\noises\\noise\\n\"\nassert solution(\"4\\nhose\\nhoese\\noose\\nmoose\\n\") == \"hoose\\nmoose\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    5\n    hoose\n    hose\n    nose\n    noises\n    noise\n    \n''') == ['hoose', 'noises', 'noise']\n\nassert solution('''\n    4\n    hose\n    hoose\n    oose\n    moose\n''') == ['hoose','moose']"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\nhoose\\nhose\\nnose\\nnoises\\nnoise\") == \"hoose\\noises\\noise\\n\"\nassert solution(\"4\\nhose\\nhoose\\oose\\moose\") == \"hoose\\moose\\n\"\nassert solution(\"1\\na\\nb\\nc\\nd\") == \"a\\nb\\nc\\nd\"\nassert solution(\"3\\napple\\nbanana\\npineapple\") == \"apple\\npineapple\\npineapple\\npineapple\"\nassert solution(\"10\\na\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\\nk\\nl\\nm\\nn\\no\\np\\tq\\tr\\ts\\tt\\u00f1\\u00f2\\u00f3\\u00f4\\u00f5\\u00f6\\u00f7\\u00f8\\u00f9\\u00fa\\u00fb\\u00fc\\u00fd\\u00fe\\u00ff\") == \"a\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\\nk\\nl\\nm\\nn\\no\\np\\tq\\tr\\ts\\tt\\u00f1\\u00f2\\u00f3\\u00f4\\u00f5\\u00f6\\u00f7\\u00f8\\u00f9\\u00fa\\u00fb\\u00fc\\u00fd\\u00fe\\u00ff\\n\""
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt').read()) == 'hoose\\nnoises\\nnoise'\n"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"hoose\") == \"hose\"\nassert solution(\"hose\") == \"hose\"\nassert solution(\"nose\") == \"noises\"\nassert solution(\"noises\") == \"noises\"\nassert solution(\"noise\") == \"noise\"\n"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(read_input()) == 'hoose\\nnoises\\nnoise'"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '''\nhoose\nnoises\nnoise\n'''"
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n3\\n2 3\\n4\") == \"2\\n2\\n5\\n\"\nassert solution(\"2 3\\n4\") == \"0\\n16\\n8\\n\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == output1, f\"Test 1 failed: {solution(input1)}!= {output1}\"\nassert solution(input2) == output2, f\"Test 2 failed: {solution(input2)}!= {output2}\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"sample_input.txt\").read()) == \"2\\n2\\n5\\n\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n3\\n\") == \"2\\n2\\n5\\n\"\nassert solution(\"2 3\\n4\\n\") == \"0\\n16\\n8\\n\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 1\\n3\\n') == '2\\n2\\n5\\n', \"Input 1\"\nassert solution('2 3\\n4\\n') == '0\\n16\\n8\\n', \"Input 2\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Test failed. Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('sample_input_1.txt', 'r').read()) == '2\\n2\\n5\\n'\nassert solution(open('sample_input_2.txt', 'r').read()) == '0\\n16\\n8\\n'"
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r'1 1\\n3') == 2\nassert solution(r'2 3\\n4') == 0\nassert solution(r'10 10\\n5') == 5"
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n3\") == \"2\\n2\\n5\\n\"\nassert solution(\"2 3\\n4\") == \"0\\n16\\n8\\n\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected, f\"Expected solution: {expected}, got: {solution}\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"44.72135955\"\nassert solution() == \"68.52419365\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Test case {i+1} failed: {output()}!= {solution(input())}\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n\"\n                 \"10 10 5\\n\"\n                 \"20 20 10\\n\"\n                 \"20 10 5\\n\"\n                 \"0 10 10\") == \"44.72135955\"\n\nassert solution(\"2\\n\"\n                 \"50 45 45\\n\"\n                 \"20 20 10\\n\"\n                 \"20 10 5\\n\"\n                 \"0 10 10\") == \"68.52419365\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"The car takes 44.72135955 seconds to reach the end of the road.\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == \"44.72135955\"\nassert solution(sample_input2) == \"68.52419365\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    1\n    50 45 45\n    \"\"\"\n) == \"68.52419365\\n\"\n\nassert solution(\n    \"\"\"\n    2\n    50 45 45\n    \"\"\"\n) == \"68.52419365\\n\"\n\nassert solution(\n    \"\"\"\n    3\n    1 2 1\n    \"\"\"\n) == \"3.0\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    5 10 5 10\n    \"\"\"\n) == \"15.0\\n\"\n\nassert solution(\n    \"\"\"\n    5\n    1 2 3 4 5\n    \"\"\"\n) == \"4.20\\n\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'Output the minimum time required to reach the end of the road.\\n', f\"Expected: {solution(stdin)}\\nGot: {solution(stdin)}\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == solution(stdin) # to avoid rechecking the same solution twice"
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 68.52419365"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3 1 5\\n1 2\\n3 2\\n\") == \"1\\n3\\n2\\n\"\nassert solution(\"3 4 2 3\\n1 3 1\\n\") == \"1\\n1\\n0\\n2\\n\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '1\\n3\\n2\\n'"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Got: {solution(input())}\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n2 3 1 5\n1 2\n\"\"\") == \"1\\n3\\n2\\n\"\n\nassert solution(\n\"\"\"\n3 4 2 3\n1 3 1\n\"\"\") == \"1\\n1\\n0\\n2\\n\"\n\nassert solution(\n\"\"\"\n1 2\n\"\"\") == \"1\\n1\\n\"\n\nassert solution(\n\"\"\"\n1 1\n\"\"\") == \"1\\n1\\n\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3 1 5\\n1 2\") == \"1\\n3\"\nassert solution(\"3 4 2 3\\n1 3 1\") == \"1\\n1\\n0\\n2\"\n"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test case {index + 1} failed\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3 1 5\\n1 2') == '1\\n3\\n2\\n'\nassert solution('3 4 2 3\\n1 3 1') == '1\\n1\\n0\\n2\\n'"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output, f\"Test case failed: solution(stdin) == expected_output. Input: {stdin}, Expected Output: {expected_output}\"\n"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == expected\n"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 5\\n1 1\\n2 2 3 2 2\\n5 3\\n2 2 2 2 2\\n\") == \"2\\n\", \"The correct output is not provided.\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"2 5\\n1 1\\n2 2 3 2 2\\n5 3\\n2 2 3 2 2\\n3 2 3 2 1\\n2 2 1 2 2 2\\n\") == \"3\\n\"\nassert solution(stdin=\"5 3\\n2 2 3 2 2\\n3 2 3 2 1\\n2 2 1 2 2 2\\n\") == \"2\\n\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '3\\n', \"The function should return 3\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, \"Test case failed\"\n"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"Output 1\", \"The solution is incorrect.\"\nassert solution(stdin) == \"Output 2\", \"The solution is incorrect.\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 5\\n1 1\") == \"3\\n\"\nassert solution(\"5 3\\n2 2 3 2 2\") == \"2\\n\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 5\\n1 1\\n') == '3\\n'\nassert solution('5 3\\n2 2 3 2 2\\n') == '2\\n'"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 5\\n1 1\") == \"3\\n\"\nassert solution(\"5 3\\n2 2 3 2 2\") == \"2\\n\"\n"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 5\\n1 1\\n\") == \"3\\n\", \"Test 1 failed\"\nassert solution(\"5 3\\n2 2 3 2 2\\n\") == \"2\\n\", \"Test 2 failed\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\nfor test_case in range(int(stdin), int(stdin) + 2):\n    input_str = input()\n    stdout = solution(input_str)\n    print(stdout)\n"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\n\nfrom typing import List\n"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == 50\nassert solution(sample_input2) == 25\n\nsample_input1 = \"\"\"\n2\n100 100\n50 50\n\"\"\"\n\nsample_input2 = \"\"\"\n2\n0 50\n50 0\n\"\"\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n100 100\\n50 50\\n2\\n0 50\\n50 0\") == \"50\"\nassert solution(\"2\\n0 50\\n50 0\") == \"25\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"50\"\nassert solution(2) == \"25\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed. Expected output: {expected_output}, got: {solution(stdin)}\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n100 100\\n50 50\\n\") == 50\nassert solution(\"2\\n0 50\\n50 0\\n\") == 25"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == \"50\", \"Incorrect Output\"\nassert solution(sample_input2) == \"25\", \"Incorrect Output\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"50\\n\", \"Output should be 50\\n\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n100 100\\n50 50\\n2\\n0 50\\n50 0\") == 50\nprint(\"All tests passed!\")"
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, got {solution(stdin)}\"\n"
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'Output 2', 'The solution is incorrect.'"
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n100\\n200\\n2010\") == \"160\"\nassert solution(\"3\\n100\\n200\\n2010\") == \"250\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"160\", \"The output is incorrect\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n100\\n200\\n\") == \"160\\n\"\nassert solution(\"3\\n100\\n200\\n2010\\n\") == \"250\\n\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Error: Expected {expected}, but got {solution(stdin)}\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"250\"\n"
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n100\\n200\\n') == '160\\n'\nassert solution('3\\n100\\n200\\n2010\\n') == '250\\n'"
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"342\"\n"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\") == \"0\"\nassert solution(\"4 2\\n0 1 1\\n2 3 1\") == \"2\"\nassert solution(\"4 2\\n0 1 1\\n2 3 1\") == \"2\"\nassert solution(\"4 2\\n0 1 1\\n2 3 1\") == \"2\"\nassert solution(\"4 2\\n0 1 1\\n2 3 1\") == \"2\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 2\\n0 1 1\\n2 3 1\\n') == '2\\n'\nassert solution('5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n') == '0\\n'"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n0 1 1\\n2 3 1\\n\") == \"2\\n\"\nassert solution(\"5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n\") == \"0\\n\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 2\\n0 1 1\\n2 3 1\\n') == '2\\n'\nassert solution('5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n') == '0\\n'"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == \"2\", \"Incorrect output\"\n"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n0 1 1\\n2 3 1\\n\") == \"2\\n\"\nassert solution(\"5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n\") == \"0\\n\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n0 1 1\\n2 3 1\") == \"2\\n\"\nassert solution(\"5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\") == \"0\\n\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Your solution is incorrect. Expected {expected}, but got {solution(input())}.\"\n"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n0 1 1\\n2 3 1\\n\") == \"2\\n\"\nassert solution(\"5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n\") == \"0\\n\""
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1 1\\n1 2\\n2 3 4\"\nassert solution(open(\"sample_input1.txt\", \"r\")) == \"1 1\\n1 2\\n2 3 4\"\nassert solution(open(\"sample_input2.txt\", \"r\")) == \"-1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 3\\n3 3 2 1\\n3 3 3') == '1 1\\n1 2\\n2 3 4'\nassert solution('4 2\\n3 3 2 2\\n6 3') == '-1'"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1 1\\n1 2\\n2 3 4\""
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == [\"1 1\", \"1 2\"]\nassert solution(sample_input2) == [\"-1\"]\n\nfrom typing import List"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n3 3 2 1\\n3 3 3\\n\") == \"1 1\\n1 2\\n2 3 4\"\nassert solution(\"4 2\\n3 3 2 2\\n6 3\\n\") == \"-1\""
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 3\\n3 3 2 1\\n3 3 3\\n') == '1 1\\n1 2\\n2 3 4\\n'\nassert solution('4 2\\n3 3 2 2\\n6 3\\n') == '-1\\ndef solution(stdin: str) -> str:\n    pass'\n"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    '''\n    4 3\n   3 3 2 1\n   3 3 3\n    '''\n) == '''\n1 1\n1 2\n2 3 4\n'''\n\nassert solution(\n    '''\n    4 2\n   3 3 2 2\n   6 3\n    '''\n) == '''\n-1\n'''\n\nassert solution(\n    '''\n    # Sample Input 1\n    # 4 3\n    # 3 3 2 1\n    # 3 3 3\n    # Sample Output 1\n    # 1 1\n    # 1 2\n    # 2 3 4\n    '''\n) == '''\n1 1\n1 2\n2 3 4\n'''\n\nassert solution(\n    '''\n    # Sample Input 2\n    # 4 2\n    # 3 3 2 2\n    # 6 3\n    # Sample Output 2\n    # -1\n    # '''\n) == '''\n-1\n'''\n\nassert solution(\n    '''\n    # Sample Input 3\n    # 3 3 2 1\n    # 3 3 3\n    # Sample Output 3\n    # -1\n    # '''\n) == '''\n-1\n'''\n\nassert solution(\n    '''\n    # Sample Input 4\n    # 3 3 2 1\n    # 3 3 3\n    # Sample Output 4\n    # -1\n    # '''\n) == '''\n-1\n'''\n\nassert solution(\n    '''\n    # Sample Input 5\n    # 3 3 2 1\n    # 3 3 3\n    # Sample Output 5\n    # -1\n    # '''\n) == '''\n-1\n'''\n\nassert solution(\n    '''\n    # Sample Input 6\n    # 3 3 2 1\n    # 3 3 3\n    # Sample Output 6\n    # -1\n    # '''\n) == '''\n-1\n'''\n\nassert solution(\n    '''\n    # Sample Input 7\n    # 3 3 2 1\n    # 3 3 3\n    # Sample Output 7\n    # -1\n    # '''\n) == '''\n-1\n'''\n\nassert solution(\n    '''\n    # Sample Input 8\n    # 3 3 2 1\n    # 3 3 3\n    # Sample Output 8\n    # -1\n    # '''\n) == '''\n-1\n'''\n\nassert solution(\n    '''\n    # Sample Input 9\n    # 3 3 2 1\n    # 3 3 3\n    # Sample Output 9\n    # -1\n    # '''\n) == '''\n-1\n'''\n\nassert solution(\n    '''\n    # Sample Input 10\n    # 3 3 2 1\n    # 3 3 3\n    # Sample Output 10\n    # -1\n    # '''\n) == '''\n-1\n'''"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1 1\\n1 2\\n2 3 4\\n\"\n"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == ['1 1', '1 2', '2 3 4']\nassert solution(stdin) == ['-1']"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3 10\\n0 0 D\\n10 1 L\\n') == '10.0\\n10.0\\n0.0\\n'\nassert solution('4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\\n') == '10.0\\n4.0\\n1.0\\n'"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    2 3 10\n    0 0 D\n    10 1 L\n    ''') == '10.0\\n10.0\\n0.0'\n\nassert solution('''\n    4 3 7\n    1 0 D\n    3 0 D\n    4 1 L\n    6 2 D\n    ''') == '10.0\\n4.0\\n1.0'"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\\n\") == \"10.0\\n10.0\\n0.0\\n\"\nassert solution(\"4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\\n\") == \"10.0\\n4.0\\n1.0\\n\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\") == \"10.0\\n10.0\\n0.0\"\nassert solution(\"4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\") == \"10.0\\n4.0\\n1.0\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\\n\") == \"10.0\\n10.0\\n0.0\\n\"\nassert solution(\"4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\\n\") == \"10.0\\n4.0\\n1.0\\n\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"10.0\\n10.0\\n0.0\\n\"\nassert solution(input()) == \"10.0\\n4.0\\n1.0\\n\"\nassert solution(input()) == \"10.0\\n10.0\\n0.0\\n\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"10.0\\n10.0\\n0.0\"\n"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\") == \"10.0\\n10.0\\n0.0\\n\"\nassert solution(\"4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\") == \"10.0\\n4.0\\n1.0\\n\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\") == \"10.0\\n10.0\\n0.0\\n\"\nassert solution(\"4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\") == \"10.0\\n4.0\\n1.0\\n\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Solution does not match expected output: {solution(input())}, expected: {expected_output}\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 68.3"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('test_input.txt').read()) == '68.3', \"Test case 1 failed\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('Hamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120\\n') == '68.3'\nassert solution('Amsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10\\n') == 'IMPOSSIBLE'"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 68.3, \"IMPOSSIBLE\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 68.3\n\nfrom typing import List"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Hamburg Bremen\") == 68.3, \"Output not as expected.\"\nassert solution(\"Amsterdam Rotterdam\") == 1.0, \"Output not as expected.\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Hamburg Bremen\") == \"68.3\"\nassert solution(\"Amsterdam Rotterdam\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('Hamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120') == 68.3\nassert solution('Amsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10') == 'IMPOSSIBLE'"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Hamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120\") == 68.3\nassert solution(\"Amsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"68.3\"\n"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*\") == \"3\"\nassert solution(\"2*.*\\n...*\\n*.*\\n*.*\") == \"4\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*') == '3\\n'\nassert solution('2\\n*.*\\n...\\n*.*') == '4\\n'"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*\\n\") == \"3\\n\"\nassert solution(stdin=\"2\\n*.*\\n...\\n*.*\\n\") == \"4\\n\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*\\n\") == \"3\\n\"\nassert solution(\"2\\n*.*\\n...\\n*.*\\n\") == \"4\\n\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n*-*.*\\n|.|.|*\\n*.*-**\\n|...|\\n*.*.*\") == \"3\\n\", \"Expected output: 3\\nGot: \" + solution(\"3\\n*-*.*\\n|.|.|*\\n*.*-**\\n|...|\\n*.*.*\")\n\nassert solution(\"2\\n*.*\\n...*\\n*.*\") == \"4\\n\", \"Expected output: 4\\nGot: \" + solution(\"2\\n*.*\\n...*\\n*.*\")"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*') == 3\nassert solution('2\\n*.*\\n...\\n*.*\\n') == 4\n\nfrom typing import List"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == sample_output_1, f\"Test case 1 failed. Input: {sample_input_1}, Output: {sample_output_1}\"\nassert solution(sample_input_2) == sample_output_2, f\"Test case 2 failed. Input: {sample_input_2}, Output: {sample_output_2}\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input(\"3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*\")) == \"3\"\nassert solution(input(\"2\\n*.*\\n...\\n*.*\\n\")) == \"4\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*') == '3\\n'\nassert solution('2\\n*.*\\n...\\n*.*') == '4\\n'"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3\"\nassert solution() == \"4\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"impossible\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8\\n12210020\\n4\\n1111\") == \"4\\n\"\nassert solution(\"4\\n1111\") == \"impossible\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == \"4\"\nassert solution(sample_input_2) == \"impossible\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='8\\n12210020\\n4\\n1111\\n') == '4\\n'\nassert solution(stdin='8\\n12210020\\n4\\n1111\\n5\\n') == 'impossible\\n'\nassert solution(stdin='8\\n12210020\\n4\\n1111\\n55\\n') == 'impossible\\n'"
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"impossible\"\nassert solution(\"2\\n1211\") == \"4\"\nassert solution(\"5\\n00100011\") == \"1\"\nassert solution(\"5\\n01011000\") == \"2\"\nassert solution(\"5\\n00100010\") == \"2\"\nassert solution(\"5\\n10111010\") == \"2\"\nassert solution(\"5\\n11111011\") == \"1\"\nassert solution(\"5\\n10111011\") == \"2\"\nassert solution(\"5\\n10111011\") == \"2\"\nassert solution(\"5\\n11111011\") == \"1\"\nassert solution(\"5\\n10111011\") == \"2\"\nassert solution(\"5\\n11111011\") == \"1\"\nassert solution(\"5\\n11111011\") == \"2\"\nassert solution(\"5\\n10111011\") == \"2\"\nassert solution(\"5\\n11111011\") == \"1\"\nassert solution(\"5\\n11111011\") == \"2\"\nassert solution(\"5\\n10111011\") == \"2\"\nassert solution(\"5\\n11111011\") == \"1\"\nassert solution(\"5\\n11111011\") == \"2\"\nassert solution(\"5\\n11111011\") == \"1\"\nassert solution(\"5\\n11111011\") == \"2\"\nassert solution(\"5\\n11111011\") == \"1\"\nassert solution(\"5\\n11111011\") == \"2\"\nassert solution(\"5\\n11111011\") == \"1\"\nassert solution(\"5\\n11111011\") == \"2\"\nassert solution(\"5\\n11111011\") == \"1\"\nassert solution(\"5\\n11111011\") == \"2\"\nassert solution(\"5\\n11111011\") == \"1\"\nassert solution(\"5\\n11111011\") == \"2\"\nassert solution(\"5\\n11111011\") == \"1\"\nassert solution(\"5\\n11111011\") == \"2\"\nassert solution(\"5\\n11111011\") == \"1\"\nassert solution(\"5\\n11111011\") == \"2\"\nassert solution(\"5\\n11111011\") == \"1\"\nassert solution(\"5\\n11111011\") == \"2\"\nassert solution(\"5\\n11111011\") == \"1\"\nassert solution(\"5\\n11111011\") == \"2\"\nassert solution(\"5\\n11111011\") == \"1\"\nassert solution(\"5\\n11111011\") == \"2\"\nassert solution(\"5\\n11111011\") == \"1\"\nassert solution(\"5\\n11111011\") == \"2\"\nassert solution(\"5\\n11111011\") == \"1\"\nassert solution(\"5\\n11111011\") == \"2\"\nassert solution(\"5\\n11111011\") == \"1\"\nassert solution(\"5\\n11111011\") == \"2\"\nassert solution(\"5\\n11111011\") == \"1\"\nassert solution(\"5\\n11111011\") == \"2\"\nassert solution(\"5\\n11111011\") == \"1\"\nassert solution(\"5\\n11111011\") == \"2\"\nassert solution(\"5\\n11111011\") == \"1\"\nassert solution(\"5\\n11111011\") == \"2\"\nassert solution(\"5\\n11111011\") == \"1\"\n"
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"impossible\", \"Test failed.\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('8\\n12210020\\n4\\n1111\\nimpossible\\n') == '4\\n'\nassert solution('8\\n12210020\\n4\\n1110\\n1010\\n1011\\n') == '4\\n'\nassert solution('8\\n12210020\\n4\\n1100\\n1010\\n1011\\n') == '3\\n'\nassert solution('8\\n12210020\\n4\\n1000\\n1010\\n1011\\n') == '3\\n'\nassert solution('8\\n12210020\\n4\\n1101\\n1010\\n1011\\n') == '4\\n'\nassert solution('8\\n12210020\\n4\\n1000\\n1010\\n1011\\n') == '4\\n'\nassert solution('8\\n12210020\\n4\\n1101\\n1010\\n1011\\n') == '4\\n'\nassert solution('8\\n12210020\\n4\\n1100\\n1010\\n1011\\n') == '4\\n'"
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"12210020\") == 4\nassert solution(\"1111\") == \"impossible\"\n"
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == '4'\nassert solution(sample_input_2) == 'impossible'"
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8\\n12210020\\n4\") == \"4\\n\"\nassert solution(\"4\\n1111\\nimpossible\") == \"impossible\\n\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n500 500 499\\n0 0 999\\n1000 1000 200') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n'\nassert solution('4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300') == 'Bill will be bitten.\\n'"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n500 500 499\\n0 0 999\\n1000 1000 200\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\"\nassert solution(\"4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300\") == \"Bill will be bitten.\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n500 500 499\n0 0 999\n1000 1000 200\n\"\"\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\"\n\nassert solution(\"\"\"\n4\n250 250 300\n750 250 300\n250 750 300\n750 750 300\n\"\"\") == \"Bill will be bitten.\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == output, f\"Test failed with input {input}, output {output}\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n500 500 499\\n0 0 999\\n1000 1000 200\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\"\nassert solution(\"4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300\") == \"Bill will be bitten.\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n500 500 499\\n0 0 999\\n1000 1000 200\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n\"\nassert solution(\"4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300\") == \"Bill will be bitten.\\n\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\"\nassert solution(input()) == \"Bill will be bitten.\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == \"++xx+o++\", \"Test 1 failed.\"\nassert solution(sample_input2) == \"xxoooooo\", \"Test 2 failed.\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"++xx+o++\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 3\\n++xx+x++\") == \"++xx+o++\"\nassert solution(\"8 3\\nxxxxxxxx\") == \"xxoooooo\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"xxoooooo\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 3\\n++xx+x++\\n\") == \"++xx+o++\"\nassert solution(\"8 3\\nxxxxxxxx\\n\") == \"xxoooooo\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 3\\n++xx+x++\") == \"++xx+o++\"\nassert solution(\"8 3\\nxxxxxxxx\") == \"xxoooooo\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('sample_input1.txt', 'r')) == \"++xx+o++\\n\"\nassert solution(open('sample_input2.txt', 'r')) == \"xxoooooo\\n\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, but got {solution(input())}\"\n"
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 3\\n++xx+x++\") == \"++xx+o++\"\nassert solution(\"8 3\\nxxxxxxxx\") == \"xxoooooo\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == output_data, f\"Solution {input_data} is incorrect. Expected output: {output_data}, but got: {solution(input_data)}\" for input_data, output_data in zip(input_data_list, output_data_list)"
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Lost is Close to Lose\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\"
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"Lost is Close to Lose\nBetter Documents Inc. wants to add Typo Checking in to the\nnext generation of word processors, and now, nearly every word processor includes a Spell Checker. BDI, however, is looking forward to replacing that with a true Typo Checker. We\u2019ve all been caught, after relying on a spell checker, by typing mistakes (\u201ctypos\u201d) that just happen to wind up as a correctly spelled word, just not the word we intended. BDI hopes to use AI to determine when a word\u2019s context suggests that it is out of place and probably should have been a different, but similarly spelled, word.\n\nAs a first step in this process, they want to see how common such similar words really are in ordinary text. Write a program to read in paragraphs of text and to produce a list of similarly spelled words occurring in that text.\n\nFor the purpose of this program, a word is any maximal string of non-whitespace characters containing at least one alphabetic character. Whitespace can be either blanks or line terminators (\u201c\\r\u201d or \u201c\\n\u201d). The core of a word is what you have left after removing any non-alphabetic characters and replacing any upper-case alphabetic characters to their lower-case equivalents.\n\nTwo words are considered to be similarly spelled if the core of one word can be converted to the core of the other word by a single application of any one of the following transformations:\n - Delete a single character.\n - Insert a single alphabetic character.\n - Replace a single character by a different alphabetic character.\n - Transpose (exchange) any two adjacent characters.\n\n-----Input-----\nInput consists of $1$ to $100$ lines of text, followed by an end of input marker in the form of a line containing only the string \u201c***\u201d.\n\nEach line of text will contain $0$ to $80$ ASCII characters (not counting line terminators).\n\n-----Output-----\nFor each word core in the text that has one or more similarly spelled words, print a line consisting of\n - That word core\n - A colon (\u201c:\u201d) followed by a blank\n - A list of all similarly spelled word cores (with no duplicates and not containing the core to the left of the colons), in alphabetic order, separated by single spaces.\n\nThe lines printed should be in alphabetic order of the word cores to the left of the colon.\n\nIf there are no similarly spelled words in the input, print a single line containing the string \u201c***\u201d.\n\n-----Examples-----\nSample Input 1:\nLost is Close to Lose\n\n\"Better Documents Inc. wants to add Typo Checking in to the\nnext generation of word processors,\" he said.\n***\nSample Output 1:\nclose: lose\nhe: the\nin: inc is\ninc: in\nis: in\nlose: close lost\nlost: lose\nthe: he\n\nSample Input 2:\nThe fox said, \"When?\"\n\"Not till 12 o'clock\", replied the hen.\n\"That clock is stopped, it will never strike.\", he said.\n***\nSample Output 2:\nclock: oclock\nhe: hen the\nhen: he when\nis: it\nit: is\noclock: clock\nthe: he\ntill: will\nwhen: hen\nwill: till\n"
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r\"\"\"Lost is Close to Lose\nBetter Documents Inc. wants to add Typo Checking in to the next generation of word processors,\nhe said.\n\nHe said, \"When?\"\nNot till 12 o'clock, replied the hen.\nThat clock is stopped, it will never strike.\n\"\"\") == \"\"\"close: lose\nhe: the\nin: inc is\ninc: in\nis: in\nlose: close lost\nlost: lose\nthe: he\n\nhe: hen the\nhen: he when\nis: it\nit: is\noclock: clock\nthe: he\ntill: will\nwhen: hen\nwill: till\n\nThe fox said, \"When?\"\nNot till 12 o'clock, replied the hen.\nThat clock is stopped, it will never strike.\n\"\"\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2"
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"close: lose\\nhe: the\\ninc: inc is\\ninc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\\n\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Lost is Close to Lose\") == \"close: lose\\nhe: the\\nin: inc is\\inc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\"\n\nassert solution(\"The fox said, \\\"When?\\\"\") == \"clock: oclock\\nhe: hen the\\nen: the fox said\\nhen: the fox said\\nhe: hen the\\nwhen: the fox said\\nthe: he\\nwas: the fox said\\nwas: the fox said\\nwas: the fox said\\nwere: the fox said\\nwas: the fox said\\nwas: the fox said\\nwere: the fox said\\nwas: the fox said\\nwas: the fox said\\nwere: the fox said\\nwas: the fox said\\nwas: the fox said\\nwas: the fox said\\nwere: the fox said\\nwas: the fox said\\nwas: the fox said\\nwere: the fox said\\nwas: the fox said\\nwas: the fox said\\nwere: the fox said\\nwas: the fox said\\nwas: the fox said\\nwere: the fox said\\nwas: the fox said\\nwas: the fox said\\nwere: the fox said\\nwas: the fox said\\nwas: the fox said\\nwere: the fox said\\nwas: the fox said\\nwas: the fox said\\nwere: the fox said\\nwas: the fox said\\nwas: the fox said\\nwere: the fox said\\nwas: the fox said\\nwas: the fox said\\nwere: the fox said\\nwas: the fox said\\nwas: the fox said\\nwere: the fox said\\nwas: the fox said\\nwas: the fox said\\nwere: the fox said\\nwas: the fox said\\nwas: the fox said\\nwere: the fox said\\nwas: the fox said\\nwas: the fox said\\nwere: the fox said\\nwas: the fox said\\nwas: the fox said\\nwere: the fox said\\nwas: the fox said\\nwas: the fox said\\nwere: the fox said\\nwas: the fox said\\nwas: the fox said\\nwere: the fox said\\nwas: the fox said\\nwas: the fox said\\nwere: the fox said\\nwas: the fox said\\nwas: the fox said\\nwere: the fox said\\nwas: the fox said\\nwas: the fox said\\nwere: the fox said\\nwas: the fox said\\nwas: the fox said\\nwere: the fox said\\nwas: the fox said\\nwas: the fox said\\nwere: the fox said\\nwas: the fox said\\nwas: the fox said\\nwere: the fox said\\nwas: the fox said\\nwas: the fox said\\nwere: the fox said\\nwas: the fox said\\nwas: the fox said\\nwere: the fox said\\nwas: the fox said\\nwas: the fox said\\nwere: the fox said\\nwas: the fox said\\nwas: the fox said\\nwere: the fox said\\nwas: the fox said\\nwas: the fox said\\nwere: the fox said\\nwas: the fox said\\nwas: the fox said\\nwere: the fox said\\nwas: the fox said\\nwas: the fox said\\nwere: the fox said\\nwas: the fox said\\nwas: the fox said\\nwere: the fox said\\nwas: the fox said\\nwas: the fox said\\nwere: the fox said\\nwas: the fox said\\nwas: the fox said\\nwere: the fox said\\nwas: the fox said\\nwas: the fox said\\nwere: the fox said\\nwas: the fox said\\nwas: the fox said\\nwere: the fox said\\nwas: the fox said\\"
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"sample_input.txt\").read()) == expected_output, \"The solution is incorrect. Please provide the expected output and the input.\"\n\nfrom typing import List"
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input(\"Sample Input 1:\\n\")) == \"close: lose\\nhe: the\\nin: inc is\\ninc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\\n\"\nassert solution(input(\"Sample Input 2:\\n\")) == \"clock: oclock\\nhe: hen the\\nen: he when\\nhe: hen it\\nis: it\\noclock: clock\\nthe: he\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Lost is Close to Lose\\n\"\n                 \"The fox said, \\\"When?\\\"\\n\"\n                 \"The clock is stopped, it will never strike.\\n\") == \"close: lose\\nhe: the\\ninc: inc is\\ninc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\"\n\nassert solution(\"Better Documents Inc. wants to add Typo Checking in to the next generation of word processors,\\n\"\n                 \"He said. It's a long time before the word processors can catch on to their own typos.\\n\"\n                 \"The clock is stopped, it will never strike.\\n\"\n                 \"Lost is Close to Lose\\n\"\n                 \"The fox said, \\\"When?\\\"\\n\"\n                 \"The clock is stopped, it will never strike.\\n\") == \"close: lose\\nhe: the\\ninc: inc is\\ninc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\"\n\nassert solution(\"The fox said, \\\"When?\\n\"\n                 \"The clock is stopped, it will never strike.\\n\"\n                 \"Lost is Close to Lose\\n\"\n                 \"The fox said, \\\"When?\\\"\\n\"\n                 \"The clock is stopped, it will never strike.\\n\") == \"clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\nthe: he\\till: will\\when: hen\\will: till\\ndef solution(stdin: str) -> str: pass\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2"
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == output1, \"Test case 1 failed\"\nassert solution(input2) == output2, \"Test case 2 failed\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output\nprint(output)"
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\n1 2 7 3 8 9 4 5 10 6\") == \"1\\n\"\nassert solution(\"10\\n3 8 1 9 4 5 2 7 10 6\") == \"2\\n\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10) == '1', \"The solution for test case 1 is incorrect.\"\nassert solution(10) == '1', \"The solution for test case 2 is incorrect.\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10\\n1 2 7 3 8 9 4 5 10 6') == '1\\n'\nassert solution('10\\n3 8 1 9 4 5 2 7 10 6') == '2\\n'"
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == \"1\\n\", \"Test 1 failed\"\nassert solution(sample_input_2) == \"2\\n\", \"Test 2 failed\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\n1 2 7 3 8 9 4 5 10 6\") == \"1\\n\", \"Test 1 failed.\"\nassert solution(\"10\\n3 8 1 9 4 5 2 7 10 6\") == \"2\\n\", \"Test 2 failed.\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\", \"Solution should return 1\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\n1 2 7 3 8 9 4 5 10 6\") == \"1\\n\"\nassert solution(\"10\\n3 8 1 9 4 5 2 7 10 6\") == \"2\\n\"\n"
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\n1 2 7 3 8 9 4 5 10 6\\n2 1 3 5 8 6 7 9 4 2\\n1 4 9 5 2 7 8 3 6 10\\n2 5 10 6 3 8 9 7 4 1\\n1 6 7 9 4 10 8 3 5 2\\n2 7 9 6 5 1 8 4 3 10\\n1 8 4 5 3 10 7 9 2 6\\n2 9 5 8 4 7 6 3 1 10\\n1 9 3 4 7 8 6 5 1 2\\n2 7 1 5 6 9 4 3 8 10\\n1 7 5 4 3 2 9 8 6 10\\n2 6 3 2 8 1 7 9 4 5\\n1 5 2 10 9 7 8 4 6 3\\n2 8 1 3 6 5 7 9 10 4\\n1 3 7 10 6 9 5 4 8 2\\n2 4 6 1 9 2 3 8 5 7\\n1 8 6 4 2 7 5 9 1 3\\n2 9 3 1 7 10 8 6 2 4\") == \"1\", \"Test 1 failed\"\nassert solution(\"10\\n3 8 1 9 4 5 2 7 10 6\\n2 1 3 5 8 6 7 9 4 2\\n1 4 9 5 2 7 8 3 6 10\\n2 5 10 6 3 8 9 7 4 1\\n1 6 7 9 4 10 8 3 5 2\\n2 7 9 6 5 1 8 4 3 10\\n1 8 4 5 3 10 7 9 2 6\\n2 9 5 8 4 7 6 3 1 10\\n1 9 3 4 7 8 6 5 1 2\\n2 7 1 5 6 9 4 3 8 10\\n1 7 5 4 3 2 9 8 6 10\\n2 6 3 2 8 1 7 9 4 5\\n1 5 2 10 9 7 8 4 6 3\\n2 8 1 3 6 5 7 9 10 4\\n1 3 7 10 6 9 5 4 8 2\\n2 4 6 1 9 2 3 8 5 7\\n1 8 6 4 2 7 5 9 1 3\\n2 9 3 1 7 10 8 6 2 4\") == \"2\", \"Test 2 failed\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Your solution is incorrect. Please check the given examples and input.\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"The expected output is {output}, but the actual output is {solution(input())}\"\n\ninput1 = \"0.142857 6\"\noutput1 = \"1/7\"\nassert solution(input1) == output1, f\"The expected output is {output1}, but the actual output is {solution(input1)}\"\n\ninput2 = \"1.6 1\"\noutput2 = \"5/3\"\nassert solution(input2) == output2, f\"The expected output is {output2}, but the actual output is {solution(input2)}\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"$0.142857 6\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"$0.142857 6\") == \"1/7\", \"Expected '1/7', got '{}'.\".format(solution(\"$0.142857 6\"))\nassert solution(\"$1.6 1\") == \"5/3\", \"Expected '5/3', got '{}'.\".format(solution(\"$1.6 1\"))"
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\"\n"
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\", \"The expected output is incorrect.\"\nassert solution(\"1.6 1\") == \"5/3\", \"The expected output is incorrect.\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\"\n"
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output() for input, output in [\n    (\"0.142857 6\", \"1/7\"),\n    (\"1.6 1\", \"5/3\"),\n]"
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\", \"Incorrect output\"\nassert solution(\"1.6 1\") == \"5/3\", \"Incorrect output\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"6\"\nassert solution(open(\"input_2.txt\", \"r\")) == \"10\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 6, \"The output should be 6, but it's {}.\".format(solution())\n"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"0 0 0\\n0 0 1\") == 6\nassert solution(stdin=\"2\\n0 0 0\\n0 0 1\") == 10"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    1\n    0 0 0\n    0 0 1\n    \"\"\"\n) == \"6\\n\"\n\nassert solution(\n    \"\"\"\n    2\n    0 0 0\n    0 0 1\n    \"\"\"\n) == \"10\\n\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1\\n0 0 0\\n2\\n0 0 1\\n') == '6\\n'\nassert solution('2\\n0 0 0\\n0 0 1\\n') == '10\\n'"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"6\\n\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1') == 6\nassert solution('2') == 10"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == 6, \"The solution is incorrect.\"\nassert solution(sample_input_2) == 10, \"The solution is incorrect.\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n0 0 0\\n0 0 1') == '10'\nassert solution('1\\n0 0 0') == '6'"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1\\n0 0 0\\n2\\n0 0 1\\n') == 6\nassert solution('2\\n0 0 0\\n0 0 1\\n') == 10"
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 1, \"Expected 1, got: \" + str(solution())"
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n-1 2 -1\\n2 2\\n1 -1 1\") == \"1\\n\"\nassert solution(\"7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\") == \"1\\n\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 1, \"Invalid solution 1\"\nassert solution(7) == 1, \"Invalid solution 2\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n-1 2 -1\\n2 2\\n1 -1 1\") == \"1\"\nassert solution(\"7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\") == \"1\"\n"
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\", \"Incorrect output\"\n"
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Test case {i+1} failed. Expected output: {expected}, but got: {solution(input())}\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, got {solution(stdin)}\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n-1 2 -1\\n2 2\\n1 -1 1\") == \"1\\n\", \"Test 1 failed\"\nassert solution(\"7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\") == \"1\\n\", \"Test 2 failed\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1\", \"Your solution is incorrect. Please check your code and test cases.\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n-1 2 -1\\n2 2\\n1 -1 1\") == \"1\\n\"\nassert solution(\"7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\") == \"1\\n\"\nassert solution(\"10\\n-1 3 -1 1 -1 -1 -1\\n-1 4 5 -1 1 -1 -1\\n-1 5 -1 1 -1 -1 -1\\n1 2 -1 1 -1 -1 -1\\n0 2 3 -1 4 4 -1\\n-1 4 -1 1 -1 -1 -1\\n1 2 4 2 2 4 -1\\n0 4 -1 1 -1 -1 -1\\n-1 3 2 0 0 3 -1\\n1 2 4 2 2 3 -1\\n0 2 -1 1 -1 -1 -1\\n-1 2 4 2 2 2 -1\\n1 1 2 1 1 4 -1\\n0 2 -1 1 -1 -1 -1\\n-1 2 -1 1 -1 -1 -1\\n1 1 1 -1 1 1 -1\\n0 2 1 1 -1 -1 -1\\n-1 1 2 1 -1 -1 -1\\n1 1 1 -1 1 1 -1\\n0 2 1 1 -1 -1 -1\\n-1 1 2 -1 1 1 -1\\n1 1 1 -1 1 1 -1\\n0 2 1 1 -1 -1 -1\\n-1 1 1 -1 1 1 -1\\n1 1 1 -1 1 1 -1\\n0 2 1 1 -1 -1 -1\\n-1 1 -1 -1 1 1 -1\\n1 1 1 -1 1 1 -1\\n0 2 1 1 -1 -1 -1\\n-1 -1 -1 -1 1 1 -1\\n1 1 1 -1 1 1 -1\\n0 2 1 1 -1 -1 -1\\n-1 -1 -1 -1 1 1 -1\\n1 1 1 -1 1 1 -1\\n0 2 1 1 -1 -1 -1\\n-1 -1 -1 -1 1 1 -1\\n1 1 1 -1 1 1 -1\\n0 2 1 1 -1 -1 -1\\n-1 -1 -1 -1 1 1 -1\\n1 1 1 -1 1 1 -1\\n0 2 1 1 -1 -1 -1\\n-1 -1 -1 -1 1 1 -1\\n1 1 1 -1 1 1 -1\\n0 2 1 1 -1 -1 -1\\n-1 -1 -1 -1 1 1 -1\\n1 1 1 -1 1 1 -1\\n0 2 1 1 -1 -1 -1\\n-1 -1 -1 -1 1 1 -1\\n1 1 1 -1 1 1 -1\\n0 2 1 1 -1 -1 -1\\n-1 -1 -1 -1 1 1 -1\\n1 1 1 -1 1 1 -1\\n0 2 1 1 -1 -1 -1\\n-1 -1 -1 -1 1 1 -1\\n1 1 1 -1 1 1 -1\\n0 2 1 1 -1 -1 -1\\n-1 -1 -1 -1 1 1"
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1001\") == 3, \"Test 1 failed\"\nassert solution(\"1111\") == 1, \"Test 2 failed\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Output: {solution(input())}, Expected Output: {output}\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1001\") == \"3\", \"The output should be 3.\"\nassert solution(\"1111\") == \"1\", \"The output should be 1.\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1001\") == \"3\"\nassert solution(\"1111\") == \"1\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Solution failed for input {input()} and output {expected_output}\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1001') == '3'\nassert solution('1111') == '1'"
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1001\") == \"3\"\nassert solution(\"1111\") == \"1\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1001\") == \"3\", \"Sample Input 1\"\nassert solution(\"1111\") == \"1\", \"Sample Input 2\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1001\") == \"3\", \"Test case 1 failed\"\nassert solution(\"1111\") == \"1\", \"Test case 2 failed\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1001\") == \"3\"\nassert solution(\"1111\") == \"1\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 'LLL', \"The output should be 'LLL', but it is '{}'\".format(solution())\nassert solution() == 'LLRLR', \"The output should be 'LLRLR', but it is '{}'\".format(solution())"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1 1\") == \"LLL\"\nassert solution(\"5\\n1 2 2 1 2\") == \"LLRLR\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 'LLL'\nassert solution() == 'LLRLR'"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1 1\\n\") == \"LLL\"\nassert solution(\"5\\n1 2 2 1 2\\n\") == \"LLRLR\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1 1\\n\") == \"LLL\\n\"\nassert solution(\"5\\n1 2 2 1 2\\n\") == \"LLRLR\\n\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 'LLL'\nassert solution() == 'LLRLR'"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"LLL\\n\", \"Incorrect output\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'RRRR', \"Incorrect output: 'RRRR' expected\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1\\n2 2 2\\n3 3 3\") == \"LLL\"\nassert solution(\"1 2 2 1 2\\n2 2 1 2 2\\n3 3 2 2 3\") == \"LLRLR\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1 1\\n\") == \"LLL\"\nassert solution(\"5\\n1 2 2 1 2\\n\") == \"LLRLR\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"Poor girl\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"49000000000070\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed. Expected output: {output}, but got {solution(input())}.\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000\") == \"49000000000070\\n\", \"Test 1 failed\"\nassert solution(\"6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000\\n7 1 7000000\") == \"25000000000021\\n\", \"Test 2 failed\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Poor girl\", \"Incorrect output\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000\") == \"49000000000070\\n\"\nassert solution(\"6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000\") == \"25000000000021\\n\"\n\nimport sys"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"49000000000070\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000\\n\") == \"49000000000070\\n\"\nassert solution(\"6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000\\n\") == \"25000000000021\\n\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input1) == output1, f\"Solution for Sample Input 1 is incorrect. Expected: {output1}, Received: {solution(input1)}\"\nassert solution(input2) == output2, f\"Solution for Sample Input 2 is incorrect. Expected: {output2}, Received: {solution(input2)}\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\\n\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 3\\n\") == \"Yeah!\\n\"\nassert solution(\"4 5\\n0 1\\n1 0\\n2 2\\n3 2\\n4 3\\n5 4\\n\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == \"Yeah!\\n\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 3\") == \"Yeah!\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 3\") == \"Yeah!\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 3\") == \"Yeah!\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 4\") == \"Yeah!\"\n\nfrom typing import List"
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 3\") == \"Yeah!\\n\"\nassert solution(\"4 5\\n0 1\\n1 0\\n2 3\\n3 3\\n4 4\\n0 1\\n1 0\\n2 3\\n3 2\\n4 2\\n\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 3\") == \"Yeah!\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\\n\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 3\\n\") == \"Yeah!\\n\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == sample_output1, \"Incorrect output 1\"\nassert solution(sample_input2) == sample_output2, \"Incorrect output 2\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n4 4\n0 1\n1 0\n2 3\n3 2\n''') == '2\\n2\\n0\\n1\\n2\\n2\\n3\\n'\n\nassert solution('''\n4 4\n0 1\n1 0\n2 3\n3 3\n''') == 'Yeah!\\n'\n\nassert solution('''\n4 4\n0 1\n1 0\n2 3\n3 3\n''') == 'Yeah!\\n'\n\nassert solution('''\n4 4\n0 1\n1 0\n2 3\n3 2\n''') == '2\\n2\\n0\\n1\\n2\\n2\\n3\\n'\n\nassert solution('''\n4 4\n0 1\n1 0\n2 3\n3 2\n''') == '2\\n2\\n0\\n1\\n2\\n2\\n3\\n'"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 1, 1, 2) == \"POSSIBLE\"\nassert solution(2, 1, 2) == \"IMPOSSIBLE\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1 2\") == \"POSSIBLE\\n1 3\\n2 3\"\nassert solution(\"2\\n1 2\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"POSSIBLE\\n1 3\\n2 3\\n\", \"Test case 1 failed\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 'POSSIBLE\\n1 3\\n2 3'\nassert solution(2) == 'IMPOSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nfrom typing import List"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output, f\"Your code is wrong. Expected output: {expected_output}, Received output: {solution(stdin)}\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == expected_output, f\"Test {test_case} failed. Expected output: {expected_output}, Received output: {solution(open('input.txt', 'r'))}\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n1 1 2\\n') == 'POSSIBLE\\n1 3\\n2 3\\n'\nassert solution('2\\n1 2\\n') == 'IMPOSSIBLE\\n'"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 1 2\\n2\\n1 2\\n\") == \"POSSIBLE\\n1 3\\n2 3\"\nassert solution(\"2\\n1 2\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1 2\\n2\\n1 2\\n\") == \"POSSIBLE\\n1 3\\n2 3\\n\"\n\nassert solution(\"2\\n1 2\\n\") == \"IMPOSSIBLE\\ndef solution(stdin: str) -> str: \\n    pass\\n\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"POSSIBLE\\n1 3\\n2 3\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n0\\n0\\n0\\n1\\n0\\n0\\n0\\n1\\n0\\n0\\n0\\n1\\n0\\n0\\n0\\n1\\n0\\n0\\n0\\n\") == \"0.5 0.5 0.5\"\nassert solution(\"0\\n0\\n0\\n0\\n1\\n0\\n0\\n0\\n1\\n0\\n0\\n0\\n1\\n0\\n0\\n0\\n1\\n0\\n0\\n0\\n\") == \"0.0 0.0 -0.0\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\"0.5 0.5 0.5\n0.0 0.0 -0.0\"\"\"\n\nimport math"
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"0.5 0.5 0.5\\n\", \"The correct answer is not found.\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n\") == \"0.5 0.5 0.5\"\nassert solution(\"-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n\") == \"0.0 0.0 -0.0\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin: str) == expected, f\"Expected: {expected}, Received: {solution(stdin)}\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0.5 0.5 0.5\"\nassert solution() == \"0.0 0.0 -0.0\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([0, 0, 0]) == '0.5 0.5 0.5'\nassert solution([1, 0, 0]) == '0.0 0.0 -0.0'\nassert solution([0, 1, 0]) == '-0.5 -0.5 -0.5'\nassert solution([0, 0, 1]) == '0.0 0.0 -0.5'\nassert solution([-1, 0, 0]) == '-0.5 -0.5 -0.0'\nassert solution([1, 0, 0]) == '-0.5 -0.0 0.5'\nassert solution([0, 1, 0]) == '-0.5 -0.5 -0.5'\nassert solution([0, 0, 1]) == '-0.5 -0.0 0.5'\nassert solution([-1, 0, 0]) == '-0.0 0.0 0.5'\nassert solution([1, 0, 0]) == '0.0 0.0 0.5'\nassert solution([0, 1, 0]) == '0.5 0.0 0.5'\nassert solution([0, 0, 1]) == '0.5 0.5 0.5'\nassert solution([-1, 0, 0]) == '-0.5 -0.5 -0.5'\nassert solution([1, 0, 0]) == '-0.0 -0.5 -0.5'\nassert solution([0, 1, 0]) == '-0.5 -0.5 -0.5'\nassert solution([0, 0, 1]) == '-0.5 -0.5 -0.5'\nassert solution([-1, 0, 0]) == '-0.5 -0.5 -0.5'\nassert solution([1, 0, 0]) == '-0.5 -0.5 -0.5'\nassert solution([0, 1, 0]) == '-0.5 -0.5 -0.5'\nassert solution([0, 0, 1]) == '-0.5 -0.5 -0.5'\nassert solution([-1, 0, 0]) == '-0.5 -0.5 -0.5'\nassert solution([1, 0, 0]) == '-0.5 -0.5 -0.5'\nassert solution([0, 1, 0]) == '-0.5 -0.5 -0.5'\nassert solution([0, 0, 1]) == '-0.5 -0.5 -0.5'\nassert solution([-1, 0, 0]) == '-0.5 -0.5 -0.5'\nassert solution([1, 0, 0]) == '-0.5 -0.5 -0.5'\nassert solution([0, 1, 0]) == '-0.5 -0.5 -0.5'\nassert solution([0, 0, 1]) == '-0.5 -0.5 -0.5'\nassert solution([-1, 0, 0]) == '-0.5 -0.5 -0.5'\nassert solution([1, 0, 0]) == '-0.5 -0.5 -0.5'\nassert solution([0, 1, 0]) == '-0.5 -0.5 -0.5'\nassert solution([0, 0, 1]) == '-0.5 -0.5 -0.5'\nassert solution([-1, 0, 0]) == '-0.5 -0.5 -0.5'\nassert solution([1, 0, 0]) == '-0.5 -0.5 -0.5'\nassert solution([0, 1, 0]) == '-0.5 -0.5 -0.5'\nassert solution([0, 0, 1]) == '-0.5 -0.5 -0.5'\nassert solution([-1, 0, 0]) == '-0.5 -0.5 -0.5'\nassert solution([1, 0, 0]) == '-0.5 -0.5 -0.5'\nassert solution([0, 1, 0]) == '-0.5 -0.5 -0.5'\nassert solution([0, 0, 1]) =="
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1') == '0.5 0.5 0.5'\nassert solution('-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1') == '0.0 0.0 -0.0'"
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n    0 0 0\n    1 0 0\n    0 1 0\n    0 0 1\n''') == '0.5 0.5 0.5\\n'\n\nassert solution('''\n-1 0 0\n1 0 0\n0 1 0\n0 0 1\n''') == '0.0 0.0 -0.0\\n'"
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([\n'0 0 0',\n'1 0 0',\n'0 1 0',\n'0 0 1']) == ['0.5 0.5 0.5']\n\nassert solution([\n'-1 0 0',\n'1 0 0',\n'0 1 0',\n'0 0 1']) == ['0.0 0.0 -0.0']"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(None) == 0\nassert solution(\"\"\"\n10\n3 6 2 3 2 2 2 1 5 6\n\"\"\") == 2\nassert solution(\"\"\"\n3\n17 17 17\n\"\"\") == 0"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Output: {output}\\nExpected Output: {output}\"\nfor input, output in [\n    [10, \"3 6 2 3 2 2 2 1 5 6\"],\n    [3, \"17 17 17\"],\n]:\n    assert solution(input) == output, f\"Output: {output}\\nExpected Output: {output}\"\n    print(\"All Test Cases Pass\")"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == \"2\\n3 2 2 1 5\\n3 2 2\\n6 6\"\nassert solution(sample_input2) == \"0\\n17 17 17\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '2\\n3 2 2 1 5\\n3 2 2'"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Wrong output: {solution(stdin)}\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''10\n3 6 2 3 2 2 2 1 5 6''') == '2\\n3 2 2 1 5\\n3 2 2\\n6 6'\n\nassert solution('''3\n17 17 17''') == '0\\n17 17 17'"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n10\n3 6 2 3 2 2 2 1 5 6\n''') == '2\\n3 2 2 1 5\\n3 2 2\\n6 6'\n\nassert solution('''\n3\n17 17 17\n''') == '0\\n17 17 17'"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='10\\n3 6 2 3 2 2 2 1 5 6\\n') == '2\\n3 2 2 1 5\\n3 2 2\\n6 6\\n'\nassert solution(stdin='3\\n17 17 17\\n') == '0\\n17 17 17\\n'"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"17 17 17\", \"Test case 1 failed\"\nassert solution() == \"2\", \"Test case 2 failed\"\nassert solution() == \"3 2 2 1 5\", \"Test case 3 failed\"\nassert solution() == \"3 2 2\", \"Test case 4 failed\"\nassert solution() == \"6 6\", \"Test case 5 failed\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\\n3 2 2 1 5\\n3 2 2\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3\\n\") == \"74.6666666667\"\n\nfrom typing import List"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n') == 'IMPOSSIBLE\\n'\nassert solution('3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3\\n') == '74.6666666667\\n'"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_data) == expected_output, f\"Expected output: {expected_output}, got: {solution(input_data)}\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution_input1) == solution_output1, solution_output1\nassert solution(solution_input2) == solution_output2, solution_output2"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'IMPOSSIBLE'"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n') == 'IMPOSSIBLE'\nassert solution('3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3\\n') == '74.6666666667'"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3\\n\") == \"74.6666666667\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == \"IMPOSSIBLE\"\nassert solution(sample_input2) == 74.6666666667"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Input {input()} does not match expected output. Expected: {output}, Got: {solution(input())}\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n\") == \"1\\n2\\n1\\n2\\n2\\n1\\n\"\nassert solution(\"7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\\n\") == \"0\\n\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"0\\n0\\n0\\n0\\n0\\n\"\nassert solution(input()) == \"1\\n1\\n1\\n1\\n1\\n\"\nassert solution(input()) == \"0\\n0\\n0\\n0\\n0\\n\"\nassert solution(input()) == \"2\\n2\\n2\\n2\\n2\\n\"\nassert solution(input()) == \"1\\n1\\n1\\n1\\n1\\n\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n\\n7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\") == \"1\\n2\\n1\\n2\\n2\\n1\\n\"\nassert solution(\"7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\") == \"0\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(str(input())) == input()"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0\"\nassert solution() == \"1\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"1\"\nassert solution() == \"0\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    5 6\n    1 2\n    2 3\n    3 1\n    3 4\n    1 4\n    4 5\n    7 7\n    1 2\n    2 3\n    3 1\n    4 5\n    5 6\n    6 7\n    7 4''') == '''\n    1\n    2\n    1\n    2\n    2\n    1\n    2\n    2\n    1\n    2\n    2\n    1\n    2\n    1\n    2\n    1\n    2\n    1\n    2\n    1\n    2\n    2\n    1\n    2\n    1\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    2\n    "
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\") == \"1\\n2\\n1\\n2\\n2\\n1\"\nassert solution(\"7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\") == \"0\\n0\\n0\\n0\\n0\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n') == '1\\n2\\n1\\n2\\n2\\n1\\n'"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([str(int(input())) for _ in range(2)] == [\"0\", \"0\", \"0\", \"0\", \"0\", \"0\"])\n\nfrom collections import defaultdict"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 10 2\\n0\\n15\\n30\\n45\") == \"10\"\nassert solution(\"4 10 3\\n0\\n15\\n30\\n45\") == \"5\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == output1, \"Test case 1 failed\"\nassert solution(input2) == output2, \"Test case 2 failed\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='4 10 2\\n0\\n15\\n30\\n45') == 10\nassert solution(stdin='4 10 3\\n0\\n15\\n30\\n45') == 5"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input1) == expected1, f\"Test 1 failed: {solution(input1)}!= {expected1}\"\nassert solution(input2) == expected2, f\"Test 2 failed: {solution(input2)}!= {expected2}\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\nprint(f\"All tests passed\")"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '10'\n\nfrom typing import List"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 10\nassert solution(2) == 5"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 10 2\\n0\\n15\\n30\\n45\") == \"10\"\nassert solution(\"4 10 3\\n0\\n15\\n30\\n45\") == \"5\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"10\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"10\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n50 50 75\\n25 25 25\\n\") == \"2\\n\"\nassert solution(\"5 2\\n50 50 50 50\\n25 25 25 25\\n\") == \"1\\n\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n50 50 75\\n25 25 25\\n\") == \"2\\n\"\nassert solution(\"5 2\\n50 50 50 50\\n25 25 25 25\\n\") == \"1\\n\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\"\nassert solution() == \"1\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n50 50 75\\n25 25 25\") == \"2\"\nassert solution(\"5 2\\n50 50 50 50\\n25 25 25 25\") == \"1\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 2, \"Incorrect output.\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\", \"Incorrect output\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n50 50 75\\n25 25 25\\n\") == \"2\\n\"\nassert solution(\"5 2\\n50 50 50 50\\n25 25 25 25\\n\") == \"1\\n\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n50 50 75\\n25 25 25\") == \"2\"\nassert solution(\"5 2\\n50 50 50 50\\n25 25 25 25\") == \"1\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == \"2\"\nassert solution(sample_input2) == \"1\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\\n\") == \"1\\n\"\nassert solution(\"4 4\\n.XLX\\n.X..\\n...L\\n.X..\\n\") == \"2\\n\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Incorrect output\\nExpected: {output()}\\nActual: {solution(input())}\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 4\\n.LX.\\n.X..\\n....\\n.L..') == '1\\n'\nassert solution('4 4\\n.XLX\\n.X..\\n...L\\n.X..') == '2\\n'\n"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\\n\"  # Expected output: 1\n\nassert solution(input()) == \"2\\n\"  # Expected output: 2"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\\n\") == \"1\\n\"\nassert solution(\"4 4\\n.XLX\\n.X..\\n...L\\n.X..\\n\") == \"2\\n\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Solution: {solution(input())}, Expected Output: {expected_output}\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 4\\n.LX.\\n.X..\\n....\\n.L..\\n') == '1'\nassert solution('4 4\\n.XLX\\n.X..\\n...L\\n.X..\\n') == '2'"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\") == \"1\"\nassert solution(\"4 4\\n.XLX\\n.X..\\n...L\\n.X..\") == \"2\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 4\\n.LX.\\n.X..\\n....\\n.L..\\n') == '1'\nassert solution('4 4\\n.XLX\\n.X..\\n...L\\n.X..\\n') == '2'"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == \"detention\"\nassert solution(sample_input_2) == \"home\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n\") == \"home\\n2\\n2 0 1\\n2 2 3\\n\"\nassert solution(\"5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n\") == \"detention\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\") == \"home\\n2\\n2 0 1\\n2 2 3\"\nassert solution(\"5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\") == \"detention\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\") == \"home\\n2\\n2 0 1\\n2 2 3\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n') == 'home\\n2\\n2 0 1\\n2 2 3\\n'"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"detention\"\n"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"detention\"\nassert solution == \"home\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4 2 1\n1 1\n2 0 2\n2 1 3\n1 2\n\"\"\") == \"home\\n2\\n2 0 1\\n2 2 3\"\n\nassert solution(\"\"\"\n5 2 1\n1 1\n2 0 2\n2 1 3\n2 2 4\n1 3\n\"\"\") == \"detention\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"home\"\nassert solution(open(\"input2.txt\", \"r\")) == \"detention\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''4 2 1\n1 1\n2 0 2\n2 1 3\n1 2\n''') == 'home'\nassert solution('''5 2 1\n1 1\n2 0 2\n2 1 3\n2 2 4\n1 3\n''') == 'detention'"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == -1\n\nfrom typing import List"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('tralalal') == 'allatral', \"The solution does not match\"\nassert solution('zzzz') == '-1', \"The solution does not match\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == -1"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"tralalal\") == \"allatral\", \"Test 1\"\nassert solution(\"zzzz\") == -1, \"Test 2\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"tralalal\") == \"allatral\", \"Sample Input 1\"\nassert solution(\"zzzz\") == -1, \"Sample Input 2\"\n\nfrom typing import List"
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 8, \"Test Case Failed\"\n"
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Testcase {i+1} failed\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n\") == \"5\\n\"\nassert solution(\"6\\n3 2 1 6 4 5\\n\") == \"8\\n\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"Solution output\"\n"
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Output one integer representing the number of scary subarrays.\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2 3 4 5\\n6\\n3 2 1 6 4 5\\n') == '5\\n'"
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == '5'\nassert solution(2) == '15'\nassert solution(3) == '37'\nassert solution(4) == '89'\nassert solution(5) == '345'"
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 5, \"Your solution is incorrect. It should return 5, but it returns {}\".format(solution())"
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 'output', 'Your solution is not correct!'"
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Your solution is incorrect. Expected '{expected}', but got '{solution(stdin)}'.\""
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 1\nassert solution() == 2"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"47\") == \"1\"\nassert solution(\"523\") == \"2\""
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(47) == 1, \"Test 1\"\nassert solution(523) == 2, \"Test 2\""
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"47\") == 1\nassert solution(\"523\") == 2"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Test case {tc} failed. Expected: {expected}, Received: {solution(input())}\""
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(47) == 1\nassert solution(523) == 2"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 1"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=None) == \"Output not provided\\n\"\n"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"Solution failed for input {stdin} and expected output {expected_output}\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n\"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n2 2\n0 1 20\n1 0 5\n\"\"\"\n) == \"1\\n0 1 15\\n\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution) == \"0\"\n\nfor _ in range(int(input())):\n    n, m = map(int, input().split())\n    friends = list(map(int, input().split()))\n\n    ious = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            if friends[i] == friends[j]:\n                continue\n            if friends[i] in ious:\n                continue\n            ious.append(friends[i])\n\n    ious = [ious[i] for i in range(n) if i not in ious]\n    cycles = []\n\n    while ious:\n        cycle = [ious.pop()]\n        for i in range(1, n):\n            while i < n and friends[cycle[-1]] == friends[i]:\n                cycle.append(ious.pop())\n        cycles.append(cycle)\n\n    if cycles:\n        p = 0\n        for cycle in cycles:\n            if sum(c * ious[i] for i, c in enumerate(cycle)) < 2:\n                p += 1\n        return str(p)\n\n    else:\n        return \"No cycles left\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Wrong output: {solution(stdin)}!= {expected_output}\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n''') == '0\\n'\nassert solution('''2 2\n0 1 20\n1 0 5\n''') == '1\\n0 1 15\\n'"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20\") == \"0\\n1\\n0 1 15\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0\\n1\\n10\\n0\\n3\\n10\\n2\\n0\\n20\\n0\\n') == '0\\n'\nassert solution('0\\n2\\n0\\n0\\n0\\n20\\n1\\n0\\n5\\n0\\n') == '0\\n1\\n15\\n'"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20') == '0\\n\\n1\\n0 1 15'\n"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0\\n1\\n0 1 15\\n\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20') == 0\nassert solution('2 2\\n0 1 20\\n1 0 5') == 1"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n''') == '0'\nassert solution('''\n2 2\n0 1 20\n1 0 5\n''') == '1'\nassert solution('''\n4 1\n0 1 10\n1 0 5\n0 3 10\n3 2 10\n2 0 20\n''') == '1'\nassert solution('''\n4 2\n0 1 10\n1 0 5\n0 3 10\n3 2 10\n2 0 20\n''') == '1'\nassert solution('''\n3 1\n0 1 10\n1 0 5\n0 3 10\n3 2 10\n2 0 20\n''') == '1'\nassert solution('''\n3 2\n0 1 10\n1 0 5\n0 3 10\n3 2 10\n2 0 20\n''') == '1'\nassert solution('''\n3 3\n0 1 10\n1 0 5\n0 3 10\n3 2 10\n2 0 20\n''') == '1'\nassert solution('''\n3 4\n0 1 10\n1 0 5\n0 3 10\n3 2 10\n2 0 20\n''') == '1'\nassert solution('''\n4 2\n0 1 10\n1 0 5\n0 3 10\n3 2 10\n2 0 20\n''') == '0'\nassert solution('''\n3 2\n0 1 10\n1 0 5\n0 3 10\n3 2 10\n2 0 20\n''') == '1'\nassert solution('''\n3 2\n0 1 10\n1 0 5\n0 3 10\n3 2 10\n2 0 20\n''') == '2'\nassert solution('''\n4 3\n0 1 10\n1 0 5\n0 3 10\n3 2 10\n2 0 20\n''') == '1'\nassert solution('''\n4 4\n0 1 10\n1 0 5\n0 3 10\n3 2 10\n2 0 20\n''') == '1'\nassert solution('''\n4 4\n0 1 10\n1 0 5\n0 3 10\n3 2 10\n2 0 20\n''') == '1'\nassert solution('''\n4 4\n0 1 10\n1 0 5\n0 3 10\n3 2 10\n2 0 20\n''') == '0'"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\\n\"\n) == \"5\"\n\nassert solution(\n    \"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\\n\"\n) == \"1\""
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"5\", \"Test 1 failed\"\nassert solution(input()) == \"1\", \"Test 2 failed\""
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\\n\") == 5\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\\n\") == 1"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\\n\") == \"5\"\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\\n\") == \"1\"\n\nfrom typing import List"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"5\", \"Test 1 failed\"\nassert solution(input()) == \"1\", \"Test 2 failed\"\nassert solution(input()) == \"1\", \"Test 3 failed\"\nassert solution(input()) == \"1\", \"Test 4 failed\"\nassert solution(input()) == \"1\", \"Test 5 failed\"\nassert solution(input()) == \"1\", \"Test 6 failed\""
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\\n\") == 5\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\\n\") == 1\nassert solution(\"1 2\\n2 3\\n3 4\\n\") == 0"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\\n\") == 5\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\\n\") == 1\nassert solution(\"1\\n\\n\") == 0"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\\n\") == 5\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\\n\") == 1"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\\n\") == 5\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\\n\") == 1\n"
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Test case failed.\"\n"
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"020302\") == 7\nassert solution(\"1311\") == 24"
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(020302) == 7\nassert solution(1311) == 24"
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"7\\n\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"020302\") == 7\nassert solution(\"1311\") == 24"
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == \"3 1 3 10\"\nassert solution(sample_input_2) == \"1 15 5 15\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##.\\n##########\\n##########') == '3 1 3 10\\n\\n1 15 5 15\\n'"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input(\"Enter the number of rows and columns of the image: \")) == \"3 1 3 10\"\nassert solution(input(\"Enter the number of rows and columns of the image: \")) == \"1 15 5 15\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##.\\n##########\\n##########\\n\") == \"3 1 3 10\\n\"\nassert solution(\"5 20\\n###########.#.#.#.#.\\n###########...#.###.\\n##########..##.#..##\\n###########..#.#.##.\\n###########.###...#.\") == \"1 15 5 15\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"gold_leaf.in\", \"r\").read()) == \"3 1 3 10\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##.\\n##########\\n##########\\n') == '3 1 3 10\\n'\nassert solution('5 20\\n###########.#.#.#.#. \\n###########...#.###. \\n##########..##.#..## \\n###########..#.#.##. \\n###########.###...#. \\n') == '1 15 5 15\\n'"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''8 10\n"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"50 0.125\") == \"16.339203308\"\nassert solution(\"201 1.000\") == \"5.000000000\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test Case {i+1} has failed\"\nprint(\"Test Case 1 passed\")\nprint(\"Test Case 2 passed\")\n"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"16.339203308\"\nassert solution(stdin) == \"5.000000000\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Test {test_case} failed: {solution(stdin)}!= {expected}\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('50 0.125') == '16.34'\nassert solution('201 1.000') == '5.00'"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(324.56789012) == 16.339203308000005\nassert solution(100) == 5.0"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test case failed: Input {input()} should output {output}, but got {solution(input())}\"\n\ninput_1 = 50, 0.125\noutput_1 = 16.339203308\nassert abs(output_1 - solution(input_1)) < 0.0001, f\"Test case failed: Expected output {output_1}, but got {solution(input_1)}\"\n\ninput_2 = 201, 1.000\noutput_2 = 5.000000000\nassert abs(output_2 - solution(input_2)) < 0.0001, f\"Test case failed: Expected output {output_2}, but got {solution(input_2)}\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"50 0.125\") == \"16.339203308\"\nassert solution(\"201 1.000\") == \"5.000000000\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(50, 0.125) == 16.339203308\nassert solution(201, 1.000) == 5.0"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"16.339203308\", \"Expected output: 16.339203308, but got: {}.\".format(solution(stdin))"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 2\\n0.5 1\\n') == '2\\n'\nassert solution('4 3\\n1 11\\n0.4 1\\n') == '3\\n'"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 2\\n0.5 1\\n2 2\\n0.5 1\\n') == '2\\n'"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"Output on a single line the number of ballots 0 \\leq b_ v \\leq 2^k - 1 you should cast to maximize the expected number of positions held by Yraglac. The answer is guaranteed to be unique.\\n\"\n"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected_output, f\"Test case {case+1} has an incorrect output. Expected: {expected_output}, got: {solution}\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n0.5 1\\n\") == \"2\\n\"\nassert solution(\"4 3\\n1 11\\n0.4 1\\n\") == \"3\\n\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\", \"Expected output 2, got: \" + solution(stdin)"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n0.5 1\\n\") == \"2\\n\"\nassert solution(\"4 3\\n1 11\\n0.4 1\\n\") == \"3\\n\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n2 2\n0.5 1\n''') == '2\\n'\n\nassert solution('''\n4 3\n1 11\n0.4 1\n''') == '3\\n'"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n0.5 1\\n\") == \"2\\n\"\nassert solution(\"4 3\\n1 11\\n0.4 1\\n\") == \"3\\n\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'Output on a single line the number of ballots 2 2\\n', 'Incorrect output'"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '10.5'"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\"\n"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n7 1\\n3 2\\n10 0') == 10.5, \"Expected 10.5, got {}\".format(solution('3\\n7 1\\n3 2\\n10 0'))\nassert solution('3\\n2 1\\n4 0\\n0 3') == -1, \"Expected -1, got {}\".format(solution('3\\n2 1\\n4 0\\n0 3'))"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n7 1\\n3 2\\n10 0\\n') == '10.5\\n'\nassert solution('3\\n2 1\\n4 0\\n0 3\\n') == '-1\\n'"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 10.5"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n7 1\\n3 2\\n10 0') == '10.5'\nassert solution('3\\n2 1\\n4 0\\n0 3') == '-1'"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n3\n7 1\n3 2\n10 0\n''') == '10.5'\n\nassert solution('''\n3\n2 1\n4 0\n0 3\n''') == '-1'"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '10.5'"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n7 1\\n3 2\\n10 0') == '10.5'\nassert solution('3\\n2 1\\n4 0\\n0 3') == '-1'\n\nfrom typing import List"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"10.5\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 0.5\\n2 0.5\\n1 0.5\") == \"1\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\") == \"2\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\\n\", \"Test failed\" # expected output: \"1\\n\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 0.5\\n2 0.5\\n1 0.5\\n\") == \"1\\n\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\\n\") == \"2\\n\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=open('example.in').read()) == 'Output goes here'"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 0.5\\n2 0.5\\n1 0.5\\n\") == \"1\\n\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\\n\") == \"2\\n\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 0.5\\n2 0.5\\n1 0.5\\n\") == 1\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\\n\") == 2"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('sample_input1.txt').read()) == '1\\n'\nassert solution(open('sample_input2.txt').read()) == '2\\n'"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 1, \"The minimum amount of energy Johan has to waste while finding Polly with at least probability 0.5 is not 1.\"\n\nassert solution(\"2 0.5\\n2 0.5\\n1 0.5\\n\") == 1, \"The minimum amount of energy Johan has to waste while finding Polly with at least probability 0.5 is not 1.\"\n\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\\n\") == 2, \"The minimum amount of energy Johan has to waste while finding Polly with at least probability 0.5 is not 2.\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Test failed with input {stdin} and expected output {expected}\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 0.5\\n2 0.5\\n1 0.5\") == \"1\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\") == \"2\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"no\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"no\"\n"
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"example.in\", \"r\")) == \"yes\\n\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == \"yes\"\nassert solution(sample_input2) == \"yes\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'no'  # No possible connections"
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5 2\\n3 3 3 3\\n0 1\\n0 3\\n1 3\\n1 2\\n2 3\\n\") == \"yes\\n\"\nassert solution(\"5 4 4\\n1 1 2 2 2\\n0 1\\n2 3\\n3 4\\n4 2\\n\") == \"yes\\n\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"no\"\nassert solution() == \"no\"\nassert solution() == \"no\"\nassert solution() == \"no\"\nassert solution() == \"yes\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"yes\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5 2\\n3 3 3 3\\n0 1\\n0 3\\n1 3\\n1 2\\n2 3\") == \"yes\"\nassert solution(\"5 4 4\\n1 1 2 2 2\\n0 1\\n2 3\\n3 4\\n4 2\") == \"yes\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n5\\n5\\n5\\n\") == \"2\\n1\\n2\\n\"\nassert solution(\"4\\n20\\n15\\n17\\n14\\n\") == \"5\\n8\\n2\\n7\\n\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"2\\n1\\n2\\n7\\n5\\n8\\n2\\n\"\n"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n5\\n5\\n5\\n\") == \"2\\n1\\n2\\n\"\nassert solution(\"4\\n20\\n15\\n17\\n14\\n\") == \"5\\n8\\n2\\n7\\n\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '2\\n1\\n2\\n5\\n8\\n2\\n7\\n', \"Luka is not solving the problem correctly\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Solution: {solution(input())}, Expected Output: {output}\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\\n1\\n2\\n7\\n8\\n5\\n\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == [2, 1]\nassert solution(4) == [5, 8, 2, 7]"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n5\\n5\\n5') == '2\\n1\\n2\\n'\nassert solution('4\\n20\\n15\\n17\\n14') == '5\\n8\\n2\\n7'"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n5\\n5\\n5\\n\") == \"2\\n1\\n2\\n\"\nassert solution(\"4\\n20\\n15\\n17\\n14\\n\") == \"5\\n8\\n2\\n7\\n\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"python\") == \"python\\npython main.py\\npython main.py -n 10\"\nassert solution(\"java\") == \"java\\njava\\njava\\njava\\njava\\ndef solution(stdin: str) -> str: \\n    pass\"\nassert solution(\"^\") == \" \"\nassert solution(\"^ ^\") == \"python\"\nassert solution(\"^ python\") == \"python\"\nassert solution(\"^ python main.py\") == \"python main.py\"\nassert solution(\"^ python main.py -n 10\") == \"python main.py -n 10\"\nassert solution(\"^ -n 10\") == \"python -n 10\"\nassert solution(\"^ -n 10 -n 20\") == \"python -n 20\"\nassert solution(\"^ -n 10 -n 20 -n 30\") == \"python -n 30\"\nassert solution(\"^ ^ -n 10 -n 20 -n 30\") == \"python -n 10\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"python\" + \"\\n\" + \"python main.py\" + \"\\n\" + \"python main.py -n 10\"\nassert solution(input()) == \"java\" + \"\\n\" + \"java\" + \"\\n\" + \"java\" + \"\\n\" + \"python\" + \"\\n\" + \"java\" + \"\\n\" + \"def solution(stdin: str) -> str: pass\"\nassert solution(input()) == \"python\" + \"\\n\" + \"python main.py\" + \"\\n\" + \"python main.py -n 10\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"python\\np^ main.py\\n^ -n 10\") == \"python\\npython main.py\\npython main.py -n 10\"\nassert solution(\"python\\njava\\n^\") == \"python\\njava\\n^\"\nassert solution(\"python\\n^\") == \"python\\n^\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\npython\\np^ main.py\\n^ -n 10\") == \"python\\npython main.py\\npython main.py -n 10\\n\", \"Sample Input 1 failed\"\nassert solution(\"5\\npython\\njava\\n^\") == \"python\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Sample Input 2 failed\"\nassert solution(\"3\\npython\\n\") == \"python\\n\", \"Sample Input 3 failed\"\nassert solution(\"\") == \"\", \"Sample Input 4 failed\"\nassert solution(\"12\\npython\\njava\\n^ -n 10\") == \"python\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Sample Input 5 failed\"\n"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}\\nActual: {solution(input())}\"\n"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt').read()) == expected, f\"Solution did not match expected output. {solution(open('input.txt').read())}!= {expected}\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"The output does not match the expected output.\\nInput: {input()}\\nExpected output: {expected_output}\\nActual output: {solution(input())}\"\n"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == [\"python\"]\nassert solution(\"python\") == [\"python\"]\nassert solution(\"python main.py\") == [\"python\", \"main.py\"]\nassert solution(\"python main.py -n 10\") == [\"python\", \"main.py\", \"-n 10\"]\nassert solution(\"java\") == [\"java\"]\nassert solution(\"java python\") == [\"java python\"]\nassert solution(\"^\") == [\"^\"]\nassert solution(\"^ python\") == [\"^ python\"]\nassert solution(\"^ python main.py\") == [\"^ python main.py\"]\nassert solution(\"^ python main.py -n 10\") == [\"^ python main.py -n 10\"]\nassert solution(\"^ python -n 10\") == [\"^ python -n 10\"]\nassert solution(\"^ python main.py -n 10\") == [\"^ python main.py -n 10\"]\nassert solution(\"^ python main.py\") == [\"^ python main.py\"]\nassert solution(\"^ python main.py -n 10\") == [\"^ python main.py -n 10\"]\nassert solution(\"^ python\") == [\"^ python\"]\nassert solution(\"^ python main.py\") == [\"^ python main.py\"]\nassert solution(\"^ python main.py -n 10\") == [\"^ python main.py -n 10\"]\nassert solution(\"^ python main.py -n\") == [\"^ python main.py -n\"]\nassert solution(\"^ python main.py -n10\") == [\"^ python main.py -n10\"]\nassert solution(\"^ python main.py -n10\") == [\"^ python main.py -n10\"]\nassert solution(\"^ python main.py -n\") == [\"^ python main.py -n\"]\nassert solution(\"^ python main.py -n10\") == [\"^ python main.py -n10\"]\nassert solution(\"^ python main.py -n\") == [\"^ python main.py -n\"]\nassert solution(\"^ python main.py -n10\") == [\"^ python main.py -n10\"]\nassert solution(\"^ python main.py -n10\") == [\"^ python main.py -n10\"]\nassert solution(\"^ python main.py -n\") == [\"^ python main.py -n\"]\nassert solution(\"^ python main.py -n10\") == [\"^ python main.py -n10\"]\nassert solution(\"^ python main.py -n10\") == [\"^ python main.py -n10\"]\nassert solution(\"^ python main.py -n\") == [\"^ python main.py -n\"]\nassert solution(\"^ python main.py -n10\") == [\"^ python main.py -n10\"]\nassert solution(\"^ python main.py -n10\") == [\"^ python main.py -n10\"]\nassert solution(\"^ python main.py -n10\") == [\"^ python main.py -n10\"]\nassert solution(\"^ python main.py -n10\") == [\"^ python main.py -n10\"]\nassert solution(\"^ python main.py -n10\") == [\"^ python main.py -n10\"]\nassert solution(\"^ python main.py -n10\") == [\"^ python main.py -n10\"]\nassert solution(\"^ python main.py -n10\") == [\"^ python main.py -n10\"]\nassert solution(\"^ python main.py -n10\") == [\"^ python main.py -n10\"]\nassert solution(\"^ python main.py -n10\") == [\"^ python main.py -n10\"]\nassert solution(\"^ python main.py -n10\") == [\"^ python main.py -n10\"]\nassert solution(\"^ python main.py -n10\") == [\"^ python main.py -n10\"]\nassert solution(\"^ python main.py -n10\") == [\"^ python main.py -n10\"]\nassert solution(\"^ python main.py -n10\") == [\"^ python main.py -n10\"]\nassert solution(\"^ python main.py -n10\") == [\"^ python main.py -n10\"]\nassert solution(\"^ python main.py -n10\") == [\"^ python main.py -n10\"]\nassert solution(\"^ python main.py -n10\") == [\"^ python main.py -n10\"]\nassert solution(\"^ python main.py -n10\") == [\"^ python main.py -n10\"]\nassert solution(\"^ python main.py -n10\") == [\"^ python main.py -n10"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\npython\\np^ main.py\\n^ -n 10\") == \"python\\npython main.py\\npython main.py -n 10\"\nassert solution(\"5\\npython\\njava\\n^\\n^^^\\n^^^\") == \"python\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\npass\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"python\") == \"python\"\nassert solution(\"python main.py\") == \"python main.py\"\nassert solution(\"python main.py -n 10\") == \"python main.py -n 10\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java"
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(r'tihssnetnceemkaesprfecetsesne') == 'this sentence makes perfect sense'\nassert solution(r'hitehre') == 'impossible'\n"
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(Solution().decipher_sentence(\"tihssnetnceemkaesprfecetsesne\", 5, \"makes perfect sense sentence this\")) == \"this sentence makes perfect sense\"\nassert solution(Solution().decipher_sentence(\"hitehre\", 2, \"there hello\")) == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input(1)) == expected_output(1)\nassert solution(sample_input(2)) == expected_output(2)"
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\", 5, \"makes\", \"perfect\", \"sense\", \"sentence\", \"this\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\", 2, \"there\", \"hello\") == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\", 5, \"makes\", \"perfect\", \"sense\", \"sentence\", \"this\") == \"this sentence makes perfect sense\"\n\nassert solution(\"hitehre\", 2, \"there\", \"hello\") == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\", 5, \"makes\", \"perfect\", \"sense\", \"sentence\", \"this\") == \"this sentence makes perfect sense\"\n\nassert solution(\"hitehre\", 2, \"there\", \"hello\") == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\") == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\\n5\\nmakes\\nperfect\\nsense\\nsentence\\nthis\\n\") == \"this sentence makes perfect sense\"\n\nassert solution(\"hitehre\\n2\\nthere\\nhello\\n\") == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\", 5) == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\", 2) == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\") == \"impossible\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n2 2\\n\") == \"4\\n\"\nassert solution(\"2 2\\n\") == \"16\\n\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input: {input()}\"\n"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"1 2\\n2 2\\n\") == \"4\\n\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n2 2\\n\") == \"4\\n\"\nassert solution(\"2 2\\n\") == \"16\\n\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n2 2\\n\") == \"4\\n\"\nassert solution(\"2 2\\n\") == \"16\\n\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"4\"\nassert solution(\"2 2\") == \"16\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n2 2\\n\") == \"4\"\nassert solution(\"2 2\\n2 2\\n\") == \"16\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 4 # correct solution\n\nassert solution() == 16 # solution with two knights on different tiles"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6\\nabcbab\\n2\\ncb\\ncbab') == 2\nassert solution('4\\nababab\\n2\\nbac\\nbaba') == 4\n\nfrom typing import List"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    6\n    123456\n    2\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    acb\n    ac"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abcbab\") == \"2\", \"Incorrect result for input 1\"\nassert solution(\"abab\") == \"4\", \"Incorrect result for input 2\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\", \"The output should be 2.\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6\\nabcbab\\n2\\ncb\\ncbab\\n') == '2\\n', 'Sample Output 1'\nassert solution('4\\nabab\\n2\\nbac\\nbaba\\n') == '4\\ndef solution(stdin: str) -> str:\\n    pass\\n', 'Sample Output 2'"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '2'"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '2'\nassert solution(stdin) == '4'"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\"\nfor _ in range(input()):\n    N, L = map(int, input().split())\n    M = int(input())\n    patterns = list(map(str, input().split()))\n    total_length = sum(map(len, patterns))\n    assert total_length <= 13000000, f\"Total length of tile patterns is {total_length} which exceeds the limit of 13000000.\"\n    \n    untileable_cells = 0\n    for i in range(M):\n        pattern = patterns[i]\n        pattern_chars = list(pattern)\n        pattern_length = len(pattern_chars)\n        pattern_chars.sort()\n        for j in range(N - pattern_length + 1):\n            if pattern_chars == sorted(pattern_chars[:pattern_length]):\n                untileable_cells += 1\n                break\n                \n    print(untileable_cells)"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected_output, f\"The provided code is not correct.\\nExpected output: {expected_output}\\nGot: {solution}\"\n\nfor i in range(1, 11):\n    assert round(solution(f\"Sample Input {i}\"), 6) == round(expected_output[i-1], 6), f\"Test case {i} failed.\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Output\\nSolution\\n\"\n"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"6\\n85\\n90\\n95\\n100\\n105\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected_solution, f\"Test case failed: {solution}!= {expected_solution}\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"50\\n4\\n110 10\\n80 10\\n80 0\\n110 0\\n\") == \"6\\n85\\n90\\n95\\n100\\n105\\n\"\nassert solution(\"24\\n3\\n10 10\\n30 10\\n20 20\\n\") == \"4\\n17.071067\\n20\\n22.928932\\n\"\n"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n50\n4\n110 10\n80 10\n80 0\n110 0\n''') == '''\n6\n85\n90\n95\n100\n105\n'''\n\nassert solution('''\n24\n3\n10 10\n30 10\n20 20\n''') == '''\n4\n17.071067\n20\n22.928932\n'''"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(10, 4, 110, 10, 80, 10, 80, 110, 0) == 6\nassert solution(24, 3, 10, 10, 30, 10, 20) == 4"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == expected_output, f\"The given solution {solution(open('input.txt', 'r').read())} is not correct. Expected output:\\n{expected_output}\\nActual output:\\n{solution(open('input.txt', 'r').read())}\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == \"6\\n85\\n90\\n95\\n100\\n105\"\nassert solution(sample_input_2) == \"4\\n17.071067\\n20\\n22.928932\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"50\\n4\\n110 10\\n80 10\\n80 0\\n110 0\\n\") == \"6\\n85\\n90\\n95\\n100\\n105\\n\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\"\n\nfrom typing import List"
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == \"yes\" # Test Case 1"
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'yes'\nassert solution(stdin) == 'yes'"
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 11\") == \"yes\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    10 11\n    \"\"\"\n) == \"yes\"\n\nassert solution(\n    \"\"\"\n    10 7\n    \"\"\"\n) == \"yes\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == output, f\"Test failed for solution: {stdin}\"\n"
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"Output the length of the longest sequence on the first line.\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\n1 2\\n3 4\\n\") == \"3\\n1 2\\n3 4\\n\"\nassert solution(\"10\\n1 2\\n3 4\\n5\\n6 7\\n\") == \"3\\n1 2\\n3 4\\n5\\n6 7\\n\"\nassert solution(\"10\\n1 2\\n3 4\\n5\\n6 7\\n8\\n9 10\\n\") == \"3\\n1 2\\n3 4\\n5\\n6 7\\n8\\n9 10\\n\"\nassert solution(\"10\\n1 2\\n3 4\\n5\\n6 7\\n8\\n9 10\\n11\\n\") == \"3\\n1 2\\n3 4\\n5\\n6 7\\n8\\n9 10\\n11\\n\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == 'output.txt'"
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"3\n3 4\n2 5\n1 6\n\"\"\"\n) == \"\"\"3\n1 6\n2 5\n3 4\n\"\"\"\n\nassert solution(\n    \"\"\"5\n10 30\n20 40\n30 50\n10 60\n30 40\n\"\"\"\n) == \"\"\"3\n10 60\n30 50\n30 40\n\"\"\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"3\\n1 6\\n2 5\\n3 4\"\nassert solution(5) == \"3\\n10 60\\n30 50\\n30 40\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"3\\n1 6\\n2 5\\n3 4\"\nassert solution(5) == \"3\\n10 60\\n30 50\\n30 40\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == sample_output1, \"Test failed for sample_input1\"\nassert solution(sample_input2) == sample_output2, \"Test failed for sample_input2\"\n\nfrom typing import List"
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 4\\n2 5\\n1 6\\n\") == \"3\\n1 6\\n2 5\\n3 4\\n\"\nassert solution(\"5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40\\n\") == \"3\\n10 60\\n30 50\\n30 40\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == 5836, \"Expected output: 5836, but got: \" + str(solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\"))"
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"Output a single integer, representing the smallest possible total amount of wasted paper.\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected, f\"Test failed. Expected output: {expected}, but got: {solution}\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Output the smallest possible total amount of wasted paper\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == 5836\nassert solution(\"5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == 1828"
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16') == 5836, \"Error: Expected output 5836, but got {}\".format(solution('5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16'))\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1828\", \"Test case not provided.\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 5836, \"Testcase 1 failed\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    5 1\n    10 10 5\n    9 8 10\n    4 12 20\n    12 4 8\n    2 3 16\n    \"\"\"\n) == \"5836\\n\"\n\nassert solution(\n    \"\"\"\n    5 2\n    10 10 5\n    9 8 10\n    4 12 20\n    12 4 8\n    2 3 16\n    \"\"\"\n) == \"1828\\n\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r').read()) == 5836\nassert solution(open('input.txt', 'r').read()) == 1828"
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99\\n') == 50\nassert solution('3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200\\n') == 'impossible'"
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"\"\"\n50\n\"\"\"\n"
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution_input1) == solution_output1\nassert solution(solution_input2) == solution_output2\n"
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99\") == \"50\\n\"\nassert solution(\"3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200\") == \"impossible\\n\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1') == 'impossible'\nassert solution('2') == 'impossible'\nassert solution('3') == 'impossible'\nassert solution('4') == 'impossible'\nassert solution('5') == 'impossible'\nassert solution('6') == 'impossible'\nassert solution('7') == 'impossible'\nassert solution('8') == 'impossible'\nassert solution('9') == 'impossible'\nassert solution('10') == 'impossible'\nassert solution('11') == 'impossible'\nassert solution('12') == 'impossible'\nassert solution('13') == 'impossible'\nassert solution('14') == 'impossible'\nassert solution('15') == 'impossible'\nassert solution('16') == 'impossible'\nassert solution('17') == 'impossible'\nassert solution('18') == 'impossible'\nassert solution('19') == 'impossible'\nassert solution('20') == 'impossible'\nassert solution('21') == 'impossible'\nassert solution('22') == 'impossible'\nassert solution('23') == 'impossible'\nassert solution('24') == 'impossible'\nassert solution('25') == 'impossible'\nassert solution('26') == 'impossible'\nassert solution('27') == 'impossible'\nassert solution('28') == 'impossible'\nassert solution('29') == 'impossible'\nassert solution('30') == 'impossible'\nassert solution('31') == 'impossible'\nassert solution('32') == 'impossible'\nassert solution('33') == 'impossible'\nassert solution('34') == 'impossible'\nassert solution('35') == 'impossible'\nassert solution('36') == 'impossible'\nassert solution('37') == 'impossible'\nassert solution('38') == 'impossible'\nassert solution('39') == 'impossible'\nassert solution('40') == 'impossible'\nassert solution('41') == 'impossible'\nassert solution('42') == 'impossible'\nassert solution('43') == 'impossible'\nassert solution('44') == 'impossible'\nassert solution('45') == 'impossible'\nassert solution('46') == 'impossible'\nassert solution('47') == 'impossible'\nassert solution('48') == 'impossible'\nassert solution('49') == 'impossible'\nassert solution('50') == 'impossible'\nassert solution('51') == 'impossible'\nassert solution('52') == 'impossible'\nassert solution('53') == 'impossible'\nassert solution('54') == 'impossible'\nassert solution('55') == 'impossible'\nassert solution('56') == 'impossible'\nassert solution('57') == 'impossible'\nassert solution('58') == 'impossible'\nassert solution('59') == 'impossible'\nassert solution('60') == 'impossible'\nassert solution('61') == 'impossible'\nassert solution('62') == 'impossible'\nassert solution('63') == 'impossible'\nassert solution('64') == 'impossible'\nassert solution('65') == 'impossible'\nassert solution('66') == 'impossible'\nassert solution('67') == 'impossible'\nassert solution('68') == 'impossible'\nassert solution('69') == 'impossible'\nassert solution('70') == 'impossible'\nassert solution('71') == 'impossible'\nassert solution('72') == 'impossible'\nassert solution('73') == 'impossible'\nassert solution('74') == 'impossible'\nassert solution('75') == 'impossible'\nassert solution('76') == 'impossible'\nassert solution('77') == 'impossible'\nassert solution('78') == 'impossible'\nassert solution('79') == 'impossible'\nassert solution('80') == 'impossible'\nassert solution('81') == 'impossible'\nassert solution('82') == 'impossible'\nassert solution('83') == 'impossible'\nassert solution('84') == 'impossible'\nassert solution('85') == 'impossible'\nassert solution('86') == 'impossible'\nassert solution('"
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"impossible\"\n"
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '50\\n'\n"
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99\") == 50\nassert solution(\"3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200\") == \"impossible\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input1) == output1, f\"Expected output: {output1}, but got: {solution(input1)}\"\nassert solution(input2) == output2, f\"Expected output: {output2}, but got: {solution(input2)}\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'impossible'  # add your solution here"
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5.0) == [0, 0, 0, 0, 1], \"Solution does not match.\"\nassert solution(4.5) == [0, 0, 0, 1, 1], \"Solution does not match.\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected"
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Input and output do not match\"\n"
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5.0) == '0 0 0 0 1'\nassert solution(4.5) == '0 0 0 1 1'"
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '0 0 0 0 1', 'Incorrect Output'"
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Incorrect Output\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3.2) == \"0 0 0 0 1\"\nassert solution(4.5) == \"0 0 0 1 1\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"0 0 0 0 1\"\nassert solution(input()) == \"0 0 0 1 1\"\nassert solution(input()) == \"0 0 0 1 1\"\nassert solution(input()) == \"0 0 0 0 1\"\nassert solution(input()) == \"0 0 0 0 1\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5.0\") == \"0 0 0 0 1\"\nassert solution(\"4.5\") == \"0 0 0 1 1\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2"
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\\n\") == \"8\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\\n\") == \"3\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\") == \"8\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\") == \"3\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\") == \"8\\n\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\") == \"3\\n\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"3\\n\"\n"
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2"
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"8\", \"Please implement the solution correctly\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\") == \"8\\n\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\") == \"3\\n\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\\n\") == \"8\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\\n\") == \"3\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\") == \"8\\n\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\") == \"3\\n\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('8 3 1\\n1 7 8 2 6 4 3 5\\n') == '8\\n'\nassert solution('8 2 1\\n1 7 8 2 6 4 3 5\\n') == '3\\n'"
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n2 3 4 1\\n\") == \"3\\n\"\nassert solution(\"6 3\\n2 2 2 4 4 4\\n\") == \"4\\n\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n2 3 4 1\\n\") == \"3\\n\"\nassert solution(\"6 3\\n2 2 2 4 4 4\\n\") == \"4\\n\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\\n\", \"Solution should return 3\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n2 3 4 1\\nSample Output 1: 3\\n\\nSample Input 2: 6 3\\n2 2 2 4 4 4\\nSample Output 2: 4\") == \"3\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 2\\n2 3 4 1\\n') == '3\\n'\nassert solution('6 3\\n2 2 2 4 4 4\\n') == '4\\n'\n\nassert solution('') == ''\nassert solution('  \\n') == ''\nassert solution('3\\n2 3\\n4\\n') == '3\\n'\nassert solution('4 5\\n2 3 4\\n') == ''\n\nprint('All tests passed')"
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n2 3 4 1\\n\") == \"3\"\nassert solution(\"6 3\\n2 2 2 4 4 4\\n\") == \"4\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n2 3 4 1\\n\") == \"3\\n\"\nassert solution(\"6 3\\n2 2 2 4 4 4\\n\") == \"4\\n\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 2\\n2 3 4 1\\n') == '3'\nassert solution('6 3\\n2 2 2 4 4 4\\n') == '4'"
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Test failed: {input()}, expected {output()}\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Error: Expected output {} but got {}\".format(output(), solution(input()))"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Output: {solution(input())}, Expected: {output()}\""
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1.732050\\n1 1 3.0\\n\") == \"1.732050808\\n\"\nassert solution(\"1 1 3.0\\n1 1 1.732050\\n\") == \"-1\\n\"\nassert solution(\"1 1 1.732050\\n1 1 3.0\\n2 1 1.732050\\n\") == \"1.732050808\\n\"\nassert solution(\"1 1 3.0\\n1 1 1.732050\\n2 1 1.732050\\n\") == \"-1\\n\"\nassert solution(\"1 1 1.732050\\n1 1 3.0\\n2 1 1.732050\\n3 1 1.732050\\n\") == \"1.732050808\\n\"\nassert solution(\"1 1 3.0\\n1 1 1.732050\\n2 1 1.732050\\n3 1 1.732050\\n\") == \"-1\\n\"\nassert solution(\"1 1 1.732050\\n1 1 3.0\\n2 1 1.732050\\n3 1 1.732050\\n4 1 1.732050\\n\") == \"1.732050808\\n\"\nassert solution(\"1 1 3.0\\n1 1 1.732050\\n2 1 1.732050\\n3 1 1.732050\\n4 1 1.732050\\n\") == \"-1\\n\"\nassert solution(\"1 1 1.732050\\n1 1 3.0\\n2 1 1.732050\\n3 1 1.732050\\n4 1 1.732050\\n5 1 1.732050\\n\") == \"1.732050808\\n\"\nassert solution(\"1 1 3.0\\n1 1 1.732050\\n2 1 1.732050\\n3 1 1.732050\\n4 1 1.732050\\n5 1 1.732050\\n\") == \"-1\\n\"\n"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test case failed\""
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1.732050\") == \"1.732050808\"\nassert solution(\"1 1 3.0\") == \"-1\"\n"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1.732050\") == 1.732050808\nassert solution(\"1 1 3.0\") == -1"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input1) == output1, f\"Test case 1 failed: Expected output {output1}, got {solution(input1)}\"\nassert solution(input2) == output2, f\"Test case 2 failed: Expected output {output2}, got {solution(input2)}\""
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == '1.732050808', 'Incorrect result for Sample Input 1'\nassert solution(sample_input2) == '-1', 'Incorrect result for Sample Input 2'"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1.732050\") == 1.732050808\nassert solution(\"1 1 3.0\") == -1"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1.732050\\n1 1 3.0\") == 1.732050808\nassert solution(\"1 1 3.0\\n1 1 1.732050\") == -1\n\nfrom typing import List"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 2.4999999987500003\n"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n3 4 2\\n.75\\n') == '2.4999999987500003\\n'\nassert solution('2\\n0 100 10\\n0 -100 100\\n.80\\n') == '9.999999999000002\\n'\n"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\\n2.4999999987500003\\n2\\n0 100 10\\n0 -100 100\\n.80\\n\") == \"2.4999999987500003\\n\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\\n\") == \"9.999999999000002\\n\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '2.4999999987500003', \"Test case 1 failed\"\n\nassert solution() == '9.999999999000002', \"Test case 2 failed\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\\n\\n2\\n0 100 10\\n0 -100 100\\n.80\\n\\n\") == \"2.4999999987500003\\n\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\\n\\n\") == \"9.999999999000002\\n\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\\n2.4999999987500003\") == \"2.4999999987500003\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\") == \"9.999999999000002\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n3 4 2\\n.75\\n') == '2.4999999987500003\\n'\nassert solution('2\\n0 100 10\\n0 -100 100\\n.80\\n') == '9.999999999000002\\n'"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\\n\") == \"2.4999999987500003\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\\n\") == \"9.999999999000002\"\n"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\\n\\n2\\n0 100 10\\n0 -100 100\\n.80\") == \"2.4999999987500003\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\") == \"9.999999999000002\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n1\n3 4 2\n.75\n''') == '2.4999999987500003'\n\nassert solution('''\n2\n0 100 10\n0 -100 100\n.80\n''') == '9.999999999000002'\n\nassert solution('''\n1\n3 4 2\n.75\n2\n3 4 5\n.67\n''') == '1.5'\n\nassert solution('''\n2\n3 4 5\n.67\n1\n3 4 5\n.67\n''') == '1.5'\n\nassert solution('''\n2\n1 2 3\n.75\n2\n1 2 3\n.75\n''') == '1.25'\n\nassert solution('''\n1\n3 4 2\n.75\n2\n1 2 3\n.75\n2\n1 2 3\n.75\n''') == '1.5'\n\nassert solution('''\n2\n1 2 3\n.75\n2\n1 2 3\n.75\n2\n1 2 3\n.75\n''') == '1.25'\n\nassert solution('''\n1\n3 4 2\n.75\n2\n1 2 3\n.75\n2\n1 2 3\n.75\n2\n1 2 3\n.75\n''') == '1.5'\n\nassert solution('''\n2\n1 2 3\n.75\n2\n1 2 3\n.75\n2\n1 2 3\n.75\n2\n1 2 3\n.75\n''') == '1.25'\n\nassert solution('''\n1\n3 4 2\n.75\n2\n1 2 3\n.75\n2\n1 2 3\n.75\n2\n1 2 3\n.75\n''') == '1.5'\n\nassert solution('''\n2\n1 2 3\n.75\n2\n1 2 3\n.75\n2\n1 2 3\n.75\n2\n1 2 3\n.75\n''') == '1.25'"
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\") == \"0\\n3\\n2\\n1\\n0\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '0\\n3\\n'\nassert solution(open('example_input1.txt', 'r')) == '0\\n3\\n'\nassert solution(open('example_input2.txt', 'r')) == '3\\n2\\n1\\n0\\n'"
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 0, \"Expected 0, but got \" + str(solution(3))\nassert solution(6) == 3, \"Expected 3, but got \" + str(solution(6))\nassert solution(5) == 2, \"Expected 2, but got \" + str(solution(5))\nassert solution(4) == 1, \"Expected 1, but got \" + str(solution(4))\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 2 1 1 2') == 0\nassert solution('2 1 6') == 3\nassert solution('4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4') == 3\nassert solution('') == 0\nassert solution('6 3\\n2 1 6\\n1 1 5 1 2\\n2 1 6') == 0"
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(str(4) +'' + str(5) + '\\n' + '1 1 4 3 4\\n' + '2 1 1\\n' + '2 2 2\\n' + '2 3 3\\n' + '2 4 4\\n') == '3\\n2\\n1\\n0'"
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 6\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n') == '0\\n3\\n'\nassert solution('4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\\n') == '3\\n2\\n1\\n0\\n'\n"
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    6 3\n    2 1 6\n    1 1 5 1 2\n    2 1 6\n    \"\"\"\n) == \"0\\n3\\n\"\n\nassert solution(\n    \"\"\"\n    4 5\n    1 1 4 3 4\n    2 1 1\n    2 2 2\n    2 3 3\n    2 4 4\n    \"\"\"\n) == \"3\\n2\\n1\\n0\\n\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n6 3\n2 1 6\n1 1 5 1 2\n2 1 6\n''') == '0\\n3\\n'\nassert solution('''\n4 5\n1 1 4 3 4\n2 1 1\n2 2 2\n2 3 3\n2 4 4\n''') == '3\\n2\\n1\\n0\\n'\nassert solution('''\n1 1 4 3 4\n2 1 1\n2 2 2\n2 3 3\n2 4 4\n''') == '3\\n2\\n1\\n0\\n'"
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 6 2 1 6\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n\") == \"0\\n3\\n\"\nassert solution(\"4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\\n\") == \"3\\n2\\n1\\n0\\n\"\n"
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 3\\n2 1 6\\n1 1 5 1 2\\n2 1 6\") == \"0\\n3\"\nassert solution(\"4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\") == \"3\\n2\\n1\\n0\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == \"1\\n\"\nassert solution(open('input2.txt', 'r')) == \"4\\n\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 7 1000000007\") == \"1\\n\"\nassert solution(\"3 2 1000000007\") == \"4\\n\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"1\"\n"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '1', \"Expected: 1, got: \" + solution(stdin)\n\nimport math"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\"\n\nfrom typing import List"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 1"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 7 1000000007') == '1\\n'\nassert solution('3 2 1000000007') == '4\\n'\n"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='1 7 1000000007') == '1\\n'\nassert solution(stdin='3 2 1000000007') == '4\\n'\n\nfrom typing import List"
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"5\", \"The solution for the given input is incorrect.\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 10\\n6\\n11\") == \"5\"\nassert solution(\"3 5\\n11\") == \"8\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 10\\n6\") == \"5\\n\"\nassert solution(\"3 5\\n11\") == \"8\\n\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 10\\n6\\n11\") == \"5\"\nassert solution(\"3 5\\n11\") == \"8\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output, f\"Test case failed. Expected output: '{expected_output}', Received output: '{solution(stdin)}'\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"Output the number of grey cells the hedgehog visits.\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 5, \"Your implementation is incorrect.\"\nprint(\"Correct!\")"
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Test failed. Expected output: {output()}, got: {solution(input())}\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 10\\n6\\n3 5\\n11\") == 8, \"Test failed\"\nassert solution(\"10 10\\n6\\n1 2 3\") == 0, \"Test failed\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\") == \"2\"\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\") == \"3\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\\n\") == \"2\"\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n\") == \"3\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed.\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\\n') == '2'\nassert solution('4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\\n') == '3'"
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\") == \"2\\n\"\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\\n\") == \"3\\n\"\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n\\n4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n\") == \"2\\n3\\n\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 2\n1 2 1\n3 2 1\n''') == '2\\n'\n\nassert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '3\\n'"
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\") == \"2\"\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\") == \"3\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\") == \"2\"\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\") == \"3\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\") == \"2\"\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\") == \"3\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 3\\n10 20 30\\n5 5 10\\n2 20\\n1 30\\n1 32\\n3 120') == 3\n"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 3\\n10 20 30\\n5 5 10\\n2 20\\n1 30\\n1 32\\n3 120') == '3\\n'\nassert solution('3 1\\n10\\n10\\n1 10\\n1 10\\n1 10') == '3\\n'"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 3, \"The output should be 3.\""
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 3\\n10 20 30\\n5 5 10\\n2 20\\n1 30\\n1 32\\n3 120') == '3'\n\nassert solution('3 1\\n10\\n10\\n1 10\\n1 10\\n1 10') == '3'"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 3"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n10 20 30\\n5 5 10\\n2 20\\n1 30\\n1 32\\n3 120\") == 3"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '3'\n"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n10 20 30\\n5 5 10\\n2 20\\n1 30\\n1 32\\n3 120\") == \"3\\n\"\nassert solution(\"3 1\\n10\\n10\\n1 10\\n1 10\\n1 10\") == \"3\\n\"\nassert solution(\"5 2\\n10 10 10\\n5 5 10\\n1 20\\n1 20\\n1 20\") == \"5\\n\""
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 'Output a single integer on a line by itself, the maximum number of customers Fluttershy can serve.'"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Sample Input 1\\n4 3\\n10 20 30\\n5 5 10\\n2 20\\n1 30\\n1 32\\n3 120\\nSample Output 1\\n3\\n\\nSample Input 2\\n3 1\\n10\\n10\\n1 10\\n1 10\\n1 10\\nSample Output 2\\n3\") == \"3\"\nassert solution(\"Sample Input 1\\n4 3\\n10 20 30\\n5 5 10\\n2 20\\n1 30\\n1 32\\n3 120\\nSample Output 1\\n3\\n\\nSample Input 2\\n3 1\\n10\\n10\\n1 10\\n1 10\\n1 10\\nSample Output 2\\n3\") == \"3\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 1\nassert solution(2) == 1\nassert solution(3) == 5"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == output, f\"Test case {i+1} failed. Expected {output}, got {solution(stdin)}\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=None) == \"1\\n\"\nassert solution(stdin=\"2\\n\") == \"1\\n\"\nassert solution(stdin=\"3\\n\") == \"5\\n\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n3\\n') == '1\\n'\nassert solution('3\\n') == '5\\n'"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == 1\nassert solution(3) == 5"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"Expected {expected_output}, got {solution(stdin)}\"\n"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == \"1\\n\"\nassert solution(2) == \"1\\n\"\nassert solution(3) == \"5\\n\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2') == '1\\n'\nassert solution('3') == '5\\n'"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Output\"\n"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_str) == expected_output"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n0 11 9\\n1 0 10\\n0 0 0\\n\") == \"2\"\nassert solution(\"4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\\n\") == \"-1\""
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n3 1\n0 11 9\n1 0 10\n0 0 0\n''') == '2'\n\nassert solution('''\n4 3\n0 1 0 19\n0 0 2 0\n0 5 0 3\n0 0 0 0\n''') == '-1'"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Got: {solution(input())}\""
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 1\\n0 11 9\\n1 0 10\\n0 0 0') == 2\nassert solution('4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0') == -1"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n0 11 9\\n1 0 10\\n0 0 0\") == 2\nassert solution(\"4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\") == -1"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\", \"Incorrect output for sample 1\"\n\nassert solution() == \"2\", \"Incorrect output for sample 2\""
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '2\\n', \"Sample Output 1: {}\".format(solution(stdin))\n\nprint(\"Sample Output 2: {}\".format(solution(stdin)))"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\"\n2\n\"\"\"\n\nassert solution(stdin) == \"\"\"\n-1\n\"\"\""
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 1\\n0 11 9\\n1 0 10\\n0 0 0') == 2\nassert solution('4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0') == -1"
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\\n\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"\"\"4 3 5\n0 1 2\n0 2 1\n1 2 1\n1 3 1\n2 3 2\"\"\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\"\nassert solution(\"2 1 0 1\\n0 1 100000\") == \"2 100000 1\\n0 1 100000\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\\n\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\"\nassert solution(\"2 1 0 1\\n0 1 100000\") == \"2 100000 1\\n0 1 100000\"\n"
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\\n') == '''\n4 3 5\n0 1 2\n0 2 1\n1 2 1\n1 3 1\n2 3 2\n'''\n\nassert solution('2 1 0 1\\n0 1 100000\\n') == '''\n2 100000 1\n0 1 100000\n'''"
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n4 5 0 3\n0 1 10\n1 2 1\n1 3 1\n0 2 1\n2 3 10\n''') == '''\n4 3 5\n0 1 2\n0 2 1\n1 2 1\n1 3 1\n2 3 2\n'''\n\nassert solution('''\n2 1 0 1\n0 1 100000\n''') == '''\n2 100000 1\n0 1 100000\n'''"
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Expected: {output}, Actual: {solution(input())}\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '3 5\\n2 0'"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\\n2 3\\nS.M\\nM..\") == \"3 5\\n\"\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\\n\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\\n\") == \"3 5\\n\"\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\\n\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution_input) == solution_output, f\"Test case failed: {solution_input}!= {solution_output}\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3 5\\n2 0\"\n\nimport sys\nfrom typing import List"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"3 5\"\nassert solution(input()) == \"2 0\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3 5\\n2 0\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\\n\") == \"3 5\\n\"\nassert solution(\"2 3\\nS.M\\nM..\\n\") == \"2 0\\n\"\n\nSolution:\n\nWe can solve this problem by using a depth-first search (DFS) approach. We will iterate through all the fields of the board and perform a DFS traversal to calculate the spread of each player. The DFS traversal starts at the first empty field and explores all the possible moves. We will keep track of the visited fields and update the spread of each player as we go.\n\nTo perform the DFS traversal, we can use a queue data structure. We will start with a queue containing only one element, the current empty field. Then we will perform DFS traversal for each field in the queue. For each field, we will check if any of its neighbours are empty. If a neighbour is empty, we will enqueue it in the queue. We will then perform a DFS traversal on that field and dequeue the neighbours from the queue. We will then calculate the spread of the current player by adding the distances of the current player to the distances of the neighbours. Finally, we will print the spread of each player on a separate line.\n\nLet's implement this solution:<|im_sep|>"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\\n\") == \"3 5\\n\"\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\\n\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\\n\") == \"2\\n3 c\\n6 c\\n\"\nassert solution(\"6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n\") == \"1\\n6 b\\n\"\nassert solution(\"\") == \"\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\") == \"2\\n3 c\\n6 c\\n\"\nassert solution(\"6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n\") == \"1\\n6 b\\n\"\nassert solution(\"13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\") == \"2\\n3 c\\n6 c\\n\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''13\n0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a''') == '2\\n3 c\\n6 c\\n'\n\nassert solution('''6\n0 B\n1 B\n1 T a\n2 E a\n2 S\n5 T a''') == '1\\n6 b\\n'\n\nassert solution('''3\n0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a''') == '2\\n3 c\\n6 c\\n'\n\nassert solution('''0\n0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a''') == '0\\n0 b\\n'"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\") == \"2\\n3 c\\n6 c\\n\"\nassert solution(\"6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n\") == \"1\\n6 b\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''13\n0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a''') == ['2', '3', '6']\n\nassert solution('''6\n0 B\n1 B\n1 T a\n2 E a\n2 S\n5 T a''') == ['1', '6']\n\nassert solution('''3\n0 B\n1 B\n2 E a\n2 S\n5 T a\n5 E a\n5 E b''') == ['2', '5']"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2\\n3 c\\n6 c\\n\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"\"\"2\n3 c\n6 c\"\"\"\n"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\nr\"\"\"\n6\n0 B\n1 B\n1 T a\n2 E a\n2 S\n5 T a\nSample Output 2:\n1\n6 b\n"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\\n\") == 2\nassert solution(\"6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n\") == 1\nassert solution(\"3\\n0 B\\n1 B\\n2 E a\\n2 S\\n5 T a\\n\") == 6\n"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\nprint(\"All test cases passed\")"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '40'\nassert solution(stdin) == '76'"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 5\") == \"40\"\nassert solution(\"288 291\") == \"76\"\n"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 5\") == \"40\"\nassert solution(\"288 291\") == \"76\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 5\") == \"40\"\nassert solution(\"288 291\") == \"76\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 5\") == \"40\"\nassert solution(\"288 291\") == \"76\"\n\nfrom functools import reduce"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '40', \"Test case 1 failed. Expected output is 40, but got {}\".format(solution())\nassert solution() == '76', \"Test case 2 failed. Expected output is 76, but got {}\".format(solution())"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 5\\n288 291\\n\") == \"40\\n76\\n\", \"The correctness of the solution is not provided.\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5\\n288 291\\n\") == \"40\\n76\\n\", \"Test case 1 failed\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5\\n288 291\\n\") == \"40\\n76\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"CAT\") == \"CAR\", \"Invalid solution\"\nassert solution(\"DOG\") == \"CAR\", \"Invalid solution\"\nassert solution(\"COT\") == \"CAR\", \"Invalid solution\"\nassert solution(\"GAS\") == \"GAS\", \"Invalid solution\"\nassert solution(\"CAB\") == \"GAS\", \"Invalid solution\"\nassert solution(\"BAB\") == \"BAB\", \"Invalid solution\"\nassert solution(\"ACAD\") == \"ACAD\", \"Invalid solution\"\nassert solution(\"AA\") == 0, \"Invalid solution\"\nassert solution(\"AC\") == 0, \"Invalid solution\"\nassert solution(\"B\") == 0, \"Invalid solution\"\nassert solution(\"C\") == 0, \"Invalid solution\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"CAT\"\nassert solution(\"2\") == \"DOG\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == ['COG', 3]\nprint(\"Tests passed!\")"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('CAT\\nDOG\\nCOT\\n') == 'COG', 'Wrong answer 1'\nassert solution('2\\nCAT\\nDOG\\n') == 0, 'Wrong answer 2'"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, got: {solution(input())}\"\n\nfor i, line in enumerate(input().splitlines()):\n    words = line.split()\n    dictionary = set(words[:len(words) // 2])\n    starting_word = words[len(words) // 2]\n    ending_word = words[len(words) // 2 + 1]\n    steps = min(len(ending_word), len(dictionary) - len(ending_word))\n    if steps == 0:\n        continue\n    path = starting_word[:len(starting_word) // 2]\n    for j in range(len(path)):\n        if path[j] not in dictionary:\n            path = path[:j] + ending_word[j:]\n            break\n    if path not in dictionary:\n        continue\n    new_word = path[j]\n    if new_word not in dictionary:\n        dictionary.add(new_word)\n    else:\n        steps -= 1\n    assert steps == 0, f\"Expected: 0, got: {steps}\"\n    print(new_word)\n\nexpected = [\"COG\", 3]\n"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test case {case_number} has incorrect output. Expected: {expected_output}, Received: {solution(input())}\"\nfor case_number, (input_str, expected_output) in enumerate(test_cases):\n    assert solution(input_str) == expected_output, f\"Test case {case_number} has incorrect output. Expected: {expected_output}, Received: {solution(input_str)}\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == [\"COG\", \"3\"]\nassert solution() == [\"0\", \"-1\"]"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Your solution is incorrect!\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"9\\n\", \"Sample Output 1\"\nassert solution() == \"6\\n\", \"Sample Output 2\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 1\") == \"9\"\nassert solution(\"4 3\") == \"6\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(input()) + \"\\n\") == str(1000000007), \"Error: Invalid Input\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 9"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"9\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"Output the number of sequences modulo 1000000007.\"\nprint(solution())"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"The output and the expected output are not matching.\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 1\") == \"9\\n\"\nassert solution(\"4 3\") == \"6\\n\""
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 3\n"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case {i+1} failed\" for i, sample_input, sample_output in enumerate(test_cases)"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == 3, \"The sample input 1 does not satisfy the given requirements.\"\nassert solution(sample_input2) == -1, \"The sample input 2 does not satisfy the given requirements.\""
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 5\\n/.V.\\n./.V.\\n..#..\\n.V.#.\\n\\.V./\\n\") == 3\nassert solution(\"2 5\\nV...\\nH...V\\n\") == -1\n"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 5\\n/.V.\\n./.V. \\n..#.. \\n.V.#. \\n\\.V./\") == 3\nassert solution(\"2 5\\nV...\\nH...V\") == -1\nassert solution(\"5 5\\n/.V.\\n./.V. \\n..#.. \\n.V.#. \\n\\.V./\") == 3\nassert solution(\"2 5\\nV...\\nH...V\") == -1"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == '3'\nassert solution(open('sample_input1.txt', 'r')) == '3'\nassert solution(open('sample_input2.txt', 'r')) == '-1'"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 5\\n/.V.\\n./.V.\\n..#..\\n.V.#.\\n\\.V./\\n\") == 3\nassert solution(\"2 5\\nV...\\nH...V\\n\") == -1\n"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Solution for Sample Input {stdin} is not {expected}\""
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected_output, \"Incorrect output.\"\nprint(\"PASSED\")\n"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"n fox jumps ove\\nuick brown f\\nthe quick b\\ny dog.\\nrown fox\\mps over the l\\the lazy dog\") == \"The quick brown fox jumps over the lazy dog.\"\nassert solution(\"cdefghi\\nfghijk\\nfghijx\\nabcdefg\") == \"AMBIGUOUS\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == \"AMBIGUOUS\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"n fox jumps ove\\nuick brown f\\nThe quick b\\ny dog.\\nrown fox\\mps over the l\\the lazy dog\") == \"The quick brown fox jumps over the lazy dog.\"\nassert solution(\"cdefghi\\nefghijk\\nefghijx\\nabcdefg\") == \"AMBIGUOUS\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"The quick brown fox jumps over the lazy dog.\"\nassert solution(input()) == \"AMBIGUOUS\"\n"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"The quick brown fox jumps over the lazy dog.\"\n"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == \"The quick brown fox jumps over the lazy dog.\"\nassert solution(sample_input2) == \"AMBIGUOUS\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"The quick brown fox jumps over the lazy dog.\"\n\nfrom typing import List"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"The quick brown fox jumps over the lazy dog.\", \"AMBIGUOUS\"\n"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == \"The quick brown fox jumps over the lazy dog.\"\nassert solution(sample_input2) == \"AMBIGUOUS\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Test failed: {output}\" for input, output in zip(samples, test_cases)"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1') == '---+\\n'\nassert solution('3 2\\n1 2 1\\n-2 0 2') == '0+-\\n'"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"---0-\"\nassert solution(\"3 2\\n1 2 1\\n-2 0 2\") == \"0-+\"\nassert solution(\"5 2\\n2 3 1\\n-3 0 2\\n0 2 3\\n-2 2 2\\n2 4 2\") == \"---0-\"\nassert solution(\"3 1\\n1 1 1\\n-1 1 1\") == \"---0-\"\nassert solution(\"5 1\\n2 2 2\\n1 3 3\\n1 4 4\\n2 5 5\") == \"---0-\"\nassert solution(\"3 1\\n1 1 1\\n-1 1 1\") == \"---0-\"\nassert solution(\"5 1\\n2 2 2\\n1 3 3\\n1 4 4\\n2 5 5\") == \"---0-\"\nassert solution(\"3 1\\n1 1 1\\n-1 1 1\") == \"---0-\"\nassert solution(\"5 1\\n2 2 2\\n1 3 3\\n1 4 4\\n2 5 5\") == \"---0-\"\nassert solution(\"3 1\\n1 1 1\\n-1 1 1\") == \"---0-\"\nassert solution(\"5 1\\n2 2 2\\n1 3 3\\n1 4 4\\n2 5 5\") == \"---0-\"\nassert solution(\"3 1\\n1 1 1\\n-1 1 1\") == \"---0-\"\nassert solution(\"5 1\\n2 2 2\\n1 3 3\\n1 4 4\\n2 5 5\") == \"---0-\"\nassert solution(\"3 1\\n1 1 1\\n-1 1 1\") == \"---0-\"\nassert solution(\"5 1\\n2 2 2\\n1 3 3\\n1 4 4\\n2 5 5\") == \"---0-\"\nassert solution(\"3 1\\n1 1 1\\n-1 1 1\") == \"---0-\"\nassert solution(\"5 1\\n2 2 2\\n1 3 3\\n1 4 4\\n2 5 5\") == \"---0-\"\nassert solution(\"3 1\\n1 1 1\\n-1 1 1\") == \"---0-\"\nassert solution(\"5 1\\n2 2 2\\n1 3 3\\n1 4 4\\n2 5 5\") == \"---0-\"\nassert solution(\"3 1\\n1 1 1\\n-1 1 1\") == \"---0-\"\nassert solution(\"5 1\\n2 2 2\\n1 3 3\\n1 4 4\\n2 5 5\") == \"---0-\"\nassert solution(\"3 1\\n1 1 1\\n-1 1 1\") == \"---0-\"\nassert solution(\"5 1\\n2 2 2\\n1 3 3\\n1 4 4\\n2 5 5\") == \"---0-\"\nassert solution(\"3 1\\n1 1 1\\n-1 1 1\") == \"---0-\"\nassert solution(\"5 1\\n2 2 2\\n1 3 3\\n1 4 4\\n2 5 5\") == \"---0-\"\nassert solution(\"3 1\\n1 1 1\\n-1 1 1\") == \"---0-\"\nassert solution(\"5 1\\n2 2 2\\n1 3 3\\n1 4 4\\n2 5 5\") == \"---0-\"\nassert solution(\"3 1\\n1 1 1\\n-1 1 1\") == \"---0-\"\nassert solution(\"5 1\\n2 2 2\\n1 3 3\\n1 4 4\\n2 5 5"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, but got: {solution(stdin)}\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(example_input1) == output1\nassert solution(example_input2) == output2"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1') == '--+0-'\nassert solution('3 2\\n1 2 1\\n-2 0 2') == '0+-'"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"0+-\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\\n\") == \"--+0-\"\nassert solution(\"3 2\\n1 2 1\\n-2 0 2\\n\") == \"0+-\"\n"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\\n') == '---\\n\\n'"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\\n\") == \"--+0-\"\nassert solution(\"3 2\\n1 2 1\\n-2 0 2\\n\") == \"0+-\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\\n\"  # expected output: 1"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test Failed. Output: {solution(input())}\\nExpected Output: {output}\"\n"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '1\\n', \"Your solution is incorrect\"\nprint(\"Test passed successfully\")"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n1 1\\n1 1\\n1\\n1 1 1\\n2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2\\n\") == \"1\\n4\\n4\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(None) == 'input() function is not defined.\\n'\n\nsolution = '''\n"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 2\\n1 1\\n1 1\\n1\\n1 1 1') == '1\\n'\nassert solution('2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2') == '4\\n4\\n'\n\nfrom typing import List\n"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n1 1\\n1 1\\n1\\n1 1 1\") == \"1\\n\"\nassert solution(\"2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2\") == \"4\\n4\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\\n\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\\n\"\nassert solution(stdin) == \"4\\n\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '1\\n', \"The solution is not correct.\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == \"YES\"\nassert solution(input2) == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == \"YES\"\nassert solution(sample_input_2) == \"NO\"\n"
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\\n') == 'YES\\n'\nassert solution('3 4\\nWWRR\\nWRRR\\nWRRR\\n') == 'NO\\n'"
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\\n\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\\n\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\\n\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\\n') == 'YES\\n'\nassert solution('3 4\\nWWRR\\nWRRR\\nWRRR\\n') == 'NO\\n'\nassert solution('4 5\\nWRRRG\\nRRRRR\\nRRRRR\\nWBBBB\\n') == 'YES\\n'\nassert solution('5 4\\nWWRR\\nWRRR\\nWRRR\\nRRRRR\\n') == 'YES\\n'"
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB') == 'YES'\nassert solution('3 4\\nWWRR\\nWRRR\\nWRRR') == 'NO'\n"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1\"\n"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 5\\n1\\n2\\n3\") == \"1\"\nassert solution(\"6 3 5\\n1\\n2\\n3\\n3\\n2\\n1\") == \"3\""
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3 5\\n1\\n2\\n3\\n\") == \"1\\n\"\nassert solution(\"6 3 5\\n1\\n2\\n3\\n3\\n2\\n1\\n\") == \"3\\n\""
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 3, 5) == 1\nassert solution(6, 3, 5) == 3\nassert solution(6, 3, 5) == 3\nassert solution(6, 3, 5) == 3\nassert solution(6, 3, 5) == 3"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == '''def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"\\ndef solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == '''\"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == '''\"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == '''\"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == '''\"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == '''\"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == '''\"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == '''\"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == '''\"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == '''\"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == '''\"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == '''\"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == '''\"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == '''\"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == '''\"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == '''\"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == '''\"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == '''\"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == '''\"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == '''\"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == '''\"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == '''\"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == '''\"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == '''\"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == '''\"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == '''\"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == '''\"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == '''\"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == '''\"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == '''\"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == '''\"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == '''\"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == '''\"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == '''\"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == '''\"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == '''\"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == '''\"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == '''\"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == '''\"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == '''\"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == '''\"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == '''\"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == '''\"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == '''\"def solution(stdin: str) -> str:\\n    pass"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output() for input, output in zip(sample_inputs, sample_outputs)"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 5\\n1\\n2\\n3\\n\") == \"1\\n\"\nassert solution(\"6 3 5\\n1\\n2\\n3\\n3\\n2\\n1\\n\") == \"3\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3 2\\n12 3\", \"Your code is incorrect.\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3 2\\n12 3\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n0 2\\n1 2\\n3 3\\n') == '3 2\\n'\nassert solution('5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n') == '12 3\\n'"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n0 2\\n1 2\\n3 3\") == \"3 2\\n\", \"Test 1 failed\"\nassert solution(\"5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\") == \"12 3\\n\", \"Test 2 failed\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\") == []\nassert solution(\"1\") == []\nassert solution(\"2\") == []\nassert solution(\"3\") == []\nassert solution(\"4\") == []\nassert solution(\"5\") == []\nassert solution(\"10\") == []\nassert solution(\"1000000\") == []\nassert solution(\"5 2\") == []\nassert solution(\"5 3\") == []\nassert solution(\"5 4\") == []\nassert solution(\"5 5\") == []\nassert solution(\"5 10\") == []\nassert solution(\"5 1000000\") == []\nassert solution(\"5 10 2\") == []\nassert solution(\"5 10 3\") == []\nassert solution(\"5 10 4\") == []\nassert solution(\"5 10 5\") == []\nassert solution(\"5 10 10\") == []\nassert solution(\"5 10 1000000\") == []\nassert solution(\"5 10 2 2\") == []\nassert solution(\"5 10 2 3\") == []\nassert solution(\"5 10 2 4\") == []\nassert solution(\"5 10 2 5\") == []\nassert solution(\"5 10 2 10\") == []\nassert solution(\"5 10 2 1000000\") == []\nassert solution(\"5 10 3 3\") == []\nassert solution(\"5 10 3 4\") == []\nassert solution(\"5 10 3 5\") == []\nassert solution(\"5 10 3 10\") == []\nassert solution(\"5 10 3 1000000\") == []\nassert solution(\"5 10 4 4\") == []\nassert solution(\"5 10 4 5\") == []\nassert solution(\"5 10 4 10\") == []\nassert solution(\"5 10 4 1000000\") == []\nassert solution(\"5 10 5 5\") == []\nassert solution(\"5 10 5 10\") == []\nassert solution(\"5 10 5 1000000\") == []\nassert solution(\"5 10 10 10\") == []\nassert solution(\"5 10 10 1000000\") == []\nassert solution(\"5 10 2 2 2\") == []\nassert solution(\"5 10 2 2 3\") == []\nassert solution(\"5 10 2 2 4\") == []\nassert solution(\"5 10 2 2 5\") == []\nassert solution(\"5 10 2 2 10\") == []\nassert solution(\"5 10 2 2 1000000\") == []\nassert solution(\"5 10 3 3 3\") == []\nassert solution(\"5 10 3 3 4\") == []\nassert solution(\"5 10 3 3 5\") == []\nassert solution(\"5 10 3 3 10\") == []\nassert solution(\"5 10 3 3 1000000\") == []\nassert solution(\"5 10 4 4 4\") == []\nassert solution(\"5 10 4 4 5\") == []\nassert solution(\"5 10 4 4 10\") == []\nassert solution(\"5 10 4 4 1000000\") == []\nassert solution(\"5 10 5 5 5\") == []\nassert solution(\"5 10 5 5 10\") == []\nassert solution(\"5 10 5 5 1000000\") == []\nassert solution(\"5 10 10 10 10\") == []\nassert solution(\"5 10 10 10 1000000\") == []\nassert solution(\"5 10 2 2 2 2\") == []\nassert solution(\"5 10 2 2 2 3\") == []\nassert solution(\"5 10 2 2 2 4\") == []\nassert solution(\"5 10 2 2 2 5\") == []\nassert solution(\"5 10 2 2 2"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n3\n0 2\n1 2\n3 3\n''') == '''\n12 3\n'''\n\nassert solution('''\n5\n0 2\n1 3\n3 3\n7 5\n9 5\n''') == '''\n12 3\n'''"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3 2\\n12 3\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n0 2\\n1 2\\n3 3\\n\") == \"3 2\\n\"\nassert solution(\"5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n\") == \"12 3\\n\"\n"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n0 2\\n1 2\\n3 3\\n\") == \"3 2\\n\"\nassert solution(\"5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n\") == \"12 3\\n\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n0 2\\n1 2\\n3 3\\n\") == \"3 2\\n\"\nassert solution(\"5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n\") == \"12 3\\n\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\") == \"100\\n000\\n01\\n01\\n01\\n\", \"Sample Input 1\"\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\") == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\", \"Sample Input 2\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n1\\n0\\n0\\n3\\n') == '100\\n000\\n01\\n01\\n01\\n', 'Bar Code is a puzzle game invented by Thinh Van Duc Lai in 2017 that was first published in the New York Times. Bar Code is played on a square grid consisting of $n \\times n$ unit squares with $(n+1) \\times (n+1)$ grid points. For a given specification, the puzzle requires the marking of some of the borders of these unit squares by drawing a vertical or horizontal bar, subject to the following conditions:\n - For each row/column, the specification describes exactly how many separate groups of consecutive bars of the same orientation (vertical and horizontal, resp.) there should be in this row/column. For instance, if the specification demands 2 1 1, then there have to be $3$ groups of $2$, $1$, and $1$ bars, separated by at least one unmarked border. For example, for a $n = 6$ puzzle with $7$ borders in each row, the following markings would meet this specification:\n\n    1101010 1101001 1100101 0110101\n\nwhere 1 denotes the presence of a bar and 0 denotes a border that is unmarked.\n - No $2$ bars may touch.\n\nThe illustration shows the solution for sample input $3$.\n\nFind a marking that is consistent with the given specification!\n\n-----Input-----\nThe input consists of a single test case. The first line contains a single integer $n$ ($0 < n \\le 9$). This is followed by $n$ lines. The $i^{\\text {th}}$ line contains $1$ or more non-negative integers denoting the sizes of groups that must be formed by the vertical bars in row $i$ (counting from the top). If the line contains the single integer $0$, then no borders may be marked for that row. Otherwise, none of the integers on the line will be $0$.\n\nFollowing that will be another $n$ lines. The $j^{\\text {th}}$ line contains $1$ or more non-negative integers denoting the sizes of groups that must be formed by the horizontal bars in column $j$ (counting from the left). If the line contains the single integer $0$, then no borders may be marked for that column. Otherwise, none of the integers on the line will be $0$.\n\n-----Output-----\nOutput the solution as follows. On the first $n$ lines, output a string of length $n+1$ consisting of 1 and 0 characters. The $i^{\\text {th}}$ string should contain a 1 in position $j$ if and only if the $j^{\\text {th}}$ vertical border in row $i$ should be marked as a bar. On the next $n+1$ lines, output a string of length $n$ also consisting of 1 and 0 characters. The $i^{\\text {th}}$ string should contain a 1 in position $j$ if and only if the $i^{\\text {th}}$ horizontal border in column $j$ should be marked as a bar. Rows are counted top down and columns are counted left to right.\n\nIf there are multiple solutions, you may output any of them! You may assume that at least one marking exists that is consistent with the specification.\n\n-----Examples-----\nSample Input 1:\n2\n1\n0\n0\n3\nSample Output 1:\n100\n000\n01\n01\n01\n\nSample Input 2:\n3\n0\n1 1\n1\n1 1\n1\n1\nSample Output 2:\n0000\n1001\n0010\n101\n010\n000\n100', 'Bar Code is a puzzle game invented by Thinh Van Duc Lai in 2017 that was first published in the New York Times. Bar Code is played on a square grid consisting of $n \\times n$ unit squares with $(n+1) \\times (n+1)$ grid points. For a given specification, the puzzle requires the marking of some of the borders of these unit squares by drawing a vertical or horizontal bar, subject to the following conditions:\n - For each row/column, the specification describes exactly how many separate groups of consecutive bars of the same orientation (vertical and horizontal, resp.) there should be in this row/column. For instance, if the specification demands 2 1 "
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n1\\n0\\n0\\n3\\n') == '100\\n000\\n01\\n01\\n01\\n'\nassert solution('3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n') == '0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n'\n"
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\\n\") == \"100\\n000\\n01\\n01\\n01\\n\", \"Test 1 Failed\"\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n\") == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\", \"Test 2 Failed\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\\nSample Input 1:\\n2\\n1\\n0\\n0\\n3\\nSample Output 1:\\n100\\n000\\n01\\n01\\n01\\n\\nSample Input 2:\\n3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n0\\n100\\n000\\n01\\n01\\n01\\n\\nSample Input 3:\\n6\\n1 1 1 1 1 1\\n1 1 1 0 0 1\\n1 1 0 1 0 1\\n1 1 1 1 1 1\\n1 1 0 1 0 1\\n1 1 1 1 1 1\\n1 1 0 1 0 1\\n1 1 1 1 1 1\\n\\nSample Output 3:\\n0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\\nSample Output 4:\\n0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\\nSample Output 5:\\n0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\\n\") == \"100\\n000\\n01\\n01\\n01\\n\\n0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\\n0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\\n0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\\n\") == \"100\\n000\\n01\\n01\\n01\\n\"\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n\") == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Solution does not match the expected output: \\nExpected: {expected}\\nActual: {solution(input())}\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\\n\") == \"100\\n000\\n01\\n01\\n01\\n\"\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n\") == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\\n\") == \"100\\n000\\n01\\n01\\n01\\n\"\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n\") == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('sample_input1.txt').read
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"3 1\n1 2\n2 3\n2 3\n\"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"4 1\n1 3\n4 6\n7 8\n2 5\n\"\"\"\n) == \"3\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2\\n\"\nassert solution(open(\"input2.txt\", \"r\")) == \"3\\n\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '''\n2\n3\n'''"
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_1) == expected_output_1\nassert solution(input_2) == expected_output_2\n\ninput_1 = '''\n3 1\n1 2\n2 3\n2 3\n'''\ninput_2 = '''\n4 1\n1 3\n4 6\n7 8\n2 5\n'''\n\nexpected_output_1 = '''2'''\nexpected_output_2 = '''3'''"
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == output, f\"Test failed for {stdin}.\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\n1 2\\n2 3\\n2 3\\n\") == \"2\\n\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n\") == \"3\\n\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '2', \"Expected output '2', got 'None'\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    '''\n    # Test input\n    # 3 1\n    # 1 2\n    # 2 3\n    # 2 3\n    '''\n) == '2\\n'\n\nassert solution(\n    '''\n    # Test input\n    # 4 1\n    # 1 3\n    # 4 6\n    # 7 8\n    # 2 5\n    '''\n) == '3\\n'"
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n1 2\\n2 3\\n2 3\\n\") == \"2\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n\") == \"3\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5''') == '90.00000000\\n'\nassert solution('''5 6 450\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5''') == '126.86989765\\n'"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r').read()) == '90.00000000\\n'\nassert solution(open('input2.txt', 'r').read()) == '126.86989765\\n'"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"90.00000000\\n\"\nassert solution(input()) == \"126.86989765\\n\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == '90.00000000'\nassert solution(sample_input2) == '126.86989765'"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n') == '90.00000000\\n'\nassert solution('5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n') == '126.86989765\\n'"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5') == '90.00000000'\nassert solution('5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5') == '126.86989765'\n"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    5 6 500\n    0 -100\n    0 100\n    0 200\n    100 100\n    100 0\n    1 2\n    1 3\n    2 3\n    3 4\n    3 5\n    4 5\n    ''') == '90.00000000\\n'\n\nassert solution('''\n    5 6 450\n    0 -100\n    0 100\n    0 200\n    100 100\n    100 0\n    1 2\n    1 3\n    2 3\n    3 4\n    3 5\n    4 5\n    ''') == '126.86989765\\n'"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n\") == \"90.00000000\\n\"\nassert solution(\"5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n\") == \"126.86989765\\n\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(37) == '4\\n8 29\\n9 28\\n11 26\\n15 22'\nassert solution(30014) == '7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225'"
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(37) == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(30014) == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_1) == expected_output_1, f\"Test case 1 failed. Expected output: {expected_output_1}, but got: {solution(input_1)}\"\nassert solution(input_2) == expected_output_2, f\"Test case 2 failed. Expected output: {expected_output_2}, but got: {solution(input_2)}\"\n\ninput_1 = \"37\"\ninput_2 = \"30014\"\nexpected_output_1 = \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nexpected_output_2 = \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Solution does not match the expected output:\\nInput: {input()}\\nExpected Output: {expected_output}\\nActual Output: {solution(input())}\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"37\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(\"30014\") == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"37\") == \"4\"\nassert solution(\"30014\") == \"7\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"37\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(\"30014\") == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(37) == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(30014) == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"37\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(\"30014\") == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4.9\", \"Output should be 4.9, but got: \" + str(solution(stdin))"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, but got {solution(stdin)}\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3 1\") == \"3.5\"\nassert solution(\"3 3 2\") == \"4.9\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 3 1') == '3.5'\nassert solution('3 3 2') == '4.9'"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3 1\") == \"3.5\\n\", \"First case\"\nassert solution(\"3 3 2\") == \"4.9\\n\", \"Second case\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3.5\"\nassert solution(stdin) == \"4.9\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected output {expected_output}, but got {solution(input())}\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3.5\"\n"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, got: {solution(stdin)}\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 5 1 5') == 19\nassert solution('12 12 1 12') == 4"
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected"
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\n"
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 5 1 5\") == \"19\"\nassert solution(\"12 12 1 12\") == \"4\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 5 1 5\\n12 12 1 12\\n\") == \"19\\n4\\n\"\nassert solution(\"4 5 6 7\\n8 9 10 11\\n\") == \"10\\n2\\n\"\nassert solution(\"1 1 1 1\\n1 2 3 4\\n\") == \"1\\n4\\n\"\nassert solution(\"1 100 100 100\\n100 100 100 100\\n\") == \"0\\n1\\n\"\nassert solution(\"0 0 1 10\\n1 10 20 30\\n\") == \"0\\n1\\n\"\nassert solution(\"10 20 10 30\\n20 10 20 30\\n\") == \"2\\n\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"19\", \"The expected output is 19, but got {}\".format(solution(input()))"
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 5 1 5\") == \"19\"\nassert solution(\"12 12 1 12\") == \"4\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 5 1 5\") == \"19\", \"1\"\nassert solution(\"12 12 1 12\") == \"4\", \"2\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5 1 5\") == \"19\"\nassert solution(\"12 12 1 12\") == \"4\"\n"
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 5\") == \"4\"\nassert solution(\"1 12\") == \"4\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 5\") == \"4\\n\", \"Test Case 1 Failed\"\nassert solution(\"1 12\") == \"4\\n\", \"Test Case 2 Failed\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 5\") == \"4\"\nassert solution(\"1 12\") == \"4\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 5') == '4', 'Test case 1 failed'\nassert solution('1 12') == '4', 'Test case 2 failed'"
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5\") == \"4\\n\"\nassert solution(\"1 12\") == \"4\\n\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 5\") == \"4\\n\"\nassert solution(\"1 12\") == \"4\\n\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 5\\n1 12') == '4\\n'\nassert solution('10 15\\n10 15') == '5\\n'\nassert solution('1 10\\n1 10') == '1\\n'\nassert solution('1 1\\n1 2') == '3\\n'\nassert solution('1 200000000\\n2 200000000') == '2\\n'\nassert solution('1 10\\n2 30') == '3\\n'\nassert solution('1 5\\n2 10') == '4\\n'\nassert solution('1 5\\n1 15') == '3\\n'\nassert solution('100 100000000\\n200 200000000') == '1\\n'"
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5\") == \"4\"\nassert solution(\"1 12\") == \"4\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5\") == \"4\\n\"\nassert solution(\"1 12\") == \"4\\n\"\n"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"car\") == 1\nassert solution(stdin=\"cocar\") == 2\nassert solution(stdin=\"love\") == 2\nassert solution(stdin=\"somethingelse\") == 1"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"car\") == \"1\"\nassert solution(\"cocar\") == \"2\""
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('car') == 1\nassert solution('cocar') == 2\nassert solution('abcd') == 0\nassert solution('hello') == 1\n\nfrom functools import reduce"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='car') == 1\nassert solution(stdin='cocar') == 2"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"car\") == \"1\"\nassert solution(\"cocar\") == \"2\""
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"car\") == 1\nassert solution(\"cocaror\") == 2"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('car') == 1\nassert solution('cocaror') == 2"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"car\") == 1, \"Example 1\"\nassert solution(\"cocar\") == 2, \"Example 2\""
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"car\") == \"1\"\nassert solution(\"cocaror\") == \"2\""
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"8\", \"Output should be 8\"\n"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"8\", \"The output is incorrect\""
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=stdin) == output\nfor line in input.split('\\n'):\n    assert line.strip() == output"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '8', 'Input does not match the expected output.'\nassert solution(stdin) == '0', 'Input does not match the expected output.'"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\nassert solution(stdin) == expected\nassert solution(stdin) == expected\nassert solution(stdin) == expected\nassert solution(stdin) == expected"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"8\\n\"\n"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('tests/sample_input.txt', 'r')) == '8\\n'"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output, f\"Testcase {i+1} failed. Output: {solution(stdin)}, Expected: {expected_output}\""
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed for input: {stdin}, expected output: {expected_output}\""
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '8\\n', \"Your solution should return '8', but it returns '{}'.\".format(solution())"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == 'zyz'\nassert solution(sample_input2) == '-1'"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input(1)) == \"zyz\"\nassert solution(sample_input(2)) == \"-1\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 650\") == \"zyz\", \"Test case 1 failed\"\nassert solution(\"2 651\") == \"-1\", \"Test case 2 failed\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 650') == 'zyz'\nassert solution('2 651') == '-1'\n\nfrom typing import List"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"zyz\"\nassert solution(input()) == \"-1\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 650\") == \"zyz\"\nassert solution(\"2 651\") == \"-1\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == \"zyz\"\nassert solution(sample_input2) == -1"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, \"Test case failed: Input and output don't match.\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 650) == \"zyz\"\nassert solution(3, 651) == -1\n"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 650\") == \"zyz\"\nassert solution(\"2 651\") == \"-1\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\\n\", \"Test 1 failed\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"4\\n\", \"Test failed\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\") == \"4\"\nassert solution(\"10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\") == \"8\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\") == \"4\\n\", \"Sample Output 1\"\nassert solution(\"10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\") == \"8\\n\", \"Sample Output 2\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"4\"\n"
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\") == \"4\\n\"\n\nassert solution(\"10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\") == \"8\\n\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0') == '4\\n'"
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n10\n6 1 1\n0 2 0\n2 1 1\n6 1 1\n8 2 0\n4 4 0\n4 0 0\n2 3 1\n6 1 0\n6 3 1\n''') == '8'\n\nassert solution('''\n6\n0 10 0\n10 0 1\n12 8 1\n5 5 0\n11 2 1\n11 3 0\n''') == '4'"
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\") == \"4\"\nassert solution(\"10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\") == \"8\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\") == \"4\\n\", \"Expected output: 4\\nActual output: \" + solution(\"0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\")"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected output: '{output}', but got: '{solution(input())}'\"\n"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0\", \"Test case 1 failed\"\nassert solution(stdin) == \"2\", \"Test case 2 failed\""
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4 3\\n3 4 5 7\\n1 2 10\") == \"0\"\nassert solution(\"3 5 2\\n1 4 7 9 11\\n2 3\") == \"2\""
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 0, \"Test case 1 failed: expected 0, got {}\".format(solution)\n\nassert solution == 0, \"Test case 2 failed: expected 0, got {}\".format(solution)"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4 3\\n3 4 5 7\\n1 2 10\") == \"0\\n\"\nassert solution(\"3 5 2\\n1 4 7 9 11\\n2 3\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4 3\\n3 4 5 7\\n1 2 10\") == \"0\\n\"\nassert solution(\"3 5 2\\n1 4 7 9 11\\n2 3\") == \"2\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 4 3\\n3 4 5 7\\n1 2 10') == 0\nassert solution('3 5 2\\n1 4 7 9 11\\n2 3') == 2\nassert solution('1 3\\n2 4\\n3 5\\n4 6\\n5 7') == -1"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"0\\n\"\nassert solution(open(\"sample_input1.txt\", \"r\")) == \"0\\n\"\nassert solution(open(\"sample_input2.txt\", \"r\")) == \"2\\n\"\n"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"def\", \"Your code is not correct.\""
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 5 2\\n1 4 7 9 11\\n2 3') == '2'\nassert solution('3 4 5 7\\n1 2 10') == '0'\nassert solution('2 4 3\\n3 4 5 7') == '-1'"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\\n-2 -1\"\nassert solution() == \"3\\n-1 1\\n2 1\\n0 -2\"\n"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n2 3\n3 2\n''') == '''\n1\n-2 -1\n'''\n\nassert solution('''\n1 2\n3 4\n''') == '''\n3\n-1 1\n2 1\n0 -2\n'''"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n3 2\\n\") == \"1\\n-2 -1\\n\"\nassert solution(\"1 2\\n3 4\\n\") == \"3\\n-1 1\\n2 1\\n0 -2\\n\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\\n-2 -1\\n3\\n-1 1\\n2 1\\n0 -2\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n3 2\") == \"1\\n-2 -1\"\nassert solution(\"1 2\\n3 4\") == \"3\\n-1 1\\n2 1\\n0 -2\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3\\n3 2') == '1\\n-2 -1\\n'\nassert solution('1 2\\n3 4') == '3\\n-1 1\\n2 1\\n0 -2'"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n3 2\\n\") == \"1\\n-2 -1\\n\"\nassert solution(\"1 2\\n3 4\\n\") == \"3\\n-1 1\\n2 1\\n0 -2\\n\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"\"\"1\n-2 -1\n\"\"\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n3 2\") == \"1\\n-2 -1\"\nassert solution(\"1 2\\n3 4\") == \"3\\n-1 1\\n2 1\\n0 -2\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\\n\", \"The given solution is incorrect.\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\nIVO\\nJASNA\\nJOSIPA\\n\") == 4\nassert solution(\"5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\\n\") == 24"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\nIVO\\nJASNA\\nJOSIPA\") == 4\nassert solution(\"5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\") == 24"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed. Expected output: {expected_output}. Received output: {solution(stdin)}\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == \"4\"\n"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '4', \"Incorrect answer for sample input 1\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '4'"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 4\nassert solution(5) == 24"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case+1} failed: Expected output: {expected_output}, Got: {solution(input())}\"\n"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '4\\n'"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(sample_input_1)), \"Solution for sample input 1 is incorrect\"\nassert solution(str(sample_input_2)), \"Solution for sample input 2 is incorrect\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\") == \"3\\n\"\nassert solution(\"3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7\") == \"39\\n\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test case {input()} failed. Output: {output}, Expected: {output}\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_string=\"3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\") == \"3\\n\", \"Incorrect output\"\nassert solution(input_string=\"3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7\") == \"39\\n\", \"Incorrect output\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\") == \"3\"\nassert solution(\"3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7\") == \"39\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 2 3 1\n2 3 4 1\n3 4 5 1\n''') == '3\\n'\n\nassert solution('''\n3\n2 2 3 8\n3 1 5 6\n1 9 4 7\n''') == '39\\n'"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"3\", \"Your solution is incorrect.\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\") == 3\nassert solution(\"3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7\") == 39"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == sample_output1, \"Expected Output: {}\".format(sample_output1)\nassert solution(sample_input2) == sample_output2, \"Expected Output: {}\".format(sample_output2)"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\"\n) == \"5.2696518641\"\n\nassert solution(\n    \"1\\n8 9 3 -14 -14 14 -14 0 20\"\n) == \"9\""
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\") == 5.2696518641\nassert solution(\"1\\n8 9 3 -14 -14 14 -14 0 20\") == 9\n\nfrom typing import List"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\") == \"5.2696518641\"\nassert solution(\"1\\n8 9 3 -14 -14 14 -14 0 20\") == \"9\""
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"5.2696518641\\n\""
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('sample_input.txt', 'r').read()) == '5.2696518641', 'The correct solution is not provided.'"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"5.2696518641\""
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == expected_output, f\"Test case {i+1} failed: got {solution(sample_input)}, expected {expected_output}\""
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n2\n5 8 4 -2 0 0 -3 2 0 0 3\n8 10 4 -1 -1 1 -1 1 1 -1 1\n''') == '5.2696518641'\nassert solution('''\n1\n8 9 3 -14 -14 14 -14 0 20\n''') == '9'\n"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == \"5.2696518641\"\nassert solution(sample_input2) == \"9\"\n\nfrom typing import List"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\\n\") == \"5.2696518641\"\nassert solution(\"1\\n8 9 3 -14 -14 14 -14 0 20\\n\") == \"9\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\"\nassert solution() == \"8\"\nassert solution() == \"4\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_str) == output_str, f\"Test case failed: \\nExpected: {output_str}\\nGot: {solution(input_str)}\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1 1\\n2 0 2\\n3 1 1\\n\") == \"1\\n8\\n4\\n\"\nassert solution(\"3\\n4 1 1\\n5 2 3\\n5 0 3\\n\") == \"6\\n4\\n24\\n\"\n"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1 1\\n2 0 2\\n3 1 1\\n\") == \"1\\n8\\n4\\n\"\nassert solution(\"3\\n4 1 1\\n5 2 3\\n5 0 3\\n\") == \"6\\n4\\n24\\n\"\nassert solution(\"3\\n1 1 1\\n2 1 2\\n3 1 3\\n\") == \"-1\\n\"\nassert solution(\"3\\n1 1 1\\n2 1 2\\n3 1 1\\n\") == \"-1\\n\"\nassert solution(\"3\\n1 1 1\\n2 1 1\\n3 1 1\\n\") == \"-1\\n\"\nassert solution(\"3\\n1 1 1\\n2 1 1\\n3 1 1\\n\") == \"-1\\n\"\nassert solution(\"3\\n1 1 1\\n2 1 1\\n3 1 1\\n\") == \"-1\\n\"\nassert solution(\"3\\n1 1 1\\n2 1 1\\n3 1 1\\n\") == \"-1\\n\"\nassert solution(\"3\\n1 1 1\\n2 1 1\\n3 1 1\\n\") == \"-1\\n\"\nassert solution(\"3\\n1 1 1\\n2 1 1\\n3 1 1\\n\") == \"-1\\n\"\nassert solution(\"3\\n1 1 1\\n2 1 1\\n3 1 1\\n\") == \"-1\\n\"\nassert solution(\"3\\n1 1 1\\n2 1 1\\n3 1 1\\n\") == \"-1\\n\"\nassert solution(\"3\\n1 1 1\\n2 1 1\\n3 1 1\\n\") == \"-1\\n\"\nassert solution(\"3\\n1 1 1\\n2 1 1\\n3 1 1\\n\") == \"-1\\n\"\nassert solution(\"3\\n1 1 1\\n2 1 1\\n3 1 1\\n\") == \"-1\\n\"\nassert solution(\"3\\n1 1 1\\n2 1 1\\n3 1 1\\n\") == \"-1\\n\"\nassert solution(\"3\\n1 1 1\\n2 1 1\\n3 1 1\\n\") == \"-1\\n\"\nassert solution(\"3\\n1 1 1\\n2 1 1\\n3 1 1\\n\") == \"-1\\n\"\nassert solution(\"3\\n1 1 1\\n2 1 1\\n3 1 1\\n\") == \"-1\\n\"\nassert solution(\"3\\n1 1 1\\n2 1 1\\n3 1 1\\n\") == \"-1\\n\"\nassert solution(\"3\\n1 1 1\\n2 1 1\\n3 1 1\\n\") == \"-1\\n\"\nassert solution(\"3\\n1 1 1\\n2 1 1\\n3 1 1\\n\") == \"-1\\n\"\nassert solution(\"3\\n1 1 1\\n2 1 1\\n3 1 1\\n\") == \"-1\\n\"\nassert solution(\"3\\n1 1 1\\n2 1 1\\n3 1 1\\n\") == \"-1\\n\"\nassert solution(\"3\\n1 1 1\\n2 1 1\\n3 1 1\\n\") == \"-1\\n\"\nassert solution(\"3\\n1 1 1\\n2 1 1\\n3 1 1\\n\") == \"-1\\n\"\nassert solution(\"3\\n1 1 1\\n2 1 1\\n3 1 1\\n\") == \"-1\\n\"\nassert solution(\"3\\n1 1 1\\n2 1 1\\n3 1 1\\n\") == \"-1\\n\"\nassert solution(\"3\\n1 1 1\\n2 1 1\\n3 1 1\\n\") == \"-1\\n"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == expected1\nassert solution(sample_input2) == expected2\n\nsample_input1 = \"\"\"\n3\n1 1 1\n2 0 2\n3 1 1\n\"\"\"\n\nsample_input2 = \"\"\"\n3\n4 1 1\n5 2 3\n5 0 3\n\"\"\"\n\nexpected1 = \"1\\n8\\n4\"\nexpected2 = \"6\\n4\\n24\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1 1\\n2 0 2\\n3 1 1\\n\") == \"1\\n8\\n4\\n\"\nassert solution(\"3\\n4 1 1\\n5 2 3\\n5 0 3\\n\") == \"6\\n4\\n24\\n\"\nassert solution(\"2\\n3 1\\n2 0\\n1 0\\n\") == \"-1\\n\"\n"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 1, \"Expected 1, got {}\".format(solution())\nassert solution() == 8, \"Expected 8, got {}\".format(solution())\nassert solution() == 4, \"Expected 4, got {}\".format(solution())\nassert solution() == -1, \"Expected -1, got {}\".format(solution())\nassert solution() == 24, \"Expected 24, got {}\".format(solution())\n"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1 1\\n2 0 2\\n3 1 1\") == \"1\\n8\\n4\"\nassert solution(\"3\\n4 1 1\\n5 2 3\\n5 0 3\") == \"6\\n4\\n24\"\nassert solution(\"5\\n1 1 1\\n2 0 2\\n3 1 1\") == \"-1\"\nassert solution(\"3\\n1 1 1\\n2 0 2\\n3 1 1\") == \"1\\n8\\n4\"\nassert solution(\"3\\n4 1 1\\n5 2 3\\n5 0 3\") == \"6\\n4\\n24\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"output\""
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 2) == 3\nassert solution(6, 6) == 240"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 3\nassert solution(6) == 240"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 3, \"3\"\nassert solution(6) == 240, \"6\""
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 2) == 3\nassert solution(6, 6) == 240"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 2) == 3, \"Expected Output 3, Received {}\".format(solution(3, 2))\nassert solution(6, 6) == 240, \"Expected Output 240, Received {}\".format(solution(6, 6))"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"6 6\") == \"240\""
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 2) == 3\nassert solution(6, 6) == 240\n\nfrom typing import List"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"3\\n\"\nassert solution(\"6 6\") == \"240\\n\""
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '3'\nassert solution() == '240'"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3\\n\"\nassert solution() == \"240\\n\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"example.txt\").read()) == \"impossible\"  # example.txt not available for this problem"
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\", \"Sample Input 1: SEND+MORE=MONEY\"\nassert solution(\"A+A=A\") == \"impossible\", \"Sample Input 2: A+A=A\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('SEND+MORE=MONEY') == '9567+1085=10652', 'Invalid solution'\nassert solution('A+A=A') == 'impossible', 'Invalid solution'"
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\", \"Invalid solution for puzzle SEND+MORE=MONEY\"\nassert solution(\"A+A=A\") == \"impossible\", \"Invalid solution for puzzle A+A=A\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(stdin=\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n0 1 2 3') == '14\\n', 'Sample Input 1'\nassert solution('5\\n1 1 2 1 1') == '1\\n', 'Sample Input 2'"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n0 1 2 3\") == \"14\"\nassert solution(\"5\\n1 1 2 1 1\") == \"1\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n0 1 2 3\") == 14"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 1 2 3\") == \"14\\n\"\nassert solution(\"1 1 2 1 1\") == \"1\\n\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == \"14\"\nassert solution(sample_input2) == \"1\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n0 1 2 3\\n') == '14\\n'\nassert solution('5\\n1 1 2 1 1\\n') == '1\\n'"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"14\", \"The number of entirely unsorted sequences you can make by permuting the a_ i, modulo 10^9 + 9 is incorrect.\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '14\\n'\nprint(solution())"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(str(int(input()))), f\"Input error: {input()}\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 1 2 3\") == 14\nassert solution(\"1 1 2 1 1\") == 1"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"Output 2\""
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10') == 88\nassert solution('1\\n4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10') == -1"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == 88\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\") == -1"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == \"88\"\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\") == \"-1\""
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Solution {solution(stdin)} does not match expected solution {expected}\""
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == 88\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\") == -1\n\nfrom typing import List"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == 88\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\") == -1"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n\") == 88\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n\") == -1"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10') == '88'\nassert solution('4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10') == '-1'"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == \"88\\n\"\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\") == \"-1\\n\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0.000\"\nassert solution(stdin) == \"9999700002.000\"\n"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 1\\n1 1\\n\") == \"0.000\\n\"\nassert solution(\"2\\n1 99999\\n99999 99999\\n\") == \"9999700002.000\\n\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 1\\n1 1\") == \"0.000\\n\"\nassert solution(\"2\\n1 99999\\n99999 99999\") == \"9999700002.000\\n\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n1 1\\n1 1\\n') == '0.000'\nassert solution('2\\n1 99999\\n99999 99999\\n') == '9999700002.000'"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '0.000\\n'"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '0.000\\n'"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 1\\n1 1\") == \"0.000\\n\"\nassert solution(\"2\\n1 99999\\n99999 99999\") == \"9999700002.000\\n\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0.000\"\n"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 1\\n1 1\\n\") == \"0.000\\n\"\nassert solution(\"2\\n1 99999\\n99999 99999\\n\") == \"9999700002.000\\n\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"0.000\"\n"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3\\n\"  # expected output: 3"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\\n') == '3\\n'\nassert solution('3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\\n') == 'Infinity\\n'"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == expected_output, f\"Test case {test_case} failed: {solution(input)}!= {expected_output}\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == '''\n"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\\n\") == \"3\"\nassert solution(\"3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\\n\") == \"Infinity\"\n"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == output, f\"Solution does not match with expected output. Expected: {output}, Received: {solution(stdin=input())}\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input1) == \"3\\n\", \"Input 1 does not match\"\nassert solution(input2) == \"Infinity\\n\", \"Input 2 does not match\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\", \"Incorrect Answer\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\") == \"3\"\nassert solution(\"3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\\n\") == \"Infinity\""
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 1\\n6\\nSample Input 1: 6 1\\n6\\nSample Output 1: impossible\\n\") == \"impossible\\n\"\nassert solution(\"3 1\\n1\\nSample Input 2: 3 1\\n1\\nSample Output 2: 000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\ndef solution(stdin: str) -> str:\\n    pass\\n\" == \"000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n\""
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 1\\n6\\nSample Input 1\\n6\\nSample Output 1:impossible\\n\") == \"impossible\\n\"\nassert solution(\"3 1\\n1\\nSample Input 2\\n3\\nSample Output 2:000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\ndef solution(stdin: str) -> str:\\n    pass\\n\" == \"000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\nimpossible\\n\""
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 1\\n6\\nSample Input 1:6 1\\n6\\nSample Output 1:impossible\\n\\nSample Input 2:3 1\\n1\\nSample Output 2:000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n\") == \"impossible\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 'impossible'"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 1\\n6\\n\") == \"impossible\\n\"\nassert solution(\"3 1\\n1\\n\") == \"000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n\"\n"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == \"impossible\"\nassert solution(sample_input2) == \"0000\"\n\nfrom typing import List"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"impossible\", \"Your solution is incorrect. Please fix it and try again.\""
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"gray_code.txt\", \"r\")) == \"000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\n99\\n\") == \"1\", \"Solution 1 is incorrect\"\nassert solution(\"90\\n10\\n\") == \"10\", \"Solution 2 is incorrect\"\nassert solution(\"2\\n10\\n\") == \"2\", \"Solution 3 is incorrect\"\nassert solution(\"30\\n10\\n\") == \"31\", \"Solution 4 is incorrect\"\nassert solution
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10\\n99') == 1\nassert solution('90\\n10') == 10"
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10') == '1'\nassert solution('99') == '1'\nassert solution('90') == '10'"
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\n99\") == \"1\\n\", \"Output 1: 1\"\nassert solution(\"90\\n10\") == \"10\\n\", \"Output 2: 10\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\n99\") == \"1\\n\"\nassert solution(\"90\\n10\") == \"10\\n\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10\\n99\\n') == '1', \"Test 1 failed.\"\nassert solution('90\\n10\\n') == '10', \"Test 2 failed.\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\n99\\n\") == \"1\\n\", \"Test case 1 failed\"\nassert solution(\"90\\n10\\n\") == \"10\\n\", \"Test case 2 failed\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\n99\\n\") == \"1\"\nassert solution(\"90\\n10\\n\") == \"10\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\n99\\n\") == \"1\\n\"\nassert solution(\"90\\n10\\n\") == \"10\\n\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == \"2\\n\"\nassert solution(open('example1.txt', 'r')) == \"2\\n\"\nassert solution(open('example2.txt', 'r')) == \"1\\n\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 3 3\\n4 1 10\\n2 7 3\\n\") == \"2\\n\", \"Sample Input 1\"\nassert solution(\"4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\\n\") == \"1\\n\", \"Sample Input 2\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"1\\n3\\n2 3 3\\n4 1 10\\n2 7 3\\n\") == \"2\\n\"\nassert solution(stdin=\"2\\n4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\\n\") == \"1\\n\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 3 3\\n4 1 10\\n2 7 3\") == \"2\\n\", \"The given example 1 should output 2, but it is actually: \" + solution(\"3\\n2 3 3\\n4 1 10\\n2 7 3\")"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 3 3\\n4 1 10\\n2 7 3\") == \"2\\n\"\nassert solution(\"4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\") == \"1\\n\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 3 3\\n4 1 10\\n2 7 3\") == 2\nassert solution(\"4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\") == 1"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 3 3\\n4 1 10\\n2 7 3\") == \"2\\n\", \"Test case 1 failed.\"\nassert solution(\"4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\") == \"1\\n\", \"Test case 2 failed.\"\nassert solution(\"3\\n2 3 2\\n5 4 6\\n4 3 1 2\") == \"1\\n\", \"Test case 3 failed.\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 3 3\\n4 1 10\\n2 7 3\\n\") == \"2\"\nassert solution(\"4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\\n\") == \"1\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 3 3\\n4 1 10\\n2 7 3\\n\") == \"2\\n\"\nassert solution(\"4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\\n\") == \"1\\n\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\"\nassert solution() == \"1\""
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"beginning\\n1 5\\n4 8\\n1 9\") == \"5\\n11\\n16\"\nassert solution(\"velvet\\n1 6\") == \"7\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"beginning\\n1 5\\n4 8\\n1 9\") == \"5\\n11\\n16\"\nassert solution(\"velvet\\n1 6\") == \"7\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"beginning\") == \"5\"\nassert solution(\"1 5\") == \"11\"\nassert solution(\"4 8\") == \"16\"\nassert solution(\"1 9\") == \"11\"\nassert solution(\"velvet\") == \"7\""
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == '5\\n11\\n16'\n"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abc\") == \"abc\"\nassert solution(\"hello\") == \"olleh\"\nassert solution(\"level\") == \"leve\"\nassert solution(\"madam\") == \"madam\"\nassert solution(\"level and madam\") == \"level and madam\"\nassert solution(\"dig\") == \"dig\"\nassert solution(\"singed\") == \"singed\"\nassert solution(\"level and madam and\") == \"level and madam and\"\nassert solution(\"sig\") == \"sig\"\nassert solution(\"sig and\") == \"sig and\"\nassert solution(\"sig and dig\") == \"sig and dig\"\nassert solution(\"sig and madam\") == \"sig and madam\"\nassert solution(\"level and madam and level and madam and\") == \"level and madam and level and madam and\"\nassert solution(\"level and madam and level and madam and level and madam and level and madam and level and madam and level and madam and\") == \"level and madam and level and madam and level and madam and level and madam and level and madam and level and madam and level and madam and level and madam and\""
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Test failed: {solution(input())}!= {output()}\"\n"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Solution is incorrect. Expected: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"5\\n11\\n16\"\nassert solution(open(\"sample_input_1.txt\", \"r\")) == \"5\\n11\\n16\"\nassert solution(open(\"sample_input_2.txt\", \"r\")) == \"7\\ndef solution(stdin: str) -> str:\\npass\""
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(str(9, 3) + str(1, 5) + str(4, 8) + str(1, 9)) == 5, \"Incorrect output\"\nassert solution(str(6, 1) + str(velvet)) == 7, \"Incorrect output\""
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"beginning\") == 5\nassert solution(\"1 5 4 8 1 9\") == 5\nassert solution(\"velvet\") == 7\n"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 4\\n3 1\\n2 2\\n1 1') == '2'\nassert solution('2 3\\n1 23\\n2 17') == '23'"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed for {stdin}.\""
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n3 1\\n2 2\\n1 1\\n\") == 2\nassert solution(\"2 3\\n1 23\\n2 17\\n\") == 23"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"your_answer_here\""
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 4\\n3 1\\n2 2\\n1 1\\n') == '2\\n'\nassert solution('2 3\\n1 23\\n2 17\\n') == '23\\n'"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\nr\"\"\"\n3 4\n3 1\n2 2\n1 1\n\"\"\") == \"2\\n\"\n\nassert solution(\nr\"\"\"\n2 3\n1 23\n2 17\n\"\"\") == \"23\\n\""
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n3 1\\n2 2\\n1 1\") == \"2\"\nassert solution(\"2 3\\n1 23\\n2 17\") == \"23\"\n"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n3 1\\n2 2\\n1 1\") == \"2\"\nassert solution(\"2 3\\n1 23\\n2 17\") == \"23\""
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 4\\n3 1\\n2 2\\n1 1\\n') == '2\\n'\nassert solution('2 3\\n1 23\\n2 17\\n') == '23\\n'\n"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n3 1\\n2 2\\n1 1\\n\") == \"2\\n\"\n\nassert solution(\"2 3\\n1 23\\n2 17\\n\") == \"23\\n\"\n\nassert solution(\"2 3\\n1 23\\n2 17\\n\") == \"23\\n\"\n\nassert solution(\"3 4\\n3 1\\n2 2\\n1 1\\n\") == \"2\\n\"\n\nassert solution(\"2 3\\n1 23\\n2 17\\n\") == \"23\\n\""
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''4\n0 0\n2 0\n2 2\n0 2\n0 -1 0 3''') == '0.0000000000'\nassert solution('''6\n0 1\n0 4\n3 6\n7 5\n4 2\n7 0\n5 7 2 0''') == '9.476048311178'"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\") == \"0.0000000000\"\nassert solution(\"6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\") == \"9.476048311178\""
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_string) == output_string, \"Your code does not pass the test\""
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3') == '0.0000000000'\nassert solution('6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0') == '9.476048311178'\n"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\\n6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0') == 0.0000000000\nassert solution('6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0') == 9.476048311178"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_string) == output_string, f\"Test case failed: {input_string}\\nExpected: {output_string}\\nGot: {solution(input_string)}\""
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0.0000000000\"\nassert solution(stdin) == \"9.476048311178\""
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(str(4) + '\\n' + '0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3') == 0.0\nassert solution(str(6) + '\\n' + '0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0') == 9.476\n"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0.0200000000\"\n"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n\") == \"8.0000000000\\n\"\nassert solution(\"5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\\n\") == \"0.0200000000\\n\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Incorrect solution. Please check the output and input examples.\"\n"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=sample_input_1) == '8.0000000000'\nassert solution(stdin=sample_input_2) == '0.0200000000'"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"8.0000000000\"\nassert solution(stdin) == \"0.0200000000\"\n"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n') == '8.0000000000\\n'\n\nassert solution('5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\\n') == '0.0200000000\\n'"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n') == '8.0000000000'\nassert solution('5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\\n') == '0.0200000000'"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '8.0000000000', 'Your solution is not correct. Please check your code.'"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n\") == \"8.0000000000\"\nassert solution(\"5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\\n\") == \"0.0200000000\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n') == '8.0000000000\\n'\nassert solution('5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\\n') == '0.0200000000\\n'"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('9 4 3\\n1 1 9 9 1 6 6 39 9\\n').strip() == '2'\nassert solution('10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n').strip() == '2'"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '2\\n', 'Test Failed'\n"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\\n\") == \"2\"\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == \"2\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\\n10 2 2\\n1 1 1 1 1 2 2 2 2 2\") == \"2\\n\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 2, \"Test 1 failed\"\nassert solution() == 2, \"Test 2 failed\"\nassert solution() == 2, \"Test 3 failed\"\nassert solution() == 2, \"Test 4 failed\"\nassert solution() == 2, \"Test 5 failed\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('9 4 3\\n1 1 9 9 1 6 6 39 9\\n') == 2\nassert solution('10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n') == 2"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\\n\") == \"2\\n\"\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == \"2\\n\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('9 4 3\\n1 1 9 9 1 6 6 39 9\\n') == '2'\nassert solution('10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n') == '2'"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('9 4 3\\n1 1 9 9 1 6 6 39 9\\n') == '2\\n'\nassert solution('10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n') == '2\\n'\n\nprint('All test cases pass.')"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 20.0, \"The expected output is: 20.0\"\n"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='3 3 2\\n1 2 3\\n') == '3.666666667'\nassert solution(stdin='4 11 4\\n10 10 10 10\\n') == '20.000000000'"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''3 3 2\n1 2 3''') == '3.666666667'\nassert solution('''4 11 4\n10 10 10 10''') == '20.000000000'"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3 2\\n1 2 3\\n') == '3.666666667\\n'\nassert solution('4 11 4\\n10 10 10 10\\n') == '20.000000000\\n'"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\").read()) == \"20.000000000\"\n"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3 2\\n1 2 3\\n') == '3.666666667'\nassert solution('4 11 4\\n10 10 10 10\\n') == '20.000000000'"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3 2\\n1 2 3\\n\") == \"3.666666667\"\nassert solution(\"4 11 4\\n10 10 10 10\\n\") == \"20.000000000\"\n\nfrom typing import List"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3 2\\n1 2 3\\n') == '3.666666667'\nassert solution('4 11 4\\n10 10 10 10\\n') == '20.000000000'"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"20.000000000\", \"The correct answer is '20.000000000', but you provided '{:.6f}'.\".format(solution())"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 2\\n1 2 3\\n\") == 3.666666667\nassert solution(\"4 11 4\\n10 10 10 10\\n\") == 20.0\n"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 42\") == 2\nassert solution(\"5 123456789\") == 16317634"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Output should be {expected}, but got {solution(input())}\""
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 2, \"Your solution should return 2.\"\nassert solution() == 16317634, \"Your solution should return 16317634.\"\n"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == 2\nassert solution(open('input.txt', 'r')) == 16317634\n"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(read_input()) == expected\n"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 42\") == \"2\", \"Input 1\"\nassert solution(\"5 123456789\") == \"16317634\", \"Input 2\""
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 42') == '2'\nassert solution('5 123456789') == '16317634'"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test Case {test_case_num} Failed\"\nfor test_case_num in range(1, 3):\n    n, m = map(int, input().split())\n    print(solution(n, m))"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"2 42\") == \"2\"\nassert solution(stdin=\"5 123456789\") == \"16317634\""
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 42\") == \"2\"\nassert solution(\"5 123456789\") == \"16317634\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 0 0 2\\n1 2 2\\n1 1 1\") == 0\nassert solution(\"3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\") == 4"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    3 1 0 0 2\n    1 2 2\n    1 1 1\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n    3 1 1 1 8\n    0 1 1\n    1 0 1\n    2 1 1\n    1 2 1\n    1 2 2\n    2 2 3\n    0 2 5\n    1 2 6\n    \"\"\"\n) == \"4\\n\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1 0 0 2\\n1 2 2\\n1 1 1\\n\") == \"0\\n\"\nassert solution(\"3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\\n\") == \"4\\n\"\nassert solution(\"3 1 0 0 2\\n1 2 2\\n1 1 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\\n3 2 5 5 3\\n0 2 7\\n1 2 8\\n2 2 9\\n1 2 10\\n3 2 11 11 4\\n2 2 13\\n1 2 14\\n0 2 16\\n1 2 17\\n2 2 18\\n3 2 19 19 5\\n2 2 21\\n1 2 22\\n2 2 23\\n3 2 24 24 6\\n2 2 26\\n1 2 27\\n0 2 29\\n1 2 30\\n2 2 31\\n3 2 32 32 7\\n2 2 34\\n1 2 35\\n2 2 36\\n3 2 37 37 8\\n2 2 39\\n1 2 40\\n0 2 42\\n1 2 43\\n2 2 44\\n3 2 45 45 9\\n2 2 47\\n1 2 48\\n2 2 49\\n3 2 50 50 10\\n2 2 52\\n1 2 53\\n2 2 54\\n3 2 55 55 11\\n2 2 57\\n1 2 58\\n2 2 59\\n3 2 60 60 12\\n2 2 62\\n1 2 63\\n2 2 64\\n3 2 65 65 13\\n2 2 67\\n1 2 68\\n2 2 69\\n3 2 70 70 14\\n2 2 72\\n1 2 73\\n2 2 74\\n3 2 75 75 15\\n2 2 77\\n1 2 78\\n2 2 79\\n3 2 80 80 16\\n2 2 82\\n1 2 83\\n2 2 84\\n3 2 85 85 17\\n2 2 87\\n1 2 88\\n2 2 89\\n3 2 90 90 18\\n2 2 92\\n1 2 93\\n2 2 94\\n3 2 95 95 19\\n2 2 97\\n1 2 98\\n2 2 99\\n3 2 100 100 20\\n2 2 102\\n1 2 103\\n2 2 104\\n3 2 105 105 21\\n2 2 107\\n1 2 108\\n2 2 109\\n3 2 110 110 22\\n2 2 112\\n1 2 113\\n2 2 114\\n3 2 115 115 23\\n2 2 117"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1 0 0 2\\n1 2 2\\n1 1 1\\n\") == \"0\"\nassert solution(\"3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\\n\") == \"4\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 0 0 2\\n1 2 2\\n1 1 1\") == \"0\\n\"\nassert solution(\"3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\") == \"4\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 1 0 0 2\\n1 2 2\\n1 1 1\\n') == '0\\n'\nassert solution('3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\\n') == '4\\n'"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1 0 0 2\\n1 2 2\\n1 1 1\") == \"0\\n\"\nassert solution(\"3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\") == \"4\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 1 0 0 2\\n1 2 2\\n1 1 1\\n').strip() == '0'\nassert solution('3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6').strip() == '4'\n"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"0\", \"Output should be 0\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9') == '3\\n'\n\nassert solution('5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45') == '3\\n'"
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == \"3\\n\", \"Please implement the solution function correctly\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9') == '3'\nassert solution('5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45') == '3'"
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 3, \"Expected output 3, got {}\".format(solution())"
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == \"3\\n\", \"Test 1 failed\"\n\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\") == \"3\\n\", \"Test 2 failed\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == \"3\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\") == \"3\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\"\n\nfrom typing import List\n"
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed: {solution(input())}!= {output}\" for i, (input, output) in enumerate(zip(inputs, outputs)):\n    pass"
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == \"3\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\") == \"3\""
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ABC\") == 2, \"ABC\"\nassert solution(\"ABBBAAAA\") == 3, \"ABBBAAAA\"\n"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('ABC') == 2\nassert solution('ABBBAAAA') == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('ABC') == 2\nassert solution('ABBBAAAA') == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ABC\") == 2, \"Expected 2, got {}\".format(solution(\"ABC\"))\nassert solution(\"ABBBAAAA\") == 3, \"Expected 3, got {}\".format(solution(\"ABBBAAAA\"))"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('ABC') == 2, \"ABC\"\nassert solution('ABBBAAAA') == 3, \"ABBBAAAA\""
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3\", \"Expected Output: 3, Actual Output: \" + str(solution())"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\").read()) == '3\\n'"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\\n\", \"The solution should return 3.\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\nA\\nB\\nA\\nBBB\\nAAA\\n\") == \"3\\n\"\nassert solution(\"5\\nA\\nABA\\nBBB\\nABABA\\nAAAAAB\\n\") == \"3\\n\"\nassert solution(\"5\\nA\\nB\\nA\\nBBB\\nAAA\\n\") == \"3\\n\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\nA\\nB\\nAA\\nBBB\\nAAA\") == \"3\"\nassert solution(\"5\\nA\\nABA\\nBBB\\nABABA\\nAAAAAB\") == \"3\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\nA\\nB\\nA\\nB\\nA\\n\") == \"3\\n\"\nassert solution(\"5\\nA\\nABA\\nBBB\\nABABA\\nAAAAAB\\n\") == \"3\\n\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"The solution does not match the expected output.\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\nA\\nB\\nAA\\nB\\nAAA') == '3\\n', \"Solution is incorrect.\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\nA\\nB\\nA\\nA\\n\") == \"3\", \"Solution must return 3\"\nassert solution(\"5\\nA\\ABA\\BBB\\ABABA\\AAAAAB\\n\") == \"3\", \"Solution must return 3\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100 10 2 1\\n100 10 2 2\") == \"0.1909090909\"\nassert solution(\"100 10 2 1\\n200 10 2 1\") == \"0.2\"\nassert solution(\"100 10 2 1\\n100 10 2 2\") == \"0.2\"\nassert solution(\"100 10 2 1\\n100 10 2 2\\n100 10 2 2\") == \"0.1909090909\"\nassert solution(\"100 10 2 1\\n200 10 2 1\\n200 10 2 1\\n200 10 2 1\") == \"0.2\"\nassert solution(\"100 10 2 1\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n100 10 2 2\\n"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=None) == \"0.1\", \"Expected 0.1, got: \" + solution(stdin=None)"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    100 10 2 1\n    \"\"\"\n) == \"0.1\"\n\nassert solution(\n    \"\"\"\n    100 10 2 2\n    \"\"\"\n) == \"0.1909090909\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '0.1', \"Your solution is incorrect.\"\n"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100 10 2 1\\n\") == \"0.1\\n\"\nassert solution(\"100 10 2 2\\n\") == \"0.1909090909\\n\"\n\nfrom typing import List\nimport math"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"100 10 2 1\") == \"0.1\\n\"\nassert solution(\"100 10 2 2\") == \"0.1909090909\\n\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('100 10 2 1\\n100 10 2 2') == '0.1'\nassert solution('100 10 2 3\\n100 10 2 1') == '0.1909090909'"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 0.1, \"Solution should return 0.1\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 0.1909090909\nassert solution == 0.1\nassert solution == 0.9999999999\nassert solution == 0.99999999999\nassert solution == 0.190909090909\nassert solution == 0.99999999999999999"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(b'100 10 2 1\\n') == '0.1'\nassert solution(b'100 10 2 2\\n') == '0.1909090909'\n"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == \"4\\n0\\n5\"\nassert solution(\"ABABABcABABAbAbac\") == \"4\\n0\\n5\"\nassert solution(\"ACBABABACBAC\") == \"4\\n0\\n5\""
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 0\nassert solution(\"ABABABcABABAbAbab\") == 5"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbab\") == 4\nassert solution(\"ABABABcABABAbab\") == 4"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbba\") == 5"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == \"4\"\nassert solution(\"ABABABcABABAbAbab\") == \"0\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\""
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == 4, \"Test case 1 failed\"\nassert solution(\"ABABABcABABAbAbab\") == 0, \"Test case 2 failed\"\nassert solution(\"ABABABcABABAbAbab\") == 5, \"Test case 3 failed\""
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 0\nassert solution(\"ABABABcABABAbAbab\") == 5"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('ABABABcABABAbAbab') == '4', \"Test 1 failed.\"\nassert solution('ABABABcABABAbAbab') == '0', \"Test 2 failed.\"\nassert solution('ABABABcABABAbAbab') == '5', \"Test 3 failed.\""
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == 4, \"The solution should return 4\"\nassert solution(\"ABABABcABABAbAbab\") == 0, \"The solution should return 0\"\nassert solution(\"ABABABcABABAbAbab\") == 5, \"The solution should return 5\""
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 4) == \"0\"\nassert solution(\"ABABABcABABAbAbab\", 5) == \"5\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 2, \"Incorrect output.\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Output should contain one integer: the maximum number of nodes that can be marked.\\n\", \"Please provide the correct input.\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Output should contain one integer: the maximum number of nodes that can be marked.\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\\n\") == \"2\\n\"\n\nsolution(\"4 3\\n0\\n0\\n1\\n\")"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\") == \"2\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\\n\") == \"2\"\nassert solution(\"4 3\\n1 2\\n0 1\\n3 1\\n2 0\\n\") == \"2\"\nassert solution(\"4 5\\n1 1\\n1 3\\n1 4\\n1 2\\n0 2\\n2 2\\n3 2\\n\") == \"3\"\nassert solution(\"4 5\\n2 2\\n2 1\\n2 3\\n2 4\\n2 0\\n\") == \"3\"\nassert solution(\"4 5\\n2 3\\n2 2\\n2 1\\n2 4\\n2 0\\n\") == \"4\"\nassert solution(\"4 5\\n2 4\\n2 3\\n2 2\\n2 1\\n2 0\\n\") == \"4\"\nassert solution(\"4 5\\n2 4\\n2 1\\n2 3\\n2 2\\n2 0\\n\") == \"5\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\") == \"2\", \"The output should be 2\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\"\nassert solution() == \"3\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\\n\") == \"2\\n\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution.input) == solution.output"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1\\nP0: 22 1 4 2 6 -1 0\\n'\n"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\\nP0: 22 1 4 2 6 -1 0\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\\nP0: 22 1 4 2 6 -1 0\\n\"\n"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution(\"3 3 3 3\\n1 2 3 4 5 6 7 8\") == \"2\\nP1: 21 2 5 3 7 -2 0\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP0: 22 1 4 2 6 -1 0\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"2\\nP1: 17 4 4 2 10 -1 0\\nP2: 22 4 3 1 6 -2 0\\nP3: 22 5 2 2 1 -1 0\\n4: 20 5 3 2 2 -1 0\\n5: 19 4 2 1 4 -1 0\\nP6: 22 3 2 2 5 -2 0\\nP7: 18 3 1 1 5 -1 0\\nP8: 17 4 3 2 2 -1 0\\nP9: 20 3 2 1 4 -1 0\\n10: 17 4 3 2 2 -1 0\\nP11: 19 3 2 1 4 -1 0\\nP12: 21 3 2 1 5 -1 0\"\nassert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"3\\nP1: 21 5 3 2 1 -1 0\\nP2: 19 3 2 1 4 -1 0\\nP3: 20 3 2 1 4 -1 0\\nP4: 20 5 3 2 2 -1 0\\nP5: 20 4 2 1 4 -1 0\\nP6: 22 3 2 2 5 -2 0\\nP7: 18 3 1 1 5 -1 0\\nP8: 17 4 3 2 2 -1 0\\nP9: 20 3 2 1 4 -1 0\\nP10: 17 4 3 2 2 -1 0\\nP11: 19 3 2 1 4 -1 0\\nP12: 21 3 2 1 5 -1 0\\nP13: 20 5 3 2 2 -1 0\\nP14: 18 3 1 1 5 -1 0\\nP15: 19 5 3 2 2 -1 0\\nP16: 20 4 2 1 4 -1 0\\nP17: 21 4 2 1 5 -1 0\\nP18: 19 3 2 1 4 -1 0\\nP19: 20 5 3 2 2 -1 0\\nP20: 22 4 2 1 4 -1 0\"\nassert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n12 "
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '''\n1\nP0: 22 1 4 2 6 -1 0\n'''"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == '1\\nP0: 22 1 4 2 6 -1 0'"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP0: 22 1 4 2 6 -1 0\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\") == [\"1\",\"2\",\"3\",\"4\"]"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    4 7\n    1 2 1\n    1 2 3\n    1 3 2\n    1 4 1\n    2 3 4\n    2 4 4\n    3 4 4\n    3\n    1 2\n    1 3\n    3 4\n    \"\"\"\n) == \"1\\n2\\n3\\n\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin: str) == \"Output:\\n1\\n2\\n3\\n\", \"Test failed\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    4 7\n    1 2 1\n    1 2 3\n    1 3 2\n    1 4 1\n    2 3 4\n    2 4 4\n    3 4 4\n    3\n    \"\"\"\n) == \"\"\"\n1\n2\n3\n\"\"\"\n\nassert solution(\n    \"\"\"\n    10 10\n    1 2 2\n    1 3 4\n    2 4 3\n    2 6 2\n    3 5 4\n    4 8 6\n    \"\"\"\n) == \"\"\"\n1\n1\n1\n1\n\"\"\"\n\nassert solution(\n    \"\"\"\n    10 10\n    1 2 2\n    1 3 4\n    2 4 3\n    2 6 2\n    3 5 4\n    4 8 6\n    5 7 3\n    6 9 5\n    7 8 4\n    \"\"\"\n) == \"\"\"\n1\n1\n1\n1\n1\n1\n1\n\"\"\"\n\nassert solution(\n    \"\"\"\n    10 10\n    1 2 2\n    1 3 4\n    2 4 3\n    2 6 2\n    3 5 4\n    4 8 6\n    5 7 3\n    6 9 5\n    7 8 4\n    8 9 6\n    \"\"\"\n) == \"\"\"\n1\n1\n1\n1\n1\n1\n1\n1\n\"\"\"\n\nassert solution(\n    \"\"\"\n    10 10\n    1 2 2\n    1 3 4\n    2 4 3\n    2 6 2\n    3 5 4\n    4 8 6\n    5 7 3\n    6 9 5\n    7 8 4\n    8 9 6\n    9 10 7\n    \"\"\"\n) == \"\"\"\n1\n1\n1\n1\n1\n1\n1\n1\n1\n\"\"\"\n\nassert solution(\n    \"\"\"\n    10 10\n    1 2 2\n    1 3 4\n    2 4 3\n    2 6 2\n    3 5 4\n    4 8 6\n    5 7 3\n    6 9 5\n    7 8 4\n    8 9 6\n    9 10 7\n    10 11 8\n    \"\"\"\n) == \"\"\"\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n\"\"\"\n\nassert solution(\n    \"\"\"\n    10 10\n    1 2 2\n    1 3 4\n    2 4 3\n    2 6 2\n    3 5 4\n    4 8 6\n    5 7 3\n    6 9 5\n    7 8 4\n    8 9 6\n    9 10 7\n    10 11 8\n    11 12 9\n    \"\"\"\n) == \"\"\"\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n\"\"\"\n\nassert solution(\n    \"\"\"\n    10 10\n    1 2 2\n    1 3 4\n    2 4 3\n    2 6 2\n    3 5 4\n    4 8 6\n    5 7 3\n    6 9 5\n    7 8 4\n    8 9 6\n    9 10 7\n    10 11 8\n    11 12 9\n    12 13 10\n    \"\"\"\n) == \"\"\"\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n\"\"\"\n\nassert solution(\n    \"\"\"\n    10 10\n    1 2 2\n    1 3 4\n    2 4 3\n    2 6 2\n    3 5 4\n    4 8 6\n    5 7 3\n    6 9 5\n    7 8 4\n    8 9 6\n    9 10 7\n    10 11 8\n    11 12 9\n    12 13 10\n    13 14 11\n    \"\"\"\n) == \"\"\"\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n\"\"\"\n\nassert solution(\n    \"\"\"\n    10 10\n    1 2 2\n    1 3 4\n    2 4 3\n    2 6 2\n    3 5 4\n    4 8 6\n    5 7 "
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n') == '1\\n2\\n3\\n'\n\nsolution('4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n')"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output() for input, output in zip(stdin_data, stdout_data)\n"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\") == [\"1\",\"2\",\"3\",\"3\"]\nassert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\") == [\"1\",\"2\",\"3\",\"3\"]"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2 1\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\") == \"1\\n2\\n3\"\nassert solution(\"4\\n7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\") == \"1\\n2\\n3\"\n"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n\") == \"1\\n2\\n3\\n\"\nassert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n5\\n\") == \"5\\n\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '2'"
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\n3\\n5\\n7\"\nassert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\n4\\n5\\n8\"\nassert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\n5\\n6\\n9\"\nassert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\n6\\n7\\n10\"\nassert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\n7\\n8\\n11\"\nassert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\n8\\n9\\n12\"\nassert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\n9\\n10\\n13\"\nassert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\n10\\n11\\n14\"\nassert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\n11\\n12\\n15\"\nassert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\n12\\n13\\n16\"\nassert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\n13\\n14\\n17\"\nassert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\n14\\n15\\n18\"\nassert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\n15\\n16\\n19\"\nassert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\n16\\n17\\n20\"\nassert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\n17\\n18\\n21\"\nassert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\n18\\n19\\n22\"\nassert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\n19\\n20\\n23\"\nassert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\n20\\n21\\n24\"\nassert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\n21\\n22\\n25\"\nassert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\n22\\n23\\n26\"\nassert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\n23\\n24\\n27\"\nassert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2"
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output, \"The output of the program does not match the expected output.\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\n\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\", \"Your code is not correct.\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\\n') == '2'"
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\""
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80\n\"\"\") == \"60\\n\""
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 60"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\n"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\\n\") == \"60\\n\"\nassert solution(\"4 2 3\\n1 5 2 3\\n2 4 2 3\\n\") == \"-1\\n\""
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n    3 3 2\n    1 30 2 50\n    2 70 3 10\n    3 20 1 80\n\"\"\") == \"60\\n\"\n\nassert solution(\"\"\"\n    3 3 2\n    1 30 2 50\n    2 70 3 10\n    3 20 1 80\n\"\"\") == \"60\\n\"\n\nassert solution(\"\"\"\n    3 3 1\n    1 30 2 50\n    2 70 3 10\n    3 20 1 80\n\"\"\") == \"-1\\n\"\n\nassert solution(\"\"\"\n    3 3 1\n    1 30 2 50\n    2 70 3 10\n    3 20 1 80\n\"\"\") == \"-1\\n\"\n\nassert solution(\"\"\"\n    3 3 1\n    1 30 2 50\n    2 70 3 10\n    3 20 1 80\n\"\"\") == \"-1\\n\"\n\nassert solution(\"\"\"\n    3 3 1\n    1 30 2 50\n    2 70 3 10\n    3 20 1 80\n\"\"\") == \"-1\\n\"\n\nassert solution(\"\"\"\n    3 3 1\n    1 30 2 50\n    2 70 3 10\n    3 20 1 80\n\"\"\") == \"-1\\n\""
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80\n''') == '60'"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"60\\n\", \"Expected '60', but got '{}'.\".format(solution(stdin))"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    3 3 2\n    1 30 2 50\n    2 70 3 10\n    3 20 1 80\n    \"\"\"\n) == \"60\\n\""
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80\n''') == '60\\n'\nassert solution('''\n4 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80\n''') == '-1\\n'\nassert solution('''\n3 4 2\n1 30 2 50\n2 70 3 10\n3 20 1 80\n''') == '-1\\n'\nassert solution('''\n3 3 4\n1 30 2 50\n2 70 3 10\n3 20 1 80\n''') == '-1\\n'\nassert solution('''\n3 3 3\n1 30 2 50\n2 70 3 10\n3 20 1 80\n''') == '60\\n'\nassert solution('''\n3 3 3\n1 30 2 50\n2 70 3 10\n3 20 1 80\n''') == '60\\n'"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80') == '60\\n'\n"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'Case #1: 1\\nCase #2: 2\\n'\n"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n3\\n10000 0 0\\n0 10000 0\\n0 0 10000\\n3\\n5000 0 0\\n0 2000 0\\n0 0 4000\") == [\"Case #1: 1\", \"Case #2: 2\"]"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n10000 0 0\\n0 10000 0\\n0 0 10000\\n3\\n5000 0 0\\n0 2000 0\\n0 0 4000\\n\") == \"Case #1: 1\\nCase #2: 2\""
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n10000 0 0\\n0 10000 0\\n0 0 10000\\n3\\n5000 0 0\\n0 2000 0\\n0 0 4000\") == \"\"\"Case #1: 1\nCase #2: 2\"\"\"\n"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'Case #1: 1\\nCase #2: 2\\n'\n"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n5000 0 0\\n0 2000 0\\n0 0 4000\") == \"Case #1: 1\\nCase #2: 2\""
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == solution_part_1(sample_input)\nassert solution(sample_input) == solution_part_2(sample_input)"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"Case #1: 1\\nCase #2: 2\\n\""
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == '''\nCase #1: 1\nCase #2: 2\n'''\n"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"Case #1: 1\\nCase #2: 2\""
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(exampleeq) == [\"6\", \"6\", \"6\", \"1\"], \"Invalid output\"\nprint(solution(exampleeq))"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == '6 6 6 1\\n'\n"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"\"\"\n6 6 6 1\n\"\"\""
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == ['6', '6', '6', '1'], \"Expected ['6', '6', '6', '1'], but got {}\".format(solution(''))"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"test_input.txt\", \"r\").read()) == \"6 6 6 1\"\n"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0 0') == '6 6 6 1\\n'\nassert solution('+1 2 H 2 O 1') == '6 5 6 2\\n'\nassert solution('+1 2 C 1 O 2') == '6 6 5 3\\n'\nassert solution('-1 1 O 2') == '6 6 6 4\\n'\nassert solution('-1 3 C 6 H 12 O 6') == '6 6 6 3\\n'\nassert solution('1 2 H 2 O 1') == '6 6 6 4\\n'\nassert solution('1 2 C 1 O 2') == '6 6 6 5\\n'\nassert solution('1 2 H 2 O 1') == '6 6 6 4\\n'"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('example.txt', 'r').read()) == ['6', '6', '6', '1']"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"6 6 6 1\""
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n') == '6 6 6 1'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n') == '6 6 6 1'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n') == '6 6 6 1'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n') == '6 6 6 1'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n') == '6 6 6 1'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n') == '6 6 6 1'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n') == '6 6 6 1'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n') == '6 6 6 1'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n') == '6 6 6 1'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n') == '6 6 6 1'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n') == '6 6 6 1'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n') == '6 6 6 1'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n') == '6 6 6 1'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n') == '6 6 6 1'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n') == '"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == '6 6 6 1'"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"The input consists of a single test case.\\n4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\") == \"20.83\\n\", \"Your code is not correct\"\n"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''4\n30 50\n20 0\n100 0\n100 40\n20 40''') == '20.83\\n'\n"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\\n') == '20.83'"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"20.83\", \"Invalid output.\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\") == \"20.83\"\nassert solution(\"4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\\n\") == \"20.83\"\nassert solution(\"10000 0\") == \"0.00\"\nassert solution(\"10000 10000\") == \"10000.00\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n4\n30 50\n20 0\n100 0\n100 40\n20 40\n\"\"\"\n) == \"20.83\\n\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''4\n30 50\n20 0\n100 0\n100 40\n20 40''') == '20.83'"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"The expected output is {output}, but got {solution(input())}\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '20.83', \"Test failed\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\") == \"20.83\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 3) == \"49\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"49\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\n1 2 5\\n7 6 4\\n9 8 3') == 49\n"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test case {index+1} failed\"\n"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\\n\"\n"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3\\n1 2 5\\n7 6 4\\n9 8 3') == '49'"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 3) == 49\nassert solution(3, 4) == 3\nassert solution(3, 5) == 4\nassert solution(3, 6) == 1\nassert solution(3, 7) == 4\nassert solution(3, 8) == 4\nassert solution(3, 9) == 9\nassert solution(4, 3) == 3\nassert solution(4, 4) == 1\nassert solution(4, 5) == 3\nassert solution(4, 6) == 2\nassert solution(4, 7) == 2\nassert solution(4, 8) == 4\nassert solution(4, 9) == 7\nassert solution(5, 3) == 9\nassert solution(5, 4) == 6\nassert solution(5, 5) == 10\nassert solution(5, 6) == 6\nassert solution(5, 7) == 4\nassert solution(5, 8) == 9\nassert solution(5, 9) == 15\nassert solution(6, 3) == 7\nassert solution(6, 4) == 7\nassert solution(6, 5) == 10\nassert solution(6, 6) == 13\nassert solution(6, 7) == 11\nassert solution(6, 8) == 13\nassert solution(6, 9) == 17\nassert solution(7, 3) == 16\nassert solution(7, 4) == 12\nassert solution(7, 5) == 16\nassert solution(7, 6) == 19\nassert solution(7, 7) == 16\nassert solution(7, 8) == 18\nassert solution(7, 9) == 21\nassert solution(8, 3) == 20\nassert solution(8, 4) == 17\nassert solution(8, 5) == 20\nassert solution(8, 6) == 23\nassert solution(8, 7) == 20\nassert solution(8, 8) == 21\nassert solution(8, 9) == 23\nassert solution(9, 3) == 20\nassert solution(9, 4) == 18\nassert solution(9, 5) == 20\nassert solution(9, 6) == 22\nassert solution(9, 7) == 20\nassert solution(9, 8) == 21\nassert solution(9, 9) == 22"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3\\n1 2 5\\n7 6 4\\n9 8 3') == '49\\n'\n"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\"\nassert solution(\"3 3\\n2 1 3\\n4 5 7\") == \"4\"\nassert solution(\"4 4\\n1 2 3 4 5 6\") == \"24\"\nassert solution(\"1 1\\n5\") == \"0\"\nassert solution(\"1 1\\n0\") == \"0\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 49"
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"##CROSSWORD####\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 15\\n#.........#\\n1\\nCROSSWORD\\n\") == \"##CROSSWORD####\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n"
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\") == \"##CROSSWORD####\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '##CROSSWORD####', \"Test failed\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\") == \"##CROSSWORD####\\n\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"1 15\\n##.........####\\n1\\nCROSSWORD\\n\"\n) == \"##CROSSWORD####\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\") == \"##CROSSWORD####\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\") == \"#CROSSWORD#\"\nassert solution(\"1 15\\n##.........####\\n1\\nTESTING\") == \"def solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"1 15\\n##.........####\\n1\\n1234567890\") == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, \"Test case failed\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input) == output, \"Testcase failed\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n2 7 6\\n9 5 1\\n4 3 8\") == \"31\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n2 7 6\\n9 5 1\\n4 3 8\") == \"31\"\n"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '31\\n'"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 31, \"Your solution is not correct. It should return 31, but it returns {}\".format(solution())"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 1\\n2 7 6\\n9 5 1\\n4 3 8') == '31'"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 31, \"Incorrect output\"\n"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n2 7 6\\n9 5 1\\n4 3 8\") == 31"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 1\\n2 7 6\\n9 5 1\\n4 3 8') == 31\nprint('All tests passed')"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 1\\n2 7 6\\n9 5 1\\n4 3 8') == '31'\n"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\"\nassert solution(\"5 3\\nBWWWW\\nBWWWW\\nBWWWW\\nBWWWW\") == \"5\"\nassert solution(\"6 3\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\") == \"10\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 1\\nBBW') == '2\\n'\nassert solution('4 2\\nBBW') == '3\\n'\nassert solution('5 3\\nBW') == '5\\n'\nassert solution('3 2\\nBW') == '4\\n'\nassert solution('3 3\\nBW') == '6\\n'\n"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\\n\"\nassert solution(\"3 2\\nWWWW\") == \"3\\n\"\nassert solution(\"4 1\\nBBB\") == \"0\\n\"\nassert solution(\"4 1\\nWW\") == \"1\\n\"\nassert solution(\"4 1\\nBBBWW\") == \"5\\n\"\nassert solution(\"4 1\\nWWWWWW\") == \"6\\n\"\nassert solution(\"5 1\\nBBB\") == \"0\\n\"\nassert solution(\"5 1\\nWW\") == \"1\\n\"\nassert solution(\"5 1\\nBBBWW\") == \"5\\n\"\nassert solution(\"5 1\\nWWWWWW\") == \"6\\n\"\nassert solution(\"6 1\\nBBB\") == \"0\\n\"\nassert solution(\"6 1\\nWW\") == \"1\\n\"\nassert solution(\"6 1\\nBBBWW\") == \"5\\n\"\nassert solution(\"6 1\\nWWWWWW\") == \"6\\n\"\nassert solution(\"7 1\\nBBB\") == \"0\\n\"\nassert solution(\"7 1\\nWW\") == \"1\\n\"\nassert solution(\"7 1\\nBBBWW\") == \"5\\n\"\nassert solution(\"7 1\\nWWWWWW\") == \"6\\n\"\nassert solution(\"8 1\\nBBB\") == \"0\\n\"\nassert solution(\"8 1\\nWW\") == \"1\\n\"\nassert solution(\"8 1\\nBBBWW\") == \"5\\n\"\nassert solution(\"8 1\\nWWWWWW\") == \"6\\n\"\nassert solution(\"9 1\\nBBB\") == \"0\\n\"\nassert solution(\"9 1\\nWW\") == \"1\\n\"\nassert solution(\"9 1\\nBBBWW\") == \"5\\n\"\nassert solution(\"9 1\\nWWWWWW\") == \"6\\n\"\nassert solution(\"10 1\\nBBB\") == \"0\\n\"\nassert solution(\"10 1\\nWW\") == \"1\\n\"\nassert solution(\"10 1\\nBBBWW\") == \"5\\n\"\nassert solution(\"10 1\\nWWWWWW\") == \"6\\n\"\nassert solution(\"11 1\\nBBB\") == \"0\\n\"\nassert solution(\"11 1\\nWW\") == \"1\\n\"\nassert solution(\"11 1\\nBBBWW\") == \"5\\n\"\nassert solution(\"11 1\\nWWWWWW\") == \"6\\n\"\nassert solution(\"12 1\\nBBB\") == \"0\\n\"\nassert solution(\"12 1\\nWW\") == \"1\\n\"\nassert solution(\"12 1\\nBBBWW\") == \"5\\n\"\nassert solution(\"12 1\\nWWWWWW\") == \"6\\n\"\nassert solution(\"13 1\\nBBB\") == \"0\\n\"\nassert solution(\"13 1\\nWW\") == \"1\\n\"\nassert solution(\"13 1\\nBBBWW\") == \"5\\n\"\nassert solution(\"13 1\\nWWWWWW\") == \"6\\n\"\nassert solution(\"14 1\\nBBB\") == \"0\\n\"\nassert solution(\"14 1\\nWW\") == \"1\\n\"\nassert solution(\"14 1\\nBBBWW\") == \"5\\n\"\nassert solution(\"14 1\\nWWWWWW\") == \"6\\n\"\nassert solution(\"15 1\\nBBB\") == \"0\\n\"\nassert solution(\"15 1\\nWW\") == \"1\\n\"\nassert solution(\"15 1\\nBBBWW\") == \"5\\n\"\nassert solution(\"15 1\\nWWWWWW\") == \"6\\n\"\nassert solution(\"16 1\\nBBB\") == \"0\\n\"\nassert solution(\"16 1\\nWW\") == \"1\\n\"\nassert solution(\"16 1\\nBBBWW\") == \"5\\n\"\nassert solution(\"16 1\\nWWWWWW\") == \"6\\n\"\nassert solution(\"17 1\\nBBB\") == \"0\\n\"\nassert solution(\"17 1\\nWW\") == \"1\\n\"\nassert solution(\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\"\nassert solution(\"3 2\\nBWBBBW\") == \"2\"\nassert solution(\"3 3\\nBWWBBBW\") == \"2\"\nassert solution(\"3 4\\nWWBBWW\") == \"2\"\nassert solution(\"3 5\\nBBWBBBW\") == \"2\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\"\nassert solution(\"5 1\\nWWBW\") == \"3\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"3 1\\nBBW\\n\") == 2\n\nimport itertools\nfrom collections import Counter"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\", \"Test Failed\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0.556\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0.556\", \"Expected 0.556, got {}\".format(solution(stdin))"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0.556\\n\", \"Test failed\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"0.556\", \"Your code is incorrect.\"\n"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 0.556, \"Incorrect solution\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\n3 2 1\\n1 2 3\") == \"0.556\\n\"\n"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0.556\", \"The given code is incorrect.\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n3 2 1\\n1 2 3\") == \"0.556\", \"Solution not correct\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 1\\n3 2 1\\n1 2 3') == 0.556, \"Incorrect output\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 4 3 2') == '3'\n"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 4 3 2\") == 3, \"Expected output: 3\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4 3 2\") == 3\n"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4 3 2\") == 3\nassert solution(\"4 5 3 2\") == 2\nassert solution(\"3 4 5 2\") == 2\nassert solution(\"2 3 4 5\") == 1\nassert solution(\"1 2 3 4\") == 0"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 4 3 2') == '3\\n'\nassert solution('1000 1000 1000 1000') == '1000\\n'"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4 3 2\") == 3, \"The output is not as expected.\"\n"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4 3 2\") == 3"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4 3 2\") == \"3\\n\", \"Incorrect output for sample input.\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4 3 2\") == 3\n\nsolution(\"5 4 3 2\")"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    4\n    1 3 6\n    2 5 8\n    3 3 5\n    5 3 6\n    \"\"\"\n) == \"13\"\n\nprint(\"All tests passed.\")"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\\n\") == \"13\""
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"13\", \"Test case failed.\""
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\\n\") == \"13\"\nprint(\"All tests passed successfully\")"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\\n\") == \"13\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\\n\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\""
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\"\n\nprint(solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\"))"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\"\n"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\\n\"\nassert solution(\"2\\n5 3 6\\n2 5 8\\n3 3 5\") == \"11\\n\"\nassert solution(\"4\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\\n\""
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\") == \"3.141593\\n\", \"Test failed\""
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '3.141593'\n"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3.141593\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3.141593\""
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10.000000 20.123456\\n1\\n13.141593 20.123456') == 3.141593, \"The answer is incorrect\"\nprint(solution('10.000000 20.123456\\n1\\n13.141593 20.123456'))"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, but got {solution(input())}\""
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == \"3.141593\""
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10.000000 20.123456\\n1\\n13.141593 20.123456\\n') == 3.141593, 'Expected 3.141593 but got {}'.format(solution('10.000000 20.123456\\n1\\n13.141593 20.123456\\n'))"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"3.141593\", \"The code is incorrect. Please check your implementation.\""
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == \"3.141593\", \"The solution is incorrect.\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n2\") == \"2.13333333333333\\n\"\nassert solution(\"3\") == \"impossible\\n\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n2\\n\") == \"2.13333333333333\"\nassert solution(\"3\\n10\\n20\\n30\\n40\\n50\\n60\\n70\\n80\\n90\\n100\\n\") == \"impossible\"\nassert solution(\"3\\n10\\n100\\n1000\\n10000\\n100000\\n1000000\\n10000000\\n100000000\\n1000000000\\n10000000000\\n100000000000\\n1000000000000\\n10000000000000\\n\") == \"impossible\"\nassert solution(\"5\\n1\\n2\\n3\\n4\\n5\\n\") == \"5.0\"\nassert solution(\"3\\n10\\n100\\n1000\\n10000\\n100000\\n1000000\\n10000000\\n100000000\\n1000000000\\n10000000000\\n100000000000\\n1000000000000\\n10000000000000\\n100000000000000\\n\") == \"impossible\"\nassert solution(\"3\\n10\\n100\\n1000\\n10000\\n100000\\n1000000\\n10000000\\n100000000\\n1000000000\\n10000000000\\n100000000000\\n1000000000000\\n10000000000000\\n100000000000000\\n\") == \"impossible\"\nassert solution(\"3\\n10\\n100\\n1000\\n10000\\n100000\\n1000000\\n10000000\\n100000000\\n1000000000\\n10000000000\\n100000000000\\n1000000000000\\n10000000000000\\n100000000000000\\n\") == \"impossible\"\nassert solution(\"3\\n10\\n100\\n1000\\n10000\\n100000\\n1000000\\n10000000\\n100000000\\n1000000000\\n10000000000\\n100000000000\\n1000000000000\\n10000000000000\\n100000000000000\\n\") == \"impossible\"\nassert solution(\"3\\n10\\n100\\n1000\\n10000\\n100000\\n1000000\\n10000000\\n100000000\\n1000000000\\n10000000000\\n100000000000\\n1000000000000\\n10000000"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n2\\n\") == \"2.13333333333333\\n\"\nassert solution(\"3\\n4 4\\n2\\n\") == \"impossible\\n\"\nassert solution(\"1\\n1\\n\") == \"impossible\\n\"\nassert solution(\"10\\n100\\n\") == \"impossible\\n\"\nassert solution(\"10\\n1\\n20\\n\") == \"impossible\\n\"\nassert solution(\"1000\\n1000\\n\") == \"impossible\\n\"\nassert solution(\"1000\\n1\\n2000\\n\") == \"impossible\\n\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2.13333333333333\"\nassert solution() == \"impossible\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Sample Input\\n3\\n4 4\\n2\\nSample Output\\n2.13333333333333\\nimpossible\") == \"2.13333333333333\\nimpossible\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"\"\"\n    3\n    4 4\n    2\n\"\"\") == \"2.13333333333333\\n\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n4 4\\n2\\n') == '2.13333333333333\\n'\nassert solution('4\\n2 4\\n2\\n') == 'impossible\\n'\nassert solution('3\\n4 4\\n3\\n') == 'impossible\\n'\nassert solution('5\\n4 4\\n2\\n') == 'impossible\\n'\nassert solution('3\\n4 4\\n1\\n') == 'impossible\\n'\nassert solution('2\\n4 4\\n1\\n') == '2.13333333333333\\n'"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n2\\n\") == \"2.13333333333333\"\nassert solution(\"3\\n2\\n\") == \"impossible\"\nassert solution(\"2 2\\n2\\n\") == \"2.0\"\nassert solution(\"5 5\\n3\\n1\\n2\\n3\\n\") == \"2.5\"\nassert solution(\"5 5\\n1\\n2\\n3\\n4\\n\") == \"3.0\"\nassert solution(\"5 5\\n1\\n2\\n3\\n4\\n5\\n\") == \"3.5\"\nassert solution(\"5 5\\n1\\n2\\n3\\n4\\n5\\n6\\n\") == \"4.0\"\nassert solution(\"5 5\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n\") == \"4.5\"\nassert solution(\"5 5\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n\") == \"5.0\"\nassert solution(\"5 5\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\") == \"5.5\"\nassert solution(\"5 5\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"6.0\"\nassert solution(\"5 5\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n\") == \"6.5\"\nassert solution(\"5 5\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n\") == \"7.0\"\nassert solution(\"5 5\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n\") == \"7.5\"\nassert solution(\"5 5\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n\") == \"8.0\"\nassert solution(\"5 5\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n\") == \"8.5\"\nassert solution(\"5 5\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n\") == \"9.0\"\nassert solution(\"5 5\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n\") == \"9.5\"\nassert solution(\"5 5\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n\") == \"10.0\"\nassert solution(\"5 5\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n\") == \"10.5\"\nassert solution(\"5 5\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n4 4\\n2') == '2.13333333333333\\n'"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n4 4\\n2\") == \"2.13333333333333\\nimpossible\"\n"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(7) == \"18\"\n"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(7) == 18, \"Incorrect output\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"18\"\n"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 18, \"Test failed.\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(12345) == \"18\"\nassert solution(500001) == \"6700\"\nassert solution(1000000) == \"590\"\nassert solution(2000000) == \"525\"\nassert solution(500000) == \"18\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(7) == \"18\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(7) == \"18\\n\"\n"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n\") == \"18\\n\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"18\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 18"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\") == 3\nassert solution(\"5\\n15 M hobbies\\n18 M music\\n23 M fashion\\n20 F music\\n15 M education\\n25 M coding\") == 5\nassert solution(\"4\\n30 M soccer\\n40 F music\\n50 M art\\n35 M history\\n45 M politics\") == 4\nassert solution(\"4\\n25 M hobbies\\n35 M music\\n20 F fashion\\n25 M education\\n10 F music\\n20 M coding\") == 4\nassert solution(\"6\\n45 M hobbies\\n50 M music\\n40 F fashion\\n45 M education\\n30 M music\\n30 F coding\") == 6"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\") == \"3\"\nassert solution(\"4\\n25 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\") == \"3\"\nassert solution(\"4\\n35 F classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 M baroque soccer\") == \"3\"\nassert solution(\"4\\n25 M classicism programming\\n0 F baroque skiing\\n43 M baroque chess\\n30 M baroque soccer\") == \"3\"\nassert solution(\"4\\n35 M classicism programming\\n0 F baroque skiing\\n43 M baroque chess\\n30 M baroque soccer\") == \"3\"\nassert solution(\"4\\n25 M classicism programming\\n0 M baroque skiing\\n43 F baroque chess\\n30 M baroque soccer\") == \"3\"\nassert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 F baroque chess\\n30 M baroque soccer\") == \"3\"\nassert solution(\"4\\n25 M classicism programming\\n0 F baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\") == \"3\"\nassert solution(\"4\\n35 M classicism programming\\n0 F baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\") == \"3\"\nassert solution(\"4\\n25 M classicism programming\\n0 M baroque skiing\\n43 F baroque chess\\n30 M baroque soccer\") == \"3\"\nassert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 F baroque chess\\n30 M baroque soccer\") == \"3\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n'''\n4\n35 M classicism programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer\n''') == '3'\nassert solution(\n'''\n2\n35 M classicism programming\n0 F baroque skiing\n''') == '1'\nassert solution(\n'''\n2\n35 F classicism programming\n0 F baroque skiing\n''') == '1'\nassert solution(\n'''\n3\n35 F classicism programming\n0 F baroque skiing\n43 M baroque chess\n''') == '2'\nassert solution(\n'''\n4\n35 F classicism programming\n0 F baroque skiing\n43 M baroque chess\n30 F baroque soccer\n''') == '3'"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer') == '3\\ndef solution(stdin: str) -> str:\\npass'\n"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\") == \"3\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n\") == \"3\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == '3'\nassert solution(open('input2.txt', 'r')) == '6'\nassert solution(open('input3.txt', 'r')) == '7'\nassert solution(open('input4.txt', 'r')) == '5'\nassert solution(open('input5.txt', 'r')) == '5'"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"3\\n\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nprint(\"All test cases pass\")\n"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"a 0\\na 1\\nb 2\\nc 2 3\\nb 4\") == \"2\\n1\"\nassert solution(\"a 0\\na 1\\nb 2\\nc 3 3\") == \"1\"\nassert solution(\"a 0\\na 1\\nb 2\\nc 2 3\\nb 4\\nc 3 3\\nc 1 1\") == \"1\"\nassert solution(\"a 0\\na 1\\nb 2\\nc 2 3\\nb 4\\nc 3 3\\nc 1 1\\nc 0 0\") == \"1\"\nassert solution(\"a 0\\na 1\\nb 2\\nc 2 3\\nb 4\\nc 3 3\\nc 1 1\\nc 0 0\\n0 0\") == \"0\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"The output is '{solution(input())}' but expected '{expected_output}'\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n5\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\nb 0\\nb 1\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\nb 0\\nb 1\\nb 2\\nb 3\\nb 4\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"The solution does not match the expected output.\\nExpected: {output()}\\nGot: {solution(input())}\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input(\"N: \")) == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test the correctness of solution.\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output, f\"Test failed for {sample_input}\"\n\nsample_input = \"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\"\nsample_output = \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution(sample_input))\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\npass\\n\"\n"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\\n\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"5\\n\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0') == '5\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"5\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\\n\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0') == '5\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '5\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nfor case in [(6, 1, [78, 61, 88, 71]), (8, 3, [80, 80, 90, 90]), (10, 2, [70, 90, 80, 100]), (8, 1, [67, 63, 0, 0]), (7, 1, [90, 63, 0, 0])]:\\n    assert solution(case[0], case[1], case[2]) == case[3]\\n\\nprint(\"All test cases pass\")\\n'"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\\n\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r').read()) == '5\\n'\n"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\") == \"5\""
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    4 5\n    1 2\n    1 3\n    1 4\n    2 3\n    2 4\n    \n''') == '4\\n'"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n') == '4\\n'\nassert solution('2 3\\n2 4\\n1 2\\n1 3\\n1 4\\n') == '6\\n'"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n\") == 4\n"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n') == '4\\n'\n"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"4\\n\", solution(stdin)\n"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\") == 4\nprint(\"All tests passed!\")"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\") == 4\nassert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\") == 4 % (1000000009 + 1)  # correct answer"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n\") == \"4\\n\""
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n\") == \"4\\n\"\n"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"4\\n\", \"Testcase 1 failed\"\n\nassert solution(stdin) == \"1\\n\", \"Testcase 2 failed\"\n\nassert solution(stdin) == \"2\\n\", \"Testcase 3 failed\"\n\nassert solution(stdin) == \"1\\n\", \"Testcase 4 failed\"\n\nassert solution(stdin) == \"1\\n\", \"Testcase 5 failed\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n2 4\"\n"
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n2 4\"\nassert solution(\"5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\") == \"2\\n3 4\\n4 6\\n5 7\\n6 8\\n7 9\\n8 10\"\nprint(\"All tests pass!\")"
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\ntest_cases = [\\n    [\"1 2\", \"2 3\", \"3 4\"],\\n    [\"1 4\", \"2 5\", \"3 6\", \"4 7\"],\\n    [\"1 2\", \"2 4\", \"3 5\"],\\n    [\"1 2\", \"2 3\", \"3 4\", \"4 5\"],\\n    [\"1 2\", \"2 3\", \"3 4\", \"4 6\"],\\n]\\n\\nfor test_case in test_cases:\\n    n, *flights = test_case\\n    min_flights = len(flights)\\n    a, b = flights[0]\\n    c, d = flights[1]\\n    max_flights = min_flights + 1\\n    for i in range(2, n - 1):\\n        a, b = b, a\\n        c, d = d, c\\n        if (a, c) == (b, d):\\n            max_flights += 1\\n        else:\\n            break\\n    print(\"{:d}\".format(min_flights))\\n    print(\"{:d} {:d}\".format(a, c))\\n    print(\"{:d} {:d}\".format(b, d))\\n\\n    min_flights = len(flights)\\n    a, b = flights[0]\\n    c, d = flights[1]\\n    max_flights = min_flights + 1\\n    for i in range(2, n - 1):\\n        a, b = b, a\\n        c, d = d, c\\n        if (a, d) == (b, c):\\n            max_flights += 1\\n        else:\\n            break\\n    print(\"{:d}\".format(min_flights))\\n    print(\"{:d} {:d}\".format(a, d))\\n    print(\"{:d} {:d}\".format(b, c))\\n\\n    min_flights = len(flights)\\n    a, b = flights[0]\\n    c, d = flights[1]\\n    max_flights = min_flights + 1\\n    for i in range(2, n - 1):\\n        a, b = b, a\\n        c, d = d, c\\n        if (c, a) == (d, b):\\n            max_flights += 1\\n        else:\\n            break\\n    print(\"{:d}\".format(min_flights))\\n    print(\"{:d} {:d}\".format(c, a))\\n    print(\"{:d} {:d}\".format(d, b))\\n\\n    min_flights = len(flights)\\n    a, b = flights[0]\\n    c, d = flights[1]\\n    max_flights = min_flights + 1\\n    for i in range(2, n - 1):\\n        a, b = b, a\\n        c, d = d, c\\n        if (c, d) == (a, b):\\n            max_flights += 1\\n        else:\\n            break\\n    print(\"{:d}\".format(min_flights))\\n    print(\"{:d} {:d}\".format(c, d))\\n    print(\"{:d} {:d}\".format(a, b))\\n\\n    min_flights = len(flights)\\n    a, b = flights[0]\\n    c, d = flights[1]\\n    max_flights = min_flights + 1\\n    for i in range(2, n - 1):\\n        a, b = b, a\\n        c, d = d, c\\n        if (d, c) == (b, a):\\n            max_flights += 1\\n        else:\\n            break\\n    print(\"{:d}\".format(min_flights))\\n    print(\"{:d} {:d}\".format(d, c))\\n    print(\"{:d} {:d}\".format(b, a))\\n\\n    min_flights = len(flights)\\n    a, b = flights[0]\\n    c, d = flights[1]\\"
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"2\\n3 4\"\nassert solution(2) == \"2\\n4\"\nassert solution(3) == \"2\\n4\"\nassert solution(4) == \"2\\n4\"\nassert solution(5) == \"2\\n4\"\nassert solution(6) == \"2\\n4\"\nassert solution(7) == \"2\\n4\"\nassert solution(8) == \"2\\n4\"\nassert solution(9) == \"2\\n4\"\nassert solution(10) == \"2\\n4\"\nassert solution(11) == \"2\\n4\"\nassert solution(12) == \"2\\n4\"\nassert solution(13) == \"2\\n4\"\nassert solution(14) == \"2\\n4\"\nassert solution(15) == \"2\\n4\"\nassert solution(16) == \"2\\n4\"\nassert solution(17) == \"2\\n4\"\nassert solution(18) == \"2\\n4\"\nassert solution(19) == \"2\\n4\"\nassert solution(20) == \"2\\n4\"\nassert solution(21) == \"2\\n4\"\nassert solution(22) == \"2\\n4\"\nassert solution(23) == \"2\\n4\"\nassert solution(24) == \"2\\n4\"\nassert solution(25) == \"2\\n4\"\nassert solution(26) == \"2\\n4\"\nassert solution(27) == \"2\\n4\"\nassert solution(28) == \"2\\n4\"\nassert solution(29) == \"2\\n4\"\nassert solution(30) == \"2\\n4\"\nassert solution(31) == \"2\\n4\"\nassert solution(32) == \"2\\n4\"\nassert solution(33) == \"2\\n4\"\nassert solution(34) == \"2\\n4\"\nassert solution(35) == \"2\\n4\"\nassert solution(36) == \"2\\n4\"\nassert solution(37) == \"2\\n4\"\nassert solution(38) == \"2\\n4\"\nassert solution(39) == \"2\\n4\"\nassert solution(40) == \"2\\n4\"\nassert solution(41) == \"2\\n4\"\nassert solution(42) == \"2\\n4\"\nassert solution(43) == \"2\\n4\"\nassert solution(44) == \"2\\n4\"\nassert solution(45) == \"2\\n4\"\nassert solution(46) == \"2\\n4\"\nassert solution(47) == \"2\\n4\"\nassert solution(48) == \"2\\n4\"\nassert solution(49) == \"2\\n4\"\nassert solution(50) == \"2\\n4\"\nassert solution(51) == \"2\\n4\"\nassert solution(52) == \"2\\n4\"\nassert solution(53) == \"2\\n4\"\nassert solution(54) == \"2\\n4\"\nassert solution(55) == \"2\\n4\"\nassert solution(56) == \"2\\n4\"\nassert solution(57) == \"2\\n4\"\nassert solution(58) == \"2\\n4\"\nassert solution(59) == \"2\\n4\"\nassert solution(60) == \"2\\n4\"\nassert solution(61) == \"2\\n4\"\nassert solution(62) == \"2\\n4\"\nassert solution(63) == \"2\\n4\"\nassert solution(64) == \"2\\n4\"\nassert solution(65) == \"2\\n4\"\nassert solution(66) == \"2\\n4\"\nassert solution(67) == \"2\\n4\"\nassert solution(68) == \"2\\n4\"\nassert solution(69) == \"2\\n4\"\nassert solution(70) == \"2\\n4\"\nassert solution(71) == \"2\\n4\"\nassert solution(72) == \"2\\n4\"\nassert solution(73) == \"2\\n4\"\nassert solution(74) == \"2\\n"
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '2\\n3 4\\n2 4'\n"
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n4\n1 2\n2 3\n3 4\n\"\"\"\n) == \"2\\n3 4\\n2 4\"\n\nassert solution(\n    \"\"\"\n4\n1 2\n2 3\n3 1\n\"\"\"\n) == \"1\\n3 1\\n3 2\"\n\nassert solution(\n    \"\"\"\n4\n1 2\n2 3\n3 4\n5 6\n\"\"\"\n) == \"2\\n3 4\\n5 6\"\n\nassert solution(\n    \"\"\"\n4\n1 2\n2 3\n3 4\n5 6\n7 8\n\"\"\"\n) == \"3\\n3 4\\n5 6\"\n\nassert solution(\n    \"\"\"\n4\n1 2\n2 3\n3 4\n5 6\n7 8\n9 10\n\"\"\"\n) == \"3\\n3 4\\n5 6\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n2 4\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4\n1 2\n2 3\n3 4\n\"\"\") == \"\"\"\n2\n3 4\n2 4\n\"\"\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4') == '2\\n3 4\\n2 4'"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\\n\") == \"5\\n\""
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == 5"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2\\n1 3\\n2 1\\n3 5\\n7 2') == 5\nassert solution('2 2\\n1 3\\n2 1\\n3 5\\n') == 0\nassert solution('2 2\\n1 3\\n2 1\\n3 5\\n7 2\\n') == 0\nassert solution('2 2\\n1 3\\n2 1\\n3 5\\n7 2\\n3 1') == 0\nassert solution('2 2\\n1 3\\n2 1\\n3 5\\n7 2\\n3 1\\n') == 0\nassert solution('2 2\\n1 3\\n2 1\\n3 5\\n7 2\\n3 1\\n1 3') == 0\nassert solution('2 2\\n1 3\\n2 1\\n3 5\\n7 2\\n3 1\\n1 3\\n') == 0\n"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"5\""
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\") == 5\n"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 2\\n1 3\\n2 1\\n3 5\\n7 2') == '5'\nprint(\"All tests passed!\")"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 5, \"Please implement the solution\""
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 5, \"The expected output is 5, but got {}\".format(solution())"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\") == 5, \"Incorrect output\""
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\\n\") == \"5\\n\""
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\"\n) == \"2\\n\""
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0) == 2"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected_solution, f\"Solution {solution} is incorrect. Expected {expected_solution}.\""
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2\nassert solution(\"5 3 1\\n3 0\\n1 4\\n1 3\\n1 2\") == 3\nassert solution(\"10 5 2\\n2 1\\n3 1\\n4 2\\n5 3\\n6 4\") == 4\nassert solution(\"10 6 2\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\") == 5\nassert solution(\"5 10 1\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\") == 5\nassert solution(\"5 1 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\") == 10"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == '2'"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2, \"Test failed\""
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 3\") == 2\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 3\") == 2"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n\") == 2"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2, \"Expected output: 2, but got: \" + str(solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\"))"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\") == \"GHOST\"\nassert solution(\"4 3\\n3 C\\n2 W\\n1 W\") == \"SAFE\"\nassert solution(\"5 4\\n4 C\\n3 C\\n2 C\\n1 C\") == \"GHOST\"\nassert solution(\"5 4\\n4 C\\n3 W\\n2 W\\n1 W\") == \"SAFE\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"GHOST\"\n"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\") == \"GHOST\"\n\nimport math"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"GHOST\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\") == \"GHOST\"\nassert solution(\"5 4\\n1 C\\n2 C\\n3 C\") == \"SAFE\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 3\\n3 C\\n2 C\\n1 C') == 'GHOST'\nassert solution('4 3\\n3 W\\n2 W\\n1 W') == 'SAFE'"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\") == \"GHOST\"\nassert solution(\"4 3\\n3 C\\n2 C\\n1 W\") == \"SAFE\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"GHOST\"\n"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"GHOST\"\nassert solution == \"SAFE\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"GHOST\", \"Expected 'GHOST', got '{}'\".format(solution(stdin))\nassert solution(\"1 1 1\") == \"SAFE\", \"Expected 'SAFE', got '{}'\".format(solution(\"1 1 1\"))"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == \"2\\n\"\n"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 3\\n0.00 2.00') == '2'\nassert solution('3 4\\n1.00 2.00\\n0.50 3.00') == '2'\nassert solution('3 4\\n1.00 2.00\\n0.80 3.00\\n0.50 3.50') == '2'\nassert solution('3 4\\n1.00 2.00\\n0.70 3.00\\n0.40 3.50\\n0.70 3.50\\n0.20 3.00') == '2'\nassert solution('3 4\\n1.00 2.00\\n0.90 3.00\\n0.60 3.50\\n0.90 3.50\\n0.30 3.00\\n0.60 3.00\\n0.90 3.00') == '2'\nassert solution('3 4\\n1.00 2.00\\n0.80 3.00\\n0.70 3.50\\n0.80 3.50\\n0.40 3.00\\n0.70 3.00\\n0.80 3.00\\n0.70 3.00\\n0.70 3.00') == '2'\nassert solution('3 4\\n1.00 2.00\\n0.90 3.00\\n0.60 3.50\\n0.90 3.50\\n0.50 3.00\\n0.90 3.00\\n0.60 3.00\\n0.90 3.00\\n0.60 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n0.50 3.00\\n"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n0.00 2.00\") == \"2\"\nassert solution(\"3 4\\n0.10 2.00\") == \"2\"\nassert solution(\"3 4\\n0.20 2.00\") == \"no fika\"\nassert solution(\"4 4\\n0.30 2.00\") == \"2\"\nassert solution(\"4 4\\n0.40 2.00\") == \"2\"\nassert solution(\"4 4\\n0.50 2.00\") == \"2\"\nassert solution(\"5 4\\n0.60 2.00\") == \"2\"\nassert solution(\"5 4\\n0.70 2.00\") == \"2\"\nassert solution(\"5 4\\n0.80 2.00\") == \"2\"\nassert solution(\"5 4\\n0.90 2.00\") == \"2\"\nassert solution(\"5 4\\n1.00 2.00\") == \"no fika\""
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n0.00 2.00\") == \"2\""
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\", \"Output: {}\".format(solution(stdin))"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n0.00 2.00\") == \"2\\n\""
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n2 3\n0.00 2.00\n''') == '2'"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\", \"Incorrect Output\""
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n0.00 2.00\\n\") == \"2\\n\"\nassert solution(\"2 3\\n0.01 2.00\\n0.02 2.01\\n0.03 2.02\\n0.04 2.03\\n0.05 2.04\\n0.06 2.05\\n0.07 2.06\\n0.08 2.07\\n0.09 2.08\\n0.10 2.09\\n0.11 2.10\\n0.12 2.11\\n0.13 2.12\\n0.14 2.13\\n0.15 2.14\\n0.16 2.15\\n0.17 2.16\\n0.18 2.17\\n0.19 2.18\\n0.20 2.19\\n0.21 2.20\\n0.22 2.21\\n0.23 2.22\\n0.24 2.23\\n0.25 2.24\\n0.26 2.25\\n0.27 2.26\\n0.28 2.27\\n0.29 2.28\\n0.30 2.29\\n0.31 2.30\\n0.32 2.31\\n0.33 2.32\\n0.34 2.33\\n0.35 2.34\\n0.36 2.35\\n0.37 2.36\\n0.38 2.37\\n0.39 2.38\\n0.40 2.39\\n0.41 2.40\\n0.42 2.41\\n0.43 2.42\\n0.44 2.43\\n0.45 2.44\\n0.46 2.45\\n0.47 2.46\\n0.48 2.47\\n0.49 2.48\\n0.50 2.49\\n0.51 2.50\\n0.52 2.51\\n0.53 2.52\\n0.54 2.53\\n0.55 2.54\\n0.56 2.55\\n0.57 2.56\\n0.58 2.57\\n0.59 2.58\\n0.60 2.59\\n0.61 2.60\\n0.62 2.61\\n0.63 2.62\\n0.64 2.63\\n0.65 2.64\\n0.66 2.65\\n0.67 2.66\\n0.68 2.67\\n0.69 2.68\\n0.70 2.69\\n0.71 2.70\\n0.72 2.71\\n0.73 2.72\\n0.74 2.73\\n0.75 2.74\\n0.76 2.75\\n0.77 2.76\\n0.78 2.77\\n0.79 2.78\\n0.80 2.79\\n0.81 2.80\\n0.82 2.81\\n0.83 2.82\\n0.84 2.83\\n0.85 2.84\\n0.86 2.85\\n0.87 2.86\\n0.88 2.87\\n0.89 2.88\\n0.90 2.89\\n0"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 3\\n0.00 2.00') == '2\\n'\n\nfrom typing import List"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 1\") == \"15\"\nassert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"5\\n10 0\\n15 0\\n10 5\\n0 5\\n10 0\") == \"20\""
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == 10, \"Test 1 failed\"\nassert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == 10, \"Test 2 failed\"\nassert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == 10, \"Test 3 failed\"\nassert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == 10, \"Test 4 failed\"\nassert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == 10, \"Test 5 failed\"\n\nsolution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\")"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == \"10\", \"Test case 1 failed\""
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"10\", \"Your solution is incorrect.\""
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == '10'\nassert solution('2\\n0 0\\n10 0\\n2\\n30 0\\n15 1') == '15'\nassert solution('2\\n0 0\\n10 0\\n2\\n30 0\\n15 2') == '20'\nassert solution('2\\n0 0\\n10 0\\n2\\n30 0\\n15 3') == '25'"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == '10\\n'"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\\n') == '10'\nassert solution('2\\n0 0\\n10 0\\n2\\n30 0\\n15 -1\\n') == '10'\nassert solution('2\\n0 0\\n10 0\\n2\\n30 0\\n15 100\\n') == '10'\nassert solution('2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\\n') == '10'\nassert solution('2\\n0 0\\n10 0\\n2\\n30 0\\n15 -100\\n') == '10'"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\n"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == '10\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\n'"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\") == \"0\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\") == \"0\\n\"\nassert solution(\"8 5\\nW 10 0\\nW 10 3\\nE 17 4\") == \"3\\n\"\nassert solution(\"8 10\\nW 10 0\\nW 10 3\\nE 17 4\") == \"10\\n\"\nassert solution(\"8 15\\nW 10 0\\nW 10 3\\nE 17 4\") == \"15\\n\""
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\") == \"0\\n\"\n"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"W 10 0\\nW 10 3\\nE 17 4\") == \"0\"\nassert solution(\"W 10 0\\nW 10 3\\nE 17 4\\nW 21 5\") == \"3\""
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '0'"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0\\n\", \"Test case 1 failed\""
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"0\\n\"\nassert solution(input()) == \"0\\n\""
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0\\n\"\n"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\") == \"0\""
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\") == \"0\\n\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\\n\") == \"3\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test failed. Input: {input()}, Output: {output}, Diff: {output - input()}\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\") == \"3\\n\"\nassert solution(stdin=\"10\\n15\\n20\\n30\\n25\\n35\\n50\") == \"5\\n\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\") == \"3\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\") == \"3\\n3\\n\"\nprint(\"All test cases pass.\")"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '3'"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\\n\") == \"3\\n\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10') == '3\\n'\nassert solution('1\\n5') == '1\\n'\nassert solution('5\\n10') == '0\\n'"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case_number} failed.\\nExpected Output: {expected_output}\\nOutput: {solution(input())}\"\ntest_case_number += 1"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'impossible'"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    4 4\n    10 3 3\n    \"\"\"\n) == \"impossible\"\n\nassert solution(\n    \"\"\"\n    3 3\n    3 3 3\n    \"\"\"\n) == \"ababc\"\n\nassert solution(\n    \"\"\"\n    3 3\n    4 3\n    \"\"\"\n) == \"abcba\"\n\nassert solution(\n    \"\"\"\n    5 4\n    5 4 4\n    \"\"\"\n) == \"abcdefghij\"\n\nassert solution(\n    \"\"\"\n    3 3\n    3 3 3 3\n    \"\"\"\n) == \"abcde\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"impossible\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n10 3 3\") == \"impossible\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 4\\n10 3 3\\n') == 'impossible'\nassert solution('5 5\\n5 5 5 5\\n') == 'impossible'\nassert solution('4 4\\n5 5\\n') == '4\\nB\\nC\\n'\nassert solution('3 4\\n4 5\\n') == '3\\nB\\nC\\n'\nassert solution('4 3\\n4 4\\n') == 'impossible'\nassert solution('5 5\\n5 5 5 5 5\\n') == 'impossible'\nassert solution('5 5\\n5 5 5 5\\n') == '3\\nB\\nC\\n'\nassert solution('4 4\\n5 5 5\\n') == 'impossible'\nassert solution('4 4\\n4 4\\n4 4\\n') == 'impossible'\nassert solution('4 4\\n4 4 4\\n4 4\\n4 4\\n') == 'impossible'\nassert solution('4 4\\n4 4 4 4 4\\n4 4 4 4\\n4 4 4 4\\n') == 'impossible'\nassert solution('4 4\\n4 4 4 4 4 4\\n4 4 4 4 4 4 4\\n4 4 4 4 4 4 4\\n') == 'impossible'\nassert solution('4 4\\n4 4 4 4 4 4 4\\n4 4 4 4 4 4 4 4\\n4 4 4 4 4 4 4 4 4\\n4 4 4 4 4 4 4 4 4\\n4 4 4 4 4 4 4 4 4\\n') == 'impossible'\nassert solution('4 4\\n4 4 4 4 4 4 4 4 4\\n4 4 4 4 4 4 4 4 4 4\\n4 4 4 4 4 4 4 4 4 4 4\\n4 4 4 4 4 4 4 4 4 4 4 4\\n4 4 4 4 4 4 4 4 4 4 4 4\\n4 4 4 4 4 4 4 4 4 4 4 4\\n4 4 4 4 4 4 4 4 4 4 4 4\\n4 4 4 4 4 4 4 4 4 4 4 4\\n4 4 4 4 4 4 4 4 4 4 4 4\\n4 4 4 4 4 4 4 4 4 4 4 4\\n4 4 4 4 4 4 4 4 4 4 4 4\\n4 4 4 4 4 4 4 4 4 4 4 4\\n4 4 4 4 4 4 4 4 4 4 4 4\\n4 4 4 4 4 4 4 4 4 4 4 4\\n4 4 4 4 4 4 4 4 4 4 4 4\\n4 4 4 4 4 4 4 4 4 4 4 4\\n4 4 4 4 4 4 4 4 4 4 4 4\\n4 4 4 4 4 4 4 4 4 4 4 4\\n4 4 4 4 4 4 4 4 4 4 4 4\\n4 4 4 4 4 4 4 4 4 4 4 4\\n4 4 4 4 4 4 4 4 4 4 4 4\\n4 4 4 4 4 4 4 4 4 4 4 4\\n4 4 4 4 4 4 4 4 4 4 "
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 4\\n10 3 3') == 'impossible'"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n10 3 3\") == \"impossible\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n10 3 3\") == \"impossible\\n\"\nassert solution(\"5 5\\n10 3 3\") == \"impossible\\n\"\nassert solution(\"10 3 3\") == \"1\\n5 10 3\\n10 3 3\\n\"\nassert solution(\"2 2\\n10 3 3\") == \"impossible\\n\"\nassert solution(\"3 3\\n10 3 3\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 3 3\") == \"impossible\\n\"\nassert solution(\"5 5\\n10 3 3\") == \"impossible\\n\"\nassert solution(\"10 3 3\") == \"1\\n5 10 3\\n10 3 3\\n\"\nassert solution(\"2 2\\n10 3 3\") == \"impossible\\n\"\nassert solution(\"3 3\\n10 3 3\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 3 3\") == \"impossible\\n\"\nassert solution(\"5 5\\n10 3 3\") == \"impossible\\n\"\nassert solution(\"10 3 3\") == \"1\\n5 10 3\\n10 3 3\\n\"\nassert solution(\"2 2\\n10 3 3\") == \"impossible\\n\"\nassert solution(\"3 3\\n10 3 3\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 3 3\") == \"impossible\\n\"\nassert solution(\"5 5\\n10 3 3\") == \"impossible\\n\"\nassert solution(\"10 3 3\") == \"1\\n5 10 3\\n10 3 3\\n\"\nassert solution(\"2 2\\n10 3 3\") == \"impossible\\n\"\nassert solution(\"3 3\\n10 3 3\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 3 3\") == \"impossible\\n\"\nassert solution(\"5 5\\n10 3 3\") == \"impossible\\n\"\nassert solution(\"10 3 3\") == \"1\\n5 10 3\\n10 3 3\\n\"\nassert solution(\"2 2\\n10 3 3\") == \"impossible\\n\"\nassert solution(\"3 3\\n10 3 3\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 3 3\") == \"impossible\\n\"\nassert solution(\"5 5\\n10 3 3\") == \"impossible\\n\"\nassert solution(\"10 3 3\") == \"1\\n5 10 3\\n10 3 3\\n\"\nassert solution(\"2 2\\n10 3 3\") == \"impossible\\n\"\nassert solution(\"3 3\\n10 3 3\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 3 3\") == \"impossible\\n\"\nassert solution(\"5 5\\n10 3 3\") == \"impossible\\n\"\nassert solution(\"10 3 3\") == \"1\\n5 10 3\\n10 3 3\\n\"\nassert solution(\"2 2\\n10 3 3\") == \"impossible\\n\"\nassert solution(\"3 3\\n10 3 3\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 3 3\") == \"impossible\\n\"\nassert solution(\"5 5\\n10 3 3\") == \"impossible\\n\"\nassert solution(\"10 3 3\") == \"1\\n5 10 3\\n10 3 3\\n\"\nassert solution(\"2 2\\n10 3 3\") == \"impossible\\n\"\nassert solution(\"3 3\\n10 3 3\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 3 3\") == \"impossible\\n\"\nassert solution(\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n10 3 3\") == \"impossible\\n\"\nassert solution(\"4 4\\n3 1 3\\n2 1 3\") == \"123456\\n123456\\n\"\nassert solution(\"4 4\\n2 2 1\\n1 1 1\") == \"123456\\n123456\\n\"\nassert solution(\"4 4\\n3 3 1\\n2 2 1\\n1 1 1\") == \"123456\\n123456\\n\"\nassert solution(\"4 4\\n4 4 1\\n3 3 1\\n2 2 1\\n1 1 1\") == \"123456\\n123456\\n\"\nassert solution(\"4 4\\n4 4 1\\n3 3 1\\n2 2 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n10 3 3\") == \"impossible\"\nassert solution(\"4 4\\n10 3 5\") == \"impossible\"\nassert solution(\"4 4\\n10 4 3\") == \"impossible\"\nassert solution(\"4 4\\n10 2 3\") == \"impossible\"\nassert solution(\"4 4\\n10 4 5\") == \"impossible\"\nassert solution(\"4 4\\n10 5 3\") == \"impossible\"\nassert solution(\"4 4\\n10 3 2\") == \"impossible\"\nassert solution(\"4 4\\n10 3 1\") == \"impossible\"\nassert solution(\"4 4\\n10 5 5\") == \"impossible\"\nassert solution(\"4 4\\n10 3 4\") == \"impossible\"\nassert solution(\"4 4\\n10 5 4\") == \"impossible\"\nassert solution(\"4 4\\n10 1 3\") == \"impossible\"\nassert solution(\"4 4\\n10 1 5\") == \"impossible\"\nassert solution(\"4 4\\n10 2 4\") == \"impossible\"\nassert solution(\"4 4\\n10 2 5\") == \"impossible\"\nassert solution(\"4 4\\n10 4 1\") == \"impossible\"\nassert solution(\"4 4\\n10 4 2\") == \"impossible\"\nassert solution(\"4 4\\n10 5 2\") == \"impossible\"\nassert solution(\"4 4\\n10 5 1\") == \"impossible\"\nassert solution(\"4 4\\n10 1 4\") == \"impossible\"\nassert solution(\"4 4\\n10 1 2\") == \"impossible\"\nassert solution(\"4 4\\n10 1 1\") == \"impossible\"\nassert solution(\"4 4\\n10 3 10\") == \"impossible\"\nassert solution(\"4 4\\n10 4 20\") == \"impossible\"\nassert solution(\"4 4\\n10 5 30\") == \"impossible\"\nassert solution(\"4 4\\n10 1 30\") == \"impossible\"\nassert solution(\"4 4\\n10 2 30\") == \"impossible\"\nassert solution(\"4 4\\n10 4 30\") == \"impossible\"\nassert solution(\"4 4\\n10 5 30\") == \"impossible\"\nassert solution(\"4 4\\n10 1 20\") == \"impossible\"\nassert solution(\"4 4\\n10 2 20\") == \"impossible\"\nassert solution(\"4 4\\n10 4 20\") == \"impossible\"\nassert solution(\"4 4\\n10 5 20\") == \"impossible\"\nassert solution(\"4 4\\n10 1 10\") == \"impossible\"\nassert solution(\"4 4\\n10 2 10\") == \"impossible\"\nassert solution(\"4 4\\n10 4 10\") == \"impossible\"\nassert solution(\"4 4\\n10 5 10\") == \"impossible\"\nassert solution(\"4 4\\n10 1 50\") == \"impossible\"\nassert solution(\"4 4\\n10 2 50\") == \"impossible\"\nassert solution(\"4 4\\n10 4 50\") == \"impossible\"\nassert solution(\"4 4\\n10 5 50\") == \"impossible\"\nassert solution(\"4 4\\n10 1 40\") == \"impossible\"\nassert solution(\"4 4\\n10 2 40\") == \"impossible\"\nassert solution(\"4 4\\n10 4 40\") == \"impossible\"\nassert solution(\"4 4\\n10 5 40\") == \"impossible\"\nassert solution(\"4 4\\n10 1 30\") == \"impossible\"\nassert solution(\"4 4\\n10 2 30\") == \"impossible\"\nassert solution(\"4 4\\n10 4 3"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\""
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\n\nsolution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\")"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\n"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\n"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION \") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION    \") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION   A\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION  A \") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION   AB\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION  AB \") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION   ABC\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION  ABC \") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION   ABE\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION  ABE \") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION   ABCDE\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION  ABCDE \") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION   ABEF\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION  ABEF \") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION   ABCE\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION  ABCE \") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION   ABCED\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"BETWEEN SUBTLE SHADING AND THE A"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == output, f\"The output {solution(input)} is not correct.\" for input, output in zip(stdin.readlines(), output.split())"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"10\\nA\\nB\\nC\\nD\\nE\\nF\\nG\\nH\\nI\\nJ\\nK\\nL\\nM\\nN\\nO\\nP\\nQ\\nR\\nS\\nT\\nU\\nV\\nW\\nX\\nY\\nZ\") == \"AEIOU\"\nassert solution(\"1\\nA\\nA\\nAA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution() == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution() == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution() == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution() == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution() == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution() == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution() == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution() == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution() == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution() == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution() == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution() == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution() == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution() == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution() == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution() == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution() == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution() == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution() == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution() == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution() == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution() == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution() == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution() == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution() == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution() == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution() == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution() == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution() == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution() == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution() == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution() == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution() == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution() == \"B"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\n"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('abrahellehhelleh') == '12'\nprint(\"All tests passed!\")"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"The correct output should be 12.\"\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abrahellehhelleh\") == 12\n\nassert solution(\"rachelhellabracadabra\") == 0\n\nassert solution(\"example\") == 0\n\nassert solution(\"word\") == 0\n\nassert solution(\"aaaaa\") == 0"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abrahellehhelleh\") == 12\n"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"Incorrect result\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('abrahellehhelleh') == 12, \"The solution should be 12\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('abrahellehhelleh') == '12'"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"The output should be 12.\"\n"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"12\", \"The output is not correct. Please check the input.\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"Expected 12, got {}.\".format(solution(\"abrahellehhelleh\"))"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(65) == \"70\", \"Your code is missing the solution to the problem\""
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\\n\"\nassert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\\n\"\nassert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\\n\"\nassert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\\n\"\nassert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\\n\"\nassert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\\n\"\nassert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\\n\"\nassert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\\n\"\nassert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\\n\"\nassert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\\n\"\nassert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\\n\"\nassert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\\n\"\nassert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\\n\"\nassert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\\n\"\nassert solution(\"65\\n1 1 1 1 1 1"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([65, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]) == 70, \"Your implementation is incorrect.\"\n"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '70'"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"70\"\n"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\") == \"70\"\n"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\\n\", \"Test failed\"\nprint(\"Test passed\")"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"70\"\n"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''65\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == '70\\n'"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '70'"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"Solution\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '10\\n7\\n8\\n7'\n\nassert solution('''\n10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '10\\n7\\n8\\n7'\n\nassert solution('''\n10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '10\\n7\\n8\\n7'\n\nassert solution('''\n10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '10\\n7\\n8\\n7'"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\") == \"10\\n7\\n8\\n7\"\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\") == \"10\\n7\\n8\\n7\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4') == '10\\n7\\n8\\n7'"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4') == '10\\n7\\n8\\n7\\n'\n"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4') == '10\\n7\\n8\\n7\\n'\nassert solution('10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4') == '10\\n7\\n8\\n7\\n'"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    10 5\n    1 2 3 4 5 6 7 8 9 10\n    1 2 3 4 5 6 7 8 9\n    0 1\n    0 4\n    1 4\n    0 1\n    0 4\n    \n''') == '10\\n7\\n8\\n7\\n'\n"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n') == '10\\n7\\n8\\n7'"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\") == \"10\\n7\\n8\\n7\"\nprint(\"All tests pass\")"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '6'\n"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"6\"\n"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\n''') == '6\\n'"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\\n\"\nassert solution(\"1 1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n16 16\\n17 17\\n18 18\\n19 19\\n20 20\\n21 21\\n22 22\\n23 23\\n24 24\\n25 25\\n26 26\\n27 27\\n28 28\\n29 29\\n30 30\\n31 31\\n32 32\\n33 33\\n34 34\\n35 35\\n36 36\\n37 37\\n38 38\\n39 39\\n40 40\\n41 41\\n42 42\\n43 43\\n44 44\\n45 45\\n46 46\\n47 47\\n48 48\\n49 49\\n50 50\\n51 51\\n52 52\\n53 53\\n54 54\\n55 55\\n56 56\\n57 57\\n58 58\\n59 59\\n60 60\\n61 61\\n62 62\\n63 63\\n64 64\\n65 65\\n66 66\\n67 67\\n68 68\\n69 69\\n70 70\\n71 71\\n72 72\\n73 73\\n74 74\\n75 75\\n76 76\\n77 77\\n78 78\\n79 79\\n80 80\\n81 81\\n82 82\\n83 83\\n84 84\\n85 85\\n86 86\\n87 87\\n88 88\\n89 89\\n90 90\\n91 91\\n92 92\\n93 93\\n94 94\\n95 95\\n96 96\\n97 97\\n98 98\\n99 99\\n100 100\\n\""
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1') == '6'"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\\n\") == \"6\\n\"\nassert solution(stdin=\"2 1\\n-1 1\\n\") == \"2\\n\"\nassert solution(stdin=\"2 0\\n-1 1\\n\") == \"0\\n\"\nassert solution(stdin=\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\\n\") == \"6\\n\"\nassert solution(stdin=\"2 1\\n-1 1\\n\") == \"2\\n\"\nassert solution(stdin=\"2 0\\n-1 1\\n\") == \"0\\n\""
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1') == '6'"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\"\nassert solution(\"2 5 4\\n0 1\\n2 3\\n1 2\\n3 0\\n3 2\\n0 3\\n\") == \"2\"\nassert solution(\"5 7 6\\n0 0\\n1 1\\n1 2\\n0 1\\n2 1\\n2 2\\n\") == \"3\"\nassert solution(\"2 4 7\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\"\nassert solution(\"2 5 4\\n0 1\\n2 3\\n1 2\\n3 0\\n3 2\\n0 3\\n\") == \"2\"\nassert solution(\"5 7 6\\n0 0\\n1 1\\n1 2\\n0 1\\n2 1\\n2 2\\n\") == \"3\""
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 1\\n1 5\\n2 4\\n3 6\\n4 7\\n5 8\\n6 7\\n7 8\\n8 9\") == \"12\""
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1') == '6\\n'\n"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\"\n"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1 4 40\") == 3"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1 4 40\") == \"3\"\n"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin: str) == \"3\\n\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 4 40\") == 3, \"Incorrect output\"\n"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1 4 40\") == \"3\\n\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1 4 40\") == \"3\\n\"\nassert solution(\"3 2 4 40\") == \"6\\n\"\nassert solution(\"5 5 4 40\") == \"12\\n\"\nassert solution(\"3 1 4 50\") == \"10\\n\"\nassert solution(\"3 2 4 50\") == \"20\\n\"\nassert solution(\"5 5 4 50\") == \"100\\n\"\nassert solution(\"3 1 4 60\") == \"11\\n\"\nassert solution(\"3 2 4 60\") == \"22\\n\"\nassert solution(\"5 5 4 60\") == \"101\\n\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1 4 40\") == \"3\\n\"\nassert solution(\"5 5 1\") == \"20\\n\"\nassert solution(\"6.00000001 2.00000001 5.00000001 30.0\") == \"20\\n\"\nassert solution(\"2 10 0\") == \"20\\n\"\nassert solution(\"2 100 0\") == \"200\\n\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 4 40\") == \"3\\n\"\nassert solution(\"2 2 2 20\") == \"2\\n\"\nassert solution(\"3 3 3 30\") == \"3\\n\"\nassert solution(\"2 3 3 30\") == \"2\\n\"\nassert solution(\"4 4 4 40\") == \"4\\n\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == \"3\\n\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\") == \"99\\n3\\n0\\n\"\n\nassert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n\") == \"99\\n3\\n\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    3 352\n    93 82 444\n    92 76 436\n    99 62 -1\n    0 70 66 71 97\n    76 0 87 66 74\n    62 90 0 60 94\n    60 68 68 0 69\n    83 78 83 73 0\n''') == '99\\n3\\n'"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\") == \"99\\n3\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    3 352\n    93 82 444\n    92 76 436\n    99 62 -1\n    0 70 66 71 97\n    76 0 87 66 74\n    62 90 0 60 94\n    60 68 68 0 69\n    83 78 83 73 0\n    \"\"\"\n) == \"99\\n3\"\n\nassert solution(\n    \"\"\"\n    4 72\n    12 68 80 56\n    72 36 48 34\n    16 39 76 69\n    64 16 60 42\n    48 56 80 0 85\n    0 50 45 58 49\n    \"\"\"\n) == \"48\\n2 3 5\"\n\nassert solution(\n    \"\"\"\n    3 24\n    13 67 90 61\n    18 62 83 57\n    20 53 79 60\n    64 19 86 74\n    72 17 82 67\n    0 44 56 58 73\n    \"\"\"\n) == \"64\\n1\"\n\nassert solution(\n    \"\"\"\n    3 1440\n    93 82 444\n    92 76 436\n    99 62 -1\n    0 70 66 71 97\n    76 0 87 66 74\n    62 90 0 60 94\n    60 68 68 0 69\n    83 78 83 73 0\n    \"\"\"\n) == \"99\\n3\"\n\nassert solution(\n    \"\"\"\n    4 72\n    12 68 80 56\n    72 36 48 34\n    16 39 76 69\n    64 16 60 42\n    48 56 80 0 85\n    0 50 45 58 49\n    \"\"\"\n) == \"48\\n2 3 5\"\n\nassert solution(\n    \"\"\"\n    3 24\n    13 67 90 61\n    18 62 83 57\n    20 53 79 60\n    64 19 86 74\n    72 17 82 67\n    0 44 56 58 73\n    \"\"\"\n) == \"64\\n1\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\") == \"99\\n3\\n\"\nassert solution(\"0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 "
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\") == \"99\\n3\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == '99\\n3\\n'\nassert solution(open('input.txt', 'r')) == '0\\n'\nassert solution(open('input.txt', 'r')) == '3\\n'"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\") == \"99\\n3\"\nassert solution(\"1 1\\n2 2\") == \"1\\n1\"\nassert solution(\"1 1 2\") == \"1\\n1\\n2\"\nassert solution(\"1 1 1 1 1\") == \"1\\n1\\n1\\n1\\n1\"\nassert solution(\"0 1440\") == \"0\"\nassert solution(\"1 100 0 0 0\") == \"0\"\nassert solution(\"1 0 100 0 0\") == \"0\"\nassert solution(\"1 0 0 0 0 100\") == \"0\"\nassert solution(\"1 0 0 0 0 0 0 0 0 0\") == \"0\"\nassert solution(\"1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 "
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '99\\n3\\n'\nassert solution(stdin) == '0\\n'"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"99\\n3\\n\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Expected '{expected}', got '{solution(stdin)}'.\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\\n3 4\\n4 2\", \"The solution is incorrect.\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"print(2)\\nprint(3, 4)\\nprint(4, 2)\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n3 4\\n1 2\") == \"2\\n3 4\\n4 2\"\n"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == expected_output, \"Expected output: {}. Got: {}\".format(expected_output, solution())"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\\n3 4\\n4 2\"\n"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\\n3 4\\n4 2\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\\n3 4\\n4 2\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 9.0\nassert solution(4) == 12\nassert solution(5) == 12.0\nassert solution(6) == 9.0"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\") == \"9.0000\"\nassert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\") == \"12\"\nassert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\") == \"12.00000\"\nassert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\") == \"9.0\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == output, f\"Expected: {output}\\nGot: {solution(stdin)}\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '9.0000\\n12\\n12.00000\\n9.0\\n'\n"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\") == \"9.0000\\n12\\n12.00000\\n9.0\"\n"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed. Expected output: {output}, but got: {solution(input())}\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '9.0000'\nassert solution() == '12'\nassert solution() == '12.00000'\nassert solution() == '9.0'"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n1 1\\n2 2\\n3 2\\n4 1') == '9.0\\n12\\n12.00000\\n9.0'"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\") == \"9.0000\\n12\\n12.00000\\n9.0\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n2 2\\n3 2\\n4 1\\n\") == \"9.0000\\n12\\n12.00000\\n9.0\\n\"\nassert solution(\"1 1\\n\") == \"9.0000\\n12\\n12.00000\\n9.0\\n\"\nassert solution(\"4\\n2 2\\n3 2\\n1 1\\n\") == \"9.0000\\n12\\n12.00000\\n9.0\\n\"\nassert solution(\"4\\n2 2\\n3 2\\n4 1\\n\") == \"12\\n12.00000\\n9.0\\n\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(r\"2\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nprint(\"Test Passed\")\n"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(b'2') == b'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(3) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nassert solution(4) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nST A\\nST X\\nPH A\\nPH X\\nAD"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\"\nassert solution(\"4\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nAD\\nPL A\\nPL X\\nAD\\nPL Y\\nDI A\\nDI X\\nDI Y\\n\"\nassert solution(\"16\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nAD\\nPL A\\nPL X\\nAD\\nPL Y\\nDI A\\nDI X\\nDI Y\\nAD\\nPL A\\nPL X\\nAD\\nPL Y\\nDI A\\nDI X\\nDI Y\\nAD\\nPL A\\nPL X\\nAD\\nPL Y\\nDI A\\nDI X\\nDI Y\\nAD\\nPL A\\nPL X\\nAD\\nPL Y\\nDI A\\nDI X\\nDI Y\\nAD\\nPL A\\nPL X\\nAD\\nPL Y\\nDI A\\nDI X\\nDI Y\\nAD\\nPL A\\nPL X\\nAD\\nPL Y\\nDI A\\nDI X\\nDI Y\\nAD\\nPL A\\nPL X\\nAD\\nPL Y\\nDI A\\nDI X\\nDI Y\\nAD\\nPL A\\nPL X\\nAD\\nPL Y\\nDI A\\nDI X\\nDI Y\\nAD\\nPL A\\nPL X\\nAD\\nPL Y\\nDI A\\nDI X\\nDI Y\\nAD\\nPL A\\nPL X\\nAD\\nPL Y\\nDI A\\nDI X\\nDI Y\\nAD\\nPL A\\nPL X\\nAD\\nPL Y\\nDI A\\nDI X\\nDI Y\\nAD\\nPL A\\nPL X\\nAD\\nPL Y\\nDI A\\nDI X\\nDI Y\\nAD\\nPL A\\nPL X\\nAD\\nPL Y\\nDI A\\nDI X\\nDI Y\\nAD\\nPL A\\nPL X\\nAD\\nPL Y\\nDI A\\nDI X\\nDI Y\\nAD\\nPL A\\nPL X\\nAD\\nPL Y\\nDI A\\nDI X\\nDI Y\\nAD\\nPL A\\nPL X\\nAD\\nPL Y\\nDI A\\nDI X\\nDI Y\\nAD\\nPL A\\nPL X\\nAD\\nPL Y\\nDI A\\nDI X\\nDI Y\\nAD\\nPL A\\nPL X\\nAD\\nPL Y\\nDI A\\nDI X\\nDI Y\\nAD\\nPL A\\nPL X\\nAD\\nPL Y\\nDI A\\nDI X\\nDI Y\\nAD\\nPL A\\nPL X\\nAD\\nPL Y\\nDI A\\nDI X\\nDI Y\\nAD\\nPL A\\nPL X\\nAD\\nPL Y\\nDI A\\nDI X\\nDI Y\\nAD\\nPL A\\nPL X\\nAD\\nPL Y\\nDI A\\nDI X\\nDI Y\\nAD\\nPL A\\nPL X\\nAD\\nPL Y\\nDI A\\nDI X\\nDI Y\\nAD\\nPL A\\nPL X\\nAD\\nPL Y\\nDI A\\nDI X\\nDI Y\\nAD\\nPL A\\nPL X\\nAD\\nPL Y\\nDI A\\nDI X\\nDI Y\\nAD\\nPL A\\nPL X\\nAD\\nPL Y\\nDI A\\nDI X\\nDI Y\\nAD\\nPL A\\nPL X\\nAD\\nPL Y\\nDI A\\nDI X\\nDI Y\\nAD\\nPL A\\nPL X\\nAD\\nPL Y\\nDI A\\nDI X\\nDI Y\\nAD\\nPL A\\nPL X\\nAD\\nPL Y\\nDI A\\nDI X\\nDI Y\\nAD\\nPL A\\nPL X\\nAD\\nPL Y\\nDI A\\"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n', \"Test failed for sample input\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nassert solution(\"10\\n\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nassert solution(\"0\\n\") == \"\"\nassert solution(\"-1\\n\") == \"\"\nassert solution(\"100\\n\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == sample_output, f\"Solution for the given problem {sample_input} is incorrect.\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2) == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y'"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nprint(\"Success\")"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"2\""
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Test failed for input {input()}, expected output {output()}, got {solution(input())} instead.\""
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == 2\nassert solution(\"1 100 100\\n0000 0000 0000 0000 0000 0000\\n0000 0000 0000 0000 0000 0000\\n0000 0000 0000 0000 0000 0000\\n0000 0000 0000 0000 0000 0000\\n0000 0000 0000 0000 0000 0000\") == 1\nassert solution(\"1 100 100\\n0000 0000 0000 0000 0000 0000\\n0000 0000 0000 0000 0000 0000\\n0000 0000 0000 0000 0000 0000\\n0000 0000 0000 0000 0000 0000\\n0000 0000 0000 0000 0000 0000\") == 0\n"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 2, \"The output should be 2, but it is: {}\".format(solution())"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == \"2\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == 2\n"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000') == 2\n"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\\n\") == 2, \"Test failed!\"\nprint(\"Test passed!\")"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case_index + 1} failed: expected output {expected_output}, but got {solution(input())}.\""
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == 2\n"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\none on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\\nSample Output:\\nabaaaaaabbbbbbbbbbbbbbbbba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\ndef solution(stdin: str) -> str:\\n    pass\\n') == 'abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\n'"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\none on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\\nSample Output:abbaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\ndef solution(stdin: str) -> str:\\n    pass\\n\") == \"abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\n\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    5\n    S -> aSa\n    S -> bSb\n    S -> a\n    S -> b\n    S -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome\n\"\"\"\n) == \"abaaba\"\n\nassert solution(\n    \"\"\"\n    5\n    S -> aSa\n    S -> bSb\n    S -> a\n    S -> b\n    S -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome\n\"\"\"\n) == \"NONE\"\n\nassert solution(\n    \"\"\"\n    5\n    S -> aSa\n    S -> bSb\n    S -> a\n    S -> b\n    S -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome\n\"\"\"\n) == \"abbbbbbbbbbbbbbbbba\"\n\nassert solution(\n    \"\"\"\n    5\n    S -> aSa\n    S -> bSb\n    S -> a\n    S -> b\n    S -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome\n\"\"\"\n) == \"a\"\n\nassert solution(\n    \"\"\"\n    5\n    S -> aSa\n    S -> bSb\n    S -> a\n    S -> b\n    S -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome\n\"\"\"\n) == \"def solution(stdin: str) -> str:\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \n''') == 'abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\ndef solution(stdin: str) -> str:\\n    pass'\n\nassert solution('''\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \n''') == 'abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\ndef solution(stdin: str) -> str:\\n    pass'\n\nassert solution('''\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \n''') == 'abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\ndef solution(stdin: str) -> str:\\n    pass'\n\nassert solution('''\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \n''') == 'abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\ndef solution(stdin: str) -> str:\\n    pass'\n\nassert solution('''\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \n''') == 'abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\ndef solution(stdin: str) -> str:\\n    pass'\n\nassert solution('''\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \n''') == 'abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\ndef solution(stdin: str) -> str:\\n    pass'\n\nassert solution('''\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \n''') == 'abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\ndef solution(stdin: str) -> str:\\n    pass'\n\nassert solution('''\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \n''') == 'abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\ndef solution(stdin: str) -> str:\\n    pass'\n\nassert solution('''\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \n''') == 'abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\ndef solution(stdin: str) -> str:\\n    pass'\n\nassert solution('''\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \n''') == 'abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\ndef solution(stdin: str) -> str:\\n    pass'\n\nassert solution('''\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \n''') == 'abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\ndef solution(stdin: str) -> str:\\n    pass'\n\nassert solution('''\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \n''') == 'abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\ndef solution(stdin: str) -> str:\\n    pass'\n\nassert solution('''\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \n''') == 'abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\ndef solution(stdin: str) -> str:\\n    pass'\n\nassert solution('''\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \n''') == 'abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\ndef solution(stdin: str) -> str:\\n    pass'\n\nassert solution('''\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \n''') == 'abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\ndef solution(stdin: str) -> str:\\n    pass'\n\nassert solution('''\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \n''') == 'abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\ndef solution(stdin: str) -> str:\\n    pass'\n\nassert solution('''\n5\nS -> aSa\nS -> bSb\nS ->"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \") == \"abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"abaaba\\nNONE\"\nassert solution(input()) == \"abbbbbbbbbbbbbbbbba\\na\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\none on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\\n\") == \"abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\nA -> aSa\\nA -> bSb\\nA -> a\\nA -> b\\nA -> \\n\") == \"abaaba\"\nassert solution(\"1\\n\\n\") == \"NONE\"\nassert solution(\"3\\nA -> aSa\\nA -> bSb\\nA -> a\\nA -> b\\nC -> a\\nC -> b\\nC -> c\\n\") == \"abbbbbbbbbbbbbbbbba\"\nassert solution(\"1\\nS -> a\\nS -> b\\nS -> c\\nS -> d\\nS -> e\\nS -> f\\nS -> g\\nS -> h\\nS -> i\\nS -> j\\nS -> k\\nS -> l\\nS -> m\\nS -> n\\nS -> o\\nS -> p\\nS -> q\\nS -> r\\nS -> s\\nS -> t\\nS -> u\\nS -> v\\nS -> w\\nS -> x\\nS -> y\\nS -> z\\n\") == \"NONE\"\nassert solution(\"1\\nA -> a\\nA -> b\\nA -> c\\nA -> d\\nA -> e\\nA -> f\\nA -> g\\nA -> h\\nA -> i\\nA -> j\\nA -> k\\nA -> l\\nA -> m\\nA -> n\\nA -> o\\nA -> p\\nA -> q\\nA -> r\\nA -> s\\nA -> t\\nA -> u\\nA -> v\\nA -> w\\nA -> x\\nA -> y\\nA -> z\\n\") == \"ab\"\nassert solution(\"5\\nA -> aSa\\nA -> bSb\\nA -> a\\nA -> b\\nA -> c\\nC -> a\\nC -> b\\nC -> c\\nC -> d\\nC -> e\\nC -> f\\nC -> g\\nC -> h\\nC -> i\\nC -> j\\nC -> k\\nC -> l\\nC -> m\\nC -> n\\nC -> o\\nC -> p\\nC -> q\\nC -> r\\nC -> s\\nC -> t\\nC -> u\\nC -> v\\nC -> w\\nC -> x\\nC -> y\\nC -> z\\n\") == \"ab\"\nassert solution(\"1\\nA -> a\\nA -> b\\nA -> c\\nA -> d\\nA -> e\\nA -> f\\nA -> g\\nA -> h\\nA -> i\\nA -> j\\nA -> k\\nA -> l\\nA -> m\\nA -> n\\nA -> o\\nA -> p\\nA -> q\\nA -> r\\nA -> s\\nA -> t\\nA -> u\\nA -> v\\nA -> w\\nA -> x\\nA -> y\\nA -> z\\n\") == \"ab\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\none on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\\n\") == \"abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == output, f\"Test failed for input {stdin} and output {output}.\"\n"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\\n\"\n\nsolution = \"\"\"\nfrom typing import List"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n5\\n4 5 0 2\\n1 3 7\\n2 0\\n4\") == 4\n"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"4\\n\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"4\\n\" # the minimum possible sum of disparities for partitioning the shipments into two groups is 4\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '4', 'Solution should return 4.'"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n4 5 0 2\\n1 3 7\\n2 0\\n4\\n\") == \"4\"\nassert solution(\"5\\n4 5 0 2\\n1 3 7\\n2 0\\n4\\n\") == \"4\"\nassert solution(\"6\\n4 5 0 2\\n1 3 7\\n2 0\\n4\\n\") == \"12\"\nassert solution(\"7\\n4 5 0 2\\n1 3 7\\n2 0\\n4\\n\") == \"12\"\nassert solution(\"8\\n4 5 0 2\\n1 3 7\\n2 0\\n4\\n\") == \"18\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '4\\n'"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"4\\n\"\nassert solution(stdin) == \"4\\n\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output, f\"Expected '{output}', got '{solution(stdin)}'.\"\nfor _ in range(test_cases):\n    n = int(input())\n    d = list(map(int, input().split()))\n    dp = [0] * n\n    dp[0] = d[0]\n    for i in range(1, n):\n        dp[i] = max(d[i] + dp[i-1], dp[i-1])\n    print(dp[-1])\n"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 4\\n4 2\\nSSS\\nSBBB\\nGWG\\nGBGG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n3 3\") == \"SUCCESS\"\nassert solution(\"2 4\\n4 2\\nSSS\\nSBBB\\nGWG\\nGBGG\\nGGG\\nGGG\\nGGG\\nGGG\") == \"SUCCESS\"\nassert solution(\"2 5\\n4 3\\nSSS\\nSBBB\\nGWG\\nGBGG\\nGGG\\nGGG\\nGGG\\nGGG\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n2 2\") == \"NO WAY\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 5\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"NO WAY\"\nassert solution(\"1 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"NO WAY\"\nassert solution(\"3 4\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"NO WAY\"\nassert solution(\"2 3\\n2 3\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"SUCCESS\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG') == 'GO FOR IT'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBG') == 'NO WAY'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBBB') == 'NO WAY'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBBB') == 'NO WAY'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBBBBB') == 'NO WAY'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBBBB') == 'NO WAY'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBBBBB') == 'NO WAY'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBBBBBB') == 'NO WAY'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBBBBBBB') == 'NO WAY'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBBBBBBBWS') == 'NO WAY'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBBBBBBBWSWS') == 'GO FOR IT'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBBBBBBBWSWSWS') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBBBBBBBWSWSWSWSWS') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBBBBBBBWSWSWSWSWSWSWS') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBBBBBBBWSWSWSWSWSWSWSWSWSWS') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBBBBBBBWSWSWSWSWSWSWSWSWSWSWSWS') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBBBBBBBWSWSWSWSWSWSWSWSWSWSWSWSWSWS') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBBBBBBBWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWS') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBBBBBBBWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWS') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBBBBBBBWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWS') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBBBBBBBWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWS') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBBBBBBBWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWS') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBBBBBBBWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWSWS') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWW"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\") == \"NO CHANCE\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\nWW\\nWW\\n\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\nWW\\nWW\\n\\n\\n\\n\\n\\n\\n\") == \"GO FOR IT\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\n\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\") == \"NO WAY\"\n\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\nN\\n\") == \"NO WAY\"\n\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\nNG\\n\") == \"NO WAY\"\n\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\nN\\n\") == \"NO WAY\"\n\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\nN\\n\") == \"NO WAY\"\n\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\nN\\n\") == \"NO WAY\"\n\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\nN\\n\") == \"NO WAY\"\n\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\nN\\n\") == \"NO WAY\"\n\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\nN\\n\") == \"NO WAY\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\\n\"\nassert solution(\"1 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"SUCCESS\\n\"\nassert solution(\"1 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWW\") == \"NO WAY\\n\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWGWB\") == \"NO WAY\\n\"\nassert solution(\"1 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWGWW\") == \"NO WAY\\n\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"SUCCESS\\n\"\nassert solution(\"1 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWGWW\") == \"GO FOR IT\\n\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWSBB\\nWSBB\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\") == \"NO WAY\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\\n\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\\n\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\\n\") == \"GO FOR IT\\n\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\\n\\n\") == \"GO FOR IT\\n\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\\n\\n\\n\") == \"GO FOR IT\\n\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\\n\\n\\n\\n\") == \"GO FOR IT\\n\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\\n\\n\\n\\n\\n\\n\") == \"GO FOR IT\\n\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str='2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG') == 'GO FOR IT\\n'"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Test failed: solution({input()})!= expected, expected={expected}\"\n\nfrom typing import List"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"\"\"\n"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 900\\n800 700 400 300 200\") == \"2243\\n\"\nassert solution(\"5 500\\n100 200 300 400 500\") == \"1500\\n\"\nassert solution(\"5 200\\n500 200 1000 100 200\") == \"2000\\n\"\nassert solution(\"5 100\\n100 100 500 500 500\") == \"1500\\n\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 900\\n800 700 400 300 200\") == \"2243\\n\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Solution is incorrect. Expected: {expected_output}, Received: {solution(stdin)}\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 900\\n800 700 400 300 200\") == \"2243\\n\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 900\\n800 700 400 300 200\") == \"2243\"\nassert solution(\"10 1000\\n500 600 700 800\") == \"2500\"\nassert solution(\"2 1000\\n500 600 700 800\") == \"3000\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2243, \"The solution is incorrect. Please check the problem statement and the provided test case.\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '2243', \"Please implement the function `solution` to solve the problem.\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2243\"\n"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\") == \"no\\nno\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: '{expected_output}', got: '{solution(input())}'\"\n"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\") == \"no\\nyes\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n\") == \"no\\nyes\\n\"\n"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n') == 'no\\nyes\\n'\nassert solution('5 2\\n= 0 0\\n= 1 1\\n= 2 2\\n? 0 2\\n') == 'no\\n'\nassert solution('10 5\\n= 1 1\\n= 2 1\\n= 3 1\\n= 4 1\\n= 5 1\\n') == 'no\\n'"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n\") == \"no\\nyes\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\") == \"no\\nyes\\n\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3') == 'no\\nyes\\n'\nassert solution('5 3\\n? 1 2\\n= 1 4\\n= 2 4\\n= 3 5') == 'no\\nno\\n'"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3') == 'no\\nno\\ndef solution(stdin: str) -> str:\\npass\\n'\nassert solution('10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 2 3') == 'no\\nno\\ndef solution(stdin: str) -> str:\\npass\\n'"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"no\", \"Test failed: expected no but got: \" + solution()"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Test failed for input '{input()}', expected output '{expected}'.\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 3\\n10 5 4 8 3') == '2'\n"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(10) +'' + str(5) +'' + str(4) +'' + str(8) +'' + str(3)) == \"2\\n\"\nassert solution(str(11) +'' + str(5) +'' + str(4) +'' + str(8) +'' + str(3)) == \"0\\n\"\nassert solution(str(1000) +'' + str(5) +'' + str(4) +'' + str(8) +'' + str(3)) == \"0\\n\""
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\", \"Test failed\""
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 2, \"Expected 2, got {}\".format(solution())"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, Got: {solution(stdin)}\""
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\") == \"2\"\nassert solution(\"10 5 4 8 3\\n5 3\") == \"2\"\nassert solution(\"10 5 4 8 3\\n5 6\") == \"0\"\nassert solution(\"10 5 4 8 3\\n5 4 3\") == \"1\"\nassert solution(\"10 5 4 8 3\\n5 4 6\") == \"1\"\nassert solution(\"10 5 4 8 3\\n5 4 1\") == \"1\"\nassert solution(\"10 5 4 8 3\\n5 4 7\") == \"1\"\nassert solution(\"10 5 4 8 3\\n5 4 2\") == \"0\"\nassert solution(\"10 5 4 8 3\\n5 4 10\") == \"0\"\nassert solution(\"10 5 4 8 3\\n5 4 11\") == \"0\"\nassert solution(\"10 5 4 8 3\\n5 4 12\") == \"1\"\nassert solution(\"10 5 4 8 3\\n5 4 13\") == \"2\"\nassert solution(\"10 5 4 8 3\\n5 4 14\") == \"3\"\nassert solution(\"10 5 4 8 3\\n5 4 15\") == \"4\"\nassert solution(\"10 5 4 8 3\\n5 4 16\") == \"5\"\nassert solution(\"10 5 4 8 3\\n5 4 17\") == \"6\"\nassert solution(\"10 5 4 8 3\\n5 4 18\") == \"7\"\nassert solution(\"10 5 4 8 3\\n5 4 19\") == \"8\"\nassert solution(\"10 5 4 8 3\\n5 4 20\") == \"9\"\nassert solution(\"10 5 4 8 3\\n5 4 21\") == \"10\"\nassert solution(\"10 5 4 8 3\\n5 4 22\") == \"11\"\nassert solution(\"10 5 4 8 3\\n5 4 23\") == \"12\"\nassert solution(\"10 5 4 8 3\\n5 4 24\") == \"13\"\nassert solution(\"10 5 4 8 3\\n5 4 25\") == \"14\"\nassert solution(\"10 5 4 8 3\\n5 4 26\") == \"15\"\nassert solution(\"10 5 4 8 3\\n5 4 27\") == \"16\"\nassert solution(\"10 5 4 8 3\\n5 4 28\") == \"17\"\nassert solution(\"10 5 4 8 3\\n5 4 29\") == \"18\"\nassert solution(\"10 5 4 8 3\\n5 4 30\") == \"19\"\nassert solution(\"10 5 4 8 3\\n5 4 31\") == \"20\"\nassert solution(\"10 5 4 8 3\\n5 4 32\") == \"21\"\nassert solution(\"10 5 4 8 3\\n5 4 33\") == \"22\"\nassert solution(\"10 5 4 8 3\\n5 4 34\") == \"23\"\nassert solution(\"10 5 4 8 3\\n5 4 35\") == \"24\"\nassert solution(\"10 5 4 8 3\\n5 4 36\") == \"25\"\nassert solution(\"10 5 4 8 3\\n5 4 37\") == \"26\"\nassert solution(\"10 5 4 8 3\\n5 4 38\") == \"27\"\nassert solution(\"10 5 4 8 3\\n5 4 39\") =="
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\") == \"2\\n\"\nassert solution(\"5 3\\n10 5 4 8 4\") == \"0\\n\"\nassert solution(\"5 3\\n10 5 4 8 3\\n\") == \"2\\n\""
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\") == \"2\\n\"\nassert solution(\"10 3\\n2 12 8 4 6 2 10\") == \"1\\n\"\nassert solution(\"100 3\\n1 2 3 4 5 6 7 8 9\") == \"0\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\") == \"0\\n\"\nassert solution(\"5 5\\n1 2 3 4 6\") == \"1\\n\"\nassert solution(\"1 2\\n3 4 5\") == \"2\\n\"\nassert solution(\"1 2\\n3 4 6\") == \"1\\n\"\nassert solution(\"1 2\\n3 5 6\") == \"1\\n\"\nassert solution(\"1 2\\n3 6 7\") == \"1\\n\"\nassert solution(\"1 2\\n3 7 8\") == \"1\\n\"\nassert solution(\"1 2\\n3 8 9\") == \"1\\n\"\nassert solution(\"1 2\\n4 5 6\") == \"1\\n\"\nassert solution(\"1 2\\n4 6 7\") == \"1\\n\"\nassert solution(\"1 2\\n4 7 8\") == \"1\\n\"\nassert solution(\"1 2\\n4 8 9\") == \"1\\n\"\nassert solution(\"1 2\\n5 6 7\") == \"1\\n\"\nassert solution(\"1 2\\n5 7 8\") == \"1\\n\"\nassert solution(\"1 2\\n5 8 9\") == \"1\\n\"\nassert solution(\"1 2\\n6 7 8\") == \"1\\n\"\nassert solution(\"1 2\\n6 8 9\") == \"1\\n\"\nassert solution(\"1 2\\n7 8 9\") == \"1\\n\"\nassert solution(\"1 2\\n8 9 10\") == \"1\\n\"\nassert solution(\"1 2\\n9 10 11\") == \"1\\n\"\nassert solution(\"1 2\\n10 11 12\") == \"1\\n\"\nassert solution(\"1 2\\n11 12 13\") == \"1\\n\"\nassert solution(\"1 2\\n12 13 14\") == \"1\\n\"\nassert solution(\"1 2\\n13 14 15\") == \"1\\n\"\nassert solution(\"1 2\\n14 15 16\") == \"1\\n\"\nassert solution(\"1 2\\n15 16 17\") == \"1\\n\"\nassert solution(\"1 2\\n16 17 18\") == \"1\\n\"\nassert solution(\"1 2\\n17 18 19\") == \"1\\n\"\nassert solution(\"1 2\\n18 19 20\") == \"1\\n\"\nassert solution(\"1 2\\n19 20 21\") == \"1\\n\"\nassert solution(\"1 2\\n20 21 22\") == \"1\\n\"\nassert solution(\"1 2\\n21 22 23\") == \"1\\n\"\nassert solution(\"1 2\\n22 23 24\") == \"1\\n\"\nassert solution(\"1 2\\n23 24 25\") == \"1\\n\"\nassert solution(\"1 2\\n24 25 26\") == \"1\\n\"\nassert solution(\"1 2\\n25 26 27\") == \"1\\n\"\nassert solution(\"1 2\\n26 27 28\") == \"1\\n\"\nassert solution(\"1 2\\n27 28 29\") == \"1\\n\"\nassert solution(\"1 2\\n28 29 30\") == \"1\\n\"\nassert solution(\"1 2\\n29 30 31\") == \"1\\n\"\nassert solution(\"1 2\\n30 31 32\") == \"1\\n"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\") == \"2\\n\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1083\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1083\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 127\") == \"1083\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1, 127) == 1083, \"The expected output is not correct.\"\n\nHere's the code:\n\n```python\nfrom sympy import isprime"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 127\") == \"1083\"\nassert solution(\"2 255\") == \"256\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"0 0\") == \"0\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 127\") == \"1083\", \"Output: 1083\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 127\") == \"1083\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 127\") == \"1083\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == \"1083\"\nassert solution(stdin=\"1 127\") == \"1083\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 127\") == \"1083\", \"Testcase 1 failed\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"How much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\") == 2.0\n\nfrom typing import List\nimport random"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\\n') == '2.0000000000'"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    4 4\n    7 8\n    42\n    Is there intelligent life on Earth? Probably\n    What is the air speed velocity of an unladen swallow? African?\n    \"\"\"\n) == 2.0\n\nassert solution(\n    \"\"\"\n    4 4\n    9 6\n    42\n    Is there intelligent life on Earth? Probably\n    What is the air speed velocity of an unladen swallow? African?\n    \"\"\"\n) == 3.3333333333"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?') == 2.0000000000\nassert solution('4 4\\nHello\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?') == 1.0000000000\nassert solution('4 4\\nHow much is 6 times 9? 42\\nWhat is the air speed velocity of an unladen swallow? African?') == 2.0000000000\nassert solution('4 4\\nHow much is 6 times 9? 42\\nWhat is the air speed velocity of an unladen swallow? African?\\nAnother question\\nWhat is the air speed velocity of an unladen swallow? African?') == 4.0000000000\nassert solution('4 4\\nHow much is 6 times 9? 42\\nWhat is the air speed velocity of an unladen swallow? African?\\nAnother question\\nWhat is the air speed velocity of an unladen swallow? African?\\nAnother question') == 8.0000000000"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Solution is {solution(input())}, expected {expected_output}\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?') == '2.0000000000\\ndef solution(stdin: str) -> str:\\npass\\n'"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\\n\") == \"2.0000000000\\n\"\nassert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\\n5 5\\nHow fast is the wind at 30 degrees Celsius? 8.6\\nWhat is the age of an Egyptian goddess? 50\\nWhat is the age of a Palestinian pianist? 57\\n\") == \"2.0000000000\\n\"\nassert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\\n1 2\\nWhat is the name of the famous actor? Richard McClintock\\n\") == \"1.5000000000\\n\"\nassert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\\n5 5\\nHow fast is the wind at 30 degrees Celsius? 8.6\\nWhat is the age of an Egyptian goddess? 50\\nWhat is the age of a Palestinian pianist? 57\\n3 1\\nWhat is the name of the famous actor? Natalie Walter\\n\") == \"3.0000000000\\n\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin: str) == \"2.0000000000\\n\", \"The expected output is not as expected.\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Solution failed: Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2.0000000000\", \"The solution should be 2.0000000000.\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"2 5\\ncat dog elephant\") == \"IMPOSSIBLE\"\nassert solution(\"1 2\\n\") == \"FALSE ALARM\"\n"
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\npenguin 1 monkey''') == 'POSSIBLE'\nassert solution('''3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\npenguin 0 monkey''') == 'IMPOSSIBLE'\nassert solution('''3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\npenguin 1 monkey''') == 'FALSE ALARM'"
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\nprint(\"All animals are in their proper enclosures.\")\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nmonkey 3 bear bear\\nmonkey 4 cat cat\") == \"IMPOSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nmonkey 3 bear bear\\nmonkey 4 cat cat\\nmonkey 5 dog dog\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nmonkey 3 bear bear\\nmonkey 4 cat cat\\nmonkey 5 dog dog\\nmonkey 6 fish fish\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nmonkey 3 bear bear\\nmonkey 4 cat cat\\nmonkey 5 dog dog\\nmonkey 6 fish fish\\nmonkey 7 bird bird\") == \"FALSE ALARM\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"4 8\\nmonkey 2 lion penguin\\nlizard 3 monkey penguin lion\\nlion 1 monkey\") == \"POSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"5 10\\nmonkey 2 lion penguin\\nlizard 3 monkey penguin lion\\nlion 1 monkey\\nzebra 4 lion rodent\") == \"POSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"6 12\\nmonkey 2 lion penguin\\nlizard 3 monkey penguin lion\\nzebra 4 lion rodent\\nmonkey 1 frog\") == \"FALSE ALARM\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\n\") == \"FALSE ALARM\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"4 10\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\nmonkey 1 fox\\nfrog 4 lion\\ncat 1 lion\\nlion 1 cat\\nfrog 1 frog\") == \"FALSE ALARM\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 6\\nmonkey 2 lion penguin\\n') == 'POSSIBLE'\nassert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\n') == 'POSSIBLE'\nassert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n') == 'POSSIBLE'\nassert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\npig 1 dog\\n') == 'POSSIBLE'\nassert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\npig 1 dog\\nhorse 1 cat\\n') == 'POSSIBLE'\nassert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\npig 1 dog\\nhorse 1 cat\\n') == 'FALSE ALARM'"
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\n\nassert solution(\"5 3\\nmonkey 1 lion king penguin\\nlion 2 monkey penguin lion\\npenguin 1 king\") == \"FALSE ALARM\"\n\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 king\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\nmonkey 2 lion penguin\") == \"IMPOSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"FALSE ALARM\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'POSSIBLE', 'Expected \"POSSIBLE\", got {}'.format(solution(input()))"
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution"
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"triple correlation 4(1)4(3)3 found\", \"The given code is incorrect.\"\nassert solution(input()) == \"def solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == '__main__':\\n    print(solution(input()))\", \"The given code is incorrect.\"\nassert solution(input()) == \"triple correlation 4(1)4(3)3 found\", \"The given code is incorrect.\"\nassert solution(input()) == \"def solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == '__main__':\\n    print(solution(input()))\", \"The given code is incorrect.\"\nassert solution(input()) == \"triple correlation 4(1)4(3)3 found\", \"The given code is incorrect.\"\nassert solution(input()) == \"def solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == '__main__':\\n    print(solution(input()))\", \"The given code is incorrect.\"\nassert solution(input()) == \"triple correlation 4(1)4(3)3 found\", \"The given code is incorrect.\"\nassert solution(input()) == \"def solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == '__main__':\\n    print(solution(input()))\", \"The given code is incorrect.\"\nassert solution(input()) == \"triple correlation 4(1)4(3)3 found\", \"The given code is incorrect.\"\nassert solution(input()) == \"def solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == '__main__':\\n    print(solution(input()))\", \"The given code is incorrect.\"\nassert solution(input()) == \"triple correlation 4(1)4(3)3 found\", \"The given code is incorrect.\"\nassert solution(input()) == \"def solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == '__main__':\\n    print(solution(input()))\", \"The given code is incorrect.\"\nassert solution(input()) == \"triple correlation 4(1)4(3)3 found\", \"The given code is incorrect.\"\nassert solution(input()) == \"def solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == '__main__':\\n    print(solution(input()))\", \"The given code is incorrect.\"\nassert solution(input()) == \"triple correlation 4(1)4(3)3 found\", \"The given code is incorrect.\"\nassert solution(input()) == \"def solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == '__main__':\\n    print(solution(input()))\", \"The given code is incorrect.\"\nassert solution(input()) == \"triple correlation 4(1)4(3)3 found\", \"The given code is incorrect.\"\nassert solution(input()) == \"def solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == '__main__':\\n    print(solution(input()))\", \"The given code is incorrect.\"\nassert solution(input()) == \"triple correlation 4(1)4(3)3 found\", \"The given code is incorrect.\"\nassert solution(input()) == \"def solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == '__main__':\\n    print(solution(input()))\", \"The given code is incorrect.\"\nassert solution(input()) == \"triple correlation 4(1)4(3)3 found\", \"The given code is incorrect.\"\nassert solution(input()) == \"def solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == '__main__':\\n    print(solution(input()))\", \"The given code is incorrect.\"\nassert solution(input()) == \"triple correlation 4(1)4(3)3 found\", \"The given code is incorrect.\"\nassert solution(input()) == \"def solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == '__main__':\\n    print(solution(input()))\", \"The given code is incorrect.\"\nassert solution(input()) == \"triple correlation 4(1)4(3)3 found\", \"The given code is incorrect.\"\nassert solution(input()) == \"def solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == '__main__':\\n    print(solution(input()))\", \"The given code is incorrect.\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output\nprint(f\"Solution: {solution(input())}\")"
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4) == \"triple correlation 4(1)4(3)3 found\\n\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4 4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2 0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\"\nassert solution(\"100\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2 0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 2(4)2(2)2 found\"\nassert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4 4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2 0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\"\nassert solution(\"100\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2 0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 2(4)2(2)2 found\"\nassert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4 4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2 0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 "
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=f\"\"\"100\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\"\"\") == \"triple correlation 4(1)4(3)3 found\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4 4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2 0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\\n\"\n\nassert solution(\"100\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"random sequence found\\n\"\n\nassert solution(\"100\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\\n\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(7) == \"triple correlation 2(1)2(2)2 found\"\nassert solution(25) == \"random sequence\"\n"
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"triple correlation 4(1)4(3)3 found\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"triple correlation 4(1)4(3)3 found\\n\", \"Test case failed.\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Test failed: {solution(input())}!= {output}\"\nfor _ in range(5):\n    assert solution(input()) == output, f\"Test failed: {solution(input())}!= {output}\"\nprint(output)"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"40.5\", \"The solution is incorrect.\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n39\\n10\\n40\") == \"40.5\"\n"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 1\\n39\\n10\\n40\\n') == '40.5\\n'\nassert solution('2 2\\n10\\n10\\n10\\n') == '10.0\\n'\nassert solution('5 3\\n10\\n20\\n30\\n') == '15.0\\n'\n"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\"\n"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\\n\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\\n\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\"\nassert solution(\"5 1\\n40\\n100\\n50\\n\") == \"40.0\"\nassert solution(\"5 1\\n40\\n100\\n50\\n\") == \"40.0\"\nassert solution(\"5 1\\n40\\n100\\n50\\n\") == \"40.0\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n39\\n10\\n40\") == \"40.5\"\nprint(\"All test cases pass!\")"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"40.5\"\n"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4 6\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987\n\"\"\") == \"Impossible\""
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Impossible\"\n"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Impossible\""
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n\") == \"Impossible\"\n"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987') == 'Impossible'\nprint('All tests passed')"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"Impossible\""
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\\n\"\n"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Impossible\"\nassert solution(stdin) == \"Impossible\"\nassert solution(stdin) == \"Impossible\"\nassert solution(stdin) == \"Impossible\"\nassert solution(stdin) == \"Impossible\"\n"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    4 0 1\n    1 2\n    1 2\n    N 1 3\n    C 1 1''') == 'impossible'\nassert solution('''\n    4 0 1\n    1 2\n    1 2\n    N 1 3\n    C 1 1''') == '3'"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == 'impossible'"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1\n''') == 'impossible'\n\nassert solution('''\n4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 3\n''') == '3'"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"impossible\", \"Test failed\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\") == \"impossible\"\nassert solution(\"5 0 1\\nN 1 2\\nN 3 4\\nN 5 6\") == \"impossible\"\nassert solution(\"6 0 1\\nN 1 2\\nN 3 4\\nN 5 6\\nN 7 8\\nN 9 10\") == \"impossible\"\nassert solution(\"7 0 1\\nN 1 2\\nN 3 4\\nN 5 6\\nN 7 8\\nN 9 10\\nN 11 12\\nN 13 14\") == \"impossible\"\nassert solution(\"8 0 1\\nN 1 2\\nN 3 4\\nN 5 6\\nN 7 8\\nN 9 10\\nN 11 12\\nN 13 14\\nN 15 16\\nN 17 18\") == \"impossible\"\nassert solution(\"9 0 1\\nN 1 2\\nN 3 4\\nN 5 6\\nN 7 8\\nN 9 10\\nN 11 12\\nN 13 14\\nN 15 16\\nN 17 18\\nN 19 20\\nN 21 22\\nN 23 24\") == \"impossible\"\nassert solution(\"10 0 1\\nN 1 2\\nN 3 4\\nN 5 6\\nN 7 8\\nN 9 10\\nN 11 12\\nN 13 14\\nN 15 16\\nN 17 18\\nN 19 20\\nN 21 22\\nN 23 24\\nN 25 26\\nN 27 28\\nN 29 30\") == \"impossible\"\nassert solution(\"11 0 1\\nN 1 2\\nN 3 4\\nN 5 6\\nN 7 8\\nN 9 10\\nN 11 12\\nN 13 14\\nN 15 16\\nN 17 18\\nN 19 20\\nN 21 22\\nN 23 24\\nN 25 26\\nN 27 28\\nN 29 30\\nN 31 32\\nN 33 34\") == \"impossible\"\nassert solution(\"12 0 1\\nN 1 2\\nN 3 4\\nN 5 6\\nN 7 8\\nN 9 10\\nN 11 12\\nN 13 14\\nN 15 16\\nN 17 18\\nN 19 20\\nN 21 22\\nN 23 24\\nN 25 26\\nN 27 28\\nN 29 30\\nN 31 32\\nN 33 34\\nN 35 36\\nN 37 38\") == \"impossible\"\nassert solution(\"13 0 1\\nN 1 2\\nN 3 4\\nN 5 6\\nN 7 8\\nN 9 10\\nN 11 12\\nN 13 14\\nN 15 16\\nN 17 18\\nN 19 20\\nN 21 22\\nN 23 24\\nN 25 26\\nN 27 28\\nN 29 30\\nN 31 32\\n"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\") == \"impossible\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\") == \"impossible\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"impossible\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1') == 'impossible'"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1\n''') == 'impossible'"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n())\\n((()\\n)()\") == 10, \"Invalid Output\""
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n())\\n((()\\n)()') == 10\nassert solution('2\\n))\\n((()))') == 10\nassert solution('1\\n()))\\n(())') == 0"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3)() == 10, \"Expected output 10, but got {}\".format(solution(3)())\nassert solution(3)() == 0, \"Expected output 0, but got {}\".format(solution(3)())"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"()\") == 10, \"Test Case 1\"\nassert solution(\"((()\") == 10, \"Test Case 2\"\nassert solution(\"()())()\") == 10, \"Test Case 3\"\nassert solution(\"()(()\")) == 10, \"Test Case 4\"\nassert solution(\"()())())\") == 10, \"Test Case 5\""
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 10, \"The answer should be 10.\""
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"(())\") == \"(()\", \"((())\", \"((())(())\", \"((())(())(()\", \"((())(())(())\"\nassert solution(\"(())()\") == \"(()\", \"((())\", \"((())(()\", \"((())(())(()\", \"((())(())(())\"\nassert solution(\"(()\")) == \"(()\", \"((()))\", \"(()(()\", \"(()())\", \"(()())(()\", \"(()())(())\"\nassert solution(\"()())\") == \"(()\", \"((()))\", \"(()(()\", \"(()())\", \"(()())(()\", \"(()())(())\"\nassert solution(\"(())\") == \"(()\", \"((()))\", \"(()(()\", \"(()())\", \"(()())(()\", \"(()())(())\"\nassert solution(\"())(())\") == \"(()\", \"((()))\", \"(()(()\", \"(()())\", \"(()())(()\", \"(()())(())\""
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n(())\\n((()\\n)(())\\n') == 10"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 10, \"Test failed.\""
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('(())') == 10\nassert solution('((()')) == 14\nassert solution(')()') == 10"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 10, \"Test failed\""
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == \"85293\""
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n') == '85293\\n'\nprint('All tests passed')\n"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\") == \"85293\"\n"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == '85293\\n'"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    9\n    377 a\n    455 h\n    180 a\n    211 a\n    134 a\n    46 h\n    111 h\n    213 h\n    17 a\n    15\n    1 2\n    1 4\n    1 6\n    2 3\n    2 4\n    2 5\n    3 5\n    4 6\n    4 7\n    4 9\n    5 7\n    5 8\n    6 9\n    7 9\n    7 8\n    ''') == '85293'"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n\") == \"85293\\n\"\n"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"85293\""
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r').read()) == '85293'"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n') == 85293"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    9\n    377 a\n    455 h\n    180 a\n    211 a\n    134 a\n    46 h\n    111 h\n    213 h\n    17 a\n    15\n    1 2\n    1 4\n    1 6\n    2 3\n    2 4\n    2 5\n    3 5\n    4 6\n    4 7\n    4 9\n    5 7\n    5 8\n    6 9\n    7 9\n    7 8\n    \"\"\"\n) == \"85293\""
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == \"5\\n\"\n\nSolution:\nWe can use a depth-first search to generate all possible spanning unicyclic subgraphs of the given graph. We will start with a single vertex, and mark it as visited and add it to the list of visited vertices. We will then visit all the adjacent vertices of the current vertex and mark them as visited. We will continue this process until we reach the end of the graph.\n\nTo generate all possible spanning unicyclic subgraphs, we will generate all possible subgraphs of the given graph with exactly one cycle. We will then count the number of subgraphs that have exactly one cycle.\n\nLet's write the code to implement this approach."
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution) == \"5\", \"The function should return the correct output.\""
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == 5, \"Incorrect output. Expected 5, got {solution(stdin)}.\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4') == '5\\n'"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == \"5\""
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == 5"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == \"5\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == '5\\n'\nassert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == '5\\n'\nassert solution(\"3 3\\n1 2\\n2 3\\n1 3\\n\") == '2\\n'\nassert solution(\"1 1\\n2 3\\n4 5\\n\") == '1\\n'"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(r\"\"\"\n4 5\n1 2\n1 3\n2 3\n1 4\n2 4\n\"\"\") == \"5\\n\"\n"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n\"\"\") == \"5100\"\n\nassert solution(\"\"\"\n3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n4\n7 ninja 3 rose 7 panda\n7 caterpillar 2 pupa 1 butterfly\n7 butterfly\n\"\"\") == \"2000\"\n\nassert solution(\"\"\"\n3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n4\n7 ninja 3 rose 7 panda\n7 caterpillar 2 pupa 1 butterfly\n7 butterfly\n\"\"\") == \"2000\"\n\nassert solution(\"\"\"\n3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n4\n7 ninja 3 rose 7 panda\n7 caterpillar 2 pupa 1 butterfly\n7 butterfly\n\"\"\") == \"2000\""
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 5100\nassert solution(1) == 100\nassert solution(5) == 5100\n"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\") == \"5100\""
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_str) == expected_output, f\"Input: {input_str}\\nExpected Output: {expected_output}\\nOutput: {solution(input_str)}\"\n"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\") == 5100, \"Incorrect output.\""
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"5100\""
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"nudgemon_go.txt\", \"r\").read()) == \"5100\\n\""
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\") == \"5100\""
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r').read()) == '5100'"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\\n\") == \"5100\"\n"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\"\n"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\"\nassert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n6\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\"\nassert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n7\") == \"-1\\n\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\"\n\nassert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\"\n\nassert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\"\n\nassert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\"\n\nassert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\"\n\nassert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\"\n\nassert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\"\n\nassert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\"\n\nassert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\"\n\nassert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\"\n\nassert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\"\n\nassert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\"\n\nassert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"6\\n1\\n2\\n3\\n1\\n4\\n5\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5') == '6\\n1\\n2\\n3\\n1\\n4\\n5\\n'"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    5\n    0\n    1 1\n    1 1\n    2 2 3\n    1 4\n    8\n    1\n    2\n    3\n    1\n    4\n    2\n    3\n    5\n    \"\"\"\n) == \"6\\n1\\n2\\n3\\n1\\n4\\n5\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    5\n    0\n    1 1\n    1 1\n    2 2 3\n    1 4\n    8\n    1\n    2\n    3\n    1\n    4\n    2\n    3\n    5\n    ''') == '6\\n1\\n2\\n3\\n1\\n4\\n5'\n\nassert solution('''\n    3\n    0\n    1\n    2\n    ''') == '0\\n0\\n0'\n\nassert solution('''\n    3\n    0\n    1\n    2\n    ''') == '0\\n0\\n0'"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output\n\nsample_input = \"\"\"5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\"\"\"\nsample_output = \"\"\"6\n1\n2\n3\n1\n4\n5\"\"\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\""
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5') == '10'\nassert solution('2 10\\n1 1 1 1 1\\n3\\n1 1 R 3\\n1 1 O 2\\n1 1 R 2\\n1 1 O 1') == '2'\nassert solution('5 3\\n1 2 1\\n2 1 2') == '1'\nassert solution('10 10\\n1 1 1 1 1 1 1 1 1 1\\n5\\n1 1 R 5\\n1 1 O 4\\n1 1 R 4\\n1 1 O 3\\n1 1 R 3\\n1 1 O 2\\n1 1 R 2\\n1 1 O 1\\n1 1 R 1') == '100'"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == 10\nprint(\"All tests passed\")"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\"\nassert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"0\"\n"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n1 2 1 2 1\\n4\\n1 2 O 6\\n1 2 O 3\\n2 1 O 3\\n1 2 O 5') == '10'\nprint('All tests passed!')"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 10, \"Incorrect output\""
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5') == '10'\nassert solution('3 3\\n1 2 3 4 5\\n2 3 4 5 6\\n4 5 6 7 8\\n5 6 7 8 9\\n2 3 4 5 6\\n1 2 3 4 5\\n3 4 5 6 7\\n4 5 6 7 8\\n5 6 7 8 9\\n') == '9'\nassert solution('2 3\\n2 3 4\\n1 2 3\\n3 4 5\\n1 2 3\\n3 4 5\\n2 3 4\\n1 2 3\\n3 4 5\\n2 3 4\\n1 2 3\\n3 4 5\\n2 3 4\\n1 2 3\\n3 4 5\\n2 3 4\\n1 2 3\\n3 4 5\\n2 3 4\\n1 2 3\\n3 4 5\\n2 3 4\\n1 2 3\\n3 4 5\\n2 3 4\\n1 2 3\\n3 4 5\\n2 3 4\\n1 2 3\\n3 4 5\\n2 3 4\\n1 2 3\\n3 4 5\\n2 3 4\\n1 2 3\\n3 4 5\\n2 3 4\\n1 2 3\\n3 4 5\\n2 3 4\\n1 2 3\\n3 4 5\\n2 3 4\\n1 2 3\\n3 4 5\\n2 3 4\\n1 2 3\\n3 4 5\\n2 3 4\\n1 2 3\\n3 4 5\\n2 3 4\\n1 2 3\\n3 4 5\\n2 3 4\\n1 2 3\\n3 4 5\\n2 3 4\\n1 2 3\\n3 4 5\\n2 3 4\\n1 2 3\\n3 4 5\\n2 3 4\\n1 2 3\\n3 4 5\\n2 3 4\\n1 2 3\\n3 4 5\\n2 3 4\\n1 2 3\\n3 4 5\\n2 3 4\\n1 2 3\\n3 4 5\\n2 3 4\\n1 2 3\\n3 4 5\\n2 3 4\\n1 2 3\\n3 4 5\\n2 3 4\\n1 2 3\\n3 4 5\\n2 3 4\\n1 2 3\\n3 4 5\\n2 3 4\\n1 2 3\\n3 4 5\\n2 3 4\\n1 2 3\\n3 4 5\\n2 3 4\\n1 2 3\\n3 4 5\\n2 3 4\\n1 2 3\\n3 4 5\\n2 3 4\\n1 2 3\\n3 4 5\\n2 3 4\\n1 2 3\\n3 4 5\\n2 3 4\\n1 2 3\\n3 4 5\\n2 3 4\\n1 2 3\\n3 4 5\\n2 3 4\\n1 2 3\\n3 4 5\\n2 3 4\\n1 2 3\\n3 4 5\\n2 3 4\\n1 2 3\\n3 4 5\\n2 3 4\\n1 2 3\\"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5') == '10'\n"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\\n\""
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n') == '10'\nassert solution('2 3\\n1 2 2\\n4\\n1 2 R 5\\n') == '5'\nassert solution('2 5\\n1 2 1 2 1\\n3\\n1 2 R 5\\n') == '10'\nassert solution('2 3\\n1 2 2\\n3\\n1 2 R 5\\n') == '5'"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == 10"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 1, \"The solution is incorrect.\""
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 3\\n0 1\\n1 2\\n2 3\\n') == '1\\n'"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\", \"Output should be 1\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\\n\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\", \"Expected output: 1\\nActual output: \" + str(solution())"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='4 3\\n0 1\\n1 2\\n2 3') == '1\\n'\nassert solution(stdin='4 5\\n0 1\\n1 2\\n2 3\\n3 0\\n3 4\\n4 2') == '1\\n'\n"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\", \"Output should be 1\""
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n\") == \"1\\n\""
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0.962962962963\", \"The answer is incorrect\"\nassert solution() == \"0.962962962963\", \"The answer is incorrect\"\nassert solution() == \"0.962962962963\", \"The answer is incorrect\"\nassert solution() == \"0.962962962963\", \"The answer is incorrect\"\nassert solution() == \"0.962962962963\", \"The answer is incorrect\"\nassert solution() == \"0.962962962963\", \"The answer is incorrect\"\nassert solution() == \"0.962962962963\", \"The answer is incorrect\"\nassert solution() == \"0.962962962963\", \"The answer is incorrect\"\nassert solution() == \"0.962962962963\", \"The answer is incorrect\"\nassert solution() == \"0.962962962963\", \"The answer is incorrect\"\nassert solution() == \"0.962962962963\", \"The answer is incorrect\"\nassert solution() == \"0.962962962963\", \"The answer is incorrect\"\nassert solution() == \"0.962962962963\", \"The answer is incorrect\"\nassert solution() == \"0.962962962963\", \"The answer is incorrect\"\nassert solution() == \"0.962962962963\", \"The answer is incorrect\"\nassert solution() == \"0.962962962963\", \"The answer is incorrect\"\nassert solution() == \"0.962962962963\", \"The answer is incorrect\"\nassert solution() == \"0.962962962963\", \"The answer is incorrect\"\nassert solution() == \"0.962962962963\", \"The answer is incorrect\"\nassert solution() == \"0.962962962963\", \"The answer is incorrect\"\nassert solution() == \"0.962962962963\", \"The answer is incorrect\"\nassert solution() == \"0.962962962963\", \"The answer is incorrect\"\nassert solution() == \"0.962962962963\", \"The answer is incorrect\"\nassert solution() == \"0.962962962963\", \"The answer is incorrect\"\nassert solution() == \"0.962962962963\", \"The answer is incorrect\"\nassert solution() == \"0.962962962963\", \"The answer is incorrect\"\nassert solution() == \"0.962962962963\", \"The answer is incorrect\"\nassert solution() == \"0.962962962963\", \"The answer is incorrect\"\nassert solution() == \"0.962962962963\", \"The answer is incorrect\"\nassert solution() == \"0.962962962963\", \"The answer is incorrect\"\nassert solution() == \"0.962962962963\", \"The answer is incorrect\"\nassert solution() == \"0.962962962963\", \"The answer is incorrect\"\nassert solution() == \"0.962962962963\", \"The answer is incorrect\"\nassert solution() == \"0.962962962963\", \"The answer is incorrect\"\nassert solution() == \"0.962962962963\", \"The answer is incorrect\"\nassert solution() == \"0.962962962963\", \"The answer is incorrect\"\nassert solution() == \"0.962962962963\", \"The answer is incorrect\"\nassert solution() == \"0.962962962963\", \"The answer is incorrect\"\n"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"0.962962962963\", \"The probability that the randomly built road network with 4 cities and 4 roads is connected should be approximately 0.962962962963.\"\n"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 0.962962962963\nassert solution(5) == 0.937037037037\nassert solution(10) == 0.874074074074\nassert solution(15) == 0.829182918292\nassert solution(20) == 0.793279327933"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == \"0.962962962963\"\nassert solution(2) == \"0.951481481481\"\nassert solution(3) == \"0.893106893107\"\nassert solution(4) == \"0.921379074074\"\nassert solution(5) == \"0.954272727273\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"0.962962962963\\n\", \"Incorrect output\"\n"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0.962962962963\", \"Incorrect output\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 0.962962962963, \"Solution should output 0.962962962963\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 0.962962962963, \"Incorrect output\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '0.962962962963'"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"0.962962962963\"\n"
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"0 0\\n40000000 0\\n0 40000000\\n\"\n"
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n\") == \"0 0\\n40000000 0\\n0 40000000\\n\"\nassert solution(\"1\\n\") == \"0 0\\n40000000 0\\n0 40000000\\n\"\nassert solution(\"4\\n\") == \"0 0\\n40000000 0\\n0 40000000\\n\"\nassert solution(\"10\\n\") == \"0 0\\n40000000 0\\n0 40000000\\n\"\nassert solution(\"100\\n\") == \"0 0\\n40000000 0\\n0 40000000\\n\"\nassert solution(\"1000\\n\") == \"0 0\\n40000000 0\\n0 40000000\\n\"\nassert solution(\"10000\\n\") == \"0 0\\n40000000 0\\n0 40000000\\n\"\nassert solution(\"100000\\n\") == \"0 0\\n40000000 0\\n0 40000000\\n\"\nassert solution(\"1000000\\n\") == \"0 0\\n40000000 0\\n0 40000000\\n\"\nassert solution(\"10000000\\n\") == \"0 0\\n40000000 0\\n0 40000000\\n\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"0 0\\n40000000 0\\n0 40000000\\n\"\nprint(solution(3))  # 3 lines"
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output\nfor i in range(n):\n    print(f\"0 {i}\")\n    print(f\"{n * (i + 1)} {i}\")\nprint(f\"{n * n}\")"
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3') == '0 0\\n40000000 0\\n0 40000000\\n'\nassert solution('4') == '0 0\\n40000000 0\\n0 40000000\\n0 0\\n40000000 0\\n0 40000000\\n'\nassert solution('5') == '0 0\\n40000000 0\\n0 40000000\\n0 0\\n40000000 0\\n0 40000000\\n0 0\\n40000000 0\\n'\n"
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n\") == \"0 0\\n40000000 0\\n0 40000000\\n\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n\") == \"0 0\\n40000000 0\\n0 40000000\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n\") == \"0 0\\n40000000 0\\n0 40000000\\n\"\n"
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n\") == \"0 0\\n40000000 0\\n0 40000000\\n\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Got: {solution(input())}, Expected: {expected_output}\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5 5 2\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5 5 2\") == \"1\"\nassert solution(\"2 3 4 9\") == \"impossible\"\n"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5 5 2\") == \"1\"\nassert solution(\"2 3 4 9\") == \"impossible\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5 5 2\") == \"1\"\nassert solution(\"2 3 4 9\") == \"impossible\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\", \"The given sequence of base values does not produce 24.\"\n"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5 5 2\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5 5 2\") == 1, \"The expected output is not 1, but rather: \" + solution(\"3 5 5 2\")"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 5 5 2') == '1\\n'"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"3 5 5 2\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '1'\n"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Test cases do not match\""
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == \"2\\n\""
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\""
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\"\n"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\"\nassert solution(\"10 2 5 10\\n50 40 20 10\\n30 20 40 50\\n10 5 60 15\\n15 20 20 10\") == \"225\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"0\""
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\\n\"\nassert solution(\"5 5\\n10 10\\n15 15\") == \"10\\n\"\nassert solution(\"10 5 5 15\") == \"10\\n\"\nassert solution(\"100 50 50 100\") == \"0\\n\"\nassert solution(\"2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"10\\n\"\nassert solution(\"1 0 0 0\") == \"0\\n\"\nassert solution(\"0 1 1 1\") == \"1\\n\"\nassert solution(\"10000000000000000\") == \"0\\n\""
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"\"\"\n"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == '2'\nassert solution(5) == '2'\nassert solution(20) == '2'\nassert solution(20) == '2'\nassert solution(100) == '0'\n"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0') == '2'\nassert solution
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(13) == \"12 14\", \"Test failed\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"13\") == \"12 14\\n\"\nassert solution(\"546\") == \"646\\n\"\nassert solution(\"5454\") == \"5454\\n\"\nassert solution(\"10\") == \"10\\n\"\nassert solution(\"1\") == \"1\\n\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(13) == '12 14', \"The function should return the correct output for the given input.\"\n"
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(13) == '12 14'"
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"13\") == \"12 14\\n\", \"Solution should return '12 14\\n'\"\nassert solution(\"123\") == \"12 13\\n\", \"Solution should return '12 13\\n'\"\nassert solution(\"134\") == \"13\\n\", \"Solution should return '13\\n'\"\nassert solution(\"12345\") == \"12 13 14 15\\n\", \"Solution should return '12 13 14 15\\n'\"\nassert solution(\"123456\") == \"12 13 14 15\\n\", \"Solution should return '12 13 14 15\\n'\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"13\") == \"12 14\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(13) == '12 14', \"The output should be '12 14', but it is actually '{}'.\".format(solution(13))"
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(13) == '12 14\\n', \"The function is not correct\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(13) == \"12 14\", \"Test failed: Expected '12 14', got '\"+solution(13)+\"'\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"13\") == \"12 14\""
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == \"0\\n0\\n0\\n0\\n0\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    5\n    1 0 0\n    1 0 1\n    3 0 1\n    3 0 0\n    3 0 1\n    ''') == 0\nassert solution('''\n    5\n    1 0 0\n    1 0 1\n    3 0 1\n    3 0 1\n    3 0 1\n    ''') == 0\nassert solution('''\n    5\n    1 0 0\n    1 0 1\n    3 0 1\n    3 0 0\n    3 0 0\n    ''') == 0\nassert solution('''\n    5\n    1 0 0\n    1 0 0\n    3 0 1\n    3 0 0\n    3 0 0\n    ''') == 0\nassert solution('''\n    5\n    1 0 0\n    1 0 0\n    3 0 0\n    3 0 1\n    3 0 0\n    ''') == 0\nassert solution('''\n    5\n    1 0 0\n    1 0 0\n    3 0 0\n    3 0 0\n    3 0 0\n    ''') == 0\n"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 0, \"Please implement the solution for the given problem\""
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == \"0\\n\"\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n\") == \"0\\n\"\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n2 0 1\") == \"1\\n\"\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n2 0 0\") == \"1\\n\"\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n2 0 1\\n2 0 0\") == \"1\\n\""
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"0\\n\"  # This solution should return \"0\\n\"\nprint(\"All test cases passed successfully\")"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1') == '0\\n'\nassert solution('1\\n1\\n2\\n2\\n3\\n3') == '0\\n0\\n1\\n1\\n2\\n2'\nassert solution('1\\n0\\n1\\n1\\n0\\n0') == '0\\n0\\n0\\n1\\n1\\n1'\nassert solution('1\\n0\\n0\\n1\\n1\\n1') == '1\\n1\\n1\\n1\\n1\\n1'\nassert solution('1\\n0\\n1\\n1\\n0\\n0\\n1\\n1\\n1\\n1') == '1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1'"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n\") == \"0\\n\"\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n2 1 0\\n\") == \"2\\n\"\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n2 1 1\\n\") == \"0\\n\"\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n2 1 0\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '0'\nassert solution(input()) == '0'"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == '0\\n'\n\nfrom typing import List"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == \"0\\n0\\n0\\n0\\n0\"\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 0\") == \"1\\n0\\n0\\n0\\n0\"\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == \"1\\n0\\n0\\n0\\n1\"\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 0\") == \"0\\n0\\n0\\n0\\n1\"\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 0\") == \"0\\n0\\n0\\n1\\n1\"\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 0\") == \"1\\n0\\n0\\n1\\n1\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    2 3\n    1 2\n    2 1\n    1 3\n    2 2\n    ''') == '''\n    1 1\n    2 2\n    1 3\n    2 1\n    1 2\n    '''"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 3') == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n'\nassert solution('5 5') == '-1\\n'\nassert solution('3 5') == '-1\\n'\nassert solution('5 3') == '-1\\n'\nassert solution('1 1') == '-1\\n'\nassert solution('3 1') == '-1\\n'\nassert solution('1 2') == '-1\\n'\nassert solution('2 1') == '-1\\n'\nassert solution('1 3') == '-1\\n'\nassert solution('2 3') == '-1\\n'"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(2) + \" \" + str(3) + \"\\n\" + str(1) + \" \" + str(1) + \"\\n\" + str(2) + \" \" + str(2) + \"\\n\" + str(1) + \" \" + str(3) + \"\\n\" + str(2) + \" \" + str(1)) == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n\"\nassert solution(str(2) + \" \" + str(3) + \"\\n\" + str(1) + \" \" + str(1) + \"\\n\" + str(2) + \" \" + str(2) + \"\\n\" + str(1) + \" \" + str(3) + \"\\n\" + str(2) + \" \" + str(1)) == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n\"\nassert solution(str(3) + \" \" + str(4) + \"\\n\" + str(1) + \" \" + str(1) + \"\\n\" + str(2) + \" \" + str(2) + \"\\n\" + str(1) + \" \" + str(2) + \"\\n\" + str(1) + \" \" + str(3) + \"\\n\" + str(1) + \" \" + str(4) + \"\\n\" + str(2) + \" \" + str(1)) == \"-1\\n\"\nassert solution(str(1) + \" \" + str(1) + \"\\n\" + str(1) + \" \" + str(1) + \"\\n\" + str(1) + \" \" + str(1) + \"\\n\" + str(1) + \" \" + str(1) + \"\\n\" + str(1) + \" \" + str(1) + \"\\n\" + str(1) + \" \" + str(1) + \"\\n\" + str(1) + \" \" + str(1) + \"\\n\" + str(1) + \" \" + str(1)) == \"-1\\n\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\"\nassert solution(\"5 5\") == \"1 1\\n1 2\\n2 2\\n2 1\\n3 3\\n3 4\\n4 4\\n4 3\\n3 2\\n2 1\\n1 1\"\nassert solution(\"5 6\") == \"1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n4 4\\n4 5\\n5 5\\n5 4\\n4 3\\n3 2\\n2 1\\n1 1\"\nassert solution(\"8 8\") == \"1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n4 4\\n4 5\\n5 5\\n5 6\\n6 6\\n6 5\\n5 4\\n4 3\\n3 2\\n2 1\\n1 1\"\nassert solution(\"10 10\") == \"1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n4 4\\n4 5\\n5 5\\n5 6\\n6 6\\n6 7\\n7 7\\n7 6\\n6 5\\n5 4\\n4 3\\n3 2\\n2 1\\n1 1\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == ['1 1', '2 2', '1 3', '2 1', '1 2', '2 3']\nassert solution(4) == ['1 1', '2 2', '1 3', '2 1', '1 2', '2 3']\nassert solution(5) == ['1 1', '2 2', '1 3', '2 1', '1 2', '2 3']\nassert solution(6) == ['1 1', '2 2', '1 3', '2 1', '1 2', '2 3']\nassert solution(7) == ['1 1', '2 2', '1 3', '2 1', '1 2', '2 3']"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\"\nassert solution(\"3 3\\n\") == \"-1\"\nassert solution(\"2 1\\n\") == \"1 1\\n2 2\"\nassert solution(\"2 2\\n\") == \"1 1\\n2 2\"\nassert solution(\"2 4\\n\") == \"-1\"\nassert solution(\"4 3\\n\") == \"-1\"\nassert solution(\"5 5\\n\") == \"-1\"\nassert solution(\"6 5\\n\") == \"-1\"\nassert solution(\"7 5\\n\") == \"-1\"\nassert solution(\"8 5\\n\") == \"-1\"\nassert solution(\"9 5\\n\") == \"-1\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n\"\n"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n', 'The output should be \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n\"'"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n\", \"Test 1 failed\"\nassert solution() == \"1 2\\n2 1\\n1 3\\n2 3\\n1 1\\n2 2\\n\", \"Test 2 failed\"\nassert solution() == \"1 2\\n2 3\\n1 1\\n2 1\\n1 3\\n2 2\\n\", \"Test 3 failed\"\nassert solution() == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n\", \"Test 4 failed\"\nassert solution() == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n\", \"Test 5 failed\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n\"\nassert solution(\"3 3\") == \"1 1\\n2 2\\n3 3\\n1 2\\n2 3\\n3 1\\n\"\nassert solution(\"4 4\") == \"-1\\n\"\n"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3.33333333\\n3.33333333\\n3.33333333\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n3 10\n0 10 1\n0 10 1\n0 10 1\n''') == '3.33333333\\n3.33333333\\n3.33333333\\n'\nassert solution('''\n4 10\n1 10 1\n2 10 1\n3 10 1\n''') == '6.66666667\\n6.66666667\\n6.66666667\\n'\nassert solution('''\n5 10\n1 10 1\n2 10 1\n3 10 1\n4 10 1\n''') == '10\\n10\\n10\\n'"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"3.33333333\\n3.33333333\\n3.33333333\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 10\\n0 10 1\\n0 10 1\\n0 10 1') == '3.33333333\\n3.33333333\\n3.33333333'"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(solution) == '3.33333333'\nprint(solution())"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\\n\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 10\\n0 10 1\\n0 10 1\\n0 10 1') == '3.33333333\\n3.33333333\\n3.33333333\\n'"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 10\n0 10 1\n0 10 1\n0 10 1\n\"\"\") == \"3.33333333\\n3.33333333\\n3.33333333\"\n\nassert solution(\"\"\"\n2 2\n0 2 1\n0 2 2\n0 2 3\n\"\"\") == \"1.00000000\\n2.00000000\"\n\nassert solution(\"\"\"\n4 10\n0 10 1\n0 10 2\n0 10 3\n0 10 4\n\"\"\") == \"0.50000000\\n0.66666667\\n0.83333333\\n0.83333333\"\n\nassert solution(\"\"\"\n4 10\n0 10 1\n0 10 2\n0 10 3\n0 10 4\n\"\"\") == \"0.50000000\\n0.66666667\\n0.83333333\\n0.83333333\""
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin: str) == \"1\""
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"1\"\nassert solution(4) == \"2\"\nassert solution(5) == \"1\"\nassert solution(6) == \"2\"\nassert solution(7) == \"1\"\nassert solution(8) == \"2\"\nassert solution(9) == \"1\"\nassert solution(10) == \"2\"\nassert solution(11) == \"1\"\nassert solution(12) == \"2\"\nassert solution(13) == \"1\"\nassert solution(14) == \"2\"\nassert solution(15) == \"1\"\nassert solution(16) == \"2\"\nassert solution(17) == \"1\"\nassert solution(18) == \"2\"\nassert solution(19) == \"1\"\nassert solution(20) == \"2\""
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"3\\n3 3 2\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='3\\n3 3 2') == '1\\n\\n'\n"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, [3, 3, 2]) == 1\nassert solution(3, [3, 2, 2]) == 2\nassert solution(3, [2, 2, 3]) == 3\nassert solution(3, [3, 3, 3]) == 2"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1\"\n"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 3 2\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\\n\""
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '1\\n'"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1\\n\"\n"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\nabba\") == 2"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\nabba\") == 2, \"Expected 2, got {}\".format(solution(\"4 2\\nabba\"))"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\nabab\") == 2\nassert solution(\"4 2\\nabba\") == 2\nassert solution(\"4 2\\naabb\") == 1\nassert solution(\"4 2\\na\") == 1\nassert solution(\"4 2\\n\") == 0\nassert solution(\"5 3\\nabababba\") == 3\nassert solution(\"5 3\\nabababa\") == 3\nassert solution(\"5 3\\nabbaab\") == 2\nassert solution(\"5 3\\nabba\") == 1\nassert solution(\"5 3\\n\") == 0\nassert solution(\"4 1\\nababa\") == 1\nassert solution(\"4 1\\nabba\") == 1\nassert solution(\"4 1\\n\") == 0"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\nabba\") == 2\nassert solution(\"4 2\\ncat\\nbouldering\") == 4\nassert solution(\"4 2\\ncat\\nvideo\") == 12\nassert solution(\"4 2\\nbouldering\\ncat\") == 6\nassert solution(\"4 2\\nvideo\\nbouldering\") == 4\nassert solution(\"4 2\\nvideo\\ncat\") == 10\nassert solution(\"4 2\\ncat\\nbouldering\") == 4\n"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 2, \"Test failed\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\nabba\") == \"2\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"4 2\\nabba\"\n) == \"2\\ndef solution(stdin: str) -> str:\\npass\\n\"\n\nassert solution(\n    \"4 3\\nabc\\nxyz\\nxyz\\nabc\"\n) == \"3\\ndef solution(stdin: str) -> str:\\npass\\n\"\n\nassert solution(\n    \"4 5\\nabc\\nxyz\\nxyz\\nabc\\ndef\\nxyz\"\n) == \"5\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\nabba\") == \"2\"\nassert solution(\"4 3\\naabbabaaa\") == \"3\"\nassert solution(\"5 4\\naabbabaabb\") == \"6\"\nassert solution(\"5 4\\naabbabaabb\\ncaabbabbca\") == \"7\"\nassert solution(\"5 5\\naabbabaabb\\ncaabbabbca\\naabbabaaa\") == \"9\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\nabba\") == 2, \"Solution not correct\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='4 2\\nabba\\n') == '2\\n'\n"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 3\\n1 2\\n2 3\\n2 4') == '3\\n'\nassert solution('3 4\\n1 2\\n2 3\\n2 4') == '3\\n'\nassert solution('4 2\\n1 2\\n2 3\\n2 4') == '2\\n'\nassert solution('3 2\\n1 2\\n2 3\\n2 4') == '3\\n'\nassert solution('4 2\\n1 2\\n2 3\\n2 4\\n2 5\\n3 5\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n101 102\\n102 103\\n103 104\\n104 105\\n105 106\\n106 107\\n107 108\\n108 109\\n109 110\\n110 111\\n111 112\\n112 113\\n113 114\\n114 115\\n115 116\\n116 117\\n117 118\\n118 119\\n119 120\\n120 121\\n121 122\\n122 123\\n123 124\\"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Solution for {input()} is {solution(input())}, but expected {expected}\""
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == 3, \"The output is incorrect.\""
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 3\\n1 2\\n2 3\\n2 4') == 3\nassert solution('4 3\\n2 4\\n2 3\\n1 2') == 2\nassert solution('4 3\\n2 3\\n1 2\\n2 4') == 1"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 3\\n1 2\\n2 3\\n2 4') == 3\nassert solution('5 3\\n1 2\\n2 3\\n3 4') == 2\nassert solution('5 4\\n1 2\\n2 3\\n3 4') == 1"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '3'\n"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == 3, \"Expected output: 3, got: \" + str(solution(\"4 3\\n1 2\\n2 3\\n2 4\"))"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test failed with input {input()}, expected {output}, actual {solution(input())}\""
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\"\n"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 3\\n1 2\\n2 3\\n2 4\\n') == '3'"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == '''\n1\n0\n'''"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n0\\n1\\n1000\\n1\\n3\\n2\\n3\") == \"1\\n0\\n\\n\"\nassert solution(\"2\\n1\\n0\\n1000\\n1\\n3\\n2\\n3\") == \"1\\n0\\n\\n\"\nassert solution(\"3\\n1\\n0\\n1000\\n1\\n3\\n2\\n3\") == \"1\\n0\\n\\n\"\nassert solution(\"3\\n2\\n1\\n0\\n1000\\n1\\n3\\n2\\n3\") == \"1\\n0\\n\\n\"\nassert solution(\"1\\n1\\n1\\n1000\\n1\\n3\\n2\\n3\") == \"1\\n0\\n\\n\"\nassert solution(\"2\\n1\\n2\\n1000\\n1\\n3\\n2\\n3\") == \"1\\n0\\n\\n\"\nassert solution(\"3\\n1\\n2\\n1000\\n1\\n3\\n2\\n3\") == \"1\\n0\\n\\n\"\nassert solution(\"3\\n2\\n1\\n2\\n1000\\n1\\n3\\n2\\n3\") == \"1\\n0\\n\\n\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '1\\n0\\n'\nassert solution(input()) == '1\\n0\\n'\nassert solution(input()) == '1\\n0\\n'\nassert solution(input()) == '1\\n0\\n'\nassert solution(input()) == '1\\n0\\n'\nassert solution(input()) == '1\\n0\\n'"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"1\\n0\\n0\"\n"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"3 2\n1 0\n0 1\n1000 1\n1 3\n2 3\"\"\") == \"1\\n0\\n\\n\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"1\\n0\\n1\\n\\n\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3') == '\\n1\\n0\\n\\n'"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"houses.in\", \"r\")) == \"1\\n0\\n\"\nassert solution(open(\"houses.in\", \"r\")) == \"0\\n0\\n\"\nassert solution(open(\"houses.in\", \"r\")) == \"1\\n0\\n\"\nassert solution(open(\"houses.in\", \"r\")) == \"1\\n0\\n\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\"1\n0\"\"\"\n\nassert solution(stdin) == \"\"\"1\n0\"\"\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Solution does not match expected output.\\nExpected: {expected}\\nGot: {solution(input())}\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 7, \"Expected 7, but got {}\".format(solution(3))  # expected output: 7"
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"7\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case 1\\nassert solution('1 2 3\\n3 2 2\\n5 2 1\\n3 2 1\\n1 2 1\\n1 2 3\\n') == '7\\n\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == '7'"
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3\\n3 2 2\\n5 2 1\\n3 2 1\\n1 2 1\") == \"7\\n\"\nassert solution(\"3\\n1 2 3\\n3 2 2\\n5 2 1\\n3 2 1\\n1 2 1\") == \"3\\n\"\nassert solution(\"3\\n1 2 3\\n3 2 2\\n5 2 1\\n3 2 1\\n1 2 1\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\\n3 2 2\\n5 2 1\\n3 2 1\\n1 2 1\") == \"1\\n\"\nassert solution(\"1\\n1 2 1\") == \"1\\n\"\nassert solution(\"1\\n1 2 3\") == \"2\\n\"\nassert solution(\"1\\n1 2 3\") == \"1\\n\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"7\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Expected output: 7\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '7\\n'"
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == '7\\n' + '\\n'.join(['def solution(stdin: str) -> str:\\n    pass\\n'] * 3)\nassert solution(4) == '7\\n' + '\\n'.join(['def solution(stdin: str) -> str:\\n    pass\\n'] * 4)\nassert solution(5) == '7\\n' + '\\n'.join(['def solution(stdin: str) -> str:\\n    pass\\n'] * 5)\n"
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 7, \"Your solution is incorrect.\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, \"1 2 3\\n3 2 2\\n5 2 1\\n3 2 1\\n1 2 1\\n1 2 3\") == 7\n"
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\\n3 2 2\\n5 2 1\\n3 2 1\\n1 2 1\\n1 2 3\") == \"7\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100') == '20'"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100') == '20'\n"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\"\n"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == 20, \"Expected output is 20, but got {}\".format(solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\"))\nprint(\"All tests passed!\")"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\n\") == \"20\"\n"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"linearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"20\\n\"\n"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"20\""
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\""
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\"\n"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\") == \"6\""
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6') == '6\\n'\nprint(\"All tests pass!\")"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\\n') == 6\nprint(\"Test Passed\")"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_data) == expected_output, f\"Test case {tc} failed: expected output {expected_output}, but got {solution(input_data)}\""
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == \"6\", \"Test case 1 failed\""
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\") == 6\nprint(\"All test cases pass!\")"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\") == 6, \"The output should be 6.\""
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == output, f\"Test Case {i+1} failed: Expected {output}, got {solution(input)}\""
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"6\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    4 4\n    1 2 2\n    2 3 4\n    3 4 1\n    4 1 2\n    3\n    \"\"\"\n) == 6"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n') == '2\\n'"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\", \"Solution does not work correctly\"\n"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n    3 1 1\n    2\n    3\n    1 2\n    2 3 1\n    1 1\n''') == 2\n\nassert solution('''\n    3 1 1\n    2\n    3\n    1 2\n    2 3 1\n    1 1\n''') == 2\n\nassert solution('''\n    3 1 1\n    2\n    3\n    1 2\n    2 3 1\n    1 1\n''') == 2\n\nassert solution('''\n    3 1 1\n    2\n    3\n    1 2\n    2 3 1\n    1 1\n''') == 2"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"2\\n\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n') == '2\\n'\n"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Test failed for solution: {solution(input())}, expected: {output()}\"\n"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == '2\\nimpossible'"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"2\"\nassert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"impossible\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == output, f\"Expected output: {output}, got: {solution(stdin)}\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1') == '2'\nassert solution('3 2 3\\n2\\n3\\n1 2\\n2 3 1\\n1 1') == 'impossible'\nassert solution('3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 0') == 'impossible'\nassert solution('3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1 1') == 'impossible'"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(r'''\n    2\n    250 250\n    250 750\n''') == 500.00\nprint(\"All test cases passed\")"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n250 250\\n250 750') == '500.00\\n'\n"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 500.00, \"Expected 500.00, but got {}.\".format(solution())"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 500.00"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 500.00, \"Test case 1 failed\""
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n250 250\\n250 750\\n\") == \"500.00\"\n"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n250 250\\n250 750\\n\") == \"500.00\""
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == '500.00'"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n250 250\\n250 750') == '500.00'\n"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 500.00, \"Incorrect output\"\n"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0\", \"Test failed\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 0"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n2 100 10\\n100 1 10\") == \"0\"\nassert solution(\"2 100\\n100 1 200\") == \"400\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n2 100 10\\n100 1 10\") == \"0\"\n"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\"\n"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 0\n"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3\\n2 100 10\\n100 1 10') == '0'\nassert solution('2 3\\n1 2 3\\n1 4 5\\n2 5 6\\n3 6 7') == '0'"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Your solution is incorrect. Expected: {expected}, but got: {solution(input())}\"\n"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n2 100 10\\n100 1 10\") == \"0\\n\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n2 100 10\\n100 1 10\") == \"0\"\nassert solution(\"5 4\\n10 10\\n10 10\\n10 10\\n10 10\") == \"20\"\nassert solution(\"5 6\\n20 20\\n10 10\\n20 10\\n20 20\") == \"60\"\nassert solution(\"5 7\\n20 20\\n20 10\\n20 20\\n20 20\") == \"80\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == \"2\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == \"2\"\n"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == \"2\"\n"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin: str) == \"2\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n\") == \"2\\n\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == \"2\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected_output, f\"Solution: {solution}, Expected Output: {expected_output}\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == 2\n"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str) == expected_output, f\"Test case {i + 1} failed. Expected output: {expected_output}, Received output: {solution(input_str)}\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == \"2\""
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\\n\") == \"AAAA\\n....\\nBBBB\\nCCCC\\n\"\nassert solution(\"3 5\\n2211\\n1112\\n1112\\n\") == \"impossible\"\nassert solution(\"3 4\\n2212\\n1111\\n1111\\n\") == \"AAAA\\n....\\nBBBB\\nCCCC\\n\"\nassert solution(\"3 4\\n2211\\n1111\\n1112\\n\") == \"impossible\"\nassert solution(\"3 4\\n2211\\n1111\\n1112\\n1112\\n\") == \"AAAA\\n....\\nBBBB\\nCCCC\\n\"\nassert solution(\"3 5\\n2211\\n1112\\n1112\\n1111\\n\") == \"impossible\"\nassert solution(\"3 5\\n2211\\n1112\\n1112\\n1111\\n\") == \"impossible\"\nassert solution(\"3 4\\n2211\\n1111\\n1111\\n1111\\n\") == \"impossible\""
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 4\\n2211\\n1112\\n1112') == 'AAAA\\n...A\\n....\\n\\nBB..\\nBBBB\\n...B\\n\\n....\\n...C\\nCCCC\\n'"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'AAAA\\n....A\\n....\\n..B..\\n...B\\nCCCC'"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"AAAA\\n.A...\\n.B...\\n..C...\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nfor cases in [(\\n    '2211',\\n    '1112',\\n    '1112'),\\n               (1\\n    '2211',\\n    '1112',\\n    '1112'),\\n
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"AAAA\\n...A\\n....\\n\\nBB..\\nBBBB\\n...B\\n\\n....\\n...C\\nCCCC\"\n"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\" + \"\\n\" + \"...\" * 2 + \"\\n\" + \"..\" + \"\\n\" + \"..\" + \"\\n\" + \"....\" + \"\\n\" + \"..\" + \"\\n\" + \"CCCC\"\nassert solution(\"3 4\\n2211\\n1112\\n1112\\n\") == \"impossible\"\nassert solution(\"3 4\\n2211\\n1112\\n1112\\n3333\") == \"impossible\""
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\n...A\\n....\\n\\nBB..\\nBBBB\\n...B\\n....\\n\\n....\\n...C\\nCCCC\""
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\n...A\\n....\\n\\nBB..\\nBBBB\\n...B\\n\\n....\\n...C\\nCCCC\"\n"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\").read()) == \"AAAA\\n....A\\n....\\n....\\n...C\\nCCCC\\n\"\nassert solution(open(\"input2.txt\").read()) == \"BB..\\nBBBB\\n...B\\nCCCC\\ndef solution(stdin: str) -> str:\n    pass\"\n"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\n...A\\n....\\nBB..\\nBBBB\\n...B\\n....\\n...C\\nCCCC\\nimpossible\"\nassert solution(\"3 4\\n2222\\n1112\\n1112\") == \"impossible\"\nassert solution(\"3 4\\n2222\\n1111\\n1111\") == \"impossible\"\nassert solution(\"3 4\\n2222\\n1111\\n2222\") == \"BB..\\nBBBB\\n...B\\n....\\n...C\\nCCCC\\nimpossible\""
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\") == 9\nassert solution(\"5 1 5 5\\n6 4 1 2 3 2 3\\n7 3 1 2 1 4 3\\n8 5 1 2 1 3 2\\n9 3 1 2 1 3 2\") == 15\nassert solution(\"3 1 2 2\\n4 3 1 2 1\") == 2\n"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 9\n"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3') == 9\nprint('All test cases passed.')"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\") == 9, \"The output is incorrect\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\") == 9"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 9, \"Solution should return 9.\""
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 9, \"Test case not executed\""
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 9\n"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\") == 9, \"Incorrect output\""
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == 20.396078\nassert solution(\"1 1 1\\n1 2 3\\n2 1 4\") == 1\nassert solution(\"5 5 5\\n5 5 5\\n5 5 5\") == 1\nassert solution(\"2 3 1\\n3 2 4\\n1 3 1\") == 1\nassert solution(\"4 6 2\\n5 5 5\\n3 3 3\") == 1\nassert solution(\"4 5 6\\n4 5 4\\n4 5 6\") == 2\nassert solution(\"1 1 1\\n2 1 1\\n3 1 1\") == 1\nassert solution(\"5 5 5\\n5 5 5\\n5 5 5\") == 1\nassert solution(\"2 3 1\\n3 2 4\\n1 3 1\") == 1\nassert solution(\"4 6 2\\n5 5 5\\n3 3 3\") == 1\nassert solution(\"4 5 6\\n4 5 4\\n4 5 6\") == 2\nassert solution(\"1 1 1\\n2 1 1\\n3 1 1\") == 1"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    '''6 2 2 8\n0 0 6\n3 4 7\n0 8 8\n6 8 8\n6 0 6\n6 4 8\n3 4\n1 5'''\n) == '20.396078'"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_str) == output_str, f\"Expected {output_str}, got {solution(input_str)}\"\nfor test_case in [input_str, output_str]:\n    print(test_case)"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 20.396078, \"The given solution is incorrect.\""
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"20.396078\", solution(stdin)"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_data) == expected_output, f\"Expected output {expected_output}, got {solution(input_data)}\""
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"20.396078\""
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == 20.396078\n"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"20.396078\""
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    6 2 2 8\n    0 0 6\n    3 4 7\n    0 8 8\n    6 8 8\n    6 0 6\n    6 4 8\n    3 4\n    1 5\n    \"\"\"\n) == \"20.396078\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"cdefghijijklmnopqrstuvwxyz\"\nassert solution(\"1\") == \"b\"\nassert solution(\"2\") == \"c\"\nassert solution(\"1 8\") == \"b\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\") == \"c\"\nassert solution(\"nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"def\"\n\nfrom typing import List"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\\n1\\n2\\n1 8\") == \"b\\nc\\ndef\\n\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\") == \"c\"\nassert solution(\"nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"def\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abca\") == \"b\\n\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"bc\\ncd\\ndd\\nee\\nff\\ngg\\nhh\\nii\\njj\\nkk\\nll\\nmm\\nnn\\noo\\npp\\nqq\\nrr\\nss\\ntt\\nuu\\nvv\\nww\\nxx\\nyy\\nzz\\n\"\nassert solution(\"1\") == \"b\\n\"\nassert solution(\"2\") == \"c\\ndef\\n\"\nassert solution(\"1 8\") == \"b\\n\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\") == \"c\"\nassert solution(\"nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"def\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\") == \"c\"\nassert solution(\"nn oo pp qq rr ss tt uu vv ww xx yy zz 1\") == \"b\"\nassert solution(\"nn oo pp qq rr ss tt uu vv ww xx yy zz 2\") == \"c\"\nassert solution(\"nn oo pp qq rr ss tt uu vv ww xx yy zz 1 8\") == \"def\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('abca') == 'b'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm') == 'c'\nassert solution('nn oo pp qq rr ss tt uu vv ww xx yy zz') == 'def'\nassert solution('1') == 'b'\nassert solution('2') == 'c'\nassert solution('1 8') == 'def'\n\nfrom typing import List"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"b\", \"The output should be 'b', not '{}'\".format(solution(input()))"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abca\") == \"b\\n\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\\nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"b\\n\"\nassert solution(\"abc\") == \"b\\n\"\nassert solution(\"abcd\") == \"bc\\n\"\nassert solution(\"abcde\") == \"bcd\\n\"\nassert solution(\"abcdefg\") == \"bcdefg\\n\"\nassert solution(\"abcdefgh\") == \"bcdefgh\\n\"\nassert solution(\"abcdefghi\") == \"bcdefghij\\n\"\nassert solution(\"abcdefghijk\") == \"bcdefghijk\\n\"\nassert solution(\"abcdefghijkl\") == \"bcdefghijkl\\n\"\nassert solution(\"abcdefghijklm\") == \"bcdefghijklm\\n\"\nassert solution(\"abcdefghijklmno\") == \"bcdefghijklmno\\n\"\nassert solution(\"abcdefghijklmnoq\") == \"bcdefghijklmnoq\\n\"\nassert solution(\"abcdefghijklmnopqrs\") == \"bcdefghijklmnopqrs\\n\"\nassert solution(\"abcdefghijklmnopqrst\") == \"bcdefghijklmnopqrst\\n\"\nassert solution(\"abcdefghijklmnopqrstu\") == \"bcdefghijklmnopqrstu\\n\"\nassert solution(\"abcdefghijklmnopqrstuv\") == \"bcdefghijklmnopqrstuv\\n\"\nassert solution(\"abcdefghijklmnopqrstuvw\") == \"bcdefghijklmnopqrstuvw\\n\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"bcdefghijklmnopqrstuvwxyz\\n\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"bcdefghijklmnopqrstuvwxyz\\n\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz0123456789\") == \"bcdefghijklmnopqrstuvwxyz0123456789\\n\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Incorrect output: {output}\"\n\nfor i in range(Q):\n    assert solution(input()) == output, f\"Incorrect output: {output}\""
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"hobotnica\") == \"hob\"\nassert solution(\"robot\") == \"ro\"\nassert solution(\"hobi\") == \"hob\"\nassert solution(\"hobit\") == \"hob\"\nassert solution(\"robi\") == \"ro\""
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\nhobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\n4\\robi\\nhobi\\nhobit\\nrakija\\n') == '12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\npass\\n'"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"hobb\"\nassert solution() == \"hobb\"\nassert solution() == \"ide\"\nassert solution() == \"ide\"\nassert solution() == \"ide\""
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"hobotnica\") == \"h\"\nassert solution(\"robot\") == \"r\"\nassert solution(\"hobi\") == \"h\"\nassert solution(\"hobit\") == \"h\"\nassert solution(\"robi\") == \"r\"\nassert solution(\"hobi\") == \"h\"\nassert solution(\"hobit\") == \"h\"\nassert solution(\"rakija\") == \"rak\""
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"def solution(stdin: str) -> str: pass\", \"Your code is incorrect. Please fix the code.\""
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"hobotnica\") == \"h\"\nassert solution(\"robot\") == \"r\"\nassert solution(\"hobi\") == \"h\"\nassert solution(\"hobit\") == \"h\"\nassert solution(\"robi\") == \"r\"\nassert solution(\"hobi\") == \"h\"\nassert solution(\"hobit\") == \"h\"\nassert solution(\"rakija\") == \"rak\""
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=open('input.txt', 'r')) == expected\n"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"hobotnica\") == \"hob\"\nassert solution(\"robot\") == \"r\"\nassert solution(\"hobi\") == \"hob\"\nassert solution(\"hobit\") == \"hob\"\nassert solution(\"robi\") == \"ro\"\nassert solution(\"rakija\") == \"rak\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('14 4\\nJQ IRKEYFG EXQ') == 'THIS IS A TEST'"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('14 4\\nJQ IRKEYFG EXQ') == 'THIS IS A TEST'"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    14 4\n    3 QJIRKEYFG EXQ\n    \"\"\"\n) == \"THIS IS A TEST\"\n\nassert solution(\n    \"\"\"\n    10 5\n    1234567890123456789012345678901234567890123456789012345678901234567890\n    \"\"\"\n) == \"THIS IS A TEST\"\n\nassert solution(\n    \"\"\"\n    10 10\n    1234567890123456789012345678901234567890123456789012345678901234567890\n    \"\"\"\n) == \"THIS IS A TEST\"\n\nassert solution(\n    \"\"\"\n    12 12\n    1234567890123456789012345678901234567890123456789012345678901234567890\n    \"\"\"\n) == \"THIS IS A TEST\"\n\nassert solution(\n    \"\"\"\n    14 12\n    1234567890123456789012345678901234567890123456789012345678901234567890\n    \"\"\"\n) == \"THIS IS A TEST\"\n\nassert solution(\n    \"\"\"\n    18 20\n    12345678901234567890123456789012345678901234567890123456789012345678901234567890\n    \"\"\"\n) == \"THIS IS A TEST\"\n\nassert solution(\n    \"\"\"\n    20 18\n    12345678901234567890123456789012345678901234567890123456789012345678901234567890\n    \"\"\"\n) == \"THIS IS A TEST\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('14 4\\nJQ IRKEYFG EXQ') == 'THIS IS A TEST', 'Incorrect result'"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\"\nassert solution(\"14 10\\nfoo bar baz\") == \"This is a test\"\nassert solution(\"14 5\\nHello\") == \"Hello\"\n"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\"\nassert solution(\"14 4\\nAaBbCcDdEeFfGgHhIiJjKkLmMnNoOoPpQqRrSsTtUuVvWwXxYyZz
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\\n\") == \"THIS IS A TEST\"\n"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\"\nassert solution(\"14 4\\nJ G S T\") == \"TEST\"\nassert solution(\"14 4\\nTEST\") == \"TEST\"\nassert solution(\"14 4\\nTESTING\") == \"TESTING\"\nassert solution(\"14 4\\nHELLO WORLD\") == \"HELLO WORLD\"\nassert solution(\"14 4\\nTESTING 123\") == \"TESTING 123\""
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == [135, 270, 135135, 270270]"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"135\\n270\\n135135\\n270270\", \"Test failed\""
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2.6\") == \"135\\n270\\n135135\\n270270\"\n"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2.6\") == \"135\\n270\\n135135\\n270270\\n\"\nassert solution(\"1.23456789\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n2"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2.6\") == \"135\\n270\\n135135\\n270270\\n\"\nassert solution(\"5776.3\") == \"76\\n\"\nassert solution(\"6789.1234567890\") == \"67891234567890\\n\"\nassert solution(\"12345678901234567890\") == \"No solution\\n\""
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2.6) == [135, 270]"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"135\\n270\\n135135\\n270270\\n\"\n"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"135\\n270\\n135135\\n270270\\n\""
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2.6) == \"135\\n270\"\nassert solution(3.14) == \"135\\n270\"\nassert solution(2.5) == \"135\"\nassert solution(1.1) == \"135\"\nassert solution(1.12) == \"270270\""
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2.6) == \"135\\n270\"\nassert solution(5776) == \"76\"\nassert solution(2.3) == \"39\"\nassert solution(3.456789) == \"3456789\"\nassert solution(0.00000000001) == \"0\"\nassert solution(10000000000000000000) == \"No solution\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin: str) == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\") == 4\nprint(\"All tests passed successfully\")"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n\") == 4\nassert solution(\"1\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n\") == 4\nassert solution(\"2\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n\") == 0\nassert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n\") == 4\nassert solution(\"1\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n\") == 4\nassert solution(\"2\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n\") == 0\nassert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n\") == 4\nassert solution(\"1\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n\") == 4\nassert solution(\"2\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n\") == 0\nassert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n\") == 4\nassert solution(\"1\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n\") == 4\nassert solution(\"2\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n\") == 0\nassert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n\") == 4\nassert solution(\"1\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n\") == 4\nassert solution(\"2\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n\") == 0\nassert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 "
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test case not provided.\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=None) == \"def solution(stdin: str) -> str:\\n    pass\\n\", \"Sample Input and Output should match\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution("
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n') == '4\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\n"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\") == 4"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n') == '4\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 5\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 5\\n1 2\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 5\\n1 2\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 5\\n\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 5\\n1 2\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 5\\n1 2\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 5\\n1 2\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 5\\n1 2\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 5\\n1 2\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 5\\n1 2\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 5\\n1 2\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 5\\n1 2\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 5\\n1 2"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r\"\"\"\n    5\n    1 2\n    1 3\n    1 4\n    1 5\n\"\"\") == \"\"\"\n    0.0000000 0.0000000\n    1.0000000 0.0000000\n    -1.0000000 0.0000000\n    0.0000000 1.0000000\n    0.0000000 -1.0000000\n\"\"\""
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt').read()) == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n'"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\""
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    5\n    1 2\n    1 3\n    1 4\n    1 5\n    \"\"\"\n) == \"\"\"\n0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n\"\"\"\n\nassert solution(\n    \"\"\"\n    6\n    1 2\n    1 3\n    1 4\n    1 5\n    1 6\n    2 3\n    2 4\n    2 5\n    3 4\n    4 5\n    \"\"\"\n) == \"\"\"\n0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n\"\"\""
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n\", \"Solution incorrect.\"\n"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\nassert solution(\"10\\n1 2\\n2 3\\n3 4\\n4 1\\n5 6\") == \"0.000000000000000000000000000000000 0.000000000000000000000000000000000\\n100000000000000000000000000000000 0.00000000000000000000000000000000\\n100000000000000000000000000000000 10000000000000000000000000000000\\n10000000000000000000000000000000 100000000000000000000000000000000\\n100000000000000000000000000000000 10000000000000000000000000000000\\n10000000000000000000000000000000 100000000000000000000000000000000\\n1000000000000000000000000000000000 100000000000000000000000000000000\\n1000000000000000000000000000000000 1000000000000000000000000000000000\\n100000000000000000000000000000000 1000000000000000000000000000000000\\n10000000000000000000000000000000000 1000000000000000000000000000000000\\n1000000000000000000000000000000000 10000000000000000000000000000000000\\n10000000000000000000000000000000000 1000000000000000000000000000000000\\n100000000000000000"
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 'def solution(stdin: str) -> str:\\n\\tpass\\n'"
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\\n\") == [\"2\", \"1\", \"1\", \"def solution(stdin: str) -> str:\", \"pass\"]"
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Input and output mismatch.\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Test case {i+1} failed\"\n"
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\\n\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(str(3)) == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(str(3)) == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('abc') == '1\\n'\nassert solution('aba') == '2\\n'\nassert solution('aaa') == '1\\n'\nassert solution('a*a') == '1\\n'\nassert solution('aaa*') == '1\\n'\nassert solution('*aaa') == '1\\n'"
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution) == \"def solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n"
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\\n\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\\treturn pass\\n\""
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nXO\\nOX\\nOO\\nXO\\nOO\\n\") == 0\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nXO\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nXO\\nOX\\nOO\\nXO\\nOO\\n\") == 0"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 1"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"3 3\\nOO\\nXO\\nOO\\nXO\\nOO\\nOO\\n\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"1 1\\nOO\\nOO\\n\") == \"0\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"10 10\\nOO\\nOO\\n\") == \"0\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"1 1\\nOO\\nXO\\nOO\\n\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n') == '1'\nassert solution('3 3\\nOX\\nOX\\nOX\\nOX\\nOO\\nOO\\n') == '0'\n\nfrom typing import List\n"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == \"1\"\nassert solution(\"4 2\\nX\\nO\\nO\\nO\\nO\\nO\\nO\\nO\\n\") == \"0\""
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n') == 1\nassert solution('5 2\\nXO\\nXO\\nXO\\nXO\\nOO\\nXO\\nOO\\n') == 0"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1, \"Expected 1, got {}\".format(solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\"))"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n') == '1\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution('4 3\\nXXO\\nXO\\nXO\\nOO\\n') == '0\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution('3 4\\nOXXO\\nO\\nO\\nOO\\n') == '0\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution('5 5\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\nOOOOO\\"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == \"1\\n\"\nassert solution(\"3 2\\nXO\\nOX\\nXO\\nXO\\nXO\\nOO\\nXO\\nOO\\n\") == \"0\\n\"\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nXO\\nXO\\nOO\\nXO\\nOO\\n\") == \"1\\n\"\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nXO\\nXO\\nOO\\nXO\\nOO\\n\") == \"0\\n\""
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\""
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt').read()) == \"16\\n\"\n"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n2 0\\n0 2\\n-2 0') == '16', 'The given example should output 16'"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n2 0\\n0 2\\n-2 0') == '16\\n'\n"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1), \"1\""
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2 0\\n0 2\\n-2 0\\n0 -2\") == 16\nassert solution(\"5\\n5 0\\n0 5\\n0 0\\n-5 5\\n0 -5\") == 25"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n2 0\\n0 2\\n-2 0') == '16'"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"16\", \"Your code is correct.\""
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2\\n') == '16'\n"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '16\\n', \"Your code is incorrect\""
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\\n\"\nassert solution(\"3\\n2 1\\n1 2\\n-1 2\") == \"6\\n\"\nassert solution(\"2\\n1 1\\n2 1\\n-2 1\") == \"1\\n\"\nassert solution(\"3\\n1 1\\n1 2\\n-1 2\") == \"5\\n\"\nassert solution(\"1\\n1 1\\n1 1\\n-1 1\") == \"0\\n\"\nassert solution(\"2\\n1 1\\n1 1\\n-1 1\") == \"2\\n\"\nassert solution(\"4\\n1 1\\n1 1\\n-1 1\") == \"1\\n\"\nassert solution(\"5\\n1 1\\n1 1\\n-1 1\") == \"3\\n\"\nassert solution(\"6\\n1 1\\n1 1\\n-1 1\") == \"5\\n\"\nassert solution(\"7\\n1 1\\n1 1\\n-1 1\") == \"7\\n\"\nassert solution(\"8\\n1 1\\n1 1\\n-1 1\") == \"11\\n\"\nassert solution(\"9\\n1 1\\n1 1\\n-1 1\") == \"13\\n\"\nassert solution(\"10\\n1 1\\n1 1\\n-1 1\") == \"17\\n\"\nassert solution(\"11\\n1 1\\n1 1\\n-1 1\") == \"19\\n\"\nassert solution(\"12\\n1 1\\n1 1\\n-1 1\") == \"23\\n\"\nassert solution(\"13\\n1 1\\n1 1\\n-1 1\") == \"29\\n\"\nassert solution(\"14\\n1 1\\n1 1\\n-1 1\") == \"31\\n\"\nassert solution(\"15\\n1 1\\n1 1\\n-1 1\") == \"37\\n\"\nassert solution(\"16\\n1 1\\n1 1\\n-1 1\") == \"41\\n\"\nassert solution(\"17\\n1 1\\n1 1\\n-1 1\") == \"43\\n\"\nassert solution(\"18\\n1 1\\n1 1\\n-1 1\") == \"47\\n\"\nassert solution(\"19\\n1 1\\n1 1\\n-1 1\") == \"53\\n\"\nassert solution(\"20\\n1 1\\n1 1\\n-1 1\") == \"59\\n\"\nassert solution(\"21\\n1 1\\n1 1\\n-1 1\") == \"61\\n\"\nassert solution(\"22\\n1 1\\n1 1\\n-1 1\") == \"67\\n\"\nassert solution(\"23\\n1 1\\n1 1\\n-1 1\") == \"71\\n\"\nassert solution(\"24\\n1 1\\n1 1\\n-1 1\") == \"73\\n\"\nassert solution(\"25\\n1 1\\n1 1\\n-1 1\") == \"79\\n\"\nassert solution(\"26\\n1 1\\n1 1\\n-1 1\") == \"83\\n\"\nassert solution(\"27\\n1 1\\n1 1\\n-1 1\") == \"89\\n\"\nassert solution(\"28\\n1 1\\n1 1\\n-1 1\") == \"97\\n\"\nassert solution(\"29\\n1 1\\n1 1\\n-1 1\") == \"101\\n\"\nassert solution(\"30\\n1 1\\n1 1\\n-1 1\") == \"103\\n\"\nassert solution(\"31\\n1 1\\n1 1\\n-1 1\") == \"107\\n\"\nassert solution(\"32\\n1 1\\n1 1\\n-1 1\") == \""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 10 50\\n8 8 2 -2\") == \"80\"\n"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 10 50\\n8 8 2 -2') == '80'"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 10 50\\n8 8 2 -2\") == \"80\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 10 50\\n8 8 2 -2\\n\") == \"80\"\nassert solution(\"4 10 50\\n8 8 2 0\\n\") == \"60\"\nassert solution(\"4 10 50\\n8 8 0 0\\n\") == \"0\"\nassert solution(\"4 10 50\\n0 0 0 0\\n\") == \"0\"\nassert solution(\"4 10 50\\n8 8 2 -2\\n8 8 2 0\\n\") == \"60\"\nassert solution(\"4 10 50\\n8 8 0 0\\n8 8 2 -2\\n\") == \"60\"\nassert solution(\"4 10 50\\n0 0 0 0\\n8 8 2 -2\\n8 8 2 0\\n\") == \"60\"\nassert solution(\"4 10 50\\n0 0 0 0\\n8 8 0 0\\n\") == \"0\"\nassert solution(\"4 10 50\\n0 0 0 0\\n0 0 0 0\\n\") == \"0\"\nassert solution(\"4 10 50\\n8 8 2 -2\\n8 8 2 0\\n8 8 0 0\\n8 8 2 -2\\n\") == \"60\"\nassert solution(\"4 10 50\\n8 8 0 0\\n8 8 2 -2\\n8 8 2 0\\n8 8 0 0\\n8 8 2 -2\\n\") == \"60\"\nassert solution(\"4 10 50\\n0 0 0 0\\n8 8 2 -2\\n8 8 2 0\\n8 8 0 0\\n8 8 2 -2\\n\") == \"60\"\nassert solution(\"4 10 50\\n0 0 0 0\\n8 8 0 0\\n8 8 2 -2\\n8 8 2 0\\n8 8 0 0\\n8 8 2 -2\\n\") == \"60\"\nassert solution(\"4 10 50\\n0 0 0 0\\n8 8 0 0\\n8 8 2 -2\\n8 8 2 0\\n8 8 0 0\\n8 8 2 -2\\n\") == \"60\"\n"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    4 10 50\n    8 8 2 -2\n    \"\"\"\n) == \"80\\n\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\"\n"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == '80', 'Expected output: 80'"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"80\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 10 50\\n8 8 2 -2\") == 80\nassert solution(\"4 10 50\\n8 8 2 -2\\n4 4 4 4 4\") == 1"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 3.0\n"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n    1 8\n    0 0 10 10\n    5 1\n    5 9\n    3\n    5 8\n    2 2\n    9 6\n\"\"\") == \"3.000000000\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 3.0\nprint(\"All tests passed!\")"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n''') == '3.000000000'"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n\") == \"3.000000000\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    1 8\n    0 0 10 10\n    5 1\n    5 9\n    3\n    5 8\n    2 2\n    9 6\n''') == '3.000000000'"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 3.0"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution())\\n\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n1 11\") == \"3.000000000\"\nassert solution(\"1 12\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10 10 10\\n10 10"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\\n\"\n"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\\n\") == \"1\\n\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n2 4\\n\") == \"2\\n\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n2 4\\n\") == \"2\\n\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n2 4\\n\") == \"3\\n\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n2 4\\n\") == \"4\\n\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n2 4\\n\") == \"5\\n\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n2 4\\n\") == \"6\\n\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n2 4\\n\") == \"7\\n\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n2 4\\n\") == \"8\\n\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n2 4\\n\") == \"9\\n\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n2 4\\n\") == \"10\\n\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n2 4\\n\") == \"11\\n\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n2 4\\n\") == \"12\\n\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n2 4\\n\") == \"13\\n\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n2 4\\n\") == \"14\\n\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n2 4\\n\") == \"15\\n\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n2 4\\n\") == \"16\\n\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n2 4\\n\") == \"17\\n\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n2 4\\n\") == \"18\\n\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n2 4\\n\") == \"19\\n\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n2 4\\n\") == \"20\\n\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n2 4\\n\") == \"21\\n\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n2 4\\n\") == \"22\\n\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n2 4\\n\") == \"23\\n\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n2 4\\n\") == \"24\\n\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n2 4\\n\") == \"25\\n\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n2 4\\n\") == \"26\\n\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n2 4\\n\") == \"27"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\\n\") == \"1\\n\""
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4') == 1\nassert solution('4 3\\n0 1 0 1\\n1 2\\n2 3\\n2 4') == 2\nassert solution('4 3\\n0 1 0 1\\n1 2\\n2 3\\n2 5') == 3\nassert solution('4 3\\n0 1 0 1\\n1 2\\n2 3\\n2 4') == 2\nassert solution('4 3\\n0 1 0 1\\n1 2\\n2 3\\n2 4') == 1\nassert solution('4 3\\n0 1 0 1\\n1 2\\n2 3\\n2 4') == 3\nassert solution('4 3\\n0 1 0 1\\n1 2\\n2 3\\n2 4') == 2"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\"\nassert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\\n\") == \"1\"\nassert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\\n\") == \"1\"\nassert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\"\nassert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\"\nassert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\"\nassert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\"\nassert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\"\nassert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\"\nassert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\"\nassert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\"\nassert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\"\nassert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\"\nassert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\"\nassert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\"\nassert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\"\nassert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\"\nassert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\"\nassert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\"\nassert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\"\nassert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\"\nassert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\"\nassert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\"\nassert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\"\nassert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\"\nassert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\"\nassert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\"\nassert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\"\nassert solution(\"4 3\\n0 1 0 "
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\\n\") == \"1\""
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 1\n"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\\n\") == \"1\""
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r').read()) == \"1\\n\"\n"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"Your code is incorrect. Expected output: {expected_output}, but got: {solution(stdin)}\"\n"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\") == 6.283185\nassert solution(\"10000 3\\n0 0\\n10000 10000\") == 1.0\n"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test case not passed.\""
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"6.283185\", \"Test failed\""
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\") == \"6.283185\""
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"6.283185\""
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\nr'''\n3 3\n0 0\n0 1\n1 0\n0 1\n0 2\n1 2\n''') == '6.283185'"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2') == '6.283185'"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\") == \"6.283185\""
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\nr'''\n3 3\n0 0\n0 1\n1 0\n0 1\n0 2\n1 2\n'''\n) == '6.283185'"
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"1 2 3\"\nassert solution(\"5\") == \"1 2 3 4 5\"\nassert solution(\"6\") == \"1 2 3 4 5 6\"\nassert solution(\"10\") == \"1 2 3 4 5 6 7 8 9 10\"\nassert solution(\"20\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1 2 3\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n\") == \"1 2 3\"\nassert solution(\"3\\n\") == \"1 2 3 4\"\nassert solution(\"4\\n\") == \"1 2 3 4 5\"\nassert solution(\"5\\n\") == \"1 2 3 4 5 6\"\nassert solution(\"6\\n\") == \"1 2 3 4 5 6 7\"\nassert solution(\"7\\n\") == \"1 2 3 4 5 6 7 8\"\nassert solution(\"8\\n\") == \"1 2 3 4 5 6 7 8 9\"\n"
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1 2 3\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == \"1 2 3\", \"Output should be 1 2 3\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='1\\n2') == '1 2 3', \"The solution should return the binary tree in the preorder traversal.\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1 2 3\"\nassert solution(\"5\") == \"1 2 4 5 3 6 7 8 9 10\"\nassert solution(\"10\") == \"1 2 3 4 5 6 7 8 9 10\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1 2 3\\n\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='1') == '1 2 3', \"1\"\nassert solution(stdin='2') == '1 2 3', \"2\"\nassert solution(stdin='3') == '1 2 3', \"3\"\nassert solution(stdin='4') == '1 2 4 3', \"4\"\nassert solution(stdin='5') == '1 2 4 8 12 3', \"5\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 4\\n1 2\\n1 3\\n2 4\\n3 4') == '1\\n1 2 3 4\\n'\nassert solution('4 0\\n') == ''\nassert solution('2 1\\n1 2\\n1 3\\n2 4\\n3 4') == '1\\n1 2 3 4\\n'\nassert solution('1 1\\n2 3\\n3 4\\n4 1') == ''"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n2 4\\n3 4\") == \"1\\n1 2 3 4\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n2 4\\n3 4\") == \"1\\n1 2 3 4\"\nassert solution(\"6 6\\n1 2\\n3 4\\n2 3\\n1 4\\n4 5\\n2 5\") == \"2\\n2 3 4 5\"\nassert solution(\"10 10\\n1 2\\n1 3\\n2 4\\n3 5\\n4 6\\n5 7\\n6 8\\n7 9\\n8 10\\n9 11\\n10 12\") == \"6\\n1 2 3 4 5 6 7 8 9 10 11 12\"\nassert solution(\"6 5\\n1 2\\n1 3\\n2 4\\n3 4\\n\") == \"\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\\n1 2 3 4\"\n"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n') == '1\\n1 2 3 4\\n'\n"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n2 4\\n3 4\") == \"1\\n1 2 3 4\"\nprint(\"All tests passed successfully.\")"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Expected {expected_output}, got {solution(stdin=input())}\"\n"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Test case {t+1} failed. Expected: {expected}, Received: {solution(input())}\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed: expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == \"1\\n\""
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input {input()}, expected output {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected_solution, f\"Expected solution to be {expected_solution}, but got {solution}\""
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"1\"\nassert solution(\"2 3\\n1 2\\n1 3\\n\") == \"2\"\nassert solution(\"5 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n4 5\\n\") == \"2\""
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"1\\n\"\nassert solution(\"3 4\\n1 2\\n2 3\\n3 4\\n\") == \"3\\n\"\nassert solution(\"4 2\\n1 2\\n2 3\\n3 4\\n\") == \"3\\n\"\nassert solution(\"5 4\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == \"3\\n\"\nassert solution(\"6 5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\") == \"3\\n\"\n"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '1\\n'"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n2 1\n1 2\n\"\"\") == \"1\\n\"\n\nassert solution(\"\"\"\n3 3\n1 2\n2 3\n3 1\n1 4\n4 2\n2 4\n\"\"\") == \"1\\n\""
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\\n\""
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"1\"\n"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2) == 45, \"Incorrect solution\""
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(2) == \"45\""
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2) == 45\n"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2) == 45, \"The supply for 2 digit lucky numbers should be 45.\"\n"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == \"45\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == 45\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2) == 45"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2) == 45, \"The given solution is incorrect.\""
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2) == 45"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2) == 45\n"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\\n\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 4\nassert solution(4) == 5\nassert solution(5) == 5\nassert solution(6) == 5\nassert solution(7) == 6"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 20 20\\n7 11 9 12 2') == 4, 'Incorrect solution'"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=r'''\n5 20 20\n7 11 9 12 2\n''') == '4'\n"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == 4\nassert solution(\"5 20 30\\n7 11 9 12 2\") == 2\nassert solution(\"5 20 50\\n7 11 9 12 2\") == 0\nassert solution(\"5 20 100\\n7 11 9 12 2\") == 1"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n5 20 20\n7 11 9 12 2\n''') == '4\\n'"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 20 20\\n7 11 9 12 2') == '4\\n'\nprint(\"All assertions passed!\")"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n') == '2\\n'\nassert solution('2 2\\njohn 2 harry potter\\nmary 3 harry potter\\n\\n\\n\\n\\n\\n') == '2\\n'\nassert solution('2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njanet 2 lord of the rings\\nlaura 1 lordoftherings\\n') == '2\\n'\nassert solution('2 2\\njohn 2 harry potter\\nmary 3 harry potter\\n\\n\\n\\n\\n\\n') == '2\\n'\nassert solution('2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njanet 2 lord of the rings\\nlaura 1 lordoftherings\\n') == '2\\n'\nassert solution('2 2\\njohn 2 harry potter\\nmary 3 harry potter\\n\\n\\n\\n\\n\\n') == '2\\n'\nassert solution('2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njanet 2 lord of the rings\\nlaura 1 lordoftherings\\n') == '2\\n'\nassert solution('2 2\\njohn 2 harry potter\\nmary 3 harry potter\\n\\n\\n\\n\\n\\n') == '2\\n'\nassert solution('2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njanet 2 lord of the rings\\nlaura 1 lordoftherings\\n') == '2\\n'\nassert solution('2 2\\njohn 2 harry potter\\nmary 3 harry potter\\n\\n\\n\\n\\n\\n') == '2\\n'\nassert solution('2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njanet 2 lord of the rings\\nlaura 1 lordoftherings\\n') == '2\\n'\nassert solution('2 2\\njohn 2 harry potter\\nmary 3 harry potter\\n\\n\\n\\n\\n\\n') == '2\\n'\nassert solution('2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njanet 2 lord of the rings\\nlaura 1 lordoftherings\\n') == '2\\n'\nassert solution('2 2\\njohn 2 harry potter\\nmary 3 harry potter\\n\\n\\n\\n\\n\\n') == '2\\n'\nassert solution('2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njanet 2 lord of the rings\\nlaura 1 lordoftherings\\n') == '2\\n'\nassert solution('2 2\\njohn 2 harry potter\\nmary 3 harry potter\\n\\n\\n\\n\\n\\n') == '2\\n'\nassert solution('2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njanet 2 lord of the rings\\nlaura 1 lordoftherings\\n') == '2\\n'\nassert solution('2 2\\njohn 2 harry potter\\nmary 3 harry potter\\n\\n\\n\\n\\n\\n') == '2\\n'\nassert solution('2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njanet 2 lord of the rings\\nlaura 1 lordoftherings\\n') == '2\\n'\nassert solution('2 2\\njohn 2 harry potter\\nmary 3 h"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\\n\"\nassert solution(\"2 2\\njohn 1 louise\\ncharlie 1 lordoftherings\\nkenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\\n\"\nassert solution(\"2 2\\njohn 1 louise\\nbrian 1 brian\\ncharlie 1 lordoftherings\\nkenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\\n\"\nassert solution(\"2 2\\njohn 1 louise\\nbrian 1 brian\\ncharlie 1 lordoftherings\\nkenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\\n\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\\n\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\"\nassert solution(\"1 1\\nAlice 1\\nBob 2\\nCharlie 1\\nDavid 3\\nEve 1\\nFrank 2\\nGeorge 3\\nHannah 4\\nIvan 5\\nJack 2\\nKate 1\\nLaura 5\\nMike 4\\nNancy 3\\nOlivia 2\\nPeter 1\\nQuincy 4\\nSarah 3\\nSam 2\\nSophie 1\\nTina 5\\nVictor 4\\nWendy 3\\nZoe 2\\n\") == \"2\"\nassert solution(\"1 1\\nAlice 1\\nBob 2\\nCharlie 1\\nDavid 3\\nEve 1\\nFrank 2\\nGeorge 3\\nHannah 4\\nIvan 5\\nJack 2\\nKate 1\\nLaura 5\\nMike 4\\nNancy 3\\nOlivia 2\\nPeter 1\\nQuincy 4\\nSarah 3\\nSam 2\\nSophie 1\\nTina 5\\nVictor 4\\nWendy 3\\nZoe 2\\n\") == \"3\"\n"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\\n\"\nassert solution(\"1 2\\njohn 1 louisiana\\nemma 1 laurentides\\njulia 1 lucas\\nmia 1 mia\") == \"2\\n\"\nassert solution(\"3 3\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\nmark 2 lordoftruth\\npeter 3 kinglear\\nnancy 4 williamhill\") == \"3\\n\"\n"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\"\nassert solution(\"2 2\\njohn 1 harrypotter1\\ncharlie 1 lordoftherings\\nkenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\nkenny 1 harrypotter1\\nlaura 1 lordoftherings\"\nassert solution(\"2 2\\njohn 1 harrypotter1\\ncharlie 1 lordoftherings\\nkenny 1 harrypotter1\\nmary 1 lordoftherings\") == \"2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\nkenny 1 harrypotter1\\nmary 1 lordoftherings\"\nassert solution(\"2 2\\nhenry 1 harrypotter1\\ncharlie 1 lordoftherings\\nkenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\nkenny 1 harrypotter1\\nlaura 1 lordoftherings\"\nassert solution(\"2 2\\nhenry 1 harrypotter1\\ncharlie 1 lordoftherings\\nkenny 1 harrypotter1\\njoe 1 lordoftherings\") == \"2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\nkenny 1 harrypotter1\\njoe 1 lordoftherings\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\\n\"\nassert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 2 lordoftherings\") == \"2\\n\"\nassert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 2 lordoftherings\\ngraham 2 lover\") == \"2\\n\"\nassert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 2 lordoftherings\\ngraham 2 lover\\nmark 1 lover\") == \"3\\n\"\nassert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 2 lordoftherings\\nmark 1 lover\\ngraham 2 lover\") == \"3\\n\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n\") == \"2\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\"\nassert solution(\"5 3\\nAlice 1 book1\\nBob 2 book2\\nCharlie 1 book3\\nDavid 1 book4\\nEve 2 book5\\n\") == \"3\""
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=solution.py) == \"2 1\""
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2 1\"\n"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin: str) == '''\n2 1\n'''"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='1\\n01') == '2 1'"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1\\n01') == '2 1'\nassert solution('2\\n10\\n00\\n01\\n00\\n11\\n01\\n00\\n11\\n11\\n11\\n11\\n01\\n10\\n11\\n01\\n00\\n01\\n00\\n00\\n11\\n01\\n00\\n00\\n11\\n00\\n11\\n01\\n10\\n01\\n00\\n01\\n00\\n00\\n01\\n00\\n01\\n00\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n01\\n\") == \"2 1\"\nassert solution(\"2\\n01\\n0\\n0\\n01\\n\") == \"1 1\"\nassert solution(\"3\\n01\\n0\\n0\\n01\\n1\\n1\\n\") == \"2 1\"\nassert solution(\"4\\n01\\n0\\n0\\n01\\n1\\n1\\n1\\n1\\n\") == \"2 1\"\nassert solution(\"5\\n01\\n0\\n0\\n01\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"2 1\"\nassert solution(\"6\\n01\\n0\\n0\\n01\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"2 1\"\nassert solution(\"7\\n01\\n0\\n0\\n01\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"2 1\"\nassert solution(\"8\\n01\\n0\\n0\\n01\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"2 1\"\nassert solution(\"9\\n01\\n0\\n0\\n01\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"2 1\"\nassert solution(\"10\\n01\\n0\\n0\\n01\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"2 1\"\nassert solution(\"11\\n01\\n0\\n0\\n01\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"2 1\"\nassert solution(\"12\\n01\\n0\\n0\\n01\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"2 1\"\nassert solution(\"13\\n01\\n0\\n0\\n01\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"2 1\"\nassert solution(\"14\\n01\\n0\\n0\\n01\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"2 1\"\nassert solution(\"15\\n01\\n0\\n0\\n01\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\", \"Your code is incorrect. Please check the code and try again.\""
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n01') == '2 1'"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {i+1} failed\"\nfor i, expected_output in enumerate(test_cases):\n    assert solution(stdin) == expected_output, f\"Test case {i+1} failed\"\n"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Solution: {solution(input())}, Output: {output}\\nInput: {input()}\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n----\\n2233\\n2233\\n1111\\n\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '4 3\\n2123\\n1012\\n2123'"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12') == '4 3\\n2123\\n1012\\n2123\\n----\\n2233\\n2233\\n1111'\nassert solution('5\\n2 3\\n321\\n1 2\\n1 3\\n1 4\\n1 5') == '6 5\\n321\\n1111\\n321\\n----\\n4444\\n4444\\n3333'\nassert solution('6\\n3 4\\n123\\n4 5\\n6 7\\n8 9') == '7 6\\n123\\n987\\n123\\n----\\n5555\\n5555\\n4444'\nassert solution('7\\n4 5\\n234\\n5 6\\n7 8\\n9 10') == '8 7\\n234\\n891\\n234\\n----\\n6666\\n6666\\n5555'\nassert solution('8\\n5 6\\n345\\n6 7\\n8 9\\n10 11') == '9 8\\n345\\n980\\n345\\n----\\n7777\\n7777\\n6666'"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n----\\n2233\\n2233\\n1111\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12') == '4 3\\n2123\\n1012\\n2123\\n\\n2233\\n2233\\n1111\\n'"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"4 3\\n2123\\n1012\\n2123\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n----\\n2233\\n2233\\n1111\"\nassert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n----\\n2233\\n2233\\n1111\"\nassert solution(\"5\\n5 5\\n1234567890\\n1234567890\\n1234567890\\n1234567890\") == \"25 25\\n1234567890\\n1234567890\\n1234567890\\n1234567890\"\nassert solution(\"4\\n2 2\\n1234\\n2345\\n3456\\n4567\\n5678\\n6789\\n7890\") == \"4 4\\n1234\\n2345\\n3456\\n4567\\n5678\\n6789\\n7890\""
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_data) == expected_output\n"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '''\natk\nfreetype\nglib2\nlibattr\nlibjpeg\npcre\ngrep\nvim-common\nxorg-x11-libs\npango\nzlib\nlibtiff\ngtk2\nvim-X11\n''', \"The solution is incorrect\"\n\nsolution_code = '''\n"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin: str) == \"atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2\\nvim-X11\\n\""
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution\nfrom typing import List"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2\\nvim-X11\"\n"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin.readlines()) == ['atk', 'freetype', 'glib2', 'libattr', 'libjpeg', 'pcre', 'grep', 'vim-common', 'xorg-x11-libs', 'pango', 'zlib', 'libtiff', 'gtk2', 'vim-X11']\n"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2\\nvim-X11\""
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2\\nvim-X11\"\n"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution:\n    pass"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2\\nvim-X11\""
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('32 20') == '16\\n'"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"32 20\") == \"16\", \"Your solution is incorrect.\""
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Solution does not return the expected output. Please make sure to add the required function signature and the solution code.\""
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"32 20\") == \"16\", \"Incorrect output\""
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('32 20') == '16', 'The correct output is \"16\".'\nassert solution('100 1') == '10', 'The correct output is \"10\".'"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"32 20\") == \"16\\n\", \"Error: Expected output: 16\\nActual output: \" + solution(\"32 20\")"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"32 20\") == \"16\\n\"\n"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"32 20\") == \"16\""
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"32 20\") == \"16\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"3 4\\n....\\n.#.#\\n....\\n\"\n) == \"5 13\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"5 3\\n....\\n.#.#\\n....\\n\"\n) == \"3 5\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"10 10\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n...."
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 4\\n....\\n.#.#\\n....') == '5 13\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n....\\n.#.#\\n....\") == \"5 13\"\n"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\nr\"\"\"\n3 4\n....\n.#.#\n....\n\"\"\") == \"5 13\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\nr\"\"\"\n5 5\n.##.\n...#\n"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 4\\n....\\n.#.#\\n....') == '5 13'\nprint('All test cases pass')"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '5 13'"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(r'3 4\n....\n.#.#\n....') == '5 13'\n"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '5 13'"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n....\\n.#.#\\n....\\n\") == \"5 13\"\n"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected_solution, f\"Solution does not match expected output: got '{solution}', expected '{expected_solution}'\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\"\nassert solution(\"1 3 5 1\\n2 3 4 1\\n3 2? 0\\n4 1? 0\") == \"6\"\nassert solution(\"2 1 6 1\\n3 1 5 1\\n4 2 4 1\\n5 3? 0\") == \"7\"\nassert solution(\"3 1 9 1\\n4 2 8 1\\n5 3 7 1\\n6 4? 0\") == \"8\"\nassert solution(\"4 1 10 1\\n5 2 9 1\\n6 3 8 1\\n7 4 7 1\") == \"9\"\nassert solution(\"5 1 11 1\\n6 2 10 1\\n7 3 9 1\\n8 4 8 1\\n9 5? 0\") == \"10\"\nassert solution(\"6 1 12 1\\n7 2 11 1\\n8 3 10 1\\n9 4 9 1\\n10 5 8 1\\n11 6? 0\") == \"11\"\nassert solution(\"7 1 13 1\\n8 2 12 1\\n9 3 11 1\\n10 4 10 1\\n11 5 9 1\\n12 6 8 1\\n13 7? 0\") == \"12\"\nassert solution(\"8 1 14 1\\n9 2 13 1\\n10 3 12 1\\n11 4 11 1\\n12 5 10 1\\n13 6 9 1\\n14 7 8 1\\n15 8? 0\") == \"13\"\nassert solution(\"9 1 15 1\\n10 2 14 1\\n11 3 13 1\\n12 4 12 1\\n13 5 11 1\\n14 6 10 1\\n15 7 9 1\\n16 8 8 1\\n17 9? 0\") == \"14\"\nassert solution(\"10 1 16 1\\n11 2 15 1\\n12 3 14 1\\n13 4 13 1\\n14 5 12 1\\n15 6 11 1\\n16 7 10 1\\n17 8 9 1\\n18 9 8 1\\n19 10? 0\") == \"15\"\nassert solution(\"11 1 17 1\\n12 2 16 1\\n13 3 15 1\\n14 4 14 1\\n15 5 13 1\\n16 6 12 1\\n17 7 11 1\\n18 8 10 1\\n19 9 9 1\\n20 10 8 1\\n21 11? 0\") == \"16\"\nassert solution(\"12 1 18 1\\n13 2 17 1\\n14 3 16 1\\n15 4 15 1\\n16 5 14 1\\n17 6 13 1\\n18 7 12 1\\n19 8 11 1\\n20 9 10 1\\n21 10 9 1\\n22 11 8 1\\n23 12? 0\") == \"17\"\nassert solution(\"13 1 19 1\\n14 2 18 1\\n15 3 17 1\\n16 4 16 1\\n1"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == solution  # Test case 1: Same output for all inputs."
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '5\\n'"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n3 3\n1 2 5 1\n2 3 3 1\n3 1? 0\n''') == '5\\n'"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\\n\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '5\\n', \"Expected: 5\\nGot: {}\\n\".format(solution())"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"5\\n\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"5\\n\"\nprint(\"pass\")"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\\n\"\nassert solution(\"3 2\\n2 3 4 0\\n2 4 3 0\\n3 1? 0\") == \"4\\n\""
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == \"0\\n\"\n"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"0\"\n"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == \"0\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3\\n-1 0\\n-1 1\\n0 1') == '0'\n"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == \"0\"\n"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == \"0\"\n"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == \"0\\n\"\nassert solution(\"3 4\\n-1 0\\n-1 1\\n0 1\") == \"2\\n\"\nassert solution(\"4 5\\n-1 0\\n-1 1\\n0 1\") == \"4\\n\""
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == \"0\""
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '0', 'Test failed'"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"0\\n\"  # expected output: \"0\\n\""
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(b'4\\n9 6 2 4') == '6\\n'\nassert solution(b'3\\n1 2 3') == '3\\n'\nassert solution(b'5\\n9 6 2 4') == '6\\n'\nassert solution(b'5\\n8 7 6 5') == '12\\n'\n"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"6\\n\""
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\").read()) == \"6\\n\"\n"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_data) == expected_output, f\"Test failed with input {input_data}, expected output {expected_output}\""
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1, 2, 3, 4, 5) == 6\nassert solution(1, 2, 3, 4, 5) == 6"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '6'\n"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n9 6 2 4\") == \"6\\n\""
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"6\", \"Your code is incorrect.\""
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n9 6 2 4\") == \"6\\n\"\nassert solution(\"1\\n1\") == \"1\\n\"\nassert solution(\"100\\n2 3 4 5\") == \"100\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"10\\n\"\nassert solution(\"2\\n4\") == \"2\\n\""
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n9 6 2 4\") == \"6\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\nassert solution(\"10\\n10\") == \"10\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\nassert solution(\"100\\n999\") == \"100\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\nassert solution(\"1000\\n9999\") == \"1000\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\n"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1 1 3 2\\n2 5 1\") == \"2.000000\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2.000000\"\n"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1 1 3 2\\n2 5 1\") == \"2.000000\"\nassert solution(\"2 1 1 1000000000 2\") == \"9999999999999999.999999\"\nassert solution(\"1000000000 1000000000\") == \"10000000000000000.000000\"\nassert solution
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 1 1 3 2\\n2 5 1') == '2.000000'\nassert solution('2 5 1') == '2.000000'\nassert solution('2 1 1 3 2\\n2 10 2') == '4.000000'\nassert solution('2 5 2') == '3.000000'\nassert solution('2 1 1 3 2\\n2 0 0') == '0.000000'\nassert solution('2 5 1\\n2 1 1') == '2.000000'\nassert solution('2 1 1 3 2\\n2 1 0') == '0.000000'"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1 1 3 2\\n2 5 1\") == \"2.000000\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1 1 3 2\\n2 5 1\") == \"2.000000\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 1 1 3 2\\n2 5 1') == 2.000000\n"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"2 1 1 3 2\\n2 5 1\") == \"2.000000\"\nassert solution(stdin=\"2 1 1 3 2\\n2 5 1\") == \"2.000000\"\nassert solution(stdin=\"2 1 1 3 2\\n2 5 1\") == \"2.000000\"\nassert solution(stdin=\"2 1 1 3 2\\n2 5 1\") == \"2.000000\"\nassert solution(stdin=\"2 1 1 3 2\\n2 5 1\") == \"2.000000\"\nassert solution(stdin=\"2 1 1 3 2\\n2 5 1\") == \"2.000000\"\nassert solution(stdin=\"2 1 1 3 2\\n2 5 1\") == \"2.000000\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1 1 3 2\\n2 5 1\") == \"2.000000\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 1 1 3 2\\n2 5 1') == 2.000000\nassert solution('2 1 1 3 2\\n2 5 1') == 2.000000"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(read_input()) == \"96\\n\", \"Expected output: 96\\nActual output: {}\".format(solution(read_input()))\n"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == expected_output, f\"Test failed for sample input {sample_input}\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2\\n2 3\\n4\\n1 2\\n1 3\\n1 4\\n\") == \"96\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"96\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"96\", \"Expected output is 96, but got: \" + str(solution(3))"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '96', \"Test case 1 failed\"\n\nassert solution() == '2400', \"Test case 2 failed\"\n\nassert solution() == '44800', \"Test case 3 failed\"\n\nassert solution() == '902000', \"Test case 4 failed\"\n\nassert solution() == '12600000', \"Test case 5 failed\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"96\" # Your solution should return 96"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"96\\n\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2\\n2 3\\n4\\n1 2\\n1 3\\n1 4\") == \"96\"  # Corrected"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 96\nassert solution() == 125"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Solution is incorrect. Expected: {expected_output}, Actual: {solution(input())}\""
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\\n\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\") == 0\nassert solution(\"2\") == 1\nassert solution(\"3\") == 4\nassert solution(\"4\") == 10\nassert solution(\"5\") == 21"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Expected: {}, Received: {}\".format(output(), solution(input()))"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"3\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Solution {solution.__name__}() should return {expected}, but returned {solution(input())}\""
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 3\n"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 8\\n3 1\\n1 4\") == \"10\\n10\\n9\"\nassert solution(\"1\\n100\\n100\") == \"100\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 8\\n3 1\\n1 4\") == \"10\\n10\\n9\\n\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: expected {expected_output}, got {solution(input())}\"\n"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 8\\n3 1\\n1 4\") == \"10\\n10\\n9\\n\"\n"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == expected_output, f\"Test failed for the given input and output.\\nInput: {input_data}\\nOutput: {expected_output}\\n\"\n"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"10\\n10\\n9\"\n"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == output, \"Test case failed\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 8\\n3 1\\n1 4\") == \"10\\n10\\n9\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 8\\n3 1\\n1 4\") == \"10\\n10\\n9\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 8\\n3 1\\n1 4') == '10\\n10\\n9'"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 4\\n####\\n#JF#\\n#..#\\n#..#\\n') == '3'\n"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 4\\n####\\n#JF#\\n#..#\\n#..#\\n') == '3\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4 4\n####\n"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n4 4\n####\n"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\"\nassert solution(\"5 5\\n###\\n#..#\\n#..#\\n#..#\") == \"IMPOSSIBLE\"\nassert solution(\"10 10\\n.###\\n#..#\\n#..#\\n#..#\") == \"3\""
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n4 4\n####\n"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n2\\n1 1\\n"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 0.3333333333, \"The probability that the Explosion removes all the opponent's minions is incorrect.\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 0.3333333333, \"Test Failed\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"0.3333333333\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"0.3333333333\\n\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 2 2\\n2\\n1 1\\n') == '0.3333333333\\n'\n"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\\n\") == \"0.3333333333\\n0.6666666667\\n\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 0.3333333333"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 0.3333333333  # replace with your solution\n"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(None) == \"0.3333333333\"  # correct answer\n\nfrom random import randint"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected output {sample_output}, but got {solution(sample_input)}\"\n\nsample_input = \"\"\"\n10\n1\n\"\"\"\nsample_output = 1023"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10\\n1') == '1023'"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 1023\n"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 1023"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\n1\\n\") == \"1023\"\nassert solution(\"10\\n
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1023\", \"Invalid input\"\n"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1023\"\nprint(\"Test passed\")"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('test_data.txt', 'r').read()) == '1023\\n'"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 1023 # Change this to your implementation"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1023\"\n"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6\\n\", \"Test Failed\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='2 2') == '6'\nassert solution(stdin='1 1') == '0'\nassert solution(stdin='5 5') == '243'\nassert solution(stdin='3 3') == '12'\nassert solution(stdin='0 0') == '0'"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"2 2\\n\") == \"6\\n\"\nassert solution(stdin=\"10 10\\n\") == \"1000000000\\n\"\nassert solution(stdin=\"1 1\\n\") == \"0\\n\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '6\\n'"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"6\\n\", \"The function should return 6 but instead returned {}\".format(solution(\"2 2\"))\nassert solution(\"3 2\") == \"16\\n\", \"The function should return 16 but instead returned {}\".format(solution(\"3 2\"))\nassert solution(\"4 2\") == \"24\\n\", \"The function should return 24 but instead returned {}\".format(solution(\"4 2\"))\nassert solution(\"5 2\") == \"36\\n\", \"The function should return 36 but instead returned {}\".format(solution(\"5 2\"))\nassert solution(\"6 2\") == \"52\\n\", \"The function should return 52 but instead returned {}\".format(solution(\"6 2\"))\n"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n\") == \"6\\n\"\nassert solution(\"3 3\\n\") == \"6\\n\"\nassert solution(\"4 4\\n\") == \"12\\n\"\nassert solution(\"5 5\\n\") == \"18\\n\"\nassert solution(\"6 6\\n\") == \"24\\n\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"2 2\\n\"\n) == \"6\\n\", \"The output should be 6, but got: {}\".format(solution(\n    \"2 2\\n\"\n))"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"0 10\") == \"0\"\nassert solution(\"1 2\") == \"3\"\nassert solution(\"3 4\") == \"7\"\nassert solution(\"5 6\") == \"10\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"4 3\") == \"6\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 5\") == \"1\"\nassert solution(\"7 7\") == \"3\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n\") == \"6\\n\", \"Input: '2 2'\\nOutput: '6'\\n\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(1000) + \" \" + str(2000) + \" \" + str(7)) == \"2930\", \"Your solution is incorrect.\"\nassert solution(str(1000) + \" \" + str(2000) + \" \" + str(7)) == \"2930\", \"Your solution is incorrect.\"\nassert solution(str(100) + \" \" + str(200) + \" \" + str(7)) == \"288\", \"Your solution is incorrect.\"\nassert solution(str(1000) + \" \" + str(1400) + \" \" + str(7)) == \"3080\", \"Your solution is incorrect.\"\nassert solution(str(1000) + \" \" + str(1500) + \" \" + str(7)) == \"3240\", \"Your solution is incorrect.\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_str) == output_str, f\"Test case {i+1} failed\"\nfor i, input_str, output_str in [\n    (\n        \"1000 2000 7\",\n        \"2930\",\n        \"2930\",\n    ),\n    (\n        \"1000 2000 7\",\n        \"Impossible\",\n        \"Impossible\",\n    ),\n]:\n    solution(input_str)\n    solution(input_str)"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '2930\\n'\n"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n\") == \"2930\\n\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n3000\\n\") == \"Impossible\\n\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n4000\\n\") == \"Impossible\\n\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n3000\\n1500\\n\") == \"Impossible\\n\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2930\", \"The given input is invalid.\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Expected '{output}', got '{solution(input())}'\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2930\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2930\\n\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n\") == \"2930\\n\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n1000\\n1400\\n1500\\n\") == \"2930\\n\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n1000\\n1400\\n1500\\n1000\\n1400\\n1500\\n\") == \"Impossible\\n\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2930\\n\", \"Expected output: 2930\\nGot: \" + solution(stdin) + \"\\n\"\n\nimport math"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\n\nSolution:\nThe Introspective Caching Algorithm is an algorithm that provides an optimal cache for objects in a distributed system. It works as follows:\n\n1. Initialize a cache with an empty dictionary and a cache size of 1.\n2. Read an object from the input and store it in the cache.\n3. Remove the object from the cache if it is not accessed for a certain period of time (default: 10 minutes).\n4. If the cache is full, remove the object with the least number of accesses.\n5. Repeat steps 2-4 until all objects are accessed.\n\nTo implement this algorithm in Python, we can use the built-in Python library `collections.defaultdict` and a counter to keep track of the number of accesses. Here's the code:\n\n```python\nfrom collections import defaultdict\nimport time"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"10000 100000 3\\n0\\n1\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"3\"\nassert solution(\"10000 100000 3\\n0\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"3\"\nassert solution(\"10000 100000 3\\n0\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"2\"\nassert solution(\"10000 100000 3\\n0\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"3\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '2'"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(str(input())) == \"2\", \"The output of the given code is not 2. Please check your code and try again.\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '2' # expected output: 2"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == \"Input Error\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\") == \"10\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\") == 10"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2') == '10\\n'\nassert solution('5 5\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n') == '10\\n'\nassert solution('5 5\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n2 2 2 2 2\\n') == '20\\n'\nassert solution('1 1\\n-1 -1\\n') == '0\\n'\nassert solution('5 5\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n2 2 2 2 2\\n3 3 3 3 3\\n') == '100\\n'\n"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 10, \"Your implementation of the solution is incorrect.\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\") == \"10\\n\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 10, \"Your solution is incorrect.\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_data) == output_data, f\"Test case {case_number} failed.\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\") == \"10\\n\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == output, \"Test failed\"\n"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"10\\n\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n\") == \"3100\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 3100, \"The solution should return 3100, but instead it returns {}\".format(solution)"
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_data) == output_data, f\"Your solution is not correct. Please check the given input and output data.\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_str) == output_str, f\"Test failed: Expected '{output_str}', got '{solution(input_str)}'.\" for input_str, output_str in zip(input_list, expected_output_list)"
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300') == 3100"
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n\") == \"3100\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_data) == output_data, f\"Solution did not match expected output. Input: {input_data}, Output: {output_data}\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n') == '3100\\n'\n\nassert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n') == '3100\\n'\n\nassert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n') == '3100\\n'\n\nassert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n') == '3100\\n'"
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n') == '3100'"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == sample_output, f\"Test failed for the following reason: {sample_input}\""
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\\n0 1\\n0 2\\n1 0\\n1 2\\n2 0\\n2 1\\n0 2\\n0 3\\n1 3\\n2 3\\n3 0\\n3 1\\n0 3\\n0 4\\n1 4\\n2 4\\n3 4\\n4 0\\n4 1\\n1 4\\n1 5\\n2 5\\n3 5\\n4 5\\n5 0\\n5 1\\n0 5\\n0 6\\n1 6\\n2 6\\n3 6\\n4 6\\n5 6\") == \"0\\n\", \"Test case 1 failed.\"\nassert solution(\"2 1\\n1 0\\n1 2\\n2 0\\n2 1\\n3 0\\n3 1\\n4 0\\n4 1\\n5 0\\n5 1\\n6 0\\n6 1\\n7 0\\n7 1\\n8 0\\n8 1\\n9 0\\n9 1\\n10 0\\n10 1\\n0 10\\n10 2\\n11 2\\n12 2\\n13 2\\n14 2\\n15 2\\n16 2\\n17 2\\n18 2\\n19 2\\n20 2\\n21 2\\n22 2\\n23 2\\n24 2\\n25 2\\n26 2\\n27 2\\n28 2\\n29 2\\n30 2\\n31 2\\n32 2\\n33 2\\n34 2\\n35 2\\n36 2\\n37 2\\n38 2\\n39 2\\n40 2\\n41 2\\n42 2\\n43 2\\n44 2\\n45 2\\n46 2\\n47 2\\n48 2\\n49 2\\n50 2\\n51 2\\n52 2\\n53 2\\n54 2\\n55 2\\n56 2\\n57 2\\n58 2\\n59 2\\n60 2\\n61 2\\n62 2\\n63 2\\n64 2\\n65 2\\n66 2\\n67 2\\n68 2\\n69 2\\n70 2\\n71 2\\n72 2\\n73 2\\n74 2\\n75 2\\n76 2\\n77 2\\n78 2\\n79 2\\n80 2\\n81 2\\n82 2\\n83 2\\n84 2\\n85 2\\n86 2\\n87 2\\n88 2\\n89 2\\n90 2\\n91 2\\n92 2\\n93 2\\n94 2\\n95 2\\n96 2\\n97 2\\n98 2\\n99 2\\n100 2\\n101 2\\n102 2\\n103 2\\n104 2\\n105 2\\n106 2\\n107 2\\n108 2\\n109 2\\n110 2\\n111 2\\n112 2\\n113 2\\n114 2\\n115 2\\n116 2\\n117 2\\n118 2\\n119 2\\n120 2\\n121 2\\n122 2\\n123 2\\n124 2\\n125 2\\n12"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 0, \"The solution is incorrect\""
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\\n0 1\\n\") == \"0\\n\"\nassert solution(\"2 2\\n0 1\\n0 2\\n\") == \"0\\n\"\nassert solution(\"2 3\\n0 1\\n0 2\\n0 3\\n\") == \"0\\n\"\nassert solution(\"3 2\\n0 1\\n0 2\\n0 3\\n0 4\\n\") == \"0\\n\"\nassert solution(\"3 3\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n\") == \"0\\n\"\nassert solution(\"3 4\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n0 6\\n\") == \"0\\n\"\nassert solution(\"4 3\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n0 6\\n0 7\\n\") == \"0\\n\"\nassert solution(\"4 4\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n0 6\\n0 7\\n0 8\\n\") == \"0\\n\"\nassert solution(\"5 4\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n0 6\\n0 7\\n0 8\\n0 9\\n\") == \"0\\n\"\nassert solution(\"5 5\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n0 6\\n0 7\\n0 8\\n0 9\\n0 10\\n\") == \"0\\n\"\nassert solution(\"5 6\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n0 6\\n0 7\\n0 8\\n0 9\\n0 10\\n0 11\\n\") == \"0\\n\"\nassert solution(\"5 7\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n0 6\\n0 7\\n0 8\\n0 9\\n0 10\\n0 11\\n0 12\\n\") == \"0\\n\"\nassert solution(\"5 8\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n0 6\\n0 7\\n0 8\\n0 9\\n0 10\\n0 11\\n0 12\\n0 13\\n\") == \"0\\n\"\nassert solution(\"5 9\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n0 6\\n0 7\\n0 8\\n0 9\\n0 10\\n0 11\\n0 12\\n0 13\\n0 14\\n\") == \"0\\n\"\nassert solution(\"5 10\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n0 6\\n0 7\\n0 8\\n0 9\\n0 10\\n0 11\\n0 12\\n0 13\\n0 14\\n0 15\\n\") == \"0\\n\"\nassert solution(\"6 5\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n0 6\\n0 7\\n0 8\\n0 9\\n0 10\\n0 11\\n0 12\\n0 13\\n0 14\\n0 15\\n0 16\\n\") == \"0\\n\"\nassert solution(\"6 6\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n0 6\\n0 7\\n0 8\\n0 9\\n0 10\\n0 "
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n0 1\") == 0\nassert solution(\"3 1\\n0 2\\n0 3\\n1 3\") == 2\nassert solution(\"3 2\\n1 3\\n2 3\\n3 4\") == 4\nassert solution(\"3 4\\n2 3\\n1 2\\n3 3\") == 6\nassert solution(\"4 2\\n2 3\\n1 2\\n3 3\\n3 4\") == 8\nassert solution(\"4 2\\n3 4\\n1 3\\n2 3\\n2 4\") == 9\nassert solution(\"5 3\\n2 4\\n2 5\\n1 5\\n3 4\\n4 5\") == 10\nassert solution(\"5 3\\n3 4\\n3 5\\n3 6\\n2 6\\n4 5\") == 13\nassert solution(\"6 4\\n3 5\\n3 6\\n4 6\\n5 6\\n6 7\") == 14\nassert solution(\"7 5\\n4 6\\n4 7\\n5 7\\n6 7\\n7 8\") == 16\nassert solution(\"8 6\\n4 7\\n4 8\\n5 8\\n6 8\\n7 8\\n8 9\") == 18\nassert solution(\"9 7\\n5 8\\n5 9\\n6 9\\n7 9\\n8 9\\n9 10\") == 20\nassert solution(\"10 8\\n6 9\\n6 10\\n7 10\\n8 10\\n9 10\\n10 11\") == 21\nassert solution(\"10 8\\n7 10\\n7 11\\n8 11\\n9 11\\n10 11\\n11 12\") == 23\nassert solution(\"12 9\\n8 10\\n8 12\\n9 12\\n10 12\\n11 12\\n12 13\") == 26\nassert solution(\"12 9\\n9 12\\n9 13\\n10 13\\n11 13\\n12 13\\n13 14\") == 27\nassert solution(\"13 10\\n10 12\\n10 14\\n11 14\\n12 14\\n13 14\\n14 15\") == 29\nassert solution(\"14 11\\n11 13\\n11 15\\n12 15\\n13 15\\n14 15\\n15 16\") == 30\nassert solution(\"15 12\\n12 14\\n12 16\\n13 16\\n14 16\\n15 16\\n16 17\") == 32\nassert solution(\"16 13\\n13 15\\n13 17\\n14 17\\n15 17\\n16 17\\n17 18\") == 33\nassert solution(\"17 14\\n14 16\\n14 18\\n15 18\\n16 18\\n17 18\\n18 19\") == 35\nassert solution(\"18 15\\n15 17\\n15 19\\n16 19\\n17 19\\n18 19\\n19 20\") == 36\nassert solution(\"19 16\\n16 18\\n16 20\\n17 20\\n18 20\\n19 20\\n20 21\") == 38\nassert solution(\"20 17\\n17 19\\n17 21\\n18 21\\n19 21\\n20"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n0 1\") == \"0\\n\"\nassert solution(\"2 2\\n0 0\") == \"0\\n\"\nassert solution(\"2 3\\n0 1\") == \"1\\n\"\nassert solution(\"3 1\\n0 0\") == \"3\\n\"\nassert solution(\"3 3\\n0 2\") == \"2\\n\"\nassert solution(\"3 4\\n1 0\") == \"4\\n\""
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n2 1\n0 1\n''') == '0\\n'\n\nassert solution('''\n2 2\n0 1\n1 2\n''') == '1\\n'\n\nassert solution('''\n2 2\n0 1\n1 0\n''') == '2\\n'\n\nassert solution('''\n2 2\n0 1\n1 1\n''') == '3\\n'\n\nassert solution('''\n2 2\n0 1\n1 2\n2 3\n''') == '4\\n'"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == \"0\\n\""
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0\""
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n0 1\\n0 2\\n1 0\\n2 1\\n0 3\\n1 2\\n2 3\\n3 2\\n3 4\\n4 3\\n4 5\\n\") == \"0\"\nassert solution(\"1 2\\n1 3\\n1 4\\n1 5\\n2 1\\n2 3\\n2 5\\n3 5\\n4 5\\n\") == \"2\"\nassert solution(\"1 5\\n1 4\\n2 3\\n2 4\\n3 4\\n4 3\\n4 2\\n4 1\\n5 1\\n\") == \"0\"\n"
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"10\"\n"
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 10\") == 10\nassert solution(\"7 10\") == 5"
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 10, \"Expected 10, but got {}\".format(solution())"
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == output\n"
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"10\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 10\") == \"10\\n\"\n"
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 10\") == \"10\\n\"  # sample output explanation"
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == \"\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 10\n"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\") == \"0\"\nassert solution(\"0 0\\n20001 0\\n0 20001\\n20001 20001\") == \"0\"\nassert solution(\"1 1\\n0 0\\n1 1\\n1 1\") == \"0\"\nassert solution(\"1 1\\n2 1\\n1 1\\n1 1\") == \"1\"\nassert solution(\"1 1\\n0 0\\n1 2\\n2 1\") == \"1\"\nassert solution(\"1 1\\n0 0\\n1 1\\n3 1\") == \"1\"\nassert solution(\"1 1\\n0 0\\n2 1\\n3 1\") == \"1\"\nassert solution(\"1 1\\n0 0\\n1 1\\n1 1\") == \"0\""
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '0\\n'\n"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"0\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\") == 0\nassert solution(\"0\\n1001\\n1000\\n0\\n1000\\n1001\") == 0\nassert solution(\"1000\\n0\\n1001\\n1000\\n0\\n1000\\n1001\") == 2\nassert solution(\"0 0\\n0 1000\\n1000 1000\\n-20000 0\\n-20000 20000\") == 0\nassert solution(\"0 0\\n0 1000\\n1000 1000\\n-20000 -10000\\n20000 10000\") == 2\n"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '0', \"Your solution should return 0\"\n"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 0, \"your code is not correct\"\n"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\") == 0\nassert solution(\"2 4\\n-5000 0\\n5000 5000\") == 2\nassert solution(\"2 4\\n-5000 -5000\\n5000 5000\") == 5\nassert solution(\"2 4\\n1000 -1000\\n-1000 1000\") == 4\nassert solution(\"2 4\\n-5000 5000\\n5000 -5000\") == 0\n\nfrom typing import List"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"1\\n0 0\\n1000 0\\n0 1000\\n1000 1000\") == 0, \"Expected 0, got {}\".format(solution(stdin=\"1\\n0 0\\n1000 0\\n0 1000\\n1000 1000\"))\nassert solution(stdin=\"2\\n1000 0\\n0 1000\\n1000 1000\") == 0, \"Expected 0, got {}\".format(solution(stdin=\"2\\n1000 0\\n0 1000\\n1000 1000\"))\nassert solution(stdin=\"3\\n0 0\\n1000 0\\n0 1000\\n1000 1000\") == 1, \"Expected 1, got {}\".format(solution(stdin=\"3\\n0 0\\n1000 0\\n0 1000\\n1000 1000\"))\nassert solution(stdin=\"4\\n0 0\\n1000 0\\n0 1000\\n1000 1000\") == 1, \"Expected 1, got {}\".format(solution(stdin=\"4\\n0 0\\n1000 0\\n0 1000\\n1000 1000\"))\nassert solution(stdin=\"5\\n0 0\\n1000 0\\n0 1000\\n1000 1000\") == 2, \"Expected 2, got {}\".format(solution(stdin=\"5\\n0 0\\n1000 0\\n0 1000\\n1000 1000\"))\nassert solution(stdin=\"6\\n0 0\\n1000 0\\n0 1000\\n1000 1000\") == 2, \"Expected 2, got {}\".format(solution(stdin=\"6\\n0 0\\n1000 0\\n0 1000\\n1000 1000\"))\nassert solution(stdin=\"7\\n0 0\\n1000 0\\n0 1000\\n1000 1000\") == 3, \"Expected 3, got {}\".format(solution(stdin=\"7\\n0 0\\n1000 0\\n0 1000\\n1000 1000\"))\nassert solution(stdin=\"8\\n0 0\\n1000 0\\n0 1000\\n1000 1000\") == 3, \"Expected 3, got {}\".format(solution(stdin=\"8\\n0 0\\n1000 0\\n0 1000\\n1000 1000\"))\nassert solution(stdin=\"9\\n0 0\\n1000 0\\n0 1000\\n1000 1000\") == 4, \"Expected 4, got {}\".format(solution(stdin=\"9\\n0 0\\n1000 0\\n0 1000\\n1000 1000\"))\nassert solution(stdin=\"10\\n0 0\\n1000 0\\n0 1000\\n1000 1000\") == 4, \"Expected 4, got {}\".format(solution(stdin=\"10\\n0 0\\n1000 0\\n0 1000\\n1000 1000\"))\nassert solution(stdin=\"11\\n0 0\\n1000 0\\n0 1000\\n1000 1000\") == 5, \"Expected 5, got {}\".format(solution(stdin=\"11\\n0 0\\n1000 0\\n0 1000\\n1000 1000\"))\nassert solution(stdin=\"12\\n0 0\\n1000 0\\n0 1000\\n1"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\") == 0\nassert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\\n1000 0\") == 3\n"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\") == 0"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '''0.500000000 1.000000000'''\n"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '0.500000000 1.000000000'"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n0 1 0.5\\n\") == \"0.500000000 1.000000000\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == ['0.500000000 1.000000000']"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 1\\n0 1 0.5') == '0.500000000 1.000000000'"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n0 1 0.5\") == \"0.500000000 1.000000000\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '0.500000000 1.000000000'"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n0 1 0.5\\n\") == \"0.500000000 1.000000000\\n\"\nassert solution(\"1 1\\n0 1 0.5\\n\") == \"0.500000000 1.000000000\\n\"\nassert solution(\"3 1\\n0 1 0.5\\n\") == \"-1 -1\\n\"\nassert solution(\"3 1\\n0 1 0.5\\n\") == \"-1 -1\\n\"\nassert solution(\"4 1\\n0 1 0.5\\n\") == \"0.500000000 1.000000000\\n\"\nassert solution(\"4 1\\n0 1 0.5\\n\") == \"0.500000000 1.000000000\\n\"\nassert solution(\"1 1\\n0 1 0.5\\n\") == \"-1 -1\\n\"\nassert solution(\"2 1\\n0 1 0.5\\n\") == \"-1 -1\\n\"\nassert solution(\"2 1\\n0 1 0.5\\n\") == \"-1 -1\\n\"\nassert solution(\"2 1\\n0 1 0.5\\n\") == \"-1 -1\\n\"\nassert solution(\"2 1\\n0 1 0.5\\n\") == \"-1 -1\\n\"\nassert solution(\"2 1\\n0 1 0.5\\n\") == \"-1 -1\\n\"\nassert solution(\"2 1\\n0 1 0.5\\n\") == \"-1 -1\\n\"\nassert solution(\"2 1\\n0 1 0.5\\n\") == \"-1 -1\\n\"\nassert solution(\"2 1\\n0 1 0.5\\n\") == \"-1 -1\\n\"\nassert solution(\"2 1\\n0 1 0.5\\n\") == \"-1 -1\\n\"\nassert solution(\"2 1\\n0 1 0.5\\n\") == \"-1 -1\\n\"\nassert solution(\"2 1\\n0 1 0.5\\n\") == \"-1 -1\\n\"\nassert solution(\"2 1\\n0 1 0.5\\n\") == \"-1 -1\\n\"\nassert solution(\"2 1\\n0 1 0.5\\n\") == \"-1 -1\\n\"\nassert solution(\"2 1\\n0 1 0.5\\n\") == \"-1 -1\\n\"\nassert solution(\"2 1\\n0 1 0.5\\n\") == \"-1 -1\\n\"\nassert solution(\"2 1\\n0 1 0.5\\n\") == \"-1 -1\\n\"\nassert solution(\"2 1\\n0 1 0.5\\n\") == \"-1 -1\\n\"\nassert solution(\"2 1\\n0 1 0.5\\n\") == \"-1 -1\\n\"\nassert solution(\"2 1\\n0 1 0.5\\n\") == \"-1 -1\\n\"\nassert solution(\"2 1\\n0 1 0.5\\n\") == \"-1 -1\\n\"\nassert solution(\"2 1\\n0 1 0.5\\n\") == \"-1 -1\\n\"\nassert solution(\"2 1\\n0 1 0.5\\n\") == \"-1 -1\\n\"\nassert solution(\"2 1\\n0 1 0.5\\n\") == \"-1 -1\\n\"\nassert solution(\"2 1\\n0 1 0.5\\n\") == \"-1 -1\\n\"\nassert solution(\"2 1\\n0 1 0.5\\n\") == \"-1 -1\\n\"\nassert solution(\"2 1\\n0 1 0.5\\n\") == \"-1 -1\\n\"\nassert solution(\"2 1\\n0 1 0.5\\n\") == \"-1 -1\\n\"\nassert solution(\"2 1\\n0 1 0.5\\n\") == \"-1 -1\\n\"\n"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0.500000000 1.000000000\", \"Testcase failed\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n0 1 0.5\\n\") == \"0.500000000 1.000000000\""
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\"\n"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"7\"\nprint(\"You're on the right track.\")"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == 7\nassert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 9\") == 7\nassert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == 10\nassert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == 7\nassert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == 7"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10') == '7\\n'\nprint('Test Passed')"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\\n\"\nassert solution(\"10\\n3 4\\n5 2\\n7 9\\n8 5\\n9 3\\n10 5\\n11 3\") == \"11\\n\"\nassert solution(\"7\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\\n\""
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\\n\") == \"7\\n\""
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10') == '7\\n'\n"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\\n\"\nassert solution(\"8\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"7\"\nassert solution() == \"7\""
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\\n\") == \"7\\n\"\n"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\") == \"9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\\n\") == \"9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\n"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\") == [\n    \"9-b\",\n    \"8-a\",\n]"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case 1\\nstdin = \"a b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\"\\nassert solution(stdin) == \"9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case 2\\nstdin = \"a b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\"\\nassert solution(stdin) == \"8-a\\n9-b\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case 3\\nstdin = \"a b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\"\\nassert solution(stdin) == \"8-a\\n9-b\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case 4\\nstdin = \"a b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\"\\nassert solution(stdin) == \"9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case 5\\nstdin = \"a b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\"\\nassert solution(stdin) == \"8-a\\n9-b\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case 6\\nstdin = \"a b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\"\\nassert solution(stdin) == \"9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case 7\\nstdin = \"a b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\"\\nassert solution(stdin) == \"9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case 8\\nstdin = \"a b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\"\\nassert solution(stdin) == \"9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case 9\\nstdin = \"a b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\"\\nassert solution(stdin) == \"9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case 10\\nstdin = \"a b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\"\\nassert solution(stdin) == \"9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case 11\\nstdin = \"a b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\"\\nassert solution(stdin) == \"9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case 12\\nstdin = \"a b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\"\\nassert solution(stdin) == \"9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case 13\\nstdin = \"a b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\"\\nassert solution(stdin) == \"9-b\\n8-a\\ndef solution(stdin"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == '9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test Failed\""
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\") == \"9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"a b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\") == \"9-b\\n8-a\"\nassert solution(\"a b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\\n2\\naba\\nbba\\n0\") == \"9-b\\n8-a\"\nassert solution(\"a b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\\n2\\naba\\nbba\\n0\\n2\\naba\\nbba\\n0\") == \"9-b\\n8-a\""
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3246R3246\", \"Incorrect solution\"\n"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n'\n                 'echo\\n'\n                 '1\\n'\n                 'echoecho\\n'\n                 'Sample Input: 1\\n'\n                 'echo\\n'\n                 '1\\n'\n                 'echoecho\\n'\n                 'Sample Output: 3246R3246\\n'\n                 'def solution(stdin: str) -> str:\\n'\n                '   pass\\n'\n                '   return \"Hello, World!\"') == '3246R3246'"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\necho\\n1\\nechoecho\") == \"3246R3246\\ndef solution(stdin: str) -> str:\\npass\\n\"\n\nassert solution(\"1\\nhello\\n1\\nworld\\n2\\npython\\n1\\napple\\n1\\nbanana\\n3\\ncat\\n2\\ndog\\n1\\nzebra\\n4\\napple\\n1\\nbanana\\n1\\nbanana\\n5\\nelephant\\n6\\nzebra\\n7\\nzebra\\n8\\nzebra\\n9\\nzebra\\n10\\nzebra\\n11\\nzebra\\n12\\nzebra\\n13\\nzebra\\n14\\nzebra\\n15\\nzebra\\n16\\nzebra\\n17\\nzebra\\n18\\nzebra\\n19\\nzebra\\n20\\nzebra\\n21\\nzebra\\n22\\nzebra\\n23\\nzebra\\n24\\nzebra\\n25\\nzebra\\n26\\nzebra\\n27\\nzebra\\n28\\nzebra\\n29\\nzebra\\n30\\nzebra\\n31\\nzebra\\n32\\nzebra\\n33\\nzebra\\n34\\nzebra\\n35\\nzebra\\n36\\nzebra\\n37\\nzebra\\n38\\nzebra\\n39\\nzebra\\n40\\nzebra\\n41\\nzebra\\n42\\nzebra\\n43\\nzebra\\n44\\nzebra\\n45\\nzebra\\n46\\nzebra\\n47\\nzebra\\n48\\nzebra\\n49\\nzebra\\n50\\nzebra\\n51\\nzebra\\n52\\nzebra\\n53\\nzebra\\n54\\nzebra\\n55\\nzebra\\n56\\nzebra\\n57\\nzebra\\n58\\nzebra\\n59\\nzebra\\n60\\nzebra\\n61\\nzebra\\n62\\nzebra\\n63\\nzebra\\n64\\nzebra\\n65\\nzebra\\n66\\nzebra\\n67\\nzebra\\n68\\nzebra\\n69\\nzebra\\n70\\nzebra\\n71\\nzebra\\n72\\nzebra\\n73\\nzebra\\n74\\nzebra\\n75\\nzebra\\n76\\nzebra\\n77\\nzebra\\n78\\nzebra\\n79\\nzebra\\n80\\nzebra\\n81\\nzebra\\n82\\nzebra\\n83\\nzebra\\n84\\nzebra\\n85\\nzebra\\n86\\nzebra\\n87\\nzebra\\n88\\nzebra\\n89\\nzebra\\n90\\nzebra\\n91\\nzebra\\n92\\nzebra\\n93\\nzebra\\n94\\nzebra\\n95\\nzebra\\n96\\nzebra\\n97\\nzebra\\n98\\nzebra\\n99\\nzebra\\n100\\nzebra\\n101\\nzebra\\n102\\nzebra\\n103\\nzebra\\n104\\nzebra\\n105\\nzebra\\n106\\nzebra\\n107\\nzebra\\n108\\nzebra\\n109\\nzebra\\n110\\nzebra\\n111\\nzebra\\n112\\nzebra\\n113\\nzebra\\n114\\nzebra\\n115\\nzebra\\n116\\nzebra\\n"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\necho\\n1\\nechoecho\") == \"3246R3246\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(solution) == '3246R3246'"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\necho\\n1\\nechoecho\") == \"3246R3246\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"1\\nabc\\n2\\ndef\\n3\\nghi\\n4\\njkl\\n5\\mno\\n6\\npqr\\n7\\stuv\\n8\\wxyz\\n9\\z\") == \"21R21\\nabc\\ndefghi\\njklmno\\npqrstuv\\nxyz\\n\\n\""
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\necho\\n1\\nechoecho\") == \"3246R3246\"\nassert solution(\"1\\nspam\\n2\\nspamspam\\n2\\napples\\n3\\ngrape\\n4\\nbananas\\n5\\nfig\\n6\\ncherry\\n7\\nsweet\\n8\\nlemon\\n9\\ngrapefruit\\n10\\nkiwi\\n11\\norange\\n12\\npineapple\\n13\\nbanana\\n14\\ncherry\\n15\\ngrapefruit\\n16\\nkiwi\\n17\\noak\\n18\\nbanana\\n19\\nkiwi\\n20\\norange\\n21\\npineapple\\n22\\ngrapefruit\\n23\\nbanana\\n24\\nbanana\\n25\\ngrapefruit\\n26\\nbanana\\n27\\nbanana\\n28\\nbanana\\n29\\nbanana\\n30\\nbanana\\n31\\nbanana\\n32\\nbanana\\n33\\nbanana\\n34\\nbanana\\n35\\nbanana\\n36\\nbanana\\n37\\nbanana\\n38\\nbanana\\n39\\nbanana\\n40\\nbanana\\n41\\nbanana\\n42\\nbanana\\n43\\nbanana\\n44\\nbanana\\n45\\nbanana\\n46\\nbanana\\n47\\nbanana\\n48\\nbanana\\n49\\nbanana\\n50\\nbanana\\n51\\nbanana\\n52\\nbanana\\n53\\nbanana\\n54\\nbanana\\n55\\nbanana\\n56\\nbanana\\n57\\nbanana\\n58\\nbanana\\n59\\nbanana\\n60\\nbanana\\n61\\nbanana\\n62\\nbanana\\n63\\nbanana\\n64\\nbanana\\n65\\nbanana\\n66\\nbanana\\n67\\nbanana\\n68\\nbanana\\n69\\nbanana\\n70\\nbanana\\n71\\nbanana\\n72\\nbanana\\n73\\nbanana\\n74\\nbanana\\n75\\nbanana\\n76\\nbanana\\n77\\nbanana\\n78\\nbanana\\n79\\nbanana\\n80\\nbanana\\n81\\nbanana\\n82\\nbanana\\n83\\nbanana\\n84\\nbanana\\n85\\nbanana\\n86\\nbanana\\n87\\nbanana\\n88\\nbanana\\n89\\nbanana\\n90\\nbanana\\n91\\nbanana\\n92\\nbanana\\n93\\nbanana\\n94\\nbanana\\n95\\nbanana\\n96\\nbanana\\n97\\nbanana\\n98\\nbanana\\n99\\nbanana\\n100\\nbanana\\n101\\nbanana\\n102\\nbanana\\n103\\nbanana\\n104\\nbanana\\n105\\nbanana\\n106\\nbanana\\n107\\nbanana\\n108\\nbanana\\n109\\nbanana\\n110\\nbanana\\n111\\nbanana\\n112\\nbanana\\n113\\nbanana\\n114\\nbanana\\n115\\nbanana\\n116\\nbanana\\n117\\nbanana\\n118\\nbanana\\n119\\nbanana\\n120\\nbanana\\n121\\nbanana\\n122\\nbanana\\n12"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test case failed. Please check your solution.\""
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, \"Test failed\"\n"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\necho\n1\nechoecho') == '3246R3246\\n'\n\nassert solution('1\necho\n1\nechoecho') == '1R1\\n'\n\nassert solution('1\necho\n1\necho') == '1R1\\n'"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 'YES\\n1 2\\n1 3'\n"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\") == \"YES\\n1 2\\n1 3\\n\"\n"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\") == \"YES\\n1 2\\n1 3\"\n"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 'YES\\n2\\n2'\n"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 1') == 'YES\\n1 2\\n1 3\\n'"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 'YES\\n1 2\\n1 3'\nassert solution() == 'NO'\nassert solution() == 'NO'\nassert solution() == 'NO'\nassert solution() == 'NO'"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\") == \"YES\\n1 2\\n1 3\"\n"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\") == \"YES\\n1 2\\n1 3\\n\"\nassert solution(\"4 2\") == \"NO\\n\"\nassert solution(\"5 2\") == \"YES\\n1 3\\n1 4\\n\"\nassert solution(\"3 4\") == \"YES\\n1 3\\n1 4\\n\""
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\") == \"YES\\n1 2\\n1 3\"\n"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 1) == 'YES\\n1 2\\n1 3'\n"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"176\"\nprint(\"All tests passed!\")\n"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == expected, f\"Wrong output. Expected: {expected}, got: {solution(input)}\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"176\"\nassert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n333333\") == \"176\"\nassert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n333333\\n333333\") == \"176\"\nassert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n333333\\n333333\\n333333\") == \"176\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 176, \"The correct answer is 176, but got {}\".format(solution())"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == 176\nassert solution(\"10\\n1\\n1000000\\n500000\\n500000\\n500000\\n500000\\n1000000\") == 0\nassert solution(\"10\\n1\\n1000000\\n500000\\n500000\\n500000\\n500000\\n1000000\") == 0\nassert solution(\"10\\n1\\n1000000\\n500000\\n500000\\n500000\\n500000\\n1000000\") == 0"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n') == 176, \"Incorrect output\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == 176"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output, f\"The solution is incorrect. Please check the function definition and input/output examples.\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333') == '176'"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5) == \"12\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == \"12\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == '12', \"Expected '12', got '{}'.\".format(solution(5))\nassert solution(123) == '123', \"Expected '123', got '{}'.\".format(solution(123))\nassert solution(1234) == '1234', \"Expected '1234', got '{}'.\".format(solution(1234))\nassert solution(479001600) == '016', \"Expected '016', got '{}'.\".format(solution(479001600))\nassert solution(479001601) == '016', \"Expected '016', got '{}'.\".format(solution(479001601))\nassert solution(479001602) == '016', \"Expected '016', got '{}'.\".format(solution(479001602))\nassert solution(479001603) == '016', \"Expected '016', got '{}'.\".format(solution(479001603))"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"12\\n\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(12) == '12'"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == \"12\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"12\"\nassert solution(\"1\") == \"00\"\nassert solution(\"10000000\") == \"000\"\nassert solution(\"123\") == \"016\"\nassert solution(\"12345\") == \"016\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5) == \"12\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == \"12\", \"The output is incorrect.\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"12\\n\", \"Test failed\""
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\nfor i in range(test_cases):\n    input_ = input().split()\n    n = int(input_[0])\n    k = int(input_[1])\n    sequence = input_[2]\n    operation_cost = [int(input_[3 + i]) for i in range(n)]\n    sequence = ''.join(sequence)\n\n    def balance_sequence(sequence):\n        stack = []\n        for char in sequence:\n            if char == '(':\n                stack.append(char)\n            elif char == ')':\n                if len(stack) == 0 or stack[-1] == '(':\n                    stack.pop()\n                else:\n                    stack[-1] = ')'\n\n        return ''.join(stack)\n\n    def change_sequence(sequence, operation_cost):\n        changed = False\n        for i, char in enumerate(sequence):\n            if char == '(':\n                sequence = sequence[:i] + ')' + sequence[i+1:]\n                changed = True\n            elif char == ')':\n                sequence = sequence[:i] + '(' + sequence[i+1:]\n                changed = True\n\n        return sequence, changed\n\n    def min_sum_of_effort(sequence):\n        balance_sequence(sequence)\n        return sum(operation_cost)\n\n    sequence = sequence[1:-1]  # Remove the opening and closing parentheses\n    sequence, changed = change_sequence(sequence, operation_cost)\n    balance_sequence(sequence)\n\n    min_effort = min_sum_of_effort(sequence)\n    if min_effort == 0:\n        print('?')\n    else:\n        print(min_effort)"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 1\\n(()\\n480\\n617\\n-570\\n928') == '480'"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 1\\n((()\\n480\\n617\\n-570\\n928\\n\") == 480, \"Test case 1 failed\")\nassert solution(\"5 3\\n(())\\n-5\\n-3\\n1\\n-9\\n\") == 110, \"Test case 2 failed\"\nassert solution(\"4 3\\n(())\\n-5\\n-3\\n1\\n-9\\n\") == 110, \"Test case 3 failed\"\nassert solution(\"4 4\\n(())\\n-5\\n-3\\n1\\n-9\\n\") == 110, \"Test case 4 failed\""
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 1\\n((()480617-570928\\n') == 480, \"Test case 1 failed\")\nassert solution('4 2\\n((()480617-570928\\n') == 540, \"Test case 2 failed\")\nassert solution('5 3\\n((()480617-570928\\n') == 800, \"Test case 3 failed\")\nassert solution('5 4\\n((()480617-570928\\n') == 1000, \"Test case 4 failed\")\nassert solution('6 5\\n((()480617-570928\\n') == 1200, \"Test case 5 failed\")\nassert solution('6 6\\n((()480617-570928\\n') == 1400, \"Test case 6 failed\")\nassert solution('7 7\\n((()480617-570928\\n') == 1600, \"Test case 7 failed\")\nassert solution('8 8\\n((()480617-570928\\n') == 1800, \"Test case 8 failed\")\nassert solution('9 9\\n((()480617-570928\\n') == 2000, \"Test case 9 failed\")\nassert solution('10 10\\n((()480617-570928\\n') == 2200, \"Test case 10 failed\")\nassert solution('10 11\\n((()480617-570928\\n') == 2400, \"Test case 11 failed\")\nassert solution('10 12\\n((()480617-570928\\n') == 2600, \"Test case 12 failed\")\nassert solution('10 13\\n((()480617-570928\\n') == 2800, \"Test case 13 failed\")\nassert solution('10 14\\n((()480617-570928\\n') == 3000, \"Test case 14 failed\")\nassert solution('10 15\\n((()480617-570928\\n') == 3200, \"Test case 15 failed\")\nassert solution('10 16\\n((()480617-570928\\n') == 3400, \"Test case 16 failed\")\nassert solution('10 17\\n((()480617-570928\\n') == 3600, \"Test case 17 failed\")\nassert solution('10 18\\n((()480617-570928\\n') == 3800, \"Test case 18 failed\")\nassert solution('10 19\\n((()480617-570928\\n') == 4000, \"Test case 19 failed\")\nassert solution('10 20\\n((()480617-570928\\n') == 4200, \"Test case 20 failed\")\nassert solution('10 21\\n((()480617-570928\\n') == 4400, \"Test case 21 failed\")\nassert solution('10 22\\n((()480617-570928\\n') == 4600, \"Test case 22 failed\")\nassert solution('10 23\\n((()480617-570928\\n') == 4800, \"Test case 23 failed\")\nassert solution('10 24\\n((()480617-570928\\n') == 5000, \"Test case 24 failed\")\n"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"480\\n\""
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('BruceAndBarry.in', 'r')) == 480\n\nfrom typing import List"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 1\\n(()\\n480\\n617\\n-570\\n928\\n') == 480)\nassert solution('4 1\\n(())\\n480\\n617\\n-570\\n928\\n') == 480)\nassert solution('4 1\\n(())\\n480\\n617\\n-570\\n928\\n') == 480)"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"480\", \"Test Case 1 Failed\"\nassert solution(stdin) == \"480\", \"Test Case 2 Failed\"\nassert solution(stdin) == \"480\", \"Test Case 3 Failed\"\nassert solution(stdin) == \"480\", \"Test Case 4 Failed\"\nassert solution(stdin) == \"480\", \"Test Case 5 Failed\""
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"480\""
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Test Case {tc_number} has an incorrect output\"\nfor tc_number in range(1, 2):\n    input(), expected = get_input(), get_expected()\n    solution = get_solution()\n    assert solution(input()) == expected, f\"Test Case {tc_number} has an incorrect output\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(input())) == \"2 4\\n5 6\\n7 8 9 10 11 12 13\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2 4\\n5 6\\n7 8 9 10 11 12 13\"\n"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Solution is incorrect. Expected: {expected_output}, Actual: {solution(input())}\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(stdin)}\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected output: {sample_output}, but got: {solution(sample_input)}\"\n\nfrom typing import List"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2 4\\n5 6\\n7 8 9 10 11 12 13\", \"Your solution is incorrect.\"\n"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12') == '2 4\\n5 6\\n7 8 9 10 11 12 13'\nprint(solution('')) # empty input should return no sets\nprint(solution('1\\n1 2 3')) # 1 set with room 1\nprint(solution('1\\n2\\n3')) # 1 set with rooms 1 and 2\nprint(solution('1\\n2\\n3\\n4')) # 1 set with rooms 1, 2, 3, and 4\nprint(solution('1\\n2\\n3\\n4\\n5')) # 1 set with rooms 1, 2, 3, 4, and 5\nprint(solution('1\\n2\\n3\\n4\\n5\\n6')) # 1 set with rooms 1, 2, 3, 4, and 5\nprint(solution('1\\n2\\n3\\n4\\n5\\n6\\n7')) # 1 set with rooms 1, 2, 3, 4, and 5\nprint(solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8')) # 1 set with rooms 1, 2, 3, 4, and 5\nprint(solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9')) # 1 set with rooms 1, 2, 3, 4, and 5\nprint(solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10')) # 1 set with rooms 1, 2, 3, 4, and 5\nprint(solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11')) # 1 set with rooms 1, 2, 3, 4, and 5\nprint(solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12')) # 1 set with rooms 1, 2, 3, 4, and 5\nprint(solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13')) # 1 set with rooms 1, 2, 3, 4, and 5\nprint(solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14')) # 1 set with rooms 1, 2, 3, 4, and 5\nprint(solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15')) # 1 set with rooms 1, 2, 3, 4, and 5\nprint(solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16')) # 1 set with rooms 1, 2, 3, 4, and 5\nprint(solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17')) # 1 set with rooms 1, 2, 3, 4, and 5\nprint(solution"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution(stdin)) == '2 4'\nprint('All test cases pass.')"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\\n\"\n"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\\n\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    5 5\n    1 2 3\n    1 4 8\n    2 3 12\n    3 5 4\n    4 5 2\n        ''') == '35 39 36 27 29\\n'\nassert solution('''\n    5 5\n    1 2 3\n    1 4 8\n    2 3 12\n    3 5 4\n    4 5 2\n        ''') == '35 39 36 27 29\\n'"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    5 5\n    1 2 3\n    1 4 8\n    2 3 12\n    3 5 4\n    4 5 2\n''') == '''\n    35 39 36 27 29\n'''"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\\n\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"35 39 36 27 29\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"35 39 36 27 29\\n\", \"The output should be 35 39 36 27 29.\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\""
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n3 2 1\") == \"0 672\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"5 4\\n4 2 1\\n2 2 3\") == \"304\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"5 4\\n4 2 1\\n2 2 3\\n4 2 1\\n2 2 3\") == \"629\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n3 2 1\") == \"0 672\""
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n3 2 1\") == \"0 672\""
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3\\n3 2 1') == '0 672'\nassert solution('3 3\\n2 1 1') == '0 671'\nassert solution('3 3\\n4 2 0') == '0 673'\nassert solution('3 3\\n1 1 1') == '0 671'"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 3) == (0, 672)\nassert solution(3, 2, 1) == (0, 672)\nprint(\"Test Passed\")"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '0 672'\n"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '0 672', 'Your code is incorrect. Please provide the correct solution.'"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"3 3\\n3 2 1\\n\") == 0\nassert solution(stdin=\"5 4\\n1 1 2 3\\n\") == 672\nassert solution(stdin=\"5 4\\n3 2 1\\n\") == 672\nassert solution(stdin=\"5 4\\n2 3 1\\n\") == 142\nassert solution(stdin=\"5 4\\n2 3 4\\n\") == 0\nassert solution(stdin=\"5 4\\n3 1\\n\") == 0\nassert solution(stdin=\"5 4\\n4\\n\") == 100003\n"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3\\n3 2 1') == '0 672'\n"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n3 2 1\") == 0 672, \"Solution is incorrect.\"\nprint(\"Solution is correct.\")"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == \"2.500000\"\n"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == \"2.500000\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2.500000\", \"The ACM car cannot switch to the rightmost lane. The maximum achievable safety factor is 2.5.\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 2.500000, \"The solution is incorrect\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 2.500000, \"The output is incorrect. Please check the examples and the input.\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == \"2.500000\\n\"\nassert solution(\"5 3 100\\n0 10 10\\n1 10 5\\n2 10 35\\n2 40 50\") == \"Impossible\\n\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Your solution is incorrect. Please see the sample input and output for the correctness test.\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == \"2.500000\"\nassert solution(\"4 4 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == \"Impossible\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '2.500000', \"The ACM car can switch from lane 0 to lane 3, which has the highest safety factor.\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == \"2.500000\\nImpossible\"\n"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(4) == \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(5) == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n5 3 4\") == \"3\"\nassert solution(\"4\\n3 2 1\") == \"2\"\nassert solution(\"5\\n1 1 1\") == \"1\"\nassert solution(\"6\\n5 2 5 4 3\") == \"6\"\nassert solution(\"7\\n10 5 2 6 5 6 2 3\") == \"9\""
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 3\nassert solution() == 1\nassert solution() == 0"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 3, \"The output is incorrect\""
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 3\nassert solution(5) == 5\nassert solution(6) == 6\nassert solution(7) == 7\nassert solution(10) == 10\nassert solution(100) == 100\nassert solution(1000) == 1000\nassert solution(10000) == 10000"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '3\\n' + 'def solution(stdin: str) -> str:\\n\\tpass\\n'\n"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n5 3 4\") == 3\nassert solution(\"6\\n1 2 3 4 5 6\") == 3\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == 3\nassert solution(\"15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\") == 3\nassert solution(\"20\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == 3"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n5 3 4\") == \"3\"\nassert solution(\"5\\n5 5 5\") == \"1\"\nassert solution(\"4\\n4 5 6\") == \"2\"\nassert solution(\"1\\n1 1 1\") == \"0\""
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    3\n    5 3 4\n    \"\"\"\n) == 3"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"3\\n3\\n\"\nassert solution(2) == \"1\\n\"\nassert solution(5) == \"3\\n\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1 1\") == \"2\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1 1\") == \"2\"\nassert solution(\"10 10 10\") == \"600\"\nassert solution(\"20 10 10\") == \"400\"\nassert solution(\"1000000000 1000000000 1000000000\") == \"900000000\"\nassert solution(\"1000000001 1000000001 1000000001\") == \"900000001\"\nassert solution(\"1000000000 1000000000 1000000000\") == \"900000001\"\nassert solution(\"1000000001 1000000001 1000000001\") == \"900000000\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\\n\", \"Incorrect output: Expected '2' but got '{}'.\".format(solution(stdin))"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(b'\\n') == '2\\n'\nassert solution(b'2\\n1\\n1\\n') == '2\\n'\nassert solution(b'2\\n1\\n1\\n') == '1\\n'\nassert solution(b'2\\n1\\n1\\n') == '0\\n'\nassert solution(b'2\\n1\\n1\\n') == '1\\n'"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1 1\") == 2"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 1 1') == '2\\n'\n"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) =="
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1 1\") == 2"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    2 1 1\n    \"\"\"\n) == \"2\""
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n1 3 5') == '7', 'Error: Expected output 7, but got \"{}\".'.format(solution('3\\n1 3 5'))\nassert solution('3\\n-2147483648 2147483647') == '-2147483647', 'Error: Expected output -2147483647, but got \"{}\".'.format(solution('3\\n-2147483648 2147483647'))\nassert solution('3\\n0 1 2') == '5', 'Error: Expected output 5, but got \"{}\".'.format(solution('3\\n0 1 2'))\nassert solution('3\\n0 0 0') == '0', 'Error: Expected output 0, but got \"{}\".'.format(solution('3\\n0 0 0'))"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 3 5\") == \"7\\n7\"\nassert solution(\"10\\n2 5 3 1 4\") == \"13\\n6\"\nassert solution(\"1\\n1000000\") == \"1000000\\n999998\"\nassert solution(\"10000\\n1\") == \"10000\\n999999\""
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('gunnar_password.txt', 'r')) == '7'"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 3 5\") == \"7\\n\" # correct output"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\na 1 3 5\\n\") == \"7\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == \"7\\n\""
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('gunnar.txt', 'r')) == \"7\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n1 3 5\\n') == '7\\n'\nassert solution('4\\n2 6 9\\n') == '16\\n'\nassert solution('5\\n4 8 10\\n') == '19\\n'\nassert solution('6\\n7 11 13\\n') == '27\\n'"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == \"7\\n\"\n"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '7'"
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == 'fred jetsons\\njohn jets\\nruth rockets\\nImpossible\\n', 'Expected: \"fred jetsons\\njohn jets\\nruth rockets\\nImpossible\"\\nGot: \"{}\"\\n'.format(solution(sample_input))"
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n\") == \"fred jetsons\\njohn jets\\nruth rockets\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"fred jetsons\\njohn jets\\nruth rockets\\nImpossible.\\n\", \"Your solution should return the expected output.\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r'2\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets') == 'fred jetsons\\njohn jets\\nruth rockets\\nImpossible.'\n\nassert solution(r'2\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\"
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=stdin) == 'fred jetsons\\njohn jets\\nruth rockets'\nassert solution(stdin=stdin) == 'fred jetsons\\njohn jets\\nruth rockets\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\") == \"fred jetsons\\njohn jets\\nruth rockets\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution\n"
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == 'fred jetsons\\njohn jets\\nruth rockets'\nassert solution(open('example.txt', 'r')) == 'fred jetsons\\njohn jets\\nruth rockets'\nprint('All test cases pass')"
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == \"Impossible.\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"fred jetsons\\nfred jetsons\\nruth rockets\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == [1, 2, 1]"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == ['1 2 1', '1 2 1']"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '1 2 1\\n' # Expected output: 1 2 1"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1 2 1\\n\", \"The output should be: 1 2 1\\n\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(r'3\\n4 3\\n-10 9\\n-2 3') == '1 2 1\\n'\n\nfrom typing import List"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1 2 1\", \"Test Case 1 Failed\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n3\n4 3\n-10 9\n-2 3\n\"\"\") == \"\"\"\n1 2 1\n\"\"\"\n\nassert solution(\n\"\"\"\n2\n3 3\n-10 9\n-2 3\n\"\"\") == \"\"\"\n0 0 0\n\"\"\"\n\nassert solution(\n\"\"\"\n5\n10 3\n-10 9\n-1 2\n-5 2\n-1 2\n\"\"\") == \"\"\"\n1 1 1 0 0\n\"\"\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_data) == expected_output, f\"Your solution does not match the expected output.\\nExpected output: {expected_output}\\nGot output: {solution(input_data)}\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Test case failed. Expected: {expected}, got: {solution(stdin)}\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"1 2 1\\n\" # your code goes here"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\") == \"2.125\"\n"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 2.125, \"Test Failed\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=None) == \"2.125\\n\"\n"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\") == \"2.125\\n\"\nassert solution(\"5\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\") == \"3.464\\n\"\nassert solution(\"6\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\") == \"4.812\\n\""
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\") == \"2.125\\n\""
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10') == '2.125'\n"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2.125\", \"Invalid output.\"\n"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 2.125, \"Expected output: 2.125, but got: \" + str(solution(3))\nassert solution(10) == 2.125, \"Expected output: 2.125, but got: \" + str(solution(10))\nassert solution(100) == 2.125, \"Expected output: 2.125, but got: \" + str(solution(100))\nassert solution(1000) == 2.125, \"Expected output: 2.125, but got: \" + str(solution(1000))\nassert solution(10000) == 2.125, \"Expected output: 2.125, but got: \" + str(solution(10000))\nassert solution(100000) == 2.125, \"Expected output: 2.125, but got: \" + str(solution(100000))\nassert solution(1000000) == 2.125, \"Expected output: 2.125, but got: \" + str(solution(1000000))\nassert solution(10000000) == 2.125, \"Expected output: 2.125, but got: \" + str(solution(10000000))\nassert solution(100000000) == 2.125, \"Expected output: 2.125, but got: \" + str(solution(100000000))"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n    4\n    1 1 7\n    3 2 3\n    5 1 4\n    6 10 10\n    ''') == '2.125\\n'\n"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2.125\\n', \"Please implement the solution function.\""
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '''\nmain.c\na.out\n"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() =='main.c\\na.out\\ndef'"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"*.c\", 4) == \"main.c\\na.out\\ndef\\n\"\nassert solution(\"abc.*\", 3) == \"abc.c\\n\"\nassert solution(\"*.*\", 2) == \"main.c\\na.out\\ndef\\n\"\nassert solution(\"*\", 1) == \"main.c\\na.out\\ndef\\n\"\nassert solution(\"foo\", 1) == \"foo\\n\"\n"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(f'''\n*.*\n4\nmain.c\na.out\nreadme\nyacc\n''') == ['main.c', 'a.out']"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"*.c\", 4) == [\"main.c\", \"a.out\"]\nassert solution(\"b*\", 4) == [\"b\", \"c\", \"d\"]\nassert solution(\"a*.b\", 5) == [\"a.b\"]\nassert solution(\"a.b*.c\", 5) == [\"a.b.c\"]\nassert solution(\"a.b*c*\", 5) == [\"a.b.c\"]"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"*.c\") == [\"main.c\", \"a.out\"]\nassert solution(\"abc.txt\") == []\nassert solution(\"abc*.txt\") == [\"abc.txt\"]\nassert solution(\"a*\") == [\"a.out\"]\nassert solution(\"a**\") == [\"a.out\", \"a.c\", \"a.h\", \"a.in\", \"a.txt\", \"abc.txt\", \"abc.c\", \"abc.h\", \"abc.in\", \"abc.txt\"]\nassert solution(\"a**\") == [\"a.out\", \"a.c\", \"a.h\", \"a.in\", \"a.txt\", \"abc.txt\", \"abc.c\", \"abc.h\", \"abc.in\", \"abc.txt\"]"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"main.c\\n\" + \"a.out\\n\" + \"def.py\\n\" + \"yacc\\n\"\nassert solution(\"*.c\") == \"main.c\\n\" + \"a.out\\n\"\nassert solution(\"*.\") == \"main.c\\n\" + \"a.out\\n\" + \"def.py\\n\" + \"yacc\\n\"\nassert solution(\"def\") == \"def.py\\n\" + \"yacc\\n\""
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''*.*\n4\nmain.c\na.out\nreadme\nyacc''') == ['main.c', 'a.out', 'def']\nassert solution('''*.*\n4\nmain.c\na.out\nreadme\nyacc''') == ['def']\nassert solution('''*.*\n4\nmain.c\na.out\nreadme\nyacc''') == ['main.c', 'a.out', 'def']\nassert solution('''*.*\n4\nmain.c\na.out\nreadme\nyacc''') == ['main.c', 'a.out', 'def', 'yacc']\nassert solution('''*.*\n4\nmain.c\na.out\nreadme\nyacc''') == ['main.c', 'a.out', 'def', 'yacc']"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"*.c\") == [\"main.c\", \"a.out\"]\nassert solution(\"y*\") == [\"yacc\"]\nassert solution(\"*.\") == [\"main.c\", \"a.out\", \"yacc\"]\nassert solution(\"*.c a.*\") == [\"main.c\", \"a.out\"]\nassert solution(\"abc.def\") == []"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"*.c\") == \"main.c\"\nassert solution(\"*.c, *.h\") == \"main.c, readme.h\"\nassert solution(\"*.c, *.h, *.cc\") == \"main.c, readme.h, yacc.cc\"\nassert solution(\"*.*\") == \"main.c, a.out, readme.h, yacc.cc\"\nassert solution(\"*.*, *.c\") == \"main.c, a.out, readme.h, yacc.cc\""
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '0.500000\\n'"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n0.500000\\n\") == \"0.500000\\n\""
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 1\\n0.500000') == '0.500000\\n'\nassert solution('1 2\\n0.499990\\n0.500010\\n') == '0.499990\\n0.500010\\n'\nassert solution('1 3\\n0.500000\\n0.500000\\n0.500000') == '0.500000\\n0.500000\\n0.500000\\n'\nassert solution('1 4\\n0.500000\\n0.500000\\n0.500000\\n0.500000') == '0.500000\\n0.500000\\n0.500000\\n0.500000\\n'\nassert solution('1 5\\n0.500000\\n0.500000\\n0.500000\\n0.500000\\n0.500000') == '0.500000\\n0.500000\\n0.500000\\n0.500000\\n0.500000\\n'\nassert solution('1 6\\n0.500000\\n0.500000\\n0.500000\\n0.500000\\n0.500000\\n0.500000') == '0.500000\\n0.500000\\n0.500000\\n0.500000\\n0.500000\\n0.500000\\n'\nassert solution('1 7\\n0.500000\\n0.500000\\n0.500000\\n0.500000\\n0.500000\\n0.500000\\n0.500000') == '0.500000\\n0.500000\\n0.500000\\n0.500000\\n0.500000\\n0.500000\\n0.500000\\n'\nassert solution('1 8\\n0.500000\\n0.500000\\n0.500000\\n0.500000\\n0.500000\\n0.500000\\n0.500000\\n0.500000') == '0.500000\\n0.500000\\n0.500000\\n0.500000\\n0.500000\\n0.500000\\n0.500000\\n0.500000\\n'\nassert solution('1 9\\n0.500000\\n0.500000\\n0.500000\\n0.500000\\n0.500000\\n0.500000\\n0.500000\\n0.500000\\n0.500000') == '0.500000\\n0.500000\\n0.500000\\n0.500000\\n0.500000\\n0.500000\\n0.500000\\n0.500000\\n0.500000\\n'\nassert solution('1 10\\n0.500000\\n0.5000"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n0.500000\") == \"0.500000\"\nprint(solution())"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n0.500000\") == \"0.500000\""
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n0.500000\\n\") == \"0.500000\\n\"\nassert solution(\"2 2\\n0.750000\\n0.250000\\n\") == \"0.700000\\n\"\nassert solution(\"1 1\\n0.500000\\n\") == \"0.500000\\n\"\nassert solution(\"3 1\\n0.750000\\n0.250000\\n0.125000\\n\") == \"0.500000\\n\"\nassert solution(\"3 1\\n0.750000\\n0.250000\\n0.125000\\n0.375000\\n0.250000\\n0.125000\\n\") == \"0.500000\\n\"\nassert solution(\"3 1\\n0.750000\\n0.250000\\n0.125000\\n0.375000\\n0.250000\\n0.125000\\n0.187500\\n\") == \"0.500000\\n\""
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0.500000\", \"Your solution is not correct!\""
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"0.500000\"\n"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n0.500000\") == \"0.500000\\n\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('0 49.9') == '0.0'"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0.499\") == 0.0\nassert solution(\"1.001\") == 0.0\nassert solution(\"0.9999\") == 0.0\nassert solution(\"0.99999\") == 0.0\nassert solution(\"0.5001\") == 0.0\nassert solution(\"0.50001\") == 0.0\n\nfrom math import ceil"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"0 49.9\\n\") == \"0.0\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"0.0\"\nprint(\"0.0\")"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 49.9\") == 0.0, \"Test case 1 failed\"\nassert solution(\"0.0 49.9\") == 0.0, \"Test case 2 failed\"\nassert solution(\"100 50\") == 0.0, \"Test case 3 failed\"\nassert solution(\"50 100\") == 0.0, \"Test case 4 failed\"\nassert solution(\"50 50\") == 2.0, \"Test case 5 failed\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 49.9\") == 0.0, \"Expected output: 0.0\"\n\nfrom decimal import Decimal"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 49.9\") == 0.0"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 49.9\") == \"0.0\"\n\nfrom decimal import Decimal"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 49.9\") == \"0.0\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"0.0\", \"Invalid output\"\n"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '4 1\\n2 1\\n3 2\\n1 3'\n"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '4 1\\n2 1\\n3 2\\n1 3\\n'\n"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(\"1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(\"1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(\"1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\"\n"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\"\n"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(\"1 2\\n2 3\\n3 1\\n4 5\") == \"4 5\\n2 1\\n3 2\\n1 3\"\nassert solution(\"1 2\\n2 3\\n3 4\\n4 2\") == \"4 2\\n2 1\\n3 4\\n1 3\"\nassert solution(\"1 2\\n2 3\\n3 4\\n4 3\") == \"4 3\\n2 1\\n3 4\\n1 3\"\nassert solution(\"1 2\\n2 3\\n3 4\\n4 4\") == \"4 4\\n2 1\\n3 4\\n1 3\"\nassert solution(\"1 2\\n2 3\\n3 4\\n4 5\") == \"4 5\\n2 1\\n3 4\\n1 3\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    4\n    1 2\n    2 3\n    3 1\n    4 1\n    \"\"\"\n) == \"\"\"\n4 1\n2 1\n3 2\n1 3\n\"\"\""
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\nassert solution(\"5 3\\n4 5 4 3\") == \"Infinity\"\nassert solution(\"1 2\\n1 1 1 1 1\") == \"Infinity\""
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\n"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n\") == 1, \"There should be exactly one possible solution.\"\n\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n\") == 0, \"There should be no possible solution.\""
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n') == '1\\n'"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\\n\"\n"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\nassert solution(\"6 5\\n2 1 6 3 5 4\\n1 2 5 3 5\") == \"infinite\""
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\nassert solution(\"6 5\\n1 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\nassert solution(\"6 5\\n1 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\nassert solution(\"6 5\\n1 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\nassert solution(\"6 5\\n1 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\nassert solution(\"6 5\\n2 1 6 3 5 "
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '1\\n' # Your solution here"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"6 5\n2 1 6 3 5 3\n1 2 5 3 5\"\"\") == \"1\\n\""
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '1'"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == \"3\""
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == \"3\" # Testcase 1"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == output, f\"Test failed for solution({input}). Expected {output}, got {solution(input)}\""
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == \"3\\n\"\n"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == \"3\""
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 1 10\\n0 1 1 2 6') == '3\\n'\nassert solution('1 1 10\\n0 1 1 2 6') == 'impossible\\n'\nassert solution('3 1 10\\n0 1 1 2 6') == '2\\n'\nassert solution('2 2 10\\n0 1 1 2 6') == '3\\n'\nassert solution('1 2 10\\n0 1 1 2 6') == 'impossible\\n'"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Input: {input()}, Expected Output: {expected_output}, Actual Output: {solution(input())}\""
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '3'\nprint(\"Test passed\")"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"3\""
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 100\\n99 1\\n1 99\") == \"2\\n1 2\"\nassert solution(\"100 50\\n20 10\\n15 20\\n5 20\\n1 5\") == \"2\\n5 5 10\"\nassert solution(\"1 5\\n2 10\\n3 5\\n4 10\\n5 5\") == \"1\\n5\"\nassert solution(\"1 100\\n100 1\") == \"1\"\nassert solution(\"200 100\\n50 50\\n20 20\\n10 10\\n5 5\") == \"1\\n10 5\"\nassert solution(\"1000 1000\\n1 1000\") == \"1\""
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == \"2\\n1 2\\n\""
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 100\\n99 1\\n1 99\\n\") == \"2\\n1 2\""
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '1\\n1 2'\nassert solution() == '2\\n2'"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == '''\n1 100\n99 1\n1 99\n'''\n\nsolution = '''\n2\n1 2\n'''"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == expected, f\"Test failed. Expected {expected}, got {solution}\"\n"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\\n1 2\""
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 100\\n99 1\\n1 99\") == \"2\\n1 2\""
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1 2\"\nassert solution(\"2 100\\n99 1\\n1 99\") == \"2\\n1 2\""
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\\n1 2\""
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"H\\nT\\n0.5\") == \"0.5\"  # correct\nassert solution(\"H\\nT\\n0.4999\") == \"0.4999\"  # correct\nassert solution(\"H\\nT\\n0.0001\") == \"0.0001\"  # correct\nassert solution(\"H\\nT\\n0.5000\") == \"0.5000\"  # correct\nassert solution(\"H\\nT\\n1.0000\") == \"1.0000\"  # correct\nassert solution(\"H\\nT\\n1.5000\") == \"1.5000\"  # correct\nassert solution(\"H\\nT\\n2.0000\") == \"2.0000\"  # correct\nassert solution(\"H\\nT\\n2.5000\") == \"2.5000\"  # correct\nassert solution(\"H\\nT\\n3.0000\") == \"3.0000\"  # correct\nassert solution(\"H\\nT\\n3.5000\") == \"3.5000\"  # correct\nassert solution(\"H\\nT\\n4.0000\") == \"4.0000\"  # correct\nassert solution(\"H\\nT\\n4.5000\") == \"4.5000\"  # correct\nassert solution(\"H\\nT\\n5.0000\") == \"5.0000\"  # correct\nassert solution(\"H\\nT\\n5.5000\") == \"5.5000\"  # correct\nassert solution(\"H\\nT\\n6.0000\") == \"6.0000\"  # correct\nassert solution(\"H\\nT\\n6.5000\") == \"6.5000\"  # correct\nassert solution(\"H\\nT\\n7.0000\") == \"7.0000\"  # correct\nassert solution(\"H\\nT\\n7.5000\") == \"7.5000\"  # correct\nassert solution(\"H\\nT\\n8.0000\") == \"8.0000\"  # correct\nassert solution(\"H\\nT\\n8.5000\") == \"8.5000\"  # correct\nassert solution(\"H\\nT\\n9.0000\") == \"9.0000\"  # correct\nassert solution(\"H\\nT\\n9.5000\") == \"9.5000\"  # correct\nassert solution(\"H\\nT\\n10.0000\") == \"10.0000\"  # correct\nassert solution(\"H\\nT\\n10.5000\") == \"10.5000\"  # correct\nassert solution(\"H\\nT\\n11.0000\") == \"11.0000\"  # correct\nassert solution(\"H\\nT\\n11.5000\") == \"11.5000\"  # correct\nassert solution(\"H\\nT\\n12.0000\") == \"12.0000\"  # correct\nassert solution(\"H\\nT\\n12.5000\") == \"12.5000\"  # correct\nassert solution(\"H\\nT\\n13.0000\") == \"13.0000\"  # correct\nassert solution(\"H\\nT\\n13.5000\") == \"13.5000\"  # correct\nassert solution(\"H\\nT\\n14.0000\") == \"14.0000\"  # correct\nassert solution(\"H\\nT\\n14.5000\") == \"14.5000\"  # correct\nassert solution(\"H\\nT\\n15.0000\") == \"15.0000\"  # correct\nassert solution(\"H\\nT\\n15.5000\") == \"15.5000\"  # correct\nassert solution(\"H\\nT\\n16.0000\") == \"16."
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"H\\nT\\n0.5\") == \"0.5\"\nassert solution(\"H\\nT\\n1.5\") == \"0.5\"\nassert solution(\"T\\nH\\n0.5\") == \"0.5\"\nassert solution(\"T\\nH\\n1.5\") == \"0.5\"\nassert solution(\"H\\nH\\n0.5\") == \"0.5\"\nassert solution(\"H\\nH\\n1.5\") == \"0.5\"\nassert solution(\"T\\nT\\n0.5\") == \"0.5\"\nassert solution(\"T\\nT\\n1.5\") == \"0.5\"\nassert solution(\"H\\nH\\n1.5\") == \"0.5\"\n\nfrom typing import List\nimport math"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('H\\nT\\n0.5') == '0.5'"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"H\\nT\\n0.5\") == \"0.5\"\nassert solution(\"H\\nT\\n0.6\") == \"0.25\"\nassert solution(\"H\\nT\\n0.4\") == \"0.75\"\nassert solution(\"H\\nT\\n0.2\") == \"0.5\"\nassert solution(\"H\\nT\\n0.8\") == \"0.25\"\nassert solution(\"H\\nT\\n0.9\") == \"0.25\"\nassert solution(\"H\\nT\\n1.0\") == \"0.25\"\nassert solution(\"H\\nT\\n1.001\") == \"0.25\""
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('H') == '0.5'\nassert solution('T') == '0.5'\nassert solution('0.5') == '0.5'\n\nimport math"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"H\\nT\\n0.5\") == 0.5, \"The correct output is not provided.\""
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"H\\nT\\n0.5\") == \"0.5\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"H\\nT\\n0.5\") == \"0.5\""
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"H\\nT\\n0.5\") == \"0.5\", \"The correct answer is 0.5, but the output is: {}\".format(solution(\"H\\nT\\n0.5\"))\n\nimport math"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"H\\nT\\n0.5\") == \"0.5\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"8\\n1 3 5 7 9 11 13 15\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '8\\n1 3 5 7 9 11 13 15'"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == '8\\n1 3 5 7 9 11 13 15'"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"8\\n1 3 5 7 9 11 13 15\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n\") == \"8\\n1 3 5 7 9 11 13 15\\n\"\n"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"8\\n1 3 5 7 9 11 13 15\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"8\\n1 3 5 7 9 11 13 15\\n\"\nassert solution(6) == \"8\\n1 3 5 7 9 11 13 15\\n\"\nassert solution(9) == \"8\\n1 3 5 7 9 11 13 15\\n\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"8\\n1 3 5 7 9 11 13 15\"\n\nimport sys"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"8\\n1 3 5 7 9 11 13 15\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 8\nassert solution(6) == 8\nassert solution(10) == 8\nassert solution(12) == 11\nassert solution(13) == 13\nassert solution(14) == 13\nassert solution(15) == 15"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input(\"Enter the number of queries: \")) == expected_output, \"Test case failed\"\n"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == ['3', '1', '0']\nassert solution(input()) == ['3', '0', '0']\nassert solution(input()) == ['3', '0', '0']\nassert solution(input()) == ['3', '0', '0']\nassert solution(input()) == ['3', '1', '0']\nassert solution(input()) == ['3', '1', '0']\nassert solution(input()) == ['3', '1', '0']"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r'''\n    1 3 5 7\n3\n    2 2\n2 5\n    1 5\n''') == '3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\n\nassert solution(r'''\n    1 2 3 4 5 6 7 8 9\n    3\n    2 3\n2 6\n    1 5\n''') == '3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\n\nassert solution(r'''\n    1 2 3 4 5 6 7 8 9\n    3\n    2 3\n2 6\n    1 5\n''') == '3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 3\nassert solution() == 1\nassert solution() == 0"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input(\"Enter the value of K: \")) == \"3\"\nassert solution(input(\"Enter the value of K: \")) == \"1\"\nassert solution(input(\"Enter the value of Q: \")) == \"0\""
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2\nassert solution(sample_input_3) == expected_output_3\nassert solution(sample_input_4) == expected_output_4\nassert solution(sample_input_5) == expected_output_5"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"5\\n1\\n2\\n3\\n4\\n5\") == \"0\\n5\\n10\\n15\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5') == '3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 3 5 7\\n3\\n2 2\\n2 5\\n1 5') == 3\nassert solution('4 1 3 5 7\\n3\\n2 2\\n2 5\\n1 5') == 3\nassert solution('1 3 5 7\\n3\\n2 2\\n2 5\\n1 5') == 3"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 -2 0\\n2 1\\n1 1 -2 0\") == 0\nassert solution(\"1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\") == 0\nassert solution(\"1 1 -2 0\\n1 1 -2 0\\n2 1\") == 2\nassert solution(\"1 1 -2 0\\n1 1 -2 0\\n2 1\\n3 4 -5 6\\n3 4 -5 6\\n3 4 -5 6\") == 12\nassert solution(\"1 1 -2 0\\n1 1 -2 0\\n2 1\\n3 4 -5 6\\n3 4 -5 6\\n3 4 -5 6\\n4 5 -6 7\\n4 5 -6 7\\n4 5 -6 7\") == 18\nassert solution(\"1 1 -2 0\\n1 1 -2 0\\n2 1\\n3 4 -5 6\\n3 4 -5 6\\n3 4 -5 6\\n4 5 -6 7\\n4 5 -6 7\\n5 6 -7 8\\n5 6 -7 8\\n5 6 -7 8\") == 20\nassert solution(\"1 1 -2 0\\n1 1 -2 0\\n2 1\\n3 4 -5 6\\n3 4 -5 6\\n3 4 -5 6\\n4 5 -6 7\\n4 5 -6 7\\n5 6 -7 8\\n5 6 -7 8\\n6 7 -8 9\\n6 7 -8 9\\n6 7 -8 9\") == 20"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == 0, \"Please implement the solution and test it.\""
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\") == \"0\\n\""
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"0\\n\"\nassert solution(input()) == \"0\\n\"\nassert solution(input()) == \"0\\n\"\nassert solution(input()) == \"0\\n\""
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\") == 0, \"Your solution is incorrect\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\") == \"0\\n\""
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 0, \"Incorrect output\"\n"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, \"Your solution is incorrect. Please check the input and output.\""
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 1\\n1 1 -2 0') == 0\nassert solution('3 3\\n1 1 -2 0\\n-3 1 -5 0\\n2 1\\n1 1 -2 0') == 3\nassert solution('2 2\\n1 1 -2 0\\n2 1\\n1 1 -2 0') == 2\nassert solution('3 3\\n1 1 -2 0\\n-3 1 -5 0\\n2 1\\n1 1 -2 0') == 3\nassert solution('2 2\\n1 1 -2 0\\n2 1\\n1 1 -2 0') == 2"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"1 1 -2 0\") == \"0\\n\"\nassert solution(stdin=\"2 1\") == \"0\\n\"\nassert solution(stdin=\"2 3\") == \"2\\n\"\nassert solution(stdin=\"1 3\") == \"0\\n\"\nassert solution(stdin=\"2 3 1 4\") == \"4\\n\"\nassert solution(stdin=\"2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\\n2019 10 25\\n2020 10 30\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''2\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23''') == '''194\n2019 10 25\n2020 10 30'''"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\\n2019 10 25\\n2020 10 30\\n\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    2\n    5\n    2019 10 18\n    2019 10 19\n    2020 10 02\n    2020 10 16\n    2020 10 23\n    \"\"\"\n) == \"194\\n2019 10 25\\n2020 10 30\"\n\nassert solution(\n    \"\"\"\n    3\n    5\n    2019 10 18\n    2019 10 19\n    2020 10 02\n    2020 10 16\n    2020 10 23\n    \"\"\"\n) == \"317\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\\n2019 10 25\\n2020 10 30\"\nassert solution(\"2\\n5\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\\n2019 10 25\\n2020 10 30\"\nassert solution(\"2\\n5\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\\n2019 10 25\\n2020 10 30\"\nassert solution(\"2\\n5\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\\n2019 10 25\\n2020 10 30\"\nassert solution(\"2\\n5\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\\n2019 10 25\\n2020 10 30\"\nassert solution(\"2\\n5\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\\n2019 10 25\\n2020 10 30\"\nassert solution(\"2\\n5\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\\n2019 10 25\\n2020 10 30\"\nassert solution(\"2\\n5\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\\n2019 10 25\\n2020 10 30\"\nassert solution(\"2\\n5\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\\n2019 10 25\\n2020 10 30\"\nassert solution(\"2\\n5\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\\n2019 10 25\\n2020 10 30\"\nassert solution(\"2\\n5\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\\n2019 10 25\\n2020 10 30\"\nassert solution(\"2\\n5\\n2019 10 19\\n2020 10 02\\n20"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\\n2019 10 25\\n2020 10 30\"\n"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\") == \"194\\n2019 10 25\\n2020 10 30\\n\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\\n2019 10 25\\n2020 10 30\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\") == \"194\\n2019 10 25\\n2020 10 30\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    2\n    5\n    2019 10 18\n    2019 10 19\n    2020 10 02\n    2020 10 16\n    2020 10 23\n    \"\"\"\n) == \"194\"\n\nassert solution(\n    \"\"\"\n    2\n    5\n    2019 10 18\n    2019 10 19\n    2020 10 02\n    2020 10 16\n    2020 10 23\n    \"\"\"\n) == \"194\"\n\nassert solution(\n    \"\"\"\n    2\n    5\n    2019 10 18\n    2019 10 19\n    2020 10 02\n    2020 10 16\n    2020 10 23\n    \"\"\"\n) == \"194\"\n\nassert solution(\n    \"\"\"\n    2\n    5\n    2019 10 18\n    2019 10 19\n    2020 10 02\n    2020 10 16\n    2020 10 23\n    \"\"\"\n) == \"194\"\n\nassert solution(\n    \"\"\"\n    2\n    5\n    2019 10 18\n    2019 10 19\n    2020 10 02\n    2020 10 16\n    2020 10 23\n    \"\"\"\n) == \"194\"\n\nassert solution(\n    \"\"\"\n    2\n    5\n    2019 10 18\n    2019 10 19\n    2020 10 02\n    2020 10 16\n    2020 10 23\n    \"\"\"\n) == \"194\"\n\nassert solution(\n    \"\"\"\n    2\n    5\n    2019 10 18\n    2019 10 19\n    2020 10 02\n    2020 10 16\n    2020 10 23\n    \"\"\"\n) == \"194\"\n\nassert solution(\n    \"\"\"\n    2\n    5\n    2019 10 18\n    2019 10 19\n    2020 10 02\n    2020 10 16\n    2020 10 23\n    \"\"\"\n) == \"194\"\n\nassert solution(\n    \"\"\"\n    2\n    5\n    2019 10 18\n    2019 10 19\n    2020 10 02\n    2020 10 16\n    2020 10 23\n    \"\"\"\n) == \"194\"\n\nassert solution(\n    \"\"\"\n    2\n    5\n    2019 10 18\n    2019 10 19\n    2020 10 02\n    2020 10 16\n    2020 10 23\n    \"\"\"\n) == \"194\"\n\nassert solution(\n    \"\"\"\n    2\n    5\n    2019 10 18\n    2019 10 19\n    2020 10 02\n    2020 10 16\n    2020 10 23\n    \"\"\"\n) == \"194\"\n\nassert solution(\n    \"\"\"\n    2\n    5\n    2019 10 18\n    2019 10 19\n    2020 10 02\n    2020 10 16\n    2020 10 23\n    \"\"\"\n) == \"194\"\n\nassert solution(\n    \"\"\"\n    2\n    5\n    2019 10 18\n    2019 10 19\n    2020 10 02\n    2020 10 16\n    2020 10 23\n    \"\"\"\n) == \"194\"\n\nassert solution(\n    \"\"\"\n    2\n    5\n    2019 10 18\n    2019 10 19\n    2020 1"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=r\"\"\"\n    5 10 10 10 10 0\n    5 10 10 5 10 0\n    6 10 10 10 10 0\n\"\"\") == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\\n\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_str) == output_str, f\"Error: {solution(input_str)}!= {output_str}\"\nfor i in range(5):\n    input_str, output_str = \"\", \"\"\n    input_str = input()\n    output_str = solution(input_str)\n    assert output_str == expected_output[i], f\"Error at index {i}: {output_str}!= {expected_output[i]}\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Test case {i+1} incorrect: {solution(input())}!= {output()}\" for i, input_, output in enumerate(zip(stdin.split(), stdout.split()))"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\"\nassert solution(\"5 0 5 5 5 0\\n5 5 5 0 5 0\\n6 5 5 5 5 0\") == \"5 5\\nnegative-infinity -5\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\"\n"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, \"Test case failed.\" for input, output in [\n    (input(), output) for input, output in [\n        (\"5 10 10 10 10 0\", \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\"),\n        (\"6 10 10 10 10 0\", \"5 12.5\"),\n        (\"100 100 100 100 100 0\", \"negative-infinity 0\\npositive-infinity 100\\nnegative-infinity 100\\npositive-infinity -100\\nnegative-infinity -100\"),\n        (\"-5 10 -5 -5 10 -5\", \"negative-infinity 10\\nnegative-infinity 5\\nnegative-infinity 0\\npositive-infinity 5\\npositive-infinity 10\"),\n        (\"-5 10 0 10 10 -5\", \"negative-infinity 10\\nnegative-infinity 5\\nnegative-infinity 0\\nnegative-infinity 5\\nnegative-infinity -10\"),\n    ]\n]"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\"\n"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\""
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"2\\n\"\nassert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n5 10000\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n') == '2\\n'\nassert solution('4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 0\\n500000\\n75 0\\n400 0\\n') == 'IMPOSSIBLE\\n'\nassert solution('4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 0\\n500000\\n75 0\\n400 0\\n') == 'IMPOSSIBLE\\n'\nassert solution('4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 0\\n500000\\n75 0\\n400 0\\n500000\\n75 0\\n') == 'IMPOSSIBLE\\n'\nassert solution('4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 0\\n500000\\n75 0\\n400 0\\n500000\\n75 0\\n500000\\n') == 'IMPOSSIBLE\\n'"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"2\\n\"\nassert solution(\"4 5\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4 4\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000\n\"\"\") == \"2\\n\"\nassert solution(\"\"\"\n4 4\n50 20000\n75 30000\n100 10000\n200 0\n300 30000\n400 40000\n\"\"\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''4 4\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000''') == '2'\n\nprint('All tests pass')"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"2\\n\"\nassert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"IMPOSSIBLE\\n\"\n"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '2\\n'\n"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n\") == \"2\\n\""
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r'''\n4 4\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000\n''') == '2\\n'"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '2'\nassert solution() == '2'"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100') == '345 2\\nrotS 2 1\\nnegR 2'"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\\n') == '345 2\\nrotS 2 1\\nnegR 2\\n'"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n''') == '345 2'\nassert solution('''\n3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n''') == '345 2'\nassert solution('''\n3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n''') == '345 2'\nassert solution('''\n3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n''') == '345 2'\nassert solution('''\n3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n''') == '345 2'\nassert solution('''\n3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n''') == '345 2'\nassert solution('''\n3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n''') == '345 2'\nassert solution('''\n3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n''') == '345 2'\nassert solution('''\n3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n''') == '345 2'\nassert solution('''\n3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n''') == '345 2'\nassert solution('''\n3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n''') == '345 2'\nassert solution('''\n3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n''') == '345 2'\nassert solution('''\n3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n''') == '345 2'\nassert solution('''\n3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n''') == '345 2'\nassert solution('''\n3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n''') == '345 2'\nassert solution('''\n3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n''') == '345 2'\nassert solution('''\n3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n''') == '345 2'"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\"\n"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\\n\", \"Test case 1\"\n\nassert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\\n\", \"Test case 2\"\n\nassert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\\n\", \"Test case 3\"\n\nassert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\\n\", \"Test case 4\"\n\nassert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\\n\", \"Test case 5\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"345 2\\nrotS 2 1\\nnegR 2\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"345 2\"\nassert solution() == \"345 2\"\nassert solution() == \"345 2\"\nassert solution() == \"345 2\"\nassert solution() == \"345 2\"\nassert solution() == \"345 2\"\nassert solution() == \"345 2\""
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 0.5"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n3 2\n3 1 1\n''') == '0.5'"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 0.5, \"Expected output 0.5, got: \" + str(solution())"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is incorrect. Expected output: {expected_output}, but got: {solution(input())}.\""
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 0.5, f\"The solution is {solution}, but it should be {0.5}.\""
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n3 1 1\\n\") == \"0.5\"\nassert solution(\"3 4\\n2 3 4\\n\") == \"10.625\"\nassert solution(\"1 1\\n3 2\\n\") == \"0.0\"\nassert solution(\"100 1\\n100 1\\n\") == \"100\"\nassert solution(\"100 100\\n100 100\\n\") == \"100\"\nassert solution(\"1 2\\n3 4\\n\") == \"0\"\nassert solution(\"50 50\\n50 50\\n\") == \"50\"\nassert solution(\"100000 1\\n100000 1\\n\") == \"0\"\n"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 0.5, \"Solution should be 0.5\""
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution.__doc__.startswith('def solution(stdin: str) -> str:')\n\nn, m = list(map(int, input().split()))\nk = list(map(int, input().split()))\n\nmin_sum = float('inf')\nmin_energy = None\n\nfor j in range(m):\n    min_value = float('inf')\n    for i in range(n):\n        energy = i + k[i]\n        distance = abs(energy - j)\n        min_value = min(min_value, distance**2)\n    \n    min_sum = min(min_sum, min_value)\n    if min_energy is None or min_value < min_sum:\n        min_energy = energy\n\noutput = f'{min_sum:.4f}'\nprint(output)"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 2\\n3 1 1') == '0.5'"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 0.5, \"Solution should be 0.5\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n''') == '''\n1 4 5\n2 6 7\n'''"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1 4 5\\n2 6 7\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 2\\n3 5\\n3 6\\n3 7\\n2 8\\n4 10\") == \"2 6 7\"\nprint(\"Correct\")"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"1 4 5\\n2 6 7\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9') == '1 4 5\\n2 6 7'\nassert solution('10 20\\n1 5\\n5 3\\n2 6\\n1 3\\n5 10\\n5 4\\n3 7\\n4 9\\n3 6\\n4 8\\n1 8\\n5 7\\n6 9\\n3 2\\n5 8\\n2 1') == '1 5 3\\n2 6 10\\n5 4 7\\n3 7 9\\n4 9 6\\n1 8 5\\n5 7 6\\n6 9 3\\n3 2 5\\n5 8 2'"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n\") == \"1 4 5\\n2 6 7\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1 4 5\\n2 6 7\", \"Incorrect output\"\nassert solution(input()) == \"impossible\", \"Incorrect output\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"1 4 5\\n2 6 7\\nimpossible\"\nassert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n3 9\\n1 5\\n\") == \"1 4 5\\n2 6 7\\nimpossible\"\nassert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n3 9\\n1 5\\n3 9\\n2 7\\n\") == \"1 4 5\\n2 6 7\\nimpossible\"\nassert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n3 9\\n1 5\\n3 9\\n2 7\\n3 9\\n1 5\\n\") == \"1 4 5\\n2 6 7\\nimpossible\"\nassert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n3 9\\n1 5\\n3 9\\n2 7\\n3 9\\n1 5\\n3 9\\n2 7\\n\") == \"1 4 5\\n2 6 7\\nimpossible\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '1 4 5\\n2 6 7'"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n') == '1 4 5\\n2 6 7\\n'\nprint('All tests passed!')\n"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"13500\"\n"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n') == '13500\\n'\nassert solution('11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n1\\n1\\n') == '13500\\n'"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n\") == \"13500\"\nassert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n\") == \"6000\"\nassert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n\") == \"13500\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 13500, \"Test Failed\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Output does not match expected output. Actual: {solution(input())}, Expected: {output}\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n') == '13500'"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 13500"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == expected_output, f\"Incorrect output for sample input {sample_input}.\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\") == \"13500\\n\"\nassert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n\") == \"13500\\n\"\nassert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n10000\\n9000\\n12000\\n10000\\n\") == \"13500\\n\"\nassert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n10000\\n9000\\n12000\\n10000\\n12000\\n18000\\n10000\\n9000\\n12000\\n10000\\n12000\\n10000\\n\") == \"13500\\n\"\nassert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n10000\\n9000\\n12000\\n10000\\n12000\\n18000\\n10000\\n9000\\n12000\\n10000\\n12000\\n10000\\n12000\\n\") == \"13500\\n\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\") == 13500\n"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 16\\nHot cross buns! = Hot cross buns!\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\n\") == \"Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,______________________________\\n\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\n\") == \"Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_____________\\n\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\n') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,Hot___cross____buns!_=___Hot_cross_buns!_=______________Two_a_pen-_ny,_One_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=______________Two_a_pen-_ny,_One_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=______________Two_a_pen-_ny,_One_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=______________Two_a_pen-_ny,_One_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=______________Two_a_pen-_ny,_One_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=______________Two_a_pen-_ny,_One_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=______________Two_a_pen-_ny,_One_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=______________Two_a_pen-_ny,_One_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=______________Two_a_pen-_ny,_One_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=______________Two_a_pen-_ny,_One_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=______________Two_a_pen-_ny,_One_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=______________Two_a_pen-_ny,_One_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=______________Two_a_pen-_ny,_One_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=______________Two_a_pen-_ny,_One_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=______________Two_a_pen-_ny,_One_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=______________Two_a_pen-_ny,_One_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=______________Two_a_pen-_ny,_One_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=______________Two_a_pen-_ny,_One_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=______________Two_a_pen-_ny,_One_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=______________Two_a_pen-_ny,_One_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=______________Two_a_pen-_ny,_One_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=______________Two_a_pen-_ny,_One_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=______________Two_a_pen-_ny,_One_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=______________Two_a_pen-_ny,_One_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=______________Two_a_pen-_ny,_One_a_pen-_ny,_Hot___cross____b"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\") == \"\\nHot_cross_buns!_=___Hot_cross_buns!_=\n____________________Hot_cross_buns!_=\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\n\"\n\nassert solution(\"2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\") == \"\\nHot_cross_buns!_=___Hot_cross_buns!_=\n____________________Hot_cross_buns!_=\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\n\"\n\nassert solution(\"2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\") == \"\\nHot_cross_buns!_=___Hot_cross_buns!_=\n____________________Hot_cross_buns!_=\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\n\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    2 16\n    \nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4\n\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 4 4 4 4\n\"\"\"\n) == \"Hot_cross_buns!_=Hot_cross_buns!_=One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\n    \"\"\"\n    3 10\n    \nWeeping goat = Weeping goat =\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\") == \"Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_\\nTwo_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_a_pen-_ny,_Two_"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected {sample_output}, but got {solution(sample_input)}\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 16\\nHot cross buns! = Hot cross buns!\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\") == \"Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=open('input.txt').read()) == expected, f\"Incorrect solution for the given input.\\nExpected: {expected}\\nGot: {solution(stdin=open('input.txt').read())}\""
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(r\"\"\"\n3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n\"\"\") == \"33\\n\""
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 33, \"Test failed\"\n"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == \"33\""
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 33"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 33, \"Expected output 33, got {}\".format(solution())"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"33\"\nassert solution(\"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\") == \"33\""
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\") == 33, \"Expected: 33, Actual: {}\".format(solution(\"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\"))"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\\n\") == \"33\\n\""
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n\"\"\") == \"33\"\n\nassert solution(\"\"\"\n1 2 10\n2 10 30 33\n1 4 6 6\n2 1 10\n\"\"\") == \"33\"\n\nassert solution(\"\"\"\n3 2 1\n2 1 10\n1 4 6 6\n1 6 10 5\n\"\"\") == \"11\""
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '33', \"The output is not 33\""
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n20 15 10\\n7 7\\n30 0\") == \"405\"\nassert solution(\"10\\n200 100 300 200 100\\n50 0 300\") == \"650\""
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 405"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n20 15 10\\n7 7\\n30 0\\n') == '405'"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Output the smallest total cost of your transit card for the 3 days.\""
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n20 15 10\\n7 7\\n30 0\") == \"405\" # expected output: 405"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 405\nassert solution == 405\nassert solution == 405\nassert solution == 405\nassert solution == 405\nassert solution == 405"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n\\tpass\""
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"405\", \"Your solution is incorrect.\"\n"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 405\n"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n20 15 10\\n7 7\\n30 0') == '405'"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\\n\"\n"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"28 4 21 14.0\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"28 4 21 14.0\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 4 7\") == \"28 4 21 14.0\\n\", \"Testcase 1 failed\"\nassert solution(\"1 2 2 2\") == \"1 2 1 1\\n\", \"Testcase 2 failed\"\nassert solution(\"1 2 3 4\") == \"10 10 10 10\\n\", \"Testcase 3 failed\"\nassert solution(\"1 2 2 2\") == \"1 2 1 1\\n\", \"Testcase 4 failed\"\nassert solution(\"1 2 3 5\") == \"30 30 30 30\\n\", \"Testcase 5 failed\"\nassert solution(\"1 2 2 2\") == \"1 2 1 1\\n\", \"Testcase 6 failed\"\nassert solution(\"1 2 2 2\") == \"1 2 1 1\\n\", \"Testcase 7 failed\"\nassert solution(\"1 2 3 5\") == \"30 30 30 30\\n\", \"Testcase 8 failed\"\nassert solution(\"1 2 2 2\") == \"1 2 1 1\\n\", \"Testcase 9 failed\"\nassert solution(\"1 2 3 5\") == \"30 30 30 30\\n\", \"Testcase 10 failed\"\nassert solution(\"1 2 2 2\") == \"1 2 1 1\\n\", \"Testcase 11 failed\"\nassert solution(\"1 2 3 5\") == \"30 30 30 30\\n\", \"Testcase 12 failed\"\nassert solution(\"1 2 2 2\") == \"1 2 1 1\\n\", \"Testcase 13 failed\"\nassert solution(\"1 2 3 5\") == \"30 30 30 30\\n\", \"Testcase 14 failed\"\nassert solution(\"1 2 2 2\") == \"1 2 1 1\\n\", \"Testcase 15 failed\"\nassert solution(\"1 2 3 5\") == \"30 30 30 30\\n\", \"Testcase 16 failed\"\nassert solution(\"1 2 2 2\") == \"1 2 1 1\\n\", \"Testcase 17 failed\"\nassert solution(\"1 2 3 5\") == \"30 30 30 30\\n\", \"Testcase 18 failed\"\nassert solution(\"1 2 2 2\") == \"1 2 1 1\\n\", \"Testcase 19 failed\"\nassert solution(\"1 2 3 5\") == \"30 30 30 30\\n\", \"Testcase 20 failed\"\nassert solution(\"1 2 2 2\") == \"1 2 1 1\\n\", \"Testcase 21 failed\"\nassert solution(\"1 2 3 5\") == \"30 30 30 30\\n\", \"Testcase 22 failed\"\nassert solution(\"1 2 2 2\") == \"1 2 1 1\\n\", \"Testcase 23 failed\"\nassert solution(\"1 2 3 5\") == \"30 30 30 30\\n\", \"Testcase 24 failed\"\nassert solution(\"1 2 2 2\") == \"1 2 1 1\\n\", \"Testcase 25 failed\"\nassert solution(\"1 2 3 5\") == \"30 30 30 30\\n\", \"Testcase 26 failed\"\nassert solution(\"1 2 2 2\") == \"1 2 1 1\\n\", \"Testcase 27 failed\"\nassert solution(\"1 2 3 5\") == \"30 30 30 30\\n\", \"Testcase 28 failed\"\nassert solution(\"1 2 2 2\") == \"1 2 1 1\\n\", \"Testcase 29 failed\"\nassert solution(\"1 2 3 5\") == \"30 30 30 30\\n\", \"Testcase 30 failed\"\nassert solution(\"1 2 2 2\") == \"1"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n1 2 4 7\\n') == '28 4 21 14.0'\n"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\\n\"\nassert solution(\"4\\n2 4 4 2\") == \"28 4 21 14.0\\n\"\nassert solution(\"3\\n1 1 1 1\") == \"0 0 0 0\\n\"\nassert solution(\"3\\n1 2 3 4\") == \"0 0 0 0\\n\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\"\n"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"28 4 21 14.0\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n1 2 4 7') == '28 4 21 14.0'"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\\n\""
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\""
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 2\\n1 2 3 4\\n2 3 4 1') == 'yes\\n1 2 3 4\\n2 3 4 1'\nassert solution('3 3\\n1 2 3\\n2 3 4') == 'no'\nassert solution('5 5\\n1 2 3\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9') == 'no'"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\""
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\"\n"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin: str) == 'yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3', 'Test case 1 failed'\n\nassert solution(stdin: str) == 'no', 'Test case 2 failed'\n\nassert solution(stdin: str) == 'no', 'Test case 3 failed'\n\nassert solution(stdin: str) == 'yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3', 'Test case 4 failed'"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 2\\n1 2 3 4\\n2 3 4 1') == 'yes\\n1 2 3 4\\n2 3 4 1'\nassert solution('4 2\\n1 3 4 2\\n2 4 1 3') == 'no'\nassert solution('4 2\\n1 2 3 4\\n2 3 4 1\\n3 4 5 2') == 'yes\\n1 2 3 4\\n2 3 4 1\\n3 4 5 2'\n"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 5\") == \"no\"\n\nfrom typing import List"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\\n5 6 7 8\") == \"no\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\\n1 2 3 4\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\""
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 2\\n1 2 3 4\\n2 3 4 1') == 'yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3'\nassert solution('5 2\\n1 2 3 4 5\\n2 3 4 5 1\\n3 4 5 1 2\\n4 5 1 2 3\\n5 1 2 3 4') == 'no'\nassert solution('10 2\\n1 2 3 4 5 6 7 8 9\\n2 3 4 5 6 7 8 9 1\\n3 4 5 6 7 8 9 1 2\\n4 5 6 7 8 9 1 2 3\\n5 6 7 8 9 1 2 3 4\\n6 7 8 9 1 2 3 4 5\\n7 8 9 1 2 3 4 5 6\\n8 9 1 2 3 4 5 6 7\\n9 1 2 3 4 5 6 7 8') == 'no'"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"5\\n10 10 -10 -4 10\") == \"10.000000000\"\nassert solution(stdin=\"5\\n10 -5 -10 4 -5\") == \"0.000000000\"\nassert solution(stdin=\"5\\n10 -5 -10 4 5\") == \"0.000000000\"\nassert solution(stdin=\"5\\n10 -5 -10 4 5 10\") == \"10.000000000\"\nassert solution(stdin=\"5\\n10 -5 -10 4 5 -10\") == \"10.000000000\"\nassert solution(stdin=\"5\\n10 -5 -10 4 5 -10 -5\") == \"0.000000000\"\nassert solution(stdin=\"5\\n10 -5 -10 4 5 0 10\") == \"0.000000000\"\nassert solution(stdin=\"5\\n10 -5 -10 4 5 0 -10\") == \"0.000000000\"\nassert solution(stdin=\"5\\n10 -5 -10 4 5 0 -10 -5\") == \"0.000000000\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n10 10 -10 -4 10') == '10.000000000'"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '10.000000000'"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '10.000000000\\n'"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '10.000000000'"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n10 10 -10 -4 10\") == \"10.000000000\\n\"\nassert solution(\"5\\n-10 10 10 -4 10\") == \"0.000000000\\n\"\nassert solution(\"5\\n5 10 10 5 5\") == \"0.000000000\\n\"\nassert solution(\"5\\n-10 -5 10 -4 -10\") == \"0.000000000\\n\"\nassert solution(\"5\\n10 10 10 10 10\") == \"10.000000000\\n\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n10 10 -10 -4 10\\n\") == \"10.000000000\"\nassert solution(\"5\\n10 10 -10 -4 10\\n5\\n10 10 -10 -4 10\\n\") == \"10.000000000\"\nassert solution(\"5\\n10 10 -10 -4 10\\n\") == \"10.000000000\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n10 10 -10 -4 10') == '10.000000000\\n'\nassert solution('10\\n10 10 -10 -4 10') == '10.000000000\\n'\nassert solution('1\\n-10 -4 10 10') == '0.000000000\\n'\nassert solution('5\\n-5 -4 10 10') == '0.000000000\\n'\nassert solution('10\\n-5 -4 10 10') == '0.000000000\\n'\n"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Actual: {solution(input())}\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n10 10 -10 -4 10\") == \"10.000000000\""
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n30\\n3\\n2\\n45\") == \"1\", \"Test 1 failed\"\nassert solution(\"4\\n30\\n3\\n2\\n45\") == \"1\", \"Test 2 failed\"\nassert solution(\"4\\n30\\n3\\n2\\n45\") == \"1\", \"Test 3 failed\"\nassert solution(\"4\\n30\\n3\\n2\\n45\") == \"1\", \"Test 4 failed\"\nassert solution(\"4\\n30\\n3\\n2\\n45\") == \"1\", \"Test 5 failed\""
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([4, 30, 3, 2, 45]) == 1"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '1\\n'"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n30\\n3\\n2\\n45\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n30\\n3\\n2\\n45') == '1'\nassert solution('5\\n30\\n3\\n2\\n45') == '2'\nassert solution('5\\n30\\n15\\n2\\n45') == '3'\nassert solution('6\\n30\\n3\\n2\\n45') == '4'\nassert solution('6\\n30\\n3\\n10\\n45') == '5'"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '1'"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n30\\n3\\n2\\n45\") == 1\n"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(30) == 1, \"Input 1 should be 1, not {}.\".format(solution(30))"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == \"1\\n\", \"Your solution should return '1'\\n\""
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 1, \"Expected result: 1, actual result: {}\".format(solution(3))\nassert solution(4) == 2, \"Expected result: 2, actual result: {}\".format(solution(4))\nassert solution(5) == 3, \"Expected result: 3, actual result: {}\".format(solution(5))\nassert solution(6) == 4, \"Expected result: 4, actual result: {}\".format(solution(6))"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '''0.000000000 1.360000000\n0.000000000 1.000000000\n0.000000000 -1.000000000\n0.000000000 0.360000000\n0.880000000 0.000000000\n-0.880000000 -0.360000000\n1.02037965897'''\nassert solution('''\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '''0.000000000 1.360000000\n0.000000000 1.000000000\n0.000000000 -1.000000000\n0.000000000 0.360000000\n0.880000000 0.000000000\n-0.880000000 -0.360000000\n1.02037965897'''\nassert solution('''\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '''0.000000000 1.360000000\n0.000000000 1.000000000\n0.000000000 -1.000000000\n0.000000000 0.360000000\n0.880000000 0.000000000\n-0.880000000 -0.360000000\n1.02037965897'''"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    6 6 3.0 0.66\n    2 4 8\n    4 6 1\n    3 6 1\n    4 5 5\n    1 5 7\n    3 5 3\n    \"\"\"\n) == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\"\nassert solution(\"5 5 1\\n4 4 2\\n1 1 1\\n1 2 3\\n2 1 1\\n2 3 4\\n3 1 1\\n3 4 2\\n4 1 1\\n4 2 3\\n5 1 1\\n5 2 3\\n6 1 1\\n6 2 3\\n7 1 1\\n7 2 3\\n8 1 1\\n8 2 3\") == \"0.000000000 0.000000000\\n0.000000000 0.000000000\\n0.000000000 0.000000000\\n0.000000000 0.000000000\\n0.000000000 0.000000000\\n0.000000000 0.000000000\\n0.000000000 0.000000000\"\nassert solution(\"5 5 1\\n4 4 2\\n1 1 1\\n1 2 3\\n2 1 1\\n2 3 4\\n3 1 1\\n3 4 2\\n4 1 1\\n4 2 3\\n5 1 1\\n5 2 3\\n6 1 1\\n6 2 3\\n7 1 1\\n7 2 3\\n8 1 1\\n8 2 3\") == \"0.000000000 0.000000000\\n0.000000000 0.000000000\\n0.000000000 0.000000000\\n0.000000000 0.000000000\\n0.000000000 0.000000000\\n0.000000000 0.000000000\\n0.000000000 0.000000000\"\nassert solution(\"5 5 1\\n4 4 2\\n1 1 1\\n1 2 3\\n2 1 1\\n2 3 4\\n3 1 1\\n3 4 2\\n4 1 1\\n4 2 3\\n5 1 1\\n5 2 3\\n6 1 1\\n6 2 3\\n7 1 1\\n7 2 3\\n8 1 1\\n8 2 3\") == \"0.000000000 0.000000000\\n0.000000000 0.000000000\\n0.00000000"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\"\nassert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n6 6 4.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n6 6 5.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\\n0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\"\nassert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n6 6 4.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n6 6 5.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\"\nassert solution(input()) == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\""
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(b\"\\n4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n\") == 4\nassert solution(b\"\\n5\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n3 4\\n4 3\\n\") == 4\nassert solution(b\"\\n6\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n3 4\\n4 3\\n5 5\\n6 6\\n\") == 4"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2') == '4'\n\nimport math"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"4\", \"Expected output: 4, got: \" + str(solution(input()))\n"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\", \"Your solution is incorrect.\""
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"4\""
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\") == 4"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Solution is {solution(input())}, but expected {expected_output}.\""
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == \"No solution\""
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n\") == 4\nassert solution(\"0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n3\\n4 5\\n6 7\\n8 9\\n\") == 8\nassert solution(\"0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n3\\n4 5\\n6 7\\n8 9\\n4\\n5\\n6\\n7\\n8\\n\") == 6\nassert solution(\"0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n3\\n4 5\\n6 7\\n8 9\\n4\\n5\\n6\\n7\\n8\\n5\\n\") == 6\nassert solution(\"0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n3\\n4 5\\n6 7\\n8 9\\n4\\n5\\n6\\n7\\n8\\n5\\n6\\n\") == 6"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 0\\n0 1\\n0 2\\n0 3') == '2\\n3 2\\n3 1\\n'\nassert solution('5 0\\n1 2\\n2 3\\n3 4\\n4 5') == '4\\n5 4\\n5 3\\n5 2\\n'"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\") == \"2\\n3 2\\n3 1\"\n"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\\n3 2\\n3 1\"\n"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\\n3 2\\n3 1\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '2\\n3 2\\n3 1'"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n4 0\n0 1\n0 2\n0 3\n''') == '''\n2\n3 2\n3 1\n'''\n\nassert solution('''\n4 0\n0 1\n0 2\n0 3\n4 1\n1 2\n1 3\n2 3\n''') == '''\n5\n4 0\n1 1\n1 2\n2 2\n3 3\n3 2\n1 3\n2 3\n'''\n\nassert solution('''\n4 0\n0 1\n0 2\n0 3\n4 1\n1 2\n1 3\n2 3\n4 2\n2 3\n4 3\n3 3\n3 2\n4 0\n3 3\n1 1\n2 2\n''') == '''\n8\n0 1\n0 2\n0 3\n0 2\n1 2\n1 3\n2 3\n2 0\n3 0\n3 2\n3 3\n'''\n\nassert solution('''\n4 0\n0 1\n0 2\n0 3\n4 1\n1 2\n1 3\n2 3\n4 2\n2 3\n4 3\n3 3\n3 2\n4 0\n3 3\n1 1\n2 2\n''') == '''\n8\n0 1\n0 2\n0 3\n0 2\n1 2\n1 3\n2 3\n2 0\n3 0\n3 2\n3 3\n'''"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\") == \"2\\n3 2\\n3 1\"\n\nsolution(\"4 0\\n0 1\\n0 2\\n0 3\")"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n4 0\n0 1\n0 2\n0 3\n''') == '''\n2\n3 2\n3 1\n'''\n\nassert solution('''\n1 1\n0 1\n1 2\n2 3\n''') == '''\n3\n2 3\n1 2\n'''\n\nassert solution('''\n5 0\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n20 21\n21 22\n22 23\n23 24\n24 25\n25 26\n26 27\n27 28\n28 29\n29 30\n30 31\n31 32\n32 33\n33 34\n34 35\n35 36\n36 37\n37 38\n38 39\n39 40\n40 41\n41 42\n42 43\n43 44\n44 45\n45 46\n46 47\n47 48\n48 49\n49 50\n50 51\n51 52\n52 53\n53 54\n54 55\n55 56\n56 57\n57 58\n58 59\n59 60\n60 61\n61 62\n62 63\n63 64\n64 65\n65 66\n66 67\n67 68\n68 69\n69 70\n70 71\n71 72\n72 73\n73 74\n74 75\n75 76\n76 77\n77 78\n78 79\n79 80\n80 81\n81 82\n82 83\n83 84\n84 85\n85 86\n86 87\n87 88\n88 89\n89 90\n90 91\n91 92\n92 93\n93 94\n94 95\n95 96\n96 97\n97 98\n98 99\n99 100\n100 101\n101 102\n102 103\n103 104\n104 105\n105 106\n106 107\n107 108\n108 109\n109 110\n110 111\n111 112\n112 113\n113 114\n114 115\n115 116\n116 117\n117 118\n118 119\n119 120\n120 121\n121 122\n122 123\n123 124\n124 125\n125 126\n126 127\n127 128\n128 129\n129 130\n130 131\n131 132\n132 133\n133 134\n134 135\n135 136\n136 137\n137 138\n138 139\n139 140\n140 141\n141 142\n142 143\n143 144\n144 145\n"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '2\\n3 2\\n3 1'"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\") == \"2\\n3 2\\n3 1\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('0 0 0\\n0 1.5 0') == 'ok' # Test case 1\nassert solution('0 0.5 0\\n1.5 0 0') == 'crash' # Test case 2\nassert solution('0 0 0\\n0 1.5 0\\n0 2.0 0\\n0 2.5 0\\n0 3.0 0') == 'crash' # Test case 3\nassert solution('0 0 0\\n0 1.5 0\\n0 2.0 0\\n0 2.5 0\\n0 3.0 0\\n0 3.5 0') == 'crash' # Test case 4\nassert solution('0 0 0\\n0 1.5 0\\n0 2.0 0\\n0 2.5 0\\n0 3.0 0\\n0 3.5 0\\n0 4.0 0\\n0 4.5 0\\n0 5.0 0\\n0 5.5 0\\n0 6.0 0') == 'crash' # Test case 5"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n0 0 0\\n0 1.5 0\") == \"ok\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n0 0 0\\n0 1.5 0') == 'ok\\n'"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('0 0 0\\n0 1.5 0') == 'ok'\n\nfor i in range(2, int(input()) + 1):\n    x1, y1, r1 = map(float, input().split())\n    x2, y2, r2 = map(float, input().split())\n    \n    if abs(x2 - x1) > 10**6 or abs(y2 - y1) > 10**6:\n        print('no')\n        continue\n    \n    if abs(r2 - r1) > 2 * 3.14:\n        print('no')\n        continue\n    \n    if x1!= x2 or y1!= y2:\n        print('no')\n        continue\n    \n    print('ok')"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n0 0 0\\n0 1.5 0\\n') == 'ok\\n'"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0 0 0\\n0 1.5 0') == 'ok'\n"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n0 0 0\\n0 1.5 0\") == \"ok\"\nassert solution(\"3\\n0 0 0\\n0 0 0\\n0 1.5 0\") == \"crash\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n0 0 0\\n0 1.5 0') == 'ok'"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_data) == \"ok\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n0 0 0\\n0 1.5 0\") == \"ok\"\n"
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\\nR 0\\nG 2\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\\n\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == '2\\nR 0\\nG 2\\n', \"The output is incorrect.\"\nprint(\"Test Passed!\")"
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\\n\"\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\\n\"\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n5 4\") == \"2\\nR 0\\nG 2\\n\"\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\\n\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Got {solution(input())}, expected {expected}\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\\n\"\nprint(solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\"))"
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\\n\"\nprint(\"Correct\")"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 2, \"The output is not correct.\"\n"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected_output, f\"Solution does not match the expected output. Received: {solution}, Expected: {expected_output}\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F') == 2\n"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\n\nassert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n4 A B C\n''') == '2'\n\nassert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\n\nassert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n4 A B C\n''') == '2'\n\nassert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\n\nassert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\n\nassert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\n\nassert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\n\nassert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\n\nassert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\n\nassert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\n\nassert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\n\nassert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\n\nassert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\n\nassert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\n\nassert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\n\nassert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\n\nassert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\n\nassert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\n\nassert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\n\nassert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\n\nassert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\n\nassert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\n\nassert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\n\nassert solution('''7 3 3"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == 2\nassert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == 2\nassert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == 2\nassert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == 2\nassert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == 2"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F') == 2\nassert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n4 J K L') == 1\nassert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n4 J K L\\n6 M N O') == 3\nassert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n4 J K L\\n6 M N O\\n7 P Q R') == 4"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n\") == \"2\"\nassert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n4 C D E\\n\") == \"2\"\nassert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n4 C D E\\n5 D E F\\n\") == \"2\"\nassert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n4 C D E\\n5 D E F\\n6 E F G\\n\") == \"2\"\nassert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n4 C D E\\n5 D E F\\n6 E F G\\n7 F G H\\n\") == \"2\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\nYYY\\nNYY\\nYNY') == '2\\n1 2 3\\n3 1 2'\n"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n# Sample Input:\\n# 3\\n# YYY\\n# NYY\\n# YNY\\n# Sample Output:\\n# 2\\n# 1 2 3\\n# 3 1 2\"\n"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_data) == expected_output, f\"Expected output: {expected_output}\\nActual output: {solution(input_data)}\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\nYYY\\nNYY\\nYNY') == '2\\n1 2 3\\n3 1 2'"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\\n1 2 3\\n3 1 2\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\\n\"\nassert solution(\"3\\nYYY\\nNYY\\nYNY\\nNNY\\nNYY\\nNYY\\nYYY\\nNYY\\nYNY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\\n4 1 3\\n\"\nassert solution(\"3\\nYNY\\nNYY\\nYNY\\nNNY\\nNYY\\nNYY\\nYYY\\nNYY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nY"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\\n\") == \"2\\n1 2 3\\n3 1 2\"\nassert solution(\"10\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\n\") == \"0\\n1 2 3 4 5 6 7 8 9\"\nassert solution(\"1\\nN\\nN\\nN\\n\") == \"0\"\nassert solution(\"2\\nN\\nN\\nN\\nN\\nN\\nN\\nN\\nN\\n\") == \"0\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2') == ['4\\n0\\n5\\n']\nassert solution('2 3\\nx..\\n...\\n...\\n2\\n1 3\\n1 1\\n3 3') == ['0\\n0\\n5\\n']"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\") == \"4\\n0\\n5\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\") == \"4\\n0\\n5\\n\"\nassert solution(\"5 5\\nx..\\n...\\n...\\n5\\n1 1\\n3 3\\n1 3\\n1 1\") == \"10\\n0\\n15\\n\"\nassert solution(\"6 6\\nx..\\n...\\n...\\n6\\n1 1\\n3 3\\n1 3\\n1 1\") == \"14\\n0\\n20\\n\"\nassert solution(\"3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\") == \"4\\n0\\n5\\n\"\nassert solution(\"5 5\\nx..\\n...\\n...\\n5\\n1 1\\n3 3\\n1 3\\n1 1\") == \"10\\n0\\n15\\n\"\nassert solution(\"6 6\\nx..\\n...\\n...\\n6\\n1 1\\n3 3\\n1 3\\n1 1\") == \"14\\n0\\n20\\n\"\nassert solution(\"3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\") == \"4\\n0\\n5\\n\"\nassert solution(\"5 5\\nx..\\n...\\n...\\n5\\n1 1\\n3 3\\n1 3\\n1 1\") == \"10\\n0\\n15\\n\"\nassert solution(\"6 6\\nx..\\n...\\n...\\n6\\n1 1\\n3 3\\n1 3\\n1 1\") == \"14\\n0\\n20\\n\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3\\nx..\\n...\\n...\\nx.x\\n3 1\\n1 3\\n1 1\\n3 2') == '4\\n0\\n5'"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\") == \"4\\n0\\n5\\n\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\\n') == '4\\n0\\n5\\n'"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case_num} failed: expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\\n\") == \"4\\n0\\n5\"\n"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\") == \"4\\n0\\n5\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\\n') == '4\\n0\\n5'"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\"\nassert solution() == \"1.118 2.037\\n5.000 3.000\\n5.000 3.000\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\"\nassert solution(5) == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\"\nassert solution(3) == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\"\nassert solution(5) == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\"\nassert solution(3) == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\"\nassert solution(5) == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '''\n4.114 -2.842\n6.297 -0.784\n5.000 3.000\n'''"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    3\n    5\n    3\n    4\n    5 3\n    \"\"\"\n) == \"\"\"\n4.114 -2.842\n6.297 -0.784\n5.000 3.000\n\"\"\"\n\nassert solution(\n    \"\"\"\n    10\n    15\n    5\n    10\n    \"\"\"\n) == \"\"\"\n0.291 -3.487\n7.992 -1.795\n5.000 3.000\n\"\"\"\n\nassert solution(\n    \"\"\"\n    10\n    15\n    5\n    10\n    2\n    \"\"\"\n) == \"\"\"\n0.185 -4.222\n7.515 -2.185\n5.000 3.000\n\"\"\"\n\nassert solution(\n    \"\"\"\n    10\n    15\n    5\n    10\n    2\n    2\n    \"\"\"\n) == \"\"\"\n0.176 -3.346\n7.824 -1.224\n5.000 3.000\n\"\"\"\n\nassert solution(\n    \"\"\"\n    10\n    15\n    5\n    10\n    2\n    3\n    4\n    \"\"\"\n) == \"\"\"\n0.168 -2.633\n7.723 -0.995\n5.000 3.000\n\"\"\"\n\nassert solution(\n    \"\"\"\n    10\n    15\n    5\n    10\n    2\n    3\n    4\n    5\n    \"\"\"\n) == \"\"\"\n0.163 -1.980\n8.153 -0.312\n5.000 3.000\n\"\"\"\n\nassert solution(\n    \"\"\"\n    10\n    15\n    5\n    10\n    2\n    3\n    4\n    5\n    6\n    \"\"\"\n) == \"\"\"\n0.158 -1.417\n8.510 0.078\n5.000 3.000\n\"\"\"\n\nassert solution(\n    \"\"\"\n    10\n    15\n    5\n    10\n    2\n    3\n    4\n    5\n    6\n    7\n    \"\"\"\n) == \"\"\"\n0.154 -0.937\n8.776 0.263\n5.000 3.000\n\"\"\"\n\nassert solution(\n    \"\"\"\n    10\n    15\n    5\n    10\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    \"\"\"\n) == \"\"\"\n0.149 -0.545\n8.984 0.597\n5.000 3.000\n\"\"\"\n\nassert solution(\n    \"\"\"\n    10\n    15\n    5\n    10\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    \"\"\"\n) == \"\"\"\n0.145 -0.156\n9.094 0.760\n5.000 3.000\n\"\"\"\n\nassert solution(\n    \"\"\"\n    10\n    15\n    5\n    10\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    \"\"\"\n) == \"\"\"\n0.140 0.000\n9.057 0.974\n5.000 3.000\n\"\"\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"\"\"\n4.114 -2.842\n6.297 -0.784\n5.000 3.000\n\"\"\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n5\\n3\\n4\\n5 3\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\"\n"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_1) == output_1, \"Invalid output 1\"\nassert solution(input_2) == output_2, \"Invalid output 2\"\nassert solution(input_3) == output_3, \"Invalid output 3\"\nassert solution(input_4) == output_4, \"Invalid output 4\"\nassert solution(input_5) == output_5, \"Invalid output 5\"\n"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"Output:\\n3\\n5\\n8\\n10\\n13\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"3\\n5\\n8\\n10\\n13\"\n"
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"No input provided.\\n\"\n\nsolution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n\") == \"3\\n5\\n8\\n10\\n13\\n\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, got: {solution(input())}\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '3\\n5\\n8\\n10\\n13'\n"
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == '3\\n5\\n8\\n10\\n13\\n'"
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n\") == \"3\\n5\\n8\\n10\\n13\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n\") == \"3\\n5\\n8\\n10\\n13\\n\"\nassert solution(\"3 1\\n2 3 4\\n2\\n3\\n4\\n5\\n\") == \"2\\n2\\n2\\n2\\n\"\nassert solution(\"2 1\\n2 3 4 5\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n\") == \"2\\n2\\n2\\n2\\n\"\nassert solution(\"1 1\\n2 3 4 5\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n\") == \"2\\n2\\n2\\n\"\nassert solution(\"5 2\\n1 2 3 4 5 6\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\"\n"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 ') == '0'\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 6') == '2'"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 0, \"Your solution is incorrect\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == \"0\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 ') == 0\nassert solution('10 5\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n101 102\\n102 103\\n103 104\\n104 105\\n105 106\\n106 107\\n107 108\\n108 109\\n109 110\\n110 111\\n111 112\\n112 113\\n113 114\\n114 115\\n115 116\\n116 117\\n117 118\\n118 119\\n119 120\\n120 121\\n121 122\\n122 123\\n123 124\\n124 125\\n125 126\\n126 127\\n127 128\\n128 129\\n129 130\\n130 131\\n131 132\\n132 "
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\treturn'solution passed' if solution() =='solution passed' else'solution failed'\\n\\n\\n\\n\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\") == \"0\\n\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n1 4\") == \"1\\n\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n1 4\\n5 4\") == \"2\\n\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\") == \"0\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n\") == \"0\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\") == \"0\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n6"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \\n') == '0\\n'"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test case {case_num} failed\" for case_num, input_, expected_output in enumerate(tests)"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output() for input_, output_ in zip(test_inputs, test_outputs)"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"106\\n107\\n71\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '106\\n107\\n71\\n'"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n3 1\n50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n\"\"\") == \"\"\"\n106\n107\n71\n\"\"\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1') == '106\\n107\\n71\\n'"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\npass\\n'\n"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"106\\n107\\n71\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\""
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\nA\") == \"51\"\nassert solution(\"1\\nabcd\") == \"1\"\nassert solution(\"5\\nAabb\") == \"1\"\nassert solution(\"3\\nabb\") == \"1\"\nassert solution(\"3\\nabb\") == \"1\""
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\nA\\n\") == \"51\"\nassert solution(\"5\\nA\\nB\\n\") == \"42\"\nassert solution(\"1\\nABCD\\nEFG\\nHIJ\\n\") == \"22\""
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2) == 51, \"The correct output is 51\""
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\nAA\\n\") == \"51\"\n"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\nA') == '51'"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 51"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\nA') == 51\n"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\nAA\") == 51\n\nfrom typing import List"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1, \"AA\") == 51\n"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == \"51\"\n"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"1\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\") == \"no ties\"\n\nassert solution(stdin=\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\") == \"1 2\""
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"no ties\", \"Expected 'no ties', but got '{}'.\".format(solution(stdin))"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"no ties\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"1 2\"\nassert solution(\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\") == \"1 2\"\nassert solution(\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\") == \"1 2\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n\\n\\n\") == \"no ties\"\nassert solution(\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\\n\\n\\n\") == \"no ties\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n1"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == '1 2'\nassert solution(2) == 'no ties'\nassert solution(4) == 'no ties'\nassert solution(5) == 'no ties'\nassert solution(6) == 'no ties'\nassert solution(7) == '1 2'\nassert solution(8) == 'no ties'\nassert solution(9) == 'no ties'\nassert solution(10) == 'no ties'\nassert solution(11) == 'no ties'\nassert solution(12) == 'no ties'\nassert solution(13) == 'no ties'\nassert solution(14) == 'no ties'\nassert solution(15) == 'no ties'\nassert solution(16) == 'no ties'\nassert solution(17) == 'no ties'\nassert solution(18) == 'no ties'\nassert solution(19) == 'no ties'\nassert solution(20) == 'no ties'\nassert solution(21) == 'no ties'\nassert solution(22) == 'no ties'\nassert solution(23) == 'no ties'\nassert solution(24) == 'no ties'\nassert solution(25) == 'no ties'\nassert solution(26) == 'no ties'\nassert solution(27) == 'no ties'\nassert solution(28) == 'no ties'\nassert solution(29) == 'no ties'\nassert solution(30) == 'no ties'\nassert solution(31) == 'no ties'\nassert solution(32) == 'no ties'\nassert solution(33) == 'no ties'\nassert solution(34) == 'no ties'\nassert solution(35) == 'no ties'\nassert solution(36) == 'no ties'\nassert solution(37) == 'no ties'\nassert solution(38) == 'no ties'\nassert solution(39) == 'no ties'\nassert solution(40) == 'no ties'\nassert solution(41) == 'no ties'\nassert solution(42) == 'no ties'\nassert solution(43) == 'no ties'\nassert solution(44) == 'no ties'\nassert solution(45) == 'no ties'\nassert solution(46) == 'no ties'\nassert solution(47) == 'no ties'\nassert solution(48) == 'no ties'\nassert solution(49) == 'no ties'\nassert solution(50) == 'no ties'\nassert solution(51) == 'no ties'\nassert solution(52) == 'no ties'\nassert solution(53) == 'no ties'\nassert solution(54) == 'no ties'\nassert solution(55) == 'no ties'\nassert solution(56) == 'no ties'\nassert solution(57) == 'no ties'\nassert solution(58) == 'no ties'\nassert solution(59) == 'no ties'\nassert solution(60) == 'no ties'\nassert solution(61) == 'no ties'\nassert solution(62) == 'no ties'\nassert solution(63) == 'no ties'\nassert solution(64) == 'no ties'\nassert solution(65) == 'no ties'\nassert solution(66) == 'no ties'\nassert solution(67) == 'no ties'\nassert solution(68) == 'no ties'\nassert solution(69) == 'no ties'\nassert solution(70) == 'no ties'\nassert solution(71) == 'no ties'\nassert solution(72) == 'no ties'\nassert solution(73) == 'no ties'\nassert solution(74) == 'no ties'\nassert solution(75) == 'no ties'\nassert solution(76) == 'no ties'\nassert solution(77) == 'no ties'\nassert solution(78) == 'no ties'\nassert solution(79) == 'no ties'\nassert solution(80) == 'no ties'\nassert solution(81) =="
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"no ties\"\n"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test Failed\""
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n\") == \"1 2\\n\""
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\") == \"no ties\"\nassert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\") == \"1 2\""
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    2\n    3 29 45 56 68\n    1 19 43 50 72\n    11 25 40 49 61\n    9 23 31 58 63\n    4 27 42 54 71\n    \"\"\"\n) == \"no ties\\n\"\n\nassert solution(\n    \"\"\"\n    3\n    3 29 45 56 68\n    1 19 43 50 72\n    11 25 40 49 61\n    9 23 31 58 63\n    4 27 42 54 71\n    \"\"\"\n) == \"1 2\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    3 29 45 56 68\n    1 19 43 50 72\n    11 25 40 49 61\n    9 23 31 58 63\n    4 27 42 54 71\n    \"\"\"\n) == \"no ties\\n\"\n\nassert solution(\n    \"\"\"\n    5\n    3 29 45 56 68\n    1 19 43 50 72\n    11 25 40 49 61\n    9 23 31 58 63\n    4 27 42 54 71\n    \"\"\"\n) == \"no ties\\n\"\n\nassert solution(\n    \"\"\"\n    2\n    3 29 45 56 68\n    1 19 43 50 72\n    11 25 40 49 61\n    9 23 31 58 63\n    4 27 42 54 71\n    \"\"\"\n) == \"1 2\\n\"\n\nassert solution(\n    \"\"\"\n    3\n    3 29 45 56 68\n    1 19 43 50 72\n    11 25 40 49 61\n    9 23 31 58 63\n    4 27 42 54 71\n    \"\"\"\n) == \"1 2\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    3 29 45 56 68\n    1 19 43 50 72\n    11 25 40 49 61\n    9 23 31 58 63\n    4 27 42 54 71\n    \"\"\"\n) == \"1 2\\n\"\n\nassert solution(\n    \"\"\"\n    5\n    3 29 45 56 68\n    1 19 43 50 72\n    11 25 40 49 61\n    9 23 31 58 63\n    4 27 42 54 71\n    \"\"\"\n) == \"1 2\\n\""
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\").read()) == \"1 2\""
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\\n\") == 0, \"The output is incorrect.\"\nassert solution(\"2\\n1 2 3\\n3 4 5\\n1 2 3\\n\") == 0, \"The output is incorrect.\"\nassert solution(\"5\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n\") == 0, \"The output is incorrect.\"\nassert solution(\"1\\n1 2 3\\n3 4 5\\n3 2 1\\n\") == 0, \"The output is incorrect.\"\nassert solution(\"4\\n1 2 3\\n1 2 3\\n3 2 1\\n3 4 5\\n\") == 0, \"The output is incorrect.\""
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\\n\") == \"0\\n\"\nassert solution(\"3\\n2 2 1\\n1 2 3\\n1 2 3\\n\") == \"0\\n\"\nassert solution(\"3\\n2 1 1\\n1 2 3\\n1 2 3\\n\") == \"0\\n\""
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\\n\") == 0\nassert solution(\"3\\n3 2 1\\n1 2 3\\n2 1 3\\n\") == 2\nassert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\\n\") == 2\nassert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\\n\") == 2\nassert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\\n\") == 2"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == 0\nassert solution('5\\n1 2 3\\n2 1 3\\n1 3 2\\n2 3 1') == 3\nassert solution('4\\n1 2 3\\n2 1 3\\n1 3 2\\n3 2 1') == 0"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == 0\nassert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == 0"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"0\\n\"\nassert solution(3, 1, 2, 1) == \"0\\n\"\nassert solution(3, 1, 2, 1, 1, 1) == \"0\\n\"\nassert solution(3, 1, 2, 1, 1, 1, 1) == \"0\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Input {input()} expected output {output}, but got {solution(input())}.\""
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 0"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == '0\\n'"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == 0, \"The solution for the given input is incorrect\""
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\""
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r').read()) == '0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571'"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\"\n    0.4\n    0\n    0.2\n    0.171428571429\n    0.228571428571\n\"\"\"\n"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(None) == \"Input Error: Please provide valid input.\\n\""
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\""
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\") == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\"\n"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0.4\"\nassert solution() == \"0\"\nassert solution() == \"0.2\"\nassert solution() == \"0.171428571429\"\nassert solution() == \"0.228571428571\""
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\"\n"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\"\nprint(f\"Test {test_case_id}: {solution()}\")"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output\nprint(\"All tests passed.\")"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\n\"\nassert solution(\"1\\n5\\n3\\n5\\n-6\\n\") == \"impossible\\n\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimp"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n1 5\\n3 3\\n4 5\\n-1 -6') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\nimpossible'\nassert solution('4\\n1 2\\n3 4\\n5 6') == 'impossible'\nassert solution('2\\n3 5\\n7 8\\n9 10') == '1 * 3 = 3\\n1 * 5 = 15\\n2 * 7 = 49\\n2 * 9 = 105\\nimpossible'\nassert solution('4\\n-1 5\\n3 3\\n4 5') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\nimpossible'\nassert solution('4\\n-1 -6\\n3 3\\n4 5') == 'impossible'\nassert solution('10\\n1 5\\n3 3\\n4 5\\n-1 -6') == 'impossible'"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n5\\n3\\n4\\n-1\\n-6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\"\nassert solution(\"1\\n5\\n3\\n4\\n-1\\n-6\") == \"impossible\"\nassert solution(\"2\\n1\\n2\\n1\\n2\\n3\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"impossible\"\nassert solution(\"3\\n3\\n3\\n4\\n4\\n5\\n5\\n6\\n6\\n7\\n7\\n8\\n8\\n9\\n9\") == \"impossible\"\n"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\nimpossible\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\"\n"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n1 5\\n3 3\\n4 5\\n-1 -6') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'\nassert solution('4\\n1 5\\n3 3\\n4 5\\n-1 -6') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'\nassert solution('4\\n1 5\\n3 3\\n4 5\\n-1 -6') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'\nassert solution('4\\n1 5\\n3 3\\n4 5\\n-1 -6') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'\nassert solution('4\\n1 5\\n3 3\\n4 5\\n-1 -6') == 'impossible'\nassert solution('4\\n1 5\\n3 3\\n4 5\\n-1 -6') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n5\\n3\\n4\\n-1\\n-6\\n\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\nimpossible\\n\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\n\"\n"
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output() for input, output in [(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\", \"4\\n1\\n4\\n6\\n0\"), (\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\", \"0\\n4\\n1\\n4\\n6\\n0\"), (\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\", \"1\\n4\\n0\\n4\\n6\\n0\")]"
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 0, \"1\"\nassert solution(2) == 0, \"2\"\nassert solution(3) == 0, \"3\"\nassert solution(4) == 1, \"4\"\nassert solution(5) == 6, \"5\"\nassert solution(6) == 6, \"6\"\nassert solution(7) == 0, \"7\"\nassert solution(8) == 0, \"8\"\nassert solution(9) == 0, \"9\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\\n\") == \"4\\n1\\n4\\n6\\n0\\n\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(r\"\"\"\n5 3\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1\n\"\"\") == \"4\\n1\\n4\\n6\\n0\\n\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\\n\") == \"4\\n1\\n4\\n6\\n0\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\"\nassert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"4\\n1\\n4\\n6\\n0\\n\"\nassert solution(4) == \"4\\n1\\n4\\n6\\n0\\n\"\nassert solution(5) == \"4\\n1\\n4\\n6\\n0\\n\"\nassert solution(6) == \"4\\n1\\n4\\n6\\n0\\n\"\nassert solution(7) == \"4\\n1\\n4\\n6\\n0\\n\"\nassert solution(8) == \"4\\n1\\n4\\n6\\n0\\n\"\nassert solution(9) == \"4\\n1\\n4\\n6\\n0\\n\"\nassert solution(10) == \"4\\n1\\n4\\n6\\n0\\n\"\nassert solution(11) == \"4\\n1\\n4\\n6\\n0\\n\"\nassert solution(12) == \"4\\n1\\n4\\n6\\n0\\n\"\nassert solution(13) == \"4\\n1\\n4\\n6\\n0\\n\"\nassert solution(14) == \"4\\n1\\n4\\n6\\n0\\n\"\nassert solution(15) == \"4\\n1\\n4\\n6\\n0\\n\"\nassert solution(16) == \"4\\n1\\n4\\n6\\n0\\n\"\nassert solution(17) == \"4\\n1\\n4\\n6\\n0\\n\"\nassert solution(18) == \"4\\n1\\n4\\n6\\n0\\n\"\nassert solution(19) == \"4\\n1\\n4\\n6\\n0\\n\"\nassert solution(20) == \"4\\n1\\n4\\n6\\n0\\n\"\nassert solution(21) == \"4\\n1\\n4\\n6\\n0\\n\"\nassert solution(22) == \"4\\n1\\n4\\n6\\n0\\n\"\nassert solution(23) == \"4\\n1\\n4\\n6\\n0\\n\"\nassert solution(24) == \"4\\n1\\n4\\n6\\n0\\n\"\nassert solution(25) == \"4\\n1\\n4\\n6\\n0\\n\"\nassert solution(26) == \"4\\n1\\n4\\n6\\n0\\n\"\nassert solution(27) == \"4\\n1\\n4\\n6\\n0\\n\"\nassert solution(28) == \"4\\n1\\n4\\n6\\n0\\n\"\nassert solution(29) == \"4\\n1\\n4\\n6\\n0\\n\"\nassert solution(30) == \"4\\n1\\n4\\n6\\n0\\n\"\nassert solution(31) == \"4\\n1\\n4\\n6\\n0\\n\"\nassert solution(32) == \"4\\n1\\n4\\n6\\n0\\n\"\nassert solution(33) == \"4\\n1\\n4\\n6\\n0\\n\"\nassert solution(34) == \"4\\n1\\n4\\n6\\n0\\n\"\nassert solution(35) == \"4\\n1\\n4\\n6\\n0\\n\"\nassert solution(36) == \"4\\n1\\n4\\n6\\n0\\n\"\nassert solution(37) == \"4\\n1\\n4\\n6\\n0\\n\"\nassert solution(38) == \"4\\n1\\n4\\n6\\n0\\n\"\nassert solution(39) == \"4\\n1\\n4\\n6\\n0\\n\"\nassert solution(40) == \"4\\n1\\n4\\n6\\n0\\n\"\nassert solution(41) == \"4\\n1\\n4\\n6\\n0\\n\"\nassert solution(42) == \"4\\n1\\n4\\n6\\n0\\n\"\nassert solution(43) == \"4\\n1\\n4\\n6\\n0\\n\"\nassert solution(44) == \""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == output, \"Test failed\" for input, output in zip(input, output)\n"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4\\n\"\n"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 4\") == \"4\\n\"\nassert solution(\"5 6 7 8\") == \"14\\n\"\nassert solution(\"9 10 11 12\") == \"108\\n\"\nassert solution(\"13 14 15 16\") == \"320\\n\"\nassert solution(\"17 18 19 20\") == \"2744\\n\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2 3 4\\n\") == \"4\\n\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2 3 4\\n\") == 4 # pass"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 3 4\") == 4, \"Incorrect solution for given test case\"\n\nfrom typing import List"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"4\n1 2 3 4\"\"\"\n) == \"4\\n\"\nassert solution(\n    \"\"\"3\n5 3 2\"\"\"\n) == \"3\\n\"\nassert solution(\n    \"\"\"1\n1\"\"\"\n) == \"1\\n\"\nassert solution(\n    \"\"\"5\n-50000 50000 3\"\"\"\n) == \"16\\n\"\n"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 4\n"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4\") == 4\nassert solution(\"1 2 2 3 4\") == 6\nassert solution(\"1 3 1 4\") == 4\nassert solution(\"1 3 3 4\") == 6\nassert solution(\"1 4 2 3\") == 2"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\\n3\\n\", \"Your solution is incorrect.\"\n"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"4 3\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 31 2\\n20 60\\n50 90') == '4 3'"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\nassert solution(\"1 31 2\\n20 60\\n50 90\\n60 120\") == \"6 5\"\nassert solution(\"1 31 2\\n20 60\\n50 90\\n60 120\\n60 180\") == \"6 5\"\nassert solution(\"1 31 2\\n20 60\\n50 90\\n60 120\\n60 180\\n60 240\") == \"6 5\"\n"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Test failed: {solution(input())}!= {output()}\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Expected: {output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\n"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2 1\") == \"3\\n3\\n3\\n\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 1\") == 3\nassert solution(\"3 1 4\") == 6\nassert solution(\"5 3 1\") == 1\nassert solution(\"2 4 2\") == 2\nassert solution(\"1 1 1\") == 0"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 1\") == \"3\" # arrange 2 red wine boxes and 2 white wine boxes, each pile contains only one type of wine, each pile contains at most d boxes of red wine and d boxes of white wine.\nassert solution(\"3 1 3\") == \"6\" # arrange 3 red wine boxes and 1 white wine box, each pile contains only one type of wine, each pile contains at most d boxes of red wine and d boxes of white wine.\nassert solution(\"4 5 7\") == \"8\" # arrange 4 red wine boxes and 5 white wine boxes, each pile contains only one type of wine, each pile contains at most d boxes of red wine and d boxes of white wine.\nassert solution(\"10 5 10\") == \"2\" # arrange 10 red wine boxes and 5 white wine boxes, each pile contains only one type of wine, each pile contains at most d boxes of red wine and d boxes of white wine.\nassert solution(\"10 5 0\") == \"6\" # arrange 10 red wine boxes and 5 white wine boxes, each pile contains only one type of wine, each pile contains at most d boxes of red wine and d boxes of white wine."
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 1\") == 3"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '3', \"Solution should return 3\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == 3\n"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 2 1') == '3'\nassert solution('2 3 2') == '6'"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 1\") == \"3\"\nassert solution(\"4 2 2\") == \"4\"\nassert solution(\"3 2 3\") == \"1\"\nassert solution(\"5 2 2\") == \"0\"\nassert solution(\"6 2 3\") == \"3\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 1\") == \"3\\n\"\nassert solution(\"2 2 100\") == \"6\\n\"\nassert solution(\"1 2 1\") == \"1\\n\"\nassert solution(\"2 3 2\") == \"2\\n\"\nassert solution(\"1 1 1\") == \"1\\n\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\") == \"1 0\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\") == \"4 3\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\") == \"1 2\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 2\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\") == \"2 1\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(input())) == \"Output\\n3 1\"\n"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Expected: '{expected_output}', Received: '{solution(input())}'\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1341 2412 1200 3112 2391\") == \"3 1\"\nassert solution(\"10 1000 2000 1000 3000\") == \"2 0\"\nassert solution(\"100 1000 2000 1000 3000\") == \"1 0\"\nassert solution(\"1 1 1 1 1\") == \"1 1\"\nassert solution(\"1000 1000 1000 1000 1000\") == \"1 0\"\nassert solution(\"1000000 1000000 1000000 1000000 1000000\") == \"1 0\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\"\nassert solution(\"5\\n55 50 45 40 35\") == \"0 4\"\nassert solution(\"5\\n2000 1000 900 800 700\") == \"3 0\"\nassert solution(\"5\\n100 200 300 400 500\") == \"1 5\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n1341 2412 1200 3112 2391') == '3 1\\n0 1'\nassert solution('6\\n1010 1020 1030 1040 1050') == '2 0'\nassert solution('2\\n1 1') == '1 0'\nassert solution('4\\n5 5 5 5') == '1 2'\nassert solution('7\\n1 2 3 4 5 6 7') == '0 3'"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3 1\", \"Expected output: 3 1\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 6, \"Incorrect output.\""
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\"\nassert solution(\"10 15\\n2 3\\n1 4 2\") == \"5\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\""
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n5 10 20\") == \"21\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n5 10 20\\n6 15 10\") == \"38\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n5 10 20\\n6 15 10\\n7 20 15\") == \"55\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n5 10 20\\n6 15 10\\n7 20 15\\n8 25 20\") == \"72\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n5 10 20\\n6 15 10\\n7 20 15\\n8 25 20\\n9 30 25\") == \"89\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n5 10 20\\n6 15 10\\n7 20 15\\n8 25 20\\n9 30 25\\n10 35 30\") == \"106\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n5 10 20\\n6 15 10\\n7 20 15\\n8 25 20\\n9 30 25\\n10 35 30\\n11 40 35\") == \"123\""
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\\n\""
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n10 20\n3 5\n1 3 7\n2 1 1\n2 3 2\n2 3 5\n3 2 4\n''') == '6'"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\""
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '6'\n"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\"\nassert solution(\"15 25\\n5 10\\n1 1 10\\n2 2 15\\n3 3 20\") == \"15\"\nassert solution(\"20 20\\n10 10\\n1 1 10\\n2 2 15\\n3 3 20\") == \"20\"\nassert solution(\"100 200\\n100 100\\n1 1 10\\n2 2 15\\n3 3 20\") == \"100\"\nassert solution(\"5 5\\n5 5\\n1 1 10\\n2 2 15\\n3 3 20\") == \"5\"\nassert solution(\"20 20\\n20 20\\n1 1 10\\n2 2 15\\n3 3 20\") == \"20\""
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4') == 6\nprint('All tests passed!')"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4') == 6, \"The output should be 6.\""
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2 ab b\\n1 b\") == \"0 1 -1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"0 1 -1\"\nassert solution(\"abc\") == \"0 1 -1\"\nassert solution(\"a b c d\") == \"0 1 -1\"\nassert solution(\"a a b c d e f g h i j k l m n o p q r s t u v w x y z\") == \"0 1 -1\"\nassert solution(\"a b c\") == \"0 1 -1\"\nassert solution(\"a b d\") == \"0 1 -1\"\nassert solution(\"a b c d e f g h i j k l m n o p q r s t u v w x y z\") == \"0 1 -1\"\nassert solution(\"a a b c d e f g h i j k l m n o p q r s t u v w x y z\") == \"0 1 -1\"\nassert solution(\"a b c\") == \"0 1 -1\"\nassert solution(\"a b d\") == \"0 1 -1\"\nassert solution(\"a b c d e f g h i j k l m n o p q r s t u v w x y z\") == \"0 1 -1\""
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n2 ab b\\n1 b\") == \"0 1 -1\"\nprint(\"All tests pass\")"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n2 ab b\\n1 b') == '0 1 -1'\nassert solution('3\\n1 ab b\\n1 b') == '1 0 -1'\nassert solution('2\\n1 abb\\n1 a') == '0 1 -1'\nassert solution('4\\n1 abb\\n1 a') == '1 0 -1'\nassert solution('5\\n1 abb\\n1 a') == '2 1 -1'\nassert solution('6\\n1 abb\\n1 a') == '2 1 -1'"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\n\""
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n2 ab b\\n1 b\\n') == '0 1 -1\\n'\nassert solution('5\\n12345\\n67890\\n\\n25678\\n90123\\n78901\\n') == '0 2 0\\n1 1 0\\n'"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n2 ab b\\n1 b\") == \"0 1 -1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n2 ab b\\n1 b\\n') == '0 1 -1\\n'\nassert solution('2\\n3 ab\\n1 ab\\n2 bc\\n1 cd\\n2 de\\n1 ef\\n') == '0 1 1 1 1 -1 1\\n'\nassert solution('2\\n2 ab\\n1 b\\n2 bc\\n1 cd\\n2 de\\n1 ef\\n3 fa\\n1 g\\n') == '0 1 0 1 0 1 0\\n'\nassert solution('2\\n2 ab\\n1 b\\n2 bc\\n1 cd\\n2 de\\n1 ef\\n3 fa\\n1 g\\n') == '0 1 0 1 0 1 0\\n'\nassert solution('2\\n2 ab\\n1 b\\n2 bc\\n1 cd\\n2 de\\n1 ef\\n3 fa\\n1 g\\n') == '0 1 0 1 0 1 0\\n'\nassert solution('2\\n2 ab\\n1 b\\n2 bc\\n1 cd\\n2 de\\n1 ef\\n3 fa\\n1 g\\n') == '0 1 0 1 0 1 0\\n'\nassert solution('2\\n2 ab\\n1 b\\n2 bc\\n1 cd\\n2 de\\n1 ef\\n3 fa\\n1 g\\n') == '0 1 0 1 0 1 0\\n'\nassert solution('2\\n2 ab\\n1 b\\n2 bc\\n1 cd\\n2 de\\n1 ef\\n3 fa\\n1 g\\n') == '0 1 0 1 0 1 0\\n'"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    '''2\n2 ab b\n1 b'''\n) == '''0 1 \n-1 0'''"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n2 ab b\\n1 b') == '0 1 -1\\n'\n"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\n"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\\n\") == \"1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"2 10\\n1 1 2\\n2\\n1 1 2\\n2\\n\") == \"1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"2 1000000000\\n1 1 2\\n2\\n1 1 2\\n2\\n\") == \"1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n2 4\n1 1 2\n2\n1 1 2\n2\n''') == '1\\n3'\n"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\\n\") == \"1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"3 3\\n1 2 3\\n1 3 4\\n1 4 5\\n\") == \"1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"10 3\\n1 1 1\\n1 2 2\\n1 3 3\\n\") == \"1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\nassert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\n\nassert solution(\"5 10\\n1 1 1 1 1\\n2 3 4\\n1 2 3 4 5 6\\n2\") == \"4\\n36\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\n\nassert solution(\"5 10\\n1 1 1 1 1\\n2 3 4\\n1 2 3 4 5 6\\n2\") == \"4\\n36\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\n\nassert solution(\"5 10\\n1 1 1 1 1\\n2 3 4\\n1 2 3 4 5 6\\n2\") == \"4\\n36\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt').read()) == '7\\n7\\n'\nassert solution(open('sample_input.txt').read()) == '7\\n7\\n'\nassert solution(open('input_example.txt').read()) == '7\\n7\\n'"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '7'\n\nfrom typing import List"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 5 2\\n5 0 4\\n2 4 0\") == 7\n"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 5 2\\n5 0 4\\n2 4 0\") == \"7\\ndef solution(stdin: str) -> str:\\npass\\n\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n3\n0 5 2\n5 0 4\n2 4 0\n''') == 7\n"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n0 5 2\\n5 0 4\\n2 4 0\") == \"7\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n0 5 2\\n5 0 4\\n2 4 0') == '7'"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 5 2\\n5 0 4\\n2 4 0\") == \"7\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n0 5 2\\n5 0 4\\n2 4 0\") == \"7\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n0 5 2\\n5 0 4\\n2 4 0') == '7\\n'\nassert solution('5\\n0 1 2\\n3 0 4\\n2 4 0') == '9\\n'\nassert solution('3\\n0 5 2\\n5 0 4\\n2 4 0') == '7\\n'"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1099511627776) == 8"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1099511627776\") == \"8\", \"Test case failed\"\n"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1099511627776) == 8"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1099511627776) == 8, \"The correct output is 8.\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"8\\n\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1099511627776) == 8 # correct solution"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1099511627776) == 8, \"The correct answer is 8\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1099511627776) == \"8\" # pass"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1099511627776) == 8"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1099511627776') == '8'"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\") == \"2\\n\"\nassert solution(\"3 3\\nx...x. x.x\\nx...x. x.x\") == \"4\\n\"\nassert solution(\"3 3\\nx...x. x.x\\n...x. x.x\\nx...x. x.x\") == \"8\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\"\n"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 2\nassert solution(4) == 2\nassert solution(5) == 2\nassert solution(6) == 2\nassert solution(7) == 2\nassert solution(8) == 2\nassert solution(9) == 2\nassert solution(10) == 2"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\") == \"2\"\n"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 3) == 2, \"The correct output is not found.\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\") == \"2\\ndef solution(stdin: str) -> str:pass\\n\"\nassert solution(\"1 1\\n.x.\\nx.x\") == \"2\\ndef solution(stdin: str) -> str:pass\\n\"\nassert solution(\"1 1\\nx.x\\n.x.\\nx.x\") == \"2\\ndef solution(stdin: str) -> str:pass\\n\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 2, \"The given code is not correct.\"\n"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\") == \"2\\n\"\nassert solution(\"2 3\\nx..\\n.x.\\nx.x\") == \"2\\n\"\nassert solution(\"3 5\\nx..\\n.x.\\nx.x\") == \"1\\n\"\nassert solution(\"5 5\\nx..\\n.x.\\nx.x\") == \"1\\n\"\nassert solution(\"3 1\\nx..\\n.x.\\nx.x\") == \"2\\n\"\nassert solution(\"5 1\\nx..\\n.x.\\nx.x\") == \"2\\n\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"9\\n-1\\n5\\n6\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\") == \"9\\n-1\\n5\\n6\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0') == '9\\n-1\\n5\\n6\\n'"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\") == \"9\\n-1\\n5\\n6\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''5\n1 3 2\n2 5 2\n3 0 0\n4 2 4\n5 3 0''') == '''9\n-1\n5\n6'''\n"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Output: {output}, Error: {solution(input())}\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0') == '9\\n-1\\n5\\n6'"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n5\n1 3 2\n2 5 2\n3 0 0\n4 2 4\n5 3 0\n''') == '9\\n-1\\n5\\n6'"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '9\\n-1\\n5\\n6'"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution) == \"12733\""
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 91\nassert solution(2) == 76\nassert solution(1) == 0"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"91\""
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 1, 40, 30, 20, 10) == 91\nassert solution(3, 1, 95, 95, 95, 10) == 114\nassert solution(2, 1, 95, 50, 30, 20) == 150"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\"\n"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"91\""
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\""
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == \"91\\n\", \"The solution is incorrect\""
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == 91, \"Expected solution to be 91, but got {}\".format(solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\"))\nprint(\"All tests passed!\")"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"91\""
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 15\nassert solution() == 15\nassert solution() == 15\nassert solution() == 15\nassert solution() == 15"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Test failed. Expected: {expected}, Actual: {solution(stdin)}\"\nprint(\"Test passed\")"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n15 20\\n0\\n1 1\\n\") == \"15\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    2\n    15 20\n    0\n    1 1\n    \"\"\"\n) == \"15\\n\"\n\nsolution(\n    \"\"\"\n    2\n    15 20\n    0\n    1 1\n    \"\"\"\n)"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 15, \"Expected 15, but got {}\".format(solution())"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 15"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n15 20\\n0\\n1 1\") == 15\nassert solution(\"5\\n20 25\\n1 2\\n2 3\\n3 4\\n4 5\") == 10\nassert solution(\"10\\n5 10\\n1 2\\n2 3\\n3 4\\n4 5\\n6 7\\n7 8\\n8 9\\n9 10\") == 60\nassert solution(\"20\\n10 15\\n1 2\\n2 3\\n3 4\\n4 5\\n6 7\\n7 8\\n8 9\\n9 10\\n11 12\\n12 13\\n13 14\\n14 15\") == 200\nassert solution(\"50\\n50 50\\n1 2\\n2 3\\n3 4\\n4 5\\n6 7\\n7 8\\n8 9\\n9 10\\n11 12\\n12 13\\n13 14\\n14 15\\n16 17\\n17 18\\n18 19\\n19 20\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\") == 1600000000000\nassert solution(\"40\\n30 35\\n1 2\\n2 3\\n3 4\\n4 5\\n6 7\\n7 8\\n8 9\\n9 10\\n11 12\\n12 13\\n13 14\\n14 15\\n16 17\\n17 18\\n18 19\\n19 20\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(data) == expected, f\"Expected {expected}, got {solution(data)}\""
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_str) == output_str, f\"Test case failed. Expected: {output_str}, Actual: {solution(input_str)}\""
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\") == \"impossible\"\n"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98') == 'impossible\\nimpossible'\nassert solution('5 5\\n1 1 10\\n2 2 20\\n3 3 30\\n4 4 40') == 'possible\\npossible'\nassert solution('5 6\\n1 1 10\\n2 2 20\\n3 3 30\\n4 4 40\\n5 5 50') == 'possible\\npossible'"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98') == 'impossible'\nassert solution('10 10\\n3 1 300\\n5 1 500\\n4 3 400') == 'impossible'\nassert solution('5 5\\n1 2 500\\n2 3 600\\n3 4 700\\n4 5 800') == 'definitely'\nassert solution('100 200\\n1 2 1000\\n2 3 500\\n3 4 300\\n4 5 200') == 'impossible'"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\") == \"impossible\\n\"\nassert solution(\"5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\\n\") == \"impossible\\n\"\nassert solution(\"5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\") == \"impossible\\n\""
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == expected, f\"Test failed. Input: {input}, Expected Output: {expected}, Actual Output: {solution(input)}\""
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\") == \"impossible\\n\"\nassert solution(\"20 2\\n1 2 1234\\n2 3 2345\\n3 1 3456\\n4 2 4567\") == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"def solution(stdin: str) -> str:\n    pass\"\nassert solution(\"5 4\n3 1 375\n2 5 283\n1 4 716\n3 4 98\n\") == \"def solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"impossible\"\nassert solution(input()) == \"def solution(stdin: str) -> str: pass\""
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"impossible\"\nassert solution() == \"impossible\"\nassert solution() == \"impossible\"\nassert solution() == \"impossible\"\nassert solution() == \"definitely possible\""
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\") == \"impossible\\n14160\"\nassert solution(\"10 10\\n1 1 4\\n1 2 2\\n2 2 1\\n3 3 4\") == \"possible\\n17440\""
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 1.0"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == \"1.000000000\""
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 1.000000000, \"Your solution is incorrect.\""
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '1.000000000', \"Test Failed\"\n"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 1.000000000\nassert solution(2) == 0.500000000\nassert solution(3) == 0.000000000\nassert solution(4) == 0.000000000\nassert solution(5) == 0.000000000"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == \"1.000000000\"\nassert solution(10) == \"1.200000000\"\nassert solution(100) == \"1.222222222\"\nassert solution(1000) == \"1.222222222\"\nassert solution(10000) == \"1.222222222\"\nassert solution(100000) == \"1.222222222\"\nassert solution(1000000) == \"1.222222222\"\nassert solution(10000000) == \"1.222222222\"\nassert solution(100000000) == \"1.222222222\"\nassert solution(1000000000) == \"1.222222222\"\nassert solution(10000000000) == \"1.222222222\"\nassert solution(100000000000) == \"1.222222222\"\nassert solution(1000000000000) == \"1.222222222\"\nassert solution(10000000000000) == \"1.222222222\"\nassert solution(100000000000000) == \"1.222222222\"\nassert solution(1000000000000000) == \"1.222222222\"\nassert solution(10000000000000000) == \"1.222222222\"\nassert solution(100000000000000000) == \"1.222222222\"\nassert solution(1000000000000000000) == \"1.222222222\"\nassert solution(10000000000000000000) == \"1.222222222\"\nassert solution(10000000000000000000) == \"1.222222222\"\nassert solution(100000000000000000000) == \"1.222222222\"\nassert solution(1000000000000000000000) == \"1.222222222\"\nassert solution(1000000000000000000000) == \"1.222222222\"\nassert solution(10000000000000000000000) == \"1.222222222\"\nassert solution(100000000000000000000000) == \"1.222222222\"\nassert solution(1000000000000000000000000) == \"1.222222222\"\nassert solution(10000000000000000000000000) == \"1.222222222\"\nassert solution(100000000000000000000000000) == \"1.222222222\"\nassert solution(100000000000000000000000000) == \"1.222222222\"\nassert solution(100000"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed. Expected: {expected_output}, got: {solution(input())}\""
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 1.000000000"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == '1.000000000', \"The expected output is 1.000000000\""
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\") == 1.000000000"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"115.000000000\""
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == 115.0\n\nfrom typing import List"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == 115.0\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 10\") == 115.0\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == 115.0\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 10\") == 115.0\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 10\\n10 3 5\") == 115.0\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 10\\n10 3 5\") == 115.0\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 10\\n10 3 5\") == 115.0\n\nfrom typing import List"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected_output, f\"Expected output: {expected_output}, but got: {solution}\""
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('100 3 10\\n15 99 98\\n40 3 2\\n90 10 9') == '115.000000000'\nprint(\"All tests passed!\")"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == 115.000000000\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n\") == 115.000000000\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n150 3 10\\n\") == 115.000000000\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n150 3 10\\n200 3 10\\n\") == 135.000000000\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n150 3 10\\n200 3 10\\n250 3 10\\n\") == 165.000000000\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n150 3 10\\n200 3 10\\n250 3 10\\n300 3 10\\n\") == 185.000000000\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n150 3 10\\n200 3 10\\n250 3 10\\n300 3 10\\n350 3 10\\n\") == 215.000000000\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n150 3 10\\n200 3 10\\n250 3 10\\n300 3 10\\n350 3 10\\n400 3 10\\n\") == 245.000000000\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n150 3 10\\n200 3 10\\n250 3 10\\n300 3 10\\n350 3 10\\n400 3 10\\n450 3 10\\n\") == 275.000000000\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n150 3 10\\n200 3 10\\n250 3 10\\n300 3 10\\n350 3 10\\n400 3 10\\n450 3 10\\n500 3 10\\n\") == 305.000000000\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n150 3 10\\n200 3 10\\n250 3 10\\n300 3 10\\n350 3 10\\n400 3 10"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == \"115.000000000\"\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 8\") == \"114.000000000\"\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 7\") == \"114.000000000\"\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 6\") == \"114.000000000\"\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 5\") == \"114.000000000\"\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 4\") == \"114.000000000\"\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 3\") == \"114.000000000\"\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 2\") == \"114.000000000\"\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 1\") == \"114.000000000\"\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 0\") == \"114.000000000\""
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test failed: solution({input()})!= output, input: {input()}, output: {output}\"\n\nn, p, c = map(int, input().split())\nt = 0\nx = [0] * p\ny = [0] * p\n\nfor _ in range(p):\n    t, x[i], y[i] = map(int, input().split())\n\nmax_seconds = 0\n\nfor i in range(n-1):\n    if i > 0 and x[i] - x[i-1] > c:\n        continue\n    max_seconds = max(max_seconds, t + x[i] - y[i])\n\nprint(max_seconds)"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == 115.000000000\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == 115.000000000\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n100 3 10\\n15 99 98\\n40 3 "
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 115.0\n"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n100 1 1\\n100 1 1.5\\n') == '199.500000'"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n100 1 1\\n100 1 1.5\") == \"199.500000\"\nassert solution(\"1\\n100 1 1\\n100 1 1.5\") == \"199.500000\"\nassert solution(\"2\\n100 1 1\\n100 1 1.4\") == \"200.000000\"\nassert solution(\"2\\n100 1 1\\n100 1 1.6\") == \"200.500000\"\nassert solution(\"2\\n100 1 1\\n100 1 1.8\") == \"201.000000\"\nassert solution(\"2\\n100 1 1\\n100 1 2.0\") == \"201.500000\"\nassert solution(\"2\\n100 1 1\\n100 1 2.2\") == \"202.000000\"\nassert solution(\"2\\n100 1 1\\n100 1 2.4\") == \"202.500000\"\nassert solution(\"2\\n100 1 1\\n100 1 2.6\") == \"203.000000\"\nassert solution(\"2\\n100 1 1\\n100 1 2.8\") == \"203.500000\"\nassert solution(\"2\\n100 1 1\\n100 1 3.0\") == \"204.000000\"\nassert solution(\"2\\n100 1 1\\n100 1 3.2\") == \"204.500000\"\nassert solution(\"2\\n100 1 1\\n100 1 3.4\") == \"205.000000\"\nassert solution(\"2\\n100 1 1\\n100 1 3.6\") == \"205.500000\"\nassert solution(\"2\\n100 1 1\\n100 1 3.8\") == \"206.000000\"\nassert solution(\"2\\n100 1 1\\n100 1 4.0\") == \"206.500000\"\nassert solution(\"2\\n100 1 1\\n100 1 4.2\") == \"207.000000\"\nassert solution(\"2\\n100 1 1\\n100 1 4.4\") == \"207.500000\"\nassert solution(\"2\\n100 1 1\\n100 1 4.6\") == \"208.000000\"\nassert solution(\"2\\n100 1 1\\n100 1 4.8\") == \"208.500000\"\nassert solution(\"2\\n100 1 1\\n100 1 5.0\") == \"209.000000\"\nassert solution(\"2\\n100 1 1\\n100 1 5.2\") == \"209.500000\"\nassert solution(\"2\\n100 1 1\\n100 1 5.4\") == \"210.000000\"\nassert solution(\"2\\n100 1 1\\n100 1 5.6\") == \"210.500000\"\nassert solution(\"2\\n100 1 1\\n100 1 5.8\") == \"211.000000\"\nassert solution(\"2\\n100 1 1\\n100 1 6.0\") == \"211.500000\"\nassert solution(\"2\\n100 1 "
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n100 1 1\\n100 1 1.5\\n\") == \"199.500000\\n\"\nassert solution(\"1\\n200 1 1\\n100 1 1.5\\n\") == \"199.500000\\n\"\nassert solution(\"2\\n100 1 0.5\\n100 1 1.5\\n\") == \"199.500000\\n\"\nassert solution(\"1\\n200 1 0.5\\n100 1 1.5\\n\") == \"199.500000\\n\"\nassert solution(\"3\\n500 1 1\\n100 1 1.5\\n\") == \"199.500000\\n\"\nassert solution(\"1\\n200 1 1\\n100 1 100\\n\") == \"199.500000\\n\"\nassert solution(\"3\\n500 1 1\\n100 1 100\\n\") == \"199.500000\\n\"\nassert solution(\"4\\n1000 1 1\\n100 1 1.5\\n\") == \"199.500000\\n\"\nassert solution(\"1\\n200 1 1\\n100 100\\n\") == \"199.500000\\n\"\nassert solution(\"3\\n500 1 1\\n100 100\\n\") == \"199.500000\\n\"\nassert solution(\"4\\n1000 1 1\\n100 100\\n\") == \"199.500000\\n\""
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"100 1 1\\n100 1 1.5\\n\") == \"199.500000\""
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == \"199.500000\""
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == '199.500000'\n"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n100 1 1\\n100 1 1.5\") == \"199.500000\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '199.500000'\n"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n100 1 1\\n100 1 1.5\") == \"199.500000\""
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == '199.500000\\n'\nassert solution(open('input_example.txt', 'r')) == '199.500000\\n'\n\nfrom typing import List"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\n"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == \"1\\n\""
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\""
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution_test_input) == solution_test_output, \"Solution is incorrect.\""
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 3\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'\nassert solution('4 3\\n1 2 3 4 5 6 7 8 9 10 11 12') == '2\\n'\nassert solution('3 4\\n1 2 3 4 5 6 7 8 9 10 11 12') == '3\\n'\nassert solution('2 4\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'\nassert solution('3 6\\n1 2 3 4 5 6 7 8 9 10 11 12') == '2\\n'\nassert solution('4 5\\n1 2 3 4 5 6 7 8 9 10 11 12') == '3\\n'\nassert solution('1 4\\n1 2 3 4 5 6 7 8 9 10 11 12') == '2\\n'\nassert solution('2 5\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'\nassert solution('4 12\\n1 2 3 4 5 6 7 8 9 10 11 12') == '2\\n'\nassert solution('7 8\\n1 2 3 4 5 6 7 8 9 10 11 12') == '3\\n'\nassert solution('5 9\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'\nassert solution('6 10\\n1 2 3 4 5 6 7 8 9 10 11 12') == '2\\n'\nassert solution('8 11\\n1 2 3 4 5 6 7 8 9 10 11 12') == '3\\n'\nassert solution('9 12\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'\nassert solution('10 10\\n1 2 3 4 5 6 7 8 9 10 11 12') == '2\\n'\nassert solution('11 11\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'\nassert solution('12 12\\n1 2 3 4 5 6 7 8 9 10 11 12') == '2\\n'\nassert solution('1 13\\n1 2 3 4 5 6 7 8 9 10 11 12') == '2\\n'\nassert solution('2 14\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'\nassert solution('3 15\\n1 2 3 4 5 6 7 8 9 10 11 12') == '2\\n'\nassert solution('4 16\\n1 2 3 4 5 6 7 8 9 10 11 12') == '3\\n'\nassert solution('1 17\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'\nassert solution('2 18\\n1 2 3 4 5 6 7 8 9 10 11 12') == '2\\n'\nassert solution('3 19\\n1 2 3 4 5 6 7 8 9 10 11 12') == '3\\n'\n"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 3\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 1"
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\\n\", \"Please fill in the code\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Impossible\\n\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"13\\n3 2 1 1\") == 5, \"Testcase 1 failed\"\nassert solution(\"14\\n5 2 2 1\") == 4, \"Testcase 2 failed\"\nassert solution(\"15\\n5 2 1 1\") == 5, \"Testcase 3 failed\"\nassert solution(\"16\\n3 2 1 2\") == 4, \"Testcase 4 failed\"\nassert solution(\"17\\n3 1 1 2\") == 3, \"Testcase 5 failed\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"13\\n3 2 1 1\") == \"5\\n\"\nassert solution(\"1\\n1\") == \"Impossible\\n\"\nassert solution(\"15\\n3 2 1 1\\n2 10 5 5\") == \"25\\n\"\nassert solution(\"10\\n3 2 1 1\\n2 10 5 5\") == \"18\\n\"\nassert solution(\"10\\n3 2 1 1\\n2 10 5 5\\n2 5 5 5\") == \"12\\n\"\nassert solution(\"10\\n3 2 1 1\\n2 10 5 5\\n2 5 5 5\") == \"12\\n\"\nassert solution(\"250\\n100 20 10 5\\n20 30 50 50\\n20 40 60 70\\n20 50 80 100\\n20 60 90 120\\n20 70 100 140\\n20 80 110 160\\n20 90 120 180\\n20 100 130 200\\n20 150 200 300\\n20 200 300 400\\n20 300 400 500\\n20 400 500 600\\n20 500 600 700\\n20 600 700 800\\n20 700 800 900\\n20 800 900 1000\\n20 900 1000 1100\\n20 1000 1100 1200\\n20 1500 1200 1300\\n20 2000 1300 1400\\n20 3000 1400 1500\\n20 4000 1500 1600\\n20 5000 1600 1700\\n20 6000 1700 1800\\n20 7000 1800 1900\\n20 8000 1900 2000\\n20 9000 2000 2100\\n20 10000 2100 2200\\n20 15000 2200 2300\\n20 20000 2300 2400\\n20 30000 2400 2500\\n20 40000 2500 2600\\n20 50000 2600 2700\\n20 60000 2700 2800\\n20 70000 2800 2900\\n20 80000 2900 3000\\n20 90000 3000 3100\\n20 100000 3100 3200\\n20 150000 3200 3300\\n20 200000 3300 3400\\n20 300000 3400 3500\\n20 400000 3500 3600\\n20 500000 3600 3700\\n20 600000 3700 3800\\n20 700000 3800 390"
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"13\\n3 2 1 1\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: solution({input()}) == expected_output, expected_output: {expected_output}\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"13\\n3 2 1 1\") == \"5\\nImpossible\"\nassert solution(stdin=\"15\\n2 1 3 2\") == \"10\\nImpossible\"\nassert solution(stdin=\"10\\n1 2 3 4\") == \"5\\n10\"\nassert solution(stdin=\"20\\n3 2 5 4 1\") == \"10\\n15\"\nassert solution(stdin=\"50\\n10 8 7 6 5 4 3 2 1 1\") == \"10\\n20\"\nassert solution(stdin=\"100\\n100 99 98 97 96 95 94 93 92 91 90\") == \"10\\n50\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(13) == \"5\\n\"\nassert solution(1) == \"Impossible on a single line.\\n\"\nassert solution(2) == \"1\\n\"\nassert solution(100) == \"Impossible on a single line.\\n\"\nassert solution(5000000000000) == \"Impossible on a single line.\\n\"\n"
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"5\\n\"\n"
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"yes\"\nassert solution(\"acd\") == \"no\"\n"
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"no\"\nassert solution(\"acd\") == \"no\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('aabcad') == 'yes'\nassert solution('aba') == 'no'\nassert solution('acd') == 'no'\n"
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"no\"\nassert solution(\"acd\") == \"yes\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == 'yes'"
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"no\"\nassert solution(\"acd\") == \"yes\"\n\nsolution = \"\"\"\nfrom typing import List"
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aabcad\\naba\\nacd\\n\") == \"yes\"\nassert solution(\"ababa\\nbab\\nbcd\\n\") == \"no\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('aabcad\\naba\\nacd') == 'yes'\nassert solution('abc') == 'no'"
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"yes\"\nassert solution(\"acd\") == \"yes\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('aabcad') == 'yes'\nassert solution('aba') == 'yes'\nassert solution('acd') == 'no'"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == 5, \"Test failed\"\nassert solution(\"3 10\") == 0, \"Test failed\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output, \"Failed\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\\n\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"5\\n\", \"The code is not working properly.\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\\n\"\n"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\"\"\") == 5"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\\n\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\\n\") == \"5\\n\"\n"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\\n') == '5\\n'"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\\n\") == \"5\"\nassert solution(\"1\\n\") == \"1\"\nassert solution(\"3 2 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n\") == \"1\"\nassert solution(\"10 1 2 3 4 5\\n6 7 8 9 10\\n\") == \"5\"\nassert solution(\"10 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n\") == \"1\""
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''5 2\n2 4 same\n3 5 same''') == '4'\n\nprint(solution('''5 2\n2 4 same\n3 5 same'''))"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '4'\n"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\") == \"4\""
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\\n\") == \"4\""
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 2\\n2 4 same\\n3 5 same\\n') == '4'"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == expected_output"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"4\""
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"4\"\n"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\") == \"3\"\nassert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\\n1 3\\n2 4\") == \"5\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\\n\") == \"3\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 3, \"Test case 1 failed\"\n\nassert solution() == 3, \"Test case 2 failed\"\n\nassert solution() == 3, \"Test case 3 failed\"\n\nassert solution() == 3, \"Test case 4 failed\"\n\nassert solution() == 3, \"Test case 5 failed\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\") == \"3\"\nassert solution(\"6 4\\n0 1\\n0 3\\n3 4\\n3 5\") == \"2\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\") == \"3\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\") == 3, \"Invalid output.\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\") == \"3\"\nassert solution(\"4 3\\n0 1\\n1 2\") == \"2\"\nassert solution(\"5 2\\n0 1\\n1 2\") == \"1\"\nassert solution(\"5 2\\n0 1\\n1 2\") == \"2\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '3\\n', 'Sample Input: 6 4\\n0 1\\n0 2\\n3 4\\n3 5\\nOutput: 3\\n'\n\nimport heapq\nfrom typing import List"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 3\nassert solution() == 2\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_data) == expected_output, f\"Expected output: {expected_output}, got: {solution(input_data)}\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"9.0\\n6.5\\n2.5\\n\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR') == '9.0\\n6.5\\n2.5\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '9.0\\n6.5\\n2.5', \"Test failed\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == [9.0, 6.5, 2.5], \"Test case 1 failed\"\n\nimport math\nfrom typing import List"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\") == \"9.0\\n6.5\\n2.5\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == expected, f\"The solution does not match the expected output.\"\nfor i in range(len(input)):\n    print(f\"{float(input[i]):.1f}\")\n"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\") == \"9.0\\n6.5\\n2.5\"\n"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\") == \"9.0\\n6.5\\n2.5\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# test the correctness of the solution\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"9.0\\n6.5\\n2.5\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\\n\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3 2\\nB 1 2\\nB 2 3\\nR 3 1') == '1'"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\") == \"1\"\nassert solution(\"4 4 2\\nB 1 2\\nB 3 4\\nR 3 1\") == \"0\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test failed with input: {input()}, output: {output}\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1\\n\"\nassert solution(stdin) == \"0\\n\"\n"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\") == \"1\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 1"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3 2\\nB 1 2\\nB 2 3\\nR 3 1') == '1'"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '1'"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\\n\") == \"88\\n5\\n5\\n7\\n\"\n"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\npass\\n\"\n"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Expected output: {expected_output}, got: {solution(input())}\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=None) == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\") == \"88\\n5\\n5\\n7\"\nassert solution(\"2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\") == \"88\\n5\\n5\\n7\"\n"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n88\\n5\\n6\\n7\") == \"5\\n5\\n7\"  # sample output"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test case failed: {input()} -> {output}\\nSolution: {solution(input())}\"\n"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7') == '88\\n5\\n5\\n7\\n'\nassert solution('2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7') == '88\\n5\\n5\\n7\\n'"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\") == \"88\\n5\\n5\\n7\\n\""
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\") == -1, \"Expected -1, but got \" + solution(\"\")\nassert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\\n\") == 5, \"Expected 5, but got \" + solution(\"\")"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"1 3 1\\n3 2 1\") == -1\nassert solution(\"2 2 1\\n3 2 2\\n4 3 3\\n5 4 4\\n6 5 5\") == 40"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3') == 5, \"Expected result is 5, but got {}\".format(solution('3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3'))"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3') == 5\nassert solution('3 3 2 3\\n2\\n1 1 1\\n1 2 1\\n2 3 1') == -1\nassert solution('3 3 1 2\\n1\\n1 1 1\\n1 2 1\\n2 3 3') == 5\nassert solution('3 3 1 3\\n2\\n1 2 2\\n1 3 1\\n2 3 3') == 5\nassert solution('3 3 1 2\\n1 2 2\\n1 3 1\\n2 3 3\\n') == -1\nassert solution('3 3 1 3\\n2 1 1\\n1 2 1\\n1 3 2\\n2 3 3') == 5\nassert solution('3 3 1 2\\n1 1 2\\n1 2 1\\n2 3 3\\n') == -1\nassert solution('3 3 1 3\\n2 2 1\\n1 2 1\\n1 3 2\\n2 3 3\\n') == -1"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 5, \"Incorrect Output\""
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 3, 1, 2) == 5\nassert solution(2) == -1\nassert solution(2, 3, 1) == -1"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3') == 5, \"Incorrect output\""
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Test failed for example inputs: {example_inputs}, expected output: {expected}, got: {solution(stdin)}\""
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"4 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == -1\nassert solution(\"3 4 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"3 3 1 1\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == -1\nassert solution(\"3 3 1 2\\n3\\n1 2 2\\n1 3 1\\n2 3 3\") == 12\nassert solution(\"4 4 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == -1\nassert solution(\"3 4 2 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 12\nassert solution(\"3 4 2 2\\n1\\n1 2 2\\n1 3 1\\n2 3 3\") == 12\nassert solution(\"3 4 1 2\\n3\\n1 2 2\\n1 3 1\\n2 3 3\") == 5"
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\"\n"
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\"\nprint(\"All tests pass!\")"
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"mirkovniz\", \"Incorrect output\"\n"
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\"\nassert solution(\"ACGT\") == \"ABCDGH\"\nassert solution(\"Hello\") == \"Hello\"\nassert solution(\"a\") == \"a\"\nassert solution(\"a\") == \"a\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('mirkovC4nizCC44') =='mirkovniz'"
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\"\nassert solution(\"C4\") == \"mirkovniz\"\n\nsolution(\"mirkovC4nizCC44\")\nsolution(\"C4\")"
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"mirkovC4nizCC44C4\") == \"mirkovniz\"\nassert solution(\"mississippi\") == \"FRULA\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('mirkovC4nizCC44') =='mirkovniz'\nassert solution('abc123456') == 'abc123456'"
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('mirkovC4nizCC44') =='mirkovniz'"
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\", \"The solution is incorrect.\"\nassert solution(\"Hello world!\") == \"hello world!\", \"The solution is incorrect.\"\nassert solution(\"\") == \"FRULA\", \"The solution is incorrect.\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 32"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n3 65\\n45 10\\n60 25') == '32'"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 32\n"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 65\\n45 10\\n60 25\") == \"32\"\n"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 3, 45, 10, 60, 25) == 32, \"Your solution is incorrect.\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 32, \"The expected output is 32, but it is actually \" + str(solution(3))"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"32\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"32\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 65\\n45 10\\n60 25\") == \"32\"\n"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\\n2\\n\""
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2 0 3 1\") == \"3\\n2\"\nassert solution(\"5\\n1 1 1 1 1\") == \"2\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\"\nassert solution(\"5\\n1 1 1 1 1\") == \"0\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\"\nassert solution(\"5\\n1 1 1 1 1\") == \"0\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\"\nassert solution(\"5\\n1 1 1 1 1\") == \"0\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\"\nassert solution(\"5\\n1 1 1 1 1\") == \"0\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\"\nassert solution(\"5\\n1 1 1 1 1\") == \"0\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\"\nassert solution(\"5\\n1 1 1 1 1\") == \"0\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\"\nassert solution(\"5\\n1 1 1 1 1\") == \"0\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\"\nassert solution(\"5\\n1 1 1 1 1\") == \"0\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\"\nassert solution(\"5\\n1 1 1 1 1\") == \"0\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\"\nassert solution(\"5\\n1 1 1 1 1\") == \"0\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\"\nassert solution(\"5\\n1 1 1 1 1\") == \"0\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\"\nassert solution(\"5\\n1 1 1 1 1\") == \"0\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\"\nassert solution(\"5\\n1 1 1 1 1\") == \"0\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\"\nassert solution(\"5\\n1 1 1 1 1\") == \"0\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\"\nassert solution(\"5\\n1 1 1 1 1\") == \"0\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\"\nassert solution(\"5\\n1 1 1 1 1\") == \"0\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\"\nassert solution(\"5\\n1 1 1 1 1\") == \"0\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\"\nassert solution(\"5\\n1 1 1 1 1\") == \"0\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\"\nassert solution(\"5\\n1 1 1 1 1\") == \"0\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\"\nassert solution(\"5\\n1 1 1 1 1\") == \"0\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\"\nassert solution(\"5\\n1 1 1 1 1\") == \"0\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\"\nassert solution(\"5\\n1 1 1 1 1\") == \"0\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\"\nassert solution(\"5\\n1 1 1 1 1\") == \"0\"\nassert solution(\"5\\n1 1 1 1 1"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt')) == '3\\n2'\n"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '''2\n2'''"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2 0 3 1\") == \"3\\n2\"\n"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2 0 3 1\") == \"3\\n2\"\nassert solution(\"10\\n1 1 2 3 4 5\") == \"5\\n4\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5\\n5\"\nassert solution(\"5\\n1 1 2 3 4 5\") == \"5\\n4\""
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2 0 3 1') == '3\\n2'\n"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_data) == expected_output, f\"Test case failed: {solution(input_data)}!= {expected_output}\\nInput: {input_data}\\nOutput: {solution(input_data)}\"\n"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output\nprint(\"Test passed.\")\n"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 2 0 3 1\") == \"3\\n2\""
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\") == \"2\\n\"\n"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 2"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 2"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\") == \"2\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == 2\nprint('Passed')"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4') == '2\\n'\nprint(\"All tests passed!\")"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    2 4 4\n    0 1\n    1 1\n    1 2\n    1 3\n    1 4\n    \"\"\"\n) == \"2\\n\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    2 4 4\n    + 1 1\n    - 1 2\n    + 1 3\n    - 1 4\n    \"\"\"\n) == \"2\\n\""
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4') == 2"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(None) == \"4\\n2\"\nassert solution(\"\") == \"0\\n0\"\nassert solution(\"2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\") == \"2\\n2\"\n\nfrom typing import List"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1000000000 0\\n1000000000 1\\n\") == 500000004\nprint(500000004)"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '500000004'\nprint(500000004)"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\""
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1000000000\\n1000000000\\n\") == \"500000004\"\nassert solution(\"2\\n1000000000\\n1000000000\\n\") == \"500000004\"\nassert solution(\"1\\n0\\n1\\n\") == \"0\"\nassert solution(\"2\\n0\\n1\\n\") == \"0\"\nassert solution(\"1\\n1000000000\\n0\\n\") == \"0\"\nassert solution(\"2\\n1000000000\\n0\\n\") == \"0\""
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 500000004\n\nfrom sympy import divisors"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test case {i + 1} failed: Expected output: {output}, Received output: {solution(input())}\"\n\ni = 0\ninput_lines = []\noutput_lines = []\n\nfor line in sys.stdin:\n    if line.strip() == \"\":\n        if i > 0:\n            input_lines.append(line.strip())\n        i += 1\n        continue\n    b, p = map(int, line.strip().split())\n    input_lines.append((b, p))\n    output_lines.append(f\"{round(math.log2(P) / math.log2(Q)) % 1000000007}\")\n\nP, Q = 0, 1\nfor b, p in input_lines:\n    P *= b\n    P %= 1000000007\n    Q *= Q\n    Q %= 1000000007\n    output_lines.append(f\"{round((P * Q) % (1000000007))}\")\n\noutput = \"\\n\".join(output_lines)\n\nprint(output)"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"500000004\"\n"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"500000004\"\n"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1000000000 0\\n1000000000 1\") == 500000004, \"The output is incorrect\""
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1000000000 0\\n1000000000 1\") == \"500000004\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\\n') == '12\\n'"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24') == 12, \"Incorrect output\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\") == \"12\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\\n\") == \"12\"\n"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\\n\") == \"12\\n\"\n"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"12\\n\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, got {solution(input())}\"\n"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '12', 'Expected output is 12, but got {}'.format(solution())"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected_output, f\"Test failed. Expected output: {expected_output}, got: {solution}\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == 3\n"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"3 19\\n15 5 3\\n12 4 4\\n20 10 5\\n\"\n) == \"3\\n\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == \"3\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 19, 15, 5, 3) == 3, \"1st example\"\nassert solution(3, 19, 12, 4, 4) == 4, \"2nd example\"\nassert solution(3, 19, 20, 10, 5) == 3, \"3rd example\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == \"3\\n\"\nassert solution(\"3 20\\n15 6 4\\n12 4 5\") == \"2\\n\"\nassert solution(\"3 21\\n15 6 5\\n12 4 5\") == \"2\\n\"\nassert solution(\"3 19\\n15 6 5\\n12 4 6\") == \"3\\n\"\nassert solution(\"3 19\\n15 6 4\\n12 4 5\") == \"2\\n\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == \"3\\n\"\nassert solution(\"2 100000 100000 100000\") == \"3\\n\"\nassert solution(\"5 100000 100000 100000\") == \"4\\n\"\nassert solution(\"10 100000 100000 100000\") == \"5\\n\"\nassert solution(\"15 100000 100000 100000\") == \"6\\n\"\nassert solution(\"20 100000 100000 100000\") == \"7\\n\"\nassert solution(\"25 100000 100000 100000\") == \"8\\n\"\nassert solution(\"30 100000 100000 100000\") == \"9\\n\"\nassert solution(\"35 100000 100000 100000\") == \"10\\n\"\nassert solution(\"40 100000 100000 100000\") == \"11\\n\"\nassert solution(\"45 100000 100000 100000\") == \"12\\n\"\nassert solution(\"50 100000 100000 100000\") == \"13\\n\"\nassert solution(\"55 100000 100000 100000\") == \"14\\n\"\nassert solution(\"60 100000 100000 100000\") == \"15\\n\"\nassert solution(\"65 100000 100000 100000\") == \"16\\n\"\nassert solution(\"70 100000 100000 100000\") == \"17\\n\"\nassert solution(\"75 100000 100000 100000\") == \"18\\n\"\nassert solution(\"80 100000 100000 100000\") == \"19\\n\"\n"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"15 5 3\\n12 4 4\\n20 10 5\\n\") == \"3\"\n"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == \"3\"\nassert solution(\"100000 100000\\n100000 100000\\n100000 100000\") == \"100000\"\nassert solution(\"10 1000\\n1000 1000\\n1000 1000\\n1000 1000\") == \"1000\"\n"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\\n\", \"The output is incorrect.\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1 1\\n\") == \"1\\n\""
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test case failed: {input()}!= {output}\""
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([1, 1]) == 1\nassert solution([1, 2]) == 2\nassert solution([2, 1]) == 1\nassert solution([3, 4, 5, 6, 7]) == 42\nassert solution([1, 2, 3, 4, 5, 6]) == 6\nassert solution([1, 2, 3, 4, 5]) == 12\nassert solution([1, 2, 3, 4]) == 24\nassert solution([1, 2, 3]) == 36\nassert solution([1, 2, 3, 4, 5, 6, 7]) == 240\nassert solution([1, 2, 3, 4, 5, 6, 7, 8]) == 30640\nassert solution([1, 2, 3, 4, 5, 6, 7, 8, 9]) == 452800\nassert solution([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == 7620800"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1\\n1\\n\", \"The input is incorrect.\""
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\\n\", \"Please implement the solution function.\""
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1 1\") == \"1\\n1\\n\""
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1 1\") == \"1\\n1\\n\""
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1 1\\n\") == \"1\\n\"\nassert solution(\"1\\n2 1\\n\") == \"1\\n\"\nassert solution(\"2\\n1 1\\n\") == \"2\\n\"\nassert solution(\"2\\n3 1\\n\") == \"2\\n\"\nassert solution(\"3\\n1 1\\n\") == \"3\\n\"\nassert solution(\"3\\n2 1\\n\") == \"3\\n\"\nassert solution(\"4\\n1 1\\n\") == \"4\\n\"\nassert solution(\"4\\n3 1\\n\") == \"4\\n\"\nassert solution(\"5\\n1 1\\n\") == \"5\\n\"\nassert solution(\"5\\n2 1\\n\") == \"5\\n\"\nassert solution(\"6\\n1 1\\n\") == \"6\\n\"\nassert solution(\"6\\n3 1\\n\") == \"6\\n\"\nassert solution(\"7\\n1 1\\n\") == \"7\\n\"\nassert solution(\"7\\n2 1\\n\") == \"7\\n\"\nassert solution(\"8\\n1 1\\n\") == \"8\\n\"\nassert solution(\"8\\n3 1\\n\") == \"8\\n\"\nassert solution(\"9\\n1 1\\n\") == \"9\\n\"\nassert solution(\"9\\n2 1\\n\") == \"9\\n\"\nassert solution(\"10\\n1 1\\n\") == \"10\\n\"\nassert solution(\"10\\n3 1\\n\") == \"10\\n\"\nassert solution(\"11\\n1 1\\n\") == \"11\\n\"\nassert solution(\"11\\n2 1\\n\") == \"11\\n\"\nassert solution(\"12\\n1 1\\n\") == \"12\\n\"\nassert solution(\"12\\n3 1\\n\") == \"12\\n\"\nassert solution(\"13\\n1 1\\n\") == \"13\\n\"\nassert solution(\"13\\n2 1\\n\") == \"13\\n\"\nassert solution(\"14\\n1 1\\n\") == \"14\\n\"\nassert solution(\"14\\n3 1\\n\") == \"14\\n\"\nassert solution(\"15\\n1 1\\n\") == \"15\\n\"\nassert solution(\"15\\n2 1\\n\") == \"15\\n\"\nassert solution(\"16\\n1 1\\n\") == \"16\\n\"\nassert solution(\"16\\n3 1\\n\") == \"16\\n\"\nassert solution(\"17\\n1 1\\n\") == \"17\\n\"\nassert solution(\"17\\n2 1\\n\") == \"17\\n\"\nassert solution(\"18\\n1 1\\n\") == \"18\\n\"\nassert solution(\"18\\n3 1\\n\") == \"18\\n\"\nassert solution(\"19\\n1 1\\n\") == \"19\\n\"\nassert solution(\"19\\n2 1\\n\") == \"19\\n\"\nassert solution(\"20\\n1 1\\n\") == \"20\\n\"\nassert solution(\"20\\n3 1\\n\") == \"20\\n\"\nassert solution(\"21\\n1 1\\n\") == \"21\\n\"\nassert solution(\"21\\n2 1\\n\") == \"21\\n\"\nassert solution(\"22\\n1 1\\n\") == \"22\\n\"\nassert solution(\"22\\n3 1\\n\") == \"22\\n\"\nassert solution(\"23\\n1 1\\n\") == \"23\\n\"\nassert solution(\"23\\n2 1\\n\") == \"23\\n\"\nassert solution(\"24\\n1 1\\n\") == \"24\\n\"\nassert solution(\"24\\n3 1\\n\") == \"24\\n\"\nassert solution(\"25\\n1 1\\n\") == \"25\\n\"\nassert solution(\"25\\n2 1\\n\") == \"25\\n\"\nassert solution(\"26\\n1 1\\n"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 1"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '1'"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == \"3\"\nassert solution(\"RGGG\\nGGGB\\nGGYY\\nGGRR\\nGGGB\") == \"4\""
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == \"3\\n\"\nassert solution(\"RGG\\nGBG\\nBYB\\nYRR\") == \"3\\n\"\nassert solution(\"GRG\\nBGG\\nBBY\\nYRR\") == \"3\\n\"\nassert solution(\"GRR\\nBGG\\nBBB\\nYRR\") == \"3\\n\"\nassert solution(\"RGR\\nGBG\\nBBY\\nYRR\") == \"3\\n\""
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"RGRG\\nGBGB\\nBYBY\\nYRYR\\n\") == \"3\\n\""
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == \"3\"\nassert solution(\"RRRR\\nGGGG\\nBBBB\\nYYYY\") == \"3\"\nassert solution(\"RRGG\\nGGGG\\nBBBRR\\nYYYY\") == \"3\"\nassert solution(\"RRRRG\\nGGGGG\\nBBBBBB\\nYYYYYY\") == \"3\""
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\\n\") == \"3\\n3\"\nassert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\\n\\n\") == \"1\\n2\"\nassert solution(\"RRRR\\nGGGG\\nBBBB\\nYYYY\\n\") == \"1\\n1\"\nassert solution(\"RGRG\\nGGGB\\nBBBY\\nYYRR\\n\") == \"2\\n1\"\nassert solution(\"RGRG\\nGGGB\\nBBBY\\nYYRR\\n\\n\") == \"1\\n2\"\nassert solution(\"RGRG\\nGGGB\\nBBBY\\nYYRR\\nRRRR\\n\") == \"2\\n2\"\nassert solution(\"RGRG\\nGGGB\\nBBBY\\nYYRR\\nRRRR\\n\\n\") == \"3\\n3\""
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('RGGR\\nGBGB\\nBYBY\\nYRYR') == 3, \"Expected output: 3, got: \" + solution('RGGR\\nGBGB\\nBYBY\\nYRYR')"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == 3"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"RGGR\") == \"3\""
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == \"3\\n\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"AAAAA\\n\"\n"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"AAAAA\\n\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\"\n"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\"\n\nfrom typing import List"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"AAAAA\\n\"\n"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 'AAAAA', 'Solution should return \"AAAAA\"'"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == \"IMPOSSIBLE\"\nassert solution(stdin=\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\") == \"IMPOSSIBLE\"\nassert solution(stdin=\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\") == \"1\"\nassert solution(stdin=\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\") == \"2\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"IMPOSSIBLE\", \"Solution should not be IMPOSSIBLE\"\nassert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\") == \"IMPOSSIBLE\", \"Solution should not be IMPOSSIBLE\"\n"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == 'IMPOSSIBLE'"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == sample_output, \"Incorrect output\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Test Case {i+1} Failed!\"\nfor i, (A1, A2, B1, B2) in enumerate(test_cases):\n    expected = \"IMPOSSIBLE\"\n    result = solution(f\"{len(A1)} {len(A2)} {B1} {B2}\")\n    if result == expected:\n        print(f\"Test Case {i+1} Passed!\")\n    else:\n        print(f\"Test Case {i+1} Failed! Expected {expected}, got {result}\")"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\") == \"IMPOSSIBLE\"\nassert solution(\"5 5\\n0 0\\n4 4\") == \"IMPOSSIBLE\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\\n4 5\") == \"1\"\nassert solution(\"3 3\\n5 6\") == \"2\"\n"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"12\"\nassert solution() == \"4\"\nassert solution() == \"11\"\nassert solution() == \"3\"\nassert solution() == \"2\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 5\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\austria\\aust"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abc\") == \"1\", \"The first word should be 'austria'.\"\nassert solution(\"babe\") == \"1\", \"The second word should be 'autocorrect'.\"\nassert solution(\"hello\") == \"1\", \"The third word should be 'program'.\"\nassert solution(\"world\") == \"1\", \"The fourth word should be 'programming'.\"\nassert solution(\"abcd\") == \"1\", \"The fifth word should be 'computer'.\"\nassert solution(\"ab\") == \"1\", \"The first word should be 'austria'.\"\nassert solution(\"a\") == \"1\", \"The first word should be 'austria'.\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    '''\n    5 5\n    austria\n    autocorrect\n    program\n    programming\n    computer\n    autocorrelation\n    programming\n    competition\n    zyx\n    austria\n    ''') == '''\n    12\n    4\n    11\n    3\n    2\n    def solution(stdin: str) -> str:\n        pass\n    ''', \"Test case 1 failed\"\n\nassert solution(\n    '''\n    5 5\n    austria\n    autocorrect\n    program\n    programming\n    computer\n    autocorrelation\n    programming\n    competition\n    zyx\n    austria\n    ''') == '''\n    12\n    4\n    11\n    3\n    2\n    def solution(stdin: str) -> str:\n        pass\n    ''', \"Test case 2 failed\"\n\nassert solution(\n    '''\n    5 5\n    austria\n    autocorrect\n    program\n    programming\n    computer\n    autocorrelation\n    programming\n    competition\n    zyx\n    austria\n    ''') == '''\n    12\n    4\n    11\n    3\n    2\n    def solution(stdin: str) -> str:\n        pass\n    ''', \"Test case 3 failed\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n        5 5\n            austria\n            autocorrect\n            program\n            programming\n            computer\n            autocorrelation\n            programming\n            competition\n            zyx\n            austria\n    ''') == '''\n        12\n        4\n        11\n        3\n        2\n        4.5\n    '''\n\nassert solution('''\n        3\n            austria\n            software\n            computer\n            autocorrelation\n            programming\n            computer\n            programming\n            competition\n    ''') == '''\n        12\n        3\n        11\n        3\n        2\n    '''\n\nassert solution('''\n        1\n            austria\n    ''') == '''\n        12\n    '''\n\nassert solution('''\n        1\n            austria\n    ''') == '''\n        12\n    '''"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"austria\") == \"12\\n\", \"Test case 1 failed\"\nassert solution(\"autocorrect\") == \"12\\n\", \"Test case 2 failed\"\nassert solution(\"program\") == \"12\\n\", \"Test case 3 failed\"\nassert solution(\"programming\") == \"12\\n\", \"Test case 4 failed\"\nassert solution(\"computer\") == \"12\\n\", \"Test case 5 failed\"\nassert solution(\"autocorrelation\") == \"12\\n\", \"Test case 6 failed\"\nassert solution(\"programming\") == \"12\\n\", \"Test case 7 failed\"\nassert solution(\"competition\") == \"12\\n\", \"Test case 8 failed\"\nassert solution(\"zyx\") == \"12\\n\", \"Test case 9 failed\"\nassert solution(\"austria\") == \"12\\n\", \"Test case 10 failed\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str: pass\\n\"\nassert solution(input()) == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str: pass\\n\"\nassert solution(input()) == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str: pass\\n\"\nassert solution(input()) == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str: pass\\n\"\nassert solution(input()) == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str: pass\\n\"\nassert solution(input()) == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str: pass\\n\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_data) == output_data, f\"Incorrect output for sample input {input_data}. Expected: {output_data}, got: {solution(input_data)}\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 5\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test failed\""
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 1 1\\n3\\n0 1 1\") == 3\nprint(\"All tests passed\")"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n0 1 1\") == 3\nassert solution(\"6\\n10 15 20\") == 6\nassert solution(\"0\\n0 0\") == 0\nassert solution(\"10\\n0 1 1 1 1\") == 12\nassert solution(\"3\\n0 1 1\\n1 1 1 1\") == 3\nassert solution(\"6\\n10 15 20\\n0 0 0 0 0\\n1 1 1 1 1\\n1 1 1 1 1\") == 12\nassert solution(\"12\\n0 1 1 1 1 1 1 1 1 1 1\") == 12\n"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Test failed with input {input()}, expected output {output()}\""
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n0 1 1') == '3\\n3'\nassert solution('4\\n1 2 3') == 'Impossible'\n"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 3, \"Output is not 3\""
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Test case failed. Expected: {expected_output}, Got: {solution(stdin)}\""
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n0 1 1\") == 3\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Expected output: {expected}, Received output: {solution(input())}\""
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n0 1 1') == 3, \"Incorrect output\""
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Output: 3\\n\", \"Incorrect output\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\", \"Sample Input\"\nassert solution(\"BIGEDCJFAH\") == \"Pre Post In Pre Pre In Post\", \"Sample Input\"\n\nsolution = \"\"\"\nvoid prePrint(TNode t)\n{\n    output(t.value);\n    if (t.left!= null) prePrint(t.left);\n    if (t.right!= null) prePrint(t.right);\n}\n\nvoid inPrint(TNode t)\n{\n    if (t.left!= null) prePrint(t.left);\n    output(t.value);\n    if (t.right!= null) prePrint(t.right);\n}\n\nvoid postPrint(TNode t)\n{\n    if (t.left!= null) prePrint(t.left);\n    if (t.right!= null) prePrint(t.right);\n    output(t.value);\n}\n\"\"\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"HFBIGEDCJA\\nBIGEDCJFAH\\nBIGEDCJFAH\") == \"Pre Post In Post In Pre\\nHFBJCDEGIA\\nBIGEDCJFAH\\nIGEDCJBAFH\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"HFBIGEDCJA\\nBIGEDCJFAH\\nBIGEDCJFAH\\n\") == \"Pre Post In Post In Pre\\nHFBJCDEGIA\\nBIGEDCJFAH\\nIGEDCJBAFH\\n\"\nassert solution(\"ACBEDFGHI\\nBADEDFGHI\\nBADEDFGHI\\n\") == \"Pre Post In Post In Pre\\nAEDGCGHI\\nCDABDFGHI\\nEDFGHIJAC\\n\"\nassert solution(\"ABCDGHIJ\\nCDEIGHIJ\\nCDEIGHIJ\\n\") == \"Pre Post In Post In Pre\\nAEDHCBGI\\nCDABEDGI\\nEDFGHIJAC\\n\"\nassert solution(\"HEDGABCD\\nCEFGHIJK\\nCEFGHIJK\\n\") == \"Pre Post In Post In Pre\\nHEDFCDAB\\nCEFGIKAD\\nCEFGIKAD\\n\"\nassert solution(\"HIJKLMNO\\nNOPQRSTU\\nNOPQRSTU\\n\") == \"Pre Post In Post In Pre\\nHIJKLMNOP\\nNOPQRSTU\\nNOPQRSTU\\n\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\\nmnopqrstuvwxyz\\nmnopqrstuvwxyz\\n\") == \"Pre Post In Post In Pre\\nabcdefghijklmnopqrstuvwxyz\\nmnopqrstuvwxyz\\nmnopqrstuvwxyz\\n\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\\nmnopqrstuvwxyz\\nmnopqrstuvwxyz\\n\") == \"Pre Post In Post In Pre\\nabcdefghijklmnopqrstuvwxyz\\nmnopqrstuvwxyz\\nmnopqrstuvwxyz\\n\"\nassert solution(\"hello world\\nworld hello\\nworld hello\\n\") == \"Pre Post In Post In Pre\\nhello world\\nworld hello\\nworld hello\\n\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\", \"The first line should be 'Pre Post In Post In Pre'\"\nassert solution(\"BIGEDCJFAH\") == \"In Pre In In In Pre\", \"The second line should be 'In Pre In In In Pre'\"\nassert solution(\"BIGEDCJFAH\") == \"In Pre In In In Pre\", \"The third line should be 'In Pre In In In Pre'\"\nassert solution(\"IGEDCJBAFH\") == \"Pre Pre Pre Pre Post Post In In In Post In In Pre\", \"The fourth line should be 'Pre Pre Pre Pre Post Post In In In Post In In Pre'\"\nassert solution(\"def solution(stdin: str) -> str:\") == \"In In In Pre In Pre Post Post Pre Pre In In Post Pre In Pre In In In In In In Pre In Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre Pre"
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('HFBIGEDCJA') == 'Pre Post In Post In Pre'\nassert solution('BIGEDCJFAH') == 'HFBJCDEGIA'\nassert solution('BIGEDCJFAH') == 'IGEDCJBAFH'"
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('HFBIGEDCJA') == 'Pre Post In Post In Pre'\nassert solution('BIGEDCJFAH') == 'In Pre In In In In'\nassert solution('BIGEDCJFAH') == 'In Pre In In In In'\n\nsolution = '''\nPre Post In Post In Pre\nHFBJCDEGIA\nBIGEDCJFAH\nIGEDCJBAFH\n'''"
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"HFBIGEDCJA\\nBIGEDCJFAH\\nBIGEDCJFAH\") == \"Pre Post In Post In Pre\\nHFBJCDEGIA\\nBIGEDCJFAH\\nIGEDCJBAFH\"\nassert solution(stdin=\"FHRSMYAEH\\nFAEHIJLYG\\nHRAEDLURH\") == \"Pre Post In Post In Pre\\nHRAEDLURH\\nFAEHIJLYG\\nFHRSMYAEH\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\", \"Expected output: Pre Post In Post In Pre, got: {}\".format(solution(\"HFBIGEDCJA\"))\nassert solution(\"BIGEDCJFAH\") == \"In Pre Post In In Pre\", \"Expected output: In Pre Post In In Pre, got: {}\".format(solution(\"BIGEDCJFAH\"))\nassert solution(\"BIGEDCJFAH\") == \"In Pre Post In In Pre\", \"Expected output: In Pre Post In In Pre, got: {}\".format(solution(\"BIGEDCJFAH\"))"
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\", \"The result is incorrect.\"\nassert solution(\"BIGEDCJFAH\") == \"Pre Post In Post In Pre\", \"The result is incorrect.\"\nassert solution(\"BIGEDCJFAH\") == \"Pre Post In Post In Pre\", \"The result is incorrect.\"\nassert solution(\"BIGEDCJFAH\") == \"Pre Post In Post In Pre\", \"The result is incorrect.\"\n\nsolution(\"HFBIGEDCJA\")\nsolution(\"BIGEDCJFAH\")\nsolution(\"BIGEDCJFAH\")\nsolution(\"BIGEDCJFAH\")"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\"\n) == \"10\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '10', \"Expected output: 10, got {}\".format(solution(stdin))"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\") == \"10\\n\""
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\") == \"10\"\nassert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n3 2 2\") == \"15\"\nassert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n3 2 2\\n1 1\") == \"15\"\nassert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n3 2 2\\n1 1\\n3 3 1\") == \"20\"\nassert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n3 2 2\\n1 1\\n3 3 1\\n1 1\") == \"20\"\nassert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n3 2 2\\n1 1\\n3 3 1\\n1 1\\n3 4 1\") == \"25\""
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\") == \"10\\n\"\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r').read()) == '10'"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"10\""
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''2\n2\n10 0\n3 1 1\n1\n4 1 0''') == '''10'''"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\") == \"10\"\n"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"10\"\n"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0 100 100\\n30 30 60 60\") == \"10000.00\", \"Test Case 1\"\nassert solution(\"0 0 100 100\\n30 30 30 60\") == \"0.00\", \"Test Case 2\"\nassert solution(\"0 0 100 100\\n30 30 60 60\\n0 0 100 100\\n30 30 30 60\") == \"10000.00\", \"Test Case 3\"\nassert solution(\"0 0 100 100\\n30 30 60 60\\n0 0 100 100\\n30 30 30 60\\n30 30 60 60\\n30 30 30 60\") == \"10000.00\", \"Test Case 4\"\nassert solution(\"0 0 100 100\\n30 30 60 60\\n0 0 100 100\\n30 30 30 60\\n30 30 60 60\\n30 30 30 60\\n30 30 60 60\\n30 30 30 60\\n30 30 60 60\\n30 30 30 60\\n30 30 60 60\\n30 30 30 60\\n30 30 60 60\\n30 30 30 60\\n30 30 60 60\\n30 30 30 60\\n30 30 60 60\\n30 30 30 60\\n30 30 60 60\\n30 30 30 60\\n30 30 60 60\\n30 30 30 60\\n30 30 60 60\\n30 30 30 60\\n30 30 60 60\\n30 30 30 60\\n30 30 60 60\\n30 30 30 60\\n30 30 60 60\\n30 30 30 60\\n30 30 60 60\\n30 30 30 60\\n30 30 60 60\\n30 30 30 60\\n30 30 60 60\\n30 30 30 60\\n30 30 60 60\\n30 30 30 60\\n30 30 60 60\\n30 30 30 60\\n30 30 60 60\\n30 30 30 60\\n30 30 60 60\\n30 30 30 60\\n30 30 60 60\\n30 30 30 60\\n30 30 60 60\\n30 30 30 60\\n30 30 60 60\\n30 30 30 60\\n30 30 60 60\\n30 30 30 60\\n30 30 60 60\\n30 30 30 60\\n30 30 60 60\\n30 30 30 60\\n30 30 60 60\\n30 30 30 60\\n30 30 60 60"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0 100 100\\n30 30 60 60\") == 10000.00, \"The expected output is 10000.00\""
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0 100 100\\n30 30 60 60\") == 10000.0\nassert solution(\"0 0 0 0\\n50 50 50 50\") == 0.0\nassert solution(\"0 0 0 0\\n0 0 0 0\") == 0.0\nassert solution(\"0 0 0 0\\n0 0 0 0\") == 0.0"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('0 0 100 100\\n30 30 60 60') == '10000.00'\n"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 100 100\\n30 30 60 60\") == \"10000.00\""
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == \"10000.00\", \"Sample Output is incorrect\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '10000.00'"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 10000.00, \"Expected: 10000.00, Got: {}.\".format(solution())"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0 0 100 100\\n30 30 60 60\\n') == '10000.00'\n"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '10000.00\\n', 'Your solution is incorrect. It should return \"10000.00\".'"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 5\nprint(\"All test cases pass\")"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"5\\n\""
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 3\\n4 5\\n2 4\") == 5"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin: str) == \"5\", \"Test failed\""
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    5 3\n    1 3\n    4 5\n    2 4\n    \"\"\"\n) == \"5\\n\"\n\nassert solution(\n    \"\"\"\n    10 2\n    2 3\n    4 6\n    1 4\n    5 7\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    100000 100000\n    1 2\n    3 4\n    5 6\n    7 8\n    9 10\n    11 12\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    5 3\n    1 3\n    4 5\n    2 4\n    \"\"\"\n) == \"5\\n\"\n\nassert solution(\n    \"\"\"\n    10 2\n    2 3\n    4 6\n    1 4\n    5 7\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    100000 100000\n    1 2\n    3 4\n    5 6\n    7 8\n    9 10\n    11 12\n    \"\"\"\n) == \"2\\n\""
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 3\\n4 5\\n2 4\") == 5"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 3\\n4 5\\n2 4\") == 5"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == expected, f\"Test failed: expected {expected}, got {solution(input)}\""
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 5"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"5\""
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\\n\") == \"2095\""
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == expected_output, f\"Your function doesn't pass the test case: {sample_input}, expected output: {expected_output}\""
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\n"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2095\"\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\nassert solution(\"2 3 5\\n4 6 8\") == \"4\""
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('11 13 17\\n5 2 4\\n0 0 0') == '2095'\n"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('11 13 17\\n5 2 4\\n0 0 0') == '2095'"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('11 13 17\\n5 2 4\\n0 0 0') == '2095\\n'"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2095\"\nprint(\"Test Passed!\")"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\\n\") == \"2095\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n\") == \"100201\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"var a = 'Gon'; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"print `Hello, world!`; end.\") == \"Hello, world!\"\n"
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(r'''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\n''') == 'My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r\"var a = \\\"Gon\\\";var b = a;var c = `My name is ${a}`;print c;print `My name is ${b}`;end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(r\"print a;print b;end.\") == \"a\\nb\\nend.\"\n\nassert solution(r\"print a + b;end.\") == \"a\\nb\\nend.\"\n\nassert solution(r\"print a - b;end.\") == \"a\\nb\\nend.\"\n\nassert solution(r\"print a * b;end.\") == \"a\\nb\\nend.\"\n\nassert solution(r\"print a / b;end.\") == \"a\\nb\\nend.\"\n\nassert solution(r\"print a % b;end.\") == \"a\\nb\\nend.\"\n\nassert solution(r\"print a < b;end.\") == \"a\\nb\\nend.\"\n\nassert solution(r\"print a <= b;end.\") == \"a\\nb\\nend.\"\n\nassert solution(r\"print a > b;end.\") == \"a\\nb\\nend.\"\n\nassert solution(r\"print a >= b;end.\") == \"a\\nb\\nend.\"\n\nassert solution(r\"print a == b;end.\") == \"a\\nb\\nend.\"\n\nassert solution(r\"print a!= b;end.\") == \"a\\nb\\nend.\"\n\nassert solution(r\"print a is b;end.\") == \"a\\nb\\nend.\"\n\nassert solution(r\"print a is not b;end.\") == \"a\\nb\\nend.\"\n\nassert solution(r\"print a in b;end.\") == \"a\\nb\\nend.\"\n\nassert solution(r\"print a not in b;end.\") == \"a\\nb\\nend.\"\n\nassert solution(r\"print a in [1, 2, 3];end.\") == \"a\\nb\\nend.\"\n\nassert solution(r\"print a not in [1, 2, 3];end.\") == \"a\\nb\\nend.\"\n\nassert solution(r\"print a and b;end.\") == \"a\\nb\\nend.\"\n\nassert solution(r\"print a or b;end.\") == \"a\\nb\\nend.\"\n\nassert solution(r\"print a xor b;end.\") == \"a\\nb\\nend.\"\n\nassert solution(r\"print a is a;end.\") == \"a\\nb\\nend.\"\n\nassert solution(r\"print a is not a;end.\") == \"a\\nb\\nend.\"\n\nassert solution(r\"print a in a;end.\") == \"a\\nb\\nend.\"\n\nassert solution(r\"print a not in a;end.\") == \"a\\nb\\nend.\"\n\nassert solution(r\"print a and a;end.\") == \"a\\nb\\nend.\"\n\nassert solution(r\"print a or a;end.\") == \"a\\nb\\nend.\"\n\nassert solution(r\"print a xor a;end.\") == \"a\\nb\\nend.\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"My name is Gon\", \"The solution is incorrect.\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n\\ndef main(stdin: str) -> str:\\n    return solution(stdin)\\n\\nif __name__ == \"__main__\":\\n    print(main(input()))\\n\\nend.'"
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"\"\"var a = \"Gon\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\"\"\") == \"My name is Gon\\nMy name is Gon\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\n\"\"\") == \"\"\"\nMy name is Gon\nMy name is Gon\n"
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"My name is Gon\"\nassert solution(input()) == \"My name is Gon\"\nassert solution(input()) == \"My name is Gon\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"var a = 'Gon';\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.\") == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"var a = 'Gon';\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.\") == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"var a = 'Gon';\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.\") == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"var a = 'Gon';\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.\") == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"var a = 'Gon';\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.\") == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"var a = 'Gon';\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.\") == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"var a = 'Gon';\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.\") == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"var a = 'Gon';\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.\") == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"var a = 'Gon';\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.\") == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"var a = 'Gon';\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.\") == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"var a = 'Gon';\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.\") == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"var a = 'Gon';\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.\") == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"var a = 'Gon';\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.\") == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"var a = 'Gon';\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.\") == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"var a = 'Gon';\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.\") == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"var a = 'Gon';\\nvar b = a;\\nvar c = `My name is ${a}`;\\"
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"print 1; print 2; print 3; end.\") == \"1\\n2\\n3\"\nassert solution(\"var a = 1; var b = 2; print a; print b; print a + b; end.\") == \"1\\n2\\n3\\n5\"\nassert solution(\"var a = 1; var b = 2; var c = 3; print a; print b; print c; end.\") == \"1\\n2\\n3\\n1\\n2\\n3\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Example usage:\\nstdin = input()\\nprint(solution(stdin))'"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n7 8\\n10\\n\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output, \"Your solution is incorrect. Please check the provided test cases and examples.\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n7 8\\n10\\n\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test failed. Expected: \\n{}\\nGot:\\n{}\\n\".format(output(), solution(input()))"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n7 8\\n10\\n\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\n\"\nassert solution(\"1\\n10\\n\") == \"impossible\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '''\n"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n7 8\\n10\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n7 8\\n10\\n\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\n\""
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10 4 3') == '27'"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"10 4 3\\n\") == \"27\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 4 3\") == \"27\"\nassert solution(\"5 3 2\") == \"15\"\nassert solution(\"10 6 2\") == \"56\"\nassert solution(\"100 100 100\") == \"2147483647\""
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"27\", \"The output should be 27\""
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='10 4 3') == '27\\n'\n"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 4 3\") == 27"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"27\\n\", \"Expected output: '27', but got: '{}'\\n\".format(solution(stdin))"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 27"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 4 3\") == \"27\"\nassert solution(\"20 3 4\") == \"54\"\nassert solution(\"1000 50 10\") == \"1000\"\n"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 4 3\") == 27, \"The solution is not correct.\"\nassert solution(\"5 2 3\") == 5, \"The solution is not correct.\"\nassert solution(\"1 1 1\") == 1, \"The solution is not correct.\"\nassert solution(\"10 10 10\") == 0, \"The solution is not correct.\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2') == '3\\n-1\\n4'\nassert solution('5 3 4\\n1 2 3 4\\n1\\n1 1 1\\n1') == '-1'\nassert solution('5 5 5\\n1 2 3 4 5\\n1\\n2 3 4 5 6\\n2 3 4 5 6') == '-1'\nassert solution('3 1 1\\n2 3 4\\n2\\n3 5 6\\n4') == '2'\nassert solution('3 2 2\\n1 2 3\\n1\\n3 4 5\\n2 3 4') == '1'"
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\n\"\"\") == \"3\\n-1\\n4\\n\"\n\nassert solution(\"\"\"\n1 2 3 4 5\n1 1 1 1 1\n1 2 3 4 5\n1 1 1 1 1\n\"\"\") == \"1\\n1\\n1\\n1\\n\"\n\nassert solution(\"\"\"\n1 2 3 4 5\n1 1 1 1 1\n\"\"\") == \"1\\n1\\n\"\n\nassert solution(\"\"\"\n1 2 3 4 5\n1 1 1 1 1\n2 3 4 5 6\n1 2 3 4 5\n\"\"\") == \"-1\\n\"\n\nassert solution(\"\"\"\n1 2 3 4 5\n1 1 1 1 1\n2 3 4 5 6\n1 2 3 4 5\n3 4 5 6 7\n\"\"\") == \"1\\n1\\n1\\n1\\n\"\n\nassert solution(\"\"\"\n1 2 3 4 5\n1 1 1 1 1\n2 3 4 5 6\n1 2 3 4 5\n3 4 5 6 7\n4 5 6 7 8\n\"\"\") == \"1\\n1\\n1\\n1\\n\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\\n\"\nassert solution(\"6 4 4\\n2 2 1 2\\n1\\n1 1 1\") == \"2\\n2\\n1\\n\"\nassert solution(\"4 50 2\\n1 2 3 4 5\\n1\\n1 1 2 3 4\") == \"1\\n3\\n2\\n\"\nassert solution(\"4 50 2\\n1 2 3 4 5\\n1\\n1 1 2 3 4\") == \"-1\\n\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\\n\"\nassert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\\n\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\"\nassert solution(\"5 2 3\\n5 2 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"2\\n1\\n1\"\nassert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\"\nassert solution(\"5 2 3\\n5 2 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"2\\n1\\n1\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n\") == \"3\\n-1\\n4\\n\"\nassert solution(\"1 2 3 4 5\\n2 3 4 5\\n3 4 5\\n\") == \"1\\n2\\n3\\n-1\\n\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n\") == \"1\\n2\\n3\\n4\\n5\\n\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n0 1 2\\n\") == \"-1\\n\"\n"
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Hey! I have an awesome task with chameleons, $5$-th task for Saturday's competition.\") == \"3\"\nassert solution(\"Go ahead\u2026\") == \"Go ahead...\"\nassert solution(\"That's too difficult, I have an easier one, they won't even solve that one.\") == \"That's too difficult, I have an easier one, they won't even solve that one.\"\nassert solution(\"You are given an array of N integers from the interval [1, K], you need to process M queries. The first type of query requires you to change a number in the array to a different value, and the second type of query requires you to determine the length of the shortest contiguous subarray of the current array that contains all numbers from 1 to K.\") == \"3\"\nassert solution(\"Hm, I can do it in O(N^6). What's the limit for N?\") == \"What's the limit for N?\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n\") == \"3\\n-1\\n4\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"533.3333333333\", \"Test case failed\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1000 3000 1000') == '533.3333333333\\n', \"The output is incorrect.\"\n"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\\n\"\nassert solution(\"1000 3000 1001\") == \"Invalid input\\n\"\nassert solution(\"5000 2000 1000\") == \"5000\\n\"\nassert solution(\"1000000 500000 1000\") == \"1000000\\n\"\n"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\\n\", \"Please modify the given code according to the problem statement.\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\\n\", \"Test case 1 failed\"\n\nassert solution(\"1000000 2000000 1000\") == \"616.6666666667\\n\", \"Test case 2 failed\"\n\nassert solution(\"10000000 20000000 1000\") == \"222222.2222222222\\n\", \"Test case 3 failed\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1000, 3000, 1000) == 533.3333333333, \"Incorrect output. Should be 533.3333333333.\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(r\"\"\"\n1000 3000 1000\n\"\"\") == \"533.3333333333\\n\"\n\nassert solution(r\"\"\"\n1000 2000 1000\n\"\"\") == \"333.3333333333\\n\"\n\nassert solution(r\"\"\"\n500 500 500\n\"\"\") == \"0.0000000000\\n\"\n\nassert solution(r\"\"\"\n-1 1 1\n\"\"\") == \"-1\\n\"\n\nassert solution(r\"\"\"\n1000000000 1000000000 1000000000\n\"\"\") == \"10000000000.0000000000\\n\"\n\nassert solution(r\"\"\"\n1000000000 1000000000 1000000000\n\"\"\") == \"10000000000.0000000000\\n\"\n\nassert solution(r\"\"\"\n1000000000 1000000000 1000000000\n\"\"\") == \"10000000000.0000000000\\n\"\n\nassert solution(r\"\"\"\n1000000000 1000000000 1000000000\n\"\"\") == \"10000000000.0000000000\\n\"\n\nassert solution(r\"\"\"\n1000000000 1000000000 1000000000\n\"\"\") == \"10000000000.0000000000\\n\"\n\nassert solution(r\"\"\"\n1000000000 1000000000 1000000000\n\"\"\") == \"10000000000.0000000000\\n\"\n\nassert solution(r\"\"\"\n1000000000 1000000000 1000000000\n\"\"\") == \"10000000000.0000000000\\n\"\n\nassert solution(r\"\"\"\n1000000000 1000000000 1000000000\n\"\"\") == \"10000000000.0000000000\\n\"\n\nassert solution(r\"\"\"\n1000000000 1000000000 1000000000\n\"\"\") == \"10000000000.0000000000\\n\"\n\nassert solution(r\"\"\"\n1000000000 1000000000 1000000000\n\"\"\") == \"10000000000.0000000000\\n\"\n\nassert solution(r\"\"\"\n1000000000 1000000000 1000000000\n\"\"\") == \"10000000000.0000000000\\n\"\n\nassert solution(r\"\"\"\n1000000000 1000000000 1000000000\n\"\"\") == \"10000000000.0000000000\\n\"\n\nassert solution(r\"\"\"\n1000000000 1000000000 1000000000\n\"\"\") == \"1000000000"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 'def solution(stdin: str) -> str:pass\\n'"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\\n\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\\n\", \"Test case 1 failed\"\nassert solution(\"1000 5000 2000\") == \"533.3333333333\\n\", \"Test case 2 failed\"\nassert solution(\"10000 5000 2000\") == \"533.3333333333\\n\", \"Test case 3 failed\"\nassert solution(\"10000 10000 5000\") == \"533.3333333333\\n\", \"Test case 4 failed\"\nassert solution(\"10000 10000 10000\") == \"533.3333333333\\n\", \"Test case 5 failed\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\") == \"14.14\"\n"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\") == \"14.14\\n\"\n"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"14.14\", \"The solution is incorrect.\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 0\\n10 0\\n10 10') == 14.14\nassert solution('5 0\\n3 0\\n3 2\\n3 3\\n3 4\\n3 5') == 10.00\nassert solution('1 0\\n1 0\\n1 0') == 1.00\nassert solution('5 0\\n3 0\\n3 2\\n3 3\\n3 4\\n3 5') == 10.00\nassert solution('4 0\\n1 0\\n1 0\\n1 0\\n1 0') == 2.00\nassert solution('1 1\\n0 0\\n0 0\\n0 0\\n0 0') == 0.00\nassert solution('1 1\\n0 0\\n0 0\\n0 0\\n0 0') == 0.00\nassert solution('1 1\\n0 0\\n0 0\\n0 0\\n0 0') == 0.00"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == \"14.14\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    2 0\n    10 0\n    10 10\n    \"\"\"\n) == \"14.14\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\\n\") == \"14.14\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == \"14.14\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 0\\n10 0\\n10 10') == '14.14'"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\") == \"14.14\""
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457\\n\") == \"123457 0\\n0 2\\n123458 1\\n\""
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"0\\n2\"\n"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457\\n') == '123457 0\\n0 2\\n123458 1\\n'"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457') == '123457 0\\n0 2\\n123458 1'"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == '''\n123457 0\n0 2\n123458 1\n'''"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457\") == \"123457 0\\n0 2\\n123458 1\""
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457') == '123457 0\\n0 2\\n123458 1'"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457') == '123457 0\\n0 2\\n123458 1'\nassert solution('3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457\\n') == '123457 0\\n0 2\\n123458 1'"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457\") == \"123457 0\\n0 2\\n123458 1\\n\""
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(r'''\n    5\n3 5 10 2 5\n2 4 5 1 3\n''') == '90'"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\\n\") == \"90\""
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == \"90\\n\""
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == \"90\""
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"90\\n\""
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"90\\n\""
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == 90, \"Output should be 90\""
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == 90"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == \"90\\n\"\nassert solution(\"10\\n3 5 10 2 5\\n2 4 5 1 3\") == \"140\\n\"\nassert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == \"90\\n\"\nassert solution(\"10\\n3 5 10 2 5\\n2 4 5 1 3\") == \"140\\n\"\nassert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == \"90\\n\""
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '90'"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"6.000000\\n\"\n"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == expected_output, f\"Expected: {expected_output}, Actual: {solution(sample_input)}\""
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"6.000000\"\n\nfrom typing import List"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 10\\n1 2 6\\n0 4 3\\n0 8 2\") == 6.0\nprint(\"All test cases pass\")"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, \"Expected output is {}, got {}\".format(expected_output, solution(input()))"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 10\\n1 2 6\\n0 4 3\\n0 8 2') == '6.000000'\n\nfrom typing import List"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"6.000000\"\n"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('television_signal.txt', 'r')) == 6.000000\n"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    3 10\n    1 2 6\n    0 4 3\n    0 8 2\n    \"\"\"\n) == \"6.000000\""
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 10\\n1 2 6\\n0 4 3\\n0 8 2\") == \"6.000000\""
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n0 0\\n0 0\\n1\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n..\\n0\\n10\") == \"1.\\n..\\n2\\n.2\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n..\\n0\\n401\") == \"1.\\n..\\n401\\n\""
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n0 0\\n0 0\\n1\\n..\\n0\\n\") == \"1\\n..\\n\""
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Got {solution(stdin)}, expected {expected}\""
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1..\\n..1\\n0..\\n....\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n4') == '1.\\n..\\n0\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"\"\"1.\n..\n.\n.\n.\n\"\"\""
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n') == '1.\\n..\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output\nprint(\"Test Passed\")"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n1.\\n..\\n1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n2\\n0 0\\n0 0\\n1.\\n..\\n"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\") == \"1.\\n..\\n\"\nassert solution(\"3\\n0 0\\n0 0\\n1. 2\\n..\\n0\") == \"1. 2.\\n..\\n\"\nassert solution(\"5\\n0 0\\n0 0\\n1. 2. 3\\n..\\n0\") == \"1. 2. 3.\\n..\\n\""
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n2\n0 0\n0 0\n1.\n..\n0\n''') == '''1.\n..\n"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\\n\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\\n') == '1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'\n\nassert solution('3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\\n4\\n1 2\\n3 2\\n') == '1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'\n\nassert solution('3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\\n4\\n1 2\\n3 2\\n5\\n1 3\\n') == '1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'\n\nassert solution('3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\\n4\\n1 2\\n3 2\\n5\\n1 3\\n6\\n1 3\\n7\\n') == '1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'\n\nassert solution('3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\\n4\\n1 2\\n3 2\\n5\\n1 3\\n6\\n1 3\\n7\\n8\\n') == '1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'\n\nassert solution('3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\\n4\\n1 2\\n3 2\\n5\\n1 3\\n6\\n1 3\\n7\\n8\\n9\\n') == '1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test failed for solution({input()})\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == '1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'\nassert solution(3) == '1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'\nassert solution(3) == '1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'\nassert solution(3) == '1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'\nassert solution(3) == '1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'\nassert solution(3) == '1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'\nassert solution(3) == '1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'\nassert solution(3) == '1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'\nassert solution(3) == '1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'\nassert solution(3) == '1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'\nassert solution(3) == '1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'\nassert solution(3) == '1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'\nassert solution(3) == '1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'\nassert solution(3) == '1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'\nassert solution(3) == '1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'\nassert solution(3) == '1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'\nassert solution(3) == '1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'\nassert solution(3) == '1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'\nassert solution(3) == '1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'\nassert solution(3) == '1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'\nassert solution(3) == '1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'\nassert solution(3) == '1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'\nassert solution(3) == '1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'\nassert solution(3) == '1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'\nassert solution(3) == '1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'\nassert solution(3) == '1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'\nassert solution(3) == '1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'\nassert solution(3) == '1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'\nassert solution(3) == '1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'\nassert solution(3) == '1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'\nassert solution(3) == '1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'\nassert solution(3) == '1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'\nassert solution(3) == '1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'\nassert solution(3) == '1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'\nassert solution(3) =="
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\", \"Function should return 1 and def solution(stdin: str) -> str:\\n    pass\\n\\n\"\n"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Incorrect Solution\"\n"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n3\na\nbc\nabc\n''') == '''\n1\n1\n"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\na\\nbc\\nab\\n3\\n1 abca\\n2 1\\n2 3\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Solution: {solution(input())}, Expected Output: {expected_output}\"\n"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"2 1 1 1\") == \"NO\"\nassert solution(\"3 1 1 1\") == \"YES\"\nassert solution(\"4 1 1 1\") == \"YES\"\nassert solution(\"5 1 1 1\") == \"NO\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\\n\"\n"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"2 2 1 1\") == \"NO\"\nassert solution(\"5 5 5 5\") == \"YES\"\nassert solution(\"1 1 0 1\") == \"NO\"\n"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 1 1 1') == 'YES'\nassert solution('2 2 2 1') == 'NO'\nassert solution('3 2 2 2') == 'NO'\nassert solution('4 2 2 1') == 'YES'\nassert solution('5 2 2 2') == 'YES'"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"2 2 2 1\") == \"YES\"\nassert solution(\"3 3 3 1\") == \"NO\"\nassert solution(\"4 4 4 1\") == \"YES\"\nassert solution(\"5 5 5 1\") == \"YES\"\nassert solution(\"6 6 6 1\") == \"NO\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 1 1 1') == 'YES'\n"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"2 2 2 2\") == \"NO\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(b\"1 1 1 1\") == \"YES\"\nassert solution(b\"2 2 2 2\") == \"YES\"\nassert solution(b\"3 3 3 3\") == \"YES\"\nassert solution(b\"4 4 4 4\") == \"NO\"\nassert solution(b\"5 5 5 5\") == \"NO\"\n"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 1 1 1') == 'YES'\nassert solution('2 2 2 2') == 'YES'\nassert solution('3 3 3 3') == 'YES'\nassert solution('4 4 4 4') == 'YES'\nassert solution('5 5 5 5') == 'YES'\nassert solution('6 6 6 6') == 'YES'\nassert solution('7 7 7 7') == 'NO'\nassert solution('8 8 8 8') == 'NO'\nassert solution('9 9 9 9') == 'NO'\nassert solution('10 10 10 10') == 'NO'\nassert solution('11 11 11 11') == 'NO'\nassert solution('12 12 12 12') == 'NO'"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == '80.5696000000'\n"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == '80.57'\n"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\") == \"80.5696000000\""
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == '80.5696000000'\n"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\").read()) == \"80.5696000000\""
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 80.57\n"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == expected_output, \"Test case failed\""
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == '80.5696000000'\nassert solution('3 168\\n-0.0070 1.5417 25.0000\\n-0.0070 1.5417 25.0000') == '68.6323000000'\nassert solution('4 240\\n-0.0060 1.5417 25.0000\\n-0.0060 1.5417 25.0000') == '56.7000000000'\nassert solution('5 320\\n-0.0050 1.5417 25.0000\\n-0.0050 1.5417 25.0000') == '44.7677000000'\nassert solution('6 400\\n-0.0040 1.5417 25.0000\\n-0.0040 1.5417 25.0000') == '32.8363000000'\nassert solution('7 480\\n-0.0030 1.5417 25.0000\\n-0.0030 1.5417 25.0000') == '20.9050000000'\nassert solution('8 560\\n-0.0020 1.5417 25.0000\\n-0.0020 1.5417 25.0000') == '8.9736000000'\nassert solution('9 640\\n-0.0010 1.5417 25.0000\\n-0.0010 1.5417 25.0000') == '5.0422000000'\nassert solution('10 720\\n0.0000 1.5417 25.0000\\n0.0000 1.5417 25.0000') == '1.1108000000'\n"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == '80.5696000000'"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"80.57\"\nassert solution() == \"80.56\"\nassert solution() == \"80.56\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\"\nassert solution(\"8 0 0 1 1 1 0 0 1\") == \"2\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\"\nassert solution(\"1 0 0 0 0 1 1 1 0 0 0\") == \"3\"\nassert solution(\"0 0 0 0 0 0 0 0 0 0 0\") == \"1\"\nassert solution(\"0 0 0 0 0 0 0 0 0 0 0\") == \"1\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\", \"Test case 1 failed\"\nassert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\", \"Test case 2 failed\"\nassert solution(\"4 0 0 0 1 1 0 1 1\") == \"2\", \"Test case 3 failed\"\nassert solution(\"4 0 1 0 1 1 0 1 1\") == \"2\", \"Test case 4 failed\"\nassert solution(\"4 0 1 1 1 1 0 1 1\") == \"2\", \"Test case 5 failed\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n4 0 0 1 1 1 0 0 1\n''') == '2'\n\nfrom typing import List"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\\n\"\nassert solution(\"2 1 2 3 4 5 6 7 8\") == \"2\\n\"\nassert solution(\"3 0 0 1 1 1 0 0 1\") == \"0\\n\"\nassert solution(\"0 0 0 1 1 1 0 0 1\") == \"0\\n\"\nassert solution(\"3 1000 0 1 1 1 0 0 1\") == \"0\\n\"\nassert solution(\"0 0 1000 1 1 1 0 0 1\") == \"0\\n\"\nassert solution(\"3 0 -1 1 1 1 0 0 1\") == \"0\\n\"\nassert solution(\"0 -1 0 1 1 1 0 0 1\") == \"0\\n\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"1\\n\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\"\nassert solution(\"5 0 0 1 1 1 0 0 1\") == \"2\"\nassert solution(\"3 0 0 1 1 1 0 0 1\") == \"1\"\nassert solution(\"5 0 0 1 1 1 0 0 0\") == \"2\"\nassert solution(\"4 0 0 1 1 1 0 0 0\") == \"2\"\nassert solution(\"6 0 0 1 1 1 0 0 1\") == \"2\"\nassert solution(\"6 0 0 1 1 1 0 0 0\") == \"2\"\nassert solution(\"10 0 0 1 1 1 0 0 1\") == \"2\"\nassert solution(\"10 0 0 1 1 1 0 0 0\") == \"2\"\nassert solution(\"10 0 0 1 1 1 0 0 1\") == \"3\"\nassert solution(\"10 0 0 1 1 1 0 0 0\") == \"2\"\nassert solution(\"10 0 0 1 1 1 0 0 1\") == \"3\"\nassert solution(\"10 0 0 1 1 1 0 0 0\") == \"3\"\nassert solution(\"10 0 0 1 1 1 0 0 1\") == \"4\"\nassert solution(\"10 0 0 1 1 1 0 0 0\") == \"3\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\\n\"\nassert solution(\"4 0 0 1 1 1 0 0 0\") == \"0\\n\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 0 0 1 1 1 0 0 1') == '2'"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    3 2 3\n    0 0 400\n    1000 0 400\n    2000 0 400\n    300 0 150\n    1300 0 150\n    \"\"\"\n) == \"1400\\n\"\n"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150') == 1400\nassert solution('3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 250') == 'impossible'\nassert solution('3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 151') == 1400\n"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"1400\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n\") == \"1400\"\nassert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n2 0 0\\n3 0 0\\n4 0 0\\n5 0 0\\n\") == \"impossible\"\nassert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n2 0 0\\n3 0 0\\n4 0 0\\n5 0 0\\n6 0 0\\n7 0 0\\n8 0 0\\n9 0 0\\n10 0 0\\n11 0 0\\n12 0 0\\n13 0 0\\n14 0 0\\n15 0 0\\n16 0 0\\n17 0 0\\n18 0 0\\n19 0 0\\n20 0 0\\n21 0 0\\n22 0 0\\n23 0 0\\n24 0 0\\n25 0 0\\n26 0 0\\n27 0 0\\n28 0 0\\n29 0 0\\n30 0 0\\n31 0 0\\n32 0 0\\n33 0 0\\n34 0 0\\n35 0 0\\n36 0 0\\n37 0 0\\n38 0 0\\n39 0 0\\n40 0 0\\n41 0 0\\n42 0 0\\n43 0 0\\n44 0 0\\n45 0 0\\n46 0 0\\n47 0 0\\n48 0 0\\n49 0 0\\n50 0 0\\n51 0 0\\n52 0 0\\n53 0 0\\n54 0 0\\n55 0 0\\n56 0 0\\n57 0 0\\n58 0 0\\n59 0 0\\n60 0 0\\n61 0 0\\n62 0 0\\n63 0 0\\n64 0 0\\n65 0 0\\n66 0 0\\n67 0 0\\n68 0 0\\n69 0 0\\n70 0 0\\n71 0 0\\n72 0 0\\n73 0 0\\n74 0 0\\n75 0 0\\n76 0 0\\n77 0 0\\n78 0 0\\n79 0 0\\n80 0 0\\n81 0 0\\n82 0 0\\n83 0 0\\n84 0 0\\n85 0 0\\n86 0 0\\n87 0 0\\n88 0 0\\n89 0 0\\n90 0 0\\n91 0 0\\n92 0 0\\n93 0 0\\n94 0 0\\n95 0 0\\n96 0 0\\n97 0 0\\n98 0 0\\n99 0 0\\n100 0 0\\"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == 1400\nprint(\"All test cases passed\")"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_data) == output_data, \"Your code is missing a test case. Please check the sample input and output provided.\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"TODO: implementation\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''3 2 3\n0 0 400\n1000 0 400\n2000 0 400\n300 0 150\n1300 0 150''') == '1400'\n\nassert solution('''3 2 3\n0 0 400\n1000 0 400\n2000 0 400\n300 0 150\n1300 0 150''') == 'impossible'"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1400\"\n"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbrussels amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbrussels helsinki\") == \"3907\"\nassert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbrussels amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbrussels helsinki\") == \"3907\"\nassert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbrussels amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbrussels helsinki\") == \"3907\"\nassert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nrey"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 3907\n"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"\"\"\nSolution:\n3907\n\"\"\""
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '3907', \"Expected Output: 3907, Actual Output: {}\".format(solution())"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '3907'"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 3907, \"The correct minimum cost is not provided\"\n"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 3907, \"Output should be 3907\""
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbrussels amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbrussels helsinki\\n\") == 3907, \"Incorrect solution\""
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10 15\\nstockholm\\namsterdam\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 15\\nstockholm\\namsterdam\\nstockholm\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\nstockholm\\nhelsinki\\nstockholm\\ncopenhagen\\nberlin\\namsterdam\\nstockholm\\ncopenhagen\\nhelsinki\\nstockholm\\ncopenhagen\\nberlin\\namsterdam\\nstockholm\\ncopenhagen\\nhelsinki\\nstockholm\\ncopenhagen\\nberlin\\namsterdam\\nstockholm\\ncopenhagen\\nhelsinki\\nstockholm\\ncopenhagen\\nberlin\\namsterdam\\nstockholm\\ncopenhagen\\nhelsinki\\nstockholm\\ncopenhagen\\nberlin\\namsterdam\\nstockholm\\ncopenhagen\\nhelsinki\\nstockholm\\ncopenhagen\\nberlin\\namsterdam\\nstockholm\\ncopenhagen\\nhelsinki\\nstockholm\\ncopenhagen\\nberlin\\namsterdam\\nstockholm\\ncopenhagen\\nhelsinki\\nstockholm\\ncopenhagen\\nberlin\\namsterdam\\nstockholm\\ncopenhagen\\nhelsinki\\nstockholm\\ncopenhagen\\nberlin\\namsterdam\\nstockholm\\ncopenhagen\\nhelsinki\\nstockholm\\ncopenhagen\\nberlin\\namsterdam\\nstockholm\\ncopenhagen\\nhelsinki\\nstockholm\\ncopenhagen\\nberlin\\namsterdam\\nstockholm\\ncopenhagen\\nhelsinki\\nstockholm\\ncopenhagen\\nberlin\\namsterdam\\nstockholm\\ncopenhagen\\nhelsinki\\nstockholm\\ncopenhagen\\nberlin\\namsterdam\\nstockholm\\ncopenhagen\\nhelsinki\\nstockholm\\ncopenhagen\\nberlin\\namsterdam\\nstockholm\\ncopenhagen\\nhelsinki\\nstockholm\\ncopenhagen\\nberlin\\namsterdam\\nstockholm\\ncopenhagen\\nhelsinki\\nstockholm\\ncopenhagen\\nberlin\\namsterdam\\nstockholm\\ncopenhagen\\nhelsinki\\nstockholm\\ncopenhagen\\nberlin\\namsterdam\\nstockholm\\ncopenhagen\\nhelsinki\\nstockholm\\ncopenhagen\\nberlin\\namsterdam\\nstockholm\\ncopenhagen\\nhelsinki\\nstockholm\\ncopenhagen\\nberlin\\namsterdam\\nstockholm\\ncopenhagen\\nhelsinki\\nstockholm\\ncopenhagen\\nberlin\\namsterdam\\nstockholm\\ncopenhagen\\nhelsinki\\nstockholm\\ncopenhagen\\nberlin\\namsterdam\\nstockholm\\ncopenhagen\\nhelsinki\\nstockholm\\ncopenhagen\\nberlin\\namsterdam\\nstockholm\\ncopenhagen\\nhelsinki\\nstockholm\\ncopenhagen\\nberlin\\namsterdam\\nstockholm\\ncopenhagen\\nhelsinki\\nstockholm\\ncopenhagen\\nberlin\\namsterdam\\nstockholm\\ncopenhagen\\nhelsinki\\nstockholm\\ncopenhagen\\nberlin\\namsterdam\\nstockholm\\ncopenhagen\\nhelsinki\\nstockholm\\ncopenhagen\\nberlin\\namsterdam\\nstockholm\\ncopenhagen\\nhelsinki\\nstockholm\\ncopenhagen\\nberlin\\namsterdam\\nstockholm\\ncopenhagen\\nhelsinki\\nstockholm\\ncopenhagen\\nber"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\\n1\\n2\\n1\\n\""
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\\n1\\n2\\n1\""
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    5 4\n    3 1 3 4 2\n    0 5\n    0 9\n    4 5\n    2 1\n    \"\"\"\n) == \"\"\"\n2\n1\n2\n1\n\"\"\""
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(None) == \"Error: Invalid input.\""
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\n\"\n"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '2\\n1\\n2\\n1'"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\"\n"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\\n\""
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\"\nassert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\"\nassert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\""
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '00010'"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5\\n01001\\n11100\\n10111\") == \"00010\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5\\n01001\\n11100\\n10111\") == \"00010\"\n\nfrom typing import List"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"00010\\n\""
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"00010\"\nassert solution(stdin) == \"01010\"\nassert solution(stdin) == \"01001\"\nassert solution(stdin) == \"10111\"\nassert solution(stdin) == \"11100\""
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 5\\n01001\\n11100\\n10111') == '00010\\ndef solution(stdin: str) -> str:\\npass'\n"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5\\n01001\\n11100\\n10111\") == \"00010\\n\""
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output\n\nfrom typing import List"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5\\n01001\\n11100\\n10111\") == \"00010\""
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 2\\n0 4\\n6 12') == 'possible'"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"possible\""
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1\n6 2\n0 4\n6 12\n\"\"\") == \"possible\""
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"possible\"\n"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    1\n    6 2\n    0 4\n    6 12\n    \"\"\"\n) == \"possible\""
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\""
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed: solution({input()})!= output({output})\""
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n6 2\\n0 4\\n6 12\") == \"possible\"\nassert solution(\"1\\n2 2\\n3 4\\n5 6\") == \"impossible\""
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1') == 'impossible'"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\""
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    5\n    5 0 1\n    10 0 1\n    0 5 1\n    0 -5 1\n    -5 0 1\n    ''') == '2\\ndef solution(stdin: str) -> str:\\n    pass'\n\nsolution('''\n    5\n    5 0 1\n    10 0 1\n    0 5 1\n    0 -5 1\n    -5 0 1\n    ''')"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r').read()) == \"2\\n\"\n"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"2\"\nassert solution(\"1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"3\"\nassert solution(\"4\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"2\""
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\\n') == 2, \"Solution should return 2.\""
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"2\"\nassert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"2\"\nassert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"2\"\nassert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"2\"\nassert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"2\"\nassert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"2\"\nassert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"2\"\nassert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"2\""
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"2\""
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\\n\") == \"2\"\n"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"2\"\n"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '2\\n'\nassert solution(input()) == '3\\n'"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n') == 'Plot Error\\n3 Just A Dream\\nYes\\nPlot Error\\ndef solution(stdin: str) -> str: pass\\n'"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'Plot Error\\n3 Just A Dream\\nYes'\n\nassert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'Plot Error\\n3 Just A Dream\\nYes'\n\nassert solution('''\n5\nE more_events\nS 1 more_events\nS 2 more_events\nD 1\nE less_events\nS 1 less_events\nD 2\nE more_events\nS 1 more_events\nD 3\nE more_events\nS 1 more_events\nD 4\nE more_events\nS 1 more_events\nD 5\nE more_events\nS 1 more_events\nD 6\nE more_events\nS 1 more_events\nD 7\nE more_events\nS 1 more_events\nD 8\nE more_events\nS 1 more_events\nD 9\nE more_events\nS 1 more_events\nD 10\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_events\nS 1 more_"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"\"\"\nPlot Error\n3 Just A Dream\nYes\n\"\"\""
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'Yes'\n\nassert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == '3 Just A Dream'\n\nassert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'Plot Error'\n\nassert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'Plot Error'\n\nassert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'Plot Error'\n\nassert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'Plot Error'\n\nassert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'Plot Error'\n\nassert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'Plot Error'\n\nassert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n') == 'Yes\\n3 Just A Dream\\n'\n\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n') == 'Plot Error'\n\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 3\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n') == 'Plot Error'\n\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n') == 'Plot Error'\n\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 3\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n') == 'Plot Error'\n\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n') == 'Plot Error'\n\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 3\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n') == 'Plot Error'"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == \"Plot Error\"\nassert solution(open(\"sample_input_2.txt\", \"r\")) == \"Plot Error\"\nassert solution(open(\"sample_input_3.txt\", \"r\")) == \"Plot Error\"\nassert solution(open(\"sample_input_4.txt\", \"r\")) == \"Plot Error\"\nassert solution(open(\"sample_input_5.txt\", \"r\")) == \"Plot Error\""
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"Plot Error\\n3 Just A Dream\\nYes\""
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"E business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\") == \"Yes\\n3 Just A Dream\\nYes\"\n\nassert solution(\"E business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE all_just_a_dream\\nD 2\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE all_just_a_dream\\nD 3\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE all_just_a_dream\\nD 1\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE all_just_a_dream\\nD 5\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE all_just_a_dream\\nD 6\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE all_just_a_dream\\nD 7\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE all_just_a_dream\\nD 8\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE all_just_a_dream\\nD 9\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE all_just_a_dream\\nD 10\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE all_just_a_dream\\nD 10\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE all_just_a_dream\\nD 8\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE all_just_a_dream\\nD 9\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE all_just_a_dream\\nD 10\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE all_just_a_dream\\nD 7\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE all_just_a_dream\\nD 8\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE all_just_a_dream\\nD 9\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE all_just_a_dream\\nD 10\\nS 1!bobby_dies\\nS 2"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"Plot Error\"\n\nsolution = \"\"\"\nimport itertools"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n\"\"\") == \"Plot Error\\n3 Just A Dream\\nYes\"\n\nassert solution(\"\"\"\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n\"\"\") == \"Plot Error\\n2 Just A Dream\\nNo\"\n\nassert solution(\"\"\"\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nD 2\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n\"\"\") == \"Plot Error\\n2 Just A Dream\\nNo\"\n\nassert solution(\"\"\"\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nD 2\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nD 2\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nD 2\n\"\"\") == \"Plot Error\\n2 Just A Dream\\nNo\""
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum') == 'exercitation ullamco\\nlaboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum'"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum') == '+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    24 5 8 7\n    Lorem ipsum dolor sit amet consectetur adipisicing elit sed do\n    eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad\n    minim veniam quis nostrud exercitation ullamco laboris nisi ut\n    aliquip ex ea commodo consequat Duis aute irure dolor in\n    reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n    pariatur Excepteur sint occaecat cupidatat non proident sunt in\n    culpa qui officia deserunt mollit anim id est laborum\n    \"\"\"\n) == \"\"\"\n+------------------------+-+\n|exercitation ullamco    |^|\n|laboris nisi ut aliquip | |\n|ex ea commodo consequat |X|\n|Duis aute irure dolor in| |\n|reprehenderit in        |v|\n+------------------------+-+\n"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 'X^V|^X|vX^X|^vX^v|X^X|vX^v|^vX^vX|^X^vX^X|^vX^vX|^X^vX^v|^X^X^vX|^X^X^vX^v|^vX^vX^X|^X^vX^X^v|^vX^X^vX^v|^X^vX^vX^v|^vX^vX^X^X|^X^vX^vX^v|^vX^X^vX^X|^X^vX^vX^v|^vX^vX^X^X|^X^vX^vX^v|^vX^X^vX^X|^X^vX^vX^v|^vX^vX^X^X|^X^vX^vX^v|^vX^X^vX^X|^X^vX^vX^v|^vX^vX^X^X|^X^vX^vX^v|^vX^X^vX^X|^X^vX^vX^v|^vX^vX^X^X|^X^vX^vX^v|^vX^X^vX^X|^X^vX^vX^v|^vX^vX^X^X|^X^vX^vX^v|^vX^X^vX^X|^X^vX^vX^v|^vX^vX^X^X|^X^vX^vX^v|^vX^X^vX^X|^X^vX^vX^v|^vX^vX^X^X|^X^vX^vX^v|^vX^X^vX^X|^X^vX^vX^v|^vX^vX^X^X|^X^vX^vX^v|^vX^X^vX^X|^X^vX^vX^v|^vX^vX^X^X|^X^vX^vX^v|^vX^X^vX^X|^X^vX^vX^v|^vX^vX^X^X|^X^vX^vX^v|^vX^X^vX^X|^X^vX^vX^v|^vX^vX^X^X|^X^vX^vX^v|^vX^X^vX^X|^X^vX^vX^v|^vX^vX^X^X|^X^vX^vX^v|^vX^X^vX^X|^X^vX^vX^v|^vX^vX^X^X|^X^vX^vX^v|^vX^X^vX^X|^X^vX^vX^v|^vX^vX^X^X|^X^vX^vX^v|^vX^X^vX^X|^X^vX^vX^v|^vX^vX^X^X|^X^vX^vX^v|^vX^X^vX^X|^X^vX^vX^v|^vX^vX^X^X|^X^vX^vX^v|^vX^X^vX^X|^X^vX^vX^v|^vX^vX^X^X|^X^vX^vX^v|^vX^X^vX^X|^X^vX^vX^v|^vX^vX^X^X|^X^vX^vX^v|^vX^X^vX^X|^X^vX^vX^v|^vX^vX^X^X|^X^vX^vX^v|^vX^X^vX^X|^X^vX^vX^v|^vX^vX^X^X|^X^vX^vX^v|^vX"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"24 5 8 7\") == \"^^^^^^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\\n\") == \"exercitation ullamco    ^\\nlaboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\\n\"\nassert solution(\"12 10 10 10\\nabc 123 456 789\\n\") == \"abc 123 456 789\\n\"\nassert solution(\"10 10\\n123456789012345678901234567890\\n\") == \"12345678901234567890\\n\"\nassert solution(\"10 10 10\\n123456789012345678901234567890\\n\") == \"12345678901234567890\\n\""
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n24 5 8 7\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do\neiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad\nminim veniam quis nostrud exercitation ullamco laboris nisi ut\naliquip ex ea commodo consequat Duis aute irure dolor in\nreprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\npariatur Excepteur sint occaecat cupidatat non proident sunt in\nculpa qui officia deserunt mollit anim id est laborum\n''') == '''\n+------------------------+-+\n|exercitation ullamco    |^|\n|laboris nisi ut aliquip | |\n|ex ea commodo consequat |X|\n|Duis aute irure dolor in| |\n|reprehenderit in        |v|\n+------------------------+-+\n"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\") == \"+++++++++++++++++++++++++++^^^^^+|v+++++|exercitation ullamco+++++|laboris nisi ut aliquip++++|ex ea commodo consequat++++|Duis aute irure dolor in++++|reprehenderit in+++++++\""
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\\n\") == \" + ex |^ |\\n|laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\\n\"\nassert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\\n10 20 30 40\\nHello, world!\\nGoodbye, world!\\n\") == \" + ex |^ |\\n|laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\\n\"\nassert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\\n10 20 30 40\\nHello, world!\\nGoodbye, world!\\n5 7 10 15\\nGreat! The input text can be split by these lines.\\n\") == \" + ex |^ |\\n|laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\\n\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution(solution(solution(solution(stdin))))) == \"possible\"\n"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\"\nassert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 4\") == \"impossible\"\nassert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"impossible\"\nassert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"possible\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0') == 'possible\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\"\n\nfrom typing import List"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\"\n"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 'possible', 'Your implementation is incorrect.'\nassert solution() == 'possible', 'Your implementation is incorrect.'\nassert solution() == 'possible', 'Your implementation is incorrect.'\nassert solution() == 'possible', 'Your implementation is incorrect.'\nassert solution() == 'impossible', 'Your implementation is incorrect.'"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\"\n\nfrom typing import List"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\""
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1 1\\n1\\n2\\n\") == \"1.00000000\""
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 1.00000000\n"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1 1\\n1\\n2\") == \"1.00000000\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 1.00000000"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 1 1\\n1\\n2\\n') == '1.00000000'"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin: str) == '1.00000000\\n', \"Expected '1.00000000', but got: {}\".format(solution(stdin))"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1.00000000\""
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1.00000000'"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1.00000000\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 1 1\\n1\\n2\\n') == '1.00000000'"
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\") == \"2\\n1\\n3\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\"\nassert solution() == \"1\"\nassert solution() == \"3\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\\n1\\n3\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\") == \"2\\n1\\n3\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\") == \"2\\n1\\n3\\n\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\\n1\\n3\\n\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('example.in').read()) == \"2\\n1\\n3\\n\"\n\nassert solution(open('example.in').read()) == \"2\\n1\\n3\\n\"\n\nassert solution(open('example.in').read()) == \"2\\n1\\n3\\n\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == expected\n\nfrom typing import List"
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\") == \"2\\n1\\n3\\n\"\nassert solution(\"5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\\n\") == \"2\\n1\\n3\\n\"\nassert solution(\"5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\\n\\n\") == \"2\\n1\\n3\\n\"\nassert solution(\"5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\\n\\n\\n\") == \"2\\n1\\n3\\n\"\nassert solution(\"5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\\n\\n\\n\\n\") == \"2\\n1\\n3\\n\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n5\n5 4 3 3 2\n3\n1 2\n1 1\n2 4\n''') == '2\\n1\\n3\\n'\nassert solution('''\n6\n3 2 4 1 5 6\n1 4\n2 5\n''') == '1\\n2\\n'\nassert solution('''\n4\n1 2 3 4\n1 2\n2 3\n''') == '3\\n'"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 2\n0 1\n1 2\n0 2\n\"\"\") == \"1\\n\"\nassert solution(\"\"\"\n3 1\n0 1\n1 2\n2 3\n\"\"\") == \"3\\n\"\nassert solution(\"\"\"\n3 2\n0 1\n1 2\n2 3\n\"\"\") == \"6.5\\n\"\nassert solution(\"\"\"\n3 2\n0 1\n1 2\n2 3\n\"\"\") == \"9.0\\n\""
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == 1\nassert solution(\"4 4\\n0 1\\n1 2\\n2 3\\n3 0\") == 5\nassert solution(\"3 2\\n0 1\\n1 2\\n2 3\") == \"never meet\"\n"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\\n\"\n"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n0 2\\n\") == \"1\""
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 2\n0 1\n1 2\n0 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 2\n0 1\n1 2\n0 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 2\n0 1\n1 2\n0 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 2\n0 1\n1 2\n0 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 2\n0 1\n1 2\n0 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 2\n0 1\n1 2\n0 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 2\n0 1\n1 2\n0 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 2\n0 1\n1 2\n0 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 2\n0 1\n1 2\n0 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 2\n0 1\n1 2\n0 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 2\n0 1\n1 2\n0 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 2\n0 1\n1 2\n0 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 2\n0 1\n1 2\n0 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 2\n0 1\n1 2\n0 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 2\n0 1\n1 2\n0 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 2\n0 1\n1 2\n0 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 2\n0 1\n1 2\n0 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 2\n0 1\n1 2\n0 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 2\n0 1\n1 2\n0 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 2\n0 1\n1 2\n0 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 2\n0 1\n1 2\n0 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 2\n0 1\n1 2\n0 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 2\n0 1\n1 2\n0 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 2\n0 1\n1 2\n0 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 2\n0 1\n1 2\n0 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 2\n0 1\n1 2\n0 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 2\n0 1\n1 2\n0 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 2\n0 1\n1 2\n0 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 2\n0 1\n1 2\n0 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 2\n0 1\n1 2\n0 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 2\n0 1\n1 2\n0 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 2\n0 1\n1 2\n0 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 2\n0 1\n1 2\n0 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 2\n0 1\n1 2\n0 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 2\n0 1\n1 2\n0 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 2\n0 1\n1 2\n0 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 2\n0 1\n1 2\n0 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 2\n0 1\n1 2\n0 2\n\"\"\") == \"1\""
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n0 2\\n\") == 1\nassert solution(\"3 1\\n1 2\\n2 0\\n\") == 1\nassert solution(\"2 1\\n0 2\\n1 0\\n\") == 1\nassert solution(\"3 1\\n2 0\\n0 1\\n\") == 1\nassert solution(\"1 1\\n0 2\\n2 1\\n\") == 1\nassert solution(\"2 2\\n1 0\\n0 1\\n\") == 1\nassert solution(\"1 1\\n1 2\\n0 0\\n\") == 1\nassert solution(\"1 1\\n2 0\\n0 2\\n\") == 1\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\\n\") == 2\nassert solution(\"1 1\\n2 0\\n0 2\\n\") == 2\nassert solution(\"3 1\\n2 0\\n0 1\\n\") == 2\nassert solution(\"1 1\\n2 0\\n0 2\\n\") == 2\nassert solution(\"2 2\\n1 0\\n0 1\\n\") == 2\nassert solution(\"1 1\\n1 2\\n0 0\\n\") == 2\nassert solution(\"1 1\\n2 0\\n0 2\\n\") == 2"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 'never meet' # replace 'pass' with your actual solution"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\\n1\"\nassert solution(\"3 2\\n1 2\\n2 0\\n2 2\") == \"1\\n4\"\nassert solution(\"3 2\\n2 1\\n0 0\\n0 0\") == \"1\\n4\""
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n0 2\\n\") == 1\nprint(\"All tests passed!\")"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 2\\n0 1\\n1 2\\n0 2') == '1'\nassert solution('3 4\\n0 1\\n1 2\\n0 2') == 'never meet'"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    5 4 2\n    \"\"\"\n) == \"14500000001\"\n\nassert solution(\n    \"\"\"\n    100 100 100\n    \"\"\"\n) == \"14500000001\"\n\nassert solution(\n    \"\"\"\n
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"14500000001\"\n"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"14500000001\", \"The power to arrest-to deprive a citizen of liberty-must be used fairly, responsibly, and without bias.\""
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"14500000001\""
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4 2\") == \"14500000001\", \"The answer is incorrect.\""
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == \"14500000001\", \"The output is incorrect.\"\n\np = 14500000001\nq = 1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4 2\") == \"14500000001\"\nassert solution(\"1 2 3\") == \"14499999999\"\nassert solution(\"6 5 4\") == \"14500000000\"\nassert solution(\"1 1 1\") == \"14500000000\"\nassert solution(\"1 1 2\") == \"14499999999\"\n"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5, 4, 2) == 14500000001\n"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4 2\") == 14500000001\nassert solution(\"5 3 1\") == 730000000\nassert solution(\"10 10 10\") == 0\nassert solution(\"5 10 1\") == 17700000000\nassert solution(\"1000 1000 1000\") == 0\nassert solution(\"10 10 1000\") == 200000000000000000000\nassert solution(\"1000 1000 1000 1000\") == 0\n"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5, 4, 2) == 14500000001, \"The probability of evading capture is not equal to 1/10^11 + 3.\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '0\\n1\\n1\\n2\\n'"
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 4\\n3 7\\n1 6\\n2 6\") == \"0\\n1\\n1\\n2\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n1 4\\n3 7\\n1 6\\n2 6') == '0\\n1\\n1\\n2\\n'\nassert solution('5\\n-1 0\\n0 1\\n0 2\\n0 3\\n0 4\\n') == '0\\n1\\n1\\n1\\n1\\n1\\n'\nassert solution('3\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n') == '1\\n1\\n1\\n1\\n1\\n'\nassert solution('4\\n1 4\\n3 7\\n1 6\\n2 6\\n') == '0\\n1\\n1\\n2\\n'\nassert solution('6\\n1 4\\n2 5\\n1 6\\n2 5\\n3 4\\n4 3\\n') == '0\\n1\\n1\\n1\\n1\\n'"
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 0, \"Test 1 failed.\"\nassert solution() == 1, \"Test 2 failed.\"\nassert solution() == 1, \"Test 3 failed.\"\nassert solution() == 2, \"Test 4 failed.\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"0\\n1\\n1\\n2\\n\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n4\\n1 4\\n3 7\\n1 6\\n2 6\") == \"0\\n1\\n1\\n2\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"4\\n1 4\\n3 7\\n1 6\\n2 6\") == \"0\\n1\\n1\\n2\\n\"\nassert solution(stdin=\"4\\n1 4\\n3 7\\n1 6\\n2 6\") == \"0\\n1\\n1\\n2\\n\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 4\\n3 7\\n1 6\\n2 6\") == \"0\\n1\\n1\\n2\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n4\n1 4\n3 7\n1 6\n2 6\n''') == '0\\n1\\n1\\n2\\n'"
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 4\\n3 7\\n1 6\\n2 6\") == \"0\\n1\\n1\\n2\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300') == '3100\\n'"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_str) == expected_output, f\"The output {solution(input_str)} does not match the expected output {expected_output}\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    5 3\n    1 2 1000\n    2 3 1000\n    4 5 500\n    2\n    1 4 300\n    3 5 300\n    \"\"\"\n) == \"3100\\n\"\n\nassert solution(\n    \"\"\"\n    3 2 50\n    1 2 300\n    \"\"\"\n) == \"600\\n\"\n\nassert solution(\n    \"\"\"\n    1 2 100\n    2 3 100\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n    2 2 100\n    2 3 100\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n    1 3 100\n    2 3 100\n    3 4 100\n    4 5 100\n    5 6 100\n    \"\"\"\n) == \"600\\n\"\n\nassert solution(\n    \"\"\"\n    1 3 100\n    2 3 100\n    3 4 100\n    4 5 100\n    5 6 100\n    6 7 100\n    7 8 100\n    8 9 100\n    \"\"\"\n) == \"2400\\n\"\n\nassert solution(\n    \"\"\"\n    1 1 100\n    2 2 100\n    3 3 100\n    4 4 100\n    5 5 100\n    6 6 100\n    7 7 100\n    8 8 100\n    9 9 100\n    \"\"\"\n) == \"600\\n\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3100\"\n"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n\") == \"3100\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n\") == \"3100\\n\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3100\\n\", \"Solution not correct\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300''') == '3100'"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3100\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"3100\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13') == '5.250000000\\n'\nassert solution('4 3\\n5 6\\n3 2\\n2 3\\n7 11\\n1 8') == '4.166666667\\n'\nassert solution('2 2\\n3 4\\n4 2\\n1 3\\n1 5\\n2 3') == '2.500000000\\n'\nassert solution('2 3\\n3 6\\n4 8\\n5 10\\n6 12\\n7 14') == '2.000000000\\n'\nassert solution('2 1\\n3 2\\n4 3\\n5 4\\n6 5') == '0.000000000\\n'"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n4 2\n1 8\n6 5\n2 5\n2 9\n7 13\n''') == '5.250000000\\n'\n\nfrom typing import List\nfrom collections import defaultdict"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\") == \"5.25\\n\"\nassert solution(\"1 1\\n3 2\") == \"0.50\\n\"\nassert solution(\"5 1\\n1 1\") == \"0.00\\n\"\nassert solution(\"6 3\\n2 1\\n3 2\\n4 3\") == \"0.40\\n\"\n"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"5.250000000\", \"Test Case 1 Failed\"\n\nassert solution(open(\"input.txt\", \"r\").read()) == \"4.750000000\", \"Test Case 2 Failed\"\n\nassert solution(open(\"input.txt\", \"r\").read()) == \"4.500000000\", \"Test Case 3 Failed\"\n\nassert solution(open(\"input.txt\", \"r\").read()) == \"4.250000000\", \"Test Case 4 Failed\"\n\nassert solution(open(\"input.txt\", \"r\").read()) == \"4.000000000\", \"Test Case 5 Failed\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\") == \"5.250000000\\n\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"5.250000000\"\n"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n\") == \"5.250000000\\n5.000000000\\n4.750000000\\n4.500000000\\n4.250000000\\n\", \"Test case 1 failed\"\n\nassert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n\") == \"5.250000000\\n5.000000000\\n4.750000000\\n4.500000000\\n4.250000000\\n\", \"Test case 2 failed\"\n\nassert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n\") == \"5.250000000\\n5.000000000\\n4.750000000\\n4.500000000\\n4.250000000\\n\", \"Test case 3 failed\"\n\nassert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n\") == \"5.250000000\\n5.000000000\\n4.750000000\\n4.500000000\\n4.250000000\\n\", \"Test case 4 failed\"\n\nassert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n\") == \"5.250000000\\n5.000000000\\n4.750000000\\n4.500000000\\n4.250000000\\n\", \"Test case 5 failed\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\") == \"5.250000000\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '5.250000000\\n'"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13') == '5.250000000', \"The output should be '5.250000000', but it's actually '{}'\".format(solution('4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13'))"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\\n\") == \"7\\n2\\n2\\n0\\n4\"\nassert solution(\"1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\\n\") == \"2\\n2\\n0\\n4\"\nassert solution(\"1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\\n\") == \"0\\n4\"\nassert solution(\"1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\\n\") == \"4\"\n"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2') == '7\\n2\\n2\\n0\\n4'"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('7\\n1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\\n') == '7\\n2\\n2\\n0\\n4'"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"7\\n2\\n2\\n0\\n4\"\nassert solution(2) == \"7\\n2\\n2\\n0\\n4\"\nassert solution(3) == \"0\\n1\\n3\\n5\\n7\"\nassert solution(4) == \"4\\n2\\n1\\n0\"\nassert solution(5) == \"4\\n2\\n1\\n0\"\nassert solution(6) == \"4\\n2\\n1\\n0\"\nassert solution(7) == \"4\\n2\\n1\\n0\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\") == \"7\\n2\\n2\\n0\\n4\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\") == \"7\\n2\\n2\\n0\\n4\\n\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '7\\n2\\n2\\n0\\n4\\n'"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"7\\n2\\n2\\n0\\n4\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\") == \"7\\n2\\n2\\n0\\n4\"\n\nassert solution(\"1\\n2\\n3\\n1\\n2\\n1\\n1\") == \"2\"\n\nassert solution(\"1\\n2\\n3\\n1\\n2\\n1\\n1\\n2\") == \"2\"\n\nassert solution(\"2\\n2\\n3\\n1\\n2\\n1\\n1\\n2\\n2\\n2\\n3\\n1\\n2\\n1\\n1\") == \"0\"\n\nassert solution(\"4\\n1\\n2\\n1\\n2\\n1\\n1\\n2\\n2\\n2\\n3\\n1\\n2\\n1\\n1\\n2\\n2\\n2\\n3\\n1\\n2\\n1\\n1\\n2\\n2\\n2\") == \"4\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"32.6405451448\", \"Incorrect solution\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"32.6405451448\\n\", \"The correct result is not obtained.\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_data) == expected_output, f\"Test case failed: {solution(input_data)}!= {expected_output}\" for input_data, expected_output in zip(test_cases, test_outputs)"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2\") == 32.6405451448\n\nThe solution is correct and solves the problem in a reasonable time complexity of O(2^N) where N is the number of holes. It uses Monte Carlo simulation to approximate the expected payout for each ball drop."
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {solution(input())}!= {expected_output}\"\n\nimport random\nimport math"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 32.6405451448, \"The expected output is incorrect.\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '32.6405451448'"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2\\n') == '32.6405451448'\n"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == expected_output, f\"Test case {i+1} failed. Expected output: {expected_output}, got {solution(sample_input)}\"\n\nsample_input = \"\"\"\n4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.2\n\"\"\"\n\nsample_input = [float(x) for x in sample_input.split()]\n\nexpected_output = 32.6405451448\n\ni = 0\nfor p in sample_input:\n    i += 1\n    assert abs(solution(p) - expected_output) < 1e-4, f\"Test case {i+1} failed. Expected output: {expected_output}, got {solution(p)}\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2 3 4 1\", \"Please provide the correct input\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2 3 4 1\\n\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 1 4 3\") == \"2 3 4 1\"\nassert solution(\"5\\n2 1 4 3\\n4 5 6 7\") == \"2 3 4 1 5 6 7\"\nassert solution(\"3\\n1 2 3\\n4 5 6\") == \"1 4 2\"\nassert solution(\"1\\n1\\n1\") == \"1\"\nassert solution(\"2\\n1 2\\n3 4\") == \"1 3 4\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n2 1 4 3') == '2 3 4 1\\n'\n"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n2 1 4 3\\n') == '2 3 4 1\\n'"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1\\n4\\n3\\n\") == \"2 3 4 1\"\nassert solution(\"4\\n1\\n3\\n2\\n\") == \"2 3 4 1\"\nassert solution(\"5\\n3\\n1\\n4\\n2\\n\") == \"3 1 4 2 1\"\nassert solution(\"4\\n1\\n2\\n3\\n\") == \"1 2 3 4\"\nassert solution(\"4\\n1\\n3\\n2\\n\") == \"1 2 3 4\"\nassert solution(\"4\\n1\\n2\\n3\\n\") == \"1 2 3 4\"\nassert solution(\"4\\n1\\n3\\n2\\n\") == \"1 2 3 4\"\nassert solution(\"4\\n1\\n2\\n3\\n\") == \"1 2 3 4\"\nassert solution(\"4\\n1\\n3\\n2\\n\") == \"1 2 3 4\"\nassert solution(\"4\\n1\\n2\\n3\\n\") == \"1 2 3 4\"\nassert solution(\"4\\n1\\n3\\n2\\n\") == \"1 2 3 4\"\nassert solution(\"4\\n1\\n2\\n3\\n\") == \"1 2 3 4\"\nassert solution(\"4\\n1\\n3\\n2\\n\") == \"1 2 3 4\"\nassert solution(\"4\\n1\\n2\\n3\\n\") == \"1 2 3 4\"\nassert solution(\"4\\n1\\n3\\n2\\n\") == \"1 2 3 4\"\nassert solution(\"4\\n1\\n2\\n3\\n\") == \"1 2 3 4\"\nassert solution(\"4\\n1\\n3\\n2\\n\") == \"1 2 3 4\"\nassert solution(\"4\\n1\\n2\\n3\\n\") == \"1 2 3 4\"\nassert solution(\"4\\n1\\n3\\n2\\n\") == \"1 2 3 4\"\nassert solution(\"4\\n1\\n2\\n3\\n\") == \"1 2 3 4\"\nassert solution(\"4\\n1\\n3\\n2\\n\") == \"1 2 3 4\"\nassert solution(\"4\\n1\\n2\\n3\\n\") == \"1 2 3 4\"\nassert solution(\"4\\n1\\n3\\n2\\n\") == \"1 2 3 4\"\nassert solution(\"4\\n1\\n2\\n3\\n\") == \"1 2 3 4\"\nassert solution(\"4\\n1\\n3\\n2\\n\") == \"1 2 3 4\"\nassert solution(\"4\\n1\\n2\\n3\\n\") == \"1 2 3 4\"\nassert solution(\"4\\n1\\n3\\n2\\n\") == \"1 2 3 4\"\nassert solution(\"4\\n1\\n2\\n3\\n\") == \"1 2 3 4\"\nassert solution(\"4\\n1\\n3\\n2\\n\") == \"1 2 3 4\"\nassert solution(\"4\\n1\\n2\\n3\\n\") == \"1 2 3 4\"\nassert solution(\"4\\n1\\n3\\n2\\n\") == \"1 2 3 4\"\nassert solution(\"4\\n1\\n2\\n3\\n\") == \"1 2 3 4\"\nassert solution(\"4\\n1\\n3\\n2\\n\") == \"1 2 3 4\"\nassert solution(\"4\\n1\\n2\\n3\\n\") == \"1 2 3 4\"\nassert solution(\"4\\n1\\n3\\n2\\n\") == \"1 2 3 4\"\nassert solution(\"4\\n1\\n2\\n3\\n\") == \"1 2 3 4\"\nassert solution(\"4\\n1\\n3\\n2\\n\") == \"1 2 3 4\"\nassert solution(\"4\\n1\\n2\\n3\\n\") == \"1 2 "
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1 4 3\") == \"2 3 4 1\\n\", \"The function should return the correct result.\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1 4 3\\n\") == \"2 3 4 1\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n\\tpass\\n'"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2 1 4 3\\n\") == \"2 3 4 1\"\nassert solution(\"5\\n3 2 5 4 1\\n\") == \"3 2 4 5 1\"\nassert solution(\"6\\n3 2 5 4 1\\n4 1 3 2 5\\n\") == \"3 2 4 5 1\"\nassert solution(\"7\\n1 1 1 1 1\\n2 2 2 2 2\\n3 3 3 3 3\\n4 4 4 4 4\\n\") == \"1 1 1 1 1\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n\"\n"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\"\nassert solution(\"10\\n10 20\\n10 10\\n8 10\\n6 10\\n4 10\") == \"48.53555708496133\\n48.53555708496133\\n48.53555708496133\\n48.53555708496133\\n48.53555708496133\\n48.53555708496133\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1') == '7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381'\n"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\"\nassert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\") == \"2.0000000000000002\\n2.0000000000000002\\n2.0000000000000002\\n2.0000000000000002\\n2.0000000000000002\\n2.0000000000000002\"\nassert solution(\"1000\\n1000\\n1000\\n1000\\n1000\\n1000\") == \"1000.00000000000001\\n1000.00000000000001\\n1000.00000000000001\\n1000.00000000000001\\n1000.00000000000001\\n1000.00000000000001\"\nassert solution(\"1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=open(\"sample_input.txt\").read()) == '7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n', \"The output should be the correct answer.\")"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\"\n"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n\"\nassert solution(\"6\\n1 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 2\\n3 1\\n3 0\\n\") == \"7.368421052631579\\n7.368421052631579\\n7.368421052631579\\n7.368421052631579\\n7.368421052631579\\n7.368421052631579\\n\"\nassert solution(\"6\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n2 4\\n3 3\\n4 2\\n4 1\\n4 0\\n\") == \"7.368421052631579\\n7.368421052631579\\n7.368421052631579\\n7.368421052631579\\n7.368421052631579\\n7.368421052631579\\n\"\nassert solution(\"6\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n2 5\\n3 4\\n4 3\\n5 2\\n5 1\\n5 0\\n\") == \"7.368421052631579\\n7.368421052631579\\n7.368421052631579\\n7.368421052631579\\n7.368421052631579\\n7.368421052631579\\n\"\nassert solution(\"6\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n2 6\\n3 5\\n4 4\\n5 3\\n6 2\\n6 1\\n6 0\\n\") == \"7.368421052631579\\n7.368421052631579\\n7.368421052631579\\n7.368421052631579\\n7.368421052631579\\n7.368421052631579\\n\"\nassert solution(\"6\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n2 7\\n3 6\\n4 5\\n5 4\\n6 3\\n7 2\\n8 1\\n9 0\\n\") == \"7.368421052631579\\n7.368421052631579\\n7.368421052631579\\n7.368"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n1 4\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\"\nassert solution(\"8\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n1 4\\n1 5\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\"\nassert solution(\"9\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n1 4\\n1 5\\n1 6\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\"\nassert solution(\"10\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n1 4\\n1 5\\n1 6\\n1 7\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\"\nassert solution(\"11\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\"\nassert solution(\"12\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n1 4\\n1"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n2 5\\n3 5\\n4 4\\n5 2\\n6 7\") == \"24.588990552705088\"\nassert solution(\"5\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n1 6\\n1 5\\n2 7\\n2 6\\n3 5\\n3 4\\n4 5\") == \"17.181206346508806\""
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2, \"The given code is incorrect\""
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2\n"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2, \"The output should be 2.\""
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2, \"The expected output is not correct. You can check the function signature and implementation.\""
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\""
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_str) == output_str, f\"Solution for {input_str} is incorrect.\\nInput: {input_str}\\nOutput: {output_str}\""
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == \"2\"\nassert solution(\"5 4 3\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\") == \"3\""
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(input())[:-1]) == \"2\\n\"\nassert solution(str(input())[:-1]) == \"1\\n\"\nassert solution(str(input())[:-1]) == \"1\\n\"\nassert solution(str(input())[:-1]) == \"2\\n\"\nassert solution(str(input())[:-1]) == \"1\\n\"\nassert solution(str(input())[:-1]) == \"2\\n\"\nassert solution(str(input())[:-1]) == \"2\\n\"\nassert solution(str(input())[:-1]) == \"2\\n\"\nassert solution(str(input())[:-1]) == \"1\\n\"\nassert solution(str(input())[:-1]) == \"2\\n\"\nassert solution(str(input())[:-1]) == \"2\\n\""
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 2\\n3 0\") == 1\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 2\\n3 0\") == 1\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 2\\n3 1\") == 0"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 1') == '9\\n'"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"9\"\n"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == \"9\"\nassert solution(\"3 3\") == \"18\"\nassert solution(\"2 5\") == \"13\""
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"2 1\"\"\"\n) == \"9\\n\""
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '9', 'Incorrect output'"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 1') == '9'\n"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == \"9\"\n"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\") == \"9\""
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"9\\n\"\n"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"Error: Invalid input.\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"12\"\n"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(b'5\\n2\\n3\\n5\\n7\\n12\\n') == '12'"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2\\n3\\n5\\n7\\n12\") == \"12\\n\"\n"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2\\n3\\n5\\n7\\n12\") == \"12\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(read_input()) == \"12\"\n"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_data) == output_data, f\"Test failed: {input_data}!= {output_data}\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5, 2, 3, 5, 7, 12) == \"12\\n\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\n\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == 'No solution'"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected: {sample_output}, Received: {solution(sample_input)}\""
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    5\n    00\n    01\n    10\n    110\n    111\n    \"\"\"\n) == \"11\"\n\nassert solution(\n    \"\"\"\n    10\n    \"\"\"\n) == \"-1\"\n\nassert solution(\n    \"\"\"\n    2\n    1010\n    1101\n    0011\n    10001\n    10010\n    10011\n    11100\n    11101\n    11110\n    11111\n    100001\n    \"\"\"\n
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n00\\n01\\n10\\n110\\n111') == '11'"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"00\") == 11\nassert solution(\"01\") == 11\nassert solution(\"10\") == 11\nassert solution(\"110\") == 11\nassert solution(\"111\") == 11\nassert solution(\"000\") == -1\nassert solution(\"001\") == -1\nassert solution(\"100\") == -1\nassert solution(\"101\") == -1\nassert solution(\"1100\") == -1\nassert solution(\"1101\") == -1\nassert solution(\"1110\") == -1\nassert solution(\"1111\") == -1"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n00\\n01\\n10\\n110\\n111') == -1"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == -1  # example test case\nassert solution(open('input_test.txt', 'r')) == 11  # correct solution"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n00\\n01\\n10\\n110\\n111') == '11\\n'"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n00\\n01\\n10\\n110\\n111\\n') == '11\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"11\", \"The output should be 11, but it is {}\".format(solution(stdin))"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='''\n5\n00\n01\n10\n110\n111\n''') == '11'"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"00\\n01\\n10\\n110\\n111\") == -1\nassert solution(\"010\\n111\\n110\\n10\\n01001\\n10100\\n10101\\n10110\\n10111\\n1011100\\n1011101\\n1011110\\n1011111\\n10111110\\n10111111\\n101111110\") == \"10\"\n\nfrom collections import defaultdict\nfrom typing import List"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '100 250 320'"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\"100 250 320\n\"\"\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n100 10\\n1\\n150 50\\n1\\n150 100\\n3\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\\n') == '100 250 320'\nassert solution('3\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\\n') == '100 250 320'\nassert solution('1\\n150 50\\n1\\n150 100\\n') == '100'\nassert solution('2\\n100 10\\n1\\n150 50\\n1\\n150 100\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\\n3\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\\n') == '100 250 320'"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == expected_output, f\"Incorrect solution. Expected: {expected_output}, Received: {solution()}\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\") == \"100 250 320\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"100 250 320\", \"Your solution is not correct.\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\") == \"100 250 320\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"100 250 320\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(f\"3\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\\n\") == \"100 250 320\\n\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\\n') == '100 250 320'"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\\n\"\nassert solution(\"10 20\") == \"0 0 0 0 0 0 0 0 0\\n\"\nassert solution(\"1 10\") == \"0 0 0 0 0 0 0 0 0\\n\"\nassert solution(\"100 1000\") == \"9 9 9 9 9 9 9 9 9\\n\""
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(50, 100) == 3, \"The output should be 3\"\nassert solution(100, 50) == 9, \"The output should be 9\"\nassert solution(50, 50) == 1, \"The output should be 1\"\nassert solution(1, 10) == 0, \"The output should be 0\"\nassert solution(10, 1) == 0, \"The output should be 0\"\nassert solution(1, 1000000) == 1, \"The output should be 1\"\nassert solution(1000000, 1) == 1, \"The output should be 1\"\nassert solution(1000000, 1000000) == 0, \"The output should be 0\""
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('50 100') == '3 7 4 6 5 7 2 15 2', \"Test Case 1\"\nassert solution('4 20') == '1 5 2', \"Test Case 2\"\nassert solution('1 5') == '1 5', \"Test Case 3\"\nassert solution('1 9') == '1 9', \"Test Case 4\"\nassert solution('999 999') == '10 000', \"Test Case 5\""
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\"\nassert solution(\"100 50\") == \"2 5 4 2 4 2 1 1 1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"100 0\") == \"0\"\nassert solution(\"0 100\") == \"0\"\nassert solution(\"1 100\") == \"0\"\nassert solution(\"50 10\") == \"0\"\nassert solution(\"100 50\") == \"1\"\nassert solution(\"50 10\") == \"1\"\nassert solution(\"100 50\") == \"1\"\nassert solution(\"100 100\") == \"1\""
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\""
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\\n\"\n"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test Failed\""
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\""
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3 7 4 6 5 7 2 15 2\", \"Test case failed\""
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n\") == 40.0\nassert solution(\"1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n\") == 60.0\nassert solution(\"5 3\\n5 4\\n5 6\\n5 8\\n5 10\\n5 12\\n5 14\\n5 16\\n\") == 75.0\nassert solution(\"0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n17 11\\n17 17\\n\") == 50.0\nassert solution(\"1 1\\n3 3\\n5 5\\n7 7\\n9 9\\n11 11\\n13 13\\n15 15\\n17 17\\n19 20\\n21 22\\n\") == 20.0"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\") == \"40.0000000000\\n\""
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"polygon.in\", \"r\").read()) == 40.0"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\") == \"40.0000000000\\n\"\nassert solution(\"4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n5\") == \"45.0000000000\\n\"\nassert solution(\"4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n6\") == \"45.0000000000\\n\"\nassert solution(\"4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n5\\n6\") == \"50.0000000000\\n\"\nassert solution(\"4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n5\\n6\\n7\") == \"55.0000000000\\n\"\nassert solution(\"4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n5\\n6\\n7\\n8\") == \"60.0000000000\\n\""
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n\") == 40.0\nprint(\"All tests passed.\")"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\") == 40.0\nprint(\"All test cases passed\")"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 40.0\nprint(\"Correct\")"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\") == 40.0\nprint(\"All tests passed!\")"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''4\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7''') == 40.0\nprint('Correct')"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n\") == 40.0"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\\n1\\n\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\npass\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n3\\n2 1 3\\n\") == \"1\\n1\\n\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_string) == expected_output, \"Test case failed\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n3\\n2 1 3\") == \"1\\n1\\n1\\n1\\n1\\n\"\n"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 1 3\\n\") == \"1\\n1\\n\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n3\\n2 1 3\") == \"1\\n1\\n\"\nassert solution(\"1\\n3\\n1 2 3\") == \"1\\n\"\nassert solution(\"1\\n3\\n4 1 2\") == \"2\\n2\\n\"\nassert solution(\"1\\n3\\n1 2 3 4\") == \"1\\n1\\n\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1\\n1\\n\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n3\\n2 1 3\") == \"1\\n1\\n\"\nassert solution(\"1\\n4\\n3 2 1\") == \"1\\n1\\n2\\n\"\nassert solution(\"1\\n5\\n4 3 2 1\") == \"1\\n1\\n2\\n3\\n\"\nassert solution(\"1\\n6\\n5 4 3 2 1\") == \"1\\n1\\n2\\n3\\n4\\n\"\n"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\"\"199\n162\n\"\"\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\"\nassert solution(\"725.85 1.58 1.21\") == \"None\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\"\n"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '199 162'"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\", \"Input should be '725.85 1.71 2.38'\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\"\n"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('725.85 1.71 2.38') == '199 162'"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '199 162'\n"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\"\nassert solution(\"500.00 1.00 0.00\") == \"0 0\"\nassert solution(\"0.00 0.00 0.00\") == \"0 0\"\nassert solution(\"1000.00 2000.00 5000.00\") == \"199 162\"\nassert solution(\"1000.00 1000.00 1000.00\") == \"199 162\"\nassert solution(\"0.00 0.00 0.00\") == \"0 0\"\nassert solution(\"500.00 500.00 500.00\") == \"0 0\"\nassert solution(\"500.00 500.00 400.00\") == \"1 0\"\nassert solution(\"500.00 500.00 500.00\") == \"1 0\"\nassert solution(\"499.99 499.99 499.99\") == \"0 0\"\nassert solution(\"725.85 1.71 2.38\") == \"199 162\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\", \"Test 1 failed\"\nassert solution(\"100 200 300\") == \"0 0\", \"Test 2 failed\"\nassert solution(\"200 300 400\") == \"3 3\", \"Test 3 failed\"\nassert solution(\"500 600 700\") == \"6 6\", \"Test 4 failed\"\nassert solution(\"750 850 950\") == \"12 12\", \"Test 5 failed\"\nassert solution(\"1000 1000 1000\") == \"10 10\", \"Test 6 failed\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_string) == output_string, \"The testcase failed. Please check your code and input.\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"16\\n\"\n\nfrom typing import List\n"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"16\"\n"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"16\"\n"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"16\", \"Incorrect output\"\n"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    5 3\n    2 1 -1\n    1 3 2\n    0 2 3\n    2 1 1\n    3 3 0\n    ''') == '16'\nassert solution('''\n    5 5\n    1 2 3 4\n    5 6 7 8\n    9 10 11 12\n    13 14 15 16\n    ''') == '52'\nassert solution('''\n    1 1\n    1 1\n    ''') == '2'"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\"\nassert solution(\"5 3\\n2 2 1\\n1 2 3\\n0 3 2\\n1 2 0\") == \"16\"\nassert solution(\"5 3\\n1 1 2\\n0 2 1\\n2 3 0\\n3 2 1\") == \"16\"\nassert solution(\"5 3\\n1 1 2\\n2 2 0\\n1 0 1\\n0 3 0\") == \"16\"\nassert solution(\"5 3\\n2 1 1\\n1 3 3\\n3 1 0\\n0 2 1\") == \"16\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"16\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(example_input) == expected_output, f\"Expected output: {expected_output}, but got: {solution(example_input)}\"\n\nexample_input = \"\"\"1\nO 4\n\"\"\"\n\nexpected_output = \"\"\"2 1 4\"\"\"\n\nsolution(example_input)"
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\nO 4\") == \"2 1 4\"\nassert solution(\"2\\nO 15\") == \"3 4 1\"\nassert solution(\"1\\nE 25\") == \"1 1 2\"\nassert solution(\"3\\nO 10\") == \"5 3 3\"\nassert solution(\"2\\nO 7\") == \"2 2 1\"\nassert solution(\"2\\nE 35\") == \"1 2 1\"\nassert solution(\"3\\nE 20\") == \"1 4 1\"\nassert solution(\"2\\nI 30\") == \"1 2 2\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\nO 4\\n\") == \"2 1 4\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n1\nO 4\n''') == '2 1 4'\nassert solution('''\n2\nE 20\nO 15\nI 25\n''') == '2 4 1'"
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2 1 4\\n\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '2 1 4'"
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == '2 1 4'"
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2 1 4\\n\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\nO 4\") == \"2 1 4\"\nassert solution(\"2\\nE 2\") == \"2 2 1\"\nassert solution(\"2\\nE 4\") == \"2 1 4\"\nassert solution(\"3\\nO 2\") == \"3 2 1\"\nassert solution(\"3\\nO 3\") == \"3 1 3\"\n"
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2 1 4\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\") == \"4\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\\n') == '4\\n'"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_string) == expected_output, f\"Test failed for input: {input_string}, expected output: {expected_output}, actual output: {solution(input_string)}\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5, 8) == \"4\\n\"\nassert solution(5, 1) == \"1\\n\"\nassert solution(5, 12) == \"2\\n\"\nassert solution(5, 9) == \"1\\n\"\nassert solution(1, 6) == \"1\\n\"\nassert solution(2, 11) == \"2\\n\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    5 8\n    2 1 4 5\n    5 1 12 4\n    5 5 9 10\n    1 6 4 10\n    2 11 7 14\n    \"\"\"\n) == \"4\\n\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\") == \"4\\n\"\nassert solution(\"10 10\\n1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\") == \"4\\n\"\nassert solution(\"10 20\\n1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\") == \"5\\n\"\nassert solution(\"5 2\\n1 3 4 5 6\") == \"1\\n\"\nassert solution(\"5 2\\n1 3 4 5 6\") == \"1\\n\"\nassert solution(\"5 2\\n1 3 4 5 6\") == \"1\\n\"\nassert solution(\"5 2\\n1 3 4 5 6\") == \"1\\n\"\nassert solution(\"5 2\\n1 3 4 5 6\") == \"1\\n\"\nassert solution(\"5 2\\n1 3 4 5 6\") == \"1\\n\"\nassert solution(\"5 2\\n1 3 4 5 6\") == \"1\\n\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"4\\n\"\n"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\") == \"4\\n\"\nassert solution(\"5 10\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\") == \"5\\n\"\nassert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\") == \"6\\n\"\nassert solution(\"10 5\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\") == \"7\\n\"\nassert solution(\"10 6\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\") == \"7\\n\"\n"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"4\\n\", \"Incorrect output.\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\\n\") == \"4\\n\"\n"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"99.99 99.99 9999.99\\n99 9 999 9999\") == \"9.585073\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('-99.99 99.99 9999.99\\n99 9 999 9999') == '9.585073'"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Solution does not match the expected output.\\nInput: {input()}\\nOutput: {output}\""
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"-99.99 99.99 9999.99\") == \"9.585073\"\nassert solution(\"-99.99 99.99 9999.99\") == \"9.585073\"\nassert solution(\"-99.99 99.99 9999.99\") == \"9.585073\"\nassert solution(\"-99.99 99.99 9999.99\") == \"9.585073\"\nassert solution(\"-99.99 99.99 9999.99\") == \"9.585073\"\nassert solution(\"-99.99 99.99 9999.99\") == \"9.585073\"\nassert solution(\"-99.99 99.99 9999.99\") == \"9.585073\""
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"9.585073\"\n"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('-99.99 99.99 9999.99\\n99 9 999 9999') == '9.585073'"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"99.99 99.99 9999.99\\n99 9 999 9999\") == \"9.585073\\n\"\nassert solution(stdin=\"99.99 99.99 9999.99\\n99 9 999 9999\") == \"9.585073\\n\"\nassert solution(stdin=\"99.99 99.99 9999.99\\n99 9 999 9999\") == \"9.585073\\n\""
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n-99.99 99.99 9999.99\n99 9 999 9999\n9 99 9 99 9\n\"\"\") == \"9.585073\\n\"\n\nassert solution(\"\"\"\n-99.99 99.99 9999.99\n99 9 999 9999\n9 99 9 99 9\n\"\"\") == \"9.585073\\n\"\n\nassert solution(\"\"\"\n-99.99 99.99 9999.99\n99 9 999 9999\n9 99 9 99 9\n\"\"\") == \"9.585073\\n\"\n\nassert solution(\"\"\"\n-99.99 99.99 9999.99\n99 9 999 9999\n9 99 9 99 9\n\"\"\") == \"9.585073\\n\"\n\nassert solution(\"\"\"\n-99.99 99.99 9999.99\n99 9 999 9999\n9 99 9 99 9\n\"\"\") == \"9.585073\\n\"\n\nassert solution(\"\"\"\n-99.99 99.99 9999.99\n99 9 999 9999\n9 99 9 99 9\n\"\"\") == \"9.585073\\n\"\n\nassert solution(\"\"\"\n-99.99 99.99 9999.99\n99 9 999 9999\n9 99 9 99 9\n\"\"\") == \"9.585073\\n\""
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"99.99 99.99 9999.99\\n99 9 999 9999\") == \"9.585073\""
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n-99.99 99.99 9999.99\n99 9 999 9999\n9 99 9 99 9\n''') == '9.585073'"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('20 30\\n2 10 20 2 24 18 28 10') == '12.74 127.83'"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input()) == sample_output()"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin: str) == expected_output, f\"Test failed. Expected output: {expected_output}, but got: {solution(stdin)}\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"20 30\\n2 10 20 2 24 18 28 10\"\n) == \"12.74 127.83\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"20 30\\n2 10 20 2 24 18 28 10\") == \"12.74 127.83\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"20 30\\n2 10 20 2 24 18 28 10\") == \"12.74 127.83\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    20 30\n    2 10 20 2 24 18 28 10\n    \"\"\"\n) == \"\"\"\n12.74 127.83\n\"\"\"\n\nassert solution(\n    \"\"\"\n    5 5\n    2 2 2 2 2\n    \"\"\"\n) == \"\"\"\nimpossible\n\"\"\"\n\nassert solution(\n    \"\"\"\n    10 10\n    2 2 2 2 2\n    2 2 2 2 2\n    \"\"\"\n) == \"\"\"\n11.37 113.56\n\"\"\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Got '{solution(stdin)}', expected '{expected}'\"\nprint(f\"{d:.2f} {theta:.2f}\")"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"20 30\\n2 10 20 2 24 18 28 10\") == \"12.74 127.83\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"12.74 127.83\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n110\\n6\") == \"0116\"\nassert solution(\"4\\n900\\n1\") == \"9009\"\nassert solution(\"5\\n0101\\n1\") == \"0111\"\nassert solution(\"6\\n900\\n2\") == \"0112\"\nassert solution(\"7\\n900\\n1\") == \"9009\"\nassert solution(\"8\\n0100\\n2\") == \"01010\"\nassert solution(\"9\\n1000\\n3\") == \"100010\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n110\\n6\\n') == '0116'"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n110\\n6\\n\") == \"0116\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(b\"2\\n110\\n6\\n\") == \"0116\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n110\\n6\\n\") == \"0116\\n\"\nassert solution(\"2\\n110\\n6\\n1\\n\") == \"0116\\n\"\nassert solution(\"2\\n110\\n6\\n5\\n11\\n\") == \"0116\\n\"\nassert solution(\"2\\n110\\n6\\n9\\n\") == \"0116\\n\"\nassert solution(\"2\\n110\\n6\\n8\\n\") == \"0116\\n\"\nassert solution(\"2\\n110\\n6\\n0\\n\") == \"0116\\n\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n110\\n6\\n\") == \"0116\\n\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n110\\n6\\n') == '0116'"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '0116', 'Expected output: 0116'"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n110\\n6\\n\") == \"0116\"\n"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n110\\n6\\n\") == \"0116\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '0 2 4'"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"0 2 4\\n\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\"\n"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\"\n\nfrom typing import List"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n    8 3\n    4 4 4\n\"\"\") == \"0 2 4\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"0 2 4\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5') == 'impossible'\nassert solution('3\\n4\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5') == 'possible'"
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"impossible\"\nassert solution(\"1\\n\") == \"impossible\"\nassert solution(\"2\\n4 1 3\\n\") == \"impossible\"\nassert solution(\"2\\n2 1 5\\n\") == \"impossible\"\nassert solution(\"2\\n2 6 5\\n\") == \"impossible\"\nassert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n\") == \"possible\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"impossible\"\nassert solution(\"1\\n2\") == \"impossible\"\nassert solution(\"4\\n1\") == \"impossible\"\nassert solution(\"1\\n5\\n4\") == \"possible\"\nassert solution(\"1\\n4\") == \"possible\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"impossible\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5') == 'impossible'\nassert solution('5\\n5\\n1 2\\n2 3\\n4 5\\n6 7\\n8 9') == 'impossible'\nassert solution('4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n1 3\\n5 6 4') == 'impossible'\nassert solution('4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n1 3\\n5 6 4\\n1 4') == 'impossible'\nassert solution('2\\n3\\n5\\n7\\n9') == 'impossible'\nassert solution('4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n1 3\\n5 6 4\\n1 4\\n3 2') == 'possible'\nassert solution('4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n1 3\\n5 6 4\\n1 4\\n3 2\\n1 5') == 'possible'"
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"impossible\\n\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5') == 'impossible'"
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5') == 'impossible'\nassert solution('4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n2 5') == 'impossible'\nassert solution('4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n1 4') == 'impossible'\nassert solution('4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n1 3') == 'impossible'\nassert solution('4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n1 1') == 'impossible'\nassert solution('4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n1 2') == 'possible'\n"
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"impossible\\n\"\nassert solution(\"1 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n\") == \"impossible\\n\"\nassert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n\") == \"possible\\n\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n\") == \"impossible\\n\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == sample_output, f\"Test {i+1} failed\" for i, sample_input, sample_output in enumerate(test_cases)"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0\\n0 10\\n2\\n4 10\\n4 0\") == 4.0"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4.00000\"\n"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"4.00000\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n0 0\\n0 10\\n2\\n4 10\\n4 0\") == 4.0\nassert solution(\"0\\n0 0\\n0 10\\n2\\n4 10\\n4 0\") == 3.0\nassert solution(\"1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n100"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n0 0\\n0 10\\n2\\n4 10\\n4 0') == 4.0\nassert solution('1\\n0 0\\n0 10\\n2\\n4 10\\n4 0') == 6.0"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n0 0\\n0 10\\n2\\n4 10\\n4 0') == 4.0\nassert solution('2\\n0 0\\n0 10\\n2\\n4 11\\n4 0') == 1.0\nassert solution('2\\n0 0\\n0 10\\n2\\n4 9\\n4 0') == 2.0\nassert solution('2\\n0 0\\n0 10\\n2\\n4 9\\n4 11') == 2.0\nassert solution('2\\n0 0\\n0 10\\n2\\n4 11\\n4 0') == 4.0\nassert solution('2\\n0 0\\n0 10\\n2\\n4 11\\n4 10') == 2.0\nassert solution('2\\n0 0\\n0 10\\n2\\n4 10\\n4 0') == 1.0\nassert solution('2\\n0 0\\n0 10\\n2\\n4 9\\n4 9') == 0.0\nassert solution('2\\n0 0\\n0 10\\n2\\n4 9\\n4 11') == 1.0\nassert solution('2\\n0 0\\n0 10\\n2\\n4 10\\n4 10') == 0.0\nassert solution('2\\n0 0\\n0 10\\n2\\n4 10\\n4 11') == 1.0\nassert solution('2\\n0 0\\n0 10\\n2\\n4 11\\n4 11') == 2.0"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n    2\n    0 0\n    0 10\n    2\n    4 10\n    4 0\n    \"\"\") == \"4.00000\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '4.00000\\nimpossible\\n'\n"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 4.0\n"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"4.00000\\nimpossible\\n\""
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"3 2 5\n1 1\n1 3\n3 1\n3 3\n2 2\"\"\"\n) == \"1\\n\"\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 1, \"Solution should return 1.\""
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 1\nassert solution(\"input.txt\") == \"0\"\nassert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\") == \"1\"\n"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\") == 1, \"Test Case 1: It is not possible to light all lamps.\"\nassert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 4\") == 0, \"Test Case 2: It is possible to light all lamps.\"\nassert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 1\") == 1, \"Test Case 3: It is possible to light all lamps.\"\nassert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 3\") == 0, \"Test Case 4: It is not possible to light all lamps.\"\nassert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\") == 1, \"Test Case 5: It is not possible to light all lamps.\""
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\") == 1\nassert solution(\"3 2 5\\n1 1\\n2 2\\n1 3\\n3 1\\n3 3\") == 0\nassert solution(\"3 2 5\\n1 1\\n2 2\\n2 3\\n1 3\\n3 1\\n3 3\") == 0"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1\", \"Incorrect output\""
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n\") == 1\nassert solution(\"5 3 2\\n3 1 2\\n4 3 2\\n1 1 1\\n2 1 2\\n1 2 2\\n\") == 0\nassert solution(\"3 1 5\\n1 3 1\\n2 5 1\\n3 2 1\\n4 3 1\\n\") == 0\nassert solution(\"3 3 3\\n4 4 4\\n5 5 5\\n1 1 1\\n2 2 2\\n3 3 3\\n\") == 1\n\nfrom typing import List"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 1, \"Expected 1, got {}\".format(solution())"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n3 2 5\n1 1\n1 3\n3 1\n3 3\n2 2\n''') == '1\\n'\n"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 1, \"Solution should return 1\"\n"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '5 3\\n1 0\\n2 4'\n"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'impossible'\n"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == 'impossible'"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\") == \"5 3\\n1 0\\n2 4\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n0 0\") == \"5 3\\n1 0\\n2 4\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n0 0\\n0 1\") == \"impossible\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\") == \"5 3\\n1 0\\n2 4\"\nassert solution(\"10 2\\n0 1\\n1 2\\n2 3\\n3 4\") == \"impossible\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3') == '5 3\\n1 0\\n2 4\\n'\nassert solution('1 1\\n0 1\\n1 0') == 'impossible\\n'\nassert solution('2 2\\n1 1\\n2 1\\n1 2\\n0 1\\n1 0\\n0 1\\n') == 'impossible\\n'\nassert solution('1 2\\n2 1\\n1 1\\n0 1\\n1 0\\n0 1\\n') == 'impossible\\n'\nassert solution('3 3\\n2 2\\n2 1\\n1 2\\n1 1\\n0 1\\n0 1\\n') == 'impossible\\n'"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\") == \"5 3\\n1 0\\n2 4\"\nassert solution(\"5 6\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\") == \"impossible\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\") == \"5 3\\n1 0\\n2 4\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\") == \"5 3\\n1 0\\n2 4\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n\") == \"5 3\\n1 0\\n2 4\\n\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n5 4\\n\") == \"impossible\\n\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n\") == \"impossible\\n\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n5 4\\n\") == \"impossible\\n\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(None) == '[]'"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    4 1\n    0 0\n    0 1\n    1 0\n    1 1\n    \"\"\"\n) == \"2\\n1 2\"\n\nassert solution(\n    \"\"\"\n    4 2\n    0 0\n    0 1\n    1 0\n    1 1\n    \"\"\"\n) == \"3\\n1 2\"\n\nassert solution(\n    \"\"\"\n    4 3\n    0 0\n    0 1\n    1 0\n    1 1\n    \"\"\"\n) == \"4\\n1 2\"\n\nassert solution(\n    \"\"\"\n    5 2\n    0 0\n    0 1\n    1 0\n    1 1\n    \"\"\"\n) == \"1\\n2\"\n\nassert solution(\n    \"\"\"\n    5 3\n    0 0\n    0 1\n    1 0\n    1 1\n    \"\"\"\n) == \"1\\n2\"\n\nassert solution(\n    \"\"\"\n    5 4\n    0 0\n    0 1\n    1 0\n    1 1\n    \"\"\"\n) == \"1\\n2\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 1\\n0 0\\n0 1\\n1 0\\n1 1\\n\") == \"2\\n1 2\\n\"\nassert solution(\"5 1\\n0 0\\n0 1\\n1 0\\n1 1\\n2 0\\n2 1\\n\") == \"2\\n1 2\\n3 4\\n\"\nassert solution(\"6 1\\n0 0\\n0 1\\n1 0\\n1 1\\n2 0\\n2 1\\n3 0\\n3 1\\n4 0\\n4 1\\n5 0\\n5 1\\n\") == \"2\\n1 2\\n3 4\\n5 6\\n\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2\\n1 2'"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 1\\n0 0\\n0 1\\n1 0\\n1 1\\n\") == \"2\\n1 2\\n\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 1\\n0 0\\n0 1\\n1 0\\n1 1') == '2\\n1 2\\n'"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 1\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n1 2\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 1\\n0 0\\n0 1\\n1 0\\n1 1') == '2\\n1 2\\n'\nassert solution('3 1\\n0 0\\n0 1\\n1 0\\n1 1') == '1\\n0\\n'\nassert solution('4 3\\n0 0\\n0 1\\n1 0\\n1 1\\n1 2\\n2 1\\n2 2') == '2\\n1 2\\n1 3\\n2 3\\n'\nassert solution('5 4\\n0 0\\n0 1\\n1 0\\n1 1\\n1 2\\n2 1\\n2 2\\n2 3\\n3 2\\n3 3\\n3 4\\n4 3\\n4 4') == '2\\n1 2\\n1 3\\n2 3\\n1 4\\n'\nassert solution('3 2\\n0 0\\n0 1\\n1 0\\n1 1\\n2 0\\n2 1\\n3 0\\n3 1\\n') == '1\\n0\\n'\nassert solution('4 4\\n0 0\\n0 1\\n1 0\\n1 1\\n1 2\\n2 1\\n2 2\\n2 3\\n3 2\\n3 3\\n3 4\\n4 3\\n4 4\\n') == '2\\n1 2\\n1 3\\n2 3\\n1 4\\n'"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\\n1 2\", \"The solution is incorrect.\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10 2\\n1 3 5 7 9 11 13 15 17 16') == '1\\n'\nassert solution('10 4\\n1 3 5 7 9 11 13 15 17 16') == '2\\n'\nassert solution('5 2\\n1 3 5 7 9 11 13 15 17 16') == '3\\n'\nassert solution('3 1\\n1 3 5 7 9 11 13 15 17 16') == '4\\n'\nassert solution('10 1\\n1 3 5 7 9 11 13 15 17 16') == '5\\n'\nassert solution('10 6\\n1 3 5 7 9 11 13 15 17 16') == '6\\n'\nassert solution('10 1\\n1 3 5 7 9 11 13 15 17 16') == '6\\n'"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == \"1\"\nassert solution(\"10 3\\n1 3 5 7 9 11 13 15 17 16\") == \"2\"\nassert solution(\"10 4\\n1 3 5 7 9 11 13 15 17 16\") == \"3\"\nassert solution(\"10 5\\n1 3 5 7 9 11 13 15 17 16\") == \"4\"\nassert solution(\"10 6\\n1 3 5 7 9 11 13 15 17 16\") == \"5\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == \"1\"\nassert solution(\"5 10\\n1 2 3 4 5\\n6 7 8 9 10\") == \"1\"\nassert solution(\"8 3\\n1 2 3\\n4 5 6\") == \"1\"\nassert solution(\"5 1\\n2 3 4 5\") == \"1\"\nassert solution(\"10 10\\n1 2 3 4 5 6 7 8 9 10\") == \"0\"\nassert solution(\"7 10\\n1 2 3 4 5 6 7 8 9 10\") == \"2\"\n"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == 1\nassert solution(\"10 5\\n1 2 3 4 5\") == 0\nassert solution(\"10 7\\n1 2 3 4 5 6 7\") == 0\nassert solution(\"10 8\\n1 2 3 4 5 6 7 8\") == 1\nassert solution(\"10 9\\n1 2 3 4 5 6 7 8 9\") == 0\nassert solution(\"10 10\\n1 2 3 4 5 6 7 8 9 10\") == 0"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == expected_output, \"Test failed\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10 2\\n1 3 5 7 9 11 13 15 17 16') == 1\n"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10 2\\n1 3 5 7 9 11 13 15 17 16') == '1\\n'\nassert solution('10 4\\n1 3 5 7 9 11 13 15 17 16') == '2\\n'\nassert solution('10 2\\n1 2 4 6 7 8 9 10 11') == '3\\n'\nassert solution('10 2\\n1 1 1 1 1 1 1 1 1 1') == '4\\n'\nassert solution('10 2\\n1 3 4 5 6 7 8 9 10') == '6\\n'\nassert solution('10 2\\n1 3 4 5 6 7 8 9 10 11') == '10\\n'\nassert solution('10 2\\n1 2 3 4 5 6 7 8 9 10') == '15\\n'"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"12345\\nACDBB\\n56789\\n12345\\nABCDE\\n56789\\n12345\\n\") == \"7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"12345\\nACDBB\\n56789\\n12345\\nABCDE\\n56789\\n12345\\n\") == \"7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\") == \"7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test 1\"\n\nassert solution(\"ACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\") == \"7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test 2\"\n\nassert solution(\"ACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\") == \"7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test 3\"\n\nassert solution(\"ACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\") == \"7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test 4\"\n\nassert solution(\"ACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\") == \"7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test 5\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"7 4\\n\", \"Expected: '7 4\\n', but got: '{}'\".format(solution(stdin))\n"
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_str) == output_str, f\"Solution should return {output_str}, but it returns {solution(input_str)} instead.\" for input_str, output_str in [\n    (\"\", \"\"),\n    (\"\\n\", \"\"),\n    (\"5 6\", \"5 6\"),\n    (\"100 100\", \"100 100\"),\n    (\"5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7\", \"10 9\"),\n]"
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7\") == \"7 4\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"7 4\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('ACDBB') == '7 4\\n', \"Luka parked his truck near the lake. The lake is inhabited by the frog Barica, who jumps acrossplants floating on the lake's surface. Knowing a fair number of folk tales, Luka knows that if he kisses Barica, she will turn into a beautiful princess. However, he needs to catch her first! Assuming an aerial view, the position of a plant on the lake's surface can be defined with a paircoordinates. From plant $(x, y)$ Barica can jump:\n- To plant $(x+P, y+P)$, for any positive integer $P$. Call this direction $A$.\n- To plant $(x+P, y-P)$, for any positive integer $P$. Call this direction $B$.\n- To plant $(x-P, y+P)$, for any positive integer $P$. Call this direction $C$.\n- To plant $(x-P, y-P)$, for any positive integer $P$. Call this direction $D$.\n\nBarica selects one of the four directions and jumps onto the first plant in the chosen direction. If there is no plant in the selected direction, Barica stays where she is. After Barica jumps, the plant she jumped from sinks and disappears.\n\nKnowing the locations of the plants and the sequence of directions Barica chooses, Luka wants determine coordinates of the plant Barica will end up on. Luka will wait for her at that plant, ambush her and kiss her.\n\nWrite a program that solves Luka's problem and helps him turn Barica into a beautiful princess."
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin: str) == \"7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"The function is not correct.\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\") == \"7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\") == \"7 4\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"10 5\\nACDCD\\n10 8\\n8 9\\n7 7\\n5 5\") == \"10 8\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\"\nassert solution(\"20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\") == \"HELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\"\nassert solution(\"20 PRINT \\\"HELLO THERE \\\\n\\\"\") == \"HELLO THERE \\nDONE\\n\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n10 LET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 PRINTLN \"DONE\"\n''') == '''\nHELLO THERE 1\nHELLO THERE 2\nHELLO THERE 3\nHELLO THERE 4\nHELLO THERE 5\nDONE\n'''"
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\"\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <> 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nDONE\\n\"\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A < 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nDONE\\n\"\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A > 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nDONE\\n\"\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINT \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\"\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <> 5 THEN GOTO 20\\n60 PRINT \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nDONE\\n\"\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A < 5 THEN GOTO 20\\n60 PRINT \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nDONE\\n\"\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A > 5 THEN GOTO 20\\n60 PRINT \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nDONE\\n\"\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINT \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\"\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <> 5 THEN GOTO 20\\n60 PRINT \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nDONE\\n\"\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A < 5 THEN GOTO 20\\n60 PRINT"
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n10 LET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 PRINTLN \"DONE\"\n\"\"\") == \"\"\"\nHELLO THERE 1\nHELLO THERE 2\nHELLO THERE 3\nHELLO THERE 4\nHELLO THERE 5\nDONE\n\"\"\"\n\nprint(solution)"
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n    10 LET A = 1\n    20 PRINT \"HELLO THERE \"\n    30 PRINTLN A\n    40 LET A = A + 1\n    50 IF A <= 5 THEN GOTO 20\n    60 PRINTLN \"DONE\"\n    \"\"\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\"\n"
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\""
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 3\nprint(solution(3))\n\nassert solution(5) == 2\nprint(solution(5))\n\nassert solution(7) == 6\nprint(solution(7))\n\nassert solution(10) == 20\nprint(solution(10))"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt').read()) == '3'"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 0 1\\n0 1\") == 3, \"Expected output: 3\""
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 3"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '3'\nprint(3)"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"3\""
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 0 1\\n0 1\") == \"3\\n\"\nassert solution(\"3\\n3 0 1\\n0 1\\n0 2\\n0 3\") == \"5\\n\"\nassert solution(\"3\\n3 0 1\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\") == \"9\\n\"\nassert solution(\"3\\n3 0 1\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n0 6\\n0 7\\n0 8\") == \"39\\n\"\nassert solution(\"3\\n3 0 1\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n0 6\\n0 7\\n0 8\\n0 9\\n10\") == \"151\\n\"\nassert solution(\"3\\n3 0 1\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n0 6\\n0 7\\n0 8\\n0 9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n1"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3\\n\""
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '3\\n'\nassert solution(open('sample_input.txt', 'r').read()) == '3\\n'"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 3"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"LLRRRRLL\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == ['RRRRRRRLR', 'RRRRRLRRR']"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3') == 'LLRRRRLL\\nimpossible\\n'\nassert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n') == 'impossible\\n'\nassert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n1 3\\n') == 'impossible\\n'\nassert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n1 3\\n') == 'LLRRRRLL\\nimpossible\\n'"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3') == 'LLRRRRLL\\n'\nassert solution('1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n') == 'impossible\\n'\nassert solution('1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n4 6\\n5 7\\n') == 'LLRRRRLL\\n'\nassert solution('1 2\\n2 3\\n1 3\\n3 4\\n4 5\\n5 6\\n6 7\\n') == 'RRRRRRRR\\n'\n"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\\nimpossible\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 'LLRRRRLL'\nassert solution(4) == 'impossible'\n\nfrom typing import List"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\\nimpossible\\n\"\n\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n1 2\") == \"LRRRRRLR\\nimpossible\\n\"\n\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n1 2\\n1 2\") == \"LRRRRRLR\\nLRLR\\n\"\n\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n1 2\\n1 2\\n1 3\") == \"LRRRRRLR\\nLRLR\\nLRLR\\n\"\n\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\") == \"LRRRRRLR\\nLRLR\\nLRLR\\nLRRRRRLR\\n\"\n\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 3\") == \"LRRRRRLR\\nLRLR\\nLRLR\\nLRRRRRLR\\nLRRRRRLR\\n\"\n\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'LLRRRRLL\\n', \"Expected 'LLRRRRLL', but got '{}' instead.\".format(solution(stdin))"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1000000) == \"LRRRRRRR\"\nassert solution(10000000) == \"LRRRRRRRR\"\nassert solution(100000000) == \"LRRRRRRRRR\"\nassert solution(1000000000) == \"LRRRRRRRRRRR\"\nassert solution(10000000000) == \"LRRRRRRRRRRRRR\"\nassert solution(100000000000) == \"LRRRRRRRRRRRRRRR\"\nassert solution(1000000000000) == \"LRRRRRRRRRRRRRRRRR\"\n\nfrom typing import List"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\"\nassert solution(\"\") == \"impossible\"\nassert solution(\"1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\") == \"impossible\"\nassert solution(\"1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n1009 2011\\n1017 2011\\n\") == \"1\\n2011\\n\"\nassert solution(\"2\\n1009 2011\\n1017 2011\\n\") == \"2\\n2011\\n\"\nassert solution(\"2\\n1009 2011\\n1017 2011\\n1012 2011\\n\") == \"1\\n2011\\n\"\nassert solution(\"1\\n2\\n1009 2011\\n1017 2011\\n1012 2011\\n1008 2011\\n\") == \"2\\n2011\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1009 2011\\n1017 2011\\n\") == \"1\"\nassert solution(\"1009 2009\\n1017 2009\\n\") == \"2\"\nassert solution(\"1009 1999\\n1017 1999\\n\") == \"3\"\nassert solution(\"1009 2011\\n1017 2010\\n\") == \"1\"\nassert solution(\"1009 1999\\n1017 1998\\n\") == \"2\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1009 2011\\n1017 2011\") == \"1\"\nassert solution(\"1009 2011\\n1009 2011\\n1009 2011\") == \"2\"\nassert solution(\"1009 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1009 2011\\n1009 2011\") == \"3\"\nassert solution(\"1009 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1009 2011\\n1017 2011\\n\") == \"1\\n2011\\n\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\\n2011\\n\", \"Incorrect solution\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n1009 2011\\n1017 2011') == '1\\n2011'\nassert solution('5\\n1000 1001\\n1000 1002\\n1000 1003\\n1000 1004\\n1000 1005') == '1\\n2\\n3\\n4\\n5\\n'\nassert solution('4\\n2000 2001\\n2000 2002\\n2000 2003\\n2000 2004') == '1\\n2\\n3\\n4\\n'"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1009 2011\\n1017 2011\") == \"1\\n2011\"\nassert solution(\"10\\n1009 2011\\n1017 2011\\n1009 2011\\n1017 2011\\n1017 2011\") == \"1\\n2011\\n1009 2011\\n1017 2011\\n\"\nassert solution(\"5\\n1009 2011\\n1017 2011\") == \"1\\n2011\"\nassert solution(\"5\\n1009 2011\\n1017 2011\") == \"1\\n2011\"\nassert solution(\"5\\n1009 2011\\n1017 2011\") == \"1\\n2011\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input:\\n2\\n1009 2011\\n1017 2011\\n\\nOutput:\\n1\\n2011\\n\") == \"\\n1\\n2011\\n\"\nassert solution(\"Input:\\n1\\n1009\\n1017\\n2011\\n\\nOutput:\\n1\\n1009\\n1017\\n\") == \"\\n1\\n1009\\n1017\\n\"\nassert solution(\"Input:\\n1\\n1009 2011\\n1017 2011\\n\\nOutput:\\n2\\n2011\\n1009 2011\\n1017 2011\\n\") == \"\\n2\\n2011\\n1009 2011\\n1017 2011\\n\"\nassert solution(\"Input:\\n2\\n1009 2011\\n1017 2011\\n1010 2012\\n\\nOutput:\\n1\\n2011\\n1009 2011\\n1017 2011\\n1010 2012\\n\") == \"\\n1\\n2011\\n1009 2011\\n1017 2011\\n1010 2012\\n\"\nassert solution(\"Input:\\n1\\n1009\\n1017\\n2011\\n1010 2012\\n\\nOutput:\\n1\\n1009\\n1017\\n2011\\n1010 2012\\n\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Solution: {solution(input())}\\nExpected Output: {expected_output}\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1009 2011\\n1017 2011\") == \"1\\n2011\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == [0, 3], \"Expected [0, 3], but got: {}\".format(solution())"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\") == \"0 3\\n\"\n\nprint(\"Tests Passed\")"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\n''') == '0 3'"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt')) == '0 3'"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\\n') == '0 3\\n'"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\") == \"0 3\\n\", \"The given solution is incorrect\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0 3\", \"Incorrect output\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0 3\", \"The expected output is not found\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '0 3', \"The given code is incorrect.\"\n"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\n''') == '0 3'\n\nassert solution('''\n4 4\n0 1 200\n0 2 200\n1 3 200\n2 3 200\n0 3\n''') == '0 3'\n\nassert solution('''\n4 4\n0 1 200\n0 2 200\n1 3 100\n2 3 200\n0 3\n''') == '0 3'\n\nassert solution('''\n4 4\n0 1 200\n0 2 200\n1 3 100\n2 3 200\n0 3\n''') == '0 3'"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"20\""
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\"\nassert solution(\"1.5 3.0\\n50 100 0 0\\n500 500 0 0\\n100 0 0\") == \"25\"\nassert solution(\"0.5 0.5\\n1 2 0 0\\n2 3 0 0\\n1 0 0\") == \"0\"\nassert solution(\"1.5 3.0\\n50 100 0 0\\n500 500 0 0\\n100 0 0\") == \"25\"\nassert solution(\"1.5 3.0\\n50 100 0 0\\n500 500 0 0\\n100 0 0\") == \"25\"\nassert solution(\"1.5 3.0\\n50 100 0 0\\n500 500 0 0\\n100 0 0\") == \"25\""
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\""
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"20\", \"The solution is incorrect.\""
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\\n\") == \"20\""
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == output, f\"Incorrect output. Expected: {output}, Received: {solution(input)}\""
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\\n') == '20\\n', \"The output is incorrect\"\nprint(\"The output is correct\")"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\\n\") == \"20\""
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0') == 20, \"Test Case 1 failed\"\nassert solution('2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0') == 12, \"Test Case 2 failed\"\nassert solution('1.0 1.0\\n
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\\n\"\n"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == \"4\\n4\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5') == '4'"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == 4\n"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(None) == '4'\n"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5') == '4\\n'"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n6\n0 2 3 4 5 6\n0 1 3 4 5 6\n1 6 5 4 2 1\n2 6 5 3 2 1\n1 1 2 3 4 6\n2 1 2 3 4 5\n''') == '4'\n\nassert solution('''\n7\n0 2 3 4 5 6\n0 1 3 4 5 6\n1 6 5 4 2 1\n2 6 5 3 2 1\n1 1 2 3 4 6\n2 1 2 3 4 5\n3 5 4 3 2 1\n''') == '4'\n\nassert solution('''\n8\n0 2 3 4 5 6\n0 1 3 4 5 6\n1 6 5 4 2 1\n2 6 5 3 2 1\n1 1 2 3 4 6\n2 1 2 3 4 5\n3 5 4 3 2 1\n4 5 4 3 2 1\n''') == '4'\n\nassert solution('''\n9\n0 2 3 4 5 6\n0 1 3 4 5 6\n1 6 5 4 2 1\n2 6 5 3 2 1\n1 1 2 3 4 6\n2 1 2 3 4 5\n3 5 4 3 2 1\n4 5 4 3 2 1\n5 5 5 4 3 2\n''') == '5'\n\nassert solution('''\n10\n0 2 3 4 5 6\n0 1 3 4 5 6\n1 6 5 4 2 1\n2 6 5 3 2 1\n1 1 2 3 4 6\n2 1 2 3 4 5\n3 5 4 3 2 1\n4 5 4 3 2 1\n5 5 5 4 3 2\n6 6 6 5 4 3\n7 6 5 4 3 2\n8 5 4 3 2 1\n''') == '5'"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5') == '4\\n'"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5') == '4'\n"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == \"4\\n\", \"Testcase 1 failed\"\n\nassert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n1000000 1000000\") == \"4\\n\", \"Testcase 2 failed\"\n\nassert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == \"4\\n\", \"Testcase 3 failed\"\n\nassert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == \"4\\n\", \"Testcase 4 failed\""
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == \"4\\n\""
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == \"4\"\nassert solution(\"4\\n1 1\\n2 2 2 3\\n3 3 3 4\\n4 4 4 5\") == \"4\"\nassert solution(\"6\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n5 6 7 8\\n6 7 8 9\\n7 8 9 10\") == \"6\""
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == '4'\nassert solution('5\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n1 2 3 4 5 6 7 8') == '3'"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == 4\nassert solution(\"5\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == 3\nassert solution(\"7\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == 2\nassert solution(\"8\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == 1\nassert solution(\"9\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == 0"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == 4\n"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\\n4\\n4\\n4\\n\"\nassert solution(stdin) == \"4\\n4\\n4\\n4\\n\""
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n4\n1 1\n1 2 3 4\n2 3 4 5\n3 4 5 6\n4 5 6 7\n''') == '4\\n'"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == 4, \"Your solution is incorrect. It should return 4, but it returns {0}.\".format(solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\"))\nprint(\"All tests passed!\")"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected, f\"Solution: {solution}, Expected: {expected}\"\n"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n') == 6, \"The correct output is: 6\\nYour output is: {}\".format(solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n'))"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1') == 6, \"Incorrect output\""
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt').read()) == \"6\\n\"\nassert solution(open('example.in').read()) == \"6\\n\""
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 6\n"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"6\\n\""
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1') == '6\\n'\nprint('All test cases passed')"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([5]) == \"6\\n6\\n\"\nassert solution([3, 1.0, 1.0, 3.1, 3.1, 4.2, 3.1]) == \"6\\n6\\n\"\nassert solution([2, 1.0, 1.0, 3.1, 3.1, 4.2, 3.1, 3.1, 3.1, 3.1, 3.1, 3.1]) == \"18\\n18\\n\"\nassert solution
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"6\""
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 6"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 6, \"The correct output is 6, not {}\".format(solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\"))"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 5, \"Solution 1 is incorrect\"\nassert solution(5) == 5, \"Solution 2 is incorrect\"\nassert solution(10) == 10, \"Solution 3 is incorrect\"\nassert solution(15) == 15, \"Solution 4 is incorrect\"\nassert solution(20) == 15, \"Solution 5 is incorrect\""
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3)<|im_sep|>"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    3\n    2\n    2\n    2\n    \"\"\"\n) == \"5\\n\""
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2\\n2\\n2\") == 5\n"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2\\n2\\n2\\n\") == 5\nprint(\"All tests passed!\")"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 5, \"Test Failed\"\nassert solution(2) == 5, \"Test Failed\"\nassert solution(2) == 5, \"Test Failed\"\nassert solution(2) == 5, \"Test Failed\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 5, \"Incorrect output\""
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2\\n2\\n2\\n\") == \"5\""
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([3, 2, 2, 2]) == 5\nassert solution([5]) == 0\nassert solution([]) == 0\nassert solution([1, 2, 3, 4, 5]) == 7\nassert solution([1, 1, 1, 1, 1]) == 0\nassert solution([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"5\"\n"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 5\\n1 2 3 10 20 30\") == \"1 1\"\nassert solution(\"1 4\\n1 2 3 4\") == \"0 4\"\nassert solution(\"2 2\\n2 2 2 2 2 2\") == \"0 4\"\nassert solution(\"1 3\\n1 1 1 1 1 1\") == \"1 1\"\nassert solution(\"1 10\\n1 2 3 4 5 6 7 8 9 10\") == \"1 10\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin: str) == '1 1\\n'"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\\ndef solution(stdin: str) -> str: pass\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 3\\n2 2 2 1\\n\") == \"1 1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1 1\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 3\\n2 2 2 1') == '1 1\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"The output is different from the expected output for the given problem.\""
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\") == 10"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 10"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"10\\n\"\n"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n\") == \"10\"\nassert solution(\"2\\n\") == \"20\"\nassert solution(\"3\\n\") == \"30\"\nassert solution(\"4\\n\") == \"40\"\nassert solution(\"5\\n\") == \"50\"\nassert solution(\"6\\n\") == \"60\"\nassert solution(\"7\\n\") == \"70\"\nassert solution(\"8\\n\") == \"80\"\nassert solution(\"9\\n\") == \"90\"\nassert solution(\"10\\n\") == \"100\"\nassert solution(\"11\\n\") == \"110\"\nassert solution(\"12\\n\") == \"120\"\nassert solution(\"13\\n\") == \"130\"\nassert solution(\"14\\n\") == \"140\"\nassert solution(\"15\\n\") == \"150\"\nassert solution(\"16\\n\") == \"160\"\nassert solution(\"17\\n\") == \"170\"\nassert solution(\"18\\n\") == \"180\"\nassert solution(\"19\\n\") == \"190\"\nassert solution(\"20\\n\") == \"200\"\nassert solution(\"21\\n\") == \"210\"\nassert solution(\"22\\n\") == \"220\"\nassert solution(\"23\\n\") == \"230\"\nassert solution(\"24\\n\") == \"240\"\nassert solution(\"25\\n\") == \"250\"\nassert solution(\"26\\n\") == \"260\"\nassert solution(\"27\\n\") == \"270\"\nassert solution(\"28\\n\") == \"280\"\nassert solution(\"29\\n\") == \"290\"\nassert solution(\"30\\n\") == \"300\"\nassert solution(\"31\\n\") == \"310\"\nassert solution(\"32\\n\") == \"320\"\nassert solution(\"33\\n\") == \"330\"\nassert solution(\"34\\n\") == \"340\"\nassert solution(\"35\\n\") == \"350\"\nassert solution(\"36\\n\") == \"360\"\nassert solution(\"37\\n\") == \"370\"\nassert solution(\"38\\n\") == \"380\"\nassert solution(\"39\\n\") == \"390\"\nassert solution(\"40\\n\") == \"400\"\nassert solution(\"41\\n\") == \"410\"\nassert solution(\"42\\n\") == \"420\"\nassert solution(\"43\\n\") == \"430\"\nassert solution(\"44\\n\") == \"440\"\nassert solution(\"45\\n\") == \"450\"\nassert solution(\"46\\n\") == \"460\"\nassert solution(\"47\\n\") == \"470\"\nassert solution(\"48\\n\") == \"480\"\nassert solution(\"49\\n\") == \"490\"\nassert solution(\"50\\n\") == \"500\"\nassert solution(\"51\\n\") == \"510\"\nassert solution(\"52\\n\") == \"520\"\nassert solution(\"53\\n\") == \"530\"\nassert solution(\"54\\n\") == \"540\"\nassert solution(\"55\\n\") == \"550\"\nassert solution(\"56\\n\") == \"560\"\nassert solution(\"57\\n\") == \"570\"\nassert solution(\"58\\n\") == \"580\"\nassert solution(\"59\\n\") == \"590\"\nassert solution(\"60\\n\") == \"600\"\nassert solution(\"61\\n\") == \"610\"\nassert solution(\"62\\n\") == \"620\"\nassert solution(\"63\\n\") == \"630\"\nassert solution(\"64\\n\") == \"640\"\nassert solution(\"65\\n\") == \"650\"\nassert solution(\"66\\n\") == \"660\"\nassert solution(\"67\\n\") == \"670\"\nassert solution(\"68\\n\") == \"680\"\nassert solution(\"69\\n\") == \"690\"\nassert solution(\"70\\n\") =="
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4) == \"10\\n\"\nassert solution(8) == \"10\\n\"\nassert solution(10) == \"10\\n\"\nassert solution(15) == \"15\\n\"\nassert solution(20) == \"20\\n\""
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"10\""
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 10, \"Solution for sample input 1 is incorrect\"\nassert solution(2) == 11, \"Solution for sample input 2 is incorrect\"\nassert solution(3) == 12, \"Solution for sample input 3 is incorrect\"\nassert solution(4) == 13, \"Solution for sample input 4 is incorrect\"\nassert solution(5) == 14, \"Solution for sample input 5 is incorrect\"\n"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"10\"\n"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == \"10\""
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == expected_output, f\"Expected output: {expected_output}, but got: {solution(sample_input)}\"\n"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0.001\""
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n1000 1 0\\n1 1000 1\") == \"0.001\"\n"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0.001\", \"The output should be 0.001, but got {}\".format(solution(stdin))"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n1000 1 0\\n1 1000 1\") == 0.001"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0.001\"\n"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 0.001\n\nfrom typing import List\n"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '0.001'\n"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\n1000 1 0\\n1 1000 1\") == 0.001\nassert solution(\"1 2\\n1000 1 1\\n1 1000 2\") == 0.002\nassert solution(\"1 2\\n1000 1 2\\n1 1000 1\") == 0.002\nassert solution(\"1 2\\n1000 1 3\\n1 1000 3\") == 0.003\nassert solution(\"1 2\\n1000 1 4\\n1 1000 4\") == 0.003\nassert solution(\"1 2\\n1000 1 5\\n1 1000 5\") == 0.004\nassert solution(\"1 2\\n1000 1 6\\n1 1000 6\") == 0.005\nassert solution(\"1 2\\n1000 1 7\\n1 1000 7\") == 0.006\nassert solution(\"1 2\\n1000 1 8\\n1 1000 8\") == 0.007\nassert solution(\"1 2\\n1000 1 9\\n1 1000 9\") == 0.008\nassert solution(\"1 2\\n1000 1 10\\n1 1000 10\") == 0.009\nassert solution(\"1 2\\n1000 1 11\\n1 1000 11\") == 0.010\nassert solution(\"1 2\\n1000 1 12\\n1 1000 12\") == 0.011\nassert solution(\"1 2\\n1000 1 13\\n1 1000 13\") == 0.012\nassert solution(\"1 2\\n1000 1 14\\n1 1000 14\") == 0.013\nassert solution(\"1 2\\n1000 1 15\\n1 1000 15\") == 0.014\nassert solution(\"1 2\\n1000 1 16\\n1 1000 16\") == 0.015\nassert solution(\"1 2\\n1000 1 17\\n1 1000 17\") == 0.016\nassert solution(\"1 2\\n1000 1 18\\n1 1000 18\") == 0.017\nassert solution(\"1 2\\n1000 1 19\\n1 1000 19\") == 0.018\nassert solution(\"1 2\\n1000 1 20\\n1 1000 20\") == 0.019\nassert solution(\"1 2\\n1000 1 21\\n1 1000 21\") == 0.020\nassert solution(\"1 2\\n1000 1 22\\n1 1000 22\") == 0.021\nassert solution(\"1 2\\n1000 1 23\\n1 1000 23\") == 0.022\nassert solution(\"1 2\\n1000 1 24\\n1 1000 24\") == 0.023\nassert solution(\"1 2\\n1000 1 25\\n1 1000 25\") == 0.024\nassert solution(\"1 2\\n1000 1 26\\n1 1000 26\") == 0.025\nassert solution(\"1 2\\n1000 1 27\\n1 1000 27\") == 0.026\nassert solution(\"1 2\\n10"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 0.001, \"Incorrect result\"\n"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\\n\""
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"0\"\n"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    3 3 2 10000\n    1 2\n    2 3\n    3 1\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n    5 5 5 2 10000\n    1 2\n    1 3\n    2 4\n    3 4\n    4 5\n    \"\"\"\n) == \"2\\n\""
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(None) == '0\\n'"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n3 3 2 10000\n1 2\n2 3\n3 1\n''') == '0\\n'"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 0"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == '0'"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3 2 10000\\n1 2\\n2 3\\n3 1\\n') == '0\\n'\n"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 2 10000\\n1 2\\n2 3\\n3 1\\n\") == \"0\""
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 2 10000\\n1 2\\n2 3\\n3 1\") == 0"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\") == 26\nprint(\"All tests passed.\")"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 26, \"Your solution is incorrect\"\nprint(\"All test cases passed!\")\n"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\") == 26"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == '26'\nassert solution(open('input2.txt', 'r')) == '11'\nassert solution(open('input3.txt', 'r')) == '15'"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Incorrect solution. Expected: {output}, Received: {solution(input())}\"\n"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 26\nprint(26)"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == '26\\n'\nprint('All test cases pass.')"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test case failed: {output}!= {solution(input())}\""
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\") == 26\n"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\") == \"26\\n\"\nassert solution(\"3\\n0 1 1\\n1 0 2\\n1 2 0\\n2 1 0\") == \"4\\n\"\nassert solution(\"6\\n0 1 1 1 2 3\\n1 0 2 2 3 1\\n1 2 0 3 1 2\\n1 3 0 1 2 3\\n2 1 0 3 1 2\\n2 3 0 1 3 2\\n3 1 0 2 3 1\") == \"25\\n\""
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0.333333333\""
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\""
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0.333333333\\n0.666666667\", \"Incorrect output\"\n"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == \"0.333333333\\n0.666666667\\n\""
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\\n\""
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0.333333333\""
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0.333333333\\n0.666666667\"\n"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Expected '{expected}', got '{solution(stdin)}'.\""
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0.333333333\\n0.666666667\"\n"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\"\n"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"45 45 0 0\") == \"0.75\"\nassert solution(\"100 0 0 0\") == \"0\"\nassert solution(\"0 0 0 0\") == \"0\"\nassert solution(\"45 90 0 0\") == \"0.5\"\nassert solution(\"36 45 0 0\") == \"0.05\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"45 45 0 0\") == 0.75\n"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('45 45 0 0') == '0.75'"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"45 45 0 0\") == 0.75\nassert solution(\"40 30 0 0\") == 0.5\nassert solution(\"15 50 0 0\") == 0.6666666666666667\nassert solution(\"30 30 10 10\") == 0.5\nassert solution(\"45 55 0 0\") == 1\nassert solution(\"45 45 45 45\") == 1\nassert solution(\"45 45 0 45\") == 1\nassert solution(\"45 45 45 0\") == 1\n"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"45 45 0 0\") == 0.75\n"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"45 45 0 0\") == 0.75, \"The proportion of the area of the courtyard that is watered by the sprinklers is not equal to 0.75.\"\n"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('45 45 0 0') == 0.75"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0.75\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('45 45 0 0') == 0.75\n"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '0.75', 'Incorrect output'"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n\") == 4"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == \"4\\n\"\n\nassert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n\") == \"4\\n\"\n\nassert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == \"4\\n\"\n\nassert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == \"4\\n\"\n\nassert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == \"4\\n\"\n\nassert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n\") == \"4\\n\""
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"4\"\nassert solution() == \"4\""
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == \"4\"\n"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9') == 4\nassert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n0 0 0') == 0\nassert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n0 1 1') == 0\nassert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n0 2 2') == 0\nassert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n0 3 3') == 0\nassert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n0 4 4') == 0\nassert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n0 5 5') == 0\nassert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n0 6 6') == 0\nassert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n0 7 7') == 0\nassert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n0 8 8') == 0\nassert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n0 9 9') == 0\nassert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n0 10 10') == 0\nassert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n0 11 11') == 0\nassert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n0 12 12') == 0\nassert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n0 13 13') == 0\nassert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n0 14 14') == 0\nassert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n\") == \"4\"\n"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == 4\nassert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n10 10\") == 1440\n\nfrom typing import List"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"4\\n\"\n"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n\") == \"4\\n\""
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n\") == \"4\"\nassert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n\") == \"4\"\nassert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n\") == \"4\"\nassert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n\") == \"4\"\nassert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n\") == \"4\"\nassert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n\") == \"4\"\nassert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n5 6\\n0 1 "
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == output, f\"Incorrect output. Expected '{output}', got '{solution(stdin)}'.\"\nfor i in range(1, N+1):\n    assert solution(f\"{i}\\n\") == output, f\"Incorrect output. Expected '{output}', got '{solution(f\"{i}\\n\")}'.\"\n"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n10 10 0 5\\n\") == \"100\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n10 10 0 5\") == \"100\\n\", \"The correct output is not provided.\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Test case failed: got {solution(input())}, expected {expected}\"\n\nfor _ in range(input()):\n    N = int(input())\n    population = [int(x) for x in input().split()]\n    max_trees = max(sum(population[i+1:i+4]) for i in range(N-1))\n    print(max_trees)"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"100\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n10 10 0 5\\n\") == 100, \"Expected 100, got {}\".format(solution(\"1\\n10 10 0 5\\n\"))"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"100\", \"Your solution is incorrect\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '100'\n"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n10 10 0 5\") == \"100\", \"Sample Output\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([input() for _ in range(3)]), \"Enter n and x1, y1, x2, y2\""
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 1\nassert solution() == 1\nassert solution() == 0\nassert solution() == 0"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0 2 2\\n1 1 3 4\\n5 7 6 8\") == 1\nassert solution(\"0 0 2 2\\n1 2 3 4\\n5 7 6 8\") == 0\nassert solution(\"0 0 2 2\\n1 1 2 3\\n5 7 6 8\") == 0\nassert solution(\"0 0 2 2\\n1 1 2 3\\n5 6 7 8\") == 0"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('0 0 2 2\\n1 1 3 4\\n5 7 6 8') == 1, \"The solution is not correct\""
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8') == 1\nassert solution('3\\n0 0 1 2\\n1 2 2 3\\n4 3 4 5\\n') == 0\n"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 1, \"The given solution is incorrect.\""
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 1\n"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 1, \"This code is incorrect\""
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Output {solution(input())} does not match expected output {expected_output}\""
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0 2 2\\n1 1 3 4\\n5 7 6 8\") == \"1\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == 17\nassert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\n1 2 3 4 5\\n\") == 20\nassert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\n1 2 3 4 5\\n6 6 6 6 6\\n\") == 24\nassert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\n1 2 3 4 5\\n6 6 6 6 6\\n7 7 7 7 7\\n\") == 28\nassert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\n1 2 3 4 5\\n6 6 6 6 6\\n7 7 7 7 7\\n8 8 8 8 8\\n\") == 32"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"17\\n\"\nassert solution(stdin=\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"18\\n\"\nassert solution(stdin=\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"22\\n\"\n"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"17\", \"The solution is not correct\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == 17, \"Invalid output\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"17\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"17\\n\"\n"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"17\"\n"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_data) == output_data, f\"Expected {output_data}, but got {solution(input_data)}\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '17\\n'"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"17\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n3 2 3 1 1\\n') == '1 4 3 5 2\\n2 3 5 1 4'"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Expected Output: {expected_output}, Received Output: {solution(input())}\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1 4 3 5 2 \\n 2 3 5 1 4\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '2 3 5 1 4\\n1 4 3 5 2'\nassert solution(input()) == 'impossible'"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n3 2 3 1 1\") == \"1 4 3 5 2 \\n2 3 5 1 4\"\nassert solution(\"1\\n3 2 3 1 1\") == \"impossible\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n3 2 3 1 1\") == \"1 4 3 5 2\\n2 3 5 1 4\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3 2 3 1 1\") == \"1 4 3 5 2 \\n2 3 5 1 4\"\nassert solution(\"5\\n3 2 3 1 2\") == \"impossible\"\nassert solution(\"5\\n3 2 3 1 3\") == \"impossible\"\nassert solution(\"5\\n3 2 3 1 4\") == \"impossible\"\nassert solution(\"5\\n3 2 3 1 5\") == \"impossible\"\nassert solution(\"5\\n3 2 3 2 1\") == \"impossible\"\nassert solution(\"5\\n3 2 3 2 2\") == \"impossible\"\nassert solution(\"5\\n3 2 3 2 3\") == \"impossible\"\nassert solution(\"5\\n3 2 3 2 4\") == \"impossible\"\nassert solution(\"5\\n3 2 3 2 5\") == \"impossible\"\nassert solution(\"5\\n3 2 3 3 1\") == \"impossible\"\nassert solution(\"5\\n3 2 3 3 2\") == \"impossible\"\nassert solution(\"5\\n3 2 3 3 3\") == \"impossible\"\nassert solution(\"5\\n3 2 3 3 4\") == \"impossible\"\nassert solution(\"5\\n3 2 3 3 5\") == \"impossible\"\nassert solution(\"5\\n3 2 3 4 1\") == \"impossible\"\nassert solution(\"5\\n3 2 3 4 2\") == \"impossible\"\nassert solution(\"5\\n3 2 3 4 3\") == \"impossible\"\nassert solution(\"5\\n3 2 3 4 4\") == \"impossible\"\nassert solution(\"5\\n3 2 3 4 5\") == \"impossible\"\nassert solution(\"5\\n3 2 3 5 1\") == \"impossible\"\nassert solution(\"5\\n3 2 3 5 2\") == \"impossible\"\nassert solution(\"5\\n3 2 3 5 3\") == \"impossible\"\nassert solution(\"5\\n3 2 3 5 4\") == \"impossible\"\nassert solution(\"5\\n3 2 3 5 5\") == \"impossible\"\nassert solution(\"5\\n3 2 4 1 1\") == \"impossible\"\nassert solution(\"5\\n3 2 4 1 2\") == \"impossible\"\nassert solution(\"5\\n3 2 4 1 3\") == \"impossible\"\nassert solution(\"5\\n3 2 4 1 4\") == \"impossible\"\nassert solution(\"5\\n3 2 4 1 5\") == \"impossible\"\nassert solution(\"5\\n3 2 4 2 1\") == \"impossible\"\nassert solution(\"5\\n3 2 4 2 2\") == \"impossible\"\nassert solution(\"5\\n3 2 4 2 3\") == \"impossible\"\nassert solution(\"5\\n3 2 4 2 4\") == \"impossible\"\nassert solution(\"5\\n3 2 4 2 5\") == \"impossible\"\nassert solution(\"5\\n3 2 4 3 1\") == \"impossible\"\nassert solution(\"5\\n3 2 4 3 2\") == \"impossible\"\nassert solution(\"5\\n3 2 4 3 3\") == \"impossible\"\nassert solution(\"5\\n3 2 4 3 4\") == \"impossible\"\nassert solution(\"5\\n3 2 4 3 5\") == \"impossible\"\nassert solution(\"5\\n3 2 4 4 1\") == \"impossible\"\nassert solution(\"5\\n3 2 4 4 2\") == \"impossible\"\nassert solution(\"5\\n3 2 4 4 3\") == \"impossible\"\nassert solution(\"5\\n3 2 4 4 4\") == \"impossible\"\nassert solution(\"5\\n3 2 4 4 5\") == \"impossible\"\nassert solution(\"5\\n3 2 4 5 1\") == \""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n3 2 3 1 1\") == \"1 4 3 5 2\\n2 3 5 1 4\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1 4 3 5 2\\n2 3 5 1 4\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n3 2 3 1 1') == '1 4 3 5 2\\n2 3 5 1 4'"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 0.76772047, \"Your solution is incorrect.\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n3 0 1\\n1 4\") == 0.76772047\nassert solution(\"1\\n3 0 1\\n1 5\") == 0.0000000000000000001\nassert solution(\"1\\n3 0 1\\n1 5\\n2 3\\n3 4\") == 0.0000000000000000001\nassert solution(\"1\\n3 0 1\\n1 5\\n2 3\\n3 4\\n5 6\\n6 7\") == 0.0000000000000000001\nassert solution(\"1\\n3 0 1\\n1 5\\n2 3\\n3 4\\n5 6\\n6 7\\n8 9\\n9 10\") == 0.0000000000000000001"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == 0.76772047\nassert solution(open(\"input1.txt\", \"r\")) == 0.74035946\nassert solution(open(\"input2.txt\", \"r\")) == 0.78703278\nassert solution(open(\"input3.txt\", \"r\")) == 0.71020881\nassert solution(open(\"input4.txt\", \"r\")) == 0.69776089\nassert solution(open(\"input5.txt\", \"r\")) == 0.61828708"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n3 0 1\\n1 4\") == 0.76772047, \"Your solution is incorrect.\"\nprint(\"Correct.\")"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n    1\n    3 0 1\n    1 4\n    '''\n) == 0.76772047"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"0.76772047\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"0.76772047\", \"Test case 1 failed\"\n\nassert solution(input()) == \"0.76772047\", \"Test case 2 failed\"\n\nassert solution(input()) == \"0.76772047\", \"Test case 3 failed\"\n\nassert solution(input()) == \"0.76772047\", \"Test case 4 failed\"\n\nassert solution(input()) == \"0.76772047\", \"Test case 5 failed\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 0.76772047, \"The code is not correct\"\n"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n3 0 1\\n1 4\") == \"0.76772047\"\n"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 0.76772047, \"Please implement the solution.\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('hello teams') == 27, \"Expected output 27, got {}\".format(solution('hello teams'))"
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('hello teams') == '27'\nassert solution('abcabc') == '3'\nassert solution('defdef') == '3'\nassert solution('aabbccddeeff') == '6'"
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"hello teams\") == \"27\", \"Input: hello teams\\nOutput: 27\"\nassert solution(\"hello teams world\") == \"26\", \"Input: hello teams world\\nOutput: 26\"\nassert solution(\"hello teams world hello world\") == \"26\", \"Input: hello teams world hello world\\nOutput: 26\"\nassert solution(\"hello teams world hello world\") == \"26\", \"Input: hello teams world hello world\\nOutput: 26\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('hello teams') == '27'"
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('hello teams') == '27'"
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"hello teams\") == \"27\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('hello teams') == '27'\nassert solution('def solution(stdin: str) -> str:') == '1'\nassert solution('abcdef') == '3'\nassert solution('abcd') == '4'\nassert solution('abcdefg') == '5'\nassert solution('a') == '0'"
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('hello teams') == '27'\nassert solution('aabbccddeeff') == '1'\nassert solution('abcabcabcabc') == '0'"
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"hello teams\") == \"27\\n\", \"Expected 27, got {}\".format(solution(\"hello teams\"))"
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"hello teams\") == \"27\", \"The solution should be 27\""
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2, \"Expected output: 2\"\nassert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n12 6 4\") == 3, \"Expected output: 3\"\nassert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n12 6 4\\n5 4 5\") == 3, \"Expected output: 3\"\n"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2, \"Test case 1 failed\"\nassert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n19 4 5\") == 5, \"Test case 2 failed\"\nassert solution(\"1 2 3 4 5 6\\n1 2 3 4 5 6\") == 0, \"Test case 3 failed\"\n"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n\") == 2"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2, \"The output is incorrect\"\n"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\\n\"\n"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2\nassert solution(\"4 3 1\\n1 2 1\\n3 1 2\\n2 1 3\\n1 2 2\\n3 2 1\\n2 3 1\") == 3\nassert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n14 8 5\\n18 10 9\\n20 12 13\\n22 14 17\\n24 16 21\\n26 18 25\\n28 20 29\\n30 22 33\\n32 24 37\\n34 26 41\\n36 28 45\\n38 30 49\\n40 32 53\\n42 34 57\\n44 36 61\\n46 38 65\\n48 40 69\\n50 42 73\\n52 44 77\\n54 46 81\\n56 48 85\\n58 50 89\\n60 52 93\\n62 54 97\\n64 56 101\\n66 58 105\\n68 60 109\\n70 62 113\\n72 64 117\\n74 66 121\\n76 68 125\\n78 70 129\\n80 72 133\\n82 74 137\\n84 76 141\\n86 78 145\\n88 80 149\\n90 82 153\\n92 84 157\\n94 86 161\\n96 88 165\\n98 90 169\\n100 92 173\\n102 94 177\\n104 96 181\\n106 98 185\\n108 100 189\\n110 102 193\\n112 104 197\\n114 106 201\\n116 108 205\\n118 110 209\\n120 112 213\\n122 114 217\\n124 116 221\\n126 118 225\\n128 120 229\\n130 122 233\\n132 124 237\\n134 126 241\\n136 128 245\\n138 130 249\\n140 132 253\\n142 134 257\\n144 136 261\\n146 138 265\\n148 140 269\\n150 142 273\\n152 144 277\\n154 146 281\\n156 148 285\\n158 150 289\\n160 152 293\\n162 154 "
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n\") == 2"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n\") == \"2\"\nassert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n2 1 1\\n\") == \"1\""
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 3\\na\\nb\\nc\\nd\\ne\\ncad') == '26'\nassert solution('10 2\\na\\nb\\nc\\nd\\ne\\n') == '5'\nassert solution('10 3\\na\\nb\\nc\\nd\\ne\\n') == '9'\n\nfrom typing import List"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 3\\na\\nb\\nc\\nd\\ne\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('example.in', 'r').read()) == '26'"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 3\\na\\nb\\nc\\nd\\ne\\ncad') == '26'"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"26\\n\"\n"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncad\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncad\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncad\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncad\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncad\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncad\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncad\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncad\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncad\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncad\") == \"26\""
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"123456789012345678901234567890\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected, f\"Solution {solution} does not match expected output {expected}\""
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 26\n"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 3\\na\\nb\\nc\\nd\\ne\\ncad\\n') == '26'\nprint('All tests passed!')"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\"\nassert solution(\"5 10 30\\n10 5 3 1 2\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 1 5\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 2 1\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 1 4\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 1 1\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 1 3\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 1 5\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 2 1\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 1 4\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 1 1\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 1 3\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 1 5\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 2 1\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 1 4\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 1 1\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 1 3\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 1 5\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 2 1\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 1 4\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 1 1\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 1 3\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 1 5\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 2 1\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 1 4\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 1 1\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 1 3\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 1 5\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 2 1\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 1 4\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 1 1\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 1 3\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 1 5\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 2 1\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 1 4\") == \"impossible\"\nassert solution(\"5"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''5 10 30\n10 5 3 1 3''') == '''3 5 2 1 4'''"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\"\nassert solution(\"5 10 30\\n10 5 5 1 3\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 1 2\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\"\nassert solution(\"5 10 30\\n10 5 3 2 2\") == \"2 5 1 1 4\"\nassert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\"\n"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str) == output_str, f\"Expected {output_str}, got {solution(input_str)}\"\n\ninput_str = \"5 10 30\\n10 5 3 1 3\"\noutput_str = \"3 5 2 1 4\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\""
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1\\n2 3\\n2 3\") == 2\nassert solution(\"5\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\") == 11\nassert solution(\"5\\n5 5\\n5 5\\n5 5\\n5 5\") == 0"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1\\n2 3\\n2 3\") == 2\nassert solution(\"3\\n1 1\\n2 3\\n1 2\") == 3\nassert solution(\"10\\n2 3\\n1 4\\n5 6\") == 14"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n1 1\\n2 3\\n2 3\\n') == 2\nassert solution('1\\n0\\n0\\n') == 1\nassert solution('3\\n3 1\\n3 1\\n') == 1\nassert solution('3\\n2 4\\n1 3\\n') == 1\nassert solution('3\\n1 2\\n2 3\\n1 1\\n') == 1\nassert solution('3\\n1 1\\n2 3\\n2 3\\n') == 2\nassert solution('1\\n0\\n0\\n') == 1\nassert solution('3\\n3 1\\n3 1\\n') == 1\nassert solution('3\\n2 4\\n1 3\\n') == 1\nassert solution('3\\n1 2\\n2 3\\n1 1\\n') == 1"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\\n\""
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(r'Input\\n3\\n1 1\\n2 3\\n2 3') == '2\\nshovel time!'"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1 1\\n2 3\\n2 3') == '2'"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n1 1\\n2 3\\n2 3\\n') == '2\\n'\nassert solution('1\\n1 1\\n2 3\\n3 2\\n') == '1\\n'\nassert solution('2\\n1 1\\n2 3\\n3 2\\n') == '2\\n'"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 1\\n2 3\\n2 3\") == \"2\\nshovel time!\"\nassert solution(\"4\\n5 7\\n5 7\\n5 7\") == \"1\\nshovel time!\"\nassert solution(\"2\\n1 2\\n3 4\") == \"1\\nshovel time!\"\nassert solution(\"3\\n2 3\\n4 5\\n6 7\") == \"1\\nshovel time!\"\nassert solution(\"3\\n1 1\\n2 2\\n3 3\\n4 4\") == \"3\\nshovel time!\""
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_string) == expected_output, f\"The solution is incorrect. Expected output: '{expected_output}'. Got: '{solution(input_string)}'\""
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    3\n    1 1\n    2 3\n    2 3\n    ''') == 2\nassert solution('''\n    3\n    1 1\n    2 2\n    2 2\n    ''') == 2\nassert solution('''\n    3\n    1 1\n    2 2\n    1 1\n    ''') == 1\nassert solution('''\n    3\n    1 1\n    2 2\n    0 0\n    ''') == 0\nassert solution('''\n    4\n    1 1\n    2 2\n    3 4\n    2 2\n    ''') == 1\nassert solution('''\n    4\n    1 1\n    2 2\n    3 4\n    1 1\n    ''') == 1\nassert solution('''\n    4\n    1 1\n    2 2\n    3 4\n    1 0\n    ''') == 0\nassert solution('''\n    4\n    1 1\n    2 2\n    3 4\n    0 0\n    ''') == 0\nassert solution('''\n    4\n    1 1\n    2 2\n    3 4\n    2 2\n    0 0\n    ''') == 1\nassert solution('''\n    4\n    1 1\n    2 2\n    3 4\n    1 1\n    1 1\n    ''') == 0\nassert solution('''\n    4\n    1 1\n    2 2\n    3 4\n    1 1\n    0 0\n    ''') == 0\nassert solution('''\n    4\n    1 1\n    2 2\n    3 4\n    0 0\n    0 0\n    ''') == 0\n"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3\\n\", \"Your code is incorrect.\""
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3\\n\""
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3\\n\"\nassert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"1\\n\"\n"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n1 2 1 2') == '3'\n"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected, f\"Got {solution}, expected {expected}\""
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2 1 2') == '3'\nassert solution('5\\n1 2 1 2\\n3 4 3 4') == '4'\nassert solution('6\\n1 2 1 2\\n3 4 3 4\\n5 6 5 6\\n7 8 7 8') == '4'"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"3\\n\"\n"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"3\\n\"\nassert solution(\"4\\n1 2 3 4\") == \"6\\n\"\nassert solution(\"4\\n1 2 4 5\") == \"5\\n\"\nassert solution(\"4\\n1 2 3 3\") == \"3\\n\"\nassert solution(\"4\\n1 2 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"3\\n\", \"Test failed.\""
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\"\n"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4 999999937\") == 79, \"The output should be 79\""
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4 999999937\") == 79"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Your solution is incorrect. Please check the code and try again.\""
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4 999999937\") == 79, \"The output is incorrect\""
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected '{sample_output}', got '{solution(sample_input)}'.\""
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4 999999937\") == \"79\" # correct output\n"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '79', 'Test case 1 failed'"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 4 999999937') == 79\n"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4 999999937\") == 79\nassert solution(\"5 5 999999977\") == 285\nassert solution(\"10 10 999999999\") == 5215\nassert solution(\"100 100 999999999\") == 618611007\nassert solution(\"1000 1000 999999999\") == 1134168237639\nassert solution(\"10000 10000 999999999\") == 4611686018427337\nassert solution(\"100000 100000 999999999\") == 1219699316497637169\n\nfrom math import sqrt"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test failed for input {input()} and output {output}\""
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'zucchini', \"Expected 'zucchini', but got '{}'.\".format(solution(input()))\nassert solution(input()) =='mozzarella', \"Expected'mozzarella', but got '{}'.\".format(solution(input()))\nassert solution(input()) =='mushrooms', \"Expected'mushrooms', but got '{}'.\".format(solution(input()))\nassert solution(input()) == 'artichoke', \"Expected 'artichoke', but got '{}'.\".format(solution(input()))"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n4 +zucchini +mozzarella +mushrooms -artichoke') == 'zucchini\\nmozzarella\\nmushrooms\\nartichoke'\n\nfrom typing import List\n"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    1\n    4 +zucchini +mozzarella +mushrooms -artichoke\n    2 +pepperoni -spinach +onions -mushrooms\n    1 +pineapple -banana -carrots -pear\n    2 +lettuce +broccoli -spinach -mushrooms\n    1 +tomato -spinach -onions -lettuce\n    \"\"\"\n) == \"zucchini mozzarella mushrooms artichoke\\n\"\n\nassert solution(\n    \"\"\"\n    1\n    4 +zucchini +mozzarella +mushrooms -artichoke\n    2 +pepperoni -spinach +onions -mushrooms\n    1 +pineapple -banana -carrots -pear\n    2 +lettuce +broccoli -spinach -mushrooms\n    1 +tomato -spinach -onions -lettuce\n    3 +onion +spinach +mushrooms -broccoli\n    3 +green onions +spinach +mushrooms -broccoli\n    3 +green onions +spinach +mushrooms -broccoli\n    \"\"\"\n) == \"zucchini mozzarella mushrooms artichoke\\n\"\n\nassert solution(\n    \"\"\"\n    1\n    4 +zucchini +mozzarella +mushrooms -artichoke\n    2 +pepperoni -spinach +onions -mushrooms\n    1 +pineapple -banana -carrots -pear\n    2 +lettuce +broccoli -spinach -mushrooms\n    1 +tomato -spinach -onions -lettuce\n    3 +onion +spinach +mushrooms -broccoli\n    3 +green onions +spinach +mushrooms -broccoli\n    3 +green onions +spinach +mushrooms -broccoli\n    1 +spinach -lettuce -broccoli\n    \"\"\"\n) == \"spinach\\n\"\n\nassert solution(\n    \"\"\"\n    1\n    4 +zucchini +mozzarella +mushrooms -artichoke\n    2 +pepperoni -spinach +onions -mushrooms\n    1 +pineapple -banana -carrots -pear\n    2 +lettuce +broccoli -spinach -mushrooms\n    1 +tomato -spinach -onions -lettuce\n    3 +onion +spinach +mushrooms -broccoli\n    3 +green onions +spinach +mushrooms -broccoli\n    3 +green onions +spinach +mushrooms -broccoli\n    1 +spinach -lettuce -broccoli\n    2 +spinach -lettuce -broccoli -broccoli\n    \"\"\"\n) == \"spinach\\n\"\n\nassert solution(\n    \"\"\"\n    1\n    4 +zucchini +mozzarella +mushrooms -artichoke\n    2 +pepperoni -spinach +onions -mushrooms\n    1 +pineapple -banana -carrots -pear\n    2 +lettuce +broccoli -spinach -mushrooms\n    1 +tomato -spinach -onions -lettuce\n    3 +onion +spinach +mushrooms -broccoli\n    3 +green onions +spinach +mushrooms -broccoli\n    3 +green onions +spinach +mushrooms -broccoli\n    1 +spinach -lettuce -broccoli\n    2 +spinach -lettuce -broccoli -broccoli\n    3 +broccoli\n    \"\"\"\n) == \"broccoli\\n\"\n\nassert solution(\n    \"\"\"\n    1\n    4 +zucchini +mozzarella +mushrooms -artichoke\n    2 +pepperoni -spinach +onions -mushrooms\n    1 +pineapple -banana -carrots -pear\n    2 +lettuce +broccoli -spinach -mushrooms\n    1 +tomato -spinach -onions -lettuce\n    3 +onion +spinach +mushrooms -broccoli\n    3 +green onions +spinach +mushrooms -broccoli\n    3 +green onions +spinach +mushrooms -broccoli\n    1 +spinach -lettuce -broccoli\n    2 +spinach -lettuce -broccoli -broccoli\n    3 +broccoli\n    3 +broccoli\n    \"\"\"\n) == \"bro"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 'zucchini\\nmozzarella\\nmushrooms\\nartichoke', \"Your code is incorrect. The expected output is 'zucchini\\nmozzarella\\nmushrooms\\nartichoke', but it is actually '%s'\" % solution()"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt').read()) == 'zucchini\\nmozzarella\\nmushrooms\\nartichoke'\n"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\\n\", \"Output: zucchini\\nmozzarella\\nmushrooms\\nartichoke\\n\"\n"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n4 +zucchini +mozzarella +mushrooms -artichoke') == 'zucchini\\nmozzarella\\nmushrooms\\nartichoke'\nassert solution('2\\n1 +lemon +banana -apple\\n2 +tomato -carrot +pepper\\n3 +spinach -mushroom -broccoli') == 'lemon\\nbanana\\ntomato\\ncarrot\\npepper\\nspinach\\nbroccoli'\nassert solution('2\\n1 +lemon -banana +apple\\n2 +tomato -carrot +pepper') == 'lemon\\nbanana\\ntomato\\ncarrot\\npepper'\nassert solution('3\\n1 +lemon -banana +apple\\n2 +tomato +carrot +pepper\\n3 +spinach -mushroom -broccoli') == 'lemon\\nbanana\\ncarrot\\npepper'\n\nfrom typing import List\n"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'zucchini\\nmozzarella\\nmushrooms\\nartichoke\\ndef solution(stdin: str) -> str:\\n    pass'\n\nsolution = '''\n"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"1\\n4 +zucchini +mozzarella +mushrooms -artichoke\") == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\\n\"\n"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\nPP\\nRR\\nPS\\nSS\") == \"PS\\nPP\\nRR\\nSS\"\nassert solution(\"1 2\\nP\\nS\\nA\") == \"P\\nA\"\nassert solution(\"1 2\\nA\\nA\\nP\\nS\") == \"S\\nP\\nA\"\nassert solution(\"3 3\\nPP\\nPS\\nPP\") == \"PP\\nPP\\nPS\"\n\nfrom typing import List"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"PS\\nPP\\nRR\\nSS\\n\"\n"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 4\\nPP\\nRR\\nPS\\nSS') == 'PS\\nPP\\nRR\\nSS\\n'"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\nPP\\nRR\\nPS\\nSS\") == \"PS\\nPP\\nRR\\nSS\"\nassert solution(\"3 4\\nPP\\nSS\\nRR\\nPS\") == \"PP\\nRR\\nPS\\nSS\"\nassert solution(\"3 4\\nPP\\nSS\\nRR\\nSS\") == \"SS\\nPP\\nRR\\nPP\"\n\nfrom typing import List"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\nPP\\nRR\\nPS\\nSS\") == \"PS\\nPP\\nRR\\nSS\"\nassert solution(\"4 4\\nPP\\nRR\\nPS\\nSS\") == \"SS\\nPP\\nRR\\nPS\"\nassert solution(\"5 6\\nPP\\nRR\\nPS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR\\nPS\\nSS\\nSS\\nSS\\nPP\\nRR"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 4\\nPP\\nRR\\nPS\\nSS') == 'PS\\nPP\\nRR\\nSS\\n'"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\nPP\\nRR\\nPS\\nSS\") == \"PS\\nPP\\nRR\\nSS\""
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n3 4\nPP\nRR\nPS\nSS\n\"\"\"\n) == \"PS\\nPP\\nRR\\nSS\\n\"\n\nassert solution(\n\"\"\"\n3 4\nPP\nRR\nPS\nSS\n\"\"\"\n) == \"PS\\nPP\\nRR\\nSS\\n\"\n\nassert solution(\n\"\"\"\n3 4\nPP\nRR\nPS\nSS\n\"\"\"\n) == \"PS\\nPP\\nRR\\nSS\\n\"\n\nassert solution(\n\"\"\"\n3 4\nPP\nRR\nPS\nSS\n\"\"\"\n) == \"PS\\nPP\\nRR\\nSS\\n\""
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n3 4\nPP\nRR\nPS\nSS\n''') == ['PS', 'PP', 'RR', 'SS']\nassert solution('''\n5 3\nRRRR\nPPPP\nSSPP\nRPPP\nRSSL\nSSRR\n''') == ['RPPP', 'RSSL', 'SSRR', 'SSPP', 'PPPP', 'RRRR']\nassert solution('''\n5 3\nRRRR\nPPPP\nSSPP\nRPPP\nRSSL\nSSRR\n''') == ['RPPP', 'RSSL', 'SSRR', 'SSPP', 'PPPP', 'RRRR']"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'PS\\nPP\\nRR\\nSS', \"The output should be PS\\nPP\\nRR\\nSS\"\n"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"288\"\n"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n    5\n    0.1 2.0\n    0\n    0\n    0\n    0\n    0\n    ''') == '288'\n\nassert solution('''\n    5\n    0.1 2.0\n    0\n    0\n    0\n    0\n    0\n    ''') == '288'\n\nassert solution('''\n    5\n    0.1 2.0\n    0\n    0\n    0\n    0\n    0\n    ''') == '288'\n\nassert solution('''\n    5\n    0.1 2.0\n    0\n    0\n    0\n    0\n    0\n    ''') == '288'\n\nassert solution('''\n    5\n    0.1 2.0\n    0\n    0\n    0\n    0\n    0\n    ''') == '288'\n\nassert solution('''\n    5\n    0.1 2.0\n    0\n    0\n    0\n    0\n    0\n    ''') == '288'"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 288, \"Your solution is incorrect. Please check the function signature and input/output constraints.\""
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\") == 288\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\") == 288\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\") == 288\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\") == 288\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\") == 288"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"288.0\\n\"\nprint(\"All tests passed successfully.\")"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"288\"\n"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n0.1 2.0\\n0\\n0\\n0\\n0') == 288"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\\n\") == \"288\"\n\nfrom typing import List\nimport math"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"288.0\""
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution) == '1'\nassert solution(pastimeofwhimsy) == '1'\nassert solution('cat') == '1'\nassert solution('hello') == '1'\nassert solution('tyler') == '1'"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test case failed\""
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('pastimeofwhimsy') == 1\n\nfrom typing import List"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"pastimeofwhimsy\") == \"1\", \"The meow factor of 'pastimeofwhimsy' is incorrect.\""
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"pastimeofwhimsy\") == 1"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('pastimeofwhimsy') == '1'"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"pastimeofwhimsy\") == \"1\""
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"pastimeofwhimsy\") == \"1\""
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"pastimeofwhimsy\") == 1, \"The meow factor of 'pastimeofwhimsy' should be 1\""
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"pastimeofwhimsy\") == 1, \"Test failed\"\nprint(\"Test passed\")"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\\n\"\nassert solution(\"3 4\\n2 2 1 \") == \"NO\\n\"\nassert solution(\"3 4\\n2 2 2 \") == \"NO\\n\"\nassert solution(\"3 4\\n1 1 1 \") == \"NO\\n\"\nassert solution(\"3 4\\n2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 "
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 4\\n1 2 2 1 ') == 'YES\\n'\nassert solution('3 4\\n2 1 2 3 ') == 'NO\\n'\nassert solution('3 4\\n1 2 2 1 1 ') == 'NO\\n'\nassert solution('3 4\\n1 2 2 1 2 ') == 'YES\\n'\nassert solution('3 4\\n1 2 2 1 3 ') == 'NO\\n'\nassert solution('3 4\\n1 2 2 1 4 ') == 'NO\\n'"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\"\nassert solution(\"3 4\\n2 1 1 1 \") == \"YES\"\nassert solution(\"3 4\\n1 2 2 1 3\") == \"YES\"\nassert solution(\"3 4\\n1 2 2 1 \") == \"NO\"\nassert solution(\"3 4\\n1 2 2 \") == \"NO\"\nassert solution(\"3 4\\n1 \") == \"NO\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test {index} failed. Expected: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 4\\n1 2 2 1 ') == 'YES'"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\"\nassert solution(\"4 5\\n3 2 2 3 2 2 \") == \"NO\"\nassert solution(\"2 4\\n1 1 1 2 \") == \"NO\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == output, f\"Test failed for {input} ({output})\"\n"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\" # correct output\n"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \\n\") == \"YES\"\n"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 2\\n3\\n4\\n\") == \"3/1\\n\", \"The solution is not correct.\""
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\"3/1\"\"\"\n\nfrom fractions import Fraction"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, \"Incorrect output for the given test case\"\n"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n3\\n4\") == \"3/1\"\n"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='2\\n1 2\\n3\\n4') == '3/1\\n3/1\\n'"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 2\\n3\\n4\") == \"3/1\"\n"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(data) == output\nfor i in range(0, len(data)):\n    assert int(data[i].strip()) == int(output[i].strip())\nassert sum(int(data[i].strip()) for i in range(len(data))) == int(output.strip())\n"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == output, f\"Your solution is incorrect. \\n\\nExpected output: {output}\\n\\nActual output: {solution(input)}\" for input, output in zip(sample_inputs, sample_outputs)"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 2\\n3\\n4\") == \"3/1\"\nassert solution(\"3\\n1 2\\n4\\n5\") == \"2/1\"\nassert solution(\"4\\n1 2\\n3\\n5\") == \"1/1\"\nassert solution(\"3\\n1 2\\n3\\n4\") == \"1/1\"\nassert solution(\"3\\n1 2\\n3\\n4\") == \"2/1\"\n"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n1 2\\n3\\n4\\n') == '3/1'"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1.114672365\\n\""
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected, f\"The expected output is '{expected}', but got '{solution}'\""
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1.114672365\"\nassert solution() == \"1.114672365\"\nassert solution() == \"1.114672365\"\nassert solution() == \"1.114672365\"\nassert solution() == \"1.114672365\""
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == \"1.114672365\""
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == \"1.114672365\\n\"\n"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n1.2 10.2\\n2.2 15.2') == '1.114672365'"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == \"1.114672365\""
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1.114672365\""
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n1.2 10.2\\n2.2 15.2') == '1.114672365'"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == \"1.114672365\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Test case {index + 1} failed: expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"\"\"\n3\n1 2 3 2\n\"\"\""
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Incorrect output: expected {expected_output}, got {solution(stdin)}\""
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == sample_output, f\"Incorrect output for sample input: {sample_input}, {sample_output}\""
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"3\\n1 2 3 2\"\n\nfrom typing import List"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(solution(stdin)) == '1\\n2 3'\nassert solution(solution(stdin)) == '3\\n1 2 3 2'"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3\\n1 2 3 2\\n\""
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n0 3\\n1 1\\n2 1\\n2 0\") == \"3\\n1 2 3 2\"\nassert solution(\"5\\n1 2\\n2 1\\n1 3\\n2 1\\n2 2\\n3 1\\n4 2\\n4 3\\n5 2\\n5 3\\n6 3\\n7 2\\n8 2\\n9 3\\n10 2\\n11 3\\n12 2\\n13 3\\n14 2\\n15 3\\n16 2\\n17 3\\n18 2\\n19 3\\n20 2\\n21 3\\n22 2\\n23 3\\n24 2\\n25 3\\n26 2\\n27 3\\n28 2\\n29 3\\n30 2\\n31 3\\n32 2\\n33 3\\n34 2\\n35 3\\n36 2\\n37 3\\n38 2\\n39 3\\n40 2\\n41 3\\n42 2\\n43 3\\n44 2\\n45 3\\n46 2\\n47 3\\n48 2\\n49 3\\n50 2\\n51 3\\n52 2\\n53 3\\n54 2\\n55 3\\n56 2\\n57 3\\n58 2\\n59 3\\n60 2\\n61 3\\n62 2\\n63 3\\n64 2\\n65 3\\n66 2\\n67 3\\n68 2\\n69 3\\n70 2\\n71 3\\n72 2\\n73 3\\n74 2\\n75 3\\n76 2\\n77 3\\n78 2\\n79 3\\n80 2\\n81 3\\n82 2\\n83 3\\n84 2\\n85 3\\n86 2\\n87 3\\n88 2\\n89 3\\n90 2\\n91 3\\n92 2\\n93 3\\n94 2\\n95 3\\n96 2\\n97 3\\n98 2\\n99 3\\n100 2\\n101 3\\n102 2\\n103 3\\n104 2\\n105 3\\n106 2\\n107 3\\n108 2\\n109 3\\n110 2\\n111 3\\n112 2\\n113 3\\n114 2\\n115 3\\n116 2\\n117 3\\n118 2\\n119 3\\n120 2\\n121 3\\n122 2\\n123 3\\n124 2\\n125 3\\n126 2\\n127 3\\n128 2\\n129 3\\n130 2\\n131 3\\n132 2\\n133 3\\n134 2\\n135 3\\n136 2\\n137 3\\n138 2\\n139 3\\n140 2\\n141 3\\n142 2\\n143 3\\n144 2\\n145 3\\n146 2\\n147 3\\n148 2\\n149 3\\n150 2\\n151 3\\n152 2\\n"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 3\\n1 1\\n2 1\\n2 0\") == \"3\\n1 2 3 2\\n\"\n"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"\"\"3\n1 2 3 2\n\"\"\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n    # Example solution:\\n    # return 'none'\\n\\n    # Your code goes here...\\n\\n    return 'none'\"\n\nprint(solution)"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == '''\n1\n2\n3\nnone\n'''"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\") == [\"1\", \"2\", \"3\"]\nassert solution(\"3\\n1 1 2\") == [\"none\"]\nassert solution(\"4\\n1 2 1 3\") == [\"none\"]"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"1\\n2\\n3\\n\"\nassert solution(\"3\\n1 1 2\\n\") == \"none\\n\"\nassert solution(\"4\\n1 2 1 3\\n\") == \"none\\n\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n1 2 3') == ['1', '2', '3']\nassert solution('3\\n1 1 2') == ['none']\nassert solution('4\\n1 2 1 3') == ['none']\n\nfrom typing import List"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"1\\n2\\n3\\n\"\nassert solution(\"3\\n1 1 2\\n\") == \"none\\n\"\nassert solution(\"4\\n1 2 1 3\\n\") == \"none\\n\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n1 2 3\\n') == ['1', '2', '3']\nassert solution('3\\n1 1 2\\n') == ['none']\nassert solution('4\\n1 2 1 3\\n') == ['none']"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n1 2 3\\n') == '1\\n2\\n3\\n'\nassert solution('3\\n1 1 2\\n') == 'none\\n'\nassert solution('4\\n1 2 1 3\\n') == 'none\\n'"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == [\"1\", \"2\", \"3\"]\nassert solution(\"3\\n1 1 2\\n\") == [\"none\"]\nassert solution(\"4\\n1 2 1 3\\n\") == [\"none\"]"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2 3\\n') == '1\\n2\\n3\\n'\nassert solution('3\\n1 1 2\\n') == 'none\\n'\nassert solution('4\\n1 2 1 3\\n') == 'none\\n'"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1 0 1 2 3 3\\n7\") == \"5\\n\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('7\\n2 1 0 1 2 3 3') == '5'\nprint('All tests passed!')"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\n2 1 0 1 2 3 3\") == 5, \"The given solution is not correct.\"\nprint(\"The given solution is correct.\")"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\"5\"\"\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1 0 1 2 3 3\") == \"5\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == expected_result\n\nfrom typing import List"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 1 0 1 2 3 3') == '5'"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == expected, f\"Expected: {expected}, Received: {solution(input)}\"\n"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Solution is {solution(stdin)}, expected {expected}\"\n"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n2 1 0 1 2 3 3\") == 5, \"Test case 1 incorrect\"\nassert solution(\"5\\n1 1 0 1 2 3 3\") == 2, \"Test case 2 incorrect\"\nassert solution(\"7\\n3 4 5 6 7 8 9\") == 20, \"Test case 3 incorrect\"\nassert solution(\"6\\n1 1 1 1 1 1 1\") == 0, \"Test case 4 incorrect\""
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\"\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\"\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\"\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\"\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\"\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\"\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\"\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\"\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\"\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\"\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\"\nassert solution(\""
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == expected, \"Test failed\""
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\"\n\nfrom typing import List"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\\n\""
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\") == \"\\n-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\""
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\").read()) == \"\"\"\n-1 -1 -1 -1 -1\n-1 4 5 6 -1\n-1 4 -1 -1 -1\n-1 1 0 1 -1\n-1 3 1 2 -1\n-1 -1 -1 -1 -1\n\"\"\""
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n') == '4\\n5\\n6\\n-1\\n-1\\n-1\\n-1\\n'\nassert solution('3 7\\n.###\\n.##\\n#._\\n_###\\n#._\\n#.#\\n') == '1\\n2\\n3\\n4\\n-1\\n-1\\n-1\\n'\nassert solution('4 7\\n.###\\n.##\\n#._\\n_###\\n#._\\n#.#\\n') == '1\\n2\\n3\\n4\\n5\\n-1\\n-1\\n-1\\n'\nassert solution('7 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n') == '-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n'\n\nfrom collections import defaultdict"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\") == '-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1'\n\nfrom typing import List"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\""
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3') == '6\\n'\nassert solution('4 6 0\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3') == 'Impossible\\n'\nassert solution('4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n4 5 6\\n1 2 1\\n2 3 2\\n3 4 3') == 'Impossible\\n'\nassert solution('4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n4 5 6\\n1 2 1\\n2 3 2\\n3 4 3\\n7 8 10') == 'Impossible\\n'"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n\") == \"6\\n\"\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n1 1 1\\n1 1 1\\n1 1 1\\n2 2 2\\n2 2 2\\n2 2 2\\n\") == \"impossible\\n\""
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n') == '6\\n'\nprint(\"All test cases pass!\")"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n\") == \"6\\n\""
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == 6\nprint(\"All tests passed!\")"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('sample.in', 'r')) == '6\\n'\nassert solution(open('sample.in', 'r').read()) == '6\\n'"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == 6\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 5\") == \"impossible\"\n"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"6\\n\""
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == \"6\\n\"\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n4 5 2\") == \"Impossible\\n\""
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"6\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 4, 2, 1) == \"01001\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 4, 2, 1) == \"01001\"\nassert solution(3, 4, 1, 2) == \"01001\"\nassert solution(4, 4, 2, 2) == \"01001\"\nassert solution(4, 4, 1, 1) == \"01001\"\nassert solution(5, 5, 2, 2) == \"01001\"\nassert solution(5, 5, 1, 1) == \"01001\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"01001\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 4, 2, 1) == \"01001\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"01001\"\nprint(\"pass\")"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\"\nassert solution(\"2 3 5 4\") == \"impossible\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\"\n"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 4 2 1') == '01001'"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\nassert solution(\"5 5 4\\n1 1\\n2 2\\n3 3\\n4 4\\n1 1\") == \"possible\\n< 1\\n< 2\\n< 3\\n< 4\\n> 1\\n> 2\\n> 3\\n> 4\"\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\nassert solution(\"5 5 4\\n1 1\\n2 2\\n3 3\\n4 4\\n1 1\") == \"possible\\n< 1\\n< 2\\n< 3\\n< 4\\n> 1\\n> 2\\n> 3\\n> 4\"\nassert solution(\"5 5 4\\n1 1\\n2 2\\n3 3\\n4 4\\n1 1\") == \"possible\\n< 1\\n< 2\\n< 3\\n< 4\\n> 1\\n> 2\\n> 3\\n> 4\"\nassert solution(\"5 5 4\\n1 1\\n2 2\\n3 3\\n4 4\\n1 1\") == \"possible\\n< 1\\n< 2\\n< 3\\n< 4\\n> 1\\n> 2\\n> 3\\n> 4\"\nassert solution(\"5 5 4\\n1 1\\n2 2\\n3 3\\n4 4\\n1 1\") == \"possible\\n< 1\\n< 2\\n< 3\\n< 4\\n> 1\\n> 2\\n> 3\\n> 4\"\nassert solution(\"5 5 4\\n1 1\\n2 2\\n3 3\\n4 4\\n1 1\") == \"possible\\n< 1\\n< 2\\n< 3\\n< 4\\n> 1\\n> 2\\n> 3\\n> 4\"\nassert solution(\"5 5 4\\n1 1\\n2 2\\n3 3\\n4 4\\n1 1\") == \"possible\\n< 1\\n< 2\\n< 3\\n< 4\\n> 1\\n> 2\\n> 3\\n> 4\"\nassert solution(\"5 5 4\\n1 1\\n2 2\\n3 3\\n4 4\\n1 1\") == \"possible\\n< 1\\n< 2\\n< 3\\n< 4\\n> 1\\n> 2\\n> 3\\n> 4\"\nassert solution(\"5 5 4\\n1 1\\n2 2\\n3 3\\n4 4\\n1 1\") == \"possible\\n< 1\\n< 2\\n< 3\\n< 4\\n> 1\\n> 2\\n> 3\\n> 4\"\nassert solution(\"5 5 4\\n1 1\\n2 2\\n3 3\\n4 4\\n1 1\") == \"possible\\n< 1\\n< 2\\n< 3\\n< 4\\n> 1\\n> 2\\n> 3\\n> 4\"\nassert solution(\"5 5 4\\n1 1\\n2 2\\n3 3\\n4 4\\"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"possible\\n<1\\n^2\\n<2\\n^3\\n<3\"\n"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\") == \"possible\"\n"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\nassert solution() == \"possible\\n< 1\\n< 2\\n< 3\"\nassert solution() == \"possible\\n< 1\\n< 2\\n< 3\"\nassert solution() == \"possible\\n< 1\\n< 2\\n< 3\"\nassert solution() == \"impossible\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 4, 6) == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\n"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution.test_cases[0]), solution.test_cases[0]"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == \"2.0\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n\") == \"2.0\"\n"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2.0\"\nprint(solution(input()))"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == \"2.0\\n\"\n"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2.0\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3') == '2.0'\n"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == \"2.0\\n\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == \"2.0\\n\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n    4\n    0 0 1\n    0 1 1\n    2 0 3\n    2 1 3\n    ''') == '2.0\\n'"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == 2.0, \"The output should be 2.0.\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == \"4\\n\"\n\nLuka is slacking again during chemistry class, while the teacher is explaining Avogadro's law.\n\nLuka first drew a table consisting of $3$ rows and $N$ columns. Then he wrote the numbers $1$ to $N$ into the first row in arbitrary order, each number appearing exactly once. In the other two rows he also wrote integers between $1$ and $N$, but didn\u2019t care how many times a number appeared.\n\nLuka can now delete any set of columns from the table. After doing so, he sorts the numbers in each row in ascending order.\n\nHe wants to obtain a table in which all three rows are identical after sorting. Write a program that determines the smallest number of columns he must delete.\n\nFor instance, in the first sample input below, Luka can delete the second, fourth, sixth and seventh columns. After deleting these and sorting each row, all three rows contain the numbers 1, 3 and 5."
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\\n\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2') == '4'"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == 4\nassert solution(stdin=\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == 4\nassert solution(stdin=\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == 4"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\\n\") == \"4\"\n"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == \"4\\n\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == \"4\", \"Luka must delete 4 columns.\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == 4"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '4', 'Luka can delete the second, fourth, sixth and seventh columns.'"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == 4, \"Luka must delete 4 columns.\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n-10 0\\n-10 10') == '2\\ndef solution(stdin: str) -> str:\\npass\\n'\n"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\", \"Output should be 2\"\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=r\"\"\"\n4\n-10 0\n-10 10\n\"\"\") == \"2\\n2\\n\"\n\nassert solution(stdin=r\"\"\"\n5\n-5 0\n5 0\n5 5\n5 -5\n\"\"\") == \"2\\n2\\n\"\n\nassert solution(stdin=r\"\"\"\n1\n0 0\n\"\"\") == \"1\\n1\\n\"\n\nassert solution(stdin=r\"\"\"\n3\n0 0\n5 5\n10 10\n\"\"\") == \"2\\n2\\n\"\n\nassert solution(stdin=r\"\"\"\n20\n0 0\n0 10\n10 0\n10 10\n0 10\n0 -10\n-10 0\n-10 10\n\"\"\") == \"3\\n3\\n\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == output_data, f\"The expected output is {output_data}, but got {solution(input_data)} instead.\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n-10 0\\n-10 10') == '2\\n'\nassert solution('6\\n-10 0\\n-10 10') == '3\\n'\nassert solution('10\\n-10 0\\n-10 10') == '4\\n'\nassert solution('1000\\n-10000\\n10000') == '5\\n'\nassert solution('10000\\n-10000\\n10000') == '5\\n'\nassert solution('10000000\\n-10000000\\n10000000') == '6\\n'\nassert solution('100000000\\n-10000000\\n100000000') == '6\\n'\n"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\\n\"\nassert solution(\"5\\n-10 0\\n-10 10\") == \"2\\n\"\nassert solution(\"6\\n-10 0\\n-10 10\") == \"3\\n\"\nassert solution(\"7\\n-10 0\\n-10 10\") == \"3\\n\"\nassert solution(\"8\\n-10 0\\n-10 10\") == \"4\\n\"\nassert solution(\"9\\n-10 0\\n-10 10\") == \"4\\n\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\\n\", \"The correct solution is not provided.\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == 2, \"Test Case 1 Failed\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"4\\n-10 0\\n-10 10\") == \"2\\n\"\nassert solution(stdin=\"4\\n50 50\") == \"100\\n\"\nassert solution(stdin=\"4\\n10 10\") == \"0\\n\""
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 5\") == \"0\"\nassert solution(\"2 6\") == \"2\"\nassert solution(\"5 12\") == \"4\"\nassert solution(\"100 1000000\") == \"100\""
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0\\n\""
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 5\") == \"0\\n\""
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 5\") == \"0\\n\""
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    1 5\n    2 3\n    3 5\n    4 6\n    5 7\n''') == '0'\n\nassert solution('''\n    3 5\n    1 2\n    2 3\n    3 4\n    4 5\n''') == '4'\n\nassert solution('''\n    3 5\n    1 2\n    2 3\n    3 4\n    4 5\n''') == '4'\n\nassert solution('''\n    4 5\n    1 2\n    2 3\n    3 4\n    4 5\n''') == '4'\n\nassert solution('''\n    1 4\n    2 3\n    3 4\n    4 5\n''') == '3'\n\nassert solution('''\n    5 7\n    1 2\n    2 3\n    3 4\n    4 5\n''') == '6'\n\nassert solution('''\n    5 7\n    1 2\n    2 3\n    3 4\n    4 5\n''') == '6'"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 6) == \"0\"\nassert solution(3, 8) == \"3\"\nassert solution(5, 4) == \"2\"\nassert solution(5, 6) == \"5\"\nassert solution(5, 8) == \"8\""
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 0, \"The solution is incorrect.\""
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 5\") == \"0\\n\"\nassert solution(\"10 100\") == \"25\\n\"\nassert solution(\"10 200\") == \"150\\n\"\nassert solution(\"1000 2000\") == \"10000\\n\""
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0\""
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"0\\n\", \"The output should be 0, but it is {}\".format(solution(stdin))"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\") == [\"0 0\", \"1 1\"]"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\") == \"0 0\\n1 1\\n\", \"The output is incorrect\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(None) == \"\"  # Solution not provided"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1\n\"\"\") == \"0 0\\n1 1\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0') == '0 0\\n1 1\\n'\nassert solution('100 100\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1\\n1 0\\"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Expected output: {expected}, but got: {solution(input())}\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1') == '0 0\\n1 1'"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '''0 0\n1 1\n''', 'Please provide the correct input and output for the solution.'"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\"\n\nassert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\"\n\nassert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\"\n\nassert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\""
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\""
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n    1 2 0.950000\n    0.700000 50\n    ''') == '44.975'"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\n"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\""
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 2 0.950000\\n0.700000 50') == '44.975'\n"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(sample_input)}\""
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\\n\") == \"44.975\"\n"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 2 0.950000\\n0.700000 50') == '44.975'"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\nassert solution(\"1 2 0.950000\\n0.700001 50\") == \"45.975\"\nassert solution(\"1 2 0.950000\\n0.700000 49\") == \"45.975\"\nassert solution(\"1 2 0.950000\\n0.700000 50\") == \"45.975\"\nassert solution(\"1 2 0.950000\\n0.700001 50\") == \"46.975\"\nassert solution(\"1 2 0.950000\\n0.700000 49\") == \"46.975\"\nassert solution(\"1 2 0.950000\\n0.700000 50\") == \"46.975\"\nassert solution(\"1 2 0.950000\\n0.700001 50\") == \"47.975\"\nassert solution(\"1 2 0.950000\\n0.700000 49\") == \"47.975\"\nassert solution(\"1 2 0.950000\\n0.700000 50\") == \"47.975\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == '2'"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1') == '2'\nassert solution('1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1') == 'IMPOSSIBLE'\nassert solution('3 1 2\\n1 2\\n1 3\\n3 4\\n3 5\\n2 6\\n1 7') == '2'"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\") == \"IMPOSSIBLE\\n\"\nassert solution(\"1 1\\n3 3\\n2 2\\n1 1\") == \"IMPOSSIBLE\\n\"\nassert solution(\"3 1 1\\n3 3 3\\n2 2 2\\n1 1 1\\n2 2 2\\n1 1 1\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\ndef solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2\\n2\\n2\\n\"\nassert solution(open(\"input1.txt\", \"r\")) == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\\n\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\npass'"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\"\n"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3 2 3\n1 1\n5 2\n1 3\n3\n3\n2\n1\n) == \"2\\n\""
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == \"4.0\"\nassert solution(\"6 4\\n0.0 0.0\\n4.0 0.0\\n2.0 2.0\\n0.0 2.0\\n2.0 0.0\") == \"1.0\"\nassert solution(\"4 4\\n0.0 0.0\\n1.0 0.0\\n0.5 0.5\\n0.0 0.5\\n0.5 0.0\") == \"0.5\"\nassert solution(\"2 2\\n0.0 0.0\\n0.0 1.0\\n0.5 0.5\\n1.0 0.0\\n0.5 0.5\") == \"0.5\"\nassert solution(\"2 2\\n0.0 0.0\\n0.0 1.0\\n0.5 0.5\\n1.0 0.0\\n0.5 0.5\") == \"0.5\"\nassert solution(\"1 1\\n0.0 0.0\\n0.0 0.0\\n0.0 0.0\\n0.0 0.0\\n0.0 0.0\") == \"0.0\"\nassert solution(\"10 10\\n0.0 0.0\\n0.0 0.0\\n0.0 0.0\\n0.0 0.0\\n0.0 0.0\") == \"0.0\"\n"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == 4.0\nprint(\"All tests passed!\")"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == \"4.0\""
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0') == 4.0"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"4.0\\n\", \"Test case not passed\""
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\\n') == '4.0'"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '4.0', 'Your solution is incorrect. Please check the input and output.'"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == 4.0"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0') == '4.0'"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\") == \"18000\\n\"\nassert solution(\"5\\n300 15\\n180 20\\n220 20\\n160 15\") == \"5500\\n\"\nassert solution(\"6\\n300 20\\n180 20\\n220 15\\n190 20\\n150 15\\n110 10\") == \"5500\\n\""
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\") == \"18000\"\nassert solution(\"10\\n40 50\\n50 60\\n40 30\\n100 20\") == \"8000\"\nassert solution(\"5\\n20 30\\n10 40\\n15 50\\n25 35\") == \"3000\"\nassert solution(\"3\\n150 20\\n25 5\\n40 10\") == \"2000\"\n"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"18000\""
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"18000\\n\", \"Incorrect output\""
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '18000'\n"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\") == \"18000\""
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 18000\n"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 18000, \"Please implement the solution function and test it.\""
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\") == \"18000\""
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"18000\\n\"\n"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\"\n"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"The output is not correct: {output}, but {solution(input())}.\"\nfor _ in range(test_cases):\n    message = input().strip()\n    stickers = list(map(int, input().split()))\n    if len(stickers) > 2:\n        for i in range(len(stickers) - 1):\n            for j in range(i + 1, len(stickers)):\n                if stickers[i] + stickers[j] > 2:\n                    break\n            else:\n                break\n        else:\n            print(\"28\")\n    else:\n        print(\"IMPOSSIBLE\")"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"28\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\"\nprint(\"Test Passed\")\n"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\"\n"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == 28, \"Correct result\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == 28, \"Correct result\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == 28, \"Correct result\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == 28, \"Correct result\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == 28, \"Correct result\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == 28, \"Correct result\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == 28, \"Correct result\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == 28, \"Correct result\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == 28, \"Correct result\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == 28, \"Correct result\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == 28, \"Correct result\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == 28, \"Correct result\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == 28, \"Correct result\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == 28, \"Correct result\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == 28, \"Correct result\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == 28, \"Correct result\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == 28, \"Correct result\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == 28, \"Correct result\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == 28, \"Correct result\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == 28, \"Correct result\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == 28, \"Correct result\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == "
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\\n\") == \"28\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nassert solution(\"BUYSTICKERS\\n5\\nSTICKY 10\\nSTICKY 20\\nSTICKY 30\\nSTICKY 40\\nSTICKY 50\\nSTICKY 60\\nSTICKY 70\\nSTICKY 80\\nSTICKY 90\\nSTICKY 100\\n\") == \"IMPOSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nassert solution(\"BUYSTICKERS\\n4\\nSTICKY 10\\nSTICKY 20\\nSTICKY 30\\nSTICKY 40\\nSTICKY 50\\nSTICKY 60\\nSTICKY 70\\nSTICKY 80\\nSTICKY 90\\nSTICKY 100\\n\") == \"28\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\\n\") == \"28\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\\n\") == \"28\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3') == ['INDV 1', 'INDV 2', 'CORP 1', 'INDV 4', 'CORP 2', 'INDV 3', 'CORP 3', 'INDV 5']"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\"\nassert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\"\nassert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Wrong output for input {input()}\"\n\nfrom typing import List"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\"\nassert solution(\"2 2\\n1 2\\n2 3\\n3 2\\n4 2\\n5 2\\n1 1\") == \"INDV 2\\nINDV 3\\nINDV 4\\nINDV 5\\nCORP 1\\nCORP 2\\nCORP 3\"\nassert solution(\"2 1\\n1 1\\n2 3\\n3 1\\n4 1\\n5 1\\n1 1\") == \"INDV 1\\nINDV 2\\nINDV 3\\nINDV 4\\nINDV 5\\nCORP 1\\nCORP 2\\nCORP 3\"\nassert solution(\"2 1\\n1 1\\n2 3\\n3 1\\n4 1\\n5 1\\n1 2\") == \"INDV 2\\nINDV 3\\nINDV 4\\nINDV 5\\nCORP 1\\nCORP 2\\nCORP 3\"\nassert solution(\"2 1\\n1 1\\n2 3\\n3 1\\n4 1\\n5 1\\n1 3\") == \"INDV 3\\nINDV 4\\nINDV 5\\nCORP 1\\nCORP 2\\nCORP 3\\nINDV 1\\nINDV 2\\nINDV 5\"\nassert solution(\"3 2\\n1 2\\n2 3\\n3 1\\n4 1\\n5 1\\n1 1\") == \"INDV 2\\nINDV 3\\nINDV 4\\nINDV 5\\nCORP 1\\nCORP 2\\nCORP 3\"\nassert solution(\"2 1\\n1 1\\n2 3\\n3 1\\n4 1\\n5 1\\n1 3\") == \"INDV 3\\nINDV 4\\nINDV 5\\nCORP 1\\nCORP 2\\nCORP 3\\nINDV 1\\nINDV 2\\nINDV 5\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\", \"Test failed\"\n"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == \"\"\"\nINDV 1\nINDV 2\nCORP 1\nINDV 4\nCORP 2\nINDV 3\nCORP 3\nINDV 5\n\"\"\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == sample_output, \"Your solution is incorrect.\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\\n\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n2\\n3\\n\") == \"2.4142135624\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution()) == \"2.4142135624\"\n"
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2.4142135624\", \"Test case 1 failed\"\nassert solution(input()) == \"2.4142135624\", \"Test case 2 failed\"\nassert solution(input()) == \"2.4142135624\", \"Test case 3 failed\"\nassert solution(input()) == \"2.4142135624\", \"Test case 4 failed\"\nassert solution(input()) == \"2.4142135624\", \"Test case 5 failed\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2.4142135624\"\n"
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\\n\"\nassert solution(\"5\\n3 3\\n3\\n2\\n2\\n\") == \"1.7736383645\\n\"\nassert solution(\"5\\n1 1\\n2\\n3\\n4\\n\") == \"2.2458857703\\n\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\\n\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\\n\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\\n\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\\n\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\\n\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == 2.4142135624\nassert solution(\"4\\n10 1\\n1\\n2\\n10\\n10\\n\") == 2.4142135624\nassert solution(\"4\\n10 1\\n1\\n3\\n10\\n10\\n\") == 2.4142135624\nassert solution(\"4\\n10 1\\n1\\n4\\n10\\n10\\n\") == 2.4142135624\nassert solution(\"4\\n10 1\\n1\\n5\\n10\\n10\\n\") == 2.4142135624"
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"Phew, that was the last one!\"\n"
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == \"2.4142135624\"\n\nfrom typing import List"
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2.4142135624\", \"Testcase failed\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 2.4142135624\n"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\nassert solution(\"5 0\\n1 3\") == \"0\\n\"\nassert solution(\"1 1000000000\") == \"1\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\\n\") == \"15\\n\"\n"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\"\n"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    3\n    1 2 5\n    3 1 5\n    2 1\n    5 0\n    1 3\n    \"\"\"\n) == \"15\\n\"\nassert solution(\n    \"\"\"\n    2\n    1 1\n    2 1\n    1\n    \"\"\"\n) == \"1\\n\"\nassert solution(\n    \"\"\"\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    \"\"\"\n) == \"1\\n\"\nassert solution(\n    \"\"\"\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    \"\"\"\n) == \"1\\n\"\nassert solution(\n    \"\"\"\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    \"\"\"\n) == \"1\\n\"\nassert solution(\n    \"\"\"\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    \"\"\"\n) == \"1\\n\"\nassert solution(\n    \"\"\"\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    \"\"\"\n) == \"1\\n\"\nassert solution(\n    \"\"\"\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    \"\"\"\n) == \"1\\n\"\nassert solution(\n    \"\"\"\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    \"\"\"\n) == \"1\\n\"\nassert solution(\n    \"\"\"\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    \"\"\"\n) == \"1\\n\"\nassert solution(\n    \"\"\"\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    \"\"\"\n) == \"1\\n\"\nassert solution(\n    \"\"\"\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    \"\"\"\n) == \"1\\n\"\nassert solution(\n    \"\"\"\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    \"\"\"\n) == \"1\\n\"\nassert solution(\n    \"\"\"\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    \"\"\"\n) == \"1\\n\"\nassert solution(\n    \"\"\"\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    \"\"\"\n) == \"1\\n\"\nassert solution(\n    \"\"\"\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    \"\"\"\n) == \"1\\n\"\nassert solution(\n    \"\"\"\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    \"\"\"\n) == \"1\\n\"\nassert solution(\n    \"\"\"\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    \"\"\"\n) == \"1\\n\"\nassert solution(\n    \"\"\"\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    \"\"\"\n) == \"1\\n\"\nassert solution(\n    \"\"\"\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    \"\"\"\n) == \"1\\n\"\nassert solution(\n    \"\"\"\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    \"\"\"\n) == \"1\\n\"\nassert solution(\n    \"\"\"\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    \"\"\"\n) == \"1\\n\"\nassert solution(\n    \"\"\"\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    \"\"\"\n) == \"1\\n\"\nassert solution(\n    \"\"\"\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    \"\"\"\n) == \"1\\n\"\nassert solution(\n    \"\"\"\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    \"\"\"\n) == \"1\\n\"\nassert solution(\n    \"\"\"\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    \"\"\"\n) == \"1\\n\"\nassert solution(\n    \"\"\"\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    \"\"\"\n) == \"1\\n\"\nassert solution(\n    \"\"\"\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    \"\"\"\n) == \"1\\n\"\nassert solution(\n    \"\"\"\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    \"\"\"\n) == \"1\\n\"\nassert solution(\n    \"\"\"\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    \"\"\"\n) == \"1\\n\"\nassert solution(\n    \"\"\"\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    \"\"\"\n) == \"1\\n\"\nassert solution(\n    \"\"\"\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    1\n    \"\"\"\n) == \""
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\\n\") == \"15\\n\"\n"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"15\"\n"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    3\n    1 2 5\n    3 1 5\n    2 1\n    5 0\n    1 3\n    ''') == '15'\n\nassert solution('''\n    5\n    2 3 4 5\n    6 7 8 9 10\n    11 12 13 14 15\n    16 17 18 19 20\n    21 22 23 24 25\n    ''') == '25'"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 15, \"The given solution is incorrect\""
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\n"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"15\\n\""
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5 3 3 4\") == \"\"\".....\n..BBC\n..A.C\n....C\n@DDDD\n"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n5 5 3 3 4\n''') == '''\n.....\n..BBC\n..A.C\n....C\n@DDDD\n"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"....\n..BBC\n..A.C\n....C\n@DDDD\n"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 5 3 3 4\") == \".....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected\n"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r').read()) == expected, f'Expected \"{expected}\" but got \"{solution(open('input.txt', 'r').read())}.\"'"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 5 3 3 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 5 3 3 4\") == \".....\\n..BBC\\n..A.C\\n....C\\n@DDDD\""
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {solution(input())}!= {expected_output}\""
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    5 5 3 3 4\n    \"\"\"\n) == \".....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    10 5 3 3 4\n    \"\"\"\n) == \"....C\\n..A.C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    10 10 3 3 4\n    \"\"\"\n) == \"....C\\n..A.C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    10 10 10 3 4\n    \"\"\"\n) == \".....\\n..A.C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_string) == output_string, f\"Expected: {output_string}, got: {solution(input_string)}\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\\n\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n111\\n000\\n000\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n001\\n00"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 3\\n111\\n001\\n000\\n111\\n000') == '001\\n001\\n001\\n111\\n200'"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 3\\n111\\n001\\n000\\n111\\n000') == '001\\n001\\n001\\n111\\n200'"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Got: {solution(input())}, expected: {expected_output}\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\"\nassert solution(\"5 3\\n
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\"\nassert solution(\"5 5\\n111\\n110\\n101\\n100\") == \"111\\n200\"\nassert solution(\"5 6\\n111\\n101\\n100\\n101\\n111\") == \"111\\n111\\n200\"\nassert solution(\"10 10\\n111\\n101\\n100\\n101\\n111\\n110\\n101\\n100\") == \"111\\n111\\n200\"\nassert solution(\"10 11\\n111\\n101\\n100\\n101\\n111\\n110\\n101\\n100\") == \"111\\n111\\n111\\n200\"\nassert solution(\"10 12\\n111\\n101\\n100\\n101\\n111\\n110\\n101\\n100\") == \"111\\n111\\n111\\n111\\n200\"\nassert solution(\"10 13\\n111\\n101\\n100\\n101\\n111\\n110\\n101\\n100\") == \"111\\n111\\n111\\n111\\n111\\n200\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"21/14\\n20/9\\n19/2\\n19/15\\n10/5\\n20/17\\n19/18\\n19/12\\n\") == \"Impossible\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"19 20\\n17 15 14 13 7 2\"\nprint(\"Impossible\")"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n20/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n20/2\\n19/17\\n20/1\\n19/17\\n20/5\\n19/17\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n20/2\\n19/17\\n20/1\\n19/17\\n20/5\\n19/17\\n20/5\\n19/17\\n20/11\\n19/17\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n20/2\\n19/17\\n20/1\\n19/17\\n20/5\\n19/17\\n20/5\\n19/17\\n20/11\\n19/17\\n20/5\\n19/17\\n20/5\\n19/17\\n20/11\\n19/17\\n20/12\\n19/17\\n20/13\\n19/17\\n20/14\\n19/17\\n20/15\\n19/17\\n20/16\\n19/17\\n20/17\\n19/17\\n20/18\\n19/17\\n20/19\\n19/17\\n20/20\\n19/17\\n20/21\\n19/17\\n20/22\\n19/17\\n20/23\\n19/17\\n20/24\\n19/17\\n20/25\\n19/17\\n20/26\\n19/17\\n20/27\\n19/17\\n20/28\\n19/17\\n20/29\\n19/17\\n20/30\\n19/17\\n20/31\\n19/17\\n20/32\\n19/17\\n20/33\\n1"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == output, f\"Expected output: {output}, Received output: {solution(input)}\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n\") == \"impossible\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n\") == \"19 20\\n17 15 14 13 7 2\\n\"\nassert solution(\"4/3\\n20/7\\n19/14\\n19/13\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n20/1\\n\") == \"Impossible\\n\"\nassert solution(\"25/2\\n2/3\\n25/10\\n20/1\\n\") == \"Impossible\\n\"\nassert solution(\"25/2\\n2/3\\n15/6\\n20/1\\n\") == \"15 12 10 7 4 2\\n\"\nassert solution(\"25/2\\n2/3\\n10/5\\n20/1\\n\") == \"10 5 3 2 1\\n\"\nassert solution(\"25/2\\n2/3\\n10/6\\n20/1\\n\") == \"10 6 5 4 3 2\\n\"\nassert solution(\"25/2\\n2/3\\n10/7\\n20/1\\n\") == \"10 7 6 5 4 3\\n\"\nassert solution(\"25/2\\n2/3\\n10/8\\n20/1\\n\") == \"10 8 7 6 5 4\\n\"\nassert solution(\"25/2\\n2/3\\n10/9\\n20/1\\n\") == \"10 9 8 7 6 5\\n\"\nassert solution(\"25/2\\n2/3\\n10/10\\n20/1\\n\") == \"10 10 9 8 7 6\\n\"\nassert solution(\"25/2\\n2/3\\n10/11\\n20/1\\n\") == \"10 11 10 9 8 7\\n\"\nassert solution(\"25/2\\n2/3\\n10/12\\n20/1\\n\") == \"10 12 11 10 9 8\\n\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"19/13\\n19/14\\n19/15\\n19/17\\n19/2\\n19/17\") == \"impossible\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"19 20\\n17 15 14 13 7 2\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''19/13\n10/1\n19/14\n4/3\n20/7\n19/7\n20/13\n19/15\n10/7\n20/17\n19/2\n19/17''') == '19 20\\n17 15 14 13 7 2'"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n\") == \"possible\"\nassert solution(\"4 3\\n2 0\\n0 2\\n1 2 3\\n2 2 2\\n3 0 3\\n\") == \"impossible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\") == \"possible\"\nassert solution(\"1 3 3\\n2 1 3\\n3 2 2\") == \"impossible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 3\n0 0\n0 2\n2 0\n1 2 3\n2 2 2\n3 0 3\n\"\"\") == \"possible\"\n\nassert solution(\"\"\"\n4 4\n0 0\n0 2\n2 0\n1 2 3\n2 2 2\n3 0 3\n0 2 3\n1 0 0\n2 3 0\n0 0 3\n1 0 0\n\"\"\") == \"impossible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\") == \"possible\"\nassert solution(\"4 4\\n0 0\\n0 1\\n1 0\\n1 1\\n1 2\\n2 1\\n2 2\\n3 1\\n3 2\\n4 2\\n4 3\\n4 4\") == \"impossible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"possible\"\n"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n\") == \"possible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\") == \"possible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n\") == \"impossible\"\nassert solution(\"1 1\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n\") == \"possible\"\nassert solution(\"1 1\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n\") == \"possible\"\nassert solution(\"2 2\\n0 0\\n1 1\\n2 2\\n3 3\\n3 3\\n0 0\\n1 1\\n2 2\\n3 3\\n3 3\\n\") == \"possible\"\nassert solution(\"5 5\\n3 3\\n1 1\\n2 2\\n0 0\\n2 2\\n1 1\\n3 3\\n0 0\\n2 2\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n\") == \"possible\"\nassert solution(\"10 10\\n3 3\\n1 1\\n2 2\\n0 0\\n1 1\\n0 0\\n3 3\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n3 3\\n3 3\\n3 3\\n3 3\\n\") == \"possible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == expected_output, f\"Expected output: {expected_output}, but got: {solution(sample_input)}\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"possible\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 4, \"Expected: 4, but got: {}\".format(solution())"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 4, \"Your function is not correct\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n2\\n2\") == \"4\"\nassert solution(\"4 3\\n2\\n3\") == \"3\"\nassert solution(\"5 2\\n2\\n1\") == \"2\"\nassert solution(\"4 5\\n3\\n2\") == \"2\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n2\\n2\") == 4, \"Incorrect output\"\nassert solution(\"5 3\\n1\\n2\\n3\\n1\") == 5, \"Incorrect output\"\nassert solution(\"6 4\\n3\\n2\\n3\\n1\\n2\") == 6, \"Incorrect output\"\nassert solution(\"7 5\\n2\\n2\\n2\\n2\\n1\") == 7, \"Incorrect output\"\nassert solution(\"8 6\\n3\\n2\\n2\\n2\\n2\\n1\") == 8, \"Incorrect output\"\nassert solution(\"9 7\\n4\\n2\\n2\\n2\\n2\\n2\\n1\") == 9, \"Incorrect output\"\nassert solution(\"10 8\\n5\\n3\\n2\\n2\\n2\\n2\\n2\\n1\") == 10, \"Incorrect output\"\nassert solution(\"11 9\\n6\\n4\\n3\\n2\\n2\\n2\\n2\\n2\\n1\") == 11, \"Incorrect output\"\nassert solution(\"12 10\\n7\\n5\\n4\\n3\\n2\\n2\\n2\\n2\\n2\\n1\") == 12, \"Incorrect output\"\nassert solution(\"13 11\\n8\\n6\\n5\\n4\\n3\\n2\\n2\\n2\\n2\\n2\\n1\") == 13, \"Incorrect output\"\nassert solution(\"14 12\\n9\\n7\\n6\\n5\\n4\\n3\\n2\\n2\\n2\\n2\\n2\\n1\") == 14, \"Incorrect output\"\nassert solution(\"15 13\\n10\\n8\\n7\\n6\\n5\\n4\\n3\\n2\\n2\\n2\\n2\\n2\\n1\") == 15, \"Incorrect output\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 2\\n2\\n2\\n') == 4\nassert solution('4 2\\n3\\n2\\n') == 4\nassert solution('4 2\\n4\\n2\\n') == 4\nassert solution('4 2\\n3\\n3\\n') == 4\nassert solution('4 2\\n3\\n2\\n') == 4\nassert solution('4 2\\n2\\n4\\n') == 4"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n2\\n2\\n\") == 4"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n2\\n2\") == 4\nassert solution(\"5 3\\n1\\n2\\n3\") == 4\nassert solution(\"4 3\\n2\\n3\\n3\") == 5"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n2\\n2\") == 4\n"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n4 2\n2\n2\n''') == '4\\n'"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n1 2\\n1 3\") == \"Mirko\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"Mirko\", \"Incorrect solution. Expected 'Mirko', got '{}'\".format(solution)"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r\"\"\"\n3\n1 1\n1 2\n1 3\n\"\"\") == \"Mirko\\n\"\n\nassert solution(r\"\"\"\n3\n2 1\n3 2\n3 3\n\"\"\") == \"Slavko\\n\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n1 2\\n1 3\\n\") == \"Mirko\", \"Expected output: Mirko\"\nassert solution(\"1 1\\n2 1\\n3 1\\n\") == \"Slavko\", \"Expected output: Slavko\"\nassert solution(\"2 1\\n1 1\\n3 1\\n\") == \"Mirko\", \"Expected output: Mirko\"\nassert solution(\"3 1\\n1 1\\n2 1\\n\") == \"Slavko\", \"Expected output: Slavko\"\nassert solution(\"1 1\\n1 1\\n1 1\\n\") == \"Mirko\", \"Expected output: Mirko\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n1 2\\n1 3\") == \"Mirko\"\nassert solution(\"1 1\\n1 2\\n1 3\\n4 4\") == \"Slavko\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == \"Mirko\"\n"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Mirko\"\nprint(\"def solution(stdin: str) -> str:\")\nprint(\"    pass\")"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\\n\") == \"Mirko\\n\"\nassert solution(\"1\\n1 2\\n1 3\\n\") == \"Slavko\\n\"\nassert solution(\"4\\n1 1\\n1 2\\n1 3\\n\") == \"No one\\n\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\") == \"Mirko\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"Mirko\", \"Incorrect output\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '2 4'"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == ['2 4']"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n6\\n34\\n38') == '2 4\\n', \"The output should be '2 4\\n', but got '{}'.\".format(solution('3\\n6\\n34\\n38'))"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n6\\n34\\n38\") == \"2 4\", \"The output should be 2 4, but got: \" + solution(\"3\\n6\\n34\\n38\")"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"2 4\", \"Test 1 failed\"\nassert solution(6) == \"2 4\", \"Test 2 failed\"\nassert solution(34) == \"2 2\", \"Test 3 failed\"\nassert solution(38) == \"2 4\", \"Test 4 failed\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == ['2 4', 'def solution(stdin: str) -> str: pass']\n"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"2 4\", \"Luka started driving international routes with his truck. His biggest problem is the border with Slovenia. The border is a point of entrance into the European Union, so every truck is thoroughly examined. Because of this, Luka always has to wait several hours there. To kill the time, he comes up with various logic and math games.\n\nIn one of them, Luka first reads the numbers off of $N$ license plates and writes them down on a piece of paper. Then he tries to find an integer $M$ greater than $1$ such that all integers on the paper give the same remainder when divided by $M$. Luka tries to find as many such integers $M$ as possible.\n\nWrite a program that, given Luka\u2019s $N$ integers, determines all such integers $M$.\n\nSolution:\nTo solve this problem, we need to find all possible values of $M$ that satisfy the given constraints. One way to do this is to try all possible values of $M$ and check if they satisfy the conditions. If one of them satisfies the conditions, we add it to a list of valid integers $M$.\n\nHere's the Python code to solve the problem: \n\n```python\n"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, \"Your solution is incorrect. Please check the problem statement for the correctness of your code.\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(10) == '2 4\\n'"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n6\\n34\\n38\") == \"2 4\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1, 10000, 400000, 500000) == 12, \"Sample Input 1\"\nassert solution(2, 8, 10, 2, 1000000) == 12, \"Sample Input 2\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(None) == \"Please provide input\"\nassert solution(\"5\\n10000 400000 500000 900000\") == \"Please provide input\"\nassert solution(\"4\\n10000 400000 500000 900000\") == \"12\"\nassert solution(\"5\\n8 10 2 1000000 30556926000\") == \"12\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"12\\n\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 12, \"Your solution is incorrect. It should return 12.\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n10000 400000 500000 900000\") == \"12\\n\", \"Sample Input 1: Invalid output\"\nassert solution(\"5\\n8 10 2 1000000 30556926000\") == \"12\\n\", \"Sample Input 2: Invalid output\"\n\nfrom typing import List"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"4\\n10000 400000 500000 900000\") == \"12\"\nassert solution(stdin=\"5\\n8 10 2 1000000 30556926000\") == \"12\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n10000 400000 500000 900000') == '12\\n', \"Test case 1 failed\"\nassert solution('5\\n8 10 2 1000000 30556926000') == '12\\n', \"Test case 2 failed\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n10000 400000 500000 900000\") == \"12\\n\"\nassert solution(\"5\\n8 10 2 1000000 30556926000\") == \"12\\n\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"12\", \"Sample Output 1\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\"\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0') == 'YES'\nassert solution('8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\\n') == 'NO'\nassert solution('10 10\\n1 2 3\\n4 5 6\\n7 8 9\\n') == 'NO'\nassert solution('10 10\\n1 2 3\\n4 5 6\\n7 8 9\\n1 4 5\\n') == 'YES'"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\\n\"\nassert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\\n2 5 0\\n8 6 0\\n1 7 0\\n2 4 0\\n5 3 0\\n4 2 7 0\\n7 1 0\\n1 2 0\\n\") == \"NO\\n\"\n"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\"\n"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\"\n"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n8 8\n0\n2 4 0\n1 8 0\n8 5 0\n4 3 7 0\n5 2 6 0\n1 6 0\n7 3 0\n''') == 'YES'"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\\n\") == \"YES\"\nassert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\\n1\\n\") == \"NO\"\nassert solution(\"10 10\\n0\\n3 3\\n6 6 6\\n0 0 0\\n4 0 1\\n1 0 2\\n2 0 3\\n3 0 4\\n4 0 5\\n5 0 6\\n6 0 7\\n7 0 8\\n8 0 9\\n9 0 10\\n10 0 11\\n\") == \"NO\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0') == 'YES\\n'\n"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"\"\"\n5\n6\n1\n2\n3\n4\nImpossible\n\"\"\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\\n\") == \"5 6 1 2 3 4\"\nassert solution(\"6 3\\n1 2 3 4 5 6\\n\") == \"5 2 6 3 4 1\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\\n\") == \"5 6 1 2 3 4\\n\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\\n\"\nassert solution(\"8 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\\n\"\nassert solution(\"7 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\\n\"\nassert solution(\"6 3\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\\n\"\nassert solution(\"6 4\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\\n\"\nassert solution(\"5 3\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\\n\"\nassert solution(\"5 4\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\\n\"\nassert solution(\"4 3\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\\n\"\nassert solution(\"4 4\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\\n\"\nassert solution(\"3 3\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\\n\"\nassert solution(\"3 4\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\\n\"\nassert solution(\"2 3\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\\n\"\nassert solution(\"2 4\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\\n\"\nassert solution(\"1 3\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\\n\"\nassert solution(\"1 4\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\\n\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"5 6 1 2 3 4\\n\"\n"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\\n\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output() for input_, output in zip(input_list, output_list)"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\\n\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\\n\") == \"5 6 1 2 3 4\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\"\nassert solution(\"7 4\\n4 3 2 1 5 6\") == \"4 2 6 5 3 1\"\nassert solution(\"5 3\\n1 2 3 4 5 6\") == \"1 2 5 4 3 6\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 2 8 4') == '20512'"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"20512\"\nassert solution(input()) == \"IMPOSSIBLE\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\"\nassert solution(\"3 5 1 2\") == \"IMPOSSIBLE\"\nassert solution(\"5 3 1 2\") == \"IMPOSSIBLE\"\nassert solution(\"1 0 0 0\") == \"IMPOSSIBLE\"\nassert solution(\"1 1 1 1\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"20512\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\\n\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\"\nassert solution(\"3 1 3 2\") == \"3142\"\nassert solution(\"4 3 2 1\") == \"4132\"\nassert solution(\"5 1 0 0\") == \"IMPOSSIBLE\"\nassert solution(\"3 3 4 5\") == \"IMPOSSIBLE\"\nassert solution(\"3 4 6 8\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\\n\"\nassert solution(\"2 1 9 1 2 3\") == \"IMPOSSIBLE\\n\"\nassert solution(\"5 5 5 5\") == \"IMPOSSIBLE\\n\"\nassert solution(\"10 10 10 10\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 2 8 4') == '20512'\nassert solution('1000000 1 1 1') == 'IMPOSSIBLE'"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 2 8 4') == '20512'\nassert solution('1 2 3 4') == 'IMPOSSIBLE'\nassert solution('0 0 0 0') == 'IMPOSSIBLE'\nassert solution('10 10 10 10') == 'IMPOSSIBLE'\nassert solution('1 1 1 1') == 'IMPOSSIBLE'\nassert solution('1000001 1000001 1000001 1000001') == 'IMPOSSIBLE'\nassert solution('1000000 1000000 1000000 1000000') == 'IMPOSSIBLE'"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\nBAC\\nABC\") == 2\nassert solution(\"3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\") == 3"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\nBAC\\nABC\\n\") == 2\nassert solution(\"3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\\n\") == 3"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abc\") == \"abc\"\nassert solution(\"aabbc\") == \"aabbc\"\nassert solution(\"aabbcdefg\") == \"abcd\"\nassert solution(\"hello\") == \"ll\"\nassert solution(\"world\") == \"wrld\"\nassert solution(\"apple\") == \"aple\"\nassert solution(\"banana\") == \"nana\"\nassert solution(\"cat\") == \"t\"\nassert solution(\"dog\") == \"d\"\nassert solution(\"horse\") == \"r\"\nassert solution(\"applebanana\") == \"a\"\nassert solution(\"hug\") == \"h\"\nassert solution(\"applehug\") == \"ah\"\nassert solution(\"applehugapple\") == \"ahah\"\nassert solution(\"hellohugworld\") == \"hugw\"\nassert solution(\"helloworld\") == \"hl\"\nassert solution(\"helloworldxyz\") == \"l\"\nassert solution(\"hello1world2\") == \"2\"\nassert solution(\"hello2world1\") == \"1\"\nassert solution(\"hello3world4\") == \"3\"\nassert solution(\"hello4world3\") == \"4\"\nassert solution(\"hello5world6\") == \"5\"\nassert solution(\"hello6world5\") == \"6\"\nassert solution(\"hello7world6\") == \"7\"\nassert solution(\"hello8world7\") == \"8\"\nassert solution(\"hello9world8\") == \"9\"\nassert solution(\"hello10world9\") == \"10\"\nassert solution(\"hello11world10\") == \"11\"\nassert solution(\"hello12world11\") == \"12\"\nassert solution(\"hello13world12\") == \"13\"\nassert solution(\"hello14world13\") == \"14\"\nassert solution(\"hello15world14\") == \"15\"\nassert solution(\"hello16world15\") == \"16\"\nassert solution(\"hello17world16\") == \"17\"\nassert solution(\"hello18world17\") == \"18\"\nassert solution(\"hello19world18\") == \"19\"\nassert solution(\"hello20world19\") == \"20\"\nassert solution(\"hello21world20\") == \"21\"\nassert solution(\"hello22world21\") == \"22\"\nassert solution(\"hello23world22\") == \"23\"\nassert solution(\"hello24world23\") == \"24\"\nassert solution(\"hello25world24\") == \"25\"\nassert solution(\"hello26world25\") == \"26\"\nassert solution(\"hello27world26\") == \"27\"\nassert solution(\"hello28world27\") == \"28\"\nassert solution(\"hello29world28\") == \"29\"\nassert solution(\"hello30world29\") == \"30\"\nassert solution(\"hello31world30\") == \"31\"\nassert solution(\"hello32world31\") == \"32\"\nassert solution(\"hello33world32\") == \"33\"\nassert solution(\"hello34world33\") == \"34\"\nassert solution(\"hello35world34\") == \"35\"\nassert solution(\"hello36world35\") == \"36\"\nassert solution(\"hello37world36\") == \"37\"\nassert solution(\"hello38world37\") == \"38\"\nassert solution(\"hello39world38\") == \"39\"\nassert solution(\"hello40world39\") == \"40\"\nassert solution(\"hello41world40\") == \"41\"\nassert solution(\"hello42world41\") == \"42\"\nassert solution(\"hello43world42\") == \"43\"\nassert solution(\"hello44world43\") == \"44\"\nassert solution(\"hello45world44\") == \"45\"\nassert solution(\"hello46world45\") == \"46\"\nassert solution(\"hello47world46\") == \"47\"\nassert solution(\"hello48world47\") == \"48\"\nassert solution(\"hello49world48\") == \"49\"\nassert solution(\"hello50world49\") == \"50\"\nassert solution(\"hello51world50\") == \"51\"\nassert solution(\"hello52world51\") == \"52\"\nassert solution(\"hello53world52\") == \"53\"\nassert solution(\"hello54world53\")"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3\\nBAC\\nABC') == 2\nassert solution('3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE') == 3\n\nfrom typing import List\n"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\nBAC\\nABC\") == 2\nassert solution(\"3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\") == 3"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 3\\nBAC\\nABC') == 2\nassert solution('3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE') == 3"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Incorrect output. Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output  # Add your solution here"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"3\"  # Test case 1\nassert solution(\"3 4\") == \"6\"  # Test case 2\nassert solution(\"5 6\") == \"12\" # Test case 3\nassert solution(\"7 8\") == \"18\" # Test case 4\nassert solution(\"9 10\") == \"36\" # Test case 5"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\", \"Test case 1 failed\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\\n\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"3\", \"Your solution is incorrect. Please see the problem statement for the correct format.\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"3\"  # example"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3\\n\"\n"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n\") == \"3\\n\"\nassert solution(\"3 2\\n\") == \"1\\n\"\nassert solution(\"2 3\\n\") == \"5\\n\"\nassert solution(\"5 2\\n\") == \"4\\n\"\n"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\"  # expected output: 3"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n\") == \"3\\n\"\n"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == 3\nprint(\"All tests passed!\")\n"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"\"\"5 3\n2 1 2\n3 0 2 3\n3 0 1 4\n2 1 4\n2 2 3\n\"\"\") == \"3\\n\"\n\nassert solution(stdin=\"\"\"5 3\n2 1 2\n3 0 2 3\n3 0 1 4\n2 1 4\n2 2 3\n\"\"\") == \"3\\n\"\n\nassert solution(stdin=\"\"\"5 3\n2 1 2\n3 0 2 3\n3 0 1 4\n2 1 4\n2 2 3\n\"\"\") == \"3\\n\"\n\nassert solution(stdin=\"\"\"5 3\n2 1 2\n3 0 2 3\n3 0 1 4\n2 1 4\n2 2 3\n\"\"\") == \"3\\n\"\n\nassert solution(stdin=\"\"\"5 3\n2 1 2\n3 0 2 3\n3 0 1 4\n2 1 4\n2 2 3\n\"\"\") == \"3\\n\"\n\nassert solution(stdin=\"\"\"5 3\n2 1 2\n3 0 2 3\n3 0 1 4\n2 1 4\n2 2 3\n\"\"\") == \"3\\n\"\n\nassert solution(stdin=\"\"\"5 3\n2 1 2\n3 0 2 3\n3 0 1 4\n2 1 4\n2 2 3\n\"\"\") == \"3\\n\"\n\nassert solution(stdin=\"\"\"5 3\n2 1 2\n3 0 2 3\n3 0 1 4\n2 1 4\n2 2 3\n\"\"\") == \"3\\n\"\n\nassert solution(stdin=\"\"\"5 3\n2 1 2\n3 0 2 3\n3 0 1 4\n2 1 4\n2 2 3\n\"\"\") == \"3\\n\"\n\nassert solution(stdin=\"\"\"5 3\n2 1 2\n3 0 2 3\n3 0 1 4\n2 1 4\n2 2 3\n\"\"\") == \"3\\n\"\n\nassert solution(stdin=\"\"\"5 3\n2 1 2\n3 0 2 3\n3 0 1 4\n2 1 4\n2 2 3\n\"\"\") == \"3\\n\"\n\nassert solution(stdin=\"\"\"5 3\n2 1 2\n3 0 2 3\n3 0 1 4\n2 1 4\n2 2 3\n\"\"\") == \"3\\n\"\n\nassert solution(stdin=\"\"\"5 3\n2 1 2\n3 0 2 3\n3 0 1 4\n2 1 4\n2 2 3\n\"\"\") == \"3\\n\"\n\nassert solution(stdin=\"\"\"5 3\n2 1 2\n3 0 2 3\n3 0 1 4\n2 1 4\n2 2 3\n\"\"\") == \"3\\n\""
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '3'\n"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == 3\nprint(\"All tests passed!\")"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == 3\nassert solution(\"5 5\\n0 0 0\\n0 1 1\\n0 2 2\\n1 2 3\") == 5\nassert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == 3\nassert solution(\"4 10\\n2 1 1 3\\n2 2 2 4\\n3 0 1 3 5\\n3 0 1 4 6\\n4 1 2 4 5\") == 11"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    5 3\n    2 1 2\n    3 0 2 3\n    3 0 1 4\n    2 1 4\n    2 2 3\n    ''') == 3\n\nassert solution('''\n    5 4\n    1 2 3 4\n    ''') == 1\n\nassert solution('''\n    5 3\n    2 1 2\n    3 0 2 3\n    3 0 1 4\n    2 1 4\n    2 2 3\n    ''') == 3\n\nassert solution('''\n    4 5\n    0 1 2 3 4\n    5 0 1 2 3\n    ''') == 4\n\nassert solution('''\n    5 4\n    1 2 3 4\n    5 0 1 2 3\n    ''') == 4\n\nassert solution('''\n    5 4\n    1 2 3 4\n    5 0 1 2 3\n    ''') == 4\n\nassert solution('''\n    5 5\n    1 2 3 4 5\n    5 0 1 2 3 4\n    4 0 1 2 3 5\n    ''') == 5\n\nassert solution('''\n    5 5\n    1 2 3 4 5\n    5 0 1 2 3 4\n    4 0 1 2 3 5\n    ''') == 5\n\nassert solution('''\n    5 5\n    1 2 3 4 5\n    5 0 1 2 3 4\n    4 0 1 2 3 5\n    ''') == 5\n\nassert solution('''\n    5 5\n    1 2 3 4 5\n    5 0 1 2 3 4\n    4 0 1 2 3 5\n    ''') == 5\n\nassert solution('''\n    5 5\n    1 2 3 4 5\n    5 0 1 2 3 4\n    4 0 1 2 3 5\n    ''') == 5\n\nassert solution('''\n    5 5\n    1 2 3 4 5\n    5 0 1 2 3 4\n    4 0 1 2 3 5\n    ''') == 5"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == \"3\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\") == \"5\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\") == \"5\\n\""
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == sample_output, f\"Test failed for input {sample_input}, expected output {sample_output}, but got {solution(sample_input)}\""
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 3, \"Incorrect output\""
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\\n1 1\\n1 2\\n2 1\") == \"YES\\nNO\"\nassert solution(\"1\\n3\\n5\\n3\\n2\\n4\\n6\\n8\\n10\\n12\\n14\\n16\\n18\\n20\\n22\\n24\\n26\\n28\\n30\\n32\\n34\\n36\\n38\\n40\\n42\\n44\\n46\\n48\\n50\\n52\\n54\\n56\\n58\\n60\\n62\\n64\\n66\\n68\\n70\\n72\\n74\\n76\\n78\\n80\\n82\\n84\\n86\\n88\\n90\\n92\\n94\\n96\\n98\\n100\\n102\\n104\\n106\\n108\\n110\\n112\\n114\\n116\\n118\\n120\\n122\\n124\\n126\\n128\\n130\\n132\\n134\\n136\\n138\\n140\\n142\\n144\\n146\\n148\\n150\\n152\\n154\\n156\\n158\\n160\\n162\\n164\\n166\\n168\\n170\\n172\\n174\\n176\\n178\\n180\\n182\\n184\\n186\\n188\\n190\\n192\\n194\\n196\\n198\\n200\\n202\\n204\\n206\\n208\\n210\\n212\\n214\\n216\\n218\\n220\\n222\\n224\\n226\\n228\\n230\\n232\\n234\\n236\\n238\\n240\\n242\\n244\\n246\\n248\\n250\\n252\\n254\\n256\\n258\\n260\\n262\\n264\\n266\\n268\\n270\\n272\\n274\\n276\\n278\\n280\\n282\\n284\\n286\\n288\\n290\\n292\\n294\\n296\\n298\\n300\\n302\\n304\\n306\\n308\\n310\\n312\\n314\\n316\\n318\\n320\\n322\\n324\\n326\\n328\\n330\\n332\\n334\\n336\\n338\\n340\\n342\\n344\\n346\\n348\\n350\\n352\\n354\\n356\\n358\\n360\\n362\\n364\\n366\\n368\\n370\\n372\\n374\\n376\\n378\\n380\\n382\\n384\\n386\\n388\\n390\\n392\\n394\\n396\\n398\\n400\\n"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3') == 'YES'\nassert solution('1\\n1\\n1') == 'NO'\nassert solution('1\\n1\\n2') == 'YES'\nassert solution('2\\n2\\n1') == 'YES'\nassert solution('2\\n1\\n1') == 'NO'"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(input())) == \"YES\" # Check your solution here\n"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Your solution is incorrect. Please check the given examples.\" for input, output in [\n    (\"2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\", \"YES\\nNO\"),\n    (\"1\\n1\\n1\\n1\\n1\\n1\\n1\", \"YES\\nNO\"),\n    (\"1\\n2\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\", \"YES\\nNO\"),\n    (\"1\\n1\\n2\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n2\", \"YES\\nNO\"),\n]"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 'YES', \"Please fill the solution for the problem.\""
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n2\n6\n1 1\n1 3\n2 2\n2 3\n3 1\n3 2\n3\n1 1\n1 2\n2 1\n\"\"\") == 'YES'\n\nassert solution(\"\"\"\n2\n6\n1 1\n1 3\n2 2\n2 3\n3 1\n3 2\n3\n1 1\n1 2\n2 1\n4\n1 1\n1 2\n2 1\n\"\"\") == 'NO'"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\") == \"YES\"\nassert solution(\"1 1\\n1 2\\n2 1\\n2 2\\n3\") == \"NO\""
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n2\n6\n1 1\n1 3\n2 2\n2 3\n3 1\n3 2\n3\n1 1\n1 2\n2 1\n''') == 'YES'\n\nassert solution('''\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3') == 'YES'\nassert solution('1\\n1\\n2 1\\n2 2\\n3 1\\n3 2\\n4 3\\n5 1\\n5 4\\n6 2\\n7 3\\n8 1\\n8 7\\n9 5\\n10 6\\n11 3\\n11 9\\n12 5\\n12 10\\n13 7\\n14 4\\n14 10\\n15 8\\n15 11\\n16 6\\n16 12\\n17 9\\n17 13\\n18 7\\n18 14\\n19 10\\n19 15\\n20 8\\n20 12\\n21 11\\n21 16\\n22 9\\n22 13\\n23 10\\n23 16\\n24 11\\n24 17\\n25 13\\n25 18\\n26 14\\n26 19\\n27 15\\n27 20\\n28 16\\n28 21\\n29 17\\n29 22\\n30 18\\n30 23\\n31 19\\n31 24\\n32 20\\n32 25\\n33 21\\n33 26\\n34 22\\n34 27\\n35 23\\n35 28\\n36 24\\n36 29\\n37 25\\n37 30\\n38 26\\n38 31\\n39 27\\n39 32\\n40 28\\n40 33\\n41 29\\n41 34\\n42 30\\n42 35\\n43 31\\n43 36\\n44 32\\n44 37\\n45 33\\n45 38\\n46 34\\n46 39\\n47 35\\n47 40\\n48 36\\n48 41\\n49 37\\n49 42\\n50 38\\n50 43\\n51 39\\n51 44\\n52 40\\n52 45\\n53 41\\n53 46\\n54 42\\n54 47\\n55 43\\n55 48\\n56 44\\n56 49\\n57 45\\n57 50\\n58 46\\n58 51\\n59 47\\n59 52\\n60 48\\n60 53\\n61 49\\n61 54\\n62 50\\n62 55\\n63 51\\n63 56\\n64 52\\n64 57\\n65 53\\n65 58\\n66 54\\n66 59\\n67 55\\n67 60\\n68 56\\n68 61\\n69 57\\n69 62\\n70 58\\n70 63\\n71 59\\n71 64\\n72 60\\n72 65\\n73 61\\n73 66\\n74 62\\n74 67\\n75 63\\n75 68\\n76 64\\n76 69\\"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=f'2\\n') == '3.000000000\\n'\nassert solution(stdin=f'10\\n') == '150.000000000\\n'\nassert solution(stdin=f'100\\n') == '365.000000000\\n'"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n\") == \"3.000000000\\n\"\nassert solution(\"4\\n\") == \"7.000000000\\n\"\nassert solution(\"8\\n\") == \"15.000000000\\n\"\nassert solution(\"10\\n\") == \"21.000000000\\n\"\nassert solution(\"100\\n\") == \"100.000000000\\n\"\nassert solution(\"1000\\n\") == \"3125.000000000\\n\"\nassert solution(\"10000\\n\") == \"10000.000000000\\n\"\nassert solution(\"100000\\n\") == \"100000.000000000\\n\"\nassert solution(\"1000000\\n\") == \"1000000.000000000\\n\"\nassert solution(\"10000000\\n\") == \"10000000.000000000\\n\"\nassert solution(\"100000000\\n\") == \"100000000.000000000\\n\"\nassert solution(\"1000000000\\n\") == \"1000000000.000000000\\n\"\nassert solution(\"10000000000\\n\") == \"10000000000.000000000\\n\"\nassert solution(\"100000000000\\n\") == \"100000000000.000000000\\n\"\nassert solution(\"1000000000000\\n\") == \"1000000000000.000000000\\n\"\nassert solution(\"10000000000000\\n\") == \"10000000000000.000000000\\n\"\nassert solution(\"100000000000000\\n\") == \"100000000000000.000000000\\n\""
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n\") == \"3.000000000\\n\"\nassert solution(\"1000\\n\") == \"1500.000000000\\n\"\nassert solution(\"1001\\n\") == \"1500.000000000\\n\"\nassert solution(\"1002\\n\") == \"1500.000000000\\n\"\nassert solution(\"1003\\n\") == \"1500.000000000\\n\"\nassert solution(\"1004\\n\") == \"1500.000000000\\n\""
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n\") == \"3.000000000\\n\"\nassert solution(\"4\\n\") == \"6.000000000\\n\"\nassert solution(\"5\\n\") == \"10.000000000\\n\"\nassert solution(\"6\\n\") == \"15.000000000\\n\"\nassert solution(\"7\\n\") == \"21.000000000\\n\"\nassert solution(\"8\\n\") == \"28.000000000\\n\"\nassert solution(\"9\\n\") == \"36.000000000\\n\"\nassert solution(\"10\\n\") == \"45.000000000\\n\"\nassert solution(\"11\\n\") == \"55.000000000\\n\"\nassert solution(\"12\\n\") == \"66.000000000\\n\"\nassert solution(\"13\\n\") == \"78.000000000\\n\"\nassert solution(\"14\\n\") == \"91.000000000\\n\"\nassert solution(\"15\\n\") == \"105.000000000\\n\"\nassert solution(\"16\\n\") == \"120.000000000\\n\"\nassert solution(\"17\\n\") == \"136.000000000\\n\"\nassert solution(\"18\\n\") == \"153.000000000\\n\"\nassert solution(\"19\\n\") == \"171.000000000\\n\"\nassert solution(\"20\\n\") == \"190.000000000\\n\"\nassert solution(\"21\\n\") == \"210.000000000\\n\"\nassert solution(\"22\\n\") == \"231.000000000\\n\"\nassert solution(\"23\\n\") == \"253.000000000\\n\"\nassert solution(\"24\\n\") == \"276.000000000\\n\"\nassert solution(\"25\\n\") == \"300.000000000\\n\"\nassert solution(\"26\\n\") == \"325.000000000\\n\"\nassert solution(\"27\\n\") == \"351.000000000\\n\"\nassert solution(\"28\\n\") == \"378.000000000\\n\"\nassert solution(\"29\\n\") == \"406.000000000\\n\"\nassert solution(\"30\\n\") == \"435.000000000\\n\"\nassert solution(\"31\\n\") == \"465.000000000\\n\"\nassert solution(\"32\\n\") == \"496.000000000\\n\"\nassert solution(\"33\\n\") == \"528.000000000\\n\"\nassert solution(\"34\\n\") == \"561.000000000\\n\"\nassert solution(\"35\\n\") == \"595.000000000\\n\"\nassert solution(\"36\\n\") == \"630.000000000\\n\"\nassert solution(\"37\\n\") == \"666.000000000\\n\"\nassert solution(\"38\\n\") == \"703.000000000\\n\"\nassert solution(\"39\\n\") == \"741.000000000\\n\"\nassert solution(\"40\\n\") == \"780.000000000\\n\"\nassert solution(\"41\\n\") == \"820.0000000"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n') == '3.000000000\\n'\nassert solution('3\\n') == '4.000000000\\n'\nassert solution('5\\n') == '7.000000000\\n'\nassert solution('6\\n') == '10.000000000\\n'\nassert solution('7\\n') == '13.000000000\\n'\nassert solution('8\\n') == '16.000000000\\n'\nassert solution('9\\n') == '20.000000000\\n'\nassert solution('10\\n') == '25.000000000\\n'\nassert solution('11\\n') == '32.000000000\\n'\nassert solution('12\\n') == '40.000000000\\n'\nassert solution('13\\n') == '50.000000000\\n'\nassert solution('14\\n') == '64.000000000\\n'\nassert solution('15\\n') == '81.000000000\\n'\nassert solution('16\\n') == '102.000000000\\n'\nassert solution('17\\n') == '128.000000000\\n'\nassert solution('18\\n') == '160.000000000\\n'\nassert solution('19\\n') == '200.000000000\\n'\nassert solution('20\\n') == '250.000000000\\n'\nassert solution('21\\n') == '320.000000000\\n'\nassert solution('22\\n') == '400.000000000\\n'\nassert solution('23\\n') == '500.000000000\\n'\nassert solution('24\\n') == '640.000000000\\n'\nassert solution('25\\n') == '810.000000000\\n'\nassert solution('26\\n') == '1020.000000000\\n'\nassert solution('27\\n') == '1280.000000000\\n'\nassert solution('28\\n') == '1600.000000000\\n'\nassert solution('29\\n') == '2000.000000000\\n'\nassert solution('30\\n') == '2500.000000000\\n'\nassert solution('31\\n') == '3200.000000000\\n'\nassert solution('32\\n') == '4000.000000000\\n'\nassert solution('33\\n') == '5000.000000000\\n'\nassert solution('34\\n') == '6400.000000000\\n'\nassert solution('35\\n') == '8100.000000000\\n'\nassert solution('36\\n') == '10200.000000000\\n'\nassert solution('37\\n') == '12800.000000000\\n'\nassert solution('38\\n') == '16000.000000000\\n'\nassert solution('39\\n') == '20000.000000000\\n'\nassert solution('40\\n') == '25000.000000000\\n'\nassert solution('"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n') == '3.000000000'\n"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n\") == \"3.000000000\"\nassert solution(\"2\\n\") == \"6.000000000\"\nassert solution(\"3\\n\") == \"9.000000000\"\nassert solution(\"4\\n\") == \"12.000000000\"\nassert solution(\"5\\n\") == \"15.000000000\"\n\nfrom typing import List\nimport random"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"3.000000000\", \"Test case 1 failed.\"\nassert solution(\"5\") == \"6.000000000\", \"Test case 2 failed.\"\nassert solution(\"10\") == \"12.000000000\", \"Test case 3 failed.\"\n\nfrom typing import List"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3.000000000\\n\""
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '3.000000000', \"Incorrect output\""
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 2\\n3') == '1\\n'\nassert solution('5 7\\n10 20 30') == '2\\n'\nassert solution('8 15 30 45') == '3\\n'\nassert solution('9 18 36 54 72') == '4\\n'\nassert solution('10 20 30 40 50') == '5\\n'\nassert solution('11 22 33 44 55 66 77 88 99') == '6\\n'"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\\n\", \"Output should be 1\"\n"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1, 2) == 1\n"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    1 2\n    3\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n    3\n    10000\n    10000\n    10000\n    10000\n    10000\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    2\n    1\n    2\n    3\n    4\n    5\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    1\n    1\n    1\n    1\n    1\n    1\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    5\n    1\n    3\n    5\n    7\n    9\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    1\n    1\n    1\n    1\n    1\n    1\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    1\n    1\n    1\n    1\n    1\n    1\n    \"\"\"\n) == \"2\""
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '1\\n'\n"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1\\n\", solution(stdin)"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n3\") == \"1\\n\""
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '1\\n'\n\nfrom typing import List"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Solution is {solution(input())}, but expected {expected_output}\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    3 4 5\n    1 3 4\n    0 2 2 3 2\n    1 3 2\n    1 2 4\n    1 1 4\n    \"\"\"\n) == \"3\\n2\\n3\\n1\\n\"\n\nassert solution(\n    \"\"\"\n    2 1\n    2 3\n    2 4\n    \"\"\"\n) == \"2\\n2\\n2\\n\"\n\nassert solution(\n    \"\"\"\n    1 3 2\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    1 1 1\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    1 1 1\n    1 1 2\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    1 1 1\n    1 1 2\n    1 1 3\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    1 1 1\n    1 1 2\n    1 1 3\n    1 1 4\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    2 2 3\n    2 2 4\n    3 3 4\n    4 4 4\n    \"\"\"\n) == \"4\\n4\\n4\\n\"\n\nassert solution(\n    \"\"\"\n    2 2 3\n    2 2 4\n    3 3 4\n    4 4 5\n    \"\"\"\n) == \"5\\n5\\n5\\n\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4''') == '1\\n2\\n3\\n'\n\nassert solution('''0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4''') == '3\\n2\\n1\\n'\n\nassert solution('''0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4''') == '1\\n2\\n3\\n'"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([3,4,5,1,3,4,0,2,2,3,2,1,3,2,1,2,4,1,1,4]) == \"3\\n2\\n3\\n1\\n\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\n"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected: {output}, Actual: {solution(input())}\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Solution does not match the expected output: {output}, {solution(input())}\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output() for input, output in zip(input_data, output_data)\n\ninput_data = [\n    [3, 4, 5],\n    [1, 3, 4],\n    [0, 2, 2, 3, 2],\n    [1, 3, 2],\n    [1, 2, 4],\n    [1, 1, 4],\n]\n\noutput_data = [\"3\", \"2\", \"3\", \"1\", \"def solution(stdin: str) -> str:\", \"3\"]"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\""
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, \"Expected output: {}\\nActual output: {}\".format(expected_output, solution(input()))\n"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    '''\n1\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n    '''\n) == '''\n2 HelloWorld.c\n"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == \"2 HelloWorld.c def solution(stdin: str) -> str:\\npass\"\nassert solution(input) == \"2 Add.c int Main() {\\n  for (int i=0; i<10; i++)\\n    sum += i;\\n  printf(\\\"SUM %d\\\", sum);\\n}\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(input) == \"2 int Main() {\\n  printf(\\\"Hello %d\\\\n\\\",i);\\n  printf(\\\"THE END\\\\n\\\");\\n}\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(input) == \"0\""
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"HelloWorld.c\") == \"2 HelloWorld.c\"\nassert solution(\"Add.c\") == \"2 Add.c\"\nassert solution(\"int Main() { printf(\\\"Hello %d\\\\n\\\",i); }\") == \"0\""
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2 HelloWorld.c\"\nassert solution(input()) == \"2 Add.c\"\nassert solution(input()) == \"0\""
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n2\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n''') == 2\n\nassert solution('''\n3\ntest.c\nint Main() {\n    printf(\"Hello %d\\n\", i);\n}\n***END***\ntest.c\nint Main() {\n    printf(\"Hello %d\\n\", i);\n}\n***END***\ntest.c\nint Main() {\n    printf(\"Hello %d\\n\", i);\n}\n***END***\n''') == 1\n\nassert solution('''\n4\nfile1.c\nint Main() {\n    printf(\"Hello %d\\n\", i);\n}\n***END***\nfile2.c\nint Main() {\n    printf(\"Hello %d\\n\", i);\n}\n***END***\nfile3.c\nint Main() {\n    printf(\"Hello %d\\n\", i);\n}\n***END***\n''') == 0\n\nassert solution('''\n5\nfile1.c\nint Main() {\n    printf(\"Hello %d\\n\", i);\n}\n***END***\nfile2.c\nint Main() {\n    printf(\"Hello %d\\n\", i);\n}\n***END***\nfile3.c\nint Main() {\n    printf(\"Hello %d\\n\", i);\n}\n***END***\nfile4.c\nint Main() {\n    printf(\"Hello %d\\n\", i);\n}\n***END***\nfile5.c\nint Main() {\n    printf(\"Hello %d\\n\", i);\n}\n***END***\n''') == 0"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == output\nfor i, (file_name, code) in enumerate(input):\n    assert file_name == file_names[i]\n    assert code == code_snippets[i]\n\nassert 0 == solution(sample_input)\nassert 0 == solution(sample_input_2)"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2 HelloWorld.c\\n\"\nassert solution(input()) == \"2 HelloWorld.c\\n1 Add.c\\n2 Main.c\\n0\\n\""
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('HelloWorld.c\\nint Main() {\\nprintf(\"Hello %d\\n\",i);}\\n***END***\\nAdd.c\\nint Main() {\\n  for (int i=0; i<10; i++)\\n    sum += i;\\n  printf(\"SUM %d\", sum);}\\n***END***\\nint Main() {\\n  printf(\"Hello %d\\n\",i);\\n  printf(\"THE END\\n\");}\\n***END***\\n' == 2)\nassert solution('HelloWorld.c\\nint Main() {\\nprintf(\"Hello %d\\n\",i);}\\n***END***\\nAdd.c\\nint Main() {\\n  for (int i=0; i<10; i++)\\n    sum += i;\\n  printf(\"SUM %d\", sum);}\\n***END***\\nint Main() {\\n  printf(\"Hello %d\\n\",i);\\n  printf(\"THE END\\n\");}\\n***END***\\n' == 2)\nassert solution('HelloWorld.c\\nint Main() {\\nprintf(\"Hello %d\\n\",i);}\\n***END***\\nAdd.c\\nint Main() {\\n  for (int i=0; i<10; i++)\\n    sum += i;\\n  printf(\"SUM %d\", sum);}\\n***END***\\nint Main() {\\n  printf(\"Hello %d\\n\",i);\\n  printf(\"THE END\\n\");}\\n***END***\\n' == 0)\nassert solution('HelloWorld.c\\nint Main() {\\nprintf(\"Hello %d\\n\",i);}\\n***END***\\nAdd.c\\nint Main() {\\n  for (int i=0; i<10; i++)\\n    sum += i;\\n  printf(\"SUM %d\", sum);}\\n***END***\\nint Main() {\\n  printf(\"Hello %d\\n\",i);\\n  printf(\"THE END\\n\");}\\n***END***\\n' == 0)\nassert solution('HelloWorld.c\\nint Main() {\\nprintf(\"Hello %d\\n\",i);}\\n***END***\\nAdd.c\\nint Main() {\\n  for (int i=0; i<10; i++)\\n    sum += i;\\n  printf(\"SUM %d\", sum);}\\n***END***\\nint Main() {\\n  printf(\"Hello %d\\n\",i);\\n  printf(\"THE END\\n\");}\\n***END***\\n' == 0)\nassert solution('HelloWorld.c\\nint Main() {\\nprintf(\"Hello %d\\n\",i);}\\n***END***\\nAdd.c\\nint Main() {\\n  for (int i=0; i<10; i++)\\n    sum += i;\\n  printf(\"SUM %d\", sum);}\\n***END***\\nint Main() {\\n  printf(\"Hello %d\\n\",i);\\n  printf(\"THE END\\n\");}\\n***END***\\n' == 0)\nassert solution('HelloWorld.c\\nint Main() {\\nprintf(\"Hello %d\\n\",i);}\\n***END***\\nAdd.c\\nint Main() {\\n  for (int i=0; i<10; i++)\\n    sum += i;\\n  printf(\"SUM %d\", sum);}\\n***END***\\nint Main() {\\n  printf(\"Hello %d\\n\",i);\\n  printf(\"THE END\\n\");}\\n***END***\\n' == 2)"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2 HelloWorld.c\\ndef solution(stdin: str) -> str:pass\\n\\n\"\nassert solution(input()) == \"def solution(stdin: str) -> str:pass\\n\\n\"\nassert solution(input()) == \"0\\n\\n\"\nassert solution(input()) == \"0\\n\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\"\nassert solution(\"5 5\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\") == \"1\\n2\\n2\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\"\nassert solution(\"2 3\\n3 3\\n1 1 2\\n1 1 2\") == \"2\\n3\\n2\"\nassert solution(\"2 2\\n1 1 2\\n1 1 2\") == \"2\\n1\\n1\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\") == \"1\\n1\\n1\\n1\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(sample_input)}\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\"\nassert solution(\"5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\") == \"5\"\n"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '1\\n2\\n2'\n"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\\n1\"\nassert solution(\"2 5\\n1 1 1\\n1 1 1\\n2 3\\n2 2\\n2 1\") == \"2\\n3\\n2\\n1\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n2 2 2\\n4 2 1\\n4 4 1\\n\") == \"1\\n2\\n2\\n\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='3 3\\n2 2 2\\n4 2 1\\n4 4 1\\n') == '1\\n2\\n2\\n'"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1\\n2\\n2\\n2\\n\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\\n\"\n"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 5 # correct\nassert solution(20) == 5\nassert solution(50) == 50\nassert solution(100) == 50\nassert solution(150) == 100"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"5\"\n"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"5\", \"Incorrect solution\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Output: 5\\n' +''.join(str(int(input())) for i in range(5)) + '\\n'"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(b'3 20\\n50 70 10\\n100 110 4\\n150 190 16') == 5\n"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\\n\") == \"5\\n\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\\n5 7 8\\n\") == \"13\\n\"\nassert solution(\"1000 500 1000\\n50000000000\\n\") == \"100000000000\\n\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 20\\n50 70 10\\n100 110 4\\n150 190 16') == '5'\nassert solution('3 20\\n50 70 10\\n100 110 4\\n150 190 16\\n150 190 16\\n150 190 16') == '5'"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5\\n(2 5) (5 3)\\n.....\\n.#.#. \\n.#.#. \\n....# \\n.#.## \\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\") == \"26\"\nassert solution(\"5 5\\n(2 5) (5 3)\\n.....\\n.#.#. \\n.#.#. \\n....# \\n.#.## \\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\\n(1 3) (2 3)\") == \"IMPOSSIBLE\"\nassert solution(\"5 5\\n(2 5) (5 3)\\n.....\\n.#.#. \\n.#.#. \\n....# \\n.#.## \\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 5\\n(2 5) (5 3)....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\") == \"26\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 5\\n(2 5) (5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)') == '26\\ndef solution(stdin: str) -> str:\\npass\\n'"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n    5 5\n    2 5\n    5 3\n    5 5\n    5 5\n    5 5\n    1\n    6\n    4 2\n    4 3\n    3 3\n    2 3\n    1 3\n    1 2\n\"\"\") == \"26\""
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n5 5\n(2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\n''') == 26"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 5\\n(2 5) (5 3)\\n.....\\n.#.#. \\n.#.#. \\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\") == \"26\\n\"\nassert solution(\"5 5\\n(2 5) (5 3)\\n.....\\n.#.#. \\n.#.#. \\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\") == \"IMPOSSIBLE\\n\"\n"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 5\\n(2 5) (5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)') == '26\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 5\\n(2 5) (5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\") == \"26\"\nassert solution(\"5 5\\n(2 5) (5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2) (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 5\\n(2 5) (5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\") == 26\n"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    5 5\n    (2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\n''') == 26\n\nassert solution('''\n    5 5\n    (2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n2\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\n''') == 1\n\nassert solution('''\n    5 5\n    (2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\n''') == 1\n\nassert solution('''\n    5 5\n    (2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\n''') == 1\n\nassert solution('''\n    5 5\n    (2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\n''') == 26\n\nassert solution('''\n    5 5\n    (2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\n''') == 1\n\nassert solution('''\n    5 5\n    (2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\n''') == 1\n\nassert solution('''\n    5 5\n    (2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\n''') == 1"
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"success\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\\n') =='success'"
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\") == \"failure\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"success\", \"The solution is incorrect.\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(str(6)) == \"success\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\") == \"failure\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\\n') == 'failure'\nassert solution('2 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\\n') =='success'"
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\") == \"failure\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\") == \"failure\"\n"
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1') == 'failure'\n"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n\") == \"possible\"\nassert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n\") == \"impossible\"\nassert solution(\"2 1 2\\n1 2\\n3 3\\n5 2 2\\n\") == \"possible\"\nassert solution(\"2 1 2\\n1 2\\n3 3\\n5 2 2\\n\") == \"impossible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n2 2 2\n1 2\n3 3\n5 2 2\n5 2 2\n''') == 'possible'\n\nassert solution('''\n1 2\n3 3\n5 2 2\n5 2 2\n''') == 'impossible'\n\nassert solution('''\n2 2 2\n1 2\n3 3\n5 2 2\n5 2 2\nd 2\n''') == 'impossible'\n\nassert solution('''\n2 2 2\n1 2\n3 3\n5 2 2\n5 2 2\nd 1000000\n''') == 'possible'"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2') == 'possible'\nprint('All tests passed!')"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"possible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n\") == \"possible\"\n\nassert solution(\"1 1\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n\") == \"impossible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 'possible'"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\") == \"possible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"possible\"\n"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution\n"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\") == \"possible\"\nassert solution(\"2 1 2\\n3 2\\n4 2\\n5 2\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\\n11 1\\n12 1\\n13 1\\n14 1\\n15 1\\n16 1\\n17 1\\n18 1\\n19 1\\n20 1\\n21 1\\n22 1\\n23 1\\n24 1\\n25 1\\n26 1\\n27 1\\n28 1\\n29 1\\n30 1\\n31 1\\n32 1\\n33 1\\n34 1\\n35 1\\n36 1\\n37 1\\n38 1\\n39 1\\n40 1\\n41 1\\n42 1\\n43 1\\n44 1\\n45 1\\n46 1\\n47 1\\n48 1\\n49 1\\n50 1\\n51 1\\n52 1\\n53 1\\n54 1\\n55 1\\n56 1\\n57 1\\n58 1\\n59 1\\n60 1\\n61 1\\n62 1\\n63 1\\n64 1\\n65 1\\n66 1\\n67 1\\n68 1\\n69 1\\n70 1\\n71 1\\n72 1\\n73 1\\n74 1\\n75 1\\n76 1\\n77 1\\n78 1\\n79 1\\n80 1\\n81 1\\n82 1\\n83 1\\n84 1\\n85 1\\n86 1\\n87 1\\n88 1\\n89 1\\n90 1\\n91 1\\n92 1\\n93 1\\n94 1\\n95 1\\n96 1\\n97 1\\n98 1\\n99 1\\n100 1\") == \"impossible\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 2\\n1 1 2\\n1 2 1\\n-1 1 2') == 0\nassert solution('3 2\\n1 1 2\\n1 2 1\\n-1 1 2') == 0"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 2\n1 1 2\n1 2 1\n-1 1 2\n\"\"\") == \"0\\n\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0\\n\"\n"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected_output, f\"The output is not as expected. \\nInput: {stdin}\\nOutput: {solution}\"\n"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 2\\n1 1 2\\n1 2 1\\n-1 1 2\\n') == '0'\n"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 2\\n1 1 2\\n1 2 1\\n-1 1 2') == 0, \"The minimum number of vertical moves is 0\"\nassert solution('3 4\\n1 1 2\\n1 2 1\\n-1 1 2') == 1, \"The minimum number of vertical moves is 1\"\nassert solution('5 5\\n1 1 2\\n1 2 1\\n-1 1 2') == 2, \"The minimum number of vertical moves is 2\"\nassert solution('6 5\\n1 1 2\\n1 2 1\\n-1 1 2') == 3, \"The minimum number of vertical moves is 3\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\") == \"0\"\nassert solution(\"4 2\\n1 1 2\\n1 2 1\\n-1 1 2\") == \"2\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\") == \"0\\n\"\nassert solution(\"3 4\\n1 1 1\\n1 2 2\\n-1 1 3\") == \"3\\n\"\nassert solution(\"3 2\\n2 1 3\\n1 2 2\\n-1 1 1\") == \"5\\n\"\nassert solution(\"3 3\\n1 1 2\\n1 2 2\\n2 1 2\") == \"3\\n\"\nassert solution(\"3 4\\n1 1 1\\n1 2 2\\n-1 1 3\") == \"5\\n\"\nassert solution(\"3 2\\n1 2 2\\n1 1 1\\n-1 1 2\") == \"0\\n\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"The function should return '{expected_output}', but returns '{solution(input())}'\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 2\\n1 1 2\\n1 2 1\\n-1 1 2') == '0\\n'"
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n353\\n4 2\\n1234\\n\") == \"3\\n353\\n4\\n1313\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n353\\n\") == \"3\\n353\\n\"\nassert solution(\"4 2\\n1234\\n\") == \"4\\n1313\\n\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n353\\n\") == \"3\\n353\\n\"\nassert solution(\"4 2\\n1234\\n\") == \"4\\n1313\\n\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test failed: {output}!= {solution(input())}\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n353\\n\") == \"3\\n353\\n\"\nassert solution(\"4 2\\n1234\\n\") == \"4\\n1313\\n\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n353\") == \"3\\n353\"\nassert solution(\"4 2\\n1234\") == \"4\\n1313\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n353\\n4 2\\n1234\\n\") == \"3\\n353\\n4\\n1313\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected"
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == solution()\nprint(\"OK\")"
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Output\", \"Incorrect Solution\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('12 30 45 3 11') == 'NO', \"One example failed.\"\nassert solution('12 0 1 12 1') == 'YES', \"One example failed.\"\nassert solution('3 47 0 4 9') == 'YES', \"One example failed.\"\n"
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\"\n"
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\", \"Your code is not correct.\"\nassert solution(\"12 0 1 12 1\") == \"YES\", \"Your code is not correct.\"\nassert solution(\"3 47 0 4 9\") == \"YES\", \"Your code is not correct.\"\n\nassert solution(\"12 30 45 3 11\") == \"NO\", \"Your code is not correct.\"\nassert solution(\"12 0 1 12 1\") == \"YES\", \"Your code is not correct.\"\nassert solution(\"3 47 0 4 9\") == \"YES\", \"Your code is not correct.\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(b\"\\n\".join(map(str, [12, 30, 45, 3, 11]))) == \"NO\"\nassert solution(b\"\\n\".join(map(str, [12, 0, 1, 12, 1]))) == \"YES\"\nassert solution(b\"\\n\".join(map(str, [3, 47, 0, 4, 9]))) == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n12 30 45 3 11\n\"\"\"\n) == \"NO\"\n\nassert solution(\n\"\"\"\n12 0 1 12 1\n\"\"\"\n) == \"YES\"\n\nassert solution(\n\"\"\"\n3 47 0 4 9\n\"\"\"\n) == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == 3\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == 2\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == 0"
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 1 2 3 1 0\\n2 4 20') == '3'\nassert solution('1 1 2 3 1 0\\n15 27 26') == '2'\nassert solution('1 1 2 3 1 0\\n2 2 1') == '0'"
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\\n\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\\n\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\\n\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\\n\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\\n\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\\n\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 4\nassert solution() == 6\nassert solution() == 8"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"4\", \"Example 1\"\n\nassert solution(stdin) == \"6\", \"Example 2\"\n\nassert solution(stdin) == \"8\", \"Example 3\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0 1\\n2 0 1\\n4 0 1\") == \"4\"\nassert solution(\"0 0 2\\n3 0 2\\n6 0 2\") == \"6\"\nassert solution(\"0 0 2\\n2 0 2\\n1 1 2\") == \"8\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"4\\n\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"4\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"8\\n\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Input:\\n{stdin}\\n\\nOutput:\\n{expected_output}\\n\\nSolution:\\n{solution(stdin)}\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n0 0 1\\n2 0 1\\n4 0 1') == 4\nassert solution('3\\n0 0 2\\n3 0 2\\n6 0 2') == 6\nassert solution('3\\n0 0 2\\n2 0 2\\n1 1 2') == 8"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n0 0 1\\n2 0 1\\n4 0 1\") == \"4\"\nassert solution(\"3\\n0 0 2\\n3 0 2\\n6 0 2\") == \"6\"\nassert solution(\"3\\n0 0 2\\n2 0 2\\n1 1 2\") == \"8\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution) == '4'"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"4\", \"The code is not correct.\"\nassert solution(input()) == \"6\", \"The code is not correct.\"\nassert solution(input()) == \"8\", \"The code is not correct.\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n\") == \"YES\\n\"\n\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\\n\") == \"NO\\n\"\n\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n\") == \"YES\\n\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\\n\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n').lower() == 'yes', 'Input 1'\nassert solution('0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\\n').lower() == 'no', 'Input 2'\nassert solution('6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n').lower() == 'yes', 'Input 3'"
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\\n6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n0 0 6 0 6 6 0 6\\n6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n0 0 6 0 6 6 0 6\\n6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n0 0 6 0 6 6 0 6\\n6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n0 0 6 0 6 6 0 6\\n6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n0 0 6 0 6 6 0 6\\n6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n0 0 6 0 6 6 0 6\\n6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n0 0 6 0 6 6 0 6\\n6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n0 0 6 0 6 6 0 6\\n6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n0 0 6 0 6 6 0 6\\n6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n0 0 6 0 6 6 0 6\\n6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n0 0 6 0 6 6 0 "
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\") == \"YES\\n\", \"Incorrect output for the first example\"\n\nassert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"NO\\n\", \"Incorrect output for the second example\"\n\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"YES\\n\", \"Incorrect output for the third example\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n\") == \"YES\\n\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\\n\") == \"NO\\n\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n\") == \"YES\\n\"\n"
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\"\nassert solution(\"1\\n\\n\") == \"cslnb\"\nassert solution(\"2\\n\\n\") == \"cslnb\"\nassert solution(\"2\\n\\n\") == \"sjfnb\"\nassert solution(\"3\\n\\n\") == \"sjfnb\"\n"
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1') == 'cslnb'\nassert solution('2') == 'cslnb'\nassert solution('2') =='sjfnb'\nassert solution('3') =='sjfnb'"
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"cslnb\" or solution(input()) == \"sjfnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Input\") == \"cslnb\"\nassert solution(\"Input\") == \"cslnb\"\nassert solution(\"Input\") == \"sjfnb\"\nassert solution(\"Input\") == \"sjfnb\"\nassert solution(\"Input\") == \"sjfnb\"\nassert solution(\"Input\") == \"sjfnb\"\nassert solution(\"Input\") == \"sjfnb\"\n"
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"cslnb\" or solution(input()) == \"sjfnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"sjfnb\"\nassert solution() == \"sjfnb\"\nassert solution() == \"cslnb\"\nassert solution() == \"cslnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n0\\n') == 'cslnb'\nassert solution('2\\n1 0\\n') == 'cslnb'\nassert solution('2\\n2 2\\n') =='sjfnb'\nassert solution('3\\n2 3 1\\n') =='sjfnb'"
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n0\\n') == 'cslnb'\nassert solution('2\\n1 0\\n') == 'cslnb'\nassert solution('2\\n2 2\\n') =='sjfnb'\nassert solution('3\\n2 3 1\\n') =='sjfnb'\nassert solution('4\\n3 4 3\\n') == 'cslnb'\nassert solution('5\\n4 2 2\\n') =='sjfnb'"
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\"\n\nfrom typing import List"
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == \"2\"\nassert solution(\"1 2\\n1\\n\") == \"1\"\nassert solution(\"1 1\\n1\\n\") == \"0\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == 2\nassert solution(\"1 2\\n1\\n\") == 1\nassert solution(\"1 1\\n1\\n\") == 0"
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Test failed. Got {solution(stdin)}, expected {expected}\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 5\\n5\") == \"2\\n\"\nassert solution(\"1 2\\n1\") == \"1\\n\"\nassert solution(\"1 1\\n1\") == \"0\\n\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == \"2\"\nassert solution(\"1 2\\n1\\n\") == \"1\"\nassert solution(\"1 1\\n1\\n\") == \"0\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5\\n1 5 3\") == \"2\"\nassert solution(\"1 2\\n1\") == \"1\"\nassert solution(\"1 1\\n1\") == \"0\"\n"
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == \"2\"\nassert solution(\"1 2\\n1\\n\") == \"1\"\nassert solution(\"1 1\\n1\\n\") == \"0\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5\\n1 5 3\") == \"2\"\nassert solution(\"1 2\\n1\") == \"1\"\nassert solution(\"1 1\\n1\") == \"0\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == \"2\"\nassert solution(\"1 2\\n1\\n\") == \"1\"\nassert solution(\"1 1\\n1\\n\") == \"0\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == 2\nassert solution(\"1 2\\n1\\n\") == 1\nassert solution(\"1 1\\n1\\n\") == 0"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == '1'\nassert solution(2) == '-1 0 1'"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 1\nassert solution(2) == 1\nassert solution(3) == 2\nassert solution(4) == 2\nassert solution(5) == 1\nassert solution(6) == -1"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 1\nassert solution(2) == 1\nassert solution(3) == 1\nassert solution(4) == 1\nassert solution(5) == 1\nassert solution(6) == 1\nassert solution(7) == 1\nassert solution(8) == 1\nassert solution(9) == 1\nassert solution(10) == 1\nassert solution(11) == 1\nassert solution(12) == 1\nassert solution(13) == 1\nassert solution(14) == 1\nassert solution(15) == 1\nassert solution(16) == 1\nassert solution(17) == 1\nassert solution(18) == 1\nassert solution(19) == 1\nassert solution(20) == 1\nassert solution(21) == 1\nassert solution(22) == 1\nassert solution(23) == 1\nassert solution(24) == 1\nassert solution(25) == 1\nassert solution(26) == 1\nassert solution(27) == 1\nassert solution(28) == 1\nassert solution(29) == 1\nassert solution(30) == 1\nassert solution(31) == 1\nassert solution(32) == 1\nassert solution(33) == 1\nassert solution(34) == 1\nassert solution(35) == 1\nassert solution(36) == 1\nassert solution(37) == 1\nassert solution(38) == 1\nassert solution(39) == 1\nassert solution(40) == 1\nassert solution(41) == 1\nassert solution(42) == 1\nassert solution(43) == 1\nassert solution(44) == 1\nassert solution(45) == 1\nassert solution(46) == 1\nassert solution(47) == 1\nassert solution(48) == 1\nassert solution(49) == 1\nassert solution(50) == 1\nassert solution(51) == 1\nassert solution(52) == 1\nassert solution(53) == 1\nassert solution(54) == 1\nassert solution(55) == 1\nassert solution(56) == 1\nassert solution(57) == 1\nassert solution(58) == 1\nassert solution(59) == 1\nassert solution(60) == 1\nassert solution(61) == 1\nassert solution(62) == 1\nassert solution(63) == 1\nassert solution(64) == 1\nassert solution(65) == 1\nassert solution(66) == 1\nassert solution(67) == 1\nassert solution(68) == 1\nassert solution(69) == 1\nassert solution(70) == 1\nassert solution(71) == 1\nassert solution(72) == 1\nassert solution(73) == 1\nassert solution(74) == 1\nassert solution(75) == 1\nassert solution(76) == 1\nassert solution(77) == 1\nassert solution(78) == 1\nassert solution(79) == 1\nassert solution(80) == 1\nassert solution(81) == 1\nassert solution(82) == 1\nassert solution(83) == 1\nassert solution(84) == 1\nassert solution(85) == 1\nassert solution(86) == 1\nassert solution(87) == 1\nassert solution(88) == 1\nassert solution(89) == 1\nassert solution(90) == 1\nassert solution(91) == 1\nassert solution(92) == 1\nassert solution(93) == 1\nassert solution(94) == 1\nassert solution(95) == 1\nassert solution(96) == 1\nassert solution(97) == 1\nassert solution(98) == 1\nassert solution(99) == 1\nassert solution(100) == 1\nassert solution(101) == 1\nassert solution(102) == 1\nassert solution(103) == 1\n"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == '1\\n0 1\\n0\\n1\\n'\nassert solution(2) == '2\\n-1 0 1\\n1\\n0 1\\n'"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"1\\n0 1\\n0\\n1\"\nassert solution(2) == \"2\\n-1 0 1\\n1\""
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\\n0 1\\n0\\n1\\n\"\nassert solution(\"2\") == \"2\\n-1 0 1\\n1\\n0 1\\n\""
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == \"1\\n0 1\\n0\"\nassert solution(2) == \"2\\n-1 0 1\\n1\"\nassert solution(3) == \"-1\"\nassert solution(4) == \"1\\n0 1\\n0\"\nassert solution(5) == \"-1\""
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == '1\\n0 1\\n0'\nassert solution(2) == '2\\n-1 0 1\\n1'"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == '1\\n0 1\\n0\\n1\\n'\nassert solution(2) == '2\\n-1 0 1\\n1\\n0 1\\n'"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == -1\nassert solution(4) == 1\nassert solution(5) == -1\nassert solution(6) == 0\nassert solution(7) == 0\nassert solution(8) == 0\nassert solution(9) == 0\nassert solution(10) == 0\nassert solution(11) == 1\nassert solution(12) == -1\nassert solution(13) == 0\nassert solution(14) == 0\nassert solution(15) == 1\nassert solution(16) == -1\nassert solution(17) == 0\nassert solution(18) == 0\nassert solution(19) == 0\nassert solution(20) == 1\nassert solution(21) == 1\nassert solution(22) == 0\nassert solution(23) == -1\nassert solution(24) == -1\nassert solution(25) == -1\nassert solution(26) == 1\nassert solution(27) == -1\nassert solution(28) == -1\nassert solution(29) == 0\nassert solution(30) == 0\nassert solution(31) == 1\nassert solution(32) == 0\nassert solution(33) == 0\nassert solution(34) == 0\nassert solution(35) == 1\nassert solution(36) == 0\nassert solution(37) == 0\nassert solution(38) == 0\nassert solution(39) == 0\nassert solution(40) == 0\nassert solution(41) == 0\nassert solution(42) == -1\nassert solution(43) == 1\nassert solution(44) == 0\nassert solution(45) == 0\nassert solution(46) == 0\nassert solution(47) == 0\nassert solution(48) == 0\nassert solution(49) == 0\nassert solution(50) == 1\nassert solution(51) == 1\nassert solution(52) == 0\nassert solution(53) == -1\nassert solution(54) == -1\nassert solution(55) == -1\nassert solution(56) == 1\nassert solution(57) == -1\nassert solution(58) == -1\nassert solution(59) == 0\nassert solution(60) == 0\nassert solution(61) == 1\nassert solution(62) == 0\nassert solution(63) == 0\nassert solution(64) == 0\nassert solution(65) == 0\nassert solution(66) == 1\nassert solution(67) == 0\nassert solution(68) == 0\nassert solution(69) == 0\nassert solution(70) == 0\nassert solution(71) == 0\nassert solution(72) == 1\nassert solution(73) == 0\nassert solution(74) == 0\nassert solution(75) == 0\nassert solution(76) == 0\nassert solution(77) == 0\nassert solution(78) == 0\nassert solution(79) == 0\nassert solution(80) == 0\nassert solution(81) == 1\nassert solution(82) == 0\nassert solution(83) == 0\nassert solution(84) == 0\nassert solution(85) == 0\nassert solution(86) == 0\nassert solution(87) == 0\nassert solution(88) == 0\nassert solution(89) == 0\nassert solution(90) == 1\nassert solution(91) == 1\nassert solution(92) == 0\nassert solution(93) == -1\nassert solution(94) == -1\nassert solution(95) == -1\nassert solution(96) == 1\nassert solution(97) == -1\nassert solution(98) == -1\nassert solution(99) == 0\nassert solution(100) == 0\nassert solution(101) == 1\nassert solution(102) == 0\nassert solution(103) == 0\n"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3 \" + \"1 2 2\"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"1 2 2\"\nassert solution(\"3 2 5 3\\n1 3 1\\n\") == \"1 2 2\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3 1\\n2 3 2 1\\n1 2 2\\n\"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"2 3 2 1\\n1 2 2\\n\"\nassert solution(\"3 2 5 3\\n1 3 1\\n\") == \"1 2 2\\n\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3\\n\"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"2 3 2\\n\"\nassert solution(\"3 2 5 3\\n1 3 1\\n\") == \"1 2 2\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3 \"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"2 3 2 \"\nassert solution(\"3 2 5 3\\n1 3 1\\n\") == \"1 2 2\"\n\nfrom typing import List"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3 \\n\"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"2 3 2 \\n\"\nassert solution(\"3 2 5 3\\n1 3 1\\n\") == \"1 2 2 \\n\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == []\nassert solution(\"3 1 5 4\\n1 2 1 3\") == [1, 3, 3]\nassert solution(\"3 1 5 3\\n1 3 1\") == [2, 3, 2]\nassert solution(\"3 2 5 3\\n1 3 1\") == [1, 2, 2]\n\nfrom typing import List"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3  \"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"2 3 2  \"\nassert solution(\"3 2 5 3\\n1 3 1\\n\") == \"1 2 2\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1 3 3 \"\nassert solution(input()) == \"2 3 2 \"\nassert solution(input()) == \"1 2 2\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3 3\\n1 3 3 3\\n\"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"1 3 2\\n2 3 2\\n\"\nassert solution(\"3 2 5 3\\n1 3 1\\n\") == \"1 2 2\\n\"\n"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3 \\n1 3 3 \\n2 3 2 \\n1 2 2\"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"2 3 2 \\n1 2 2\"\nassert solution(\"3 2 5 3\\n1 3 1\\n\") == \"1 2 2\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\"\nassert solution(\"111111011\\n2\\n\") == \"169\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('110\\n2\\n') == '3'\nassert solution('111111011\\n2\\n') == '169'"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"110\\n2\") == \"3\"\nassert solution(\"111111011\\n2\") == \"169\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\"\nassert solution(\"111111011\\n2\\n\") == \"169\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\"\nassert solution(\"111111011\\n2\\n\") == \"169\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('110\\n2\\n') == '3', 'Testcase 1 failed'\nassert solution('111111011\\n2\\n') == '169', 'Testcase 2 failed'"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('110\\n2\\n') == '3'\nassert solution('111111011\\n2\\n') == '169'"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"The given input and output do not match.\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('110\\n2\\n') == '3'\nassert solution('111111011\\n2\\n') == '169'"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\"\nassert solution(\"111111011\\n2\\n\") == \"169\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 1 2 0 0\\n3\\n1 1\\n2 1\\n2 3\") == \"11.084259940083\"\nassert solution(\"5 0 4 2 2 0\\n5\\n5 2\\n3 0\\n5 5\\n3 5\\n3 3\") == \"33.121375178000\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 1 1 2 0 0\\n3\\n1 1\\n2 1\\n2 3') == '11.084259940083'\nassert solution('5 0 4 2 2 0\\n5\\n5 2\\n3 0\\n5 5\\n3 5\\n3 3') == '33.121375178000'"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '11.084259940083', \"Expected output '11.084259940083', but got '{}'.\".format(solution(stdin))"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output() for input, output in [\n    (\"3 1 1 2 0 0\", \"11.084259940083\"),\n    (\"5 0 4 2 2 0\", \"33.121375178000\"),\n    (\"5 0 4 2 2 0\", \"33.121375178000\")\n]"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input1) == '11.084259940083'\nassert solution(input2) == '33.121375178000'"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1 1 2 0 0\\n3\\n1 1\\n2 1\\n2 3\") == \"11.084259940083\"\nassert solution(\"5 0 4 2 2 0\\n5\\n5 2\\n3 0\\n5 5\\n3 5\\n3 3\") == \"33.121375178000\"\nassert solution(\"1 1 1 1 1 1\\n2\\n1 1\\n1 1\\n1 1\\n1 1\") == \"0.0\"\nassert solution(\"5 5 5 5 5 5\\n3\\n5 5\\n5 5\\n5 5\\n5 5\") == \"25.0\"\nassert solution(\"1 1 1 1 1 1\\n2\\n1 1\\n1 1\\n1 1\\n1 1\") == \"0.0\"\nassert solution(\"1 1 1 1 1 1\\n2\\n1 1\\n1 1\\n1 1\\n1 1\") == \"0.0\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"11.084259940083\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''3 1 1 2 0 0\n3\n1 1\n2 1\n2 3''') == 11.084259940083\n\nassert solution('''5 0 4 2 2 0\n5\n5 2\n3 0\n5 5\n3 5\n3 3''') == 33.121375178000"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 1 2 0 0\\n3\\n1 1\\n2 1\\n2 3\") == \"11.084259940083\"\nassert solution(\"5 0 4 2 2 0\\n5\\n5 2\\n3 0\\n5 5\\n3 5\\n3 3\") == \"33.121375178000\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 1 1 2 0 0\\n3\\n1 1\\n2 1\\n2 3') == '11.084259940083'\nassert solution('5 0 4 2 2 0\\n5\\n5 2\\n3 0\\n5 5\\n3 5\\n3 3') == '33.121375178000'\nassert solution('3 1 1 2 0 0\\n3\\n1 1\\n2 1\\n2 3') == '11.084259940083'\nassert solution('5 0 4 2 2 0\\n5\\n5 2\\n3 0\\n5 5\\n3 5\\n3 3') == '33.121375178000'"
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 5\\n\") == \"2\"\nassert solution(\"8 15\\n\") == \"1\"\nassert solution(\"7 20\\n\") == \"0\"\nassert solution(\"1000000000000 1000000000001\\n\") == \"500000000000\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 5\") == \"2\"\nassert solution(\"8 15\") == \"1\"\nassert solution(\"7 20\") == \"0\"\nassert solution(\"1000000000000 1000000000001\") == \"500000000000\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 5\\n\") == \"2\"\nassert solution(\"8 15\\n\") == \"1\"\nassert solution(\"7 20\\n\") == \"0\"\nassert solution(\"1000000000000 1000000000001\\n\") == \"500000000000\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, \"Expected: {}, Got: {}.\".format(output, solution(input()))"
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 5\") == \"2\"\nassert solution(\"8 15\") == \"1\"\nassert solution(\"7 20\") == \"0\"\nassert solution(\"1000000000000 1000000000001\") == \"500000000000\"\n"
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''8 5\n8 15\n7 20\n1000000000000 1000000000001''') == 2\nassert solution('''8 15\n7 20\n1000000000000 1000000000001''') == 1\nassert solution('''7 20\n1000000000000 1000000000001''') == 0\nassert solution('''1000000000000 1000000000001''') == 500000000000"
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 5\\n\") == \"2\"\nassert solution(\"8 15\\n\") == \"1\"\nassert solution(\"7 20\\n\") == \"0\"\nassert solution(\"1000000000000 1000000000001\\n\") == \"500000000000\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('8 5') == '2'\nassert solution('8 15') == '1'\nassert solution('7 20') == '0'\nassert solution('1000000000000 1000000000001') == '500000000000'"
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"0\", \"The solution is incorrect.\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\\n\", \"The expected output is 2, but it is {}.\".format(solution(input()))\n\nassert solution(input()) == \"1\\n\", \"The expected output is 1, but it is {}.\".format(solution(input()))\n\nassert solution(input()) == \"0\\n\", \"The expected output is 0, but it is {}.\".format(solution(input()))\n\nassert solution(input()) == \"500000000000\\n\", \"The expected output is 500000000000, but it is {}.\".format(solution(input()))"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"output\", \"Expected output: 'output', but got: \" + solution(input())"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 1 10\\n01000\") == \"11\"\nassert solution(\"5 10 1\\n01000\") == \"2\"\nassert solution(\"7 2 3\\n1111111\") == \"0\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 1 10\\n01000') == '11'\nassert solution('5 10 1\\n01000') == '2'\nassert solution('7 2 3\\n1111111\\n') == '0'"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 1 10\\n01000\") == \"11\"\nassert solution(\"5 10 1\\n01000\") == \"2\"\nassert solution(\"7 2 3\\n1111111\") == \"0\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '0', \"Test failed\"\n"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 1 10\\n01000\\n\") == \"11\\n\"\nassert solution(\"5 10 1\\n01000\\n\") == \"2\\n\"\nassert solution(\"7 2 3\\n1111111\\n\") == \"0\\n\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 1 10\\n01000\\n') == '11'\nassert solution('5 10 1\\n01000\\n') == '2'\nassert solution('7 2 3\\n1111111\\n') == '0'"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Test failed.\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    5 1 10\n    01000\n    \"\"\"\n) == \"11\"\n\nassert solution(\n    \"\"\"\n    5 10 1\n    01000\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    7 2 3\n    1111111\n    \"\"\"\n) == \"0\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input(\"n = \")) == \"2 1\"\nassert solution(input(\"n = \")) == \"19 5\"\nassert solution(input(\"n = \")) == \"-1\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1 1\\n5 1 2\\n\") == \"2 1\\n19 5\"\nassert solution(\"3 10 2\\n5 10 3\\n\") == \"-1\"\nassert solution(\"3 10 2\\n5 10 4\\n\") == \"-1\"\nassert solution(\"3 10 2\\n5 10 5\\n\") == \"-1\"\nassert solution(\"3 10 2\\n5 10 6\\n\") == \"-1\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1 1\\n5 1 2\\n\") == \"2 1\\n19 5\"\nassert solution(\"3 2 2\\n3 4 3\\n\") == \"3 1\\n15 4\"\nassert solution(\"1 3 1\\n\") == \"-1\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 1\") == \"2 1\"\nassert solution(\"5 1 2\") == \"19 5\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 1, 1) == 2, \"Test 1\"\nassert solution(5, 1, 2) == 19, \"Test 2\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1 1\\n\") == \"2 1\\n\"\nassert solution(\"5 1 2\\n\") == \"19 5\\n\"\nassert solution(\"3 1 3\\n\") == \"-1\\n\"\nassert solution(\"2 1 1\\n\") == \"2 1\\n\"\nassert solution(\"2 1 2\\n\") == \"1 2\\n\"\nassert solution(\"2 1 3\\n\") == \"1 1\\n\"\nassert solution(\"2 1 4\\n\") == \"1 0\\n\"\nassert solution(\"2 1 5\\n\") == \"0 1\\n\"\nassert solution(\"2 1 6\\n\") == \"1 2\\n\"\nassert solution(\"2 1 7\\n\") == \"1 3\\n\"\nassert solution(\"2 1 8\\n\") == \"1 4\\n\"\nassert solution(\"2 1 9\\n\") == \"1 5\\n\"\nassert solution(\"2 1 10\\n\") == \"1 6\\n\"\nassert solution(\"2 1 11\\n\") == \"1 7\\n\"\nassert solution(\"2 1 12\\n\") == \"1 8\\n\"\nassert solution(\"2 1 13\\n\") == \"1 9\\n\"\nassert solution(\"2 1 14\\n\") == \"1 10\\n\"\nassert solution(\"2 1 15\\n\") == \"1 11\\n\"\nassert solution(\"2 1 16\\n\") == \"1 12\\n\"\nassert solution(\"2 1 17\\n\") == \"1 13\\n\"\nassert solution(\"2 1 18\\n\") == \"1 14\\n\"\nassert solution(\"2 1 19\\n\") == \"1 15\\n\"\nassert solution(\"2 1 20\\n\") == \"1 16\\n\"\nassert solution(\"2 1 21\\n\") == \"1 17\\n\"\nassert solution(\"2 1 22\\n\") == \"1 18\\n\"\nassert solution(\"2 1 23\\n\") == \"1 19\\n\"\nassert solution(\"2 1 24\\n\") == \"1 20\\n\"\nassert solution(\"2 1 25\\n\") == \"1 21\\n\"\nassert solution(\"2 1 26\\n\") == \"1 22\\n\"\nassert solution(\"2 1 27\\n\") == \"1 23\\n\"\nassert solution(\"2 1 28\\n\") == \"1 24\\n\"\nassert solution(\"2 1 29\\n\") == \"1 25\\n\"\nassert solution(\"2 1 30\\n\") == \"1 26\\n\"\nassert solution(\"2 1 31\\n\") == \"1 27\\n\"\nassert solution(\"2 1 32\\n\") == \"1 28\\n\"\nassert solution(\"2 1 33\\n\") == \"1 29\\n\"\nassert solution(\"2 1 34\\n\") == \"1 30\\n\"\nassert solution(\"2 1 35\\n\") == \"1 31\\n\"\nassert solution(\"2 1 36\\n\") == \"1 32\\n\"\nassert solution(\"2 1 37\\n\") == \"1 33\\n\"\nassert solution(\"2 1 38\\n\") == \"1 34\\n\"\nassert solution(\"2 1 39\\n\") == \"1 35\\n\"\nassert solution(\"2 1 40\\n\") == \"1 36\\n\"\nassert solution(\"2 1 41\\n\") == \"1 37\\n\"\nassert solution(\"2 1 42\\n\") == \"1 38\\n\"\nassert solution(\"2 1 43\\n\") == \"1 39\\n\"\nassert solution(\"2 1 44\\n\") == \"1 40\\n\"\nassert solution(\"2 1 45\\n\") == \"1 41\\n\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test case {t+1} failed: Output should be '{output}', but got '{solution(input())}'\" for t in range(input().strip().split('\\n')[:10])\n"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 1\") == \"2 1\"\nassert solution(\"5 1 2\") == \"19 5\"\nassert solution(\"1000 1000 1\") == \"-1\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 1 1') == '2 1'\nassert solution('5 1 2') == '19 5'"
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 1\\n\") == \"6\\n\"\nassert solution(\"10 2\\n\") == \"4\\n\"\n"
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(7) + \" \" + str(1)) == \"6\", \"The solution is incorrect.\"\nassert solution(str(10) + \" \" + str(2)) == \"4\", \"The solution is incorrect.\"\n"
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 1\\n\") == \"6\\n\"\nassert solution(\"10 2\\n\") == \"4\\n\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 1\") == \"6\", \"Test 1 failed\"\nassert solution(\"10 2\") == \"4\", \"Test 2 failed\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('7 1') == '6'\nassert solution('10 2') == '4'"
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 1\\n\") == \"6\\n\"\nassert solution(\"10 2\\n\") == \"4\\n\"\n"
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"6\\n\", \"Input 7 1, Output 6\\n\"\nassert solution(input()) == \"4\\n\", \"Input 10 2, Output 4\\n\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 1\\n\") == \"6\\n\"\nassert solution(\"10 2\\n\") == \"4\\n\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 1\\n\") == \"6\\n\"\nassert solution(\"10 2\\n\") == \"4\\n\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(b'7 1\\n') == '6'\nassert solution(b'10 2\\n') == '4'\nassert solution(b'8 2\\n') == '12'\nassert solution(b'7 2\\n') == '8'\nassert solution(b'7 3\\n') == '18'"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''1\n-149.154.167.99\n''') == '''1\n0.0.0.0/0\n'''\n\nassert solution('''4\n-149.154.167.99\n+149.154.167.100/30\n+149.154.167.128/25\n-149.154.167.120/29\n''') == '''2\n149.154.167.99\n149.154.167.120/29\n'''\n\nassert solution('''5\n-127.0.0.4/31\n+127.0.0.8\n+127.0.0.0/30\n-195.82.146.208/29\n-127.0.0.6/31\n''') == '''2\n195.0.0.0/8\n127.0.0.4/30\n'''\n\nassert solution('''2\n+127.0.0.1/32\n-127.0.0.1\n''') == '''-1\n"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Output\\n2\\n149.154.167.99\\n149.154.167.120/29\\n\""
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('') == -1, \"Empty input should return -1\"\nassert solution(\"1\\n\") == -1, \"Input should start with '+' or '-'\"\nassert solution(\"2\\n\") == -1, \"Input should have only one IPv4 subnet\"\nassert solution(\"14\\n-149.154.167.99\\n\") == 1, \"One IPv4 subnet\"\nassert solution(\"15\\n-149.154.167.99\\n+149.154.167.100/30\\n+149.154.167.128/25\\n-149.154.167.120/29\\n\") == 2, \"Two IPv4 subnets\"\nassert solution(\"16\\n-127.0.0.4/31\\n+127.0.0.8\\n+127.0.0.0/30\\n-195.82.146.208/29\\n-127.0.0.6/31\\n\") == 2, \"Two IPv4 subnets, with 127.0.0.1/32 in the blacklist\"\nassert solution(\"2\\n+127.0.0.1/32\\n-127.0.0.1\\n\") == -1, \"One address in the blacklist matches the whitelist\""
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1\\n-149.154.167.99\\n') == '1\\n0.0.0.0/0\\n'\nassert solution('4\\n-149.154.167.99\\n+149.154.167.100/30\\n+149.154.167.128/25\\n-149.154.167.120/29\\n') == '2\\n149.154.167.99\\n149.154.167.120/29\\n'\nassert solution('5\\n-127.0.0.4/31\\n+127.0.0.8\\n+127.0.0.0/30\\n-195.82.146.208/29\\n-127.0.0.6/31\\n') == '2\\n195.0.0.0/8\\n127.0.0.4/30\\n'\nassert solution('2\\n+127.0.0.1/32\\n-127.0.0.1\\n') == '-1\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, \\\n    f\"Test failed for input {input()}, expected output {expected_output}, got {solution(input())}\"\n"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '2\\n195.0.0.0/8\\n127.0.0.4/30'\n"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n-149.154.167.99\\n\") == \"1\\n0.0.0.0/0\\n\"\nassert solution(\"4\\n-149.154.167.99\\n+149.154.167.100/30\\n+149.154.167.128/25\\n-149.154.167.120/29\\n\") == \"2\\n149.154.167.99\\n149.154.167.120/29\\n\"\nassert solution(\"5\\n-127.0.0.4/31\\n+127.0.0.8\\n+127.0.0.0/30\\n-195.82.146.208/29\\n-127.0.0.6/31\\n\") == \"2\\n195.0.0.0/8\\n127.0.0.4/30\\n\"\nassert solution(\"2\\n+127.0.0.1/32\\n-127.0.0.1\\n\") == \"-1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"-149.154.167.99\") == \"1\"\nassert solution(\"+149.154.167.100/30\") == \"1\"\nassert solution(\"+149.154.167.128/25\") == \"1\"\nassert solution(\"-149.154.167.120/29\") == \"1\"\nassert solution(\"-127.0.0.4/31\") == \"1\"\nassert solution(\"+127.0.0.8\") == \"1\"\nassert solution(\"+127.0.0.0/30\") == \"1\"\nassert solution(\"-195.82.146.208/29\") == \"1\"\nassert solution(\"-127.0.0.6/31\") == \"1\"\nassert solution(\"+127.0.0.1/32\") == \"1\"\nassert solution(\"-127.0.0.1\") == \"-1\"\nprint(\"All test cases passed successfully\")"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(example1) == 1, \"Expected output 1, but got {}\".format(solution(example1))\nassert solution(example2) == 2, \"Expected output 2, but got {}\".format(solution(example2))\nassert solution(example3) == 2, \"Expected output 2, but got {}\".format(solution(example3))\nassert solution(example4) == -1, \"Expected output -1, but got {}\".format(solution(example4))\nassert solution(example5) == 2, \"Expected output 2, but got {}\".format(solution(example5))"
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11\\n00000000008\\n\") == \"1\"\nassert solution(\"22\\n0011223344556677889988\\n\") == \"2\"\nassert solution(\"11\\n31415926535\\n\") == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"The solution for the given examples is incorrect. The output is {solution(input())}, while the expected output is {output}.\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11\\n00000000008\") == \"1\"\nassert solution(\"22\\n0011223344556677889988\") == \"2\"\nassert solution(\"11\\n31415926535\") == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11\\n00000000008\") == \"1\"\nassert solution(\"22\\n0011223344556677889988\") == \"2\"\nassert solution(\"11\\n31415926535\") == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11\\n00000000008\") == \"1\"\nassert solution(\"22\\n0011223344556677889988\") == \"2\"\nassert solution(\"11\\n31415926535\") == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Solution failed for input {input()} and expected output {output()}\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(11) == 1\nassert solution(22) == 2\nassert solution(11) == 0"
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11\\n00000000008\") == \"1\"\nassert solution(\"22\\n0011223344556677889988\") == \"2\"\nassert solution(\"11\\n31415926535\") == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11\") == \"1\"\nassert solution(\"22\") == \"2\"\nassert solution(\"11\") == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"0\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 5\n2 2 2 3 2\n0 0 0 1 0\n1 1 1 2 1\n\"\"\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\"\n\nassert solution(\"\"\"\n3 3\n0 0 0\n0 1 0\n0 0 0\n\"\"\") == \"-1\"\n\nassert solution(\"\"\"\n3 3\n1 1 1\n1 1 1\n1 1 1\n\"\"\") == \"3\\nrow 1\\nrow 2\\nrow 3\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\\n3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\\nOutput\\n4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\\nInput\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\nOutput\\n-1\\n\\nInput\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\nOutput\\n3\\nrow 1\\nrow 2\\nrow 3\\n\") == \"Output\\n4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\\nInput\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\nOutput\\n-1\\n\\nInput\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\nOutput\\n3\\nrow 1\\nrow 2\\nrow 3\\n\"\n\nassert solution(\"Input\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\nOutput\\n3\\nrow 1\\nrow 2\\nrow 3\\n\") == \"Input\\n3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\\nOutput\\n4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\\nInput\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\nOutput\\n-1\\n\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\"\nassert solution(\"3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\") == \"-1\\n\"\nassert solution(\"3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"3\\nrow 1\\nrow 2\\nrow 3\\n\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\"\nassert solution(\"3 3\\n0 0 0\\n0 1 0\\n0 0 0\") == \"-1\"\nassert solution(\"3 3\\n1 1 1\\n1 1 1\\n1 1 1\") == \"3\\nrow 1\\nrow 2\\nrow 3\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n0 0 0\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\\n-1\"\nassert solution(\"3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n0 0 0\") == \"-1\"\nassert solution(\"3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\") == \"3\\nrow 1\\nrow 2\\nrow 3\"\n"
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Input\\n3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\\nOutput\\n4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\\nInput\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\nOutput\\n-1\\n\\nInput\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\nOutput\\n3\\nrow 1\\nrow 2\\nrow 3\\n\") == \"Output\\n4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\\nOutput\\n3\\nrow 1\\nrow 2\\nrow 3\\n\"\nassert solution(\"Input\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\nOutput\\n3\\nrow 1\\nrow 2\\nrow 3\\n\") == \"Output\\n3\\nrow 1\\nrow 2\\nrow 3\\n\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\"\nassert solution(\"3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\") == \"-1\"\nassert solution(\"3 3\\n1 1 1\\n1 1 1\\n1 1 1\") == \"3\\nrow 1\\nrow 2\\nrow 3\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test {i+1} failed: expected {output}, got {solution(input())}\"\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        if solution(f\"Input\\n{n} {m}\\n{n*m}\\n\")!= output:\n            print(f\"Test {i+1} failed: expected {output}, got {solution(f\"Input\\n{n} {m}\\n{n*m}\\n\")}\")"
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == [4]"
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\"\n"
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('8 6 4 5') == 'YES'\nassert solution('8 6 4 6') == 'NO'\nassert solution('10 3 11 4') == 'NO'\nassert solution('4 2 1 4') == 'YES'"
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\\n\", \"Test 1\"\nassert solution(\"8 6 4 6\") == \"NO\\n\", \"Test 2\"\nassert solution(\"10 3 11 4\") == \"NO\\n\", \"Test 3\"\nassert solution(\"4 2 1 4\") == \"YES\\n\", \"Test 4\""
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n4 2\n1 3\n1 4\n''') == '6\\n'\n\nassert solution('''\n7 8\n1 6\n2 6\n3 5\n3 6\n4 3\n5 1\n5 2\n5 3\n''') == '12\\n'\n\nassert solution('''\n2 2\n1 2\n2 1\n''') == '-1\\n'"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n1 3\\n1 4\\n\") == 6\nassert solution(\"7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\") == 12\nassert solution(\"2 2\\n1 2\\n2 1\\n\") == -1"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n1 3\\n1 4\\n\") == \"6\"\nassert solution(\"7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\") == \"12\"\nassert solution(\"2 2\\n1 2\\n2 1\\n\") == \"-1\"\n"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n1 3\\n1 4\\n\") == 6\nassert solution(\"7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\") == 12\nassert solution(\"2 2\\n1 2\\n2 1\\n\") == -1"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 6, \"Test case 1 failed\"\nassert solution() == 12, \"Test case 2 failed\"\nassert solution() == -1, \"Test case 3 failed\""
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n4 2\n1 3\n1 4\n''') == '6'\n\nassert solution('''\n7 8\n1 6\n2 6\n3 5\n3 6\n4 3\n5 1\n5 2\n5 3\n''') == '12'\n\nassert solution('''\n2 2\n1 2\n2 1\n''') == '-1'"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n1 3\\n1 4\") == \"6\"\nassert solution(\"7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\") == \"12\"\nassert solution(\"2 2\\n1 2\\n2 1\") == \"-1\"\nassert solution(\"\") == \"-1\"\nassert solution(\"4 2\\n1 3\\n1 4\") == \"6\"\nassert solution(\"7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\") == \"12\"\nassert solution(\"2 2\\n1 2\\n2 1\") == \"-1\""
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n1 3\\n1 4\") == \"6\\n\"\nassert solution(\"7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\") == \"12\\n\"\nassert solution(\"2 2\\n1 2\\n2 1\") == \"-1\\n\""
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"6\"\nassert solution(input()) == \"12\"\nassert solution(input()) == \"-1\""
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '6'\nassert solution(input()) == '12'\nassert solution(input()) == '-1'"
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output\nprint(\"YES\" if \"YES\" in output else \"NO\")"
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"NO\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\"\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\") == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('Input\\n5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0') == 'NO'\n\nassert solution('Input\\n3 2\\n1 0\\n1 1\\n0 1') == 'YES'\n\nassert solution('Input\\n5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0') == 'NO'\n\nassert solution('Input\\n3 2\\n1 0\\n1 1\\n0 1') == 'YES'"
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0') == \"NO\"\nassert solution('3 2\\n1 0\\n1 1\\n0 1') == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\"\n\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\") == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'YES'"
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0') == 'NO'\n\nassert solution('3 2\\n1 0\\n1 1\\n0 1') == 'YES'"
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\"\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\") == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0') == \"NO\"\n\nassert solution('3 2\\n1 0\\n1 1\\n0 1') == \"YES\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\nr\"\"\"\n4 5\n2 3 5 12\n\"\"\"\n) == \"Yes\\n\"\n\nassert solution(\nr\"\"\"\n2 7\n2 3\n\"\"\"\n) == \"No\\n\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 7\\n2 3\\n\") == \"No\"\nassert solution(\"4 5\\n2 3 5 12\\n\") == \"Yes\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Yes\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\n2 3 5 12\\n\") == \"Yes\"\nassert solution(\"2 7\\n2 3\\n\") == \"No\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Yes\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Input\\n4 5\\n2 3 5 12\\n\\nInput\\n2 7\\n2 3\\n\") == \"Yes\"\nassert solution(\"Input\\n4 5\\n2 3 5 12\\n\\nInput\\n2 7\\n1 7\\n\") == \"No\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 5\\n2 3 5 12') == 'Yes\\n'\nassert solution('2 7\\n2 3') == 'No\\n'"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\n2 3 5 12\") == \"Yes\"\nassert solution(\"2 7\\n2 3\") == \"No\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 5\\n2 3 5 12') == 'Yes\\n'\nassert solution('2 7\\n2 3') == 'No\\n'"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\n2 3 5 12\\n\") == \"Yes\"\nassert solution(\"2 7\\n2 3\\n\") == \"No\""
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6\", \"Output: {}\".format(solution(stdin))"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4 1\") == \"6\"\nassert solution(\"6 4 2\") == \"8\"\nassert solution(\"2 3 4\") == \"-1\""
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 4 1') == 6\nassert solution('6 4 2') == 8\nassert solution('2 3 4') == -1\n"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: '{expected_output}', got: '{solution(stdin)}'\""
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 1\") == \"6\"\nassert solution(\"6 4 2\") == \"8\"\nassert solution(\"2 3 4\") == \"-1\""
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 1\") == 6\nassert solution(\"6 4 2\") == 8\nassert solution(\"2 3 4\") == -1"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 1\") == 6\nassert solution(\"6 4 2\") == 8\nassert solution(\"2 3 4\") == -1\nassert solution(\"6 4 1\") == 6\nassert solution(\"3 4 2\") == 8\nassert solution(\"5 6 1\") == 6\nassert solution(\"3 5 1\") == 8\nassert solution(\"4 3 1\") == -1\nassert solution(\"5 6 3\") == 8\nassert solution(\"3 5 3\") == 8\nassert solution(\"4 3 3\") == -1\nassert solution(\"5 6 4\") == 8\nassert solution(\"3 5 4\") == 8\nassert solution(\"4 3 4\") == -1"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == \"6\"\nassert solution(stdin=input()) == \"8\"\nassert solution(stdin=input()) == \"-1\""
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 4, 1) == 6\nassert solution(6, 4, 2) == 8\nassert solution(2, 3, 4) == -1"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 1\\n\") == \"6\"\nassert solution(\"6 4 2\\n\") == \"8\"\nassert solution(\"2 3 4\\n\") == \"-1\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2 2 4 3\\n\") == \"2\\n\"\nassert solution(\"3\\n4 1 1\\n\") == \"2\\n\"\nassert solution(\"4\\n0 3 0 4\\n\") == \"0\\n\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2 2 4 3\\n\\n3\\n4 1 1\\n\\n4\\n0 3 0 4\") == \"2\"\nassert solution(\"3\\n4 1 1\\n\\n4\\n0 3 0 4\") == \"2\"\nassert solution(\"4\\n0 3 0 4\\n\") == \"0\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('sample_input.txt').read()) == \"2\"\nassert solution(open('input.txt').read()) == \"2\"\nassert solution(open('sample_output.txt').read()) == \"2\"\nassert solution(open('output.txt').read()) == \"2\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2 2 4 3\\n\") == \"2\"\nassert solution(\"3\\n4 1 1\\n\") == \"2\"\nassert solution(\"4\\n0 3 0 4\\n\") == \"0\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('Input\\n5\\n1 2 2 4 3\\n\\nOutput\\n2\\n\\nInput\\n3\\n4 1 1\\n\\nOutput\\n2\\n\\nInput\\n4\\n0 3 0 4\\n\\nOutput\\n0') == '2\\n\\n0'"
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2 2 4 3\\n\") == 2\nassert solution(\"3\\n4 1 1\\n\") == 2\nassert solution(\"4\\n0 3 0 4\\n\") == 0"
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2 2 4 3\\n\") == \"2\"\nassert solution(\"3\\n4 1 1\\n\") == \"2\"\nassert solution(\"4\\n0 3 0 4\\n\") == \"0\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '2'\nassert solution(stdin) == '2'\nassert solution(stdin) == '2'\nassert solution(stdin) == '0'\nassert solution(stdin) == '-1'"
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 2 2 4 3\\n\") == \"2\"\nassert solution(\"3\\n4 1 1\\n\") == \"2\"\nassert solution(\"4\\n0 3 0 4\\n\") == \"0\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('8\\n10000011') == '5'\nassert solution('2\\n01') == '2'"
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8\\n10000011\") == \"5\"\nassert solution(\"2\\n01\") == \"2\"\n"
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"The solution should be '{output()}', but it is '{solution(input())}'\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"5\", \"Output incorrect.\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('8\\n10000011\\n') == '5'\nassert solution('2\\n01\\n') == '2'"
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Input') == 5\nassert solution('Input') == 2\nassert solution('2\\n01') == 2"
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8\\n10000011\") == \"5\"\nassert solution(\"2\\n01\") == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Solution: {solution(input())}, Expected Output: {expected_output}\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8\\n10000011\") == \"5\"\nassert solution(\"2\\n01\") == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8\\n10000011\") == \"5\"\nassert solution(\"2\\n01\") == \"2\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 3 1 4\\n\") == \"3\"\nassert solution(\"4\\n4 4 4 4\\n\") == \"-1\"\nassert solution(\"4\\n2 1 4 3\\n\") == \"1\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n2 3 1 4') == '3'\nassert solution('4\\n4 4 4 4') == '-1'\nassert solution('4\\n2 1 4 3') == '1'"
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\n"
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Input\\n4\\n2 3 1 4\\n\") == \"Output\\n3\\n\"\nassert solution(\"Input\\n4\\n4 4 4 4\\n\") == \"Output\\n-1\\n\"\nassert solution(\"Input\\n4\\n2 1 4 3\\n\") == \"Output\\n1\\n\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2 3 1 4\") == \"3\"\nassert solution(\"4\\n4 4 4 4\") == \"-1\"\nassert solution(\"4\\n2 1 4 3\") == \"1\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\nprint(\"OK\")"
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == output, f\"The output is {output}, but the expected output is {stdin}\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n2 3 1 4') == '3'\nassert solution('4\\n4 4 4 4') == '-1'\nassert solution('4\\n2 1 4 3') == '1'"
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n2 3 1 4\\n') == '3\\n'\nassert solution('4\\n4 4 4 4\\n') == '-1\\n'\nassert solution('4\\n2 1 4 3\\n') == '1\\n'"
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '3', 'Incorrect output'\nassert solution(stdin) == '3', 'Incorrect output'\nassert solution(stdin) == '1', 'Incorrect output'"
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\\n\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\\n\"\nassert solution(\"2\\n2 2\\n\") == \"1\\n\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\"\nassert solution(\"2\\n2 2\\n\") == \"1\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\"\nassert solution(\"2\\n2 2\\n\") == \"1\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\\n\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\\n\"\nassert solution(\"2\\n2 2\\n\") == \"1\\n\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4\n1 3 2 0\n\"\"\") == \"2\\n\"\n\nassert solution(\"\"\"\n7\n1 3 3 2 1 2 3\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n2\n2 2\n\"\"\") == \"1\\n\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Test case failed. Expected output: {expected}, got: {solution(input())}\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\"\nassert solution(\"2\\n2 2\\n\") == \"1\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n1 3 2 0\\n') == '2\\n'\nassert solution('7\\n1 3 3 2 1 2 3\\n') == '0\\n'\nassert solution('2\\n2 2\\n') == '1\\n'"
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\\n\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\\n\"\nassert solution(\"2\\n2 2\\n\") == \"1\\n\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case} failed. Expected output: '{expected_output}', but got: '{solution(input())}'.\"\n\nfor test_case in range(1, 11):\n    assert solution(input()) == expected_output, f\"Test case {test_case} failed. Expected output: '{expected_output}', but got: '{solution(input())}'.\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(9) == \"504\", \"Test case 9\"\nassert solution(7) == \"210\", \"Test case 7\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('9') == '504', \"Incorrect output\"\nassert solution('7') == '210', \"Incorrect output\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(9) == \"504\", \"Test failed\"\nassert solution(7) == \"210\", \"Test failed\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9\") == \"504\"\nassert solution(\"7\") == \"210\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(9) == \"504\"\nassert solution(7) == \"210\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9\") == \"504\"\nassert solution(\"7\") == \"210\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Output\", \"The output should be the correct value. Please check the input and try again.\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9\\n\") == \"504\\n\", \"Input 9\"\nassert solution(\"7\\n\") == \"210\\n\", \"Input 7\"\n\nfrom typing import List"
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('9') == '504', \"Expected '504', got '{}'\".format(solution('9'))\nassert solution('7') == '210', \"Expected '210', got '{}'\".format(solution('7'))"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n') == '1 1\\n'\nassert solution('0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n') == '1 1\\n'\nassert solution('0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n') == '1 1\\n'\nassert solution('0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n') == '3 4\\n'"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n\") == \"1 1\"\nassert solution(\"3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\") == \"1 1\"\nassert solution(\"4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n\") == \"1 1\"\nassert solution(\"5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n\") == \"3 4\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n0 0 1 1\n1 1 2 2\n3 0 4 1\n\"\"\") == \"\"\"\n1 1\n\"\"\"\n\nassert solution(\"\"\"\n3\n0 0 1 1\n0 1 1 2\n1 0 2 1\n\"\"\") == \"\"\"\n1 1\n\"\"\"\n\nassert solution(\"\"\"\n4\n0 0 5 5\n0 0 4 4\n1 1 4 4\n1 1 4 4\n\"\"\") == \"\"\"\n1 1\n\"\"\"\n\nassert solution(\"\"\"\n5\n0 0 10 8\n1 2 6 7\n2 3 5 6\n3 4 4 5\n8 1 9 2\n\"\"\") == \"\"\"\n3 4\n\"\"\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n0 0 1 1\\n1 1 2 2\\n3 0 4 1\") == \"1 1\\n\"\nassert solution(\"3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\") == \"1 1\\n\"\nassert solution(\"4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\") == \"1 1\\n\"\nassert solution(\"5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\") == \"3 4\\n\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 0, 1, 1, 1, 1) == \"1 1\"\nassert solution(3, 1, 1, 2, 1, 2) == \"1 1\"\nassert solution(3, 0, 1, 1, 1, 2) == \"1 1\"\nassert solution(4, 0, 5, 5, 1, 1, 1, 1) == \"1 1\"\nassert solution(5, 0, 10, 8, 1, 2, 6, 7, 2, 3, 5, 6, 4, 4, 1, 1, 9, 2, 8, 1, 3, 4) == \"3 4\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n\") == \"1 1\\n\"\nassert solution(\"3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\") == \"1 1\\n\"\nassert solution(\"4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n\") == \"1 1\\n\"\nassert solution(\"5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n\") == \"3 4\\n\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n') == '1 1\\n'\nassert solution('3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n') == '1 1\\n'\nassert solution('4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n') == '1 1\\n'\nassert solution('5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n') == '3 4\\n'\n\nfrom typing import List"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n\") == \"1 1\\n\"\nassert solution(\"3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\") == \"1 1\\n\"\nassert solution(\"4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n\") == \"1 1\\n\"\nassert solution(\"5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n\") == \"3 4\\n\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n\\n3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\\n4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n\\n5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n\\n5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2') == '\\n1 1\\n\\n3 4\\n'"
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"NO\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n18 55 16 17\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\") == \"YES\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n18 55 16 17\\n\\n6\\n40 41 43 44 44 44\\n\\n8\\n5 972 3 4 1 4 970 971\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\\n\\n8\\n5 972 3 4 1 4 970 971\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\") == \"YES\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n18 55 16 17\") == \"YES\\n\"\nassert solution(\"6\\n40 41 43 44 44 44\") == \"NO\\n\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\") == \"YES\\n\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n18 55 16 17\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\") == \"YES\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n18 55 16 17\\n') == 'YES\\n'\nassert solution('6\\n40 41 43 44 44 44\\n') == 'NO\\n'\nassert solution('8\\n5 972 3 4 1 4 970 971\\n') == 'YES\\n'\nassert solution('') == ''\n"
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n18 55 16 17\") == \"YES\\n\"\nassert solution(\"6\\n40 41 43 44 44 44\") == \"NO\\n\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\") == \"YES\\n\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n18 55 16 17\\n\\n6\\n40 41 43 44 44 44\\n\\n8\\n5 972 3 4 1 4 970 971\\n\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\\n\\n8\\n5 972 3 4 1 4 970 971\\n\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\\n\") == \"YES\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'YES'"
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n18 55 16 17\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\") == \"YES\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13') == '9'\nassert solution('5 5\\n1 2 3 4 5\\n1 2 3 4 5') == '10'"
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\\n') == '9\\n'\nassert solution('5 5\\n1 2 3 4 5\\n1 2 3 4 5\\n') == '10\\n'"
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\") == \"9\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == \"10\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\") == \"9\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == \"10\\n\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\") == \"9\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == \"10\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"9\", \"Test failed for input: 3 9\"\nassert solution() == \"9\", \"Test failed for input: 5 5\"\n"
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13') == '9\\n'\nassert solution('5 5\\n1 2 3 4 5\\n1 2 3 4 5') == '10\\n'"
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"9\\n\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\\n\\n5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == \"9\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == \"10\\n\"\n"
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected_output, \"Solution doesn't match the expected output\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == \"Vasya\"\nassert solution(2) == \"Petya\"\nassert solution(8) == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 'Vasya'\nassert solution(2) == 'Petya'\nassert solution(8) == 'Petya'"
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == \"Vasya\"\nassert solution(2) == \"Petya\"\nassert solution(8) == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"Vasya\"\nassert solution(\"2\") == \"Petya\"\nassert solution(\"8\") == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"Vasya\"\nassert solution(\"2\") == \"Petya\"\nassert solution(\"8\") == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == \"Vasya\"\nassert solution(2) == \"Petya\"\nassert solution(8) == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"Vasya\", \"The output should be 'Vasya'.\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 'Vasya'\nassert solution(2) == 'Petya'\nassert solution(8) == 'Petya'"
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1') == 'Vasya'\nassert solution('2') == 'Petya'\nassert solution('8') == 'Petya'"
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Vasya\"\nassert solution(input()) == \"Petya\"\nassert solution(input()) == \"Petya\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0\"\nassert solution() == \"2\"\nassert solution() == \"1\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 3\\n1 2\\n2 2\\n2 1\\n\") == \"0\\n\"\nassert solution(\"1 5 3\\n1 3\\n1 1\\n1 5\\n\") == \"2\\n\"\nassert solution(\"4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"0\"\nassert solution() == \"2\"\nassert solution() == \"1\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case+1} failed: Expected output {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 3\\n1 2\\n2 2\\n2 1\\n\") == \"0\\n\"\nassert solution(\"1 5 3\\n1 3\\n1 1\\n1 5\\n\") == \"2\\n\"\nassert solution(\"4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\\n\") == \"1\\n\"\n\nfrom typing import List\n"
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 2 3\\n1 2\\n2 2\\n2 1\\n') == '0\\n'\nassert solution('1 5 3\\n1 3\\n1 1\\n1 5\\n') == '2\\n'\nassert solution('4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\\n') == '1\\n'"
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 3\\n1 2\\n2 2\\n2 1\\n\") == \"0\\n\"\nassert solution(\"1 5 3\\n1 3\\n1 1\\n1 5\\n\") == \"2\\n\"\nassert solution(\"4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\\n\") == \"1\\n\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 3\\n1 2\\n2 2\\n2 1\\n\") == \"0\\n\"\nassert solution(\"1 5 3\\n1 3\\n1 1\\n1 5\\n\") == \"2\\n\"\nassert solution(\"4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\\n\") == \"1\\n\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 3\\n1 2\\n2 2\\n2 1\") == \"0\\n\"\nassert solution(\"1 5 3\\n1 3\\n1 1\\n1 5\") == \"2\\n\"\nassert solution(\"4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\") == \"1\\n\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 2, \"There are two strings that can be s when Snuke is done: ABAB and ABBB.\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\xA\") == \"1\"\nassert solution(\"4\\nA\\nB\\nA\\xB\") == \"1\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"1\"\n"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\\n\", \"Expected output: 2\\n, Received: {}\".format(solution(input()))"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\"\nprint(\"Success!\")"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\nA\\nB\\nB\\nA') == '2'\nassert solution('4\\nA\\nB\\nB\\nA') == '2'\nassert solution('4\\nA\\nB\\nB\\nA') == '2'\nassert solution('4\\nA\\nB\\nB\\nA') == '2'\nassert solution('4\\nA\\nB\\nB\\xA') == '2'\nassert solution('4\\nA\\nB\\xB') == '1'\nassert solution('4\\nA\\nB\\xB') == '1'\nassert solution('4\\nA\\nB\\xB') == '1'\nassert solution('4\\xA\\nB\\xB') == '1'\nassert solution('4\\xA\\xB') == '1'\nassert solution('4\\xA\\xB') == '1'\nassert solution('4\\xA\\xB') == '1'\nassert solution('4\\xA\\xB') == '1'"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"2\\n\"\nassert solution(\"5\") == \"3\\n\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"The given input and output are not matching.\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 3 4\\n\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 6 7\\n\") == \"3\\n\"\n\nSolution:\n\nThe problem requires us to find the maximum number of Pokemons Bash can take. We need to find the maximum possible number of Pokemons that can be obtained by taking the same Pokemon with different strengths but having a common factor of gcd(s_1, s_2, s_3,..., s_{k}).\n\nWe can solve this problem by iterating through all the possible combinations of strengths and finding the maximum possible number of pokemons that can be obtained by taking the same Pokemon with different strengths but having a common factor of gcd(s_1, s_2, s_3,..., s_{k}). We can use a helper function that checks if two Pokemon with the same strength and a common factor of gcd(s_1, s_2, s_3,..., s_{k}) can be obtained by taking one of them.\n\nLet's implement the solution to the problem in the following way:"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 3 4\\n\") == \"2\"\nassert solution(\"5\\n2 3 4 6 7\\n\") == \"3\"\n\nprint(solution(input()))"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 3 4\\n\") == \"2\"\nassert solution(\"5\\n2 3 4 6 7\\n\") == \"3\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"5\\n\"\nassert solution(input()) == \"2\\n\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 3 4\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 6 7\") == \"3\\n\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\nprint(f\"Solution: {solution(input())}\")"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 3 4\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 6 7\") == \"3\\n\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\\n\"\nassert solution() == \"3\\n\""
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\nA\\nB\\nC\\nABAAC\\n\") == \"11\\n\""
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\\n\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\", \"Test 1 failed\"\nassert solution(\"10\\nABCDE\") == \"1062\", \"Test 2 failed\"\nassert solution(\"5\\nA\") == \"2\", \"Test 3 failed\"\nassert solution(\"5\\nBB\") == \"4\", \"Test 4 failed\"\nassert solution(\"5\\nCCC\") == \"10\", \"Test 5 failed\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\nAABC\") == \"11\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"11\""
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\"\nassert solution(\"2\\nABAAC\") == \"2\"\nassert solution(\"3\\nABAAC\") == \"3\"\nassert solution(\"4\\nABAAC\") == \"2\"\nassert solution(\"5\\nBBCCC\") == \"6\"\nassert solution(\"6\\nABBBCC\") == \"2\"\nassert solution(\"7\\nABCDE\") == \"1\"\nassert solution(\"8\\nABABBCD\") == \"3\"\nassert solution(\"9\\nABACBCA\") == \"4\"\nassert solution(\"10\\nA\") == \"1\"\nassert solution(\"11\\nA\") == \"1\""
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\\n\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n4 2\\n1 1\\n0 1\\n2 3\\n\") == \"3\\n\"\nassert solution(\"1023\\n1 2\\n1 0\\n1 2\\n1 1\\n\") == \"-1\\n\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3\", \"Incorrect output for the given example.\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Test failed for input: {stdin}\"\nfor i, (h_1, a_1, x_1, y_1, h_2, a_2, x_2, y_2) in enumerate(testcases):\n    assert solution(f\"{h_1} {a_1} {x_1} {y_1} {h_2} {a_2} {x_2} {y_2}\") == expected[i], f\"Test failed for input: {stdin}\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test failed: {solution(input())}!= {output}\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3\\n\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == output, f\"Test case {i+1} failed\"\nfor i, (input, output) in enumerate(zip(input_list, output_list)):\n    assert solution(input) == output, f\"Test case {i+1} failed\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 3, \"Output should be 3.\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5, 2, 1, 0, 2, 3) == 3, \"Test failed\"\nassert solution(1023, 1, 2, 1, 1) == -1, \"Test failed\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n4 5\") == \"2\\n\", \"Test case 1 failed\"\nassert solution(\"3\\n4 5\") == \"3\\n\", \"Test case 2 failed\"\nassert solution(\"4\\n4 5\") == \"4\\n\", \"Test case 3 failed\"\nassert solution(\"5\\n4 5\") == \"5\\n\", \"Test case 4 failed\"\nassert solution(\"6\\n4 5\") == \"5\\n\", \"Test case 5 failed\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n4 5\") == \"2\", \"Output should be 2\"\nassert solution(\"3\\n4 5\") == \"3\", \"Output should be 3\"\nassert solution(\"4\\n4 5\") == \"3\", \"Output should be 3\"\nassert solution(\"5\\n4 5\") == \"4\", \"Output should be 4\"\n"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n4 5\") == \"2\\n\", \"Incorrect output\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n4 5\\n\") == \"2\\n\"\nassert solution(\"1\\n10\\n\") == \"2\\n\"\nassert solution(\"4\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"3\\n\"\nassert solution(\"2\\n2 3 4 5\\n\") == \"3\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"4\\n\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n4 5\") == \"2\"\nassert solution(\"10\\n1 1 2 2 2 1 1 1 1 1\") == \"1\"\nassert solution(\"10\\n1 1 2 2 2 1 1 1 1 1\") == \"2\"\nassert solution(\"10\\n1 1 2 2 2 1 1 1 1 1\") == \"2\"\n"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\", \"Expected output: 2\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n4 5\\n\") == \"2\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n4 5\") == \"2\\n\"\n\nassert solution(\"5\\n2 4 5\") == \"2\\n\"\n\nassert solution(\"1\\n1 2 3 4 5\") == \"3\\n\"\n\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"6\\n\"\n\nassert solution(\"100\\n1 2 3 4 5 6 7 8 9\") == \"6\\n\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n4 5\") == \"2\\n\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '2\\n', 'Incorrect output'"
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\\n2 2 2 1\\n\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"Input\\n1 2 3 4\\n\") == \"NO\"\nassert solution(\"Input\\n2 2 2 3\\n\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\"\n"
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 2 1\\n\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\\n\") == \"NO\"\nassert solution(\"2 2 2 3\\n\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution(stdin)) == \"YES\\n0 1 0 1 2 3 2\"\n\nassert solution(solution(\"1 2 3 4\")) == \"NO\"\n\nassert solution(solution(\"2 2 2 3\")) == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\"\n\nfrom typing import List"
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == \"YES\"\nassert solution(2) == \"NO\"\nassert solution(3) == \"NO\"\nassert solution(4) == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: '{expected_output}', but got: '{solution(input())}'\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\"\n"
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 4\\n1 3 2 4\\n1 3 4 2') == 'YES'\nassert solution('4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3') == 'NO'\nassert solution('3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5') == 'YES'"
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\"\n"
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\\n\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\\n\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\\n\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"YES\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 4\\n1 3 2 4\\n1 3 4 2') == 'YES'\nassert solution('4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3') == 'NO'\nassert solution('3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5') == 'YES'"
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(str(input())) == \"YES\"\nassert solution(str(input())) == \"NO\"\nassert solution(str(input())) == \"YES\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n2 4\n1 3 2 4\n1 3 4 2\n''') == 'YES'\n\nassert solution('''\n4 4\n1 2 3 4\n2 3 4 1\n3 4 1 2\n4 1 2 3\n''') == 'NO'\n\nassert solution('''\n3 6\n2 1 3 4 5 6\n1 2 4 3 5 6\n1 2 3 4 6 5\n''') == 'YES'"
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\"\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"YES\""
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Test failed. Input: {input()}, Output: {output()}, Expected output: {expected_output()}\""
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1\\n1 2 1\\n\") == \"0\\n666666672\\n\"\nassert solution(\"1 2 1\\n\") == \"666666672\\n\""
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1\") == 0\nassert solution(\"1 2 1\") == 666666672"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 1 1') == '0'\nassert solution('1 2 1') == '666666672'"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 2 1\") == \"666666672\"\n\nfrom fractions import Fraction"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == 0"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 1 1\\n1 2 1\\n') == '0'\nassert solution('1 2 1\\n') == '666666672'"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0\\n\", \"Expected output: 0\\n\""
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str) == output_str\nfor i in range(10):\n    input_str = input(\"Enter the number of food boxes: \")\n    output_str = solution(input_str)\n    print(\"Case\", i+1, output_str)\n"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1\") == 0\nassert solution(\"1 2 1\") == 666666672\n"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '5\\n'\nassert solution('6') == '5\\n'\nassert solution('5\\n7 2 3 1 5 6') == '5\\n'"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"5\"\n\nfrom typing import List"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"The output is incorrect. Expected: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\"\nassert solution(\"6\\n7 2 3 1 5 6\") == \"5\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\"\nassert solution(\"2\\n2 2\") == \"2\"\nassert solution(\"3\\n1 1 1\") == \"1\"\nassert solution(\"4\\n1 1 1 1\") == \"2\"\nassert solution(\"5\\n1 1 1 1 1\") == \"3\"\nassert solution(\"6\\n1 1 1 1 1 1\") == \"4\"\nassert solution(\"7\\n1 1 1 1 1 1 1\") == \"5\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"5\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"5\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6\\n7 2 3 1 5 6') == '5\\n'\nassert solution('4\\n1 2 3 4') == '1\\n'\nassert solution('5\\n1 1 1 1 1') == '1\\n'"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"5\"\n"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"5\\n\" # Output: \"5\\n\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1 8\") == \"2\"\nassert solution(\"4 2 2 6\") == \"3\"\nassert solution(\"3 7 4 6\") == \"1\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1 8\") == \"2\", \"The first sample test case should return '2'.\"\nassert solution(\"4 2 2 6\") == \"3\", \"The second sample test case should return '3'.\"\nassert solution(\"3 7 4 6\") == \"1\", \"The third sample test case should return '1'.\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Expected output: {}\\nActual output: {}\".format(output(), solution(input()))"
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1 8\") == 2\nassert solution(\"4 2 2 6\") == 3\nassert solution(\"3 7 4 6\") == 1"
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1 8\") == \"2\", \"Test case 1\"\nassert solution(\"4 2 2 6\") == \"3\", \"Test case 2\"\nassert solution(\"3 7 4 6\") == \"1\", \"Test case 3\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 8\") == \"2\"\nassert solution(\"4 2 2 6\") == \"3\"\nassert solution(\"3 7 4 6\") == \"1\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1 8\") == \"2\", \"Error 1\"\nassert solution(\"4 2 2 6\") == \"3\", \"Error 2\"\nassert solution(\"3 7 4 6\") == \"1\", \"Error 3\"\n\nfrom typing import List"
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1 8\") == \"2\", \"Expected 2, got {}\".format(solution(\"1 1 1 8\"))\nassert solution(\"4 2 2 6\") == \"3\", \"Expected 3, got {}\".format(solution(\"4 2 2 6\"))\nassert solution(\"3 7 4 6\") == \"1\", \"Expected 1, got {}\".format(solution(\"3 7 4 6\"))\n"
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1 8\") == \"2\"\nassert solution(\"4 2 2 6\") == \"3\"\nassert solution(\"3 7 4 6\") == \"1\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1 8\") == \"2\", \"One\"\nassert solution(\"4 2 2 6\") == \"3\", \"Two\"\nassert solution(\"3 7 4 6\") == \"1\", \"Three\"\n"
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 5\") == \"2\\n\", \"Expected output: 2\\nGot: \" + solution(\"1 2 5\")\nassert solution(\"-1 4 15\") == \"4\\n\", \"Expected output: 4\\nGot: \" + solution(\"-1 4 15\")\nassert solution(\"0 -1 5\") == \"-1\\n\", \"Expected output: -1\\nGot: \" + solution(\"0 -1 5\")\n"
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 2 5') == '2'\nassert solution('-1 4 15') == '4'\nassert solution('0 -1 5') == '-1'\n"
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i + 1} failed: got {solution(input())}, expected {expected_output}\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Incorrect output. Expected: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1, 2, 5) == \"2\"\nassert solution(-1, 4, 15) == \"4\"\nassert solution(0, -1, 5) == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\\n\") == \"2\\n\"\nassert solution(\"6 2\\n2 1 2 3 4 3\\n\") == \"0\\n\"\nassert solution(\"6 1\\n1 1 2 2 3 3\\n\") == \"2\\n\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '2'\nassert solution(input()) == '0'\nassert solution(input()) == '2'"
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\") == \"2\"\nassert solution(\"6 2\\n2 1 2 3 4 3\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\") == \"2\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\") == \"2\\n\"\nassert solution(\"6 2\\n2 1 2 3 4 3\") == \"0\\n\"\nassert solution(\"6 1\\n1 1 2 2 3 3\") == \"2\\n\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test failed: {input()} -> {output}, expected output: {output}\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\") == \"2\"\nassert solution(\"6 2\\n2 1 2 3 4 3\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\") == \"2\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\\n\") == \"2\"\nassert solution(\"6 2\\n2 1 2 3 4 3\\n\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\\n\") == \"2\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6 1\\n2 1 2 3 4 3') == '2'\nassert solution('6 2\\n2 1 2 3 4 3') == '0'\nassert solution('6 1\\n1 1 2 2 3 3') == '2'\n"
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_str) == expected_output, f\"Expected output: {expected_output}, got: {solution(input_str)}\"\n\ninput_str = \"\"\"\n6 1\n2 1 2 3 4 3\n\"\"\"\n\nexpected_output = 2\nsolution(input_str)"
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"NO\"\nassert solution(\"wednesday\") == \"NO\"\nassert solution(\"thursday\") == \"NO\"\nassert solution(\"friday\") == \"NO\"\nassert solution(\"saturday\") == \"NO\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"NO\"\nassert solution(\"wednesday\") == \"NO\"\nassert solution(\"thursday\") == \"NO\"\nassert solution(\"friday\") == \"NO\"\nassert solution(\"saturday\") == \"NO\"\nassert solution(\"sunday\") == \"NO\"\nassert solution(\"saturday\") == \"YES\"\nassert solution(\"tuesday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('monday') == 'NO'\nassert solution('tuesday') == 'YES'\nassert solution('sunday') == 'NO'\nassert solution('saturday') == 'YES'\nassert solution('tuesday') == 'YES'"
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"NO\"\nassert solution(\"sunday\") == \"NO\"\nassert solution(\"saturday\") == \"YES\"\nassert solution(\"tuesday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('monday') == 'NO'\nassert solution('sunday') == 'YES'\nassert solution('saturday') == 'YES'\n"
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"NO\"\nassert solution(\"wednesday\") == \"NO\"\nassert solution(\"thursday\") == \"NO\"\nassert solution(\"friday\") == \"NO\"\nassert solution(\"saturday\") == \"NO\"\nassert solution(\"sunday\") == \"NO\"\nassert solution(\"saturday\") == \"YES\"\nassert solution(\"tuesday\") == \"YES\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"YES\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"saturday\") == \"NO\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"YES\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"NO\"\nassert solution(\"wednesday\") == \"NO\"\nassert solution(\"thursday\") == \"NO\"\nassert solution(\"friday\") == \"NO\"\nassert solution(\"saturday\") == \"NO\"\nassert solution(\"sunday\") == \"NO\"\nassert solution(\"saturday\") == \"YES\"\nassert solution(\"tuesday\") == \"YES\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(35) == 17, \"Expected 17, got {}\".format(solution(35))\nassert solution(10000000000) == 91, \"Expected 91, got {}\".format(solution(10000000000))"
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(35) == '17'\nassert solution(10000000000) == '91'\nassert solution(1) == '0'\nassert solution(10) == '1'\nassert solution(12345) == '6'\nassert solution(0) == '0'"
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"35\") == \"17\"\nassert solution(\"10000000000\") == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"35\") == \"17\"\nassert solution(\"10000000000\") == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"35\") == \"17\"\nassert solution(\"10000000000\") == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"35\") == \"17\"\nassert solution(\"10000000000\") == \"91\"\n\nfrom typing import List"
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"35\\n\") == \"17\\n\"\nassert solution(\"10000000000\\n\") == \"91\\n\"\n"
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('35') == '17'\nassert solution('10000000000') == '91'"
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"35\") == \"17\"\nassert solution(\"10000000000\") == \"91\"\n"
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('AHA') == 'YES'\nassert solution('Z') == 'NO'\nassert solution('XO') == 'NO'"
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 5\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\") == \"1\\n\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_1) == expected_output_1\nassert solution(input_2) == expected_output_2\nassert solution(input_3) == expected_output_3"
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\\n\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n1 5') == '0\\n'\nassert solution('3\\n1 2 5') == '1\\n'"
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\\n\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\\n\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 5\") == \"0\"  # Jon Snow cannot support steward with strength 1\nassert solution(\"3\\n1 2 5\") == \"1\"  # Jon Snow can support steward with strength 2"
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"0\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 2\\nRU') == 'Yes', \"Test case 1 failed\"\nassert solution('1 2\\nRU') == 'No', \"Test case 2 failed\"\nassert solution('-1 1000000000\\nLRRLU') == 'Yes', \"Test case 3 failed\"\nassert solution('0 0\\nD') == 'Yes', \"Test case 4 failed\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\"\nassert solution(\"1 2\\nRU\") == \"No\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\"\nassert solution(\"0 0\\nD\") == \"Yes\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\", \"Test case 1\"\nassert solution(\"1 2\\nRU\") == \"No\", \"Test case 2\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\", \"Test case 3\"\nassert solution(\"0 0\\nD\") == \"Yes\", \"Test case 4\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\\n\", \"The first test case is incorrect.\"\nassert solution(\"1 2\\nRU\") == \"No\\n\", \"The second test case is incorrect.\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\\n\", \"The third test case is incorrect.\"\nassert solution(\"0 0\\nD\") == \"Yes\\n\", \"The fourth test case is incorrect.\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\nRU\\n\") == \"Yes\\n\"\nassert solution(\"1 2\\nRU\\n\") == \"No\\n\"\nassert solution(\"-1 1000000000\\nLRRLU\\n\") == \"Yes\\n\"\nassert solution(\"0 0\\nD\\n\") == \"Yes\\n\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\"\nassert solution(\"1 2\\nRU\") == \"No\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\"\nassert solution(\"0 0\\nD\") == \"Yes\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\"\nassert solution(\"1 2\\nRU\") == \"No\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\"\nassert solution(\"0 0\\nD\") == \"Yes\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\"\nassert solution(\"1 2\\nRU\") == \"No\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\"\nassert solution(\"0 0\\nD\") == \"Yes\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 2\\nRU') == 'Yes\\n', 'Test Case 1 Failed'\nassert solution('1 2\\nRU') == 'No\\n', 'Test Case 2 Failed'\nassert solution('-1 1000000000\\nLRRLU') == 'Yes\\n', 'Test Case 3 Failed'\nassert solution('0 0\\nD') == 'Yes\\n', 'Test Case 4 Failed'\nassert solution('') == '', 'Test Case 5 Failed'\n\nprint('All Test Cases Passed')"
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\", \"Solution should be Yes\"\nassert solution(\"1 2\\nRU\") == \"No\", \"Solution should be No\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\", \"Solution should be Yes\"\nassert solution(\"0 0\\nD\") == \"Yes\", \"Solution should be Yes\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10 3 7') == '1'\nassert solution('10   3   7') == '1'\nassert solution('314') == '0'\nassert solution('22 19 3') == '1'\nassert solution('   60\\n29\\n    31\\n        31\\n            31\\n                31\\n                    31\\n                        31\\n                            31\\n                        31\\n                            31\\n') == '1'\n"
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 3 7\") == \"1\", \"Expected 1, got: \" + solution(\"10 3 7\")\nassert solution(\"10   3   7\") == \"1\", \"Expected 1, got: \" + solution(\"10   3   7\")\nassert solution(\"314\") == \"0\", \"Expected 0, got: \" + solution(\"314\")\nassert solution(\"22 19 3\") == \"1\", \"Expected 1, got: \" + solution(\"22 19 3\")\nassert solution(\"60\\n29\\n   31\\n\\t\\t\\t\\t\\t\\t\\n   31\\n\") == \"1\", \"Expected 1, got: \" + solution(\"60\\n29\\n   31\\n\\t\\t\\t\\t\\t\\t\\n   31\\n\")"
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\"   60\\n29\\n31\\n358\") == \"1\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\" 60  29   \\n31  \\n   \\n   \\n   \") == \"1\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 3 7\") == \"1\\n\"\nassert solution(\"10   3   7\") == \"1\\n\"\nassert solution(\"314\") == \"0\\n\"\nassert solution(\"22 19 3\") == \"1\\n\"\nassert solution(\"60\\n29\\n\\n31\\n\\n\\n\\n\\n\") == \"1\\n\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\" 60  \\n 29 \\n    31 \\n        \\n        \\n\") == \"1\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 3 7\") == \"1\\n\"\nassert solution(\"10   3   7\") == \"1\\n\"\nassert solution(\"314\") == \"0\\n\"\nassert solution(\"22 19 3\") == \"1\\n\"\nassert solution(\"60\\n29\\n\\n31\\n\\n\\n31\\n\") == \"1\\n\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 3 7\") == \"1\", \"Sample Input 1: Incorrect Output 1\"\nassert solution(\"10   3   7\") == \"1\", \"Sample Input 2: Incorrect Output 2\"\nassert solution(\"314\") == \"0\", \"Sample Input 3: Incorrect Output 3\"\nassert solution(\"22 19 3\") == \"1\", \"Sample Input 4: Incorrect Output 4\"\nassert solution(\"   60\\n29\\n31\\n35\\n\") == \"1\", \"Sample Input 5: Incorrect Output 5\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\"   60   \\n 29 \\n    31 \\n        358\") == \"1\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\"   60\\n\\t29\\n\\t\\t31\\n\\t\\t\\t\\t\\t\\t\\t\\t\") == \"1\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"9\", \"Test Case Failed\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == \"9\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"9\", \"Test case failed.\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == \"9\"\nassert solution(123) == \"11\"\nassert solution(456) == \"8\"\nassert solution(987654321) == \"12\"\nassert solution(1000000000) == \"9\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"9\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == \"9\"\n\nprint(\"Success\")"
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"9\\n\", \"Incorrect output\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"9\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"9\\n\", \"Test 1 Failed\"\nassert solution(\"2\") == \"9\\n\", \"Test 2 Failed\"\nassert solution(\"3\") == \"10\\n\", \"Test 3 Failed\"\nassert solution(\"4\") == \"15\\n\", \"Test 4 Failed\"\nassert solution(\"5\") == \"24\\n\", \"Test 5 Failed\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"9\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n3 6 28 9\") == 4\nassert solution(\"5\\n5 12 9 16 48\") == 3\nassert solution(\"4\\n1 2 4 8\") == -1"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n3 6 28 9\\n5\\n5 12 9 16 48\\n4\\n1 2 4 8\\n-1\") == \"4\\n3\\n-1\"\nassert solution(\"5\\n5 12 9 16 48\\n4\\n1 2 4 8\\n-1\") == \"3\\n-1\"\nassert solution(\"4\\n1 2 4 8\\n-1\") == \"-1\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Input\\n4\\n3 6 28 9\") == \"4\\n\"\nassert solution(\"Input\\n5\\n5 12 9 16 48\") == \"3\\n\"\nassert solution(\"Input\\n4\\n1 2 4 8\") == \"-1\\n\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n3 6 28 9\\n5\\n5 12 9 16 48\\n4\\n1 2 4 8\\n-1\") == \"4\\n3\\n-1\"\nassert solution(\"5\\n5 12 9 16 48\\n4\\n1 2 4 8\\n-1\") == \"3\\n-1\"\nassert solution(\"4\\n1 2 4 8\\n-1\") == \"-1\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n6\\n28\\n9\") == \"4\"\nassert solution(\"5\\n12\\n9\\n16\\n48\") == \"3\"\nassert solution(\"4\\n1\\n2\\n4\") == \"-1\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n3 6 28 9\") == \"4\\n4\\n3\"\nassert solution(\"5\\n5 12 9 16 48\") == \"3\\n-1\"\nassert solution(\"4\\n1 2 4 8\") == \"-1\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    '''\n    4\n    3 6 28 9\n    4\n    5\n    5 12 9 16 48\n    4\n    1 2 4 8\n    4\n    '''\n) == '-1'\n\nassert solution(\n    '''\n    5\n    5 12 9 16 48\n    4\n    1 2 4 8\n    4\n    5\n    3 6 28 9\n    3\n    6 28 9\n    '''\n) == '3'\n\nassert solution(\n    '''\n    4\n    1 2 4 8\n    4\n    5\n    3 6 28 9\n    3\n    6 28 9\n    '''\n) == '-1'"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}, got {solution(input())}\"\n"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n3 6 28 9\\n\") == \"4\\n-1\\n\"\nassert solution(\"5\\n5 12 9 16 48\\n\") == \"3\\n-1\\n\"\nassert solution(\"4\\n1 2 4 8\\n\") == \"-1\\n\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\"\nassert solution() == \"1\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n0 5 0 2 3\") == \"2\"\nassert solution(\"7\\n1 0 0 5 0 0 2\") == \"1\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n0 5 0 2 3\\n\") == \"2\\n\"\nassert solution(\"7\\n1 0 0 5 0 0 2\\n\") == \"1\\n\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5) == \"2\"\nassert solution(7) == \"1\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n0 5 0 2 3\") == \"2\"\nassert solution(\"7\\n1 0 0 5 0 0 2\") == \"1\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == \"2\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n0 5 0 2 3\") == 2\nassert solution(\"7\\n1 0 0 5 0 0 2\") == 1"
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n0 5 0 2 3\") == \"2\"\nassert solution(\"7\\n1 0 0 5 0 0 2\") == \"1\"\n\nfrom typing import List"
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n0 5 0 2 3\") == \"2\"\nassert solution(\"7\\n1 0 0 5 0 0 2\") == \"1\""
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4) == 2\nassert solution(5) == 5"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output() for input, output in zip(sample_input, sample_output)\n"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\", \"Test case 1 failed\"\n\nassert solution(stdin) == \"5\", \"Test case 2 failed\""
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4) == 2\nassert solution(5) == 5"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n\") == \"2\\n\"\nassert solution(\"5\\n\") == \"5\\n\""
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n\") == \"2\\n\"\nassert solution(\"5\\n\") == \"5\\n\"\n"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n\") == \"2\"\nassert solution(\"5\\n\") == \"5\""
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n\") == \"2\\n\"\nassert solution(\"5\\n\") == \"5\\n\""
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(4) == 2\nassert solution(5) == 5"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == \"2\\n\"\nassert solution(stdin=input()) == \"5\\n\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"18\\n3 4\\n1 5\"\nassert solution() == \"31\\n1 2\\n3 4\\n\"\nassert solution() == \"23\\n1 3 5\\n4\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\") == \"18\\n3 4 \\n1 5 \\n\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\") == \"31\\n1 2 \\n3 4 \\n\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\") == \"23\\n1 3 5 \\n4\\n\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n\") == \"18\\n3 4\\n1 5\\n\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\\n\") == \"31\\n1 2\\n3 4\\n\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n\") == \"23\\n1 3 5 \\n4\"\n"
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"18\\n3 4 \\n1 5 \""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10) == \"31\\n1 2\\n3 4\"\nassert solution(4) == \"31\\n1 2\\n3 4\"\nassert solution(5) == \"23\\n1 3 5\\n4\"\n"
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n\") == \"18\\n3 4 \\n1 5 \\n\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\\n\") == \"31\\n1 2 \\n3 4 \\n\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n\") == \"23\\n1 3 5 \\n4\\n\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\") == \"18\\n3 4\\n1 5\\n\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\") == \"31\\n1 2\\n3 4\\n\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\") == \"23\\n1 3 5\\n4\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n') == '18\\n3 4 \\n1 5 \\n'\nassert solution('4 2 2\\n10 8 8 3\\n10 7 9 4\\n') == '31\\n1 2 \\n3 4 \\n'\nassert solution('5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n') == '23\\n1 3 5 \\n4\\n'"
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n') == '18\\n3 4 \\n1 5 \\n'\nassert solution('4 2 2\\n10 8 8 3\\n10 7 9 4\\n') == '31\\n1 2 \\n3 4 \\n'\nassert solution('5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n') == '23\\n1 3 5 \\n4\\n'"
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"Yes\"\n"
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aa\") == \"Yes\", \"Incorrect output for sample 1\"\nassert solution(\"ab\") == \"No\", \"Incorrect output for sample 2\"\nassert solution(\"ba\") == \"No\", \"Incorrect output for sample 3\"\nassert solution(\"bb\") == \"No\", \"Incorrect output for sample 4\"\nassert solution(\"bc\") == \"No\", \"Incorrect output for sample 5\"\nassert solution(\"cb\") == \"No\", \"Incorrect output for sample 6\"\nassert solution(\"cc\") == \"No\", \"Incorrect output for sample 7\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"Yes\\naa\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"No\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"Yes\\naa\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"No\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"No\"\n"
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'Yes\\naa\\n'\nassert solution(open('input2.txt', 'r').read()) == 'No\\n'"
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aa\") == \"Yes\"\nassert solution(\"ab\") == \"No\"\nassert solution(\"ba\") == \"No\"\nassert solution(\"bb\") == \"No\"\nassert solution(\"bc\") == \"No\"\nassert solution(\"cb\") == \"No\"\nassert solution(\"cc\") == \"No\"\n"
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"Yes\\na\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"No\"\n"
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 1\\n1 2\\n') == 'Yes\\naa'\nassert solution('4 3\\n1 2\\n1 3\\n1 4\\n') == 'No'"
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'Yes'\nassert solution(stdin) == 'aa'"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Test case failed. Please check the solution.\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 1 1\\n1 0 1\\n1 1 0\\n3\") == 7\nassert solution(\"0 2 2\\n1 0 100\\n1 2 0\\n3\") == 19\nassert solution(\"0 2 1\\n1 0 100\\n1 2 0\\n5\") == 87"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 7, \"Expected output: 7, got: {}\".format(solution())"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('0 1 1\\n1 0 1\\n1 1 0\\n3') == '7\\n'\nassert solution('0 2 2\\n1 0 100\\n1 2 0\\n3') == '19\\n'\nassert solution('0 2 1\\n1 0 100\\n1 2 0\\n5') == '87\\n'"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 1 1\\n1 0 1\\n1 1 0\\n3\\n\") == \"7\"\nassert solution(\"0 2 2\\n1 0 100\\n1 2 0\\n3\\n\") == \"19\"\nassert solution(\"0 2 1\\n1 0 100\\n1 2 0\\n5\\n\") == \"87\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(0, 1, 1) == 7, \"Expected 7, but got {}\".format(solution(0, 1, 1))\nassert solution(0, 1, 0) == 19, \"Expected 19, but got {}\".format(solution(0, 1, 0))\nassert solution(0, 1, 1) == 87, \"Expected 87, but got {}\".format(solution(0, 1, 1))"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 1 1\\n1 0 1\\n1 1 0\\n3\\n\") == \"7\"\nassert solution(\"0 2 2\\n1 0 100\\n1 2 0\\n3\\n\") == \"19\"\nassert solution(\"0 2 1\\n1 0 100\\n1 2 0\\n5\\n\") == \"87\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0 1 1\\n1 0 1\\n1 1 0\\n3\\n') == '7'\nassert solution('0 2 2\\n1 0 100\\n1 2 0\\n3\\n') == '19'\nassert solution('0 2 1\\n1 0 100\\n1 2 0\\n5\\n') == '87'\nassert solution('0 1 1\\n1 0 1\\n1 1 0\\n0\\n1\\n2\\n3\\n4\\n5\\n') == '7'\nassert solution('0 1 0\\n0 1 0\\n0 1 0\\n1 1 1\\n') == '0'\n\nprint(\"All test cases pass!\")"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(0, 1, 1) == 7, \"Test 1 Failed\"\nassert solution(0, 1, 1) == 19, \"Test 2 Failed\"\nassert solution(0, 2, 1) == 87, \"Test 3 Failed\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Bulbbasaur') == '1'\nassert solution('F') == '0'\nassert solution('aBddulbasaurrgndgbualdBdsagaurrgndbb') == '2'"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Bulbbasaur\") == 1\nassert solution(\"F\") == 0\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == 2"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('Bulbbasaur') == '1', 'Invalid answer'\nassert solution('F') == '0', 'Invalid answer'\nassert solution('aBddulbasaurrgndgbualdBdsagaurrgndbb') == '2', 'Invalid answer'"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Bulbbasaur') == '1'\nassert solution('F') == '0'\nassert solution('aBddulbasaurrgndgbualdBdsagaurrgndbb') == '2'"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\"\n"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Bulbbasaur\") == 1\nassert solution(\"F\") == 0\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == 2\n"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Bulbbasaur\") == 1\nassert solution(\"F\") == 0\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == 2"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Bulbbasaur') == '1'\nassert solution('F') == '0'\nassert solution('aBddulbasaurrgndgbualdBdsagaurrgndbb') == '2'"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3\\narc\\nrac') == 'YES'"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\narc\\nrac\") == \"YES\"\nassert solution(\"2 3\\nbac\\nbac\") == \"NO\"\nassert solution(\"2 3\\nabc\\nabc\") == \"YES\"\nassert solution(\"3 3\\nabc\\nxyz\") == \"NO\"\nassert solution(\"4 4\\nabc\\nxyz\") == \"NO\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"YES\", \"The output should be YES\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3\\narc\\nrac') == 'YES'\nassert solution('2 3\\nabc\\nbcd') == 'NO'\n"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\narc\\nrac\\n\") == \"YES\"\nassert solution(\"2 3\\nart\\nare\\n\") == \"NO\"\nassert solution(\"2 3\\nabc\\nxyz\\n\") == \"YES\"\nassert solution(\"1 3\\nabc\\nxyz\\n\") == \"NO\"\nassert solution(\"2 3\\nabc\\nxyz\\n\") == \"YES\"\nassert solution(\"1 3\\nabc\\nxyz\\n\") == \"NO\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'YES'\nassert solution('5 5\\napple\\nbanana\\norange') == 'YES'\nassert solution('6 4\\nabc\\ndef\\nghi\\njk') == 'NO'\nassert solution('1 1\\n0') == 'YES'\nassert solution('1 2\\n0') == 'NO'"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3\\narc\\nrac\\n') == 'YES'\nassert solution('2 3\\nabc\\ndef\\nghi\\n') == 'NO'"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 3\\narc\\nrac') == 'YES'\nassert solution('3 2\\nrac\\narc') == 'YES'\nassert solution('4 3\\nabc\\nab') == 'NO'\nassert solution('5 3\\nab\\nabc') == 'NO'\nassert solution('6 3\\nabc\\nabc') == 'NO'"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"2 3\narc\nrac\"\"\"\n) == \"YES\"\n\nassert solution(\n    \"\"\"1 2\na\nb\"\"\"\n) == \"NO\"\n\nassert solution(\n    \"\"\"3 3\na\nb\nc\"\"\"\n) == \"YES\"\n\nassert solution(\n    \"\"\"1 1\na\nb\"\"\"\n) == \"YES\"\n\nassert solution(\n    \"\"\"1 2\na\nb\"\"\"\n) == \"YES\"\n\nassert solution(\n    \"\"\"4 4\na\nb\nc\nd\"\"\"\n) == \"NO\"\n\nassert solution(\n    \"\"\"6 5\na\nb\nc\nd\"\"\"\n) == \"YES\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\narc\\nrac\\n\") == \"YES\"\nassert solution(\"2 3\\nbar\\nqux\\nnop\\n\") == \"NO\""
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 111\\n1111\\n10111\\n10010') == '4'\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\""
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\\n\") == \"4\\n\"\nassert solution
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\\n\") == \"4\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"2 2\\n1\\n2\\n\") == \"0\\n\"\nassert solution(\"1 1\\n1\\n\") == \"1\\n\"\nassert solution(\"2 2\\n1\\n1\\n\") == \"0\\n\"\nassert solution(\"1 1\\n2\\n2\\n\") == \"2\\n\"\nassert solution(\"2 2\\n2\\n2\\n\") == \"0\\n\""
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_file) == expected_output, f\"Test failed. Received '{solution(input_file)}', expected '{expected_output}'\"\n"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\\n\") == \"4\"\nassert solution(\"2 110000\\n110001\\n100010\\n100011\\n\") == \"4\"\nassert solution
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n\"\nassert solution(\"1 1\\n\") == \"1\\n\"\nassert solution(\"10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n6\"\nassert solution(\"4 10101\\n01110\\n01001\") == \"5\\n6\"\nassert solution(\"6 01011\\n00111\\n10010\") == \"4\\n7\"\nassert solution(\"5 11111\\n11111\\n10111\") == \"4\\n6\""
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4\\n\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\\n\") == \"4\\n\"\n"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n\"\nassert solution(\"10 222\\n1111\\n10111\\n10010\") == \"5\\n\"\nassert solution(\"10 111\\n1111\\n1111\\n1111\") == \"5\\n\"\nassert solution(\"10 222\\n1111\\n1111\\n1111\") == \"5\\n\"\nassert solution(\"10 111\\n1111\\n1111\\n1111\") == \"5\\n\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n\"\nassert solution(\"10 222\\n1111\\n10111\\n10010\") == \"5\\n\"\nassert solution(\"10 111\\n1111\\n1111\\n1111\") == \"5\\n\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('11 11 5') == '1\\n'\nassert solution('11 2 3') == '-1\\n'"
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test failed for input {input()} and output {output}\"\nprint(\"Test passed\")"
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11 11 5\\n\") == \"1\\n\"\nassert solution(\"11 2 3\\n\") == \"-1\\n\"\n"
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11 11 5\\n11 2 3\\n\") == \"1\\n\"\nassert solution(\"1 2 3\\n1 1 2\\n\") == \"-1\\n\"\nassert solution(\"5 5 5\\n5 5 5\\n\") == \"1\\n\"\nassert solution(\"1 10 10\\n1 5 10\\n\") == \"1\\n\"\nassert solution(\"1 2 3\\n4 5 6\\n\") == \"-1\\n\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\"\nassert solution(\"10 10 10\") == \"1\"\nassert solution(\"10 1 1\") == \"1\"\nassert solution(\"20 20 20\") == \"1\"\nassert solution(\"10 10 0\") == \"1\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11 11 5\\n11 2 3\\n\") == \"1\\n\"\nassert solution(\"1 1 1\\n2 3 4\\n\") == \"-1\\n\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11 11 5\") == \"1\\n\"\nassert solution(\"11 2 3\") == \"-1\\n\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\"\n"
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\"\n\nimport math"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 2 6') == '6.5'\nassert solution('4 2 20') == '20.0'"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 2 6') == '6.5'\nassert solution('4 2 20') == '20.0'\n\nprint(\"All tests passed.\")"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 2, 6) == 6.5\nassert solution(4, 2, 20) == 20.0"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\"\n\nfrom typing import List"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 2 6') == '6.5'\nassert solution('4 2 20') == '20.0'"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"6.5\", \"The solution is incorrect.\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2 6\") == 6.5\nassert solution(\"4 2 20\") == 20.0"
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\\n4 4\\n....\\n#.#.\\n....\\n.#..\\n\\n3 4\\n....\\n.##.\\n....\\n\") == \"2\\n\"\nassert solution(\"4 4\\n....\\n#.#.\\n....\\n.#..\\n\\n3 4\\n....\\n.##.\\n....\\n\") == \"1\\n\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\\n\") == \"2\\n\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''2 2\n..\n..\n''') == '2\\n'\nassert solution('''4 4\n....\n"
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n2 2\n..\n..\n''') == '2'\n\nassert solution('''\n4 4\n....\n"
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\\n4 4\\n....\\n#.#.\\n....\\n.#..\\n\\n3 4\\n....\\n.##.\\n....\\n\") == \"2\"\nassert solution(\"4 4\\n....\\n#.#.\\n....\\n.#..\\n\\n3 4\\n....\\n.##.\\n....\\n\") == \"1\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\") == \"2\"\nassert solution(\"4 4\\n....\\n#.#.\\n....\\n.#..\") == \"1\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\\n4 4\\n....\\n#.#.\\n....\\n.#..\") == \"2\\n\"\nassert solution(\"4 4\\n....\\n.##.\\n....\\n\\n3 4\\n....\\n.##.\\n....\\n\") == \"1\\n\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\\n\") == \"2\\n\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_data) == output_data, f\"Solution is incorrect. Expected: '{output_data}', Received: '{solution(input_data)}'\"\n"
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\") == \"2\"\nassert solution(\"4 4\\n....\\n#.#.\\n....\\n.#..\\n\") == \"1\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\\n4 4\\n....\\n#.#.\\n....\\n.#..\\n\\n3 4\\n....\\n.##.\\n....\\n\\n\") == \"2\"\nassert solution(\"4 4\\n....\\n#.#.\\n....\\n.#..\\n\\n3 4\\n....\\n.##.\\n....\\n\") == \"1\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\\n\"\nassert solution(\"2\\n3 2\") == \"5\\n\"\nassert solution(\"2\\n1 2\") == \"1\\n\"\nassert solution(\"5\\n2 3 3 2 3\") == \"105\\n\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n1 1 3\n\"\"\") == \"6\"\n\nimport itertools"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 1 3\\n\") == \"6\\n\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"6\"\n"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"3\\n1 1 3\\n\") == \"6\"\nassert solution(stdin=\"10\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"106204\"\nassert solution(stdin=\"100\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"106204738\"\n"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '6'\n"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"6\\n\", \"The correct output should be 6\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\\n\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\\n\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"6\\n\", \"The solution should be printed.\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\na_1 a_2... a_N\\n\") == \"11\\n3\\n1\\n4\\n2\"\n"
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"120\\n5\\n1\\n2\\n3\\n4\"\nassert solution(\"3\\n2 1 4 3 2\") == \"7\\n2\\n1\\n4\\n3\\n2\"\nassert solution(\"5\\n1 1 1 1 1\") == \"10\\n1\\n1\\n1\\n1\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"1060\\n5\\n1\\n2\\n3\\n4\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\") == \"2\\n3\\n4\\n1\"\n"
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 4 3 7 5\\n\") == \"11\\n3\\n1\\n4\\n2\\n\"\nassert solution(\"6\\n1 4 3 7 5\\n\") == \"11\\n3\\n1\\n4\\n2\\n\"\nassert solution(\"4\\n1 4 3 7 5\\n\") == \"11\\n3\\n1\\n4\\n2\\n\"\nassert solution(\"5\\n1 4 3 7 5\\n\") == \"11\\n3\\n1\\n4\\n2\\n\"\nassert solution(\"6\\n1 4 3 7 5\\n\") == \"11\\n3\\n1\\n4\\n2\\n\"\nassert solution(\"5\\n1 4 3 7 5\\n\") == \"11\\n3\\n1\\n4\\n2\\n\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"11\\n3\\n1\\n4\\n2\"\nprint(\"Test passed successfully.\")"
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 4 3 7 5\\n\") == \"11\\n3\\n1\\n4\\n2\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\"\nassert solution(\"5\\n1 4 3 7\") == \"7\\n2\\n1\\n4\"\nassert solution(\"5\\n1 4\") == \"4\\n1\\n2\"\nassert solution(\"5\\n1\") == \"1\\n1\\n1\"\nassert solution(\"5\\n2 4 5 3\") == \"10\\n3\\n2\\n1\"\nassert solution(\"5\\n\") == \"1\\n1\\n1\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\"\nassert solution(\"5\\n1 4 3 7\") == \"2\\n1\\n4\\n2\"\nassert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output\nprint(\"Test passed\")"
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 1\\n10.245\") == \"10.25\"\nassert solution(\"6 2\\n10.245\") == \"10.3\"\nassert solution(\"3 100\\n9.2\") == \"9.2\"\nassert solution(\"6 2\\n10.245\\n3 5\\n1.2345\") == \"10.246\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 1\\n10.245\\n\") == \"10.25\\n\"\nassert solution(\"6 2\\n10.245\\n\") == \"10.3\\n\"\nassert solution(\"3 100\\n9.2\\n\") == \"9.2\\n\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"10.25\"\nassert solution(input()) == \"10.3\"\nassert solution(input()) == \"9.2\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 1\\n10.245\") == \"10.25\"\nassert solution(\"6 2\\n10.245\") == \"10.3\"\nassert solution(\"3 100\\n9.2\") == \"9.2\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 1\\n10.245\") == \"10.25\"\nassert solution(\"6 2\\n10.245\") == \"10.3\"\nassert solution(\"3 100\\n9.2\") == \"9.2\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 1\\n10.245\") == \"10.25\\n\"\nassert solution(\"6 2\\n10.245\") == \"10.3\\n\"\nassert solution(\"3 100\\n9.2\") == \"9.2\\n\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 1\\n10.245\\n\\n6 2\\n10.245\\n\\n3 100\\n9.2\\n\") == \"10.3\"\nassert solution(\"6 1\\n10.245\\n\\n6 2\\n10.245\\n\\n3 100\\n9.2\\n\") == \"10.3\"\nassert solution(\"3 100\\n9.2\\n\") == \"9.2\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 1\\n10.245\\n\") == \"10.25\"\nassert solution(\"6 2\\n10.245\\n\") == \"10.3\"\nassert solution(\"3 100\\n9.2\\n\") == \"9.2\"\n\nfrom typing import List"
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 1\\n10.245\") == \"10.25\"\nassert solution(\"6 2\\n10.245\") == \"10.3\"\nassert solution(\"3 100\\n9.2\") == \"9.2\"\nassert solution(\"6 100\\n9.2\") == \"10.25\"\nassert solution(\"6 100\\n10.245\") == \"10.25\"\n"
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"  # incorrect\nassert solution(\"1 2 2 1\") == \"0110\"  # correct"
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4') == 'Impossible'\nassert solution('1 2 2 1') == '0110'"
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"  # Test case 1\nassert solution(\"1 2 2 1\") == \"0110\"  # Test case 2\n"
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"0110\"\n"
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4') == 'Impossible'\nassert solution('1 2 2 1') == '0110'"
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\n*..P*P*\") == \"3\"\nassert solution(\"10\\n.**PP.*P.*\") == \"2\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\n*..P*P*\\n\") == \"3\\n\"\nassert solution(\"10\\n.**PP.*P.*\\n\") == \"2\\n\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\n*..P*P*\\n\") == \"3\"\nassert solution(\"10\\n.**PP.*P.*\\n\") == \"2\"\nassert solution(\"7\\n*..P*P*\\n\") == \"3\"\nassert solution(\"10\\n.**PP.*P.*\\n\") == \"2\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\"\nassert solution() == \"2\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed. Expected output: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Test case failed. Please check the example inputs and outputs.\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output() for input, output in [\n    (input(), output()) for input in [\"7\", \"10\", \"10\"] for output in [\"3\", \"2\"]\n]"
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n*..P*P*\\n\") == \"3\"\nassert solution(\"10\\n.**PP.*P.*\\n\") == \"2\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n*..P*P*\\n\") == \"3\\n\"\nassert solution(\"10\\n.**PP.*P.*\\n\") == \"2\\n\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_str) == output_str, f\"Test failed for input {input_str}, expected output {output_str}\"\nfor input_str, output_str in [\n    (\"7\", \"3\"),\n    (\"10\", \"2\"),\n]:\n    solution(input_str)"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"4\\n\"\nassert solution(\"2\") == \"8\\n\"\nassert solution(\"3\") == \"16\\n\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1\\n') == '4\\n'\nassert solution('2\\n') == '8\\n'\nassert solution('3\\n') == '16\\n'\n\nfrom typing import List"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"4\"\nassert solution(4) == \"8\"\nassert solution(5) == \"16\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == output, f\"Test Case {t+1} failed.\"\nfor t in range(int(stdin)):\n    n = int(input())\n    blocked_points = set(range(1, n+1)) - set(range(1, n+1))\n    points_to_pick = []\n    for i in range(n):\n        for j in range(n):\n            distance = 0\n            if i == j or not i in blocked_points or not j in blocked_points:\n                continue\n            for k in range(n):\n                if k == i or k == j:\n                    continue\n                if distance == 0:\n                    points_to_pick.append((i, j))\n                if distance < 1 and abs(i-j) <= 1:\n                    break\n                distance += 1\n            if distance == 0:\n                points_to_pick.append((i, j))\n                break\n    blocked_points.update(set(points_to_pick))\n    print(len(blocked_points))\n"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Test failed. Expected: {output()}, Received: {solution(input())}\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"8\"\nassert solution(\"3\") == \"16\"\n"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n') == '4'\nassert solution('2\\n') == '8'\nassert solution('3\\n') == '16'"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == \"4\"\nassert solution(2) == \"8\"\nassert solution(3) == \"16\"\n\nfrom typing import List"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2\\n4\\n8\\n16\\n'"
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(9, 9, 5, 5, 2, 1) == '1 3 9 7'\nassert solution(100, 100, 52, 50, 46, 56) == '17 8 86 92'"
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\\n\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\\n\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1 3 9 7\\n17 8 86 92\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('9 9 5 5 2 1') == '1 3 9 7'\nassert solution('100 100 52 50 46 56') == '17 8 86 92'"
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    9 9 5 5 2 1\n    ''') == '''1 3 9 7'''\n\nassert solution('''\n    100 100 52 50 46 56\n    ''') == '''17 8 86 92'''"
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('9 9 5 5 2 1') == '1 3 9 7\\n', \"Your solution is incorrect.\"\nassert solution('100 100 52 50 46 56') == '17 8 86 92\\n', \"Your solution is incorrect.\"\n"
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"\"\"1 3 9 7\n\"\"\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1 3 9 7\\n17 8 86 92\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1 3 9 7\\n17 8 86 92\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"FTFFTFFF\\n4 2\") == \"Yes\\n\", \"The objective can be achieved by, for example, turning counterclockwise in the first T and turning clockwise in the second T.\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Yes\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('FTFFTFFF\\n4 2') == 'Yes'\nassert solution('F\\n2\\nT\\n2\\nF\\n5\\nT\\nT\\nF\\n5\\nT\\nT\\n') == 'No'"
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"FTFFTFFF\\n4 2\") == \"Yes\"\nassert solution(\"TFFTTFF\\n3 4\") == \"Yes\"\nassert solution(\"FFTTFF\\n2 4\") == \"Yes\"\nassert solution(\"TFTTFT\\n3 2\") == \"No\"\nassert solution(\"TTTFFT\\n3 4\") == \"Yes\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"FTFFTFFF\\n4 2\") == \"Yes\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    FTFFTFFF\n    \"\"\"\n) == \"Yes\\n\"\n\nassert solution(\n    \"\"\"\n    F\n    T\n    \"\"\"\n) == \"Yes\\n\"\n\nassert solution(\n    \"\"\"\n    FTFF\n    \"\"\"\n) == \"No\\n\"\n\nassert solution(\n    \"\"\"\n    F\n    T\n    T\n    F\n    \"\"\"\n) == \"Yes\\n\"\n\nassert solution(\n    \"\"\"\n    F\n    T\n    T\n    T\n    F\n    \"\"\"\n) == \"No\\n\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('FTFFTFFF') == 'Yes', \"Invalid input\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"FTFFTFFF\\n4 2\") == \"Yes\"\nassert solution(\"TFTF\\n1 2\") == \"No\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"FTFFTFFF\\n4 2\") == \"Yes\", \"Test failed\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\") == 2\nassert solution(\"2\") == 3\nassert solution(\"3\") == 5\nassert solution(\"4\") == 6\nassert solution(\"1\") == 2\nassert solution(\"2\") == 3\nassert solution(\"3\") == 5\nassert solution(\"4\") == 6\nassert solution(\"1\") == 2\nassert solution(\"2\") == 3\nassert solution(\"3\") == 5\nassert solution(\"4\") == 6"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == \"2\"\nassert solution(2) == \"3\"\nassert solution(3) == \"5\"\nassert solution(4) == \"6\"\n\nfrom functools import reduce"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == '3'\nassert solution(4) == '6'"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 2\nassert solution(2) == 3\nassert solution(3) == 5\nassert solution(4) == 6\n"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4) == \"6\"\nassert solution(1) == \"2\"\nassert solution(2) == \"3\"\nassert solution(3) == \"5\"\nassert solution(4) == \"6\"\n"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"6\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == '2'\nassert solution(2) == '3'\nassert solution(3) == '5'\nassert solution(4) == '6'"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"6\"\n\nfrom typing import List"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output\nprint(f\"OK\")\n"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\na_1 a_2 a_3\\np 3\\n\") == \"1.3333333333\"\nassert solution(\"2\\na_1 a_2\\np 4\\n\") == \"1.6666666667\"\nassert solution(\"4\\na_1 a_2 a_3\\np 6\\n\") == \"1.6666666667\"\nassert solution(\"5\\na_1 a_2 a_3 a_4 a_5\\np 9\\n\") == \"1.9736842105\"\nassert solution(\"7\\na_1 a_2 a_3 a_4 a_5 a_6 a_7\\np 13\\n\") == \"2.0\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\\n3\") == \"1.3333333333\"\nassert solution(\"4\\n1 2 3\\n1\") == \"1.0000000000\"\nassert solution(\"5\\n1 2 3\\n2\") == \"0.6666666667\"\nassert solution(\"6\\n1 2 3\\n3\") == \"0.5000000000\"\nassert solution(\"7\\n1 2 3\\n4\") == \"0.3333333333\"\nassert solution(\"8\\n1 2 3\\n5\") == \"0.2000000000\"\nassert solution(\"9\\n1 2 3\\n6\") == \"0.1666666667\"\nassert solution(\"10\\n1 2 3\\n7\") == \"0.1428571429\"\nassert solution(\"11\\n1 2 3\\n8\") == \"0.1250000000\"\nassert solution(\"12\\n1 2 3\\n9\") == \"0.1111111111\"\nassert solution(\"13\\n1 2 3\\n10\") == \"0.1000000000\"\nassert solution(\"14\\n1 2 3\\n11\") == \"0.0909090909\"\nassert solution(\"15\\n1 2 3\\n12\") == \"0.0833333333\"\nassert solution(\"16\\n1 2 3\\n13\") == \"0.0781250000\"\nassert solution(\"17\\n1 2 3\\n14\") == \"0.0734782608\"\nassert solution(\"18\\n1 2 3\\n15\") == \"0.0692307692\"\nassert solution(\"19\\n1 2 3\\n16\") == \"0.0656250000\"\nassert solution(\"20\\n1 2 3\\n17\") == \"0.0625000000\"\nassert solution(\"21\\n1 2 3\\n18\") == \"0.0606160616\"\nassert solution(\"22\\n1 2 3\\n19\") == \"0.0590909091\"\nassert solution(\"23\\n1 2 3\\n20\") == \"0.0575757576\"\nassert solution(\"24\\n1 2 3\\n21\") == \"0.0562500000\"\nassert solution(\"25\\n1 2 3\\n22\") == \"0.0549285714\"\nassert solution(\"26\\n1 2 3\\n23\") == \"0.0538461538\"\nassert solution(\"27\\n1 2 3\\n24\") == \"0.0528320375\"\nassert solution(\"28\\n1 2 3\\n25\") == \"0.0519841256\"\nassert solution(\"29\\n1 2 3\\n26\") == \"0.0512258064\"\nassert solution(\"30\\n1 2 3\\n27\") == \"0.0505362562\"\nassert solution(\"31\\n1 2 3\\n28\") == \"0.0499151558\"\nassert solution(\"32\\n1 2 3\\n29\") == \"0.0493653846\"\nassert solution(\"33\\n1 2 3\\n30\") == \"0.0488888889\"\nassert solution(\"34\\n1 2 3\\n31\") == \"0"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n1 2 3\\n3') == '1.3333333333'\nassert solution('2\\n1 3 2\\n1') == '0.6666666667'\nassert solution('4\\n1 2 3 4\\n3') == '3.0000000000'\nassert solution('5\\n1 2 3 4 5\\n3') == '4.0000000000'\nassert solution('6\\n1 2 3 4 5 6\\n3') == '5.0000000000'"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3\\n3\") == 1.3333333333\nassert solution(\"10\\n2 3 4\") == 0.5\nassert solution(\"2\\n1 1 1\\n2\") == 1.0\nassert solution(\"10\\n1 2 3\") == 0.25\nassert solution(\"3\\n1 2 3\") == 1.3333333333\nassert solution(\"3\\n1 2 3\\n3\") == 1.3333333333"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\na_1 a_2 a_3\\n3\\n1 2 3\\n3\") == \"1.3333333333\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1.3333333333\", \"The output should be 1.3333333333\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Output: {output}, Expected: {output}\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\na_1 a_2 a_3\\np 3\\na_1 a_3 a_2\") == \"1.3333333333\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 1.3333333333\nassert solution() == 1.0\n"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n\") == \"1.3333333333\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == output, f\"Your code is incorrect. Please see the example for the correct input and output.\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 1 2\\n9 7 11 15 5\\n') == '13 7\\n', \"Input1\"\nassert solution('2 100000 569\\n605 986\\n') == '986 605\\n', \"Input2\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n\") == \"13 7\"\nassert solution(\"2 100000 569\\n605 986\\n\") == \"986 605\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n\\n2 100000 569\\n605 986\") == \"13 7\\n986 605\"\nassert solution(\"5 1 2\\n9 7 11 15 5\\n\\n2 100000 569\\n605 986\") == \"13 7\\n986 605\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n\") == \"13 7\"\nassert solution(\"2 100000 569\\n605 986\\n\") == \"986 605\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '13 7\\n986 605'"
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n2 100000 569\\n605 986\") == \"13 7\\n986 605\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n\") == \"13 7\\n\"\nassert solution(\"2 100000 569\\n605 986\\n\") == \"986 605\\n\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"13 7\", \"The output is not correct. Please check the example and test cases.\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n2 100000 569\\n605 986\\n\") == \"13 7\\n986 605\"\nassert solution(\"5 1 2\\n9 7 11 15 5\\n2 100000 569\\n605 986\\n\") == \"13 7\\n986 605\""
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n3 3 2 4 4\n2 5 4 10\n''') == '1'\nassert solution('''\n3 3 3 3 5\n2 3 5 4 2\n''') == '0'\nassert solution('''\n5 5 1 2 3\n2 2 3\n''') == '-1'\nassert solution('''\n3 4 1 1 3\n2 3 2\n''') == '3'"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\\n\") == \"1\\n\"\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\\n\") == \"0\\n\"\nassert solution(\"5 5 1 2 3\\n2 2 3\\n\") == \"-1\\n\"\nassert solution(\"3 4 1 1 3\\n2 3 2\\n\") == \"3\\n\""
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\\n\") == \"1\\n\"\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\\n\") == \"0\\n\"\nassert solution(\"5 5 1 2 3\\n2 2 3\\n\") == \"-1\\n\"\nassert solution(\"3 4 1 1 3\\n2 3 2\\n\") == \"3\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\\n\") == \"1\\n\"\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\\n\") == \"0\\n\"\nassert solution(\"5 5 1 2 3\\n2 2 3\\n\") == \"-1\\n\"\nassert solution(\"3 4 1 1 3\\n2 3 2\\n\") == \"3\\n\""
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\\n\") == \"1\"\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\\n\") == \"0\"\nassert solution(\"5 5 1 2 3\\n2 2 3\\n\") == \"-1\"\nassert solution(\"3 4 1 1 3\\n2 3 2\\n\") == \"3\""
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3 2 4 4\\n2 5 4 10') == '1'\nassert solution('3 3 3 3 5\\n2 3 5 4 2') == '0'\nassert solution('5 5 1 2 3\\n2 2 3') == '-1'\nassert solution('3 4 1 1 3\\n2 3 2') == '3'\n"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\") == \"1\"\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\") == \"0\"\nassert solution(\"5 5 1 2 3\\n2 2 3\") == \"-1\"\nassert solution(\"3 4 1 1 3\\n2 3 2\") == \"3\""
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '1'\nassert solution('3 3 2 4 4\\n2 5 4 10\\n') == '1'\nassert solution('3 3 3 3 5\\n2 3 5 4 2\\n') == '0'\nassert solution('5 5 1 2 3\\n2 2 3\\n') == '-1'\nassert solution('3 4 1 1 3\\n2 3 2\\n') == '3'"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\") == 1\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\") == 0\nassert solution(\"5 5 1 2 3\\n2 2 3\") == -1\nassert solution(\"3 4 1 1 3\\n2 3 2\") == 3"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"0\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"-1\\n\"\nassert solution(input()) == \"3\\n\"\n"
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\nG3 G3\") == \"0\\n\"\nassert solution(\"4\\nG4 R4 R3 B3\") == \"2\\n\"\nassert solution(\"5\\nB1 Y1 W1 G1 R1\") == \"4\\n\"\n"
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test failed. Please check the output and solve the problem.\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"0\\n\" # Output: \"0\\n\"\nassert solution(open(\"input2.txt\", \"r\")) == \"2\\n\" # Output: \"2\\n\"\nassert solution(open(\"input3.txt\", \"r\")) == \"4\\n\" # Output: \"4\\n\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\nG3 G3\\n\") == \"0\\n\"\nassert solution(\"4\\nG4 R4 R3 B3\\n\") == \"2\\n\"\nassert solution(\"5\\nB1 Y1 W1 G1 R1\\n\") == \"4\\n\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"G3 G3\") == \"0\"\nassert solution(\"G4 R4 R3 B3\") == \"2\"\nassert solution(\"B1 Y1 W1 G1 R1\") == \"4\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"G3 G3\") == \"0\"\nassert solution(\"G4 R4 R3 B3\") == \"2\"\nassert solution(\"B1 Y1 W1 G1 R1\") == \"4\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Incorrect output for {input()}: expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\nG3 G3\\n\") == \"0\\n\"\nassert solution(\"4\\nG4 R4 R3 B3\\n\") == \"2\\n\"\nassert solution(\"5\\nB1 Y1 W1 G1 R1\\n\") == \"4\\n\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\nG3 G3\\n\") == \"0\"\nassert solution(\"4\\nG4 R4 R3 B3\\n\") == \"2\"\nassert solution(\"5\\nB1 Y1 W1 G1 R1\\n\") == \"4\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"G3 G3\") == 0\nassert solution(\"G4 R4 R3 B3\") == 2\nassert solution(\"B1 Y1 W1 G1 R1\") == 4"
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\") == \"2 6\"\nassert solution(\"2\\n1 1\\n100 100\") == \"1 1\"\nassert solution(\"5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"3 11\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\") == \"2 6\"\nassert solution(\"2\\n1 1\\n100 100\") == \"1 1\"\nassert solution(\"5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"3 11\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n\") == \"2 6\\n\"\nassert solution(\"2\\n1 1\\n100 100\\n\") == \"1 1\\n\"\nassert solution(\"5\\n10 30 5 6 24\\n10 41 7 8 24\\n\") == \"3 11\\n\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n4\n3 3 4 3\n4 7 6 5\n''') == '''\n2 6\n'''\n\nassert solution('''\n2\n1 1\n100 100\n''') == '''\n1 1\n'''\n\nassert solution('''\n5\n10 30 5 6 24\n10 41 7 8 24\n''') == '''\n3 11\n'''"
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Input\\n4\\n3 3 4 3\\n4 7 6 5\\n\") == \"Output\\n2 6\\n\"\nassert solution(\"Input\\n2\\n1 1\\n100 100\\n\") == \"Output\\n1 1\\n\"\nassert solution(\"Input\\n5\\n10 30 5 6 24\\n10 41 7 8 24\\n\") == \"Output\\n3 11\\n\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Got: {solution(input())}, Expected: {expected_output}\"\n\nfrom typing import List"
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"\"\"2 6\n1 1\n100 100\n5\n10 30 5 6 24\n10 41 7 8 24\"\"\"\n\nassert solution(solution()) == \"\"\"2 6\n1 1\n100 100\n5\n10 30 5 6 24\n10 41 7 8 24\"\"\"\n\nassert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n2\\n1 1\\n100 100\\n5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"\"\"2 6\n1 1\n100 100\n5\n10 30 5 6 24\n10 41 7 8 24\"\"\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\") == \"2 6\"\nassert solution(\"2\\n1 1\\n100 100\") == \"1 1\"\nassert solution(\"5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"3 11\"\nassert solution(\"4\\n3 2 4 3\\n4 7 6 5\") == \"2 6\"\nassert solution(\"2\\n1 1\\n100 100\") == \"1 1\"\nassert solution(\"5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"3 11\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r\"4\\n3 3 4 3\\n4 7 6 5\") == \"2 6\"\nassert solution(r\"2\\n1 1\\n100 100\") == \"1 1\"\nassert solution(r\"5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"3 11\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Input\\n4\\n3 3 4 3\\n4 7 6 5\\n\\nInput\\n2\\n1 1\\n100 100\\n\\nInput\\n5\\n10 30 5 6 24\\n10 41 7 8 24\\n\\nOutput\\n2 6\\n1 1\\n3 11') == 'Output\\n2 6\\n1 1\\n3 11'"
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 4') == '3B'\nassert solution('2 2') == 'Impossible'\nassert solution('3 2') == '1A1B'\n\nfrom typing import List"
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 4') == '3B'\nassert solution('2 2') == 'Impossible'\nassert solution('3 2') == '1A1B'"
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '3B'"
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 4') == '3B'\nassert solution('2 2') == 'Impossible'\nassert solution('3 2') == '1A1B'"
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 4\") == \"3B\", \"1 4 should return 3B\"\nassert solution(\"2 2\") == \"Impossible\", \"2 2 should return Impossible\"\nassert solution(\"3 2\") == \"1A1B\", \"3 2 should return 1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"5 4\") == \"25\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(3) + \" \" + str(2)) == \"3\"\nassert solution(str(5) + \" \" + str(4)) == \"25\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"25\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"3\\n\"\nassert solution(\"5 4\") == \"25\\n\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"25\"\n"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"3\\n\"\nassert solution(\"5 4\") == \"25\\n\"\n"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"5 4\") == \"25\"\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 3\nassert solution(input()) == 25"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\\n\"\nassert solution(input()) == \"25\\n\"\nassert solution(input()) == \"5\\n\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"5 4\") == \"25\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n\") == \"1\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '1'"
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(4, 4)) == 1"
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2') == '1'\nassert solution('4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2') == '1'\n"
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\"\nassert solution(\"1 3\\n2 4\\n3 1\\n4 3\") == \"2\"\nassert solution(\"4 4\\n0 0\\n0 0\\n0 0\") == \"0\"\nassert solution(\"5 5\\n3 2\\n1 3\\n2 3\\n1 2\\n2 1\\n3 3\\n4 2\") == \"2\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\n"
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\\n\\nDeleting Vertex 2 costs 1.\\nAfter that, the graph is separated into two connected components.\\nThe score of the component consisting of Vertex 1 is |0| = 0. The score of the component consisting of Vertices 3 and 4 is |(-3) + 1| = 2. Therefore, Snuke's profit is 0 + 2 - 1 = 1. He cannot gain more than 1, so the answer is 1.\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 1"
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\\nDeleting Vertex 2 costs 1.After that, the graph is separated into two connected components.The score of the component consisting of Vertex 1 is |0| = 0. The score of the component consisting of Vertices 3 and 4 is |(-3) + 1| = 2.Therefore, Snuke's profit is 0 + 2 - 1 = 1. He cannot gain more than 1, so the answer is 1.\"\n\nprint(solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\"))\n"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\nS.o\\n.o.o.T\\n\") == \"2\"\nassert solution(\"4 4\\nS.o\\n.o.o.T\\n\") == \"-1\"\nassert solution(\"5 5\\nS.o\\n.o.o.T\\n\") == \"-1\""
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3\\nS.o\\no.o.\\nT.o') == '2\\n'\nassert solution('4 3\\no.\\n.o.\\nS') == '-1\\n'\nassert solution('3 3\\no\\n.o\\n.T') == '2\\n'\n"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '2'\nassert solution(input()) == '-1'"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\nS.o\\no.o\\no.T\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\\n\""
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\nS.o\\no.o.o\\no.T') == '2\\nRemove the upper-right and lower-left leaves.'"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\nS.o\\no.o.o.o.o.\\nT.T\\no.o.o.o.o.\\no.o.o.o.o.\\nT.T\\no.o.o.o.o.\\no.o.o.o.o.\\nT.T\\no.o.o.o.o.\\no.o.o.o.o.\\nT.T\\no.o.o.o.o.\\no.o.o.o.o.\\nT.T\\no.o.o.o.o.\\no.o.o.o.o.\\nT.T\\no.o.o.o.o.\\no.o.o.o.o.\\nT.T\\no.o.o.o.o.\\no.o.o.o.o.\\nT.T\\no.o.o.o.o.\\no.o.o.o.o.\\nT.T\\no.o.o.o.o.\\no.o.o.o.o.\\nT.T\\no.o.o.o.o.\\no.o.o.o.o.\\nT.T\\no.o.o.o.o.\\no.o.o.o.o.\\nT.T\\no.o.o.o.o.\\no.o.o.o.o.\\nT.T\\no.o.o.o.o.\\no.o.o.o.o.\\nT.T\\no.o.o.o.o.\\no.o.o.o.o.\\nT.T\\no.o.o.o.o.\\no.o.o.o.o.\\nT.T\\no.o.o.o.o.\\no.o.o.o.o.\\nT.T\\no.o.o.o.o.\\no.o.o.o.o.\\nT.T\\no.o.o.o.o.\\no.o.o.o.o.\\nT.T\\no.o.o.o.o.\\no.o.o.o.o.\\nT.T\\no.o.o.o.o.\\no.o.o.o.o.\\nT.T\\no.o.o.o.o.\\no.o.o.o.o.\\nT.T\\no.o.o.o.o.\\no.o.o.o.o.\\nT.T\\no.o.o.o.o.\\no.o.o.o.o.\\nT.T\\no.o.o.o.o.\\no.o.o.o.o.\\nT.T\\no.o.o.o.o.\\no.o.o.o.o.\\nT.T\\no.o.o.o.o.\\no.o.o.o.o.\\nT.T\\no.o.o.o.o.\\no.o.o.o.o.\\nT.T\\no.o.o.o.o.\\no.o.o.o.o.\\nT.T\\no.o.o.o.o.\\no.o.o.o.o.\\nT.T\\no.o.o.o.o.\\no.o.o.o.o.\\nT.T\\no.o.o.o.o.\\no.o.o.o.o.\\nT.T\\no.o.o.o.o.\\no.o.o.o.o.\\nT.T\\no.o.o.o.o.\\no.o.o.o.o.\\nT.T\\no.o.o.o.o.\\no.o.o.o.o.\\nT.T\\no.o.o.o.o.\\no.o.o.o.o.\\nT.T\\no.o.o.o.o.\\no.o.o.o.o.\\nT.T\\no.o.o.o.o.\\no.o.o.o.o.\\nT.T\\no.o.o.o.o.\\no.o.o.o.o.\\nT.T\\no.o.o.o.o.\\no.o.o.o.o.\\nT.T\\no.o.o.o.o.\\no.o.o.o.o.\\nT.T"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\nS.o\\n.o.o.T\") == \"2\\nRemove the upper-right and lower-left leaves.\"\nassert solution(\"4 4\\n.S.S.S.S.S\\n.S.S.S.S.S\\n.S.S.S.S.S\\n.S.S.S.S.S\\n\") == \"-1\\n\"\nassert solution(\"3 3\\nS.o\\n.o.o.T\") == \"2\\nRemove the upper-right and lower-left leaves.\"\nassert solution(\"4 4\\n.S.S.S.S.S\\n.S.S.S.S.S\\n.S.S.S.S.S\\n.S.S.S.S.S\\n\") == \"-1\\n\"\nassert solution(\"3 3\\nS.o\\n.o.o.T\") == \"2\\nRemove the upper-right and lower-left leaves.\"\nassert solution(\"4 4\\n.S.S.S.S.S\\n.S.S.S.S.S\\n.S.S.S.S.S\\n.S.S.S.S.S\\n\") == \"-1\\n\"\nassert solution(\"3 3\\nS.o\\n.o.o.T\") == \"2\\nRemove the upper-right and lower-left leaves.\"\nassert solution(\"4 4\\n.S.S.S.S.S\\n.S.S.S.S.S\\n.S.S.S.S.S\\n.S.S.S.S.S\\n\") == \"-1\\n\"\nassert solution(\"3 3\\nS.o\\n.o.o.T\") == \"2\\nRemove the upper-right and lower-left leaves.\"\nassert solution(\"4 4\\n.S.S.S.S.S\\n.S.S.S.S.S\\n.S.S.S.S.S\\n.S.S.S.S.S\\n\") == \"-1\\n\"\nassert solution(\"3 3\\nS.o\\n.o.o.T\") == \"2\\nRemove the upper-right and lower-left leaves.\"\nassert solution(\"4 4\\n.S.S.S.S.S\\n.S.S.S.S.S\\n.S.S.S.S.S\\n.S.S.S.S.S\\n\") == \"-1\\n\"\nassert solution(\"3 3\\nS.o\\n.o.o.T\") == \"2\\nRemove the upper-right and lower-left leaves.\"\nassert solution(\"4 4\\n.S.S.S.S.S\\n.S.S.S.S.S\\n.S.S.S.S.S\\n.S.S.S.S.S\\n\") == \"-1\\n\"\nassert solution(\"3 3\\nS.o\\n.o.o.T\") == \"2\\nRemove the upper-right and lower-left leaves.\"\nassert solution(\"4 4\\n.S.S.S.S.S\\n.S.S.S.S.S\\n.S.S.S.S.S\\n.S.S.S.S.S\\n\") == \"-1\\n\"\nassert solution(\"3 3\\nS.o\\n.o.o.T\") == \"2\\nRemove the upper-right and lower-left leaves.\"\nassert solution(\"4 4\\n.S.S.S.S.S\\n.S.S.S.S.S\\n.S.S.S.S.S\\n.S.S.S.S.S\\n\") == \"-1\\n\"\nassert solution(\"3 3\\nS.o\\n.o.o.T\") == \"2\\nRemove the upper-right and lower-left leaves.\"\nassert solution(\"4 4\\n.S.S.S.S.S\\n.S.S.S.S.S\\n.S.S.S.S.S\\n.S.S.S.S.S\\n\") == \"-1\\n\"\nassert solution(\"3 3\\nS.o\\n.o."
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3\\nS.o\\no.o\\no.T\\n') == '2\\n'\nassert solution('3 3\\nS.o\\no.o\\no.T\\no.T\\n') == '-1\\n'\nassert solution('3 3\\nS.o\\no.o\\no.T\\n') == '2\\n'\nassert solution('3 3\\nS.o\\no.o\\no.T\\no.T\\no.T\\n') == '-1\\n'\nassert solution('3 3\\nS.o\\no.o\\no.T\\n') == '2\\n'\nassert solution('3 3\\nS.o\\no.o\\no.T\\no.T\\no.T\\no.T\\n') == '-1\\n'\nassert solution('3 3\\nS.o\\no.o\\no.T\\n') == '2\\n'\nassert solution('3 3\\nS.o\\no.o\\no.T\\no.T\\no.T\\no.T\\no.T\\n') == '-1\\n'\nassert solution('3 3\\nS.o\\no.o\\no.T\\no.T\\no.T\\no.T\\no.T\\no.T\\no.T\\n') == '-1\\n'\nassert solution('3 3\\nS.o\\no.o\\no.T\\no.T\\no.T\\no.T\\no.T\\no.T\\no.T\\no.T\\n') == '-1\\n'"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\nS.o\\n.o.o\\nT\\n\") == 2\nassert solution(\"3 3\\n.o\\n.o\\n.o\\n\") == -1"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 2, \"Remove the upper-right and lower-left leaves.\""
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 1\nassert solution(3) == 3\nassert solution(199) == 200"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 1, \"The solution should be 1.\"\nassert solution(3) == 3, \"The solution should be 3.\"\nassert solution(199) == 200, \"The solution should be 200.\""
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed: solution({input()})!= {expected_output}\""
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"1\", \"Expected output: 1, but got: \" + solution(\"1 1\")\nassert solution(\"3 2\") == \"3\", \"Expected output: 3, but got: \" + solution(\"3 2\")\nassert solution(\"199 200\") == \"200\", \"Expected output: 200, but got: \" + solution(\"199 200\")"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n\") == \"1\\n\"\nassert solution(\"3 2\\n\") == \"3\\n\"\nassert solution(\"199 200\\n\") == \"200\\n\""
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"1\\n\", \"Test 1\"\nassert solution(\"3 2\") == \"3\\n\", \"Test 2\"\nassert solution(\"199 200\") == \"200\\n\", \"Test 3\""
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test failed\"\n"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 3, \"Expected 3, got {}\".format(solution(3))\nassert solution(199) == 200, \"Expected 200, got {}\".format(solution(199))"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"1\\n\", \"The first sample should result in 1.\\n\"\nassert solution(\"3 2\") == \"3\\n\", \"The second sample should result in 3.\\n\"\nassert solution(\"199 200\") == \"200\\n\", \"The third sample should result in 200.\\n\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\"\nprint(\"All test cases pass.\")"
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n5 2\\n3 3\\n\") == \"Aoki\\n\"\nassert solution(\"3\\n2 3\\n2 2\\n\") == \"Aoki\\nTakahashi\\n\"\nassert solution(\"5\\n1 1\\n1 1\\n\") == \"Aoki\\nTakahashi\\n\"\nassert solution(\"6\\n4 1\\n4 1\\n\") == \"Takahashi\\nAoki\\n\"\nassert solution(\"6\\n4 1\\n4 2\\n\") == \"Takahashi\\nAoki\\n\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n5 2\\n3 3\\n') == 'Aoki\\n'\nassert solution('2\\n5 2\\n3 3\\n4 5\\n') == 'Takahashi\\n'"
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\\n\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\"\n"
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\"\nassert solution(\"4\\n1 1\\n1 1\\n1 1\\n1 1\") == \"Takahashi\"\nassert solution(\"1\\n1 1\\n1 1\\n1 1\\n1 1\") == \"Takahashi\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"Aoki\\n\"\nassert solution(\"1\\n1\\n\") == \"Aoki\\n\"\nassert solution(\"2\\n5 2\\n3 3\\n\") == \"Aoki\\n\"\nassert solution(\"3\\n5 2\\n3 3\\n\") == \"Takahashi\\n\"\nassert solution(\"4\\n5 2\\n3 3\\n\") == \"Aoki\\n\"\nassert solution(\"5\\n5 2\\n3 3\\n\") == \"Takahashi\\n\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == \"Aoki\"\nprint(\"Takahashi\")"
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n5 2\\n3 3\\n\") == \"Aoki\"\nassert solution(\"2\\n5 3\\n3 2\\n\") == \"Takahashi\"\nassert solution(\"2\\n5 4\\n3 3\\n\") == \"Aoki\"\nassert solution(\"2\\n5 5\\n3 2\\n\") == \"Takahashi\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"0\\n\"\nassert solution(\"3 3\") == \"8\\n\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"The function should return the expected output.\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n2') == '0'\nassert solution('3\\n3') == '8'"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 0, \"Expected output: 0, but got: {}\".format(solution())"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"0\\n\"\nassert solution(\"3 3\") == \"8\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n3 3\\n\") == \"0\"\nassert solution(\"3 3\\n\") == \"8\"\n"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n\") == \"0\\n\"\nassert solution(\"3 3\\n\") == \"8\\n\"\n"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n3 3\\n\") == \"0\\n8\\n\"\nassert solution(\"3 3\\n\") == \"8\\n\"\nassert solution(\"1 1\\n3 2\\n\") == \"0\\n8\\n\"\nassert solution(\"3 3\\n\") == \"8\\n\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"0\"\nassert solution(\"2 2\\n3 3\\n\") == \"0\"\nassert solution(\"3 3\\n\") == \"8\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n3 3\\n\") == \"0\\n8\\n\"\nassert solution(\"3 3\\n\") == \"8\\n\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\\n\") == \"1\\n\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\\n\") == \"0\\n\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\\n\") == \"-1\\n\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\\n\") == \"1\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\\n\") == \"0\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\\n\") == \"-1\"\nassert solution(\"3 4\\n1 2 3 4\\n1 2 1 3 2 3\\n\") == \"1\"\nassert solution(\"1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n\") == \"1\"\nassert solution(\"2 2\\n1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n\") == \"2\"\nassert solution(\"1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n\") == \"2\"\nassert solution(\"1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n\") == \"2\"\nassert solution(\"1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n\") == \"2\"\nassert solution(\"1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n\") == \"2\"\nassert solution(\"1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n\") == \"2\"\nassert solution(\"1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n\") == \"2\"\nassert solution(\"1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n\") == \"2\"\nassert solution(\"1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n\") == \"2\"\nassert solution(\"1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n\") == \"2\"\nassert solution(\"1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n\") == \"2\"\nassert solution(\"1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n\") == \"2\"\nassert solution(\"1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n\") == \"2\"\nassert solution(\"1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n\") == \"2\"\nassert solution(\"1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n\") == \"2\"\nassert solution(\"1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n1"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\") == \"1\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\") == \"0\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"-1\"\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\") == \"1\\n\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\") == \"0\\n\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"-1\\n\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 0"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 2\\n1 2 3 4\\n1 5 3 4\\n') == '1\\n'\nassert solution('2 2\\n1 2 3 4\\n1 5 6 4\\n') == '0\\n'\nassert solution('2 3\\n1 2 4 5\\n1 2 1 3 2 3\\n') == '-1\\n'"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected\nassert solution(input()) == expected"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\") == \"1\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\") == \"0\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"-1\"\n"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    2 2\n    1 2 3 4\n    1 5 3 4''') == '1'\n\nassert solution('''\n    2 2\n    1 2 3 4\n    1 5 6 4''') == '0'\n\nassert solution('''\n    2 3\n    1 2 4 5\n    1 2 1 3 2 3''') == '-1'\n\nassert solution('''\n    2 2\n    1 2 3 4\n    1 5 3 4''') == '1'\n\nassert solution('''\n    2 2\n    1 2 3 4\n    1 5 6 4''') == '0'\n\nassert solution('''\n    2 3\n    1 2 4 5\n    1 2 1 3 2 3''') == '-1'"
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"24\") == \"17:30\"\nassert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('24') == '17:30'\nassert solution('12') == '07:30'\nassert solution('24') == '09:09'"
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('24') == '17:30'\nassert solution('12') == '07:30'\nassert solution('24') == '09:09'"
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"24\") == \"17:30\"\nassert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"17:30\"\nassert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"24\") == \"07:30\"\nassert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"24\") == \"17:30\"\nassert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"24\") == \"17:30\"\nassert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(12) == '07:30'\nassert solution(12) == '07:30'\nassert solution(24) == '17:30'\nassert solution(24) == '17:30'\nassert solution(12) == '07:30'"
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"17:30\"\nassert solution(\"12\") == \"01:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"6\"\n"
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\"\nassert solution(\"4 6\\n2\\n1 2 3\\n2 3 5\\n3 4 7\\n4 5 9\") == \"33\"\n"
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\"\nassert solution(\"4 3\\n1\\n1 1 1\\n2 2 1\\n3 3 1\") == \"2\"\nassert solution(\"5 4\\n1\\n1 1 1\\n2 2 1\\n3 3 1\\n4 4 1\") == \"2\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\\n\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(b'3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1') == '6\\n'\nassert solution(b'3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\\n') == '6\\n'\nassert solution(b'3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1') == '6\\n'\nassert solution(b'3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\\n') == '6\\n'\nassert solution(b'3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1') == '6\\n'\nassert solution(b'3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\\n') == '6\\n'\nassert solution(b'3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1') == '6\\n'"
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '6'"
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\\n\"\nassert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\\n4 2 2\") == \"2\\n\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\"\nassert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\\n\") == \"6\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution(stdin) == \"-1\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2 1\\n2 5\\n3 3\\n3 6\\n5 6\\n\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\n"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n2 0 3 0 1 1\") == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"6\\n3 2 2 2 1 1\") == \"-1\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n6\n2 0 3 0 1 1\n''') == '''\n5\n2 1\n2 5\n3 3\n3 6\n5 6\n'''\n\nassert solution('''\n1\n0\n''') == '''\n0\n'''\n\nassert solution('''\n6\n3 2 2 2 1 1\n''') == '''\n-1\n'''"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_data) == expected_output, f\"Test case failed. Expected output: {expected_output}, but got: {solution(input_data)}\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n2 0 3 0 1 1\\n\\n1\\n0\\n\\n6\\n3 2 2 2 1 1\\n\\n-1\") == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\\n\"\nassert solution(\"1\\n0\\n\\n6\\n3 2 2 2 1 1\\n\\n-1\") == \"0\\n\"\nassert solution(\"6\\n3 2 2 2 1 1\\n\\n-1\") == \"-1\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\"5\n2 1\n2 5\n3 3\n3 6\n5 6\"\"\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\"2 1\n2 5\n3 3\n3 6\n5 6\"\"\"\n\nassert solution(stdin) == \"\"\"-1\"\"\"\n\nassert solution(stdin) == \"\"\"0\"\"\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2 0 3 0 1 1\") == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\\n\"\nassert solution(\"6\\n3 2 2 2 1 1\") == \"-1\"\nassert solution(\"1\\n0\") == \"0\\n\"\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 8\\n12 20\\n\") == \"2\\n0 4\\n\"\nassert solution(\"3 10\\n10 20 30\\n\") == \"1\\n0 \""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 8\\n12 20\") == \"2\\n0 4\"\nassert solution(\"3 10\\n10 20 30\") == \"1\\n0\"\n"
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 8\\n12 20\\n\\n3 10\\n10 20 30\\n\\n') == '2\\n0 4 0\\n1\\n0'\nassert solution('3 10\\n10 20 30\\n\\n') == '1\\n0'"
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"Solution\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 8\\n12 20\\n3 10\\n10 20 30\") == \"2\\n0 4 0\\n1\\n0\"\nassert solution(\"2 8\\n12 20\\n3 10\\n10 20 30\") == \"2\\n0 4 0\\n1\\n0\"\nassert solution(\"2 8\\n12 20\\n3 10\\n10 20 30\") == \"2\\n0 4 0\\n1\\n0\"\nassert solution(\"2 8\\n12 20\\n3 10\\n10 20 30\") == \"2\\n0 4 0\\n1\\n0\"\nassert solution(\"2 8\\n12 20\\n3 10\\n10 20 30\") == \"2\\n0 4 0\\n1\\n0\"\nassert solution(\"2 8\\n12 20\\n3 10\\n10 20 30\") == \"2\\n0 4 0\\n1\\n0\"\nassert solution(\"2 8\\n12 20\\n3 10\\n10 20 30\") == \"2\\n0 4 0\\n1\\n0\"\nassert solution(\"2 8\\n12 20\\n3 10\\n10 20 30\") == \"2\\n0 4 0\\n1\\n0\"\nassert solution(\"2 8\\n12 20\\n3 10\\n10 20 30\") == \"2\\n0 4 0\\n1\\n0\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"For input {input()}, expected output {expected}, got {solution(input())}\"\n"
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 8\\n12 20\\n3 10\\n10 20 30\") == \"2\\n0 4 0\"\nassert solution(\"4 8\\n16 24\\n12 28\\n16 32\") == \"1\\n0 4 4\"\n"
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n2 8\n12 20\n''') == '2\\n'\n\nassert solution('''\n3 10\n10 20 30\n''') == '1\\n'"
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 8\\n12 20\\n\") == \"2\\n0 4\\n\"\nassert solution(\"3 10\\n10 20 30\\n\") == \"1\\n0 \""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 8\\n12 20\") == \"2\\n0 4\\n\"\nassert solution(\"3 10\\n10 20 30\") == \"1\\n0\"\n"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got {solution(input())}\""
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3.729935587093555327\"\n"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0 5 5\\n3 2\\n-1 -1\\n-1 0\") == 3.729935587093555327\nassert solution(\"0 0 0 1000\\n100 1000\\n-50 0\\n50 0\") == 11.547005383792516398"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 5 5\\n3 2\\n-1 -1\\n-1 0\\n\") == \"3.729935587093555327\"\nassert solution(\"0 0 0 1000\\n100 1000\\n-50 0\\n50 0\\n\") == \"11.547005383792516398\""
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 5 5\\n3 2\\n-1 -1\\n-1 0\") == \"3.729935587093555327\\n\"\nassert solution(\"0 0 0 1000\\n100 1000\\n-50 0\\n50 0\") == \"11.547005383792516398\\n\""
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 3.729935587093555327, \"Your answer should be 3.729935587093555327.\""
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('0 0 5 5\\n3 2\\n-1 -1\\n-1 0') == '3.729935587093555327'\nassert solution('0 0 0 1000\\n100 1000\\n-50 0\\n50 0') == '11.547005383792516398'\n"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_str) == expected_output, f\"Expected output: {expected_output}, got: {solution(input_str)}\""
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0 5 5\\n3 2\\n-1 -1\\n-1 0\") == \"3.729935587093555327\"\nassert solution(\"0 0 0 1000\\n100 1000\\n-50 0\\n50 0\") == \"11.547005383792516398\"\n"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    0 0 5 5\n    3 2\n    -1 -1\n    -1 0\n    \"\"\"\n) == \"3.73\""
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\") == \"Second\\nFirst\"\n\nassert solution(\"1\\n\") == \"First\"\n\nassert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n\") == \"First\\nFirst\"\n\nassert solution(\"4\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n\") == \"Second\\nSecond\""
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''3\n1\n10\n2\n1 2\n21\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162''') == 'Second\\nFirst\\nSecond'\n\nassert solution('''4\n1\n10\n2\n1 2\n21\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\n2\n5 2\n1\n4 2\n3 1 2\n''') == 'First\\nFirst\\nFirst'"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 'Second\\nFirst\\nSecond\\n', \"Expected 'Second\\nFirst\\nSecond\\n' but got '{}'.\".format(solution())"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == 'Second'"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\") == \"Second\\nFirst\\nSecond\\n\", \"Test case 1 should result in Jiro winning.\"\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\") == \"Second\\nFirst\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"Second\""
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Test case {i+1} failed. Expected output: {expected}, got: {solution(input())}\" for i, (stdin, expected) in enumerate(tests)"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output, f\"Solution is not correct. Expected output: {sample_output}, but got: {solution(sample_input)}\""
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 'Second\\nFirst\\nSecond\\n', 'Incorrect output'"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\\n\", \"The output should be 1.\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\"\n\nprint(\"All test cases passed successfully.\")"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\\n\"\n"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 3 2\\n4 3 1 5 2') == '1\\n'\nassert solution('5 3 2\\n4 3 1 5 1 3') == '3\\n'\nassert solution('5 3 2\\n4 3 1 5 2') == '1\\n'\nassert solution('5 3 2\\n4 3 1 5 2 3') == '3\\n'\nassert solution('5 3 2\\n4 3 1 5 2 4') == '5\\n'\n"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\"\nprint(\"All test cases passed successfully\")"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"5 3 2\\n4 3 1 5 2\") == \"1\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 3 2\\n4 3 1 5 2') == '1'\nassert solution('5 3 4\\n2 1 3 4 5') == '0'\nassert solution('5 3 2\\n4 3 1 5 2') == '1'\nassert solution('5 3 4\\n2 1 3 4 5') == '0'"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\\n\"\n"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\"\nassert solution(\"1 1 1 1 1\") == \"0\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\"\n"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"24\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"24\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n\") == \"1\\n\"\nassert solution(\"3 2\\n\") == \"24\\n\"\nassert solution(\"4 5\\n\") == \"0\\n\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n\") == \"1\"\nassert solution(\"3 2\\n\") == \"24\"\n\nfor i in range(1, 10):\n    for j in range(1, 5001):\n        assert sum(solution(f\"{i} {j}\\n\")[:10]) % (10**9 + 7) == 0"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n\") == \"1\\n\"\nassert solution(\"3 2\\n\") == \"24\\n\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"1\\n\"\nassert solution(\"3 2\") == \"24\\n\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"24\"\n"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"24\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\\n3 2\\n\") == \"1\\n\"\nassert solution(\"3 2\\n\") == \"24\\n\"\nassert solution(\"1 3\\n\") == \"1\\n\"\nassert solution(\"3 1\\n\") == \"1\\n\"\nassert solution(\"4 5\\n\") == \"25\\n\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 1') == '1\\n'\nassert solution('3 2') == '24\\n'"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\\n3\\n1196\\n64921457\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\\n3\\n1196\\n64921457\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\\n3\\n1196\\n64921457\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\\n3\\n1196\\n64921457\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\\n3\\n1196\\n64921457\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\\n3\\n1196\\n64921457\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\\n3\\n1196\\n64921457\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"6\"\nassert solution(4) == \"3\"\nassert solution(7) == \"1196\"\nassert solution(31) == \"64921457\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == '6'\nassert solution(4) == '3'\nassert solution(7) == '1196'\nassert solution(31) == '64921457'"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3100) == \"12192988104882167453927877183489849649680267211514007043241535756207488448245282175522914148085996480762065693192678776937693326398827520415029191693258180164639512250778642036358304950262822984244502834875550316551858393233155551338300228872165213946446344936450523679831600015319788679345876345406871304375416952590372349525022826462743424646746585125549502579586488839110268408841594047415350282389666101626508606976291956389718291615492110976572460592133339138699571284672519574502885825195858892425309438871129654454023466196308980195913221531041854390844339429511884048632531635147145474355111360758074964561706505620072736104931823935523197640949759236980692848182331024052174722607183936776823257947524168000811831771819540806654156326124071682416438932756806909000722178484592890043573738397010576855873572219121090995953496357070731395350251643076642061227716349541283285860427188597884713711879523594987901957398753505493614056813947684792451066503963446452655256527678113702242221815216300491414328224938"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '6'\nassert solution() == '3'\nassert solution() == '1196'\nassert solution() == '64921457'"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == '6'\nassert solution(4) == '3'\nassert solution(7) == '1196'\nassert solution(31) == '64921457'"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"6\\n\"\nassert solution(\"4 4\") == \"3\\n\"\nassert solution(\"7 3\") == \"1196\\n\"\nassert solution(\"31 8\") == \"64921457\\n\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(31, 8) == 64921457\nassert solution(4, 4) == 3\nassert solution(7, 3) == 1196\nassert solution(3, 2) == 6\nassert solution(2, 1) == 0\nassert solution(1, 1) == 1\nassert solution(1, 1) == 1\n"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n\") == \"6\\n\"\nassert solution(\"4 4\\n\") == \"3\\n\"\nassert solution(\"7 3\\n\") == \"1196\\n\"\nassert solution(\"31 8\\n\") == \"64921457\\n\""
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 4 2\\n#..#\\n..#.\\n#...') == '#XXX\\n#X#.X\\nX#..X\\n...X\\n.#.#'\nassert solution('5 4 5\\n#...#\\n#.#.#\\n.#..#\\n...#') == '#XXX\\n#X#.X\\nX#..X\\n...X\\n.#.#'\n"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"\"\"#XXX\n"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4 2\\n#..#\\n..#.\\n#...\") == \".X#\"\nassert solution(\"5 4 5\\n#...\\n#.#. \\n.#.. \\n...# \\n.#.#\") == \"#XXX\\n#X#. \\nX#.. \\n...# \\n.#.#\""
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 4 2\\n#..#\\n..#.\\n#...') == '#X#\\nX.#.\\n#...\\n'\nassert solution('5 4 5\\n#...\\n#.#.\\n.#..\\n...#\\n.#.#') == '#XXX\\n#X#.\\nX#..\\n...#\\n.#.#\\n'"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 2\\n#..#\\n..#.\\n#...\") == \".X#\"\nassert solution(\"5 4 5\\n#...\\n#.#.\\n.#..\\n...#\\n.#.#\") == \"#XXX\\n#X#.\\nX#..\\n...#\""
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 4 2') == '#.X#'\nassert solution('5 4 5') == '#XXX'"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4 2\\n#..#\\n..#.\\n#...\") == \"#XXX\\n#X#.\\nX#..\\n...#\\n.#.#\"\nassert solution(\"5 4 5\\n#...\\n#.#.\\n.#..\\n...#\") == \"#XXX\\n#X#.\\nX#..\\n...#\\n.#.#\""
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4 2\\n#..#\\n..#.\\n#...\") == \"#XXX\\n#X#.\\nX#..\\n...#\\n.#.#\\n\"\nassert solution(\"5 4 5\\n#...\\n#.#.\\n.#..\\n...#\") == \"#XXX\\n#X#.\\nX#..\\n...#\\n.#.#\\n\""
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 2\\n#..#\\n..#.\\n#...\\n\") == \"#XXX\\n#X#.\\nX#..\\n...#\\n.#.#\\n\"\nassert solution(\"5 4 5\\n#...#\\n#.#.#\\n.#..#\\n...##\\n.#.#\\n\") == \"#XXX\\n#X#.X\\nX#..X\\n...#X\\n.#.#X\\n\"\nassert solution(\"5 4 2\\n#..#.\\n..#.#\\n#...#\\n\") == \"#XXX\\n#X#.X\\nX#..X\\n...#X\\n.#.#X\\n\"\nassert solution(\"5 4 10\\n#...#\\n#.#.#\\n.#..#\\n...##\\n.#.#\\n\") == \"#XXX\\n#X#.X\\nX#..X\\n...#X\\n.#.#X\\n\"\nassert solution(\"5 4 5\\n#...#\\n#.#.#\\n.#..#\\n...##\\n.#.#\\n\") == \"#XXX\\n#X#.X\\nX#..X\\n...#X\\n.#.#X\\n\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3') == '1\\n'\nassert solution('5') == '3\\n'\nassert solution('18') == '4\\n'"
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n\") == \"1\\n\"\nassert solution(\"5\\n1 2 2 2\\n\") == \"3\\n\"\nassert solution(\"18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\\n\") == \"4\\n\"\n\nimport sys"
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 1\") == \"1\\n\"\nassert solution(\"5\\n1 2 2 2\") == \"3\\n\"\nassert solution(\"18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\") == \"4\\n\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1\") == \"1\\n\"\nassert solution(\"5\\n1 2 2 2\") == \"3\\n\"\nassert solution(\"18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\") == \"4\\n\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Input and output do not match.\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1\\n\") == \"1\\n\"\nassert solution(\"5\\n1 2 2 2\\n\") == \"3\\n\"\nassert solution(\"18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\\n\") == \"4\\n\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1\") == \"1\\n\"\nassert solution(\"5\\n1 2 2 2\") == \"3\\n\"\nassert solution(\"18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\") == \"4\\n\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"1\", \"The solution should be 1.\"\nassert solution(\"5 1 2 2\") == \"3\", \"The solution should be 3.\"\nassert solution(\"18 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\") == \"4\", \"The solution should be 4.\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1\\n\") == \"1\\n\"\nassert solution(\"5\\n1 2 2 2\\n\") == \"3\\n\"\nassert solution(\"18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\\n\") == \"4\\n\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1\") == \"1\\n\"\nassert solution(\"5\\n1 2 2 2\") == \"3\\n\"\nassert solution(\"18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\") == \"4\\n\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\n"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\n"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\nassert solution(\"1 10 3\") == \"3 6 9\"\nassert solution(\"100 1000 1000000\") == \"-1\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\n\nfrom itertools import permutations"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\n"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\nassert solution(\"10 5 7\") == \"-1\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"-1\"\n"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2 4 1 5 3\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\nassert solution(\"10 4 2\") == \"-1\"\nassert solution(\"5 1 3\") == \"1 3 5\"\nassert solution(\"10 1 1\") == \"1 1 1\"\nassert solution(\"5 4 2\") == \"-1\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '-1'  # Test case 1\nassert solution(input()) == '2 4 1 5 3'  # Test case 2\nassert solution(input()) == '-1'  # Test case 3\nassert solution(input()) == '1 3 4 2 5'  # Test case 4\nassert solution(input()) == '-1'  # Test case 5"
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n3 6 9 18 36 108\") == \"Yes\"\nassert solution(\"2\\n7 17\") == \"No\"\nassert solution(\"9\\n4 8 10 12 15 18 33 44 81\") == \"Yes\"\n"
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Yes\", \"The function should return 'Yes' if it is possible to reassemble the binary search tree or 'No' if it is impossible.\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Yes\"\n"
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Yes\"\nassert solution() == \"No\"\nassert solution() == \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"Yes\"\nassert solution() == \"Yes\"\nassert solution() == \"Yes\"\nassert solution() == \"No\"\nassert solution() == \"No\"\n"
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == output, f\"Input: {stdin}, Output: {output}\" for stdin, output in [\n    (\"6\\n3 6 9 18 36 108\", \"Yes\"),\n    (\"2\\n7 17\", \"No\"),\n    (\"9\\n4 8 10 12 15 18 33 44 81\", \"Yes\"),\n]"
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n\") == \"Yes\"\nassert solution(\"7\\n7 17\\n\") == \"No\"\nassert solution(\"9\\n4 8 10 12 15 18 33 44 81\\n\") == \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"2\") == \"No\"\nassert solution(\"9\") == \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n3 6 9 18 36 108\") == \"Yes\\n\"\nassert solution(\"2\\n7 17\") == \"No\\n\"\nassert solution(\"9\\n4 8 10 12 15 18 33 44 81\") == \"Yes\\n\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\\n\"\nprint(\"All test cases pass!\")"
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"12\"\n"
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"12\\n\"\n"
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '12', \"Expected output '12', got: {}\".format(solution(stdin))"
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"12\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\"\nassert solution(\"6\\n1 2 -6 4 5 3 7\\n8 9 10\\n11 12 13\") == \"24\"\nassert solution(\"6\\n1 2 -6 4 5 3 7\\n8 9 10\\n11 12 13 14\") == \"28\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"12\"\n"
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\"\n"
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\\n\"\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"12\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n3 1 4 2\") == \"5\", \"The length of a sought sequence should be 5.\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"5\\n\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n3 1 4 2\\n\") == \"5\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n3 1 4 2\") == \"5\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 3\\n3 1 4 2\\n') == '5\\n'"
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Input\\n4 3\\n3 1 4 2\\n\\nOutput\\n5\\n\\nExamples\\nInput\\n4 3\\n3 1 4 2\\n\\nOutput\\n5\\n\\nNote\\nThe array given in the sample looks like that: 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2. The elements in bold form the largest non-decreasing subsequence.') == '5\\n\\n'"
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n3 1 4 2\\n\") == \"5\"\nassert solution(\"4 1\\n1 2 3\\n\") == \"3\"\nassert solution(\"3 5\\n1 3 5\\n\") == \"3\"\nassert solution(\"3 3\\n1 2 3\\n\") == \"2\"\nassert solution(\"4 5\\n1 2 3 4\\n\") == \"5\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n3 1 4 2\\n\") == \"5\\n\", \"Test case 1\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 4 2\\n4 3\\n3 1 4 2\") == \"5\\n\"\nassert solution(\"2 1\\n2 2\\n3 4\\n4 3\\n5 6\\n7 8\\n1 2 3 4 5\") == \"8\\n\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\\n19 20 21\") == \"21\\n\"\nassert solution
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n3 1 4 2\") == \"5\"\nassert solution(\"10 10\\n-10 -5 0 5 10\") == \"0\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 0\nassert solution() == 0"
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\") == \"0 0\"\nassert solution(\"3\\n2 3 1\") == \"0 1\"\nassert solution(\"3\\n3 2 1\") == \"2 1\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '0 0'\nassert solution() == '0 1'\nassert solution() == '2 1'"
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"0 0\\n\"\nassert solution(\"3\\n2 3 1\\n\") == \"0 1\\n\"\nassert solution(\"3\\n3 2 1\\n\") == \"2 1\\n\"\n\nsolution = lambda stdin: \"0 0\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('Input\\n3\\n1 2 3\\nOutput\\n0 0\\n\\nInput\\n3\\n2 3 1\\nOutput\\n0 1\\n\\nInput\\n3\\n3 2 1\\nOutput\\n2 1\\n\\n') == ['0 0', '0 1', '2 1']\n"
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2 3 1\\n3\\n3 2 1\") == \"0 0\\n0 1\\n2 1\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0 0\\n\", \"Test 1 failed\"  # Test 1 passed\nassert solution() == \"0 1\\n\", \"Test 2 failed\"  # Test 2 passed\nassert solution() == \"2 1\\n\", \"Test 3 failed\"  # Test 3 passed"
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2 3 1\\n3\\n3 2 1\") == \"0 0\\n0 1\\n2 1\"\nassert solution(\"3\\n2 3 1\\n3\\n3 2 1\\n3\\n3 1 2\") == \"0 1\\n2 1\"\nassert solution(\"3\\n3 2 1\\n3\\n3 2 1\\n3\\n1 2 3\") == \"2 1\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2 3 1\\n3\\n3 2 1\") == \"0 0\\n\"\nassert solution(\"3\\n2 3 1\\n3\\n3 2 1\\n3\\n2 1 3\") == \"0 1\\n2 1\\n\"\nassert solution(\"3\\n3 2 1\\n3\\n3 2 1\\n3\\n2 1 3\") == \"2 1\\n\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2 3 1\\n3\\n3 2 1\") == \"0 0\\n0 1\\n2 1\"\nassert solution(\"3\\n2 3 1\\n3\\n3 2 1\\n3\\n3 2 1\") == \"0 0\\n0 1\\n2 1\"\nassert solution(\"3\\n3 2 1\\n3\\n3 2 1\\n3\\n3 2 1\") == \"2 1\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 4\\naa\\nbb\") == \"6\"\nassert solution(\"3 3\\naba\\nbba\") == \"8\"\nassert solution(\"4 5\\nabbb\\nbaaa\") == \"8\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '6', 'Expected: 6, Actual: {}'.format(solution())"
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4\\na\\nb\\n\") == \"6\"\nassert solution(\"3 3\\nab\\nba\\n\") == \"8\"\nassert solution(\"4 5\\nabbb\\nbaaa\\n\") == \"8\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 4\\na\\nb') == '6'\nassert solution('3 3\\nab\\nba') == '8'\nassert solution('4 5\\nabbb\\nbaaa') == '8'"
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4\\na\\nb\\n\") == \"6\\n\"\nassert solution(\"3 3\\nab\\nbb\\n\") == \"8\\n\"\nassert solution(\"4 5\\nabbb\\nabba\\n\") == \"8\\n\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4\\naa\\nbb\\n\") == \"6\\n\"\nassert solution(\"3 3\\naba\\nbba\\n\") == \"8\\n\"\nassert solution(\"4 5\\nabbb\\nbaaa\\n\") == \"8\\n\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4\\naa\\nbb\") == \"6\"\nassert solution(\"3 3\\naba\\nbba\") == \"8\"\nassert solution(\"4 5\\nabbb\\nbaaa\") == \"8\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4\\na\\nb\\n\") == \"6\"\nassert solution(\"3 3\\nab\\nba\\n\") == \"8\"\nassert solution(\"4 5\\nabbb\\nbaaa\\n\") == \"8\"\n"
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\na\\nb\") == \"6\"\nassert solution(\"2 4\\na\\nb\") == \"6\"\nassert solution(\"3 3\\na\\nb\") == \"8\"\nassert solution(\"4 5\\na\\nb\") == \"8\"\n"
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4\\naa\\nbb\\n\") == \"6\"\nassert solution(\"3 3\\naba\\nbba\\n\") == \"8\"\nassert solution(\"4 5\\nabbb\\nbaaa\\n\") == \"8\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"NO\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1') == 'YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'NO'"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\\n\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"NO\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\n\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"NO\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'YES\\n0 0 0\\n0 0 1\\n0 1 1\\n1 1 1'\nassert solution(input()) == 'NO\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'NO'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1'\n\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'NO'"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"0 0 0\n0 0 1\n0 0 1\n0 0 1\n0 1 1\n0 1 1\n0 1 1\n1 1 1\n\"\"\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\\n\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([4, 2, 3, 6, 7]) == \"YES\\n2 2 1 1\"\nassert solution([5, 6, 15, 35, 77, 22]) == \"YES\\n2 1 2 1 1\"\nassert solution([5, 6, 10, 15, 1000, 75]) == \"NO\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3 6 7\") == \"YES\\n2 2 1 1\"\nassert solution(\"5 6 15 35 77 22\") == \"YES\\n2 1 2 1 1\"\nassert solution(\"5 6 10 15 1000 75\") == \"NO\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='5\\n6 10 15 1000 75') == 'NO', 'Test Case 5'\nassert solution(stdin='5\\n6 15 35 77 22') == 'YES', 'Test Case 6'\nassert solution(stdin='4\\n2 3 6 7') == 'YES', 'Test Case 7'\nassert solution(stdin='2\\n1 2') == 'NO', 'Test Case 8'"
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(10) == \"YES\"\nassert solution(15) == \"YES\"\nassert solution(20) == \"NO\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n3\\n6\\n7\") == \"YES\\n2\\n2\\n1\\n1\"\nassert solution(\"5\\n6\\n15\\n35\\n77\\n22\") == \"YES\\n2\\n1\\n2\\n1\"\nassert solution(\"5\\n6\\n10\\n15\\n1000\\n75\") == \"NO\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(None) == \"YES\"\nassert solution(\"4\\n2 3 6 7\\n\") == \"YES\\n2 2 1 1\\n\"\nassert solution(\"5\\n6 15 35 77 22\\n\") == \"YES\\n2 1 2 1 1\\n\"\nassert solution(\"5\\n6 10 15 1000 75\\n\") == \"NO\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 3 6 7\\n\") == \"YES\\n2 2 1 1 \"\nassert solution(\"5\\n6 15 35 77 22\\n\") == \"YES\\n2 1 2 1 1 \"\nassert solution(\"5\\n6 10 15 1000 75\\n\") == \"NO\\n\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4) == 'YES'\nassert solution(5) == 'YES'\nassert solution(5) == 'NO'"
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 3 6 7\") == \"YES\"\nassert solution(\"5\\n6 15 35 77 22\") == \"YES\"\nassert solution(\"5\\n6 10 15 1000 75\") == \"NO\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\n"
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('100\\n60\\n70') == '40'\nassert solution('410\\n55\\n70') == '5'\nassert solution('600\\n60\\n70') == '0'"
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"100\\n60\\n70\") == \"40\"\nassert solution(\"410\\n55\\n70\") == \"5\"\nassert solution(\"600\\n60\\n70\") == \"0\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"100\\n60\\n70\\n\") == \"40\"\nassert solution(\"410\\n55\\n70\\n\") == \"5\"\nassert solution(\"600\\n60\\n70\\n\") == \"0\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"100\\n60\\n70\") == \"40\"\nassert solution(\"410\\n55\\n70\") == \"5\"\nassert solution(\"600\\n60\\n70\") == \"0\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"100\\n60\\n70\") == \"40\"\nassert solution(\"410\\n55\\n70\") == \"5\"\nassert solution(\"600\\n60\\n70\") == \"0\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"100\\n60\\n70\") == \"40\"\nassert solution(\"410\\n55\\n70\") == \"5\"\nassert solution(\"600\\n60\\n70\") == \"0\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"410 55 70\") == \"5\"\nassert solution(\"600 60 70\") == \"0\"\nassert solution(\"100 60 70\") == \"40\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100\\n60\\n70\") == \"40\"\nassert solution(\"410\\n55\\n70\") == \"5\"\nassert solution(\"600\\n60\\n70\") == \"0\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"12\\n3 1 4 1 5 9 2 6 5 3 5 8\\n\") == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\"\nassert solution(\"5\\n1 1 1 1 1\\n\") == \"1\\n1 1\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"12\\n3 1 4 1 5 9 2 6 5 3 5 8\") == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\\n1 1 1\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Output:\\n12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Your solution is incorrect.\"\nfor i, (a, b) in enumerate(zip(input().split(), input().split())):\n    try:\n        x = int(a)\n        if x!= int(b):\n            raise ValueError\n    except ValueError:\n        raise ValueError(\"Invalid input.\")"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"12\\n3 1 4 1 5 9 2 6 5 3 5 8\") == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\\n1 1 1\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('12') == '12'\nassert solution('3 1 4 1 5 9 2 6 5 3 5 8') == '12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9'\nassert solution('5\\n1 1 1 1 1') == '1\\n1 1 1'"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 'Output\\n12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9'"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"12\") == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"12\\n3 1 4 1 5 9 2 6 5 3 5 8\") == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\"\n\nassert solution(\"5\\n1 1 1 1 1\") == \"1\\n1 1\\n1\\n1\"\n\nassert solution(\"1234567890\") == \"1234567890\"\n\nassert solution(\"123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\""
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 1\\n1 3 3\\n') == '6\\n'\n"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\"\nassert solution(\"4 2\\n1 2 2\\n3 2 2\\n1 2 2\\n\") == \"6\"\nassert solution(\"3 4\\n1 4 4\\n2 4 4\\n3 4 4\\n1 4 4\\n\") == \"6\"\nassert solution(\"4 3\\n1 3 3\\n2 3 3\\n3 3 3\\n1 3 3\\n\") == \"6\"\nassert solution(\"3 3\\n1 3 3\\n2 3 3\\n3 3 3\\n1 3 3\\n\") == \"6\""
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == 6\nassert solution(\"2 3\\n3 1 2\\n4 2 1\\n\") == 5\nassert solution(\"1 2\\n2 3\\n3 2\\n4 1\\n5 1\\n\") == 4\nassert solution(\"1 2\\n2 2\\n3 2\\n4 2\\n5 1\\n6 1\\n\") == 3\n"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\\n\"\nassert solution(\"3 2\\n1 3 1\\n1 3 2\\n\") == \"8\\n\"\nassert solution(\"3 3\\n1 3 1\\n1 3 1\\n1 3 1\\n\") == \"16\\n\"\nassert solution(\"3 4\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n\") == \"24\\n\"\nassert solution(\"3 5\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n\") == \"32\\n\"\nassert solution(\"3 6\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n\") == \"40\\n\"\nassert solution(\"3 7\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n\") == \"48\\n\"\nassert solution(\"3 8\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n\") == \"56\\n\"\nassert solution(\"3 9\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n\") == \"64\\n\"\nassert solution(\"3 10\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n\") == \"72\\n\"\nassert solution(\"3 11\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n\") == \"80\\n\"\nassert solution(\"3 12\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n\") == \"88\\n\"\nassert solution(\"3 13\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n\") == \"96\\n\"\nassert solution(\"3 14\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n\") == \"104\\n\"\nassert solution(\"3 15\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\""
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\\n\"\nassert solution(\"4 2\\n1 4 2\\n1 5 4\\n\") == \"4\\n\"\nassert solution(\"6 3\\n1 6 4\\n1 7 6\\n1 8 8\\n\") == \"2\\n\"\nassert solution(\"3 2\\n2 3 4\\n1 4 4\\n\") == \"2\\n\"\nassert solution(\"5 3\\n2 5 4\\n1 5 5\\n\") == \"4\\n\"\nassert solution(\"3 3\\n1 3 5\\n1 4 7\\n1 5 9\\n\") == \"10\\n\""
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"6\"\nprint(solution(input()))\n"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input(\"Enter N and M: \")) == \"6\\n\", \"Test case 1 failed.\"\nassert solution(input(\"Enter N and M: \")) == \"6\\n\", \"Test case 2 failed.\"\nassert solution(input(\"Enter N and M: \")) == \"6\\n\", \"Test case 3 failed.\"\nassert solution(input(\"Enter N and M: \")) == \"6\\n\", \"Test case 4 failed.\"\nassert solution(input(\"Enter N and M: \")) == \"6\\n\", \"Test case 5 failed.\"\nassert solution(input(\"Enter N and M: \")) == \"6\\n\", \"Test case 6 failed.\"\nassert solution(input(\"Enter N and M: \")) == \"6\\n\", \"Test case 7 failed.\"\nassert solution(input(\"Enter N and M: \")) == \"6\\n\", \"Test case 8 failed.\"\nassert solution(input(\"Enter N and M: \")) == \"6\\n\", \"Test case 9 failed.\"\nassert solution(input(\"Enter N and M: \")) == \"6\\n\", \"Test case 10 failed.\"\nassert solution(input(\"Enter N and M: \")) == \"6\\n\", \"Test case 11 failed.\"\nassert solution(input(\"Enter N and M: \")) == \"6\\n\", \"Test case 12 failed.\"\nassert solution(input(\"Enter N and M: \")) == \"6\\n\", \"Test case 13 failed.\"\nassert solution(input(\"Enter N and M: \")) == \"6\\n\", \"Test case 14 failed.\"\nassert solution(input(\"Enter N and M: \")) == \"6\\n\", \"Test case 15 failed.\"\nassert solution(input(\"Enter N and M: \")) == \"6\\n\", \"Test case 16 failed.\"\nassert solution(input(\"Enter N and M: \")) == \"6\\n\", \"Test case 17 failed.\"\nassert solution(input(\"Enter N and M: \")) == \"6\\n\", \"Test case 18 failed.\"\nassert solution(input(\"Enter N and M: \")) == \"6\\n\", \"Test case 19 failed.\"\nassert solution(input(\"Enter N and M: \")) == \"6\\n\", \"Test case 20 failed.\"\nassert solution(input(\"Enter N and M: \")) == \"6\\n\", \"Test case 21 failed.\"\nassert solution(input(\"Enter N and M: \")) == \"6\\n\", \"Test case 22 failed.\"\nassert solution(input(\"Enter N and M: \")) == \"6\\n\", \"Test case 23 failed.\"\nassert solution(input(\"Enter N and M: \")) == \"6\\n\", \"Test case 24 failed.\"\nassert solution(input(\"Enter N and M: \")) == \"6\\n\", \"Test case 25 failed.\"\nassert solution(input(\"Enter N and M: \")) == \"6\\n\", \"Test case 26 failed.\"\nassert solution(input(\"Enter N and M: \")) == \"6\\n\", \"Test case 27 failed.\"\nassert solution(input(\"Enter N and M: \")) == \"6\\n\", \"Test case 28 failed.\"\nassert solution(input(\"Enter N and M: \")) == \"6\\n\", \"Test case 29 failed.\"\nassert solution(input(\"Enter N and M: \")) == \"6\\n\", \"Test case 30 failed.\"\nassert solution(input(\"Enter N and M: \")) == \"6\\n\", \"Test case 31 failed.\"\nassert solution(input(\"Enter N and M: \")) == \"6\\n\", \"Test case 32 failed.\"\nassert solution(input(\"Enter N and M: \")) == \"6\\n\", \"Test case 33 failed.\"\nassert solution(input(\"Enter N and M: \")) == \"6\\n\", \"Test case 34 failed.\"\nassert solution(input(\"Enter N and M: \")) == \"6\\n\", \"Test case 35 failed.\"\nassert solution(input(\"Enter N and M: \")) == \"6\\n\", \"Test case 36 failed.\"\nassert solution(input(\"Enter N and M: \")) == \"6\\n\", \"Test case 37 failed.\"\nassert solution(input(\"Enter N and M: \")) == \"6\\n\", \"Test case 38 failed.\"\nassert solution(input(\"Enter N and M: \")) == \"6\\n\", \"Test case 39 failed.\"\nassert solution(input(\"Enter N and M: \")) == \"6\\n\", \"Test case "
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\"\n"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\\n\"\nassert solution(\"3 1\\n2 3 2\\n3 4 1\\n\") == \"16\\n\"\nassert solution(\"1 1\\n1 2 1\\n2 2 2\\n\") == \"6\\n\"\nassert solution(\"1 1\\n2 2 1\\n3 3 2\\n\") == \"12\\n\"\nassert solution(\"1 1\\n3 3 1\\n3 3 3\\n\") == \"36\\n\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '10'\nassert solution(input()) == '-1'"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"87654\\n30\\n\") == \"10\"\nassert solution(\"100\\n123\\n\") == \"100\"\nassert solution(\"10\\n30\\n\") == \"10\"\nassert solution(\"10\\n10\\n\") == \"10\"\nassert solution(\"1000000000\\n999999999\\n\") == \"1000000000\"\nassert solution(\"1000000000\\n1000000000\\n\") == \"1000000000\"\nassert solution(\"1000000000\\n1000000001\\n\") == \"1000000000\"\nassert solution(\"1000000000\\n1000000000\\n\") == -1"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"87654\\n30\") == \"10\"\nassert solution(\"100\\n87654\") == \"-1\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('87654\\n30\\n') == '10\\n'\nassert solution('100\\n123456\\n') == '-1\\n'\nassert solution('100\\n200000\\n') == '10\\n'"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"87654\\n30\\n\") == \"10\"\nassert solution(\"100\\n87654\\n\") == \"-1\"\n"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"87654 30\") == \"10\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"87654\\n30\\n\") == \"10\"\nassert solution(\"12345\\n67890\\n\") == \"-1\"\nassert solution(\"100\\n1234567890\\n\") == \"10\"\nassert solution(\"10\\n30\\n\") == \"-1\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"87654\") == \"10\"\nassert solution(\"30\") == \"10\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"87654\\n30\") == \"10\"\nassert solution(\"100\\n87654\") == \"-1\"\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"87654\\n30\") == \"10\\n\"\nassert solution(\"12345\\n67890\") == \"-1\\n\"\nassert solution(\"99999\\n99999\") == \"-1\\n\"\nassert solution(\"100000\\n100000\") == \"10\\n\"\nassert solution(\"100000\\n100001\") == \"10\\n\"\nassert solution(\"100000\\n1000000\") == \"-1\\n\"\nassert solution(\"100000\\n10000000\") == \"-1\\n\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aba\") == \"Second\", \"Output should be Second.\"\nassert solution(\"aab\") == \"First\", \"Output should be First.\"\nassert solution(\"aaab\") == \"Second\", \"Output should be Second.\"\nassert solution(\"aaaba\") == \"First\", \"Output should be First.\"\nassert solution(\"abc\") == \"First\", \"Output should be First.\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aba\") == \"Second\", \"The output is not as expected.\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aba\") == \"Second\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('aba') == 'Second'\nassert solution('abc') == 'Second'\nassert solution('abcd') == 'First'\nassert solution('abac') == 'Second'\nassert solution('aabb') == 'First'"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aba\") == \"Second\"\nassert solution(\"aaaaa\") == \"First\"\nassert solution(\"aabcc\") == \"First\"\nassert solution(\"abcd\") == \"Second\"\nassert solution(\"aaaabbbbcccc\") == \"First\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aba\") == \"Second\"\nassert solution(\"azc\") == \"First\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('aba') == 'Second'"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aba\") == \"Second\"\nassert solution(\"aaaaaa\") == \"First\"\nassert solution(\"aaaa\") == \"First\"\nassert solution(\"abb\") == \"First\"\nassert solution(\"bbba\") == \"Second\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('aba') == 'Second'"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aba\") == \"Second\", \"Incorrect output: {}\".format(solution(\"aba\"))\nprint(\"First\")"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\n12345\") == \"6\\n\", \"Example 1\"\nassert solution(\"16\\n439873893693495623498263984765\") == \"40\\n\", \"Example 2\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\n12345\") == \"6\"\nassert solution(\"16\\n439873893693495623498263984765\") == \"40\""
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\n12345\") == 6\nassert solution(\"16\\n439873893693495623498263984765\") == 40"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"40\\n\"\n"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(None) == 0\nassert solution(\"1\") == 0\nassert solution(\"12345\") == 6\nassert solution(\"439873893693495623498263984765\") == 40"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"6\", \"The function should return 6, not {}\".format(solution())"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\n12345\") == \"6\", \"The output should be 6.\"\nassert solution(\"16\\n439873893693495623498263984765\") == \"40\", \"The output should be 40.\""
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Solution: {solution(input())}, Output: {output}\""
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10\\n12345') == '6\\n'\nassert solution('16\\n439873893693495623498263984765') == '40\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Your code is wrong. Please submit the correct output for {a}.\"\n"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"332748119\\n332748119\\n3\\n160955686\\n185138929\\n974061117\\n\"\n"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test failed: {input()}!= {output}\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"The function should return the correct output, but it returned '{}' instead.\".format(solution(input()))"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 1\\n0 1\\n2 1') == '332748119'\nassert solution('1 2\\n1') == '3'\nassert solution('3 3\\n0 1 1\\n4 3 5') == '160955686\\n185138929\\n974061117'"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"332748119\\n332748119\\n3\\n160955686\\n185138929\\n974061117\", \"Testcase failed\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_string) == expected_output, \"Your solution is incorrect.\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\", \"The expected output is: ORZ\"\nassert solution(\"AA\") == \"0\", \"The expected output is: 0\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_str) == output_str, f\"Input: {input_str}, Output: {output_str}\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\", \"Test case 1 failed\"\nassert solution(\"OVGURWZLWVLUXTH\") == \"OZ\", \"Test case 2 failed\"\nassert solution(\"AA\") == \"0\", \"Test case 3 failed\"\n"
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\"\nassert solution(\"AA\") == 0\nassert solution(\"AAAABBBCCDAABBB\") == \"BB\"\nassert solution(\"AGGTABBBBA\") == \"AB\"\nassert solution(\"RSBDFE\") == \"R\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\", \"The correct answer is ORZ.\"\n\nassert solution(\"AA\") == \"0\", \"The correct answer is 0.\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\", \"Test 1\"\nassert solution(\"OVGURWZLWVLUXTH\") == \"ORZ\", \"Test 2\"\nassert solution(\"AA\") == \"0\", \"Test 3\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"ORZ\"\n"
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('AJKEQSLOBSROFGZ\\nOVGURWZLWVLUXTH\\nOZ') == 'ORZ'\nassert solution('AA\\nA\\nA') == '0'"
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\\nOVGURWZLWVLUXTH\\nOZ\") == \"ORZ\"\n\nassert solution(\"AA\\nA\\nA\") == \"0\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\\nOVGURWZLWVLUXTH\\nOZ\") == \"ORZ\"\n\nassert solution(\"AA\\nA\\nA\") == \"0\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\\n\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\\n\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\\n\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\\n\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\\n\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\\n\"\n"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 2 1\\n1 100 1\\n1 100 100') == '99\\n'\nassert solution('100 100 100\\n1 1 1\\n1 1 1') == '0\\n'\n"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\\n\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\\n\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\"\n\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\\n\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\\n\"\n"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == 99\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == 0"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 2 1\\n1 100 1\\n1 100 100') == '99'\nassert solution('100 100 100\\n1 1 1\\n1 1 1') == '0'"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(r'\\n') == '\\n'\nassert solution(r'\\t') == '\\t'\nassert solution(r'\\n\\n') == '\\n'\nassert solution(r'1\\n') == '1\\n'\nassert solution(r'1\\n\\n') == '1\\n'\nassert solution(r'1\\n\\n\\n') == '\\n'\nassert solution(r'1\\n\\n\\n\\n') == '1\\n\\n\\n'\nassert solution(r'1\\n\\n\\n\\n\\n') == '\\n'\nassert solution(r'1\\n\\n\\n\\n\\n\\n') == '1\\n\\n\\n\\n\\n\\n'"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 2) == 1\nassert solution(3, 3) == 0\nassert solution(1000000000000, 1048576) == 118606527258\n"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(input())) == '1', 'Test failed' # Test input 1\nassert solution(str(input())) == '1', 'Test failed' # Test input 2\nassert solution(str(input())) == '0', 'Test failed' # Test input 3\nassert solution(str(input())) == '118606527258', 'Test failed' # Test input 4\nassert solution(str(input())) == '118606527258', 'Test failed' # Test input 5"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == 1\nassert solution(\"3 2\") == 1\nassert solution(\"3 3\") == 0\nassert solution(\"1000000000000 1048576\") == 118606527258\n\nfrom typing import List"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 1, \"Expected 1, but got {}\".format(solution(3))\nassert solution(3, 1000000000000) == 118606527258, \"Expected 118606527258, but got {}\".format(solution(3, 1000000000000))\nassert solution(1, 1) == 1, \"Expected 1, but got {}\".format(solution(1, 1))\nassert solution(1, 1000000000000) == 118606527258, \"Expected 118606527258, but got {}\".format(solution(1, 1000000000000))"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"1000000000000 1048576\") == \"118606527258\"\n"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"1000000000000 1048576\") == \"118606527258\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 1, \"Expected 1, but got {}\".format(solution(3))\nassert solution(1000000000000) == 118606527258, \"Expected 118606527258, but got {}\".format(solution(1000000000000))"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1, 1) == 1, \"Case 1 failed\"\nassert solution(3, 2) == 1, \"Case 2 failed\"\nassert solution(3, 3) == 0, \"Case 3 failed\"\nassert solution(1000000000000, 1048576) == 118606527258, \"Case 4 failed\"\n"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"1\\n\"\nassert solution(\"3 2\") == \"1\\n\"\nassert solution(\"3 3\") == \"0\\n\"\nassert solution(\"1000000000000 1048576\") == \"118606527258\\n\"\n"
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('+-') == 'Yes'\nassert solution('-++') == 'Yes'\nassert solution('++') == 'Yes'\nassert solution('-') == 'No'"
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"-++-\") == \"Yes\"\nassert solution(\"+-\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"No\"\nassert solution(\"+-\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"+-\") == \"Yes\"\nassert solution(\"-+-\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('-++-') == 'Yes'\nassert solution('+-') == 'No'\nassert solution('++') == 'Yes'\nassert solution('-') == 'No'"
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"-++-\") == \"Yes\"\nassert solution(\"-\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"++\") == \"Yes\"\nassert solution(\"-+-\") == \"No\"\nassert solution(\"+-\") == \"Yes\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"-++-\") == \"Yes\"\nassert solution(\"+\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\"\n"
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"+-\") == \"Yes\"\nassert solution(\"-++\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"+-\") == \"Yes\", \"The testcase 1 failed\"\nassert solution(\"-++\") == \"No\", \"The testcase 2 failed\"\nassert solution(\"++\") == \"Yes\", \"The testcase 3 failed\"\nassert solution(\"-\") == \"No\", \"The testcase 4 failed\""
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 0 0\\n0 1\\n-1 2\\n1 2\") == 12.566370614359172464\nassert solution(\"4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\") == 21.991148575128551812"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 12.566370614359172464"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(example_input) == example_output, f\"Your solution is incorrect for the given example\"\n\nfrom typing import List\nimport math"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 0 0\\n0 1\\n-1 2\\n1 2\") == \"12.566370614359172464\"\nassert solution(\"4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\") == \"21.991148575128551812\"\n"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Test failed: {solution(input())}!= {output()}\""
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 0 0\\n0 1\\n-1 2\\n1 2\") == 12.566370614359172464\nassert solution(\"4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\") == 21.991148575128551812"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 0 0\\n0 1\\n-1 2\\n1 2') == 12.566370614359172464\nassert solution('4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1') == 21.991148575128551812"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 0 0\\n0 1\\n-1 2\\n1 2\") == 12.566370614359172464\nassert solution(\"4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\") == 21.991148575128551812"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"12.566370614359172464\"\n"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 0 0\\n0 1\\n-1 2\\n1 2\\n') == '12.566370614359172464\\n'\nassert solution('4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\\n') == '21.991148575128551812\\n'"
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('48') == '9 42', \"Wrong output: 48 -> 9 42\"\nassert solution('6') == '6 6', \"Wrong output: 6 -> 6 6\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"48\") == \"9 42\"\nassert solution(\"6\") == \"6 6\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"48\") == \"9 42\", \"Your solution is incorrect.\"\nassert solution(\"6\") == \"6 6\", \"Your solution is incorrect.\"\n\nfrom typing import List"
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"48\") == \"9 42\", \"Incorrect output\"\nassert solution(\"6\") == \"6 6\", \"Incorrect output\"\n"
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('48') == '9 42'\nassert solution('6') == '6 6'\nassert solution('49') == '9 42'\nassert solution('1') == '1 1'\nassert solution('1000') == '1000 1000'"
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='48') == '9 42'\nassert solution(stdin='6') == '6 6'"
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '9 42'"
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is incorrect. Please check the provided code and the provided test cases.\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"48\") == \"9 42\\n\", \"Test 1 failed\"\nassert solution(\"6\") == \"6 6\\n\", \"Test 2 failed\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"48\") == \"9 42\"\nassert solution(\"6\") == \"6 6\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\", \"Incorrect output: %s\" % solution(input())"
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Solution({input()}), expected output({expected_output})\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n()\") == \"Yes\"\nassert solution(\"3\\n()\") == \"No\"\nassert solution(\"2\\n()\") == \"Yes\"\nassert solution(\"10\\n())(((((\") == \"No\")"
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n(') == 'Yes\\n', \"First example failed\")\nassert solution('3\\n(()') == 'No\\n', \"Second example failed\")\nassert solution('2\\n()') == 'Yes\\n', \"Third example failed\")\nassert solution('10\\n(((\\n')) == 'No\\n', \"Fourth example failed\")\nassert solution('2\\n(())') == 'Yes\\n', \"Fifth example failed\")"
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"No\"  # Correctness of solution not tested"
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n(()\\n\") == \"Yes\", \"Example 1\")\nassert solution(\"3\\n(()\\n\") == \"No\", \"Example 2\")\nassert solution(\"2\\n()\") == \"Yes\", \"Example 3\")\nassert solution(\"10\\n)))(((((\\n\") == \"No\", \"Example 4\")"
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"Yes\"\nassert solution(2) == \"Yes\"\nassert solution(10) == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n)(\\n\") == \"Yes\", \"Petya's friends made him a birthday present - a bracket sequence.\"\nassert solution(\"3\\n(()\\n\") == \"No\", \"Petya's friends made him a birthday present - a bracket sequence.\"\nassert solution(\"2\\n()\") == \"Yes\", \"Petya's friends made him a birthday present - a bracket sequence.\"\nassert solution(\"10\\n)))))(((((\\n\") == \"No\", \"Petya's friends made him a birthday present - a bracket sequence.\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2') == 'Yes'\nassert solution('3') == 'No'\nassert solution('2') == 'Yes'\nassert solution('10') == 'No'"
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n())\\n\") == \"Yes\\n\"\nassert solution(\"3\\n(()\\n\") == \"No\\n\"\nassert solution(\"2\\n()\\n\") == \"Yes\\n\"\nassert solution(\"10\\n((((\") == \"No\\n\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 50\\n50\") == \"1\\n1\"\nassert solution(\"3 100\\n50 50 100\\n50\") == \"5\\n2\"\nassert solution(\"2 50\\n50 50\") == \"-1\\n0\"\n\nfrom typing import List"
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 50\\n50\") == \"1\\n1\\n\"\nassert solution(\"3 100\\n50 50 100\\n\") == \"5\\n2\\n\"\nassert solution(\"2 50\\n50 50\\n\") == \"-1\\n0\\n\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Expected '{output()}', got '{solution(input())}'\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 50\\n50\") == \"1\\n1\\n\"\nassert solution(\"3 100\\n50 50 100\\n\") == \"5\\n2\\n\"\nassert solution(\"2 50\\n50 50\\n\") == \"-1\\n0\\n\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\\n1\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_data) == expected_output, f\"Test case {input_data} failed: got {solution(input_data)}, expected {expected_output}\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 50\\n50\\n') == '1\\n1\\n'\nassert solution('3 100\\n50 50 100\\n') == '5\\n2\\n'\nassert solution('2 50\\n50 50\\n') == '-1\\n0\\n'"
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\\n1\\n5\\n2\"\nassert solution(stdin) == \"5\\n2\"\nassert solution(stdin) == \"-1\\n0\"\n"
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 50\\n50\\n\") == \"1\\n1\\n\"\nassert solution(\"3 100\\n50 50 100\\n\") == \"5\\n2\\n\"\nassert solution(\"2 50\\n50 50\\n\") == \"-1\\n0\\n\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 50\\n50') == '1\\n1'\nassert solution('3 100\\n50 50 100') == '5\\n2'\nassert solution('2 50\\n50 50') == '-1\\n0'"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 6 8\\n\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 9 12\\n\") == \"4\\n\"\nassert solution(\"4\\n5 7 2 9\\n\") == \"1\\n\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 6 8\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 9 12\") == \"4\\n\"\nassert solution(\"4\\n5 7 2 9\") == \"1\\n\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 6 8\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 9 12\") == \"4\\n\"\nassert solution(\"4\\n5 7 2 9\") == \"1\\n\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\", \"Test case 1\"\nassert solution(stdin) == \"4\", \"Test case 2\"\nassert solution(stdin) == \"1\", \"Test case 3\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 6 8\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 9 12\") == \"4\\n\"\nassert solution(\"4\\n5 7 2 9\") == \"1\\n\"\n\nprint(\"All test cases pass.\")"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 6 8\") == \"2\"\nassert solution(\"5\\n2 3 4 9 12\") == \"4\"\nassert solution(\"4\\n5 7 2 9\") == \"1\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 6 8\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 9 12\") == \"4\\n\"\nassert solution(\"4\\n5 7 2 9\") == \"1\\n\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"2\"\nassert solution(5) == \"4\"\nassert solution(4) == \"1\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 6 8\\n\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 9 12\\n\") == \"4\\n\"\nassert solution(\"4\\n5 7 2 9\\n\") == \"1\\n\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 6 8\\n\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 9 12\\n\") == \"4\\n\"\nassert solution(\"4\\n5 7 2 9\\n\") == \"1\\n\""
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\\n3\\n17 18\\n15 24\\n12 15\\n\") == \"6\\n\"\nassert solution(\"Input\\n2\\n10 16\\n7 17\\n\") == \"-1\\n\"\nassert solution(\"Input\\n5\\n90 108\\n45 105\\n75 40\\n165 175\\n33 30\\n\") == \"5\\n\""
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution.input) == solution.output, f\"Test failed for input {solution.input}, expected output {solution.output}, but got {solution(solution.input)}\""
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n17 18\\n15 24\\n12 15\") == 6\nassert solution(\"2\\n10 16\\n7 17\") == -1\nassert solution(\"5\\n90 108\\n45 105\\n75 40\\n165 175\\n33 30\") == 5"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 6\nassert solution() == 5\nassert solution() == -1"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 6\nassert solution(2) == -1\nassert solution(5) == 5"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n17 18\\n15 24\\n12 15\") == \"6\"\nassert solution(\"2\\n10 16\\n7 17\") == \"-1\"\nassert solution(\"5\\n90 108\\n45 105\\n75 40\\n165 175\\n33 30\") == \"5\""
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(solution) == solution(\"Input\\n3\\n17 18\\n15 24\\n12 15\\n\") == \"6\"\nassert solution(solution) == solution(\"Input\\n2\\n10 16\\n7 17\\n\") == \"-1\"\nassert solution(solution) == solution(\"Input\\n5\\n90 108\\n45 105\\n75 40\\n165 175\\n33 30\\n\") == \"5\""
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n17 18\\n15 24\\n12 15\") == \"6\\n\"\nassert solution(\"2\\n10 16\\n7 17\") == \"-1\\n\"\nassert solution(\"5\\n90 108\\n45 105\\n75 40\\n165 175\\n33 30\") == \"5\\n\""
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, \"Incorrect output.\"\n\nfor n in range(1, 100000):\n    if solution(f\"{n}\") == expected_output:\n        print(n)\n        break\n\nfor n in range(1, 100000):\n    if solution(f\"{n}\") == expected_output:\n        print(n)\n        break"
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"bab\") == \"1 0\"\nassert solution(\"bb\") == \"1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"1\\n0 0\"\nassert solution(\"bbbb\") == \"0\\n0 0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('bab') == '2'\nassert solution('bb') == '1 0'\nassert solution('bbbb') == '0'"
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"bab\") == \"1 0\\n1 3\"\nassert solution(\"bb\") == \"1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\"\nassert solution(\"aaa\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"1\\n0\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\n"
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\\n\"\nassert solution(\"5\\n1 1\\n4 3 2\") == \"IMPOSSIBLE\\n\"\nassert solution(\"6\\n1 1\\n4 3 2\") == \"IMPOSSIBLE\\n\"\nassert solution(\"3\\n1 1\\n4 3 2\\n5\\n1 1\\n4 3 2\") == \"POSSIBLE\\n\"\nassert solution(\"3\\n1 1\\n4 3 2\\n5\\n1 1\\n4 3 2\") == \"POSSIBLE\\n\"\n"
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\\n\"\n\nassert solution(\"4\\n1 2\\n3 4\\n2 5\\n1 3\") == \"IMPOSSIBLE\\n\"\n\nassert solution(\"2\\n1 1\\n2 3\\n2 4\\n1 2\\n1 3\\n1 4\") == \"IMPOSSIBLE\\n\"\n\nassert solution(\"3\\n1 1\\n4 3 2\\n4 3 5\") == \"IMPOSSIBLE\\n\"\n\nassert solution(\"1\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"POSSIBLE\"\n"
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\\n\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"1\\n\") == \"POSSIBLE\"\nassert solution(\"3\\n2 3\\n4 2 3\\n5 1 2 3\\n6 3 4 5\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 2\\n5 3\\n6 2 4\\n7 4 5 6\\n8 6 7 8\\n9 8 9 10\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3\\n5 2\\n6 3\\n7 2 5\\n8 4 6 7\\n9 5 7 8\\n10 6 8 9\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 4\\n5 3\\n6 2\\n7 3\\n8 4\\n9 5\\n10 6\\n11 7\\n12 8\\n13 9\\n14 10\\n15 11\\n16 12\\n17 13\\n18 14\\n19 15\\n20 16\\n21 17\\n22 18\\n23 19\\n24 20\\n25 21\\n26 22\\n27 23\\n28 24\\n29 25\\n30 26\\n31 27\\n32 28\\n33 29\\n34 30\\n35 31\\n36 32\\n37 33\\n38 34\\n39 35\\n40 36\\n41 37\\n42 38\\n43 39\\n44 40\\n45 41\\n46 42\\n47 43\\n48 44\\n49 45\\n50 46\\n51 47\\n52 48\\n53 49\\n54 50\\n55 51\\n56 52\\n57 53\\n58 54\\n59 55\\n60 56\\n61 57\\n62 58\\n63 59\\n64 60\\n65 61\\n66 62\\n67 63\\n68 64\\n69 65\\n70 66\\n71 67\\n72 68\\n73 69\\n74 70\\n75 71\\n76 72\\n77 73\\n78 74\\n79 75\\n80 76\\n81 77\\n82 78\\n83 79\\n84 80\\n85 81\\n86 82\\n87 83\\n88 84\\n89 85\\n90 86\\n91 87\\n92 88\\n93 89\\n94 90\\n95 91\\n96 92\\n97 93\\n98 94\\n99 95\\n100 96\\n101 97\\n102 98\\n103 99\\n104 100\\n105 101\\n106 102\\n107 103\\n108 104\\n109 105\\n110 106\\n111 107\\n112 108\\n113 109\\n114 110\\n115 111\\n116 112\\n1"
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n3\n1 1\n4 3 2\n\"\"\"\n) == \"POSSIBLE\"\n\nassert solution(\n\"\"\"\n3\n1 1\n4 3 2\n\"\"\"\n) == \"POSSIBLE\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1 1\\n4 3 2') == 'POSSIBLE'\nassert solution('3\\n1 1\\n4 3 1') == 'IMPOSSIBLE'\nassert solution('3\\n1 1\\n4 3') == 'POSSIBLE'\nassert solution('3\\n1 1\\n4') == 'POSSIBLE'\nassert solution('3\\n1 1') == 'POSSIBLE'\nassert solution('3\\n1') == 'POSSIBLE'\nassert solution('3\\n') == 'POSSIBLE'\n"
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"5\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == \"IMPOSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 2\\n5 4 1\\n2 2 2\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 "
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1000000007\") == \"2\\n\"\n"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Testcase failed\"\nfor _ in range(test_cases):\n    N, M = map(int, stdin.split())\n    result = solution(str(N) + \" \" + str(M))\n    print(result)"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1000000007\") == \"2\\n\"\nassert solution(\"5 2000000003\") == \"4\\n\"\nassert solution(\"2 3000000003\") == \"4\\n\"\nassert solution(\"10000000000 1000000007\") == \"12\\n\"\nassert solution(\"10000000001 1000000007\") == \"20\\n\"\nassert solution(\"10000000000 1000000007\") == \"12\\n\"\nassert solution(\"10000000001 1000000007\") == \"20\\n\"\nassert solution(\"10000000000 1000000008\") == \"20\\n\"\nassert solution(\"10000000001 1000000008\") == \"40\\n\"\nassert solution(\"10000000000 1000000009\") == \"40\\n\"\nassert solution(\"10000000001 1000000009\") == \"80\\n\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1000000007\") == \"2\", \"Test 1 failed\"\nassert solution(\"1 1000000007\") == \"1\", \"Test 2 failed\"\nassert solution(\"3 1000000007\") == \"3\", \"Test 3 failed\"\nassert solution(\"5 1000000007\") == \"3\", \"Test 4 failed\"\nassert solution(\"7 1000000007\") == \"3\", \"Test 5 failed\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 2, \"The number of the sets of bowls of ramen that satisfy the conditions, disregarding order, modulo M should be 2.\"\n"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1000000007\") == \"2\"\nassert solution(\"3 1000000007\") == \"6\"\nassert solution(\"4 1000000007\") == \"20\"\nassert solution(\"5 1000000007\") == \"84\"\nassert solution(\"6 1000000007\") == \"216\"\nassert solution(\"7 1000000007\") == \"432\"\nassert solution(\"8 1000000007\") == \"864\"\nassert solution(\"9 1000000007\") == \"1728\"\nassert solution(\"10 1000000007\") == \"3456\"\nassert solution(\"11 1000000007\") == \"6912\"\nassert solution(\"12 1000000007\") == \"13824\"\nassert solution(\"13 1000000007\") == \"27648\"\nassert solution(\"14 1000000007\") == \"55296\"\nassert solution(\"15 1000000007\") == \"110592\"\nassert solution(\"16 1000000007\") == \"221184\"\nassert solution(\"17 1000000007\") == \"442368\"\nassert solution(\"18 1000000007\") == \"884736\"\nassert solution(\"19 1000000007\") == \"1769472\"\nassert solution(\"20 1000000007\") == \"3538944\"\nassert solution(\"21 1000000007\") == \"7077888\"\nassert solution(\"22 1000000007\") == \"14155776\"\nassert solution(\"23 1000000007\") == \"28311552\"\nassert solution(\"24 1000000007\") == \"56623104\"\nassert solution(\"25 1000000007\") == \"113246208\"\nassert solution(\"26 1000000007\") == \"226492416\"\nassert solution(\"27 1000000007\") == \"452984832\"\nassert solution(\"28 1000000007\") == \"905969664\"\nassert solution(\"29 1000000007\") == \"1811939328\"\nassert solution(\"30 1000000007\") == \"3623878656\"\nassert solution(\"31 1000000007\") == \"7247757312\"\nassert solution(\"32 1000000007\") == \"14495514624\"\nassert solution(\"33 1000000007\") == \"28991029248\"\nassert solution(\"34 1000000007\") == \"57982058496\"\nassert solution(\"35 1000000007\") == \"115964116992\"\nassert solution(\"36 1000000007\") == \"231928233984\"\nassert solution(\"37 1000000007\") == \"463856467968\"\nassert solution(\"38 1000000007\") == \"927712935936\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\\n\", \"Test case 1 failed\"\nassert solution(stdin) == \"2\\n\", \"Test case 2 failed\"\nassert solution(stdin) == \"3\\n\", \"Test case 3 failed\"\nassert solution(stdin) == \"1\\n\", \"Test case 4 failed\"\nassert solution(stdin) == \"2\\n\", \"Test case 5 failed\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1000000007\") == \"2\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 1000000007') == '2'\n"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\", \"Test case 1 failed\"\nassert solution(input()) == \"2\", \"Test case 2 failed\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 2 3 3\\n+-+') == '7\\n'\nassert solution('4 1 5 1\\n-') == '999999228\\n'\n"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 3 3\\n+-+\") == \"7\"\nassert solution(\"4 1 5 1\\n-\") == \"999999228\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 3 3\\n+-+\\n\") == \"7\"\nassert solution(\"4 1 5 1\\n-\") == \"999999228\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 3 3\\n+-+\") == 7\nassert solution(\"4 1 5 1\\n-\") == 999999228\n"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Testcase failed. Input: {input()}, Output: {output}, Diff: {abs(output - solution(input()))}\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_string) == expected_output, f\"Test failed: expected {expected_output}, got {solution(input_string)}\"\nfor input_string, expected_output in [\n    (\"2 2 3 3\", \"7\"),\n    (\"4 1 5 1\", \"-781\"),\n]:\n    print(f\"Input: {input_string}, Output: {solution(input_string)}\")"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Solution does not match the expected output. \\nGot: {solution(stdin)}\\nExpected: {expected}\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 3 3\\n+-+\") == \"7\"\nassert solution(\"4 1 5 1\\n-\") == \"999999228\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''2 2 3 3\n+-+''') == '7'\nassert solution('''4 1 5 1\n-''') == '999999228'"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 2 3 3\\n+-+') == '7'\nassert solution('4 1 5 1\\n-') == '999999228'"
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1 2\") == 4\nassert solution(\"1 2 3 1\") == 2\nassert solution(\"10 2 1 7\") == 0"
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 1 1 2') == 4\nassert solution('1 2 3 1') == 2\nassert solution('10 2 1 7') == 0"
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 2\") == \"4\\n\", \"Solution 1: Expected output: 4\"\nassert solution(\"1 2 3 1\") == \"2\\n\", \"Solution 2: Expected output: 2\"\nassert solution(\"10 2 1 7\") == \"0\\n\", \"Solution 3: Expected output: 0\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1 2\") == \"4\\n\", \"The correct output should be 4.\"\nassert solution(\"1 2 3 1\") == \"2\\n\", \"The correct output should be 2.\"\nassert solution(\"10 2 1 7\") == \"0\\n\", \"The correct output should be 0.\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 1 1 2') == 4\nassert solution('1 2 3 1') == 2\nassert solution('10 2 1 7') == 0"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\"\n"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 2) == 6, \"The answer is incorrect.\""
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Output\"\n"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"6\"\nassert solution(\"10 1\") == \"5\"\nassert solution(\"10 2\") == \"10\"\nassert solution(\"100 10\") == \"35\"\nassert solution(\"100 20\") == \"110\"\nassert solution(\"100 30\") == \"140\"\nassert solution(\"100 40\") == \"180\"\nassert solution(\"100 50\") == \"220\"\nassert solution(\"100 60\") == \"260\"\nassert solution(\"100 70\") == \"300\"\nassert solution(\"100 80\") == \"340\"\nassert solution(\"100 90\") == \"380\"\nassert solution(\"100 100\") == \"420\"\nassert solution(\"100 110\") == \"460\"\nassert solution(\"100 120\") == \"500\"\nassert solution(\"100 130\") == \"540\"\nassert solution(\"100 140\") == \"580\"\nassert solution(\"100 150\") == \"620\"\nassert solution(\"100 160\") == \"660\"\nassert solution(\"100 170\") == \"700\"\nassert solution(\"100 180\") == \"740\"\nassert solution(\"100 190\") == \"780\"\nassert solution(\"100 200\") == \"820\"\nassert solution(\"100 210\") == \"860\"\nassert solution(\"100 220\") == \"900\"\nassert solution(\"100 230\") == \"940\"\nassert solution(\"100 240\") == \"980\"\nassert solution(\"100 250\") == \"1020\"\nassert solution(\"100 260\") == \"1060\"\nassert solution(\"100 270\") == \"1100\"\nassert solution(\"100 280\") == \"1140\"\nassert solution(\"100 290\") == \"1180\"\nassert solution(\"100 300\") == \"1220\"\nassert solution(\"100 310\") == \"1260\"\nassert solution(\"100 320\") == \"1300\"\nassert solution(\"100 330\") == \"1340\"\nassert solution(\"100 340\") == \"1380\"\nassert solution(\"100 350\") == \"1420\"\nassert solution(\"100 360\") == \"1460\"\nassert solution(\"100 370\") == \"1500\"\nassert solution(\"100 380\") == \"1540\"\nassert solution(\"100 390\") == \"1580\"\nassert solution(\"100 400\") == \"1620\"\nassert solution(\"100 410\") == \"1660\"\nassert solution(\"100 420\") == \"1700\"\nassert solution(\"100 430\") == \"1740\"\nassert solution(\"100 440\") == \"1780\"\nassert solution(\"100 450\") == \"1820\"\nassert solution(\"100 460\") == \"1860\"\nassert solution(\"100 470\") == \"1900\"\nassert solution(\"100 480\") == \"1940\"\nassert solution(\"100 490\") == \"1980\"\nassert solution(\"100 500\") == \"2020\"\nassert solution(\"100 510\") == \"2060\"\nassert solution(\"100 520\") == \"2100\"\nassert solution(\"100 530\") == \"2140\"\nassert solution(\"100 540\") == \"2"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 2') == '6'\nassert solution('5 3') == '3'"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '1\\n', 'Test case 1 failed'\nassert solution(input()) == '1\\n', 'Test case 2 failed'\nassert solution(input()) == '1\\n', 'Test case 3 failed'\nassert solution(input()) == '1\\n', 'Test case 4 failed'\nassert solution(input()) == '1\\n', 'Test case 5 failed'\nassert solution(input()) == '1\\n', 'Test case 6 failed'\n\nprint('All test cases passed')"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"6\"  # Should return \"6\"\nassert solution(\"5 2\") == \"5\"  # Should return \"5\"\nassert solution(\"6 2\") == \"5\"  # Should return \"5\"\nassert solution(\"8 2\") == \"4\"  # Should return \"4\"\nassert solution(\"1 5\") == \"0\"  # Should return \"0\""
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"6\"  # expected output: \"6\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"6\", \"Test case 1 failed\""
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"6\""
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='2\\n1 2\\n') == '2\\n'\n"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\\n\", \"Expected Output: 2\\n\""
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\\n\", \"The answer is incorrect.\""
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"1\\n1\\n\") == \"1\\n\"\nassert solution(\"2\\n1 2\\n1 3\\n1 4\\n\") == \"2\\n\"\nassert solution(\"2\\n1 2\\n1 3\\n1 4\\n1 5\\n\") == \"0\\n\"\n\nprint(solution(\"1\\n1\\n\"))\nprint(solution(\"1\\n1\\n1\\n\"))\nprint(solution(\"2\\n1 2\\n1 3\\n1 4\\n1 5\\n\"))\nprint(solution(\"2\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n\"))\nprint(solution(\"2\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n\"))\nprint(solution(\"2\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n\"))"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2\\n2 3\\n\") == \"1\\n\"\nassert solution(\"5\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == \"1\\n\"\nassert solution(\"10\\n1 2\\n2 3\\n3 4\\n4 5\\n6 7\\n7 8\\n8 9\\n9 10\\n\") == \"1\\n\""
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n2\\n\"\nassert solution(\"2\\n1 3\\n\") == \"0\\n\"\nassert solution(\"2\\n2 3\\n\") == \"1\\n\"\nassert solution(\"2\\n2 4\\n\") == \"0\\n\"\nassert solution(\"2\\n1 3\\n\") == \"1\\n\"\nassert solution(\"2\\n2 4\\n\") == \"1\\n\""
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n1 2\\n') == '2\\n'"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n3\n0 2 0\n3 0 1\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n3\n0 2 0\n1 0 3\n\"\"\") == \"4\"\n\nassert solution(\n\"\"\"\n11\n0 0 0 5 0 0 0 4 0 0 11\n9 2 6 0 8 1 7 0 3 0 10\n\"\"\") == \"18\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n0 2 0\\n3 0 1') == '2'\nassert solution('3\\n0 2 0\\n1 0 3') == '4'\nassert solution('11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10') == '18'"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n0 2 0\\n3 0 1\\n\") == \"2\"\nassert solution(\"3\\n0 2 0\\n1 0 3\\n\") == \"4\"\nassert solution(\"11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\\n\") == \"18\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n0 2 0\\n3 0 1\\n\") == \"2\"\nassert solution(\"3\\n0 2 0\\n1 0 3\\n\") == \"4\"\nassert solution(\"11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\\n\") == \"18\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"4\"\nassert solution(open(\"input3.txt\", \"r\").read()) == \"18\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n0 2 0\\n3 0 1\\n') == '2\\n'\nassert solution('3\\n0 2 0\\n1 0 3\\n') == '4\\n'\nassert solution('11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\\n') == '18\\n'\n\nfrom typing import List"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n0 2 0\\n3 0 1\") == \"2\\n\"\nassert solution(\"11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\") == \"18\\n\"\nassert solution(\"3\\n0 2 0\\n3 0 1\") == \"2\\n\"\nassert solution(\"11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\") == \"18\\n\"\n"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test case not satisfied.\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(example1) == \"2\"\nassert solution(example2) == \"18\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n0 2 0\\n3 0 1\") == \"2\"\nassert solution(\"3\\n0 2 0\\n1 0 3\") == \"4\"\nassert solution(\"11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\") == \"18\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"6 10\\ncode*s\\ncodeforces\") == \"YES\"\nassert solution(stdin=\"6 5\\nvk*cup\\nvkcup\") == \"YES\"\nassert solution(stdin=\"1 1\\nv\\nk\") == \"NO\"\nassert solution(stdin=\"9 6\\ngfgf*gfgf\\ngfgfgf\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"code*s\") == \"YES\"\nassert solution(\"codeforces\") == \"YES\"\nassert solution(\"vk*cup\") == \"YES\"\nassert solution(\"v\") == \"NO\"\nassert solution(\"k\") == \"NO\"\nassert solution(\"gfgf*gfgf\") == \"NO\"\nassert solution(\"gfgfgf\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"6 10\\ncode*s\\ncodeforces\\n\") == \"YES\\n\"\nassert solution(\n    \"6 5\\nvk*cup\\nvkcup\\n\") == \"YES\\n\"\nassert solution(\n    \"1 1\\nv\\nk\\n\") == \"NO\\n\"\nassert solution(\n    \"9 6\\ngfgf*gfgf\\ngfgfgf\\n\") == \"NO\\n\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"code*s\") == \"YES\"\nassert solution(\"codeforces\") == \"YES\"\nassert solution(\"vk*cup\") == \"YES\"\nassert solution(\"v\") == \"NO\"\nassert solution(\"k\") == \"NO\"\nassert solution(\"gfgf*gfgf\") == \"NO\"\nassert solution(\"gfgfgf\") == \"NO\"\n"
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 10\\ncode*s\\ncodeforces\\n\") == \"YES\"\nassert solution(\"6 5\\nvk*cup\\nvkcup\\n\") == \"YES\"\nassert solution(\"1 1\\nv\\nk\\n\") == \"NO\"\nassert solution(\"9 6\\ngfgf*gfgf\\ngfgfgf\\n\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"code*s\") == \"YES\"\nassert solution(\"codeforces\") == \"YES\"\nassert solution(\"vk*cup\") == \"YES\"\nassert solution(\"v\") == \"NO\"\nassert solution(\"k\") == \"NO\"\nassert solution(\"gfgf*gfgf\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == \"YES\"\nassert solution(open('input1.txt', 'r')) == \"YES\"\nassert solution(open('input2.txt', 'r')) == \"YES\"\nassert solution(open('input3.txt', 'r')) == \"NO\"\nassert solution(open('input4.txt', 'r')) == \"NO\"\nassert solution(open('input5.txt', 'r')) == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aba*aba\") == \"YES\"\nassert solution(\"codeforces\") == \"YES\"\nassert solution(\"v*k*\") == \"YES\"\nassert solution(\"v*k\") == \"NO\"\nassert solution(\"gfgf*gfgf\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"input: {input()}, output: {output()}\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '0.260000000000'"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n0.1 0.2 0.3 0.8\\n\") == \"0.800000000000\"\nassert solution(\"2\\n0.1 0.2\\n\") == \"0.260000000000\"\n\nimport random"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"0.260000000000\", \"The output should be 0.260000000000.\"\n"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '0.800000000000\\n' # best strategy: ask one friend\nassert solution(stdin) == '0.260000000000\\n' # best strategy: ask all friends to come up with a problem\n\nprint('All tests passed.')"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '0.260000000000', \"Expected output: 0.260000000000, but got: \" + solution(input())"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0.1 0.2 0.3 0.8\\n2\\n0.1 0.2\\n\") == \"0.260000000000\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0.260000000000\", \"The correct answer is 0.260000000000.\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n0.1 0.2 0.3 0.8\\n2\\n0.1 0.2\\n') == '0.800000000000\\n'\nassert solution('2\\n0.1 0.2\\n') == '0.260000000000\\n'"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n0.1 0.2 0.3 0.8\") == \"0.8\"\nassert solution(\"2\\n0.1 0.2\") == \"0.26\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '0.260000000000'"
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"The output is not correct. Expected {output}, but got {solution(input())}\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5.0000000000\\n\"\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\\n\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"5.0000000000\\n\", \"The given input is invalid\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"4.7142857143\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"5.0000000000\" # expected output: 5.0000000000"
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n5 10 1 2 5\n''') == '5.0000000000'\n\nassert solution('''\n3 6 1 2 1\n''') == '4.7142857143'"
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5.0000000000\\n\"\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\\n\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"5.0000000000\"\nassert solution() == \"4.7142857143\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 10 1 2 5\\n3 6 1 2 1\\n5 10 1 2 5\\n3 6 1 2 1\\n5 10 1 2 5\\n3 6 1 2 1\") == \"5.0000000000\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\\n3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.250\\n\"\n\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\\n3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.279\\n\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\\n\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\\n\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n0.000 0.500 0.750 1.000 2.000 3.000') == '0.250'\nassert solution('3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896') == '0.279'"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\\n\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\\n\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n0.000 0.500 0.750 1.000 2.000 3.000') == '0.250'\nassert solution('3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896') == '0.279'"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\\n\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\\n\"\n\nsolution(stdin)"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\\n3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.250\\n\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\\n3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.279\\n\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '0.250', 'Test case 1 should output 0.250.'"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n0.000 0.500 0.750 1.000 2.000 3.000\\n') == '0.250\\n'\nassert solution('3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\\n') == '0.279\\n'"
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"18\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 5\\n5 2\") == \"18\"\nassert solution(\"0 1\\n0 0\") == \"8\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 5\\n5 2') == '18'\nassert solution('0 1\\n0 0') == '8'"
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 5\\n5 2\\n\") == \"18\"\nassert solution(\"0 1\\n0 0\\n\") == \"8\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"18\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5\\n5 2\\n\") == \"18\\n\", \"Test 1\"\n\nassert solution(\"0 1\\n0 0\\n\") == \"8\\n\", \"Test 2\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test {test_case} failed: expected '{output}', got '{solution(input())}'\"\n\ntest_case = 1\nx1, y1 = int(input()), int(input())\nx2, y2 = int(input()), int(input())\n\nprint(len(min_path(x1, y1, x2, y2)))"
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Output: The length of minimal path of the quadcopter to surround the flag and return back is 18.\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5\\n5 2\\n\") == \"18\\n\", \"The output should be 18.\"\nassert solution(\"0 1\\n0 0\\n\") == \"8\\n\", \"The output should be 8.\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '18' #example 1\nassert solution(input()) == '8' #example 2"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n\") == \"4\\n\"\nassert solution(\"2\\n\") == \"10\\n\"\nassert solution(\"10\\n\") == \"244\\n\""
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 4, \"The output is incorrect\"\nassert solution(2) == 10, \"The output is incorrect\"\nassert solution(10) == 244, \"The output is incorrect\""
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 4, \"Test 1 failed.\"\nassert solution(2) == 10, \"Test 2 failed.\"\nassert solution(10) == 244, \"Test 3 failed.\""
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"10\"\nassert solution(\"10\") == \"244\"\n"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\\n3\\n1 2 3\\nOutput\\n0\\nInput\\n4\\n1 1 2 2\\nOutput\\n2\\nInput\\n5\\n1 4 1 4 9\\nOutput\\n2\") == \"Output\\n0\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n1 2 3\\n\\n4\\n1 1 2 2\\n\\n5\\n1 4 1 4 9\\n\\n1 2 3 4 5\\n') == '0\\n2\\n2\\n2'"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n1 2 3\\n') == '0\\n'\nassert solution('4\\n1 1 2 2\\n') == '2\\n'\nassert solution('5\\n1 4 1 4 9\\n') == '2\\n'"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == '0'\nassert solution(4) == '2'\nassert solution(5) == '2'"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 0\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"0\\n\"\nassert solution(\"4\") == \"2\\n\"\nassert solution(\"5\") == \"2\\n\"\n"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"0\\n\"\nassert solution(\"4\\n1 1 2 2\\n\") == \"2\\n\"\nassert solution(\"5\\n1 4 1 4 9\\n\") == \"2\\n\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"0\\n\"\nassert solution(\"4\\n1 1 2 2\\n\") == \"2\\n\"\nassert solution(\"5\\n1 4 1 4 9\\n\") == \"2\\n\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Input\\n3\\n1 2 3\\n\\nOutput\\n0\\n\\nInput\\n4\\n1 1 2 2\\n\\nOutput\\n2\\n\\nInput\\n5\\n1 4 1 4 9\\n\\nOutput\\n2\\n\\n\") == \"Output\\n0\\n\\n\"\n"
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('aaabccc') == 'YES', \"The given string is not possible to obtain by concatenating 'a' and 'b' using the number of 'c' equal to the number of 'a'.\"\nassert solution('bbacc') == 'NO', \"The given string is possible to obtain by concatenating 'a' and 'b' using the number of 'c' equal to the number of 'b' or the order is incorrect.\"\nassert solution('aabc') == 'YES', \"The given string is not possible to obtain by concatenating 'a' and 'b' using the number of 'c' equal to the number of 'b' or the order is incorrect.\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\"\n"
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('aaabccc') == 'YES', 'Example 1'\nassert solution('bbacc') == 'NO', 'Example 2'\nassert solution('aabc') == 'YES', 'Example 3'"
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n4 1 2 5 3\\n4\\n4 1 3 2') == '2'\nassert solution('4\\n4 1 3 2') == '2'"
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n4 1 2 5 3\") == \"2\\n\"\nassert solution(\"4\\n4 1 3 2\") == \"2\\n\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n4 1 3 2\") == \"2\"\nassert solution(\"4\\n4 1 2 5 3\") == \"2\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(str(5)) == '2\\n'\nassert solution(str(4)) == '2\\n'\nassert solution(str(4)) == '2\\n'"
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n4 1 2 5 3\\n\") == \"2\"\nassert solution(\"4\\n4 1 3 2\\n\") == \"2\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '2', \"Expected '2', but got '{}'\".format(solution(input()))"
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n4 1 2 5 3\\n') == '2\\n'\nassert solution('4\\n4 1 3 2\\n') == '2\\n'"
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n4 1 3 2\\n\") == \"2\"\nassert solution(\"5\\n4 1 2 5 3\\n\") == \"2\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n4 1 2 5 3\\n\") == \"2\\n\"\nassert solution(\"4\\n4 1 3 2\\n\") == \"2\\n\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 1\") == \"3.5\"\nassert solution(\"6 3\") == \"4.96\"\nassert solution(\"2 2\") == \"1.75\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case_id} failed: {solution(input())}!= {expected_output}\"\n\ntest_case_id = 1"
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 1\\n6 3\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2"
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 1\\n6 3\\n2 2\\n\") == \"3.500000000000\\n\"\nassert solution(\"6 3\\n\") == \"4.958333333333\\n\"\nassert solution(\"2 2\\n\") == \"1.750000000000\\n\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 1\\n\") == \"3.500000000000\\n\"\nassert solution(\"6 3\\n\") == \"4.958333333333\\n\"\nassert solution(\"2 2\\n\") == \"1.750000000000\\n\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '3.500000000000\\n', \"Test 1 failed\"\nassert solution(stdin) == '4.958333333333\\n', \"Test 2 failed\"\nassert solution(stdin) == '1.750000000000\\n', \"Test 3 failed\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution( \"\"\"6 1\n6 3\n2 2\n\"\"\") == \"3.5\\n\"\nassert solution( \"\"\"6 3\n2 2\n\"\"\") == \"4.96\\n\"\nassert solution( \"\"\"2 2\n\"\"\") == \"1.75\\n\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 1\") == \"3.5\"\nassert solution(\"6 3\") == \"4.96\"\nassert solution(\"2 2\") == \"1.76\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"The given solution is incorrect, please check the example cases provided and the input format.\"\n"
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == '3.5'\nassert solution(2) == '4.96'\nassert solution(3) == '3.5'\nassert solution(4) == '4.9583333333333334'\nassert solution(5) == '4.9583333333333334'\nassert solution(6) == '4.9583333333333334'\nassert solution(7) == '4.9583333333333334'\nassert solution(8) == '4.9583333333333334'\nassert solution(9) == '4.9583333333333334'\nassert solution(10) == '4.9583333333333334'\nassert solution(11) == '4.9583333333333334'\nassert solution(12) == '4.9583333333333334'\nassert solution(13) == '4.9583333333333334'\nassert solution(14) == '4.9583333333333334'\nassert solution(15) == '4.9583333333333334'\nassert solution(16) == '4.9583333333333334'\nassert solution(17) == '4.9583333333333334'\nassert solution(18) == '4.9583333333333334'\nassert solution(19) == '4.9583333333333334'\nassert solution(20) == '4.9583333333333334'\nassert solution(21) == '4.9583333333333334'\nassert solution(22) == '4.9583333333333334'\nassert solution(23) == '4.9583333333333334'\nassert solution(24) == '4.9583333333333334'\nassert solution(25) == '4.9583333333333334'\nassert solution(26) == '4.9583333333333334'\nassert solution(27) == '4.9583333333333334'\nassert solution(28) == '4.9583333333333334'\nassert solution(29) == '4.9583333333333334'\nassert solution(30) == '4.9583333333333334'\nassert solution(31) == '4.9583333333333334'\nassert solution(32) == '4.9583333333333334'\nassert solution(33) == '4.9583333333333334'\nassert solution(34) == '4.9583333333333334'\nassert solution(35) == '4.9583333333333334'\nassert solution(36) == '4.9583333333333334'\nassert solution(37) == '4.9583333333333334'\nassert solution(38) == '4.9583333333333334'\nassert solution(39) == '4.95833"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\nassert solution(\"3\\n<--\\n2\\n<>\") == \"3\\n3\\n0\"\nassert solution(\"4\\n4\\n-\\n5\\n-\\n5\\n-\\n5\\n-\") == \"0\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\\n3\\n<--\\n2\\n<>\") == \"3\\n5\\n3\\n0\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\nassert solution(\"4\\n4\\n<-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\nassert solution(\"4\\n4\\n<--\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\nassert solution(\"4\\n4\\n<>\") == \"3\\n5\\n3\\n0\"\nassert solution(\"4\\n4\\n<-<\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n4\\t-><-\\n5\\t>>>>>\\n3\\t<--\\n2\\t<>\") == \"3\\n5\\n3\\n0\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_str) == output_str, f\"Test case {test_case + 1} failed: {output_str}!= {output_str}\"\nfor test_case in range(1, t+1):\n    output_str = solution(input_str)\n    print(f\"Test case {test_case}: {output_str}\")\n"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\nassert solution(\"4\\n4\\n<--\\n2\\n<>\") == \"3\\n5\\n3\\n0\"\nassert solution(\"2\\n1\\n\\n\") == \"0\"\nassert solution(\"3\\n4\\n5\\n6\\n7\\n8\\n9\\n\") == \"0\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n4\n4\n-><-\n5\n>>>>>\n3\n<--\n2\n<>\n''') == '3\\n5\\n3\\n0\\n'\n\nassert solution('''\n4\n5\n<<<\n5\n->\n3\n<>\n''') == '3\\n3\\n0\\n'\n\nassert solution('''\n4\n5\n>>>>>\n4\n->\n3\n<>\n''') == '3\\n3\\n0\\n'"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n4 5\\n4 10\\n\") == 16\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\\n\") == 202\nassert solution(\"3\\n1 1\\n100 100\\n1 1\\n\") == -1"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\\n3\\n4 5\\n4 5\\n4 10\") == \"16\\n9 9 10 \\n\"\nassert solution(\"Input\\n4\\n1 100\\n100 1\\n1 100\\n100 1\") == \"202\\n101 101 101 101 \\n\"\nassert solution(\"Input\\n3\\n1 1\\n100 100\\n1 1\\n\") == \"-1\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\n4 5\\n4 10\") == \"16\\n9 9 10\\n\"\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\") == \"202\\n101 101 101 101\\n\"\nassert solution(\"3\\n1 1\\n100 100\\n1 1\") == \"-1\\n\""
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Output: {solution(input())}, Expected Output: {expected_output}\""
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 5\\n4 5\\n4 10') == '16'\nassert solution('4\\n1 100\\n100 1\\n1 100\\n100 1') == '202'\nassert solution('3\\n1 1\\n100 100\\n1 1') == '-1'"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n4 5\\n4 5\\n4 10\\n\") == 16\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\\n\") == 202\nassert solution(\"3\\n1 1\\n100 100\\n1 1\\n\") == -1"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 5\\n4 5\\n4 10') == 16\nassert solution('4\\n1 100\\n100 1\\n1 100\\n100 1') == 202\nassert solution('3\\n1 1\\n100 100\\n1 1') == -1"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n4 5\\n4 5\\n4 10\") == \"16\\n9 9 10 \\n\"\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\") == \"202\\n101 101 101 101 \\n\"\nassert solution(\"3\\n1 1\\n100 100\\n1 1\") == \"-1\\n\""
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Input and Output do not match.\""
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n4 5\\n4 5\\n4 10\") == \"16\\n9 9 10\\n\"\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\") == \"202\\n101 101 101 101\\n\"\nassert solution(\"3\\n1 1\\n100 100\\n1 1\\n\") == \"-1\\n\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 1 1 1 1\") == \"1 2 2\\n\"\nassert solution(\"3\\n1 2 3\") == \"0 2\\n\"\nassert solution(\"5\\n1 2 3 2 2\") == \"0 1 3\\n\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 1 1 1 1\\n\") == \"1 2 2\\n\", \"The solution should return the minimum number of hours required to level hills so it becomes possible to build 1 houses.\"\n\nassert solution(\"3\\n1 2 3\\n\") == \"0 2\\n\", \"The solution should return the minimum number of hours required to level hills so it becomes possible to build 0 houses.\"\n\nassert solution(\"5\\n1 2 3 2 2\\n\") == \"0 1 3\\n\", \"The solution should return the minimum number of hours required to level hills so it becomes possible to build 0 houses.\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 1 1 1 1\\n\") == \"1 2 2 \\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"0 2 \\n\"\nassert solution(\"5\\n1 2 3 2 2\\n\") == \"0 1 3 \\n\"\n\nfor k in range(1, int(n / 2) + 1):\n    solution(f\"{k}\\n\")\n    for i in range(k):\n        solution(f\"0 0 0\\n\")\n    print()"
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test failed\"\n"
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 1 1 1 1\") == \"1 2 2\\n\"\nassert solution(\"3\\n1 2 3\") == \"0 2\\n\"\nassert solution(\"5\\n1 2 3 2 2\") == \"0 1 3\\n\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_example) == output_example, \"Incorrect output\"\n\ninput_example = '''5\n1 1 1 1 1'''\noutput_example = '''1 2 2'''\n\ninput_example = '''3\n1 2 3'''\noutput_example = '''0 2'''\n\ninput_example = '''5\n1 2 3 2 2'''\noutput_example = '''0 1 3'''"
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 1 1 1 1\\n\") == \"1 2 2\", \"1 2 2 expected\"\nassert solution(\"3\\n1 2 3\\n\") == \"0 2\", \"0 2 expected\"\nassert solution(\"5\\n1 2 3 2 2\\n\") == \"0 1 3\", \"0 1 3 expected\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 1 1 1 1\\n\") == \"1 2 2\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"0 2\\n\"\nassert solution(\"5\\n1 2 3 2 2\\n\") == \"0 1 3\\n\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == \"1 2 2 \"\nassert solution(3) == \"0 2 \"\nassert solution(5) == \"0 1 3 \""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 1 1 1 1\\n\") == \"1 2 2\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"0 2\\n\"\nassert solution(\"5\\n1 2 3 2 2\\n\") == \"0 1 3\\n\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(101101) == '110110'\nassert solution(10010110) == '01100011'\nassert solution(10) == '01'"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('101101\\n110\\n') == '110110'\nassert solution('10010110\\n100011\\n') == '01100011'\nassert solution('10\\n11100\\n') == '01'"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"101101\") == \"110110\"\nassert solution(\"10010110\") == \"01100011\"\nassert solution(\"10\") == \"01\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"101101\") == \"110110\"\nassert solution(\"10010110\") == \"01100011\"\nassert solution(\"10\") == \"01\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"101101\\n110\") == \"110110\"\nassert solution(\"10010110\\n100011\") == \"01100011\"\nassert solution(\"10\\n11100\") == \"01\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(101101, 110) == '110110'\nassert solution(10010110, 100011) == '01100011'\nassert solution(10, 11100) == '01'"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"101101\\n110\\n\") == \"110110\\n\"\nassert solution(\"10010110\\n100011\\n\") == \"01100011\\n\"\nassert solution(\"10\\n11100\\n\") == \"01\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"01100011\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"110110\"\n\nassert solution() == \"01100011\"\n\nassert solution() == \"01\""
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\") == 1\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 0 0 1\") == -1\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1\") == 0"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n\") == \"1\\n\"\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 0 0 1\\n\") == \"-1\\n\"\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1\\n\") == \"0\\n\"\n"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\") == \"1\\n\"\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 0 0 1\") == \"-1\\n\"\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1\\n1 0 0 1\") == \"0\\n\""
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n') == 1\nassert solution('3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n0 1 1 0\\n') == -1\nassert solution('3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n') == 0"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(str(input())) == '1'\n\nassert solution(str(input())) == '-1'\n\nassert solution(str(input())) == '0'"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1') == 1\nassert solution('3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 0 0 1') == -1\nassert solution('3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1') == 0"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n\") == \"1\"\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 0 0 1\\n\") == \"-1\"\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1\\n\") == \"0\""
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\") == \"1\\n\"\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 0 0 1\") == \"-1\\n\"\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1\") == \"0\\n\""
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n\") == -1\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n\") == 0\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n\") == 0"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5, 5, 2) == 1\nassert solution(3, 4, 1) == -1\nassert solution(3, 4, 1) == 0"
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\") == \"2 2 3 1 2  \"\nassert solution(\"0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\") == \"9999 10000 9998\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\\n\") == \"2 2 3 1 2 2 2\"\nassert solution(\"3\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\\n\") == \"9999 10000 9998\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\") == \"2 2 3 1 2  \\n\", \"Test 1\"\nassert solution(\"3\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\") == \"9999 10000 9998\\n\", \"Test 2\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\\n\") == \"2 2 3 1 2 0\\n\"\nassert solution(\"3\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\\n\") == \"9999 10000 9998\\n\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2 2 3 1 2 1\", \"Your solution is incorrect. Expected output: '2 2 3 1 2 1', but got '{}'.\".format(solution())\n"
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '2 2 3 1 2  \\n'"
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\") == \"2 2 3 1 2\"\nassert solution(\"3\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\") == \"9999 10000 9998\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0') == '2 2 3 1 2  '\nassert solution('3\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0') == '9999 10000 9998'\n"
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '2 2 3 1 2  \\n'\nassert solution() == '9999 10000 9998\\n'"
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2 2 3 1 2 2 10000 9998 9997\\n\""
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\") == 22\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\\n\") == 103\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n\") == 105\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\") == 0"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == expected, f\"Solution({input}), expected={expected}\"\nfor input, expected in [\n    (\"6\", 22),\n    (\"5\", 103),\n    (\"6\", 105),\n    (\"3\", 0),\n]:\n    assert solution(input) == expected, f\"Solution({input}), expected={expected}\""
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\\n\") == \"22\"\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\\n\") == \"103\"\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n\") == \"105\"\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\\n\") == \"0\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1 6\\n1 1\\n1 1\\n1 1\\n1 1\\n\") == \"1\""
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\") == 22\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\") == 103\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\") == 105\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\") == 0"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"22\"\nassert solution(input()) == \"103\"\nassert solution(input()) == \"105\"\nassert solution(input()) == \"0\""
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\\n\\n5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\\n\\n6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n\\n3\\n00 5000\\n00 5000\\n00 5000\\n\\n0') == '22'\nassert solution('5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\\n\\n6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n\\n3\\n00 5000\\n00 5000\\n00 5000\\n\\n0') == '103'\nassert solution('6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n\\n3\\n00 5000\\n00 5000\\n00 5000\\n\\n0') == '105'\nassert solution('3\\n00 5000\\n00 5000\\n00 5000\\n\\n0') == '0'"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\\n\") == \"22\"\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\\n\") == \"103\"\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n\") == \"105\"\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\\n\") == \"0\""
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\""
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\\n') == 22\nassert solution('5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\\n') == 103\nassert solution('6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n') == 105\nassert solution('3\\n00 5000\\n00 5000\\n00 5000\\n') == 0"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\\n\") == 22\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\\n\") == 103\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n\") == 105\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\\n\") == 0"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n2 3 2 3\\n\"\nassert solution(\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n1 3 1 3\\n\"\nassert solution(\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n3 3 2 3\\n\"\nassert solution(\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\") == \"NO\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n2 3 2 3\"\nassert solution(\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n1 3 1 3\"\nassert solution(\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n3 3 2 3\"\nassert solution(\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\") == \"NO\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n2 3 2 3\\n\"\nassert solution(\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n1 3 1 3\\n\"\nassert solution(\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n3 3 2 3\\n\"\nassert solution(\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\") == \"NO\"\n"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Expected output: '{output()}'\\nGot: '{solution(input())}'\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n2 3 2 3\\n\"\nassert solution(\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n1 3 1 3\\n\"\nassert solution(\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n3 3 2 3\\n\"\nassert solution(\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\\n\") == \"NO\\n\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n2 3 2 3\\n\"\nassert solution(\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n1 3 1 3\\n\"\nassert solution(\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n3 3 2 3\\n\"\nassert solution(\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\\n\") == \"NO\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n2 3 2 3\\n\"\nassert solution(\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n1 3 1 3\\n\"\nassert solution(\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n3 3 2 3\\n\"\nassert solution(\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\") == \"NO\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"YES\\n2 3 2 3\\n1 3 1 3\\n3 3 2 3\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\\n') == 'YES\\n2 3 2 3\\n'\nassert solution('3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\\n') == 'YES\\n1 3 1 3\\n'\nassert solution('3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\\n') == 'YES\\n3 3 2 3\\n'\nassert solution('3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\\n') == 'NO'"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Test case {i+1} failed: solution()!= expected. expected: '{expected}', actual: '{solution(input())}'\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\\n\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\\n\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\\n\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\\n\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\\n\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'YES', \"Incorrect solution\"\nprint(\"NO\")"
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'YES'"
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 1\\n2 3 4 1\\n1 2 3 4') == 'NO'\nassert solution('4 1\\n4 3 1 2\\n3 4 2 1') == 'YES'\nassert solution('4 3\\n4 3 1 2\\n3 4 2 1') == 'YES'\nassert solution('4 2\\n4 3 1 2\\n2 1 4 3') == 'YES'\nassert solution('4 1\\n4 3 1 2\\n2 1 4 3') == 'NO'"
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\"\n"
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"4 1\\n2 3 4 1\\n1 2 3 4\\n\") == \"NO\"\nassert solution(stdin=\"4 1\\n4 3 1 2\\n3 4 2 1\\n\") == \"YES\"\nassert solution(stdin=\"4 3\\n4 3 1 2\\n3 4 2 1\\n\") == \"YES\"\nassert solution(stdin=\"4 2\\n4 3 1 2\\n2 1 4 3\\n\") == \"YES\"\nassert solution(stdin=\"4 1\\n4 3 1 2\\n2 1 4 3\\n\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"YES\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\\n4\\n\") == \"1 1\\n3 1\\n1 5\\n4 4\\n\"\nassert solution(\"Input\\n7\\n\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4) == \"1 1\\n3 1\\n1 5\\n4 4\"\nassert solution(7) == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\"\n\nIvan asked you to find initial placement of exactly $n$ knights such that in the end there will be at least $\\lfloor \\frac{n^{2}}{10} \\rfloor$ knights. \n\nTo prove this, we need to prove that there exists a cell in the chessboard with at least $4$ knights in it. Let's start by considering all the possible initial positions of $n$ knights in the chessboard.\n\nWe can use a brute force approach to find such positions. We can keep adding new knights to the chessboard and check if they are under attack of at least $4$ knights. If there is such a cell, we can add the new knight to the cell and continue adding new knights. If there is no such cell, we can try adding the new knight to a cell that is not under attack of $4$ knights, and continue adding new knights until we find such a cell.\n\nTo find such a cell, we can try to add the new knight to any cell that is not under attack of $4$ knights. We can start by trying each possible starting position and see if any of them are under attack of at least $4$ knights. If we find such a starting position, we can add the new knight to it and continue adding new knights to that cell until we find such a cell that is not under attack of $4$ knights. If we don't find such a cell, we can try adding the new knight to a cell that is not under attack of $4$ knights, and continue adding new knights until we find such a cell.\n\nWe can continue this process until we find a cell in the chessboard with at least $4$ knights. We can use a data structure like a priority queue or a min-heap to store the starting positions of knights. We can start with an empty priority queue and add new starting positions to the priority queue. Whenever we find a starting position that is not under attack of $4$ knights, we can add it to the priority queue and continue adding new starting positions to the priority queue until we find a cell with at least $4$ knights.\n\nOnce we have found such a cell, we can add the new knight to it and continue adding new knights to that cell until we find a cell with at least $4$ knights. We can stop this process when we have found such a cell with at least $4$ knights.\n\nTo find such a cell, we can start with the center cell of the chessboard and repeatedly try adding new knights to the cells that are not under attack of $4$ knights. We can try adding new knights to each of the $8$ cells that are not under attack of $4$ knights. If we find a cell with at least $4$ knights, we can add the new knight to that cell and continue adding new knights to that cell until we find a cell with at least $4$ knights. If we don't find a cell with at least $4$ knights, we can try adding new knights to cells that are not under attack of $4$ knights. We can continue this process until we find a cell with at least $4$ knights.\n\nLet's implement this algorithm in Python:"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n\") == \"1 1\\n3 1\\n1 5\\n4 4\\n\"\nassert solution(\"7\\n\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '''1 1\n3 1\n1 5\n4 4'''\n\nassert solution() == '''2 1\n1 2\n4 1\n5 2\n2 6\n5 7\n6 6'''"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\", \"The solution should be: 2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n\") == \"1 1\\n3 1\\n1 5\\n4 4\\n\"\nassert solution(\"7\\n\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\"\n"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Solution is incorrect. Expected output:\\n{expected_output}\\nGot:\\n{solution(input())}\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n\") == \"1 1\\n3 1\\n1 5\\n4 4\\n\"\nassert solution(\"7\\n\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\"\nassert solution(\"\") == \"\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"4\\n1 1\\n3 1\\n1 5\\n4 4\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n\") == \"1 1\\n3 1\\n1 5\\n4 4\\n\"\nassert solution(\"7\\n\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\""
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == -1  # This test case doesn't have a valid solution."
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1\\n\") == -1\nassert solution(\"3\\n1 2 3\\n\") == 3"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\\n\") == -1\nassert solution(\"3\\n1 2 3\\n\") == 3"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1\\n\") == \"-1\\n\"\n\nassert solution(\"3\\n1 2 3\\n\") == \"3\\n\""
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n') == '-1\\n'\nassert solution('3\\n1 2 3\\n') == '3\\n'\n\nassert solution('4\\n1 2 3\\n') == '-1\\n'\nassert solution('4\\n2 3 4\\n') == '3\\n'"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '-1', \"No sequence of turns leads to finishing the game\""
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n1 2 3') == '-1'\nassert solution('1\\n1') == '0'\nassert solution('1\\n1 2 3') == '3'"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='1\\n1\\n\\n3\\n1 2 3\\n') == -1"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''1\n1\n''') == -1\n\nassert solution('''3\n1 2 3\n''') == 3\n\nprint(solution('''1\n1\n''')) # Output: -1\n\nprint(solution('''3\n1 2 3\n''')) # Output: 3"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"46 2\\n\") == \"7\\n0 1 0 0 1 1 1\"\nassert solution(\"2018 214\\n\") == \"3\\n92 205 1\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2018 214\") == \"3\\n92 205 1\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"46 2\\n\") == \"7\\n0 1 0 0 1 1 1\"\nassert solution(\"2018 214\\n\") == \"3\\n92 205 1\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"46 2\\n2018 214\") == \"7\\n92 205 1\\n\"\nassert solution(\"2018 214\") == \"3\\n92 205 1\\n\"\nassert solution(\"\") == \"-1\\n\"\nassert solution(\"46 2\\n\") == \"-1\\n\"\n"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"46 2\") == \"7\\n0 1 0 0 1 1 1\"\nassert solution(\"2018 214\") == \"3\\n92 205 1\"\nassert solution(\"\") == \"-1\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"\"\"7\n0 1 0 0 1 1 1\"\"\"\n\nassert solution(stdin) == \"\"\"3\n92 205 1\"\"\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"46 2\\n\") == \"7\\n0 1 0 0 1 1 1\\n\"\nassert solution(\"2018 214\\n\") == \"3\\n92 205 1\\n\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"46 2\\n\") == \"7\\n0 1 0 0 1 1 1\\n\"\nassert solution(\"2018 214\\n\") == \"3\\n92 205 1\\n\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"7\\n0 1 0 0 1 1 1\\n3\\n92 205 1\""
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"5.000000000000000\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 5.0\nassert solution() == 0.4\nprint(\"All test cases pass.\")"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"5.000000000000000\", \"The output should be '5.000000000000000', but it's actually '{}'.\".format(solution(input()))"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"5.000000000000000\"\nassert solution() == \"0.400000000000000\""
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 20 20\\n6 2\\n1 3\\n2 6\") == \"5.000000000000000\"\nassert solution(\"4 1 1\\n2 3\\n3 2\\n2 3\\n3 2\") == \"0.400000000000000\"\n"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 20 20\\n6 2\\n1 3\\n2 6\\n\") == \"5.000000000000000\"\nassert solution(\"4 1 1\\n2 3\\n3 2\\n2 3\\n3 2\\n\") == \"0.400000000000000\""
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 20 20\\n6 2\\n1 3\\n2 6\\n\") == 5.0\nassert solution(\"4 1 1\\n2 3\\n3 2\\n2 3\\n3 2\\n\") == 0.4\nassert solution(\"1 20 10\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n\") == 5.0\nassert solution(\"2000000 5 30\\n1000 20 100\\n500 25 150\\n10000 30 200\\n\") == 5.0\n"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '5.000000000000000', \"Your solution is incorrect\""
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 5.000000000000000"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Test case failed. Expected: {output()}, got: {solution(input())}\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == 4\nassert solution(\"8 2\") == 5\n"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"4\", \"The first example should return 4.\"\nassert solution(\"8 2\") == \"5\", \"The second example should return 5.\"\n"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3') == '4'\nassert solution('8 2') == '5'"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"4\\n\"\nassert solution(stdin) == \"5\\n\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n4 5 7\\n\") == \"Conan\"\nassert solution(\"2\\n1 1\\n\") == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n4 5 7\") == \"Conan\"\nassert solution(\"2\\n1 1\") == \"Agasa\"\nassert solution(\"3\\n5 6 2 3\") == \"Conan\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n4 5 7\") == \"Conan\\n\"\nassert solution(\"2\\n1 1\") == \"Agasa\\n\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"3\\n4 5 7\\n\") == \"Conan\\n\"\nassert solution(stdin=\"2\\n1 1\\n\") == \"Agasa\\n\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, \"Test failed for the given input and output.\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n4 5 7\") == \"Conan\"\nassert solution(\"2\\n1 1\") == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Conan\"\n\nassert solution(input()) == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\\n3\\n4 5 7\\n\\nOutput\\nConan\\n\\nInput\\n2\\n1 1\\n\\nOutput\\nAgasa\\n\") == \"Conan\\nAgasa\\n\"\nassert solution(\"Input\\n3\\n4 5 7\\n\\nOutput\\nConan\\n\\nInput\\n3\\n2 3\\n\\nOutput\\nAgasa\\n\") == \"Conan\\nAgasa\\n\"\nassert solution(\"Input\\n3\\n4 5 7\\n\\nOutput\\nConan\\n\\nInput\\n1 1\\n\\nOutput\\nAgasa\\n\") == \"Conan\\nAgasa\\n\"\nassert solution(\"Input\\n3\\n4 5 7\\n\\nOutput\\nConan\\n\\nInput\\n2 1\\n\\nOutput\\nAgasa\\n\") == \"Conan\\nAgasa\\n\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n4 5 7\") == \"Conan\"\nassert solution(\"2\\n1 1\") == \"Agasa\"\nassert solution(\"1\\n3 2\") == \"Agasa\"\nassert solution(\"1\\n2 1\") == \"Conan\"\nassert solution(\"2\\n5 3\") == \"Agasa\""
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input(\"A B\\n\")) == \"3 3\\n. \\n..#\\n#.#\""
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"2 3\\n\") == \"3 3\\n##. \\n..# \\n#.# \\n\""
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 3') == '3 3\\n3 3\\n##.\\n..#\\n#.#\\n'"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output\nprint(f\"Output: {solution(input())}\")"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 3\\n') == '3 3\\n..#\\n#.#\\n'\n\nassert solution('1 1\\n') == '1 1\\n#\\n#\\n'\n\nassert solution('10 5\\n') == '10 5\\n#\\n##\\n####\\n#####\\n#######\\n#########\\n'"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"3 3\\n##.\\n..#\\n#.#\\n\""
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n\") == \"\"\"3 3\n##.\n..#\n"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"\"\"3 3\n..#\n"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"3 3\\n3 3\\n###\""
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n\") == \"3 3\\n##.\\n..#\\n#.#\\n\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Input\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\nOutput\\n4\\n1 3 4 5 \\n\\nInput\\n3 2\\n+ 1\\n- 2\\n\\nOutput\\n1\\n3 \\n\\nInput\\n2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\nOutput\\n0') == 'Output\\n4\\n1 3 4 5 \\n\\nInput\\n3 2\\n+ 1\\n- 2\\n\\nOutput\\n1\\n3 \\n\\nInput\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\nOutput\\n0'"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"solution\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 5\\n+ 1\\n+ 2\\n+ 3\\n- 3\\n- 4\\n+ 4\\n\\n5 5\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n5 5\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n5 5\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n5 5\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n5 5\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n5 5\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n5 5\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n5 5\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n5 5\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n5 5\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n') == '4\\n1 3 4 5\\n\\n3\\n2 3\\n\\n1\\n0\\n\\n3\\n0\\n\\n3\\n1 3 4 5\\n\\n1\\n3 4 5\\n\\n3\\n0\\n\\n0\\n'\nassert solution('3 2\\n+ 1\\n- 2\\n\\n5 5\\n+ 1\\n+ 2\\n+ 3\\n- 3\\n- 4\\n+ 4\\n\\n5 5\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n5 5\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n5 5\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n5 5\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n5 5\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n5 5\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n5 5\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n5 5\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n5 5\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n5 5\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n5 5\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n5 5\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n5 5\\n+ 1"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed. Expected output: {expected_output}, Received output: {solution(stdin)}\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n') == '4\\n1 3 4 5 \\nInput\\n3 2\\n+ 1\\n- 2\\n\\n1\\n3\\nInput\\n2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n0\\nInput\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n3\\n2 3 5 \\nInput\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n0\\n'"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n') == '4\\n1 3 4 5\\n1 3\\n0\\n'\nassert solution('3 2\\n+ 1\\n- 2\\n\\n3 2\\n+ 1\\n- 2\\n\\n') == '1\\n3 1\\n'\nassert solution('2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n') == '0\\n3 2\\n'\nassert solution('5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n') == '3\\n2 3 5\\n2 3\\n'\n"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input {input()}, expected output {expected_output}\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\") == \"4\\n1 3 4 5 \\n1 3 4 5 \\n0\"\nassert solution(\"3 2\\n+ 1\\n- 2\\n\\n3 2\\n+ 1\\n- 2\\n\\n3 2\\n+ 1\\n- 2\\n\") == \"1\\n3 2 3 5 \\n3 2 3 5 \\n0\"\nassert solution(\"2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n+ 2\\n- 1\\n\\n2 4\\n+ 1\\n- 1\\n+ 2\\n- 1\\n\") == \"0\\n\"\nassert solution(\"5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\") == \"3\\n2 3 5  \\n2 3 5  \\n0\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\") == \"4\\n1 3 4 5 \"\nassert solution(\"3 2\\n+ 1\\n- 2\\n\") == \"1\\n3 \"\nassert solution(\"2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\") == \"0 \"\nassert solution(\"5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\") == \"3\\n2 3 5 \"\nassert solution(\"2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\") == \"0 \""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    5 4\n+ 1\n+ 2\n- 2\n- 1\n    3 2\n+ 1\n- 2\n    2 4\n+ 1\n- 1\n+ 2\n- 2\n''') == '''\n4\n1 3 4 5 \n'''\n\nassert solution('''\n    3 2\n+ 1\n- 2\n    2 4\n+ 1\n- 1\n+ 2\n- 2\n''') == '''\n1\n3 \n'''\n\nassert solution('''\n    5 6\n+ 1\n- 1\n- 3\n+ 3\n+ 4\n- 4\n    2 4\n+ 1\n- 2\n+ 2\n- 1\n''') == '''\n3\n2 3 5 \n'''\n\nassert solution('''\n    2 4\n+ 1\n- 2\n+ 2\n- 1\n''') == '''\n0\n'''"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 2 3\\n1 2 3\\n9\\n\") == \"4\"\nassert solution(\"5 1\\n5 4 2 4 5\\n2\\n5\\n\") == \"1\"\nassert solution(\"5 3\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n\") == \"0\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"4\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"1\\n\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1 2 3\\n1 2 3\\n9\\n\") == \"4\"\nassert solution(\"5 1\\n5 4 2 4 5\\n2\\n5\\n\") == \"1\"\n"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 1\\n5 4 2 4 5\\n2\\n5\\n\") == \"1\"\nassert solution(\"3 3\\n1 2 3\\n1 2 3\\n9\\n\") == \"4\"\nassert solution(\"5 1\\n5 4 2 4 5\\n2\\n5\\n\") == \"1\"\nassert solution(\"3 3\\n1 2 3\\n1 2 3\\n9\\n\") == \"4\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n1 2 3\\n1 2 3\\n9\\n\") == \"4\\n\"\nassert solution(\"5 1\\n5 4 2 4 5\\n2\\n5\\n\") == \"1\\n\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Output\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3\\n1 2 3\\n1 2 3\\n9\\n') == '4\\n'\nassert solution('5 1\\n5 4 2 4 5\\n2\\n5\\n') == '1\\n'\nassert solution('3 3\\n1 2 3\\n1 2 3\\n4\\n') == '0\\n'\nassert solution('5 1\\n5 4 2 4 5\\n1\\n') == '1\\n'\nassert solution('3 3\\n1 2 3\\n1 2 3\\n2\\n') == '1\\n'\nassert solution('5 1\\n5 4 2 4 5\\n3\\n') == '0\\n'\nassert solution('3 3\\n1 2 3\\n1 2 3\\n4\\n') == '0\\n'\nassert solution('5 1\\n5 4 2 4 5\\n1\\n') == '0\\n'\nassert solution('3 3\\n1 2 3\\n1 2 3\\n2\\n') == '0\\n'"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"4\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test Failed\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\ncba\") == \"NO\"\nassert solution(\"3 4\\ncba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\ncba\") == \"NO\"\nassert solution(\"3 4\\ncba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\ncba\") == \"NO\"\nassert solution(\"3 4\\ncba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\ncab\\n\") == \"NO\"\nassert solution(\"3 4\\ncab\\n\") == \"cbd\"\nassert solution(\"4 4\\nabcd\\n\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\ncba\") == \"NO\"\nassert solution(\"3 4\\ncba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\"\n"
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"NO\", \"Test failed.\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output() for input, output in [\n    (\"3 3\\ncba\", \"NO\"),\n    (\"3 4\\ncba\", \"cbd\"),\n    (\"4 4\\nabcd\", \"abda\"),\n]"
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\nbca\\n\") == \"NO\"\nassert solution(\"3 4\\nbca\\n\") == \"cbd\"\nassert solution(\"4 4\\nabcd\\n\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\ncba\\n\") == \"NO\"\nassert solution(\"3 4\\ncba\\n\") == \"cbd\"\nassert solution(\"4 4\\nabcd\\n\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"The solution is incorrect. Please provide the correct output.\"\n"
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n0101\\n\") == \"quailty\"\nassert solution(\"6 1\\n010101\\n\") == \"once again\"\nassert solution(\"6 5\\n010101\\n\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\\n\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Duel!\") == \"quailty\"\nassert solution(\"Betting on the lovely princess Claris, the duel between Tokitsukaze and Quailty has started.\\n\\nThere are 4 cards in a row. Each card has two sides, one of which has color.\\nAt first, some of these cards are with color sides facing up and others are with color sides facing down. Then they take turns flipping cards, in which Tokitsukaze moves first. In each move, one should choose exactly 2 consecutive cards and flip them to the same side, which means to make their color sides all face up or all face down. If all the color sides of these 4 cards face the same direction after one's move, the one who takes this move will win.\\n\\nPrincess Claris wants to know who will win the game if Tokitsukaze and Quailty are so clever that they won't make mistakes.\\n\\n-----Input-----\\n\\nThe first line contains two integers n and k ($1 \\le k \\le n \\le 10^5$).\\n\\nThe second line contains a single string of length n that only consists of 0 and 1, representing the situation of these n cards, where the color side of the i-th card faces up if the i-th character is 1, or otherwise, it faces down and the i-th character is 0.\\n\\n-----Output-----\\n\\nPrint \\\"once again\\\" (without quotes) if the total number of their moves can exceed 10^9, which is considered a draw.\\n\\nIn other cases, print \\\"tokitsukaze\\\" (without quotes) if Tokitsukaze will win, or \\\"quailty\\\" (without quotes) if Quailty will win.\\n\\nNote that the output characters are case-sensitive, and any wrong spelling would be rejected.\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Duel!\") == \"quailty\"\nassert solution(\"Betting on the lovely princess Claris, the duel between Tokitsukaze and Quailty has started.\") == \"tokitsukaze\"\nassert solution(\"1 1\") == \"once again\"\nassert solution(\"010101\") == \"once again\"\nassert solution(\"1 5\") == \"tokitsukaze\"\nassert solution(\"0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n0101\\n\") == \"quailty\"\nassert solution(\"6 1\\n010101\\n\") == \"once again\"\nassert solution(\"6 5\\n010101\\n\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\\n\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(solution(\"Duel!\") == \"quailty\")\nassert solution(solution(\"Betting on the lovely princess Claris, the duel between Tokitsukaze and Quailty has started.\") == \"quailty\")\nassert solution(solution(\"There are 4 cards in a row. Each card has two sides, one of which has color. At first, some of these cards are with color sides facing up and others are with color sides facing down. Then they take turns flipping cards, in which Tokitsukaze moves first. In each move, one should choose exactly 5 consecutive cards and flip them to the same side, which means to make their color sides all face up or all face down. If all the color sides of these 4 cards face the same direction after one's move, the one who takes this move will win.\") == \"tokitsukaze\")\nassert solution(solution(\"Princess Claris wants to know who will win the game if Tokitsukaze and Quailty are so clever that they won't make mistakes.\") == \"once again\")"
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input(\"Enter the number of cards: \")) == \"quailty\"\nassert solution(input(\"Enter the number of cards: \")) == \"once again\"\nassert solution(input(\"Enter the number of cards: \")) == \"tokitsukaze\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\\n\"\nassert solution(\"6 1\\n010101\") == \"once again\\n\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\\n\"\nassert solution(\"4 1\\n0011\") == \"once again\\n\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nprint(solution)"
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Output\"\nprint(\"Output\")\n"
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\"\nassert solution(\"1 2 10\\n11\") == \"7\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\"\nassert solution(\"1 2 10\\n11\") == \"7\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\"\nassert solution(\"1 2 10\\n11\") == \"7\"\nassert solution(\"2 4 60\\n20 200\") == \"100\"\nassert solution(\"3 4 50\\n20 100\\n60 10 40 80\") == \"50\"\n"
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\"\n\nassert solution(\"1 2 10\\n11\") == \"7\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"50\"\n\nassert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\"\n\nassert solution(\"1 2 10\\n11\") == \"7\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\"\n\nassert solution(\"1 2 10\\n11\") == \"7\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 4 50\\n20 100\\n60 10 40 80') == '50'\nassert solution('1 2 10\\n11') == '7'"
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\\n\"\nassert solution(\"1 2 10\\n11\") == \"7\\n\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n1 1\\n\") == \"1 6\"\nassert solution(\"3 2\\n0 0\\n\") == \"1 3\"\nassert solution(\"1 10\\n5 3\\n\") == \"5 5\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n1 1\\n\") == \"1 6\"\nassert solution(\"3 2\\n0 0\\n\") == \"1 3\"\nassert solution(\"1 10\\n5 3\\n\") == \"5 5\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\nfor s in ['1', '4', '2', '3', '5', '6']:\n    l = int(stdin.readline().strip())\n    x = 1\n    y = 6\n    for i in range(2, l + 1):\n        x += 1\n        y = min(y, l - i)\n    print(x, y)"
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3\\n1 1\\n') == '1 6\\n'\nassert solution('3 2\\n0 0\\n') == '1 3\\n'\nassert solution('1 10\\n5 3\\n') == '5 5\\n'"
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n1 1\\n\") == \"1 6\"\nassert solution(\"3 2\\n0 0\\n\") == \"1 3\"\nassert solution(\"1 10\\n5 3\\n\") == \"5 5\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3\\n1 1\\n') == '1 6\\n'\nassert solution('3 2\\n0 0\\n') == '1 3\\n'\nassert solution('1 10\\n5 3\\n') == '5 5\\n'\nassert solution('2 3\\n1 1\\n2 2\\n3 1\\n3 3\\n4 2\\n5 3\\n6 3\\n') == '1 6\\n'\nassert solution('3 2\\n0 0\\n2 2\\n2 1\\n2 3\\n3 1\\n3 3\\n3 2\\n3 4\\n4 2\\n4 4\\n5 3\\n') == '1 3\\n'"
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3\\n1 1') == '1 6\\n'\nassert solution('3 2\\n0 0') == '1 3\\n'\nassert solution('1 10\\n5 3') == '5 5\\n'"
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n1 1\") == \"1 6\\n\"\nassert solution(\"3 2\\n0 0\") == \"1 3\\n\"\nassert solution(\"1 10\\n5 3\") == \"5 5\\n\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n1 1\\n\") == \"1 6\\n\"\nassert solution(\"3 2\\n0 0\\n\") == \"1 3\\n\"\nassert solution(\"1 10\\n5 3\\n\") == \"5 5\\n\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == expected_output\n"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n-2 5 -1\n\"\"\") == \"\"\"\n2\n2 3\n3 3\n\"\"\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n-2 5 -1\") == \"2\\n2 3\\n3 3\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3\n-2 5 -1\n\"\"\") == \"\"\"2\n2 3\n3 3\"\"\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n-2 5 -1\") == \"2\\n2 3\\n3 3\"\n"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"-2 5 -1\") == \"2\\n2 3\\n3 3\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n-2 5 -1\") == \"2\\n2 3\\n3 3\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n-2 5 -1\") == \"2\\n2 3\\n3 3\\n\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n-2 5 -1\") == \"2\\n2 3\\n3 3\"\n"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n-2 5 -1\") == \"2\\n2 3\\n3 3\"\nassert solution(\"4\\n-1 0 1 1\") == \"1\\n1 2\\n2 3\\n3 4\"\nassert solution(\"2\\n-1 -2\") == \"1\\n0 1\"\nassert solution(\"5\\n-10 10\") == \"2\\n-9 -8\"\nassert solution(\"6\\n-10 10\") == \"1\\n-5 -4\"\n"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"\"\"\n2\n2 3\n3 3\n\"\"\"\n"
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n0 3\\n1 5\\n\") == \"3\"\nassert solution(\"1\\n0 4\\n\") == \"1\"\nassert solution(\"2\\n1 10\\n2 2\\n\") == \"3\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n0 3\\n1 5\\n\") == \"3\\n\"\nassert solution(\"1\\n0 4\\n\") == \"1\\n\"\nassert solution(\"2\\n1 10\\n2 2\\n\") == \"3\\n\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n0 3\\n1 5\") == \"3\\n\"\nassert solution(\"1\\n0 4\\n\") == \"1\\n\"\nassert solution(\"2\\n1 10\\n2 2\\n\") == \"3\\n\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n0 3\\n1 5\\n') == '3\\n'\nassert solution('1\\n0 4\\n') == '1\\n'\nassert solution('2\\n1 10\\n2 2\\n') == '3\\n'"
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n0 3\\n1 5\\n\") == \"3\\n\"\nassert solution(\"1\\n0 4\\n\") == \"1\\n\"\nassert solution(\"2\\n1 10\\n2 2\\n\") == \"3\\n\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n0 3\\n1 5\") == \"3\\n\"\nassert solution(\"1\\n0 4\\n\") == \"1\\n\"\nassert solution(\"2\\n1 10\\n2 2\\n\") == \"3\\n\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n0 3\\n1 5\\n\") == \"3\\n\"\nassert solution(\"1\\n0 4\\n\") == \"1\\n\"\nassert solution(\"2\\n1 10\\n2 2\\n\") == \"3\\n\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n0 3\\n1 5\\n\") == \"3\\n\"\nassert solution(\"1\\n0 4\\n\") == \"1\\n\"\nassert solution(\"2\\n1 10\\n2 2\\n\") == \"3\\n\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, but got {solution(stdin)}\"\n"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 50\\n25 25 50\") == \"3\\n0 25 50\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 18\\n5 6 1 10 12 2\") == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\\n\"\nassert solution(\"3 50\\n25 25 50\") == \"3\\n0 25 50\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, Received: {solution(stdin)}\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6 1 10 12 2\\n6 1 10 12 2\\n6 1 10 12 2\\n6 1 10 12 2\\n6 1 10 12 2\\n\") == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\\n\"\nassert solution(\"3 50\\n25 25 50\\n\") == \"3\\n0 25 50\\n\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(solution) == \"0\\n3\"\n"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6 18\\n5 6 1 10 12 2\\n') == '16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18'\nassert solution('3 50\\n25 25 50\\n') == '3\\n0 25 50'\n"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\"16\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18 \n3\n0 25 50\"\"\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 18\\n5 6 1 10 12 2\\n\") == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\\n\"\nassert solution(\"3 50\\n25 25 50\\n\") == \"3\\n0 25 50\\n\""
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(6) == 3\nassert solution(2) == 2"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6') == '3'\nassert solution('2') == '2'"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2) == 2\nassert solution(3) == 3\nassert solution(6) == 3\nassert solution(10) == 5\nassert solution(100) == 15\n"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(6) == 3, \"The expected output is 3, but got: \" + solution(6)\nassert solution(2) == 2, \"The expected output is 2, but got: \" + solution(2)"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n\") == \"3\\n\"\nassert solution(\"2\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(6) == \"3\"\nassert solution(2) == \"2\""
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(6) == 3\nassert solution(2) == 2"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"2\") == \"2\""
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(6) == 3\nassert solution(2) == 2"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"2\") == \"2\""
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input {input()}, expected output {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 1\\n20 2\\n30 3\\n\") == \"180\\n\"\nassert solution(\"3\\n1\\n2\\n\") == \"21\\n\"\nassert solution(\"1\\n5 10\\n\") == \"50\\n\""
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n10 1\\n20 2\\n30 3\\n\") == \"180\"\nassert solution(\"3\\n3 1\\n2 2\\n4 3\\n\") == \"21\"\nassert solution(\"1\\n5 10\\n\") == \"50\""
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n10 1\\n20 2\\n30 3\") == \"180\\n\"\nassert solution(\"3\\n3 1\\n2 2\\n4 3\") == \"21\\n\"\nassert solution(\"1\\n5 10\") == \"50\\n\""
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n10 1\\n20 2\\n30 3\") == 180\nassert solution(\"3\\n3 1\\n2 2\\n4 3\") == 21\nassert solution(\"1\\n5 10\") == 50"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\n20\\n30\\n\") == 180\nassert solution(\"3\\n1\\n2\\n4\\n\") == 21\nassert solution(\"1\\n5\\n10\\n\") == 50"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n10 1\\n20 2\\n30 3\\n\") == \"180\\n\"\nassert solution(\"3\\n3 1\\n2 2\\n4 3\\n\") == \"21\\n\"\nassert solution(\"1\\n5 10\\n\") == \"50\\n\""
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n10 1\\n20 2\\n30 3') == '180\\n'\nassert solution('3\\n3 1\\n2 2\\n4 3') == '21\\n'\nassert solution('1\\n5 10') == '50\\n'\n"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n10 1\\n20 2\\n30 3\") == \"180\"\nassert solution(\"3\\n3 1\\n2 2\\n4 3\") == \"21\"\nassert solution(\"1\\n5 10\") == \"50\""
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 180, \"The given code is incorrect\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n0 0 10\\n') == '2'\nassert solution('5\\n0 1 2 3 4\\n') == '1'\nassert solution('4\\n0 0 0 0\\n') == '4'\nassert solution('9\\n0 1 0 2 0 1 1 2 10\\n') == '3'"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(0) == 1 # The answer is 1\nassert solution(1) == 2 # The answer is 2\nassert solution(2) == 2 # The answer is 2\nassert solution(3) == 2 # The answer is 2\nassert solution(4) == 1 # The answer is 1\nassert solution(5) == 3 # The answer is 3\nassert solution(6) == 3 # The answer is 3\nassert solution(7) == 3 # The answer is 3\nassert solution(8) == 2 # The answer is 2\nassert solution(9) == 4 # The answer is 4"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Solution does not match. Expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('0 0 10') == '2'\nassert solution('5 0 2 3 4') == '1'\nassert solution('4 0 0 0') == '4'\nassert solution('9 0 1 0 2 0 1 1 2 10') == '3'"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='3\\n0 0 10\\n') == '2\\n'\nassert solution(stdin='5\\n0 1 2 3 4\\n') == '1\\n'\nassert solution(stdin='4\\n0 0 0 0\\n') == '4\\n'\nassert solution(stdin='9\\n0 1 0 2 0 1 1 2 10\\n') == '3\\n'\n"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n0 0 10\\n\\n5\\n0 1 2 3 4\\n\\n4\\n0 0 0 0\\n\\n9\\n0 1 0 2 0 1 1 2 10\\n') == '2\\n\\n1\\n\\n4\\n'\nassert solution('5\\n0 1 2 3 4\\n\\n4\\n0 0 0 0\\n\\n9\\n0 1 0 2 0 1 1 2 10\\n') == '1\\n\\n4\\n'\nassert solution('4\\n0 0 0 0\\n\\n9\\n0 1 0 2 0 1 1 2 10\\n') == '4\\n\\n3\\n'\nassert solution('9\\n0 1 0 2 0 1 1 2 10\\n') == '3\\n\\n3\\n'"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\", \"Incorrect output\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected: {expected_output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n3\n0 0 10\n''') == '2'\nassert solution('''\n5\n0 1 2 3 4\n''') == '1'\nassert solution('''\n4\n0 0 0 0\n''') == '4'\nassert solution('''\n9\n0 1 0 2 0 1 1 2 10\n''') == '3'"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n0 0 10\\n\\n5\\n0 1 2 3 4\\n\\n4\\n0 0 0 0\\n\\n9\\n0 1 0 2 0 1 1 2 10\") == \"2\\n\"\nassert solution(\"5\\n0 1 2 3 4\\n\\n4\\n0 0 0 0\\n\\n9\\n0 1 0 2 0 1 1 2 10\") == \"1\\n\"\nassert solution(\"4\\n0 0 0 0\\n\\n9\\n0 1 0 2 0 1 1 2 10\") == \"4\\n\"\nassert solution(\"9\\n0 1 0 2 0 1 1 2 10\") == \"3\\n\""
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"5\""
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"5\\n\"\n"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"5\\n\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"5\\n\""
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"5\"\n"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n0 0\\n0 1\\n1 0\\n1 1') == '5\\n'\nassert solution('5\\n0 0\\n0 1\\n1 0\\n1 1') == '5\\n'\nassert solution('2\\n0 0\\n0 1\\n1 0\\n1 1\\n0 0\\n0 1\\n1 0\\n1 1') == '23\\n'\nassert solution('1\\n0\\n1\\n1\\n0\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n') == '20\\n'\nassert solution('4\\n0 0\\n0 1\\n1 0\\n1 1\\n') == '5\\n'\nassert solution('5\\n0 0\\n0 1\\n1 0\\n1 1\\n') == '5\\n'"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '5\\n', \"Your solution should return '5'\\n\""
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"5\\n\""
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n0 0\\n0 1\\n1 0\\n1 1\\n') == '5\\n'\nassert solution('3\\n1 1\\n2 0\\n1 2\\n') == '11\\n'\nassert solution('2\\n-1 -1\\n1 1\\n') == '4\\n'\nassert solution('3\\n-1 -1\\n2 0\\n-1 2\\n') == '15\\n'\n"
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\\n\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"4\\n\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"4\\n\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"4\"\nassert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"4\"\nassert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"4\"\nassert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"4\"\nassert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"4\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n3\nB 1\nW 2\nB 3\nW 1\nW 3\nB 2\n\"\"\") == \"4\"\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\"\nprint(\"All assertions passed\")"
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"0\", \"Empty Input\"\nassert solution(\"5\") == \"0\", \"Invalid Input\"\n\nn = int(stdin.readline())\nballs = list(map(int, stdin.readline().split()))\n\nfor i in range(n):\n    if balls[i] == balls[i + 1]:\n        print(\"0\")\n        return\n\noperations = 0\n\nfor i in range(n - 1):\n    for j in range(i + 1, n):\n        if balls[i]!= balls[j]:\n            operations += 1\n            a1, c1 = balls[i], balls[i + 1]\n            balls[i], balls[i + 1] = balls[j], balls[i]\n            a2, c2 = balls[i], balls[i + 1]\n            balls[i], balls[i + 1] = balls[j], balls[i]\n            balls[i], balls[i + 1] = balls[j], balls[i]\n            balls[i], balls[i + 1] = balls[j], balls[i]\n            balls[i], balls[i + 1] = balls[j], balls[i]\n            balls[i], balls[i + 1] = balls[j], balls[i]\n\nprint(operations)"
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"4\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\\n\"\nassert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\\n\"\nassert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\\n\"\nassert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\\n\"\nassert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\\n\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\\n\", \"Test 1 Failed\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\", \"Test 2 Failed\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\"\nassert solution(\"5\\n6\\n4\\n\") == \"4\"\n"
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n10\\n\") == \"4\\n\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5) == 4\nassert solution(5) == 4\nassert solution(5) == 4"
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output() for input, output in zip(stdin, stdout)\n"
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"The output is incorrect. Expected {output}, but got {solution(input())}.\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r').read()) == '4\\n'\nassert solution(open('input2.txt', 'r').read()) == '4\\n'"
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n4 2\") == \"2\\n\"\nassert solution(\"8\\n1 2 4 8 16 32 64 576\") == \"32\\n\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 2\nassert solution() == 32"
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"Output\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\") == 2\nassert solution(\"8\") == 32"
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\"\n\nassert solution(stdin) == \"32\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"8\") == \"32\"\nassert solution(\"4\") == \"2\"\nassert solution(\"2 3\") == \"2\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"32\"\nassert solution(input()) == \"2\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n4 2\\n\") == \"2\\n\"\nassert solution(\"8\\n1 2 4 8 16 32 64 576\\n\") == \"32\\n\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n4 2\") == \"2\"\nassert solution(\"8\\n1 2 4 8 16 32 64 576\") == \"32\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"4\\n2\") == \"2\"\nassert solution(\"8\\n1\\n2\\n4\\n8\\n16\\n32\\n64\\n576\") == \"32\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Got '{solution(input())}' instead of '{expected_output}'\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Input:\\n{stdin}\\nExpected:\\n{expected}\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"400 4\\n100 300 450 500\\n\") == \"2\"\nassert solution(\"50 2\\n100 25\\n\") == \"3\"\nassert solution(\"1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\\n11 1\\n12 1\\n13 1\\n14 1\\n15 1\\n16 1\\n17 1\\n18 1\\n19 1\\n20 1\\n21 1\\n22 1\\n23 1\\n24 1\\n25 1\\n26 1\\n27 1\\n28 1\\n29 1\\n30 1\\n31 1\\n32 1\\n33 1\\n34 1\\n35 1\\n36 1\\n37 1\\n38 1\\n39 1\\n40 1\\n41 1\\n42 1\\n43 1\\n44 1\\n45 1\\n46 1\\n47 1\\n48 1\\n49 1\\n50 1\\n51 1\\n52 1\\n53 1\\n54 1\\n55 1\\n56 1\\n57 1\\n58 1\\n59 1\\n60 1\\n61 1\\n62 1\\n63 1\\n64 1\\n65 1\\n66 1\\n67 1\\n68 1\\n69 1\\n70 1\\n71 1\\n72 1\\n73 1\\n74 1\\n75 1\\n76 1\\n77 1\\n78 1\\n79 1\\n80 1\\n81 1\\n82 1\\n83 1\\n84 1\\n85 1\\n86 1\\n87 1\\n88 1\\n89 1\\n90 1\\n91 1\\n92 1\\n93 1\\n94 1\\n95 1\\n96 1\\n97 1\\n98 1\\n99 1\\n100 1\\n\") == \"-1\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Output\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"400 4\\n100 300 450 500\") == \"2\"\nassert solution(\"50 2\\n100 25\") == \"3\"\nassert solution(\"\") == \"-1\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"400 4\\n100 300 450 500\\n\") == \"2\"\nassert solution(\"50 2\\n100 25\\n\") == \"3\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"400 4\\n100 300 450 500\") == \"2\"\nassert solution(\"50 2\\n100 25\") == \"3\"\nassert solution(\"\") == \"-1\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\nprint(\"pass\")"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"400 4\\n100 300 450 500\") == \"2\"\nassert solution(\"50 2\\n100 25\") == \"3\"\nassert solution(\"600 4\\n1000 3000 4500 5000\") == \"-1\"\nassert solution(\"1000 2\\n1000 10000\") == \"-1\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"400 4\\n100 300 450 500\") == \"2\"\nassert solution(\"50 2\\n100 25\") == \"3\"\nassert solution(\"400 4\\n100 300 450 500\") == \"-1\"\nassert solution(\"50 2\\n100 25\") == \"-1\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n\") == \"6\\n\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 2') == '6\\n'"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == \"6\\n\"\n"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 2') == '6'\nassert solution('1 1') == '2'\nassert solution('2 2') == '4'\nassert solution('3 3') == '6'\nassert solution('4 3') == '12'\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"6\\n\", \"Test Failed\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\") == \"6\"\n\nfrom itertools import permutations"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\") == \"6\\n\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 6\nprint(\"All tests passed!\")"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '6'"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"6\\n\", \"Test case 1 failed.\""
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"499122178\\n499122178\\n499122178\"\nassert solution(\"4\") == \"147123905\\n147123905\\n147123905\"\nassert solution(\"5\") == \"131619262\\n131619262\\n131619262\"\nassert solution(\"6\") == \"126564087\\n126564087\\n126564087\"\nassert solution(\"7\") == \"122544811\\n122544811\\n122544811\"\nassert solution(\"8\") == \"119896837\\n119896837\\n119896837\""
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"499122178\\n499122178\\n499122178\"\nassert solution(\"5\") == \"499122178\\n499122178\\n499122178\\n499122178\\n499122178\"\nassert solution(\"10\") == \"499122178\\n499122178\\n499122178\\n499122178\\n499122178\\n499122178\\n499122178\\n499122178\\n499122178\"\nassert solution(\"20\") == \"499122178\\n499122178\\n499122178\\n499122178\\n499122178\\n499122178\\n499122178\\n499122178\\n499122178\\n499122178\\n499122178\"\nassert solution(\"50\") == \"499122178\\n499122178\\n499122178\\n499122178\\n499122178\\n499122178\\n499122178\\n499122178\\n499122178\\n499122178\\n499122178\\n499122178\""
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"499122178\\n499122178\\n499122178\""
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"499122178\""
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == '499122178\\n499122178\\n499122178'\n"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"499122178\\n499122178\\n499122178\\n\", \"Test 1 failed\"\nassert solution(\"6\") == \"499122178\\n499122178\\n499122178\\n499122178\\n499122178\\n499122178\\n499122178\\n\", \"Test 2 failed\"\nassert solution(\"9\") == \"499122178\\n499122178\\n499122178\\n499122178\\n499122178\\n499122178\\n499122178\\n499122178\\n\", \"Test 3 failed\"\nassert solution(\"10\") == \"499122178\\n499122178\\n499122178\\n499122178\\n499122178\\n499122178\\n499122178\\n499122178\\n499122178\\n\", \"Test 4 failed\""
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\") == 0\nassert solution(\"1\") == 0\nassert solution(\"2\") == 0\nassert solution(\"3\") == 0\nassert solution(\"4\") == 0\nassert solution(\"5\") == 0\nassert solution(\"6\") == 0\nassert solution(\"7\") == 0\nassert solution(\"8\") == 0\nassert solution(\"9\") == 0\nassert solution(\"10\") == 0\nassert solution(\"11\") == 0\nassert solution(\"12\") == 0\nassert solution(\"13\") == 0\nassert solution(\"14\") == 0\nassert solution(\"15\") == 0\nassert solution(\"16\") == 0\nassert solution(\"17\") == 0\nassert solution(\"18\") == 0\nassert solution(\"19\") == 0\nassert solution(\"20\") == 0\nassert solution(\"21\") == 0\nassert solution(\"22\") == 0\nassert solution(\"23\") == 0\nassert solution(\"24\") == 0\nassert solution(\"25\") == 0\nassert solution(\"26\") == 0\nassert solution(\"27\") == 0\nassert solution(\"28\") == 0\nassert solution(\"29\") == 0\nassert solution(\"30\") == 0\nassert solution(\"31\") == 0\nassert solution(\"32\") == 0\nassert solution(\"33\") == 0\nassert solution(\"34\") == 0\nassert solution(\"35\") == 0\nassert solution(\"36\") == 0\nassert solution(\"37\") == 0\nassert solution(\"38\") == 0\nassert solution(\"39\") == 0\nassert solution(\"40\") == 0\nassert solution(\"41\") == 0\nassert solution(\"42\") == 0\nassert solution(\"43\") == 0\nassert solution(\"44\") == 0\nassert solution(\"45\") == 0\nassert solution(\"46\") == 0\nassert solution(\"47\") == 0\nassert solution(\"48\") == 0\nassert solution(\"49\") == 0\nassert solution(\"50\") == 0\nassert solution(\"51\") == 0\nassert solution(\"52\") == 0\nassert solution(\"53\") == 0\nassert solution(\"54\") == 0\nassert solution(\"55\") == 0\nassert solution(\"56\") == 0\nassert solution(\"57\") == 0\nassert solution(\"58\") == 0\nassert solution(\"59\") == 0\nassert solution(\"60\") == 0\nassert solution(\"61\") == 0\nassert solution(\"62\") == 0\nassert solution(\"63\") == 0\nassert solution(\"64\") == 0\nassert solution(\"65\") == 0\nassert solution(\"66\") == 0\nassert solution(\"67\") == 0\nassert solution(\"68\") == 0\nassert solution(\"69\") == 0\nassert solution(\"70\") == 0\nassert solution(\"71\") == 0\nassert solution(\"72\") == 0\nassert solution(\"73\") == 0\nassert solution(\"74\") == 0\nassert solution(\"75\") == 0\nassert solution(\"76\") == 0\nassert solution(\"77\") == 0\nassert solution(\"78\") == 0\nassert solution(\"79\") == 0\nassert solution(\"80\") == 0\nassert solution(\"81\") == 0\nassert solution(\"82\") == 0\nassert solution(\"83\") == 0\nassert solution(\"84\") == 0\nassert solution(\"85\") == 0\nassert solution(\"86\") == 0\nassert solution(\"87\") == 0\nassert solution(\"88\") == 0\nassert solution(\"89\") == 0\nassert solution(\"90\") == 0\nassert solution(\"91\") == 0\nassert solution(\"92\") == 0\nassert solution(\"93\") == 0\nassert solution(\"94\") == 0\nassert solution(\"95\") == 0\nassert solution(\"96\") == 0\nassert solution(\"97\") == 0\nassert solution(\"98\") == 0\nassert solution(\"99\") == 0\nassert solution(\"100\") == 0\nassert solution(\"101\") == 0\nassert solution(\"102\") == 0\nassert solution(\"10"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"499122178\""
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '499122178\\n499122178\\n499122178\\n'\n"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == \"499122178\\n499122178\\n499122178\\n\""
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2) == \"6\"\nassert solution(3) == \"6669\"\nassert solution(10) == \"-1\""
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2') == '6', \"The answer should be 6\"\nassert solution('3') == '6669', \"The answer should be 6669\"\nassert solution('10') == '-1', \"The answer should be -1\"\n"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2) == 6\nassert solution(3) == 6669\nassert solution(10) == -1\n"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2) == 6\nassert solution(3) == 6669\nassert solution(10) == -1"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n\") == \"6\"\nassert solution(\"3\\n\") == \"6669\"\nassert solution(\"10\\n\") == \"-1\""
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == 6, \"Expected: 6, Actual: \" + str(solution(2))\nassert solution(3) == 6669, \"Expected: 6669, Actual: \" + str(solution(3))\nassert solution(10) == -1, \"Expected: -1, Actual: \" + str(solution(10))"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '6669'\nassert solution('10') == '-1'\n\nfrom typing import List"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == \"6\"\nassert solution(2) == \"6\"\nassert solution(3) == \"6669\"\nassert solution(4) == \"6669\"\nassert solution(5) == \"6669\"\nassert solution(6) == \"-1\"\nassert solution(7) == \"6669\"\nassert solution(8) == \"6669\"\nassert solution(9) == \"6669\"\nassert solution(10) == \"-1\"\nassert solution(11) == \"-1\"\nassert solution(12) == \"-1\"\nassert solution(13) == \"-1\"\nassert solution(14) == \"-1\"\nassert solution(15) == \"-1\"\nassert solution(16) == \"-1\"\nassert solution(17) == \"-1\"\nassert solution(18) == \"-1\"\nassert solution(19) == \"-1\"\nassert solution(20) == \"-1\"\nassert solution(21) == \"-1\"\nassert solution(22) == \"-1\"\nassert solution(23) == \"-1\"\nassert solution(24) == \"-1\"\nassert solution(25) == \"-1\"\nassert solution(26) == \"-1\"\nassert solution(27) == \"-1\"\nassert solution(28) == \"-1\"\nassert solution(29) == \"-1\"\nassert solution(30) == \"-1\"\nassert solution(31) == \"-1\"\nassert solution(32) == \"-1\"\nassert solution(33) == \"-1\"\nassert solution(34) == \"-1\"\nassert solution(35) == \"-1\"\nassert solution(36) == \"-1\"\nassert solution(37) == \"-1\"\nassert solution(38) == \"-1\"\nassert solution(39) == \"-1\"\nassert solution(40) == \"-1\"\nassert solution(41) == \"-1\"\nassert solution(42) == \"-1\"\nassert solution(43) == \"-1\"\nassert solution(44) == \"-1\"\nassert solution(45) == \"-1\"\nassert solution(46) == \"-1\"\nassert solution(47) == \"-1\"\nassert solution(48) == \"-1\"\nassert solution(49) == \"-1\"\nassert solution(50) == \"-1\"\nassert solution(51) == \"-1\"\nassert solution(52) == \"-1\"\nassert solution(53) == \"-1\"\nassert solution(54) == \"-1\"\nassert solution(55) == \"-1\"\nassert solution(56) == \"-1\"\nassert solution(57) == \"-1\"\nassert solution(58) == \"-1\"\nassert solution(59) == \"-1\"\nassert solution(60) == \"-1\"\nassert solution(61) == \"-1\"\nassert solution(62) == \"-1\"\nassert solution(63) == \"-1\"\nassert solution(64) == \"-1\"\nassert solution(65) == \"-1\"\nassert solution(66) == \"-1\"\nassert solution(67) == \"-1\"\nassert solution(68) == \"-1\"\nassert solution(69) == \"-1\"\nassert solution(70) == \"-1\"\nassert solution(71) == \"-1\"\nassert solution(72) == \"-1\"\nassert solution(73) == \"-1\"\nassert solution(74) == \"-1\"\nassert solution(75) == \"-1\"\nassert solution(76) == \"-1\"\nassert solution(77) == \"-1\"\nassert solution(78) == \"-1\"\nassert solution(79) == \"-1\"\nassert solution(80) == \"-1\"\nassert solution(81) == \"-1\"\nassert solution(82) == \"-1\"\nassert solution(83) == \"-1\"\nassert solution(84) == \"-1\"\nassert solution(85) == \"-1\"\nassert solution(86) == \"-1\"\nassert solution(87) == \"-1\"\nassert solution(88) == \"-1\"\nassert solution(89) == \"-1\"\nassert solution(90) == \"-1\"\nassert solution(91) == \"-1\"\nassert solution(92) == \"-1\"\nassert solution(93"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"6\"\nassert solution(\"3\") == \"6669\"\nassert solution(\"10\") == \"-1\""
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\") == 6\nassert solution(\"3\") == 6669\nassert solution(\"10\") == -1"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\"\n\nassert solution(2) == \"-1\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\\n\"\nassert solution(2) == \"-1\\n\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5) == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\"\nassert solution(2) == \"-1\"\n\nfrom itertools import permutations"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"\"\"1 4 3 2 0\n1 0 2 4 3\n2 4 0 1 3\n-1\"\"\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Sample {input()} is incorrect. Please check the output.\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == expected_output, \"Expected: {}, Received: {}\".format(expected_output, solution(stdin=input()))"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\"1 4 3 2 0\n1 0 2 4 3\n2 4 0 1 3\"\"\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n\") == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\\n\"\nassert solution(\"2\\n\") == \"-1\\n\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\"\nassert solution(\"2\") == \"-1\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"TODO\" # Add your solution here"
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\\n4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\\n\\nOutput\\nYes\\nInput\\n4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\\n\\nOutput\\nNo\") == \"Yes\"\nassert solution(\"Input\\n4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\\n\\nOutput\\nYes\\nInput\\n4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\\n\\nOutput\\nNo\") == \"No\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n    1 2\n    1 3\n    2 4\n    1 2 3 4\n    ''') == 'Yes'\n\nassert solution('''\n    1 2\n    1 3\n    2 4\n    1 2 4 3\n    ''') == 'No'"
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('Input\\n4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\\n') == 'Yes\\n', 'Test 1: The sequence corresponds to a valid BFS traversal of the given tree starting from vertex 1.'\nassert solution('Input\\n4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\\n') == 'No\\n', 'Test 2: The sequence does not correspond to a valid BFS traversal of the given tree starting from vertex 1.'\n\nfrom typing import List\nimport queue"
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"TODO\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n1 3\\n2 4\\n1 2 3 4\\n') == 'Yes\\n', \"Test case 1 failed\"\nassert solution('1\\n2\\n1 3\\n2 4\\n1 2 4 3\\n') == 'No\\n', \"Test case 2 failed\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('Input\\n4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\\n') == 'Yes\\n'\nassert solution('Input\\n4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\\n') == 'No\\n'"
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n1 2\\n1 3\\n2 4\\n1 2 3 4\\n\") == \"Yes\\n\"\nassert solution(\"1\\n2\\n1 2\\n1 3\\n2 4\\n1 2 4 3\\n\") == \"No\\n\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\") == \"Yes\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\") == \"No\"\n"
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == expected, f\"Expected '{expected}', got '{solution(input)}'.\" for input, expected in [\n    (\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\", \"Yes\"),\n    (\"4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\", \"No\"),\n]"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\") == 24500\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\") == -1"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\") == 24500\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\") == -1\n"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"24500\"\nassert solution == \"-1\"\n"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_data) == expected_output, f\"Test case {test_case} failed\"\nfor i in range(1, len(input_data)):\n    assert (\n        solution(input_data)\n    ) == expected_output, f\"Test case {i} failed\""
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == output_data, \"Test failed\""
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\") == 24500\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\") == -1"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\\n\") == \"24500\"\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\\n\") == \"-1\""
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '24500'"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == -1\nassert solution == -1\nassert solution == 24500\nassert solution == 24500\nassert solution == -1"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\") == 24500\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\") == -1"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\", \"The first solution is incorrect\"\nassert solution(\"6 4 30\") == \"19.668384925\", \"The second solution is incorrect\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\"\nassert solution(\"6 4 30\") == \"19.668384925\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 1 45') == '0.828427125\\n'\nassert solution('6 4 30') == '19.668384925\\n'"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1, 1, 45) == 0.828427125\nassert solution(6, 4, 30) == 19.668384925"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\"\nassert solution(\"6 4 30\") == \"19.668384925\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Incorrect output\"\nprint(\"Correct\")"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\"\nassert solution(\"6 4 30\") == \"19.668384925\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\"\nassert solution(\"6 4 30\") == \"19.668384925\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 45\\n\") == \"0.828427125\\n\"\nassert solution(\"6 4 30\\n\") == \"19.668384925\\n\"\n"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 45\\n\") == \"0.828427125\\n\"\nassert solution(\"6 4 30\\n\") == \"19.668384925\\n\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == \"3000\", \"Case 1\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\") == \"992\", \"Case 2\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\") == \"1\", \"Case 3\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == \"3000\\n\"\n\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\") == \"992\\n\"\n\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\") == \"1\\n\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == \"3000\\n\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\\n\") == \"992\\n\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == \"3000\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\\n\") == \"992\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\") == \"1\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    2 3\n    ATK 2000\n    DEF 1700\n    2500\n    2500\n    2500\n    \"\"\"\n) == \"3000\"\n\nassert solution(\n    \"\"\"\n    3 4\n    ATK 10\n    ATK 100\n    ATK 1000\n    1\n    11\n    101\n    1001\n    \"\"\"\n) == \"992\"\n\nassert solution(\n    \"\"\"\n    2 4\n    DEF 0\n    ATK 0\n    0\n    0\n    1\n    1\n    \"\"\"\n) == \"1\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500') == '3000\\n'\nassert solution('3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001') == '992\\n'\nassert solution('2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1') == '1\\n'"
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500') == '3000', 'Test 1 failed'\nassert solution('3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001') == '992', 'Test 2 failed'\nassert solution('2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1') == '1', 'Test 3 failed'"
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3000\", \"Incorrect output\"\nassert solution(input()) == \"992\", \"Incorrect output\"\nassert solution(input()) == \"1\", \"Incorrect output\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == \"3000\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\") == \"992\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\") == \"1\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\\n\\n3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\\n\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\\n3 4\\nATK 0\\n0\\n0\\n1\\n1\\n\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\\n3 4\\nATK 0\\n0\\n0\\n1\\n1\\n\\n3 4\\nATK 0\\n0\\n0\\n1\\n1\\n\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\\n3 4\\nATK 0\\n0\\n0\\n1\\n1\\n\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\\n3 4\\nATK 0\\n0\\n0\\n1\\n1\\n\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 62"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 62"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == 6\nassert solution(open('input2.txt', 'r')) == 2\nassert solution(open('input3.txt', 'r')) == 62"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_data) == expected_output, f\"Test case {test_case_id} failed. Expected output: {expected_output}, but got: {solution(input_data)}\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"6\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"62\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 3 4 5 6 7 8 9\\n\") == \"6\"\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n\") == \"2\"\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\") == \"62\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 3 4 5 6 7 8 9\") == \"6\"\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\") == \"2\"\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\") == \"62\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n\") == \"6\\n\"\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n\") == \"2\\n\"\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\") == \"62\\n\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 3 4 5 6 7 8 9\\n\") == \"6\\n\"\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n\") == \"2\\n\"\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\") == \"62\\n\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '6\\n'\nassert solution(input()) == '2\\n'\nassert solution(input()) == '62\\n'"
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aabb\") == \"YES\"\nassert solution(\"abaa\") == \"NO\"\nassert solution(\"aaba\") == \"YES\"\nassert solution(\"aabaa\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('aaba') == 'YES'\nassert solution('aabb') == 'NO'"
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aaba\") == \"YES\", \"Expected YES, got: {}\".format(solution(\"aaba\"))\nassert solution(\"abaa\") == \"YES\", \"Expected YES, got: {}\".format(solution(\"abaa\"))\nassert solution(\"aabb\") == \"NO\", \"Expected NO, got: {}\".format(solution(\"aabb\"))\n"
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('aaba') == 'YES'\nassert solution('abaa') == 'YES'\nassert solution('aabb') == 'NO'\nassert solution('abab') == 'NO'"
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aabb\") == \"YES\"\nassert solution(\"abaa\") == \"NO\"\n"
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"NO\"\nassert solution(\"aabb\") == \"YES\"\nassert solution(\"abab\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"NO\"\nassert solution(\"aabb\") == \"YES\"\nassert solution(\"abab\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"YES\"\nassert solution(\"aabb\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"YES\"\nassert solution(\"aabb\") == \"NO\"\nassert solution(\"abab\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"YES\"\nassert solution(\"aabb\") == \"NO\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"NO\"\nassert solution(\"1\") == \"YES\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"NO\"\nassert solution(1) == \"YES\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"NO\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n\") == \"NO\"\nassert solution(\"1\\n\") == \"YES\\n1\"\n"
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"NO\" # ok\nassert solution(stdin) == \"YES\" # ok"
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3') == \"NO\\n\"\n\nn = int(stdin.readline())\na = list(map(int, stdin.readline().split()))"
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"NO\"\nassert solution(1) == \"YES\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 'YES' # correct solution"
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n\") == \"YES\"\nassert solution(\"3\\n\") == \"NO\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n\") == \"NO\"\nassert solution(\"1\\n\") == \"YES\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\\na?\"\nassert solution(input()) == \"Yes\\n?a\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\\n.??\"\nassert solution(input()) == \"Yes\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 'Yes\\na?'\nassert solution(input()) == 'Yes\\a?'\nassert solution(input()) == 'Yes\\a.*'\nassert solution(input()) == 'Yes\\a.*b'\nassert solution(input()) == 'No'\nassert solution(input()) == 'No'\nassert solution(input()) == 'Yes\\def'"
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('test') == 'Yes\\na?'\nassert solution('tezt') == 'Yes\\n?t'\nassert solution('test.est') == 'Yes\\n.t'\nassert solution('.svn') == 'Yes\\n.svn'\nassert solution('..') == 'Yes\\n..'\nassert solution('.??') == 'No'"
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'Yes'"
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ab\") == \"Yes\"\nassert solution(\"ac\") == \"Yes\"\nassert solution(\"cd\") == \"Yes\"\nassert solution(\"1 2\") == \"Yes\"\nassert solution(\"test\") == \"Yes\"\nassert solution(\"tezt\") == \"Yes\"\nassert solution(\"test.est\") == \"Yes\"\nassert solution(\"tes.\") == \"Yes\"\nassert solution(\"1 4 5\") == \"Yes\"\nassert solution(\"a\") == \"No\"\nassert solution(\"b\") == \"No\"\nassert solution(\"c\") == \"No\"\nassert solution(\"dd\") == \"No\"\nassert solution(\"1 2 3 4\") == \"No\"\nassert solution(\"svn\") == \"Yes\"\nassert solution(\"git\") == \"Yes\"\nassert solution(\"....\") == \"Yes\"\nassert solution(\"...\") == \"Yes\"\nassert solution(\"..\") == \"Yes\"\nassert solution(\".?\") == \"Yes\"\nassert solution(\"def solution(stdin: str) -> str: pass\") == \"Yes\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Yes\\na?\"\nassert solution(input()) == \"Yes\\n?es?\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\\n.???def solution(stdin: str) -> str:pass\"\n"
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Yes\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"Yes\\na?\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"Yes\\ntes?\"\nassert solution(open(\"input3.txt\", \"r\").read()) == \"No\"\nassert solution(open(\"input4.txt\", \"r\").read()) == \"Yes\\n.???def solution(stdin: str) -> str:pass\"\nassert solution(open(\"input5.txt\", \"r\").read()) == \"Yes\\n.???def solution(stdin: str) -> str:pass\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"3 2\nab\nac\ncd\n1 2\n\"\"\") == \"Yes\\na?\"\n\nassert solution(\"\"\"5 3\ntest\ntezt\ntest.\n.est\ntes.\n1 4 5\n\"\"\") == \"Yes\\n?es?\"\n\nassert solution(\"\"\"4 4\na\nb\nc\ndd\n1 2 3 4\n\"\"\") == \"No\"\n\nassert solution(\"\"\"6 3\n.svn\n.git\n....\n...\n..\n.\n1 2 3\n\"\"\") == \"Yes\\n.???\""
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == \"2\\n\", \"Expected output: 2\\nActual output: \" + solution(stdin=input())"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\", \"The expected value is incorrect\"\n\nfrom fractions import Fraction"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\\n\"\nassert solution(\"4\\n1 2 3 4\") == \"2\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"2\\n\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"3\\n\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"3\\n\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\") == \"3\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"3\\n\"\nassert solution(\"11\\n1 2 3 4 5 6 7 8 9 10 11\") == \"3\\n\"\nassert solution(\"12\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"3\\n\"\nassert solution(\"13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\") == \"3\\n\"\nassert solution(\"14\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\") == \"3\\n\"\nassert solution(\"15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\") == \"3\\n\"\nassert solution(\"16\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\") == \"3\\n\"\nassert solution(\"17\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\") == \"3\\n\"\nassert solution(\"18\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\") == \"3\\n\"\nassert solution(\"19\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\") == \"3\\n\"\nassert solution(\"20\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"3\\n\"\nassert solution(\"21\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21\") == \"3\\n\"\nassert solution(\"22\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22\") == \"3\\n\"\nassert solution(\"23\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23\") == \"3\\n\"\nassert solution(\"24\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24\") == \"3\\n\"\nassert solution(\"25\\n1 2 "
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\\n\", \"Expected output is '2', got: \" + solution(input())"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"3\""
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"2\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\") == \"1\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"2\""
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\"\nassert solution(\"3\\n1 2 4\") == \"3\"\nassert solution(\"3\\n1 2 5\") == \"5\"\nassert solution(\"3\\n1 2 1\") == \"2\"\nassert solution(\"3\\n1 1 1\") == \"1\"\n"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\\n\"\n"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\\n\"\nassert solution(input()) == \"2\\n\"\nassert solution(input()) == \"2\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) =="
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\"\nassert solution(\"3\\n1 1 1\") == \"1\"\nassert solution(\"3\\n2 2 2\") == \"2\"\nassert solution(\"3\\n1 1 1 2 3\") == \"2\"\nassert solution(\"3\\n2 2 2 1 2\") == \"3\"\nassert solution(\"3\\n2 3 4 4 3 2\") == \"4\"\nassert solution(\"3\\n1 2 3 4 5\") == \"5\"\nassert solution(\"3\\n1 1 1 1 1\") == \"1\"\nassert solution(\"3\\n1 1 1 1 2\") == \"2\"\nassert solution(\"3\\n1 1 1 1 3\") == \"3\"\nassert solution(\"3\\n1 2 3 4 5 6\") == \"6\"\nassert solution(\"3\\n1 1 1 1 2 1 1\") == \"1\"\nassert solution(\"3\\n1 1 1 1 2 1 2\") == \"2\"\nassert solution(\"3\\n1 1 1 1 2 1 3\") == \"3\"\nassert solution(\"3\\n1 1 1 1 2 2 1\") == \"1\"\nassert solution(\"3\\n1 1 1 1 2 2 2\") == \"2\"\nassert solution(\"3\\n1 1 1 1 2 2 3\") == \"3\"\nassert solution(\"3\\n1 1 1 1 2 3 1\") == \"1\"\nassert solution(\"3\\n1 1 1 1 2 3 2\") == \"2\"\nassert solution(\"3\\n1 1 1 1 2 3 3\") == \"3\"\nassert solution(\"3\\n1 1 1 1 3 1 1\") == \"1\"\nassert solution(\"3\\n1 1 1 1 3 1 2\") == \"2\"\nassert solution(\"3\\n1 1 1 1 3 1 3\") == \"3\"\nassert solution(\"3\\n1 1 1 1 3 2 1\") == \"1\"\nassert solution(\"3\\n1 1 1 1 3 2 2\") == \"2\"\nassert solution(\"3\\n1 1 1 1 3 2 3\") == \"3\"\nassert solution(\"3\\n1 1 1 1 3 3 1\") == \"1\"\nassert solution(\"3\\n1 1 1 1 3 3 2\") == \"2\"\nassert solution(\"3\\n1 1 1 1 3 3 3\") == \"3\""
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\"\n"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 2, \"The expected output is 2, but instead got {}\".format(solution())"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\"\nassert solution(\"3\\n1 2\\n2 3\\n4 1\") == \"1\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\"\nassert solution(\"3\\n1 2\\n2 3\\n4 1\") == \"1\"\n\nimport math"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\\n5 6\") == \"1\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\\n5 6\\n\") == \"1\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\\n\"\nassert solution(\"5\\n1 2\\n2 3\\n3 4\\n5 6\\n\") == \"5\\n\"\nassert solution(\"6\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\\n\") == \"16\\n\"\n"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n\""
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\\n\""
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='4\\n1 2\\n2 3\\n3 4') == '2\\n'"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 2 5\") == \"4\\n\"\nassert solution(\"10 3 10\") == \"5\\n\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'Output\\n4', 'Test failed'"
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    7 2 5\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    10 3 10\n    \"\"\"\n) == \"5\\n\"\n\nassert solution(\n    \"\"\"\n    7 2 1\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n    7 2 10\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n    7 2 5\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    10 3 10\n    \"\"\"\n) == \"5\\n\"\n\nassert solution(\n    \"\"\"\n    7 2 1\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n    7 2 10\n    \"\"\"\n) == \"0\\n\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(f'7 2 5\\n') == '4\\n'\nassert solution(f'10 3 10\\n') == '5\\n'"
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 2 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 2 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\"\n"
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 2 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 2 5\") == \"4\\n\"\nassert solution(\"10 3 10\") == \"5\\n\"\n"
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_str) == expected_output, f\"Test case {case_num} failed. Expected: {expected_output}, Received: {solution(input_str)}\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\") == 2\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\") == 1"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\\n\") == \"2\"\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\") == \"1\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\") == \"2\\n2 3\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\"\n\nassert solution() == \"2 3\"\n\nassert solution() == \"1\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\\n\") == \"2\\n2 3\\n\"\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\") == \"1\\n1\"\n\nfrom typing import List"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\\n\") == \"2\\n2 3\\n\"\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\") == \"1\\n1 \""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"5 6\n1 2\n1 3\n2 3\n2 5\n3 4\n4 5\"\"\") == \"2\\n2 3\"\n\nassert solution(\"\"\"4 4\n1 2\n1 3\n1 4\n3 4\n\"\"\") == \"1\\n1\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n5 6\n1 2\n1 3\n2 3\n2 5\n3 4\n4 5\n''') == '''\n2\n2 3\n'''\n\nassert solution('''\n4 4\n1 2\n1 3\n1 4\n3 4\n''') == '''\n1\n1\n'''"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\") == \"2\"\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\") == \"1\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == expected_output, f\"Test case {index+1} failed: {solution(input)}!= {expected_output}\"\nfor index, test_case in enumerate(test_cases):\n    result = solution(*test_case)\n    print(f\"Test case {index+1}:\")\n    print(f\"{test_case} \u2192 {result}\")"
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\"\nassert solution(\"3\\n100 150 250\") == \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\\n\"\nassert solution(\"3\\n100 150 250\") == \"No\\n\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\\n\", \"Test case 1\"\nassert solution(\"3\\n100 150 250\") == \"No\\n\", \"Test case 2\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\"\nassert solution(\"3\\n100 150 250\") == \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\\n\"\nassert solution(\"3\\n100 150 250\") == \"No\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n75 150 75 50\\n3\\n100 150 250\\n\") == \"Yes\"\nassert solution(\"3\\n100 150 250\\n\") == \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Input\\n4\\n75 150 75 50\\n\") == \"Yes\\n\"\nassert solution(\"Input\\n3\\n100 150 250\\n\") == \"No\\n\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\\n\"\nassert solution(\"3\\n100 150 250\") == \"No\\n\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"4\\n75 150 75 50\"\n) == \"Yes\"\n\nassert solution(\n    \"3\\n100 150 250\"\n) == \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\"\nassert solution(\"3\\n100 150 250\") == \"No\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n50 50 50') == '150', 'Test case 1 failed'\nassert solution('2\\n-1 -100 -1') == '100', 'Test case 2 failed'"
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"150\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n50 50 50\\n') == '150\\n'\nassert solution('2\\n-1 -100 -1\\n') == '100\\n'\nassert solution('2\\n50 50\\n') == '500\\n'\nassert solution('1\\n1\\n') == '1\\n'\nassert solution('2\\n1 -1\\n') == '1\\n'"
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n50 50 50\\n') == '150\\n'\nassert solution('2\\n-1 -100 -1\\n') == '100\\n'"
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"150\", \"Expected output: 150, got: \" + solution(stdin)"
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n50 50 50\\n') == '150\\n'\nassert solution('2\\n-1 -100 -1\\n') == '100\\n'"
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n50 50 50\\n\") == \"150\\n\", \"First case\"\n\nassert solution(\"2\\n-1 -100 -1\\n\") == \"100\\n\", \"Second case\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n50 50 50\\n2\\n-1 -100 -1\\n2') == '150'\nassert solution('2\\n50 50 50\\n2\\n-1 -100 -1\\n2') == '100'"
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n50 50 50\") == \"150\\n\"\nassert solution(\"2\\n-1 -100 -1\") == \"100\\n\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n50 50 50\") == \"150\\n\"\nassert solution(\"2\\n-1 -100 -1\") == \"100\\n\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5\\nab a\\ncc c\\nca a\\nee c\\nff d\") == \"4\"\nassert solution(\"2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\") == \"1\"\nassert solution(\"6 2\\nbb a\\nba a\\n\") == \"0\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5\\naab a\\nccc c\\ncab a\\nee c\\nfff d\\n\") == 4\nassert solution(\"2 8\\nafe e\\ncdc d\\nccc f\\nbcb b\\ndba b\\neba a\\nbbb b\\nffe c\\n\") == 1\nassert solution(\"6 2\\nbba a\\nbaa a\\n\") == 0"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5\\na b\\nc c\\na c\\ne c\\nf d\\n\") == \"4\\n\"\nassert solution(\"2 8\\na f e\\nd c\\nf c\\nb b\\nd b\\na e\\nb b\\nc c\\n\") == \"1\\n\"\nassert solution(\"6 2\\nbb a\\nba a\\n\") == \"0\\n\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5\\nab a\\ncc c\\nc a\\nee c\\nff d\") == \"4\"\nassert solution(\"2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\") == \"1\"\nassert solution(\"6 2\\nbb a\\nba a\") == \"0\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('ab a\\nc c\\nc a\\nee c\\nff d') == '4'\nassert solution('af e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c') == '1'\nassert solution('bb a\\nba a\\n') == '0'"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 5) == 4\nassert solution(2, 8) == 1\nassert solution(6, 2) == 0\n\nfrom itertools import permutations"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5\\na b\\nc c\\na a\\nee c\\nff d\") == \"4\"\nassert solution(\"2 8\\na f e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\") == \"1\"\nassert solution(\"6 2\\nbb a\\nba a\") == \"0\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5\\nab a\\ncc c\\nca a\\nee c\\nff d\\n\") == \"4\"\nassert solution(\"2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\\n\") == \"1\"\nassert solution(\"6 2\\nbb a\\nba a\\n\") == \"0\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5\\nab a\\ncc c\\nca a\\nee c\\nff d\") == \"4\\n\"\nassert solution(\"2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\\n\") == \"1\\n\"\nassert solution(\"6 2\\nbb a\\nba a\\n\") == \"0\\n\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 5\\nab a\\ncc c\\nca a\\nee c\\nff d\\n') == '4\\n'\nassert solution('2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\\n') == '1\\n'\nassert solution('6 2\\nbb a\\nba a\\n') == '0\\n'"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 10\nassert solution(2) == 3\nassert solution(1) == 1\n"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == '1'\nassert solution(2) == '3'\nassert solution(3) == '10'"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 1\nassert solution(2) == 3\nassert solution(3) == 10\n\nfrom functools import reduce"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 1\nassert solution(2) == 3\nassert solution(3) == 10"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"10\"\n"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"10\""
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '1', \"Expected: 1, Received: {}\".format(solution())\n"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 1\nassert solution(2) == 3\nassert solution(3) == 10"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 1\nassert solution(2) == 3\nassert solution(3) == 10\n\nfrom typing import List"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 1\nassert solution(2) == 3\nassert solution(3) == 10\n"
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\"\nassert solution(\"1 3\") == \"-1\"\nassert solution(\"4 1\") == \"1.250000000000\"\n\nprint(\"All test cases pass.\")"
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n\") == \"1.000000000000\\n\"\nassert solution(\"1 3\\n\") == \"-1\\n\"\nassert solution(\"4 1\\n\") == \"1.250000000000\\n\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\") == 1.0\nassert solution(\"1 3\") == -1\nassert solution(\"4 1\") == 1.25\n\nsolution = lambda stdin: input().strip()"
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\"\nassert solution(\"1 3\") == \"-1\"\nassert solution(\"4 1\") == \"1.250000000000\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\n1 3\\n4 1\\n\") == \"1.000000000000\\n-1\\n1.250000000000\"\nassert solution(\"1 3\\n4 1\\n\") == \"-1\"\nassert solution(\"4 1\\n\") == \"1.250000000000\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 1') == '1.000000000000', \"Output: 1.000000000000\"\nassert solution('1 3') == '-1', \"Output: -1\"\nassert solution('4 1') == '1.250000000000', \"Output: 1.250000000000\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\\n\"\nassert solution(\"1 3\") == \"-1\\n\"\nassert solution(\"4 1\") == \"1.250000000000\\n\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 1') == '1.000000000000\\n', 'The output should be \"1.000000000000\"\\n'\nassert solution('1 3') == '-1\\n', 'The output should be \"-1\"\\n'\nassert solution('4 1') == '1.250000000000\\n', 'The output should be \"1.250000000000\"\\n'"
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\"\nassert solution(\"1 3\") == \"-1\"\nassert solution(\"4 1\") == \"1.250000000000\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test case failed.\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"10.0000000000\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n12\\n11 8\\n7 5\") == \"10.0000000000\"\nassert solution(\"3\\n1\\n1 4 1\\n2 5 3\") == \"-1\"\nassert solution(\"6\\n2\\n4 6 3 3 5 6\\n2 6 3 6 5 3\") == \"85.4800000000\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected_output"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"12\\n11 8\\n7 5\") == \"10.0000000000\\n\"\nassert solution(\"3\\n1\\n1 4 1\\n2 5 3\") == \"-1\\n\"\nassert solution(\"6\\n2\\n4 6 3 3 5 6\\n2 6 3 6 5 3\") == \"85.4800000000\\n\"\n"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_str) == output_str, \"Error: Your solution does not match the expected output.\\nExpected output: \" + str(output_str) + \"\\nActual output: \" + str(solution(input_str))"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 1000"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n12\\n11 8\\n7 5\") == \"10.0000000000\"\nassert solution(\"3\\n1\\n1 4 1\\n2 5 3\") == \"-1\"\nassert solution(\"6\\n2\\n4 6 3 3 5 6\\n2 6 3 6 5 3\") == \"85.4800000000\"\n\nimport math"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"your_answer\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n12\\n11 8\\n7 5\") == \"10.0000000000\"\nassert solution(\"3\\n1\\n1 4 1\\n2 5 3\") == \"-1\"\nassert solution(\"6\\n2\\n4 6 3 3 5 6\\n2 6 3 6 5 3\") == \"85.4800000000\"\n"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"10.0000000000\"\nassert solution() == \"10.0000000000\"\nassert solution() == \"10.0000000000\"\nassert solution() == \"10.0000000000\"\nassert solution() == \"-1\"\nassert solution() == \"-1\"\nassert solution() == \"-1\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '0'\n\nassert solution(stdin) == '4'"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n\") == \"0\\n\"\nassert solution(\"2\\n\") == \"0\\n\"\nassert solution(\"10\\n\") == \"4\\n\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"0\\n\"\nassert solution(input()) == \"4\\n\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1\\n') == '0\\n'\nassert solution('10\\n') == '4\\n'"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2') == '0'\nassert solution('10') == '4'"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == \"0\\n\"\n\nassert solution(stdin=input()) == \"4\\n\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"0\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"4\\n\"\n"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Input\\n2\\n\\nOutput\\n0\\n\\nInput\\n10\\n\\nOutput\\n4\") == \"Output\\n0\\n\\nInput\\n10\\n\\nOutput\\n4\\n\\n\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"What are you doing at the end of the world? Are you busy? Will you save us?\") == \"Wh.\", \"Solution 1 incorrect.\"\nassert solution(\"What are you doing while sending \\\"What are you doing at the end of the world? Are you busy? Will you save us?\\\"? Are you busy? Will you send \\\"What are you doing at the end of the world? Are you busy? Will you save us?\\\"?\") == \"Wh.\", \"Solution 2 incorrect.\"\nassert solution(\"0 69\\n1 194\\n1 139\\n0 47\\n1 66\") == \"abdef\", \"Solution 3 incorrect.\"\nassert solution(\"4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\") == \"Areyoubusy\", \"Solution 4 incorrect.\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 111111111111\\n\") == \"Wh.\\n\"\nassert solution(\"5\\n0 69\\n1 194\\n1 139\\n0 47\\n1 66\\n\") == \"abdef\\n\"\nassert solution(\"10\\n4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\\n\") == \"Areyoubusy\\n\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n1 2\\n1 111111111111\\n\") == \"Wh.\\n\"\nassert solution(\"0 69\\n1 194\\n1 139\\n0 47\\n1 66\\n\") == \"abdef\\n\"\nassert solution(\"10\\n4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\\n\") == \"Areyoubusy\\n\"\n"
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Wh.\", \"First test failed.\"\n\nassert solution(input()) == \"abdef\", \"Second test failed.\"\n\nassert solution(input()) == \"Areyoubusy\", \"Third test failed.\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Wh.\\n\"\nassert solution(input()) == \"abdef\\n\"\nassert solution(input()) == \"Areyoubusy\\n\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n1 2\\n1 111111111111\") == \"Wh.\"\nassert solution(\"0 69\\n1 194\\n1 139\\n0 47\\n1 66\") == \"abdef\"\nassert solution(\"4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\") == \"Areyoubusy\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 1\\n1 2\\n1 111111111111') == 'Wh.\\n'\nassert solution('0 69\\n1 194\\n1 139\\n0 47\\n1 66') == 'abdef\\n'\nassert solution('4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474') == 'Areyoubusy\\n'"
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n1 2\\n1 111111111111\") == \"Wh.\\nWh.\\nWh.\"\nassert solution(\"0 69\\n1 194\\n1 139\\n0 47\\n1 66\") == \"abdef\\nabdef\\nabdef\"\nassert solution(\"4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\") == \"Areyoubusy\"\n"
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"What are you doing at the end of the world? Are you busy? Will you save us?\") == \"Wh.\"\nassert solution(\"What are you doing while sending \\\"What are you doing at the end of the world? Are you busy? Will you save us?\\\"? Are you busy? Will you send \\\"What are you doing at the end of the world? Are you busy? Will you save us?\\\"?\") == \"Wh.\"\nassert solution(\"def solution(stdin: str) -> str:\\n    pass\") == \"def\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 1') == 'Wh.\\n'\nassert solution('1 2') == 'Wh.\\n'\nassert solution('1 111111111111') == 'Wh.\\n'\n\nfor _ in range(3):\n    assert solution('0 69') == 'abdef\\n'\n    assert solution('1 194') == 'abdef\\n'\n    assert solution('1 139') == 'abdef\\n'\n\nfor _ in range(3):\n    assert solution('0 47') == 'abdef\\n'\n    assert solution('1 66') == 'abdef\\n'\n\nassert solution('4 1825') == 'Areyoubusy\\n'\nassert solution('3 75') == 'Areyoubusy\\n'\nassert solution('3 530') == 'Areyoubusy\\n'\nassert solution('4 1829') == 'Areyoubusy\\n'\nassert solution('4 1651') == 'Areyoubusy\\n'\nassert solution('3 187') == 'Areyoubusy\\n'\nassert solution('4 584') == 'Areyoubusy\\n'\nassert solution('4 255') == 'Areyoubusy\\n'\nassert solution('4 774') == 'Areyoubusy\\n'\nassert solution('2 474') == 'Areyoubusy\\n'\n\nassert solution('') == ''"
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Possible\" + \"\\n\" + \"9 + 13 - 39 + 28 + 31 = 42\"\nassert solution(input()) == \"Impossible\" + \"\\n\"\nassert solution(input()) == \"Possible\" + \"\\n\" + \"1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Possible\"\nassert solution(input()) == \"Impossible\"\nassert solution(input()) == \"Possible\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\", \"Input incorrect\"\nassert solution(\"? -? = 1\") == \"Impossible\", \"Input incorrect\"\nassert solution(\"? = 1000000\") == \"Possible\", \"Input incorrect\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\nassert solution(\"? -? = 1\") == \"Impossible\\n\"\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('? +? -? +? +? = 42\\n') == 'Possible\\n9 + 13 - 39 + 28 + 31 = 42'\nassert solution('? -? = 1\\n') == 'Impossible'\nassert solution('? = 1000000\\n') == 'Possible\\n1000000 = 1000000'"
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('? +? -? +? +? = 42') == 'Possible\\n9 + 13 - 39 + 28 + 31 = 42'\n\nassert solution('? -? = 1') == 'Impossible'\n\nassert solution('? = 1000000') == 'Possible\\n1000000 = 1000000'"
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\", \"Invalid rebus.\"\n\nassert solution(\"? -? = 1\") == \"Impossible\", \"Invalid rebus.\"\n\nassert solution(\"? = 1000000\") == \"Possible\", \"Invalid rebus.\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"7 4 5\", \"Test case 1 failed\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"7 4 5\", \"Test failed\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n1 2 0 2\\n0\\n0\\n0\\n\\n7\\n4 5\\n') == '7 4 5', \"Test Failed\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\", \"Test case failed\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"7 4 5\"\n"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\na1200\\na2100\\na01200\\na001200\\na0001200\\na00001200\\n\") == \"7 4 5\\n\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\\n\", \"Test failed\"\nassert solution(\"5\\n1 0 1 0 2\\n0 1 0 0 1\\n0 0 0 0 1\\n0 0 0 0 1\\n\") == \"10\\n\", \"Test failed\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n\") == \"1\\n\", \"Test failed\"\nassert solution(\"2\\n1 0\\n1 0\\n1 0\\n1 0\\n\") == \"2\\n\", \"Test failed\"\nassert solution(\"3\\n1 0 1\\n0 1 0\\n0 1 0\\n0 1 0\\n\") == \"2\\n\", \"Test failed\"\nassert solution(\"4\\n1 2 0 2\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n\") == \"0\\n\", \"Test failed\"\nassert solution(\"5\\n1 0 1 0 2\\n0 1 0 0 1\\n0 0 0 0 1\\n0 0 0 0 1\\n0 0 0 0 1\\n\") == \"10\\n\", \"Test failed\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n\") == \"1\\n\", \"Test failed\"\nassert solution(\"2\\n1 0\\n1 0\\n1 0\\n1 0\\n\") == \"2\\n\", \"Test failed\"\nassert solution(\"3\\n1 0 1\\n0 1 0\\n0 1 0\\n0 1 0\\n\") == \"2\\n\", \"Test failed\"\nassert solution(\"4\\n1 2 0 2\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n\") == \"0\\n\", \"Test failed\"\nassert solution(\"5\\n1 0 1 0 2\\n0 1 0 0 1\\n0 0 0 0 1\\n0 0 0 0 1\\n0 0 0 0 1\\n\") == \"10\\n\", \"Test failed\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n\") == \"1\\n\", \"Test failed\"\nassert solution(\"2\\n1 0\\n1 0\\n1 0\\n1 0\\n\") == \"2\\n\", \"Test failed\"\nassert solution(\"3\\n1 0 1\\n0 1 0\\n0 1 0\\n0 1 0\\n\") == \"2\\n\", \"Test failed\"\nassert solution(\"4\\n1 2 0 2\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n\") == \"0\\n\", \"Test failed\"\nassert solution(\"5\\n1 0 1 0 2\\n0 1 0 0 1\\n0 0 0 0 1\\n0 0 0 0 1\\n0 0 0 0 1\\n\") == \"10\\n\", \"Test failed\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n\") == \"1\\n\", \"Test failed\"\nassert solution(\"2\\n1 0\\n1 0\\n1 0\\n1 0\\n\") == \"2\\n\", \"Test failed\"\nassert solution(\"3\\n1 0 1\\n0 1 0\\n0 1 0\\n0 1 0\\n\") == \"2\\n\", \"Test failed\"\nassert solution(\"4\\n1 2 0 2\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n\") == \"0\\n\", \"Test failed\"\nassert solution(\"5\\n1 0 1 0 2\\n0 1 0 0 1\\n0"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '7 4 5\\n'\n"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\na1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\\n\"\nassert solution(\"4\\na1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\\n\"\nassert solution(\"4\\na1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\\n\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aabddc\") == \"Yes\"\nassert solution(\"3abc\") == \"No\"\nassert solution(\"3jjj\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\naabddc\") == \"Yes\"\nassert solution(\"3\\nab\") == \"No\"\nassert solution(\"3\\njjj\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\naabddc\") == \"Yes\"\nassert solution(\"3\\nabc\") == \"No\"\nassert solution(\"3\\njjj\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(6, 'aabddc') == 'Yes'\nassert solution(3, 'abc') == 'No'\nassert solution(3, 'jjj') == 'Yes'"
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aabddc\") == \"Yes\"\nassert solution(\"3abc\") == \"No\"\nassert solution(\"3jjj\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Your solution is incorrect. Expected output: {expected_output}, but got: {solution(stdin)}\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aabddc\") == \"Yes\"\nassert solution(\"3abc\") == \"No\"\nassert solution(\"3jjj\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aabddc\") == \"Yes\"\nassert solution(\"3abc\") == \"No\"\nassert solution(\"3jjj\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aabddc\") == \"Yes\"\nassert solution(\"3abc\") == \"No\"\nassert solution(\"3jjj\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aabddc\") == \"Yes\"\nassert solution(\"3\") == \"No\"\nassert solution(\"3\") == \"Yes\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '54'\n"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\n"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '54'\nassert solution() == '1728'"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\") == \"54\", \"Expected output 54, got {}.\"\nassert solution(\"7 4\") == \"1728\", \"Expected output 1728, got {}.\"\n\nfrom typing import List"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2\") == \"54\"\nassert solution(\"7 4\") == \"1728\"\n"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 2') == '54'\nassert solution('7 4') == '1728'"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\") == \"54\"\nassert solution(\"7 4\") == \"1728\"\n\nfrom typing import List"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\") == \"54\"\nassert solution(\"7 4\") == \"1728\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"54\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n\") == \"54\\n\"\nassert solution(\"7 4\\n\") == \"1728\\n\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\\n\") == \"2 4\\n\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\\n\") == \"2 1\\n\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Incorrect output for example 1\"\nassert solution(input()) == output(), \"Incorrect output for example 2\"\nassert solution(input()) == output(), \"Incorrect output for example 3\"\nassert solution(input()) == output(), \"Incorrect output for example 4\"\nassert solution(input()) == output(), \"Incorrect output for example 5\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\\n\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\\n\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW') == '2 4'\nassert solution('3 3\\nWWW\\nBWW\\nWWW') == '2 1'"
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\\n\") == \"2 4\\n\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\\n\") == \"2 1\\n\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2 4\\n\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\\n\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\\n\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test case failed. Expected: {output}, but got: {solution(input())}\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n') == '10 9 10 10 9'"
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n') == '10 9 10 10 9\\n'\nassert solution('2 3\\n1 2\\n1 2\\n1 2\\n') == '5 6\\n'\nassert solution('5 5\\n5 5\\n5 5\\n') == '10 10 10\\n'\nassert solution('5 1\\n5 1\\n5 1\\n5 1\\n') == '10 10 10\\n'\nassert solution('10 3\\n5 6\\n5 6\\n5 6\\n') == '10 10 10\\n'\nassert solution('1 1\\n2 2\\n3 3\\n4 4\\n') == '1 1 1 1\\n'\nassert solution('5 1\\n5 1\\n5 1\\n5 1\\n5 1\\n') == '10 10 10 10 10\\n'\nassert solution('1 1\\n1 1\\n1 1\\n1 1\\n') == '1 1 1 1 1\\n'"
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n\") == \"10 9 10 10 9\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\\n\") == \"5 6\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n    5 7\n    2 4\n    5 1\n    2 3\n    3 4\n    4 1\n    5 3\n    3 5\n    \"\"\") == \"10 9 10 10 9\"\n\nassert solution(\"\"\"\n    2 3\n    1 2\n    1 2\n    1 2\n    \"\"\") == \"5 6\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n') == '10 9 10 10 9 \\n'\nassert solution(stdin='2 3\\n1 2\\n1 2\\n1 2\\n') == '5 6 \\n'\nassert solution(stdin='5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n') == '10 9 10 10 9 \\n'"
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n\") == \"10 9 10 10 9 \\n\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\\n\") == \"5 6 \\n\"\nassert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n\") == \"10 9 10 10 9 \\n\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n\") == \"10 9 10 10 9\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\\n\") == \"5 6\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '''\n10 9 10 10 9\n5 6 5 6 5\n'''"
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n') == '10 9 10 10 9\\n'\nassert solution('2 3\\n1 2\\n1 2\\n1 2\\n') == '5 6\\n'"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\\n\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n\") == \"2\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\") == \"2\\n\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\") == \"2\\n\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n1 1\n-1 -1\n2\n0 1 0\n1 0 0\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n1 1\n-1 -1\n3\n1 0 0\n0 1 0\n1 1 -3\n\"\"\") == \"2\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3') == '2'\nassert solution('1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3') == '2'"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n') == '2'\nassert solution('1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n') == '2'\nassert solution('1 1\\n-1 -1\\n5\\n0 0 0\\n0 0 0\\n0 0 0\\n') == '3'\n"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n\\n1 1 -3\\n0 1 0\\n1 1 -3\\n\\n-1 -1\\n0 1 0\\n1 1 -3\\n') == '2\\n'\nassert solution('1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n\\n1 1 -3\\n0 1 0\\n1 1 -3\\n\\n-1 -1\\n0 1 0\\n1 1 -3\\n') == '2\\n'"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\") == \"2\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3') == '2\\n'\nassert solution('1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3') == '2\\n'"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n\") == \"2\\n\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n\") == \"2\\n\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\"\nassert solution(\"1 2\\n3\") == \"Nicky\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 1\\n3 4') == 'Kevin'\nassert solution('1 2\\n3') == 'Nicky'"
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\\n3 4\\n\") == \"Kevin\"\nassert solution(\"1 2\\n3\\n\") == \"Nicky\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\"\nassert solution(\"1 2\\n3\") == \"Nicky\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 1\\n3 4') == 'Kevin'\nassert solution('1 2\\n3') == 'Nicky'"
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\"\nassert solution(\"1 2\\n3\") == \"Nicky\"\n"
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\"\nassert solution(\"1 2\\n3\") == \"Nicky\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n3 4\\n\") == \"Kevin\\n\"\nassert solution(\"1 2\\n3\\n\") == \"Nicky\\n\"\n"
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\"\nassert solution(\"1 2\\n3\") == \"Nicky\""
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([3, 2, 2]) == [1, 1, 1]\nassert solution([2, 2, 1]) == [1]\nassert solution([-1]) == [-1]\nassert solution([2, 2, 2, 2]) == [1, 1, 1, 1]"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([1, 2, 3]) == ['1', '2', '3']\nassert solution([2, 2, 2]) == [1, 1, 1]\nassert solution([2]) == [-1]"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2 2 2\\n2\\n2 1\\n\") == \"3\\n1 2 3\\n3\\n1 2 3\\n\"\nassert solution(\"3\\n2 2 2\\n2\\n2 1\\n\") == \"1\\n1 1 1\\n2\\n\"\nassert solution(\"2\\n2 1\\n\") == \"-1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"3\\n1 2 3\\n1 2 3\\n1 2 3\\n\"\nassert solution(2) == \"1\\n1 1 1\\n2\\n\"\nassert solution(2) == \"1\\n1 1 1\\n2\\n\"\nassert solution(1) == \"-1\\ndef solution(stdin: str) -> str: pass\\n\""
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"3\\n1 2 3\\n1 2 3\\n\"\nassert solution(\"3\\n2 2 2\\n\") == \"1\\n1 1 1\\n2\\n\"\nassert solution(\"2\\n2 1\\n\") == \"-1\\ndef solution(stdin: str) -> str: pass\\n\""
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 3\nassert solution(2) == 1\nassert solution(1) == -1\nassert solution(3) == 1\nassert solution(2) == 1\nassert solution(2) == 1"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('Input\\n3\\n1 2 3\\n2\\n2 1\\n3\\n2 2 2\\n2\\n1 1 1\\n1\\n2\\n3') == ['3', '1 2 3', '1 2 3', '1 2 3', '1 2 3', '1 2 3', '2', '1 1 1', '1']\nassert solution('Input\\n2\\n2 1\\n3\\n2 2 2\\n2\\n1 1 1\\n1\\n2\\n3') == ['-1', '1', '1 1 1']\nassert solution('Input\\n3\\n1 2 3\\n2\\n2 1\\n3\\n2 2 2\\n2\\n1 1 1\\n1\\n2\\n3') == ['3', '1 2 3', '1 2 3', '1 2 3', '1 2 3', '1 2 3', '2', '1 1 1', '1']"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\\n3\\n1 2 3\\n\") == \"3\\n1 2 3\\n1 2 3\\n\"\nassert solution(\"Input\\n3\\n2 2 2\\n\") == \"1\\n1 1 1\\n2\\n\"\nassert solution(\"Input\\n2\\n2 1\\n\") == \"-1\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nfrom typing import List"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 5, \"Your code is not correct. The output should be [3, 1, 2, 3, -1], but it is [{}].\".format(solution)"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2 2 2\\n2\\n2 1\\n\") == \"3\\n1 2 3\\n1 2 3\\n2\\n2 1\\n\"\nassert solution(\"3\\n2 2 2\\n2\\n2 1\\n\") == \"1\\n1 1 1\\n2\\n\"\nassert solution(\"2\\n2 1\\n\") == \"-1\\ndef solution(stdin: str) -> str: pass\"\n"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11\") == 6, \"11 is not equal to 6\"\nassert solution(\"01\") == 2, \"01 is not equal to 2\"\nassert solution(\"1\") == 1, \"1 is not equal to 1\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected '{output}', got '{solution(input())}'\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('11') == 6\nassert solution('01') == 2\nassert solution('1') == 1"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(11) == 6\nassert solution(01) == 2\nassert solution(1) == 1"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('11') == '6', 'Test 1'\nassert solution('01') == '2', 'Test 2'\nassert solution('1') == '1', 'Test 3'"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(11) == 6\nassert solution(01) == 2\nassert solution(1) == 1"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('11') == '6'\nassert solution('01') == '2'\nassert solution('1') == '1'"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(11) == 6, \"Expected output: 6, got: {}\".format(solution(11))\nassert solution(01) == 2, \"Expected output: 2, got: {}\".format(solution(01))\nassert solution(1) == 1, \"Expected output: 1, got: {}\".format(solution(1))"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('11') == '6'\nassert solution('01') == '2'\nassert solution('1') == '1'"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n15\\n\") == \"1\\n\"\nassert solution(\"3\\n1 1 2\\n\") == \"3\\n\"\nassert solution(\"2\\n5 7\\n\") == \"4\\n\"\nassert solution(\"4\\n5 7\\n\") == \"8\\n\"\n"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"4\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"4\"\n\nfrom typing import List\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1\\n15\\n') == '1'\nassert solution('3\\n1 1 2\\n') == '3'\nassert solution('2\\n5 7\\n') == '4'"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1\\n15') == '1'\nassert solution('3\\n1 1 2') == '3'\nassert solution('2\\n5 7') == '4'\nassert solution('3\\n1 5 2 10') == '3'"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == '3'\nassert solution(1) == '1'\nassert solution(2) == '2'\nassert solution(5) == '4'\nprint(solution(15))\n"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('Input\\n1\\n15\\n\\nOutput\\n1\\n\\nInput\\n3\\n1 1 2\\n\\nOutput\\n3\\n\\nInput\\n2\\n5 7\\n\\nOutput\\n4') == 'Output\\n1\\n\\nInput\\n3\\n1 1 2\\n\\nOutput\\n3\\n\\nInput\\n2\\n5 7\\n\\nOutput\\n4\\n'"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n15\\n\") == \"1\\n\"\nassert solution(\"3\\n1 1 2\\n\") == \"3\\n\"\nassert solution(\"2\\n5 7\\n\") == \"4\\n\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output() for input, output in zip(input_data, output_data)"
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\\n3\\n1 0 2\\n2 0 1\\n\\nInput\\n2\\n1 0\\n0 1\\n\\nInput\\n4\\n1 2 3 0\\n0 3 2 1\\n\\nOutput\\nYES\") == \"YES\"\nassert solution(\"Input\\n3\\n1 0 2\\n2 0 1\\n\\nInput\\n2\\n1 0\\n0 1\\n\\nInput\\n4\\n1 2 3 0\\n0 3 2 1\\n\\nOutput\\nNO\") == \"NO\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\\n\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\\n\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\\n\"\n"
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\") == \"NO\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'YES\\n'\nassert solution(open('input_2.txt', 'r').read()) == 'YES\\n'\nassert solution(open('input_3.txt', 'r').read()) == 'NO\\n'\nassert solution(open('input_4.txt', 'r').read()) == 'NO\\n'"
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n1 0 2\\n2 0 1\\n4\\n1 2 3 0\\n0 3 2 1') == 'YES\\nYES\\nNO'\nassert solution('2\\n1 0\\n0 1\\n3\\n0 3 2 1\\n0 1') == 'YES\\nNO'\nassert solution('4\\n1 2 3 0\\n0 3 2 1\\n0 2\\n1 3 2 0') == 'NO'"
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\") == \"NO\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\\n2\\n1 0\\n0 1\\n\\n4\\n1 2 3 0\\n0 3 2 1\\n\") == \"YES\\nNO\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\"
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n8 10 9 9 8 10\\n1 1 1 1 1 1\\n\") == \"9000\"\nassert solution(\"6\\n8 10 9 9 8 10\\n1 10 5 5 1 10\\n\") == \"1160\"\n"
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '9000', 'Incorrect output'"
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '9000'\nassert solution(input()) == '1160'"
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test failed.\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '9000', \"Test failed\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n8 10 9 9 8 10\\n1 1 1 1 1 1\") == \"9000\"\nassert solution(\"6\\n8 10 9 9 8 10\\n1 10 5 5 1 10\") == \"1160\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 9000\nassert solution == 1160"
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(6) == \"9000\", \"Incorrect solution\"\nassert solution(6) == \"9000\", \"Incorrect solution\"\nassert solution(6) == \"9000\", \"Incorrect solution\"\nassert solution(6) == \"9000\", \"Incorrect solution\"\nassert solution(6) == \"9000\", \"Incorrect solution\"\nassert solution(6) == \"9000\", \"Incorrect solution\"\nassert solution(6) == \"9000\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) == \"1160\", \"Incorrect solution\"\nassert solution(6) =="
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n8 10 9 9 8 10\\n1 1 1 1 1 1\\n\") == \"9000\\n\"\nassert solution(\"6\\n8 10 9 9 8 10\\n1 10 5 5 1 10\\n\") == \"1160\\n\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n4 2\n2 3\n1 4\n1 4\n2 1\n''') == '6'\n\nassert solution('''\n8 6\n5 6\n5 7\n5 8\n6 2\n2 1\n7 3\n1 3\n1 4\n''') == '1'"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n2 3\\n1 4\\n1 4\\n2 1\") == 6\nassert solution(\"8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4\") == 1"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected_output"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '6'\nassert solution(stdin) == '1'"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"6\\n\", \"Please enter the correct input\"\n"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test case {t+1} failed: {solution(input())}!= {output}\"\n"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n2 3\\n1 4\\n1 4\\n2 1\") == \"6\"\nassert solution(\"8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4\") == \"1\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n# Your code goes here...\\n'\n"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 2\\n2 3\\n1 4\\n1 4\\n2 1') == 6\nassert solution('8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4') == 1\n"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'Output'"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Test failed: {solution(input())}!= {expected}\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 2 3 4 6\\n4\\n2 4 6 8\\n3\\n2 6 9\\n4\") == \"-1\\n\"\nassert solution(\"4\\n2 4 6 8\\n3\\n2 6 9\\n4\") == \"4\\n\"\nassert solution(\"3\\n2 6 9\\n4\") == \"4\\n\"\n"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 2, 6, 9) == 4\nassert solution(4, 2, 4, 6) == -1\nassert solution(1, 2, 3, 4, 6) == 5\nassert solution(2, 2, 3, 4, 6) == 0\nassert solution(1, 1, 1, 1, 6) == 1"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution) == -1\nassert solution(solution) == 0\nassert solution(solution) == 1\nassert solution(solution) == 2\nassert solution(solution) == 3\nassert solution(solution) == 4\n\nprint(\"All test cases pass.\")"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 2 3 4 6\") == \"5\\n\"\nassert solution(\"4\\n2 4 6 8\") == \"-1\\n\"\nassert solution(\"3\\n2 6 9\") == \"4\\n\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(str(input())) == str(output()) # Test the correctness of the solution"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n2 2 3 4 6\\n\\n4\\n2 4 6 8\\n\\n3\\n2 6 9\\n') == '-1\\n'\nassert solution('4\\n2 4 6 8\\n\\n3\\n2 6 9\\n') == '-1\\n'\nassert solution('3\\n2 6 9\\n') == '4\\n'"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 2 3 4 6\\n\") == \"5\\n\"\nassert solution(\"4\\n2 4 6 8\\n\") == \"-1\\n\"\nassert solution(\"3\\n2 6 9\\n\") == \"4\\n\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 2 3 4 6\") == \"5\\n\"\nassert solution(\"4\\n2 4 6 8\") == \"-1\\n\"\nassert solution(\"3\\n2 6 9\") == \"4\\n\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abacabaca\") == [\"aca\", \"ba\", \"ca\"]\nassert solution(\"abaca\") == []"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('abacabaca') == '3\\naca\\nba\\nca'\nassert solution('abaca') == '0'"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('abacabaca') == '3\\naca\\nba\\nca'\nassert solution('abaca') == '0'"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('abacabaca') == '3\\naca\\nba\\nca'\nassert solution('abaca') == '0'"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('abacabaca') == '3\\naca\\nba\\nca'\nassert solution('abaca') == '0'"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abacabaca\") == \"aca\\nba\\nca\", \"First test case\"\nassert solution(\"abaca\") == \"0\", \"Second test case\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input(\"abacabaca\")) == \"3\\naca\\nba\\nca\"\nassert solution(input(\"abaca\")) == \"0\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abacabaca\") == 3\nassert solution(\"abaca\") == 0\n"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\\nOutput\") == 2\nassert solution(\"1 5\\n1#2#3\\n\") == -1"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\") == -1"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\") == 2\nassert solution(\"1 5\\n1#2#3\") == -1"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    4 5\n    11..2\n    #..22\n    #.323\n   .#333\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    1 5\n    1#2#3\n    \"\"\"\n) == \"-1\\n\""
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Input\") == \"Output\""
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\\nOutput\") == \"2\"\nassert solution(\"1 5\\n1#2#3\\n\") == \"-1\""
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 5\\n11..2\\n#..22\\n#.323\\n.#333\\n') == 2\nassert solution('1 5\\n1#2#3\\n') == -1"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 2, \"Expected 2, got {}\".format(solution())"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\\nOutput\") == \"2\"\nassert solution(\"1 5\\n1#2#3\\n\") == \"-1\"\nassert solution(\"5 4\\n
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\\n\") == \"2\"\nassert solution(\"1 5\\n1#2#3\\n\") == \"-1\""
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"(())())\") == 6\nassert solution(\"(()())\") == -1\nassert solution(\"(())\") == 6\nassert solution(\"(()\") == -1\nassert solution(\"(()(()))\") == 12\nassert solution(\"(())(())\") == 6\nassert solution(\"(())(())\") == 12\nassert solution(\"(()(())(()))\") == 18\nassert solution(\"()()\") == -1\nassert solution(\"()(()(()))\") == 18\nassert solution(\"()()(\") == -1\nassert solution(\"()()(\") == -1\nassert solution(\"())(()\") == -1\nassert solution(\"())(()())()()()()()()()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1\nassert solution(\"(())()\") == -1"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(8) == 6\nassert solution(3) == -1"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"-1\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"-1\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"-1\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"-1\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"-1\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"-1\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"-1\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"-1\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"-1\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"-1\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"-1\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"-1\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"-1\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"-1\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"-1\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"-1\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"-1\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"-1\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"-1\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"-1\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"-1\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"-1\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"-1\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"-1\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"-1\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) =="
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('8') == '6'\nassert solution('3') == '-1'"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(b\"8\\n())((())(\\n\") == \"6\"\nassert solution(b\"3\\n(()\\n\") == \"-1\"\n\nfrom typing import List"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"6\", \"Your code is incorrect. The expected output is 6, but the actual output is \"6\". Please check your code again.\""
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8\\n())((())(\") == 6\nassert solution(\"3\\n(()\") == -1"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"(())(\") == 6\nassert solution(\"(()\") == -1\nassert solution(\"(()(()))\") == 6\nassert solution(\"(())(()(()))(()())\") == 6\nassert solution(\"(()(()))(()())(()(()))\") == 6\nassert solution(\"(()(()))(()())(())()\") == 6\nassert solution(\"()(()(()))(()())(())()()(()))\") == 6\nassert solution(\"(())(())()()\") == 6\nassert solution(\"()()(())()()\") == 6\nassert solution(\"(()())(())()()\") == 6\nassert solution(\"(())()(())()()()(()))\") == 6\nassert solution(\"(())()()()()()()(()))\") == 6\nassert solution(\"()()()()()()()(()))\") == 6\nassert solution(\"(()())()()()()()(()))\") == 6\nassert solution(\"(())()()()()()()(())()()\") == 6\nassert solution(\"(())(())()()()()()(())()()\") == 6\nassert solution(\"()()(())()()()()(())()()()(()))\") == 6\nassert solution(\"(())()()()()()()(())()()(()))\") == 6\nassert solution(\"()()()()()()()(())()()(()))\") == 6\nassert solution(\"(())()()()()()()(())()()(()()))\") == 6\nassert solution(\"()()()()()()()(())()()(()()))\") == 6\nassert solution(\"(()())()()()()()(())()()(()()))\") == 6\nassert solution(\"(())()()()()()()(())()()(()()))\") == 6\nassert solution(\"()()()()()()()(())()()(()()))\") == 6\nassert solution(\"(()())()()()()()(())()()(()()))\") == 6\nassert solution(\"(())()()()()()()(())()()(()()))\") == 6\nassert solution(\"()()()()()()()(())()()(()()))\") == 6\nassert solution(\"(()())()()()()()(())()()(()()))\") == 6\nassert solution(\"(())()()()()()()(())()()(()()))\") == 6\nassert solution(\"()()()()()()()(())()()(()()))\") == 6\nassert solution(\"(()())()()()()()(())()()(()()))\") == 6\nassert solution(\"(())()()()()()()(())()()(()()))\") == 6\nassert solution(\"()()()()()()()(())()()(()()))\") == 6\nassert solution(\"(()())()()()()()(())()()(()()))\") == 6\nassert solution(\"(())()()()()()()(())()()(()()))\") == 6\nassert solution(\"()()()()()()()(())()()(()()))\") == 6\nassert solution(\"(()())()()()()()(())()()(()()))\") == 6\nassert solution(\"(())()()()()()()(())()()(()()))\") == 6\nassert solution(\"()()()()()()()(())()()(()()))\") == 6\nassert solution(\"(()())()()()()()(())()()(()()))\") == 6\nassert solution(\"(())()()()()()()(())()()(()()))\") == 6\nassert solution(\"()()()()()()()(())()()(()()))\") == 6\nassert solution(\"(()())()()()()()(())()()(()()))\") == 6\nassert solution(\"(())()()()()()()(())()()(()()))\") == 6\nassert solution(\"()()()()()()()(())()()(()()))\") == 6\nassert solution(\"(()())()()()()()(())()()(()()))\") == 6\nassert solution(\"(())()()()()()()(())()()(()()))\") == 6\nassert solution(\"()()()()()()()(())()()(()()))\") == 6\nassert solution(\"(()())()()()()()(())()()(()()))\") == 6\nassert solution(\"(())()()()()()()(())()()(()()))\") == 6\nassert solution(\"()()()()()()()(())()()(()()))\") == 6\nassert solution(\"(()())()()()()()(())()()(()()))\") == 6\nassert solution(\"(())()()()()()()(())()()(()()))\") == 6\nassert solution(\"()()()()()()()(())()()(()()))\") == 6\nassert solution(\"(()())()()()()()(())()()(()()))\") == 6\nassert solution(\"(())()()()()()()"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution("
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8\") == \"6\"\nassert solution(\"3\") == \"-1\""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    3 3 5\n    4 4 0\n    1 3\n    3 2\n    3 1\n    \"\"\"\n) == \"1\\n3\\n\"\n\nassert solution(\n    \"\"\"\n    4 5 4\n    2 1 0 3\n    4 3\n    3 2\n    1 2\n    1 4\n    1 3\n    \"\"\"\n) == \"4\\n1 2 3 4\\n\"\n\nassert solution(\n    \"\"\"\n    5 6 7\n    8 9 10\n    11 12 13\n    14 15 16\n    17 18 19\n    20 21 22\n    \"\"\"\n) == \"2\\n20 21 22\\n\"\n\nassert solution(\n    \"\"\"\n    3 4 5\n    6 7 8\n    9 10 11\n    12 13 14\n    15 16 17\n    18 19 20\n    \"\"\"\n) == \"1\\n3\\n\"\n\nassert solution(\n    \"\"\"\n    3 5 6\n    2 4 8\n    7 10 12\n    11 14 16\n    15 19 22\n    21 23 24\n    \"\"\"\n) == \"4\\n21 23 24\\n\""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3 5\\n4 4 0\\n1 3\\n3 2\\n3 1\") == \"1\\n3\\n\"\nassert solution(\"4 5 4\\n2 1 0 3\\n4 3\\n3 2\\n1 2\\n1 4\\n1 3\") == \"4\\n1 2 3 4\\n\""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 5\\n4 4 0\\n1 3\\n3 2\\n3 1\") == \"1\\n3 2\"\nassert solution(\"4 5 4\\n2 1 0 3\\n4 3\\n3 2\\n1 2\\n1 4\\n1 3\") == \"4\\n1 2 3 4\""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\\n3\""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == output_data, f\"Test failed: solution({input_data})!= output_data ({output_data})\""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1\\n3 \"\nassert solution(stdin) == \"4\\n1 2 3 4 \""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3 5\\n4 4 0\\n1 3\\n3 2\\n3 1\") == \"1\\n3 2 1\"\nassert solution(\"4 5 4\\n2 1 0 3\\n4 3\\n3 2\\n1 2\\n1 4\\n1 3\") == \"4\\n1 2 3 4\""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\\n3 \\n\"\nassert solution(\"4 5 4\\n2 1 0 3\\n4 3\\n3 2\\n1 2\\n1 4\\n1 3\\n\") == \"4\\n1 2 3 4 \""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1\\n3 1\""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 5\\n4 4 0\\n1 3\\n3 2\\n3 1\\n\") == \"1\\n3 \\n\"\nassert solution(\"4 5 4\\n2 1 0 3\\n4 3\\n3 2\\n1 2\\n1 4\\n1 3\\n\") == \"4\\n1 2 3 4 \\n\""
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"8\\n\", \"Please provide the correct input.\""
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"8\"\n"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 8\n"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2, 3) == \"8\""
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"8\"\n"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"8\\n\""
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n\") == \"8\"\nassert solution(\"1 1\\n\") == \"1\"\nassert solution(\"3 1\\n\") == \"1\"\nassert solution(\"4 4\\n\") == \"0\"\nassert solution(\"100 100\\n\") == \"1000000000\""
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"8\"\n"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"8\"\n"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"8\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 2\\n1 2\\n2 3\\n') == '5\\n'\nassert solution('100 3\\n1 2\\n2 1\\n3 1\\n') == '4\\n'\nassert solution('1 2\\n1 1\\n2 100\\n') == '100\\n'"
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '5', 'Incorrect answer'\nassert solution() == '4', 'Incorrect answer'\nassert solution() == '100', 'Incorrect answer'"
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n1 2\\n2 3\\n\") == \"5\\n\"\nassert solution(\"100 3\\n1 2\\n2 1\\n3 1\\n\") == \"4\\n\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\\n\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 4, \"Your implementation is wrong!\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\n\\nfor line in stdin.splitlines():\\n    n, m = line.split()[:2]\\n    q = list(map(int, line.split()[2:]))\\n    if int(n)!= int(m):\\n        continue\\n    for i in range(int(m) - 1):\\n        a = list(map(int, line.split()[2 * i + 2:2 * i + 4]))\\n        if a.count(q[i]) == 0 or a.count(q[i]) == 1 or a.count(q[i] + 1) == 0 or a.count(q[i] + 1) == 1 or a.count(q[i] + 2) == 0 or a.count(q[i] + 2) == 1:\\n            continue\\n    return str(max(sum([w * a[j] for j in range(n) if a[j] == q[i]]), sum([w * a[j] for j in range(n) if a[j] + 1 == q[i]])))\\n\\n# Test case\\nassert solution(\"5 2\\n1 2\\n2 3\\n\\n1 2\\n2 1\\n3 1\\n\\n1 2\\n1 1\\n2 100\\n\") == \"5\\n\\n100\\n\\n4\\n\\n4\\n\\n100\\n\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 2\\n1 2\\n2 3\\n') == '5\\n'\nassert solution('100 3\\n1 2\\n2 1\\n3 1\\n') == '4\\n'\nassert solution('1 2\\n1 1\\n2 100\\n') == '100\\n'"
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 2\\n1 2\\n2 3\\n') == '5\\n'\nassert solution('100 3\\n1 2\\n2 1\\n3 1\\n') == '4\\n'\nassert solution('1 2\\n1 1\\n2 100\\n') == '100\\n'"
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"5\\n\", \"Test 1 failed\"\n\nassert solution() == \"5\\n\", \"Test 2 failed\"\n\nassert solution() == \"4\\n\", \"Test 3 failed\"\n\nassert solution() == \"100\\n\", \"Test 4 failed\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n1 2\\n2 3\\n\") == \"5\\n\"\nassert solution(\"100 3\\n1 2\\n2 1\\n3 1\\n\") == \"4\\n\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\\n\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 2\\n2 3\\n\\n') == '5\\n'\nassert solution('100 3\\n1 2\\n2 1\\n3 1\\n\\n') == '4\\n'\nassert solution('1 2\\n1 1\\n2 100\\n\\n') == '100\\n'"
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aaabb\") == \"6\"\nassert solution(\"usaco\") == \"1\"\nassert solution(\"lol\") == \"2\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aaabb\") == \"6\", \"Test 1 failed\"\nassert solution(\"usaco\") == \"1\", \"Test 2 failed\"\nassert solution(\"lol\") == \"2\", \"Test 3 failed\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aaabb\") == \"6\"\nassert solution(\"usaco\") == \"1\"\nassert solution(\"lol\") == \"2\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aaabb\") == \"6\", \"Input 'aaabb' should output '6'.\"\nassert solution(\"usaco\") == \"1\", \"Input 'usaco' should output '1'.\"\nassert solution(\"lol\") == \"2\", \"Input 'lol' should output '2'.\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aaabb\") == 6\nassert solution(\"usaco\") == 1\nassert solution(\"lol\") == 2"
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aaabb\") == \"6\", \"Incorrect result: aaabb\"\nassert solution(\"usaco\") == \"1\", \"Incorrect result: usaco\"\nassert solution(\"lol\") == \"2\", \"Incorrect result: lol\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aaabb\") == \"6\"\nassert solution(\"usaco\") == \"1\"\nassert solution(\"lol\") == \"2\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aaabb\") == \"6\"\nassert solution(\"usaco\") == \"1\"\nassert solution(\"lol\") == \"2\"\n"
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aaabb\") == 6\nassert solution(\"usaco\") == 1\nassert solution(\"lol\") == 2"
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aaabb\") == \"6\", \"The answer should be 6, but it is %s\" % solution(\"aaabb\")\nassert solution(\"usaco\") == \"1\", \"The answer should be 1, but it is %s\" % solution(\"usaco\")\nassert solution(\"lol\") == \"2\", \"The answer should be 2, but it is %s\" % solution(\"lol\")"
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"4\\n\") == \"2\\n\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Test Case {t} failed: expected {output()}, got {solution(input())}\"\nt += 1"
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n\") == \"1\\n\"  # Example 1\nassert solution(\"4\\n\") == \"2\\n\"  # Example 2"
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Test case {i + 1} failed: expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"1\"\nassert solution(4) == \"2\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\", \"Test Case 1 Failed\"\nassert solution() == \"1\", \"Test Case 2 Failed\"\nassert solution() == \"2\", \"Test Case 3 Failed\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == \"1\\n\"\nassert solution(4) == \"2\\n\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Input: {input()}, Expected Output: {expected_output}, Actual Output: {solution(input())}\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n\") == \"2\\n\"\nassert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"5\\n\") == \"1\\n\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '2'\n\nsolution = lambda x: '1' if x == '4' else '0'\nassert solution('1') == '1'\nassert solution('4') == '2'"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, but got {solution(input())}\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 4\\n2 5\\n3 6\") == \"1 2\\n2 1\\n1 2\"\nassert solution(\"1 2\\n2 1\\n1 2\") == \"1 2\\n2 1\\n1 2\"\nassert solution(\"1 2\\n2 1\\n1 2\") == \"1 2\\n2 1\\n1 2\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"\"\"\n1 2\n2 1\n1 2\n\"\"\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 4\\n2 5\\n3 6\") == \"1 2\\n2 1\\n1 2\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output() # check if the solution is correct"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == ['1 2', '2 1']"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1 2\\n2 1\\n1 2\\n\", \"Test failed\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '-1\\n'\nassert solution() == '1 2\\n'\nassert solution() == '2 1\\n'\nassert solution() == '1 2\\n'\n"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1 4\\n2 5\\n3 6') == '1 2\\n2 1\\n1 2'"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 4\\n2 5\\n3 6\") == \"1 2\\n2 1\\n1 2\"\nassert solution(\"1 3\\n2 4\\n3 5\") == \"-1\"\nassert solution(\"2 5\\n1 4\\n3 6\") == \"-1\"\nassert solution(\"2 6\\n1 5\\n3 7\") == \"1 2\\n2 1\\n1 2\"\nassert solution(\"1 3\\n2 4\\n3 5\\n2 5\\n1 4\\n3 6\\n2 6\\n1 5\\n3 7\") == \"1 2\\n2 1\\n1 2\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2 1\"\nassert solution(\"8\") == \"4\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\\n\", \"Output 1\"\nassert solution(\"2\") == \"2\\n\", \"Output 2\"\nassert solution(\"3\") == \"2 1\\n\", \"Output 3\"\nassert solution(\"8\") == \"4\\n\", \"Output 4\"\nassert solution(\"\") == \"\", \"Output empty string\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Test failed. Expected: {expected}, Got: {solution(input())}\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2 1\"\nassert solution(\"8\") == \"4\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2 1'\nassert solution('8') == '4'"
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2 1\"\nassert solution(\"8\") == \"4\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n\") == \"1\"\nassert solution(\"2\\n\") == \"2\"\nassert solution(\"3\\n\") == \"2 1\"\nassert solution(\"8\\n\") == \"4\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\"1\"\"\"\n\nassert solution(stdin) == \"\"\"2\"\"\"\n\nassert solution(stdin) == \"\"\"2 1\"\"\"\n\nassert solution(stdin) == \"\"\"4\"\"\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"2\\n\") == \"2\\n\"\nassert solution(\"3\\n\") == \"2 1\\n\"\nassert solution(\"8\\n\") == \"4\\n\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"2 1\\n\"\nassert solution(8) == \"4\\n\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('aabaac') == 'aba aca '\nassert solution('0rTrT022') == '02TrrT20 '\nassert solution('aA') == 'a A'"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('aabaac') == '2\\naba aca'\nassert solution('0rTrT022') == '1\\n02TrrT20'\nassert solution('aA') == '2\\na A'"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == output"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, got: {solution(stdin)}\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\naabaac\") == 2\nassert solution(\"8\\n0rTrT022\") == 1\nassert solution(\"2\\naA\") == 2"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abc\") == \"aba\"\nassert solution(\"zac\") == \"aca\"\nassert solution(\"123456789\") == \"2021\"\nassert solution(\"abczab\") == \"aba\"\nassert solution(\"abcde\") == \"aba\"\nassert solution(\"abcdef\") == \"aba\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aabaac\") == \"aba aca \"\nassert solution(\"0rTrT022\") == \"02TrrT20 \"\nassert solution(\"aA\") == \"a A\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aabaac\") == \"aba aca \", \"Expected Output: 'aba aca'\"\nassert solution(\"0rTrT022\") == \"02TrrT20 \", \"Expected Output: '02TrrT20'\"\nassert solution(\"aA\") == \"a A \", \"Expected Output: 'a A'\"\nassert solution(\"abcdefg\") == \"abcdefgh\", \"Expected Output: 'abcdefgh'\"\nassert solution(\"abcdefg\") == \"abcdefg\", \"Expected Output: 'abcdefg'\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"\"\"2\naba aca \nInput\n8\n0rTrT022\n\nOutput\n1\n02TrrT20 \"\"\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\na**d\\n2\\abcd\\nacbd\\n\") == \"2\", \"Test Case 1 Failed\"\nassert solution(\"5\\nlo*er\\n2\\lover\\nloser\\n\") == \"0\", \"Test Case 2 Failed\"\nassert solution(\"3\\na*a\\n2\\aaa\\aba\\n\") == \"1\", \"Test Case 3 Failed\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 2\nassert solution() == 1"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\na**d\\n2\\abcd\\nacbd\\n\") == \"2\"\nassert solution(\"5\\nlo*er\\n2\\lover\\nloser\\n\") == \"0\"\nassert solution(\"3\\na*a\\n2\\aaa\\aba\\n\") == \"1\"\n"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('a**d') == '2', \"Incorrect output\"\nassert solution('abcd') == '2', \"Incorrect output\"\nassert solution('acbd') == '0', \"Incorrect output\"\nassert solution('lo*er') == '0', \"Incorrect output\"\nassert solution('a*a') == '1', \"Incorrect output\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\nlo*er\\n2\\nlover\\nloser\") == \"0\"\nassert solution(\"3\\na*a\\n2\\naaa\\naba\") == \"1\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\na**d\\n2\\abcd\\nacbd\\n\") == 2\nassert solution(\"5\\nlo*er\\n2\\lover\\nloser\\n\") == 0\nassert solution(\"3\\na*a\\n2\\aaa\\aba\\n\") == 1"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\nlo*er\\n2\\nlover\\nloser\\n') == '0'\nassert solution('3\\na*a\\n2\\naaa\\naba\\n') == '1'"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n    4\n        a**d\n    2\n        abcd\n        acbd\n     \"\"\") == \"2\"\n\nassert solution(\"\"\"\n    5\n        lo*er\n    2\n        lover\n        loser\n     \"\"\") == \"0\"\n\nassert solution(\"\"\"\n    3\n        a*a\n    2\n        aaa\n        aba\n     \"\"\") == \"1\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2'"
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\\n\") == \"1\\n\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\\n\") == \"2\\n\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 1 1\\n1 0 0 0 4\\n') == '1\\n'\nassert solution('6 1 2\\n3 8 0 1 0 0\\n') == '2\\n'"
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 1 1\\n1 0 0 0 4\\n') == '1\\n'\n\nassert solution('6 1 2\\n3 8 0 1 0 0\\n') == '2\\n'"
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\\n\") == \"1\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\\n\") == \"2\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Output\\n2'\nassert solution(input()) == 'Output\\n1'"
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 1 1\\n1 0 0 0 4\\n') == '1'\nassert solution('6 1 2\\n3 8 0 1 0 0\\n') == '2'\n"
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Test failed!\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"5 1 1\\n1 0 0 0 4\\n\") == \"1\\n\"\n\nassert solution(stdin=\"6 1 2\\n3 8 0 1 0 0\\n\") == \"2\\n\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"1 1\") == \"40\"\nassert solution(stdin=\"1 42\") == \"1\"\nassert solution(stdin=\"6 4\") == \"172\"\nassert solution(stdin=\"5 1\") == \"Palindromic tree is better than splay tree\"\n"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1, 1) == 40\nassert solution(1, 42) == 1\nassert solution(6, 4) == 172"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"1 1\\n\") == \"40\\n\"\nassert solution(stdin=\"1 42\\n\") == \"1\\n\"\nassert solution(stdin=\"6 4\\n\") == \"172\\n\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='1 1') == \"40\"\nassert solution(stdin='1 42') == \"1\"\nassert solution(stdin='6 4') == \"172\"\n"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"40\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"Palindromic tree is better than splay tree\"\n"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '40', \"Output not matching\"\nassert solution(stdin) == '1', \"Output not matching\"\nassert solution(stdin) == '172', \"Output not matching\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Solution does not match the expected output. Expected {output}, but got {solution(input())}\"\n"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Palindromic tree is better than splay tree\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"Palindromic tree is better than splay tree\"\nassert solution(12) == \"172\"\nassert solution(100) == \"Palindromic tree is better than splay tree\"\nassert solution(10) == \"Palindromic tree is better than splay tree\"\nassert solution(1) == \"Palindromic tree is better than splay tree\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 1 4\") == \"5\"\nassert solution(\"4\\n3 1 4 4\") == \"6\"\nassert solution(\"4\\n3 1 4 1\") == \"6\"\nassert solution(\"5\\n3 1 4 1 5\") == \"11\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 1 4\\n\") == \"5\\n\"\nassert solution(\"4\\n3 1 4 4\\n\") == \"6\\n\"\nassert solution(\"4\\n3 1 4 1\\n\") == \"6\\n\"\nassert solution(\"5\\n3 1 4 1 5\\n\") == \"11\\n\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 6, \"The correct solution is not provided\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 6\n"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n2 1 4') == '5\\n'\nassert solution('4\\n3 1 4 4') == '6\\n'\nassert solution('4\\n3 1 4 1') == '6\\n'\nassert solution('5\\n3 1 4 1 5') == '11\\n'"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 5, \"Input does not match expected output.\"\nassert solution(4) == 6, \"Input does not match expected output.\"\nassert solution(5) == 11, \"Input does not match expected output.\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n2 1 4') == '5\\n'\nassert solution('4\\n3 1 4 4') == '6\\n'\nassert solution('4\\n3 1 4 1') == '6\\n'\nassert solution('5\\n3 1 4 1 5') == '11\\n'"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test failed for example {input()}\"\n"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\") == 5\nassert solution(\"4\") == 6\nassert solution(\"4\") == 6\nassert solution(\"5\") == 11"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"5\", \"The solution is not correct.\"\n"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n1 0 0 -1\\n') == '1\\n'\nassert solution('2\\n1 -1\\n') == '2\\n'"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 0 0 -1\") == \"1\\n\"\nassert solution(\"2 1 -1\") == \"2\\n\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 0 0 -1\\n2\\n1 -1\\n\") == \"1\"\nassert solution(\"1 2 3 -4\\n5\\n6 7 -8\\n\") == \"2\"\nassert solution(\"10 1000000000 0\\n\") == \"1000000000\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 1\nassert solution(5) == 2\n"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 0 0 -1\") == \"1\"\nassert solution(\"2 1 -1\") == \"2\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\", \"The correct value should be returned.\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 0 0 -1\") == \"1\"\nassert solution(\"2\\n1 -1\") == \"2\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"2\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\\n\", \"Output: 1\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 0 0 -1\\n2\\n1 -1\\n\") == \"1\"\nassert solution(\"2\\n1 -1\\n\") == \"2\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 0 0\\n1 2\\n2 3') == '2'\nassert solution('2 1 0\\n1 2\\n2 2') == '0'\nassert solution('2 5 7\\n3 4\\n14 4') == '1'"
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 0 0\\n1 2\\n2 3') == '2\\n'\nassert solution('2 1 0\\n1 2\\n2 2') == '0\\n'\nassert solution('2 5 7\\n3 4\\n14 4') == '1\\n'"
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\") == \"1\\n\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 0 0\\n1 2\\n2 3\\n') == '2\\n'\nassert solution('2 1 0\\n1 2\\n2 2\\n') == '0\\n'\nassert solution('2 5 7\\n3 4\\n14 4\\n') == '1\\n'\n"
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\") == \"1\\n\"\n"
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 0 0\\n1 2\\n2 3\\n') == '2\\n'\nassert solution('2 1 0\\n1 2\\n2 2\\n') == '0\\n'\nassert solution('2 5 7\\n3 4\\n14 4\\n') == '1\\n'"
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\") == \"1\\n\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '2\\n'\n"
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n2 0 0\n1 2\n2 3\n\"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n2 1 0\n1 2\n2 2\n\"\"\"\n) == \"0\"\n\nassert solution(\n    \"\"\"\n2 5 7\n3 4\n14 4\n\"\"\"\n) == \"1\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Input\\n2 0 0\\n1 2\\n2 3\\n') == 'Output\\n2\\n'\nassert solution('Input\\n2 1 0\\n1 2\\n2 2\\n') == 'Output\\n0\\n'\nassert solution('Input\\n2 5 7\\n3 4\\n14 4\\n') == 'Output\\n1\\n'"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\\n6 7\\n8 9\") == \"18\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"6\\n\", \"Your solution should return the number of the possible values for S after the M operations, modulo 1000000007.\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 2\\n01001\\n2 4\\n3 5\\n') == '6'"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\\n\"\nassert solution(\"1 1\\n0\") == \"1\\n\"\nassert solution(\"2 2\\n001\") == \"1\\n\"\nassert solution(\"3 3\\n011\") == \"1\\n\"\nassert solution(\"1 1\\n1\") == \"2\\n\"\n"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\\n\"\nassert solution(\"10 3\\n00001\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\") == \"15\\n\"\nassert solution(\"10 4\\n11111\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\") == \"27\\n\"\n"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 2\\n01001\\n2 4\\n3 5') == '6'\n"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\\n\") == \"6\\n\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"10 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"2 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"3 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"3 4\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"4 4\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 4\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"1 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"1 4\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"2 4\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"3 6\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"4 6\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 6\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"6 6\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"1 8\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"2 8\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"3 8\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"4 8\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 8\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"6 8\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"7 8\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"1 10\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"2 10\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"3 10\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"4 10\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 10\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"6 10\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"7 10\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"8 10\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"9 10\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"10 10\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"11 10\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"12 10\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"13 10\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"14 10\\n01001\\n2 4\\n"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\\n\") == \"6\\n\"\n"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\\n\"\n"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 6\nassert solution() == 13"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1 1 1 1\") == 6\nassert solution(\"1 2 1 2 1 2\") == 13"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1 1 1 1\") == \"6\"\nassert solution(\"1 2 1 2 1 2\") == \"13\""
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1 1 1 1\") == 6\nassert solution(\"1 2 1 2 1 2\") == 13"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1 1 1 1\") == \"6\"\nassert solution(\"1 2 1 2 1 2\") == \"13\""
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Your solution is incorrect.\"\n"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 1 1 1 1 1') == '6'\nassert solution('1 2 1 2 1 2') == '13'"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1 1 1 1\") == \"6\"\nassert solution(\"1 2 1 2 1 2\") == \"13\""
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1 1 1 1\") == 6\nassert solution(\"1 2 1 2 1 2\") == 13"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"1 1 1 1 1 1\"\"\"\n) == \"6\"\n\nassert solution(\n    \"\"\"1 2 1 2 1 2\"\"\"\n) == \"13\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n2 3 4 6 9') == '4'\nassert solution('9\\n1 2 3 5 6 7 8 9 10') == '4'"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\\n\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\\n\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\\n\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\\n\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n2 3 4 6 9') == '4\\n'\nassert solution('9\\n1 2 3 5 6 7 8 9 10') == '4\\n'"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\\n\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\\n\"\n"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 'Output\\n4', \"Test case 1 failed\"\n\nassert solution(input()) == 'Output\\n4', \"Test case 2 failed\"\n\nassert solution(input()) == 'Output\\n4', \"Test case 3 failed\"\n\nassert solution(input()) == 'Output\\n4', \"Test case 4 failed\"\n\nassert solution(input()) == 'Output\\n4', \"Test case 5 failed\"\n\nassert solution(input()) == 'Output\\n4', \"Test case 6 failed\"\n\nassert solution(input()) == 'Output\\n4', \"Test case 7 failed\"\n\nassert solution(input()) == 'Output\\n4', \"Test case 8 failed\"\n\nassert solution(input()) == 'Output\\n4', \"Test case 9 failed\"\n\nassert solution(input()) == 'Output\\n4', \"Test case 10 failed\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\\n\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\\n\"\nassert solution(\"5\\n2 3 4 6\") == \"2\\n\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 6 9 5\") == \"4\\n\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 6\") == \"2\\n\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 3 4 6 9\\n\") == \"4\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\\n\") == \"4\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_str) == output_str, f\"Test failed: {input_str}\\nExpected: {output_str}\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n') == 'SURGERY COMPLETE\\n'\nassert solution('2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n') == 'SURGERY COMPLETE\\n'\nassert solution('2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n') == 'SURGERY COMPLETE\\n'\nassert solution('2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n') == 'SURGERY COMPLETE\\n'\nassert solution('2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n') == 'SURGERY COMPLETE\\n'\nassert solution('2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\\n\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\"\nassert solution(\"1\\n4\\n1 2 3 4 5 E 6 7 8 9\") == \"SURGERY COMPLETE\\nDONE\"\nassert solution(\"1\\n2\\n2 3 4 5 E 6 7 8 9\") == \"SURGERY COMPLETE\\nDONE\"\nassert solution(\"1\\n2\\n2 3 4 5 E 6 7 8 9\\n10\") == \"SURGERY COMPLETE\\nDONE\"\nassert solution(\"1\\n2\\n2 3 4 5 E 6 7 8 9\\n10\\n11\") == \"SURGERY COMPLETE\\nDONE\"\nassert solution(\"1\\n2\\n2 3 4 5 E 6 7 8 9\\n10\\n11\\n12\") == \"SURGERY COMPLETE\\nDONE\"\nassert solution(\"1\\n2\\n2 3 4 5 E 6 7 8 9\\n10\\n11\\n12\\n13\") == \"SURGERY COMPLETE\\nDONE\"\nassert solution(\"1\\n2\\n2 3 4 5 E 6 7 8 9\\n10\\n11\\n12\\n13\\n14\") == \"SURGERY COMPLETE\\nDONE\"\nassert solution(\"1\\n2\\n2 3 4 5 E 6 7 8 9\\n10\\n11\\n12\\n13\\n14\\n15\") == \"SURGERY COMPLETE\\nDONE\"\nassert solution(\"1\\n2\\n2 3 4 5 E 6 7 8 9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\") == \"SURGERY COMPLETE\\nDONE\"\nassert solution(\"1\\n2\\n2 3 4 5 E 6 7 8 9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\") == \"SURGERY COMPLETE\\nDONE\"\nassert solution(\"1\\n2\\n2 3 4 5 E 6 7 8 9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\") == \"SURGERY COMPLETE\\nDONE\"\nassert solution(\"1\\n2\\n2 3 4 5 E 6 7 8 9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\") == \"SURGERY COMPLETE\\nDONE\"\nassert solution(\"1\\n2\\n2 3 4 5 E 6 7 8 9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\") == \"SURGERY COMPLETE\\nDONE\"\nassert solution(\"1\\n2\\n2 3 4 5 E 6 7 8 9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\") == \"SURGERY COMPLETE\\nDONE\"\nassert solution(\"1\\n2\\n2 3 4 5 E 6 7 8 9\\n1"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output\n\nexpected_output = \"\"\"SURGERY COMPLETE\"\"\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\\nSURGERY COMPLETE') == 'SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED'\n\nassert solution('2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\\nSURGERY FAILED') == 'SURGERY FAILED\\nDONE\\nDONE\\nDONE\\nDONE'"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n') == 'SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\\n'"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'DONE'\nassert solution(input()) == 'SURGERY FAILED'\nassert solution(input()) == 'SURGERY COMPLETE'"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\"\n"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('9 2 5') == '6 5 8 3 4 1 9 2 7', 'Test case 1'\nassert solution('3 2 1') == '1 2 3', 'Test case 2'"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '6 5 8 3 4 1 9 2 7\\n1 2 3\\n'"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\"\nassert solution(\"3 2 1\") == \"1 2 3\"\nassert solution(\"1 2 3\") == \"-1\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Test failed for input: {input()}, expected output: {output()}\"\n"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\"\nassert solution(\"3 2 1\") == \"1 2 3\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9 2 5\\n\") == \"6 5 8 3 4 1 9 2 7\"\nassert solution(\"3 2 1\\n\") == \"1 2 3 \""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('9 2 5') == '6 5 8 3 4 1 9 2 7'\nassert solution('3 2 1') == '1 2 3'\nassert solution('') == '-1'\n"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2 1\") == \"1 2 3\"\nassert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\"\nassert solution(\"-1\") == \"-1\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9 2 5\") == \"-1\\n\"\nassert solution(\"3 2 1\") == \"1 2 3\\n\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input_data)}\"\n"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 2) == 3\nassert solution(5, 1) == 5000000000\nassert solution(3, 2) == 2\nassert solution(4, 4) == 4"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 2\\n3 2 1\\n') == 3\nassert solution('5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n') == 5000000000\nassert solution('3 2\\n1 0 1\\n') == 2\nassert solution('4 4\\n2 8 4 1\\n') == 4"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 3\nassert solution(5, 1000000000, 1000000000, 1000000000, 1000000000) == 5000000000\nassert solution(3, 1, 0, 1) == 2\nassert solution(4, 2, 8, 4, 1) == 4"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n3 2 1\") == \"3\\n\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\") == \"5000000000\\n\"\nassert solution(\"3 2\\n1 0 1\") == \"2\\n\"\nassert solution(\"4 4\\n2 8 4 1\") == \"4\\n\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n3 2 1\") == \"3\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\") == \"5000000000\"\nassert solution(\"3 2\\n1 0 1\") == \"2\"\nassert solution(\"4 4\\n2 8 4 1\") == \"4\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 2) == 3\nassert solution(5, 1) == 5000000000\nassert solution(3, 2) == 2\nassert solution(4, 4) == 4"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n3 2 1\") == \"3\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\") == \"5000000000\"\nassert solution(\"3 2\\n1 0 1\") == \"2\"\nassert solution(\"4 4\\n2 8 4 1\") == \"4\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n3 2\n3 2 1\n''') == '3'\n\nassert solution('''\n5 1\n1000000000 1000000000 1000000000 1000000000 1000000000\n''') == '5000000000'\n\nassert solution('''\n3 2\n1 0 1\n''') == '2'\n\nassert solution('''\n4 4\n2 8 4 1\n''') == '4'"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\", \"First example\"\nassert solution(\"bwwbwwb\") == \"3\", \"Second example\"\n\nfrom typing import List"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"bwwwbwwbw\") == 5, \"Incorrect output. Expected 5, got {}\".format(solution(\"bwwwbwwbw\"))\nassert solution(\"bwwbwwb\") == 3, \"Incorrect output. Expected 3, got {}\".format(solution(\"bwwbwwb\"))"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\", \"The output should be 5.\"\nassert solution(\"bwwbwwb\") == \"3\", \"The output should be 3.\"\n"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\", \"Input 'bwwwbwwbw' should return 5.\"\nassert solution(\"bwwbwwb\") == \"3\", \"Input 'bwwbwwb' should return 3.\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"bwwwbwwbw\") == 5, \"Expected 5, got {}\".format(solution(\"bwwwbwwbw\"))\nassert solution(\"bwwbwwb\") == 3, \"Expected 3, got {}\".format(solution(\"bwwbwwb\"))"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"bwwwbwwbw\") == 5, \"Expected 5, got {}\".format(solution(\"bwwwbwwbw\"))\nassert solution(\"bwwbwwb\") == 3, \"Expected 3, got {}\".format(solution(\"bwwbwwb\"))"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"bwwwbwwbw\") == 5\nassert solution(\"bwwbwwb\") == 3"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\"\nassert solution(\"bwwbwwb\") == \"3\""
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\"\nassert solution(\"bwwbwwb\") == \"3\"\n"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"bwwwbwwbw\") == 5\nassert solution(\"bwwbwwb\") == 3"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 5\\n3 2\\n1 2\\n.....\\n.***.\\n...**\\n*....') == 10\nassert solution('4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....') == 7"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 5\\n3 2\\n1 2\\n.....\\n.***.\\n...**\\n*....\\n') == '10\\n'\nassert solution('4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n') == '7\\n'"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Input\\n4 5\\n3 2\\n1 2\\n.....\\n.***. \\n...** \\n*.... \\n\\nOutput\\n10\\n\\nInput\\n4 4\\n2 2\\n0 1\\n....\\n..*. \\n....\\n....\\n\\nOutput\\n7\") == \"10\\n7\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 10, \"The solution is not correct.\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\n3 2\\n1 2\\n.....\\n.***. \\n...**\\n*....\\n\") == 10\nassert solution(\"4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\") == 7"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\n3 2\\n1 2\\n.....\\n.***.\\n...**\\n*....\\n\") == 10\nassert solution(\"4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\") == 7\n"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\n3 2\\n1 2\\n.....\\n.***. \\n...**\\n*....\\n\") == 10, \"Test 1 failed\"\nassert solution(\"4 4\\n2 2\\n0 1\\n....\\n..*. \\n....\\n....\\n\") == 7, \"Test 2 failed\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\n3 2\\n1 2\\n.....\\n.***.\\n...**\\n*....\\n\") == \"10\"\nassert solution(\"4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\") == \"7\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\\n4 5\\n3 2\\n1 2\\n.....\\n.***. \\n...**\\n*....\\n\\nOutput\\n10\\n\\nInput\\n4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\\nOutput\\n7\") == 10, \"Expected 10, got {}\".format(solution(\"Input\\n4 5\\n3 2\\n1 2\\n.....\\n.***. \\n...**\\n*....\\n\\nOutput\\n10\\n\\nInput\\n4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\\nOutput\\n7\"))"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Input') == 'Output'"
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 4 2 2\\n\") == \"2\"\nassert solution(\"6\\n1 2 4 4 4 9\\n\") == \"2\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test Failed\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '2' # Test Case 1\n\nassert solution(stdin) == '2' # Test Case 2\n\nassert solution(stdin) == '2' # Test Case 3\n\nassert solution(stdin) == '2' # Test Case 4\n\nassert solution(stdin) == '2' # Test Case 5"
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Test {test_case} failed. Expected output: {expected_output}, Actual output: {solution(stdin)}\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == '''\n"
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 4 2 2\\n\") == \"2\"\nassert solution(\"6\\n1 2 4 4 4 9\\n\") == \"2\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 4 2 2\\n\") == \"2\\n\"\nassert solution(\"6 1 2 4 4 9\\n\") == \"2\\n\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Solution does not match. Expected: {expected}, Received: {solution(input())}\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n1 4 2 2\\n6\\n1 2 4 4 4 9\\n') == '2\\n'\nassert solution('6\\n1 2 4 4 4 9\\n') == '2\\n'"
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 1\\naba\") == \"7\\n\"\nassert solution(\"4 1 1\\nabcd\") == \"4\\n\"\nassert solution(\"4 10 1\\naaaa\") == \"12\\n\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Solution is {output()} but should be {solution(input())}\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aba\") == \"7\"\nassert solution(\"abcd\") == \"4\"\nassert solution(\"aaaa\") == \"12\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3 1\\naba\") == \"7\"\nassert solution(\"4 1 1\\nabcd\") == \"4\"\nassert solution(\"4 10 1\\naaaa\") == \"12\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 1\\naba\") == \"7\"\nassert solution(\"4 1 1\\nabcd\") == \"4\"\nassert solution(\"4 10 1\\naaaa\") == \"12\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aba\") == 7\nassert solution(\"abcd\") == 4\nassert solution(\"aaaa\") == 12"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('aba') == '7'\nassert solution('abcd') == '4'\nassert solution('aaaa') == '12'"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 1\\naba\") == \"7\"\nassert solution(\"4 1 1\\nabcd\") == \"4\"\nassert solution(\"4 10 1\\naaaa\") == \"12\"\nassert solution(\"4 1 1\\nabcd\") == \"4\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('aba') == '7', \"The output should be 7 but it's {}\".format(solution('aba'))\nassert solution('abcd') == '4', \"The output should be 4 but it's {}\".format(solution('abcd'))\nassert solution('aaaa') == '12', \"The output should be 12 but it's {}\".format(solution('aaaa'))\n\nfrom typing import List"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\") == \"1\\n\"\nassert solution(\"1 1\") == \"1\\n\"\nassert solution(\"1 2\") == \"1\\n2\\n\"\nassert solution(\"3 1\") == \"1\\n3\\n\"\nassert solution(\"1 3\") == \"1\\n3\\n\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 1') == '1'\nassert solution('5 2') == '10'\nassert solution('6 3') == '18'\nassert solution('1 1') == '1'\nassert solution('2 2') == '2'\nassert solution('2 3') == '6'\n\nfrom collections import deque"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\\n\", \"Please provide the correct input and output.\\n\"\n"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"7 1\") == \"2\"\nassert solution(\"5 2\") == \"1\"\nassert solution(\"7 2\") == \"3\"\nassert solution(\"5 3\") == \"2\"\nassert solution(\"7 3\") == \"3\"\nassert solution(\"5 4\") == \"3\"\nassert solution(\"7 4\") == \"4\"\nassert solution(\"5 5\") == \"4\"\nassert solution(\"7 5\") == \"5\"\nassert solution(\"5 6\") == \"5\"\nassert solution(\"7 6\") == \"6\"\nassert solution(\"5 7\") == \"6\"\nassert solution(\"7 7\") == \"7\"\nassert solution(\"5 8\") == \"7\"\nassert solution(\"7 8\") == \"8\"\nassert solution(\"5 9\") == \"8\"\nassert solution(\"7 9\") == \"9\"\nassert solution(\"5 10\") == \"9\"\nassert solution(\"7 10\") == \"10\"\nassert solution(\"5 11\") == \"10\"\nassert solution(\"7 11\") == \"11\"\nassert solution(\"5 12\") == \"11\"\nassert solution(\"7 12\") == \"12\"\nassert solution(\"5 13\") == \"12\"\nassert solution(\"7 13\") == \"13\"\nassert solution(\"5 14\") == \"13\"\nassert solution(\"7 14\") == \"14\"\nassert solution(\"5 15\") == \"14\"\nassert solution(\"7 15\") == \"15\"\nassert solution(\"5 16\") == \"15\"\nassert solution(\"7 16\") == \"16\"\nassert solution(\"5 17\") == \"16\"\nassert solution(\"7 17\") == \"17\"\nassert solution(\"5 18\") == \"17\"\nassert solution(\"7 18\") == \"18\"\nassert solution(\"5 19\") == \"18\"\nassert solution(\"7 19\") == \"19\"\nassert solution(\"5 20\") == \"19\"\nassert solution(\"7 20\") == \"20\"\nassert solution(\"5 21\") == \"20\"\nassert solution(\"7 21\") == \"21\"\nassert solution(\"5 22\") == \"21\"\nassert solution(\"7 22\") == \"22\"\nassert solution(\"5 23\") == \"22\"\nassert solution(\"7 23\") == \"23\"\nassert solution(\"5 24\") == \"23\"\nassert solution(\"7 24\") == \"24\"\nassert solution(\"5 25\") == \"24\"\nassert solution(\"7 25\") == \"25\"\nassert solution(\"5 26\") == \"25\"\nassert solution(\"7 26\") == \"26\"\nassert solution(\"5 27\") == \"26\"\nassert solution(\"7 27\") == \"27\"\nassert solution(\"5 28\") == \"27\"\nassert solution(\"7 28\") == \"28\"\nassert solution(\"5 29\") == \"28\"\nassert solution(\"7 29\") == \"29\"\nassert solution(\"5 30\") == \"29\"\nassert solution(\"7 30\") == \"30\"\nassert solution(\"5 31\") == \"30\"\nassert solution(\"7 31\") == \"31\"\nassert solution(\"5 32\") == \"31\"\nassert solution(\"7 32\") == \"32\"\nassert solution(\"5 33\") == \"32\"\nassert solution(\"7 33\") == \"33\"\nassert solution(\"5 34\") == \"33\"\nassert solution(\"7 34\") == \"34\"\nassert solution(\"5 35\") == \"34\"\nassert solution(\"7 35\") == \"35\"\nassert solution(\"5 36\") == \"35\"\nassert solution(\"7 36\") == \"36\"\nassert solution(\"5 37\") == \"36\"\nassert solution(\"7 37\") == \"37\"\nassert solution(\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 1\\n') == '1'\nassert solution('3 2\\n') == '2'\nassert solution('4 1\\n') == '1'\nassert solution('5 3\\n') == '3'\nassert solution('6 2\\n') == '2'"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"3 4\") == \"1\"\nassert solution(\"4 5\") == \"1\"\nassert solution(\"5 6\") == \"1\"\n\nassert solution(\"2 2\") == \"1\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"4 4\") == \"1\"\nassert solution(\"5 5\") == \"1\"\nassert solution(\"6 6\") == \"1\"\n\nassert solution(\"2 3\") == \"1\"\nassert solution(\"3 4\") == \"1\"\nassert solution(\"4 5\") == \"1\"\nassert solution(\"5 6\") == \"1\"\nassert solution(\"6 7\") == \"1\"\n\nassert solution(\"2 4\") == \"1\"\nassert solution(\"3 5\") == \"1\"\nassert solution(\"4 6\") == \"1\"\nassert solution(\"5 7\") == \"1\"\nassert solution(\"6 8\") == \"1\"\n\nassert solution(\"2 5\") == \"1\"\nassert solution(\"3 6\") == \"1\"\nassert solution(\"4 7\") == \"1\"\nassert solution(\"5 8\") == \"1\"\nassert solution(\"6 9\") == \"1\"\n\nassert solution(\"2 6\") == \"1\"\nassert solution(\"3 7\") == \"1\"\nassert solution(\"4 8\") == \"1\"\nassert solution(\"5 9\") == \"1\"\nassert solution(\"6 10\") == \"1\"\n\nassert solution(\"2 7\") == \"1\"\nassert solution(\"3 8\") == \"1\"\nassert solution(\"4 9\") == \"1\"\nassert solution(\"5 10\") == \"1\"\nassert solution(\"6 11\") == \"1\"\n\nassert solution(\"2 8\") == \"1\"\nassert solution(\"3 9\") == \"1\"\nassert solution(\"4 10\") == \"1\"\nassert solution(\"5 11\") == \"1\"\nassert solution(\"6 12\") == \"1\"\n\nassert solution(\"2 9\") == \"1\"\nassert solution(\"3 10\") == \"1\"\nassert solution(\"4 11\") == \"1\"\nassert solution(\"5 12\") == \"1\"\nassert solution(\"6 13\") == \"1\"\n\nassert solution(\"2 10\") == \"1\"\nassert solution(\"3 11\") == \"1\"\nassert solution(\"4 12\") == \"1\"\nassert solution(\"5 13\") == \"1\"\nassert solution(\"6 14\") == \"1\"\n\nassert solution(\"2 11\") == \"1\"\nassert solution(\"3 12\") == \"1\"\nassert solution(\"4 13\") == \"1\"\nassert solution(\"5 14\") == \"1\"\nassert solution(\"6 15\") == \"1\"\n\nassert solution(\"2 12\") == \"1\"\nassert solution(\"3 13\") == \"1\"\nassert solution(\"4 14\") == \"1\"\nassert solution(\"5 15\") == \"1\"\nassert solution(\"6 16\") == \"1\"\n\nassert solution(\"2 13\") == \"1\"\nassert solution(\"3 14\") == \"1\"\nassert solution(\"4 15\") == \"1\"\nassert solution(\"5 16\") == \"1\"\nassert solution(\"6 17\") == \"1\"\n\nassert solution(\"2 14\") == \"1\"\nassert solution(\"3 15\") == \"1\"\nassert solution(\"4 16\") == \"1\"\nassert solution(\"5 17\") == \"1\"\nassert solution(\"6 18\") == \"1\"\n\nassert solution(\"2 15\") == \"1\"\nassert solution(\"3 16\") == \"1\"\nassert solution(\"4 17\") == \"1\"\nassert solution(\"5 18\") == \"1\"\nassert solution(\"6 19\") == \"1\"\n\nassert solution(\"2 16\") == \"1\"\nassert solution(\"3 17\") == \"1\"\nassert solution(\"4 18\") == \"1\"\nassert solution(\"5 19\") == \"1\"\nassert solution(\"6 20\") == \"1\"\n\nassert solution(\"2 "
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == \"1\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\") == \"1\"\n"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '1', \"Invalid output\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 1') == '1'"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n2 2 2 2\") == \"8\\n\"\nassert solution(\"4 -3\\n3 -6 -3 12\") == \"3\\n\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n2 2 2 2\") == \"8\"\nassert solution(\"4 -3\\n3 -6 -3 12\") == \"3\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n2 2 2 2\\n\") == \"8\"\nassert solution(\"4 -3\\n3 -6 -3 12\\n\") == \"3\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n2 2 2 2\\n\") == \"8\"\nassert solution(\"4 -3\\n3 -6 -3 12\\n\") == \"3\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"8\\n\"\nassert solution(stdin) == \"3\\n\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n2 2 2 2\") == 8, \"4 2\"\nassert solution(\"4 -3\\n3 -6 -3 12\") == 3, \"4 -3\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 2\\n2 2 2 2') == 8\nassert solution('4 -3\\n3 -6 -3 12') == 3"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_str) == output_str, f\"Expected {output_str}, got {solution(input_str)}\" for input_str, output_str in [\n    (\"4 2\\n2 2 2 2\\n\", \"8\"),\n    (\"4 -3\\n3 -6 -3 12\\n\", \"3\"),\n]"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n2 2 2 2\") == 8\nassert solution(\"4 -3\\n3 -6 -3 12\") == 3"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Testcase failed. Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank') == '11'\nassert solution('4 2 1 300 1000\\nA\\nA aa\\nAA a') == '5'"
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\") == \"11\\n\"\nassert solution(\"4 2 1 300 1000\\na A\\nA aa\\naa AA\\nA a\") == \"5\\n\"\n"
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\\n\") == \"11\"\nassert solution(\"4 2 1 300 1000\\nA A\\nA aa\\naa AA\\nA AA\\n\") == \"5\"\nassert solution(\"5 3 2 1000 1000\\nAa Aa\\nAaa Aa\\nAa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa Aa\\nAaa"
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\") == \"11\"\nassert solution(\"4 2 1 300 1000\\na A\\nA aa\\naa AA\\nA a\") == \"5\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '11'\n\nsolution = '''\n"
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\") == \"11\\n\"\nassert solution(\"4 2 1 300 1000\\na A\\nA aa\\naa AA\\nA a\") == \"5\\n\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 5 3 1 8\nBerBank University\nUniversity BerMall\nUniversity BerBank\n\"\"\") == \"11\"\n\nassert solution(\"\"\"\n4 2 1 300 1000\na A\nA aa\naa AA\nAA a\n\"\"\") == \"5\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_str) == output_str, f\"Test failed for {input_str} and expected output {output_str}.\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution_input) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(solution_input)}\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '11\\n'\nassert solution(stdin) == '5\\n'"
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Input\\n4\\n1 1 1 4\\n') == 'YES\\n'\nassert solution('Input\\n5\\n1 1 5 2 1\\n') == 'NO\\n'\n"
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(r\"\"\"\n5\n1 1 5 2 1\n\"\"\") == \"YES\"\n\nassert solution(r\"\"\"\n4\n1 1 1 4\n\"\"\") == \"NO\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test failed: expected {output}, but got {solution(input())}\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 1 1 4\\n\") == \"YES\\n\"\nassert solution(\"5\\n1 1 5 2 1\\n\") == \"NO\\n\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4, 1, 1, 4) == \"YES\"\nassert solution(5, 1, 1, 5, 2, 1) == \"NO\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 4\\n5\\n1 1 5 2 1\\n\") == \"YES\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Input\\n4\\n1 1 1 4\") == \"YES\"\nassert solution(\"Input\\n5\\n1 1 5 2 1\") == \"NO\"\n"
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 1 1 4\\n\") == \"YES\\n\"\nassert solution(\"5\\n1 1 5 2 1\\n\") == \"NO\\n\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\") == \"-15\"\nassert solution(\"4\\n1 1 1 1\") == \"1\"\nassert solution(\"3\\n5 1 -5\") == \"-5\"\nassert solution(\"2\\n900 1000\") == \"1100\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, \"Expected output: {}\\nReceived output: {}\".format(output, solution(input()))"
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Input\\n5\\n10 5 0 -5 -10\") == \"-15\\n\"\nassert solution(\"Input\\n4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"Input\\n3\\n5 1 -5\") == \"-5\\n\"\nassert solution(\"Input\\n2\\n900 1000\") == \"1100\\n\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\\n\") == \"-15\\n\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"1\\n\"\nassert solution(\"3\\n5 1 -5\\n\") == \"-5\\n\"\nassert solution(\"2\\n900 1000\\n\") == \"1100\\n\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\\n\") == \"-15\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"1\"\nassert solution(\"3\\n5 1 -5\\n\") == \"-5\"\nassert solution(\"2\\n900 1000\\n\") == \"1100\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '''-15'''\nassert solution() == '''1'''\nassert solution() == '''-5'''\nassert solution() == '''1100'''"
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'Output\\n1100', \"Test Case 4 failed\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"For input {input()}, expected output {expected_output}, but got {solution(input())}.\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\") == \"-15\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"3\\n5 1 -5\") == \"-5\\n\"\nassert solution(\"2\\n900 1000\") == \"1100\\n\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\") == \"-15\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"3\\n5 1 -5\") == \"-5\\n\"\nassert solution(\"2\\n900 1000\") == \"1100\\n\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n\") == \"YES\"\nassert solution(\"1\\n1\\n2\\n\") == \"NO\"\nassert solution(\"2\\n1\\n2\\n3\\n\") == \"NO\"\nassert solution(\"3\\n1\\n2\\n3\\n4\\n\") == \"NO\"\nassert solution(\"5\\n1\\n2\\n3\\n4\\n5\\n\") == \"NO\"\nassert solution(\"6\\n1\\n2\\n3\\n4\\n5\\n6\\n\") == \"YES\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\\n2\\n1 2\\n\") == \"YES\\n\"\nassert solution(\"Input\\n3\\n1 2\\n2 3\\n\") == \"NO\\n\"\nassert solution(\"Input\\n5\\n1 2\\n1 3\\n1 4\\n2 5\\n\") == \"NO\\n\"\nassert solution(\"Input\\n6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"YES\\n\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Input\") == \"YES\"\nassert solution(\"Input\\n1 2\\n2 3\\n\") == \"NO\"\nassert solution(\"Input\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"NO\"\nassert solution(\"Input\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 6\\n\") == \"YES\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 2\\n\\n3\\n1 2\\n2 3\\n\\n5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\\n6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"YES\\nNO\\nYES\"\nassert solution(\"3\\n1 2\\n2 3\\n\\n5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\\n6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"NO\\nNO\\nYES\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\\n6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"NO\\nNO\\nYES\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('Input\\n2\\n1 2\\n\\nOutput\\nYES\\nInput\\n3\\n1 2\\n2 3\\n\\nOutput\\nNO\\nInput\\n5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\\nOutput\\nNO') == 'YES'\nassert solution('Input\\n3\\n1 2\\n2 3\\n\\nOutput\\nNO\\nInput\\n5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\\nOutput\\nYES') == 'NO'\nassert solution('Input\\n5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\\nOutput\\nYES\\nInput\\n6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\\nOutput\\nNO') == 'NO'"
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"YES\"\nassert solution(\"3\\n1 2\\n2 3\\n\") == \"NO\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"NO\"\nassert solution(\"6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"YES\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"YES\"\nassert solution(4) == \"NO\"\nassert solution(6) == \"YES\"\nassert solution(5) == \"NO\"\nassert solution(2) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(7) == \"NO\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'YES'"
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n2\n1 2\n''') == 'YES'\nassert solution('''\n3\n1 2\n2 3\n''') == 'NO'\nassert solution('''\n5\n1 2\n1 3\n1 4\n2 5\n2 6\n''') == 'NO'\nassert solution('''\n6\n1 2\n1 3\n1 4\n2 5\n2 6\n''') == 'YES'"
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"6\") == \"NO\"\nassert solution(\"7\") == \"NO\"\nassert solution(\"8\") == \"YES\"\nassert solution(\"9\") == \"YES\"\nassert solution(\"10\") == \"YES\"\nassert solution(\"11\") == \"NO\"\nassert solution(\"12\") == \"YES\"\nassert solution(\"13\") == \"NO\"\nassert solution(\"14\") == \"YES\"\nassert solution(\"15\") == \"YES\"\nassert solution(\"16\") == \"YES\"\nassert solution(\"17\") == \"YES\"\nassert solution(\"18\") == \"YES\"\nassert solution(\"19\") == \"YES\"\nassert solution(\"20\") == \"YES\"\nassert solution(\"21\") == \"YES\"\nassert solution(\"22\") == \"YES\"\nassert solution(\"23\") == \"YES\"\nassert solution(\"24\") == \"YES\"\nassert solution(\"25\") == \"YES\"\nassert solution(\"26\") == \"YES\"\nassert solution(\"27\") == \"YES\"\nassert solution(\"28\") == \"YES\"\nassert solution(\"29\") == \"YES\"\nassert solution(\"30\") == \"YES\"\nassert solution(\"31\") == \"YES\"\nassert solution(\"32\") == \"YES\"\nassert solution(\"33\") == \"YES\"\nassert solution(\"34\") == \"YES\"\nassert solution(\"35\") == \"YES\"\nassert solution(\"36\") == \"YES\"\nassert solution(\"37\") == \"YES\"\nassert solution(\"38\") == \"YES\"\nassert solution(\"39\") == \"YES\"\nassert solution(\"40\") == \"YES\"\nassert solution(\"41\") == \"YES\"\nassert solution(\"42\") == \"YES\"\nassert solution(\"43\") == \"YES\"\nassert solution(\"44\") == \"YES\"\nassert solution(\"45\") == \"YES\"\nassert solution(\"46\") == \"YES\"\nassert solution(\"47\") == \"YES\"\nassert solution(\"48\") == \"YES\"\nassert solution(\"49\") == \"YES\"\nassert solution(\"50\") == \"YES\"\nassert solution(\"51\") == \"YES\"\nassert solution(\"52\") == \"YES\"\nassert solution(\"53\") == \"YES\"\nassert solution(\"54\") == \"YES\"\nassert solution(\"55\") == \"YES\"\nassert solution(\"56\") == \"YES\"\nassert solution(\"57\") == \"YES\"\nassert solution(\"58\") == \"YES\"\nassert solution(\"59\") == \"YES\"\nassert solution(\"60\") == \"YES\"\nassert solution(\"61\") == \"YES\"\nassert solution(\"62\") == \"YES\"\nassert solution(\"63\") == \"YES\"\nassert solution(\"64\") == \"YES\"\nassert solution(\"65\") == \"YES\"\nassert solution(\"66\") == \"YES\"\nassert solution(\"67\") == \"YES\"\nassert solution(\"68\") == \"YES\"\nassert solution(\"69\") == \"YES\"\nassert solution(\"70\") == \"YES\"\nassert solution(\"71\") == \"YES\"\nassert solution(\"72\") == \"YES\"\nassert solution(\"73\") == \"YES\"\nassert solution(\"74\") == \"YES\"\nassert solution(\"75\") == \"YES\"\nassert solution(\"76\") == \"YES\"\nassert solution(\"77\") == \"YES\"\nassert solution(\"78\") == \"YES\"\nassert solution(\"79\") == \"YES\"\nassert solution(\"80\") == \"YES\"\nassert solution(\"81\") == \"YES\"\nassert solution(\"82\") == \"YES\"\nassert solution(\"83\") == \"YES\"\nassert solution(\"84\") == \"YES\"\nassert solution(\"85\") == \"YES\"\nassert solution(\"86\") == \"YES\"\nassert solution(\"87\") == \"YES\"\nassert solution(\"88\") == \"YES\"\nassert solution(\"89\") == \"YES\"\nassert solution(\"90\") == \"YES\"\nassert solution(\"91\") == \"YES\"\nassert solution(\"92\") == \"YES\"\nassert solution(\"93\") == \"YES\"\nassert solution(\"94\") == \"YES\"\nassert solution(\"95\") == \"YES\"\nassert solution(\"96\") == \"YES\"\nassert solution(\"97\") == \"YES\"\nassert solution(\"98\") == \""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\\n2\"\nassert solution() == \"0\\n2\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\\n2\\n3\\n\", \"Expected: '1\\n2\\n3\\n', but got: '{}'\".format(solution())"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 1\nassert solution(2) == 0"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\\n2\\n0\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '1', \"Your solution is incorrect.\"\n"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2 3\\n') == '1\\n2 '\nassert solution('2\\n2 6\\n') == '0\\n6'"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\", \"Output not correct\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 1\nassert solution(2) == 0\n\nfrom typing import List"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2 3\\n2\\n2 6\\n') == 1\nassert solution('2\\n2 6\\n') == 0"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\naab\\nbb\\nc\\nc\\nc\\n\") == \"6\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '6\\n', \"Incorrect output for sample input\""
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"6\\n\"\n"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aab\") == 6, \"Expected 6, got {}\".format(solution(\"aab\"))\nassert solution(\"ccb\") == 4, \"Expected 4, got {}\".format(solution(\"ccb\"))\nassert solution(\"aabcc\") == 14, \"Expected 14, got {}\".format(solution(\"aabcc\"))\nassert solution(\"abc\") == 5, \"Expected 5, got {}\".format(solution(\"abc\"))\nassert solution(\"abcd\") == 20, \"Expected 20, got {}\".format(solution(\"abcd\"))\n\nfrom typing import List"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '6\\n', \"The output is incorrect.\""
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\naab\\nccb\\n\") == \"6\"\nassert solution(\"5\\nbbb\\nbbb\\nbbb\\n\") == \"16\"\nassert solution(\"5\\nccc\\nddd\\neee\\n\") == \"1728\"\nassert solution(\"7\\naaa\\nbbb\\nccc\\nddd\\neee\\nfff\\n\") == \"1152921504606846976\"\n\nfrom typing import List"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"6\", \"Invalid output\""
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\naab\\ncab\\n') == '6'"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\naab\\nbbb\\n') == '6'\nassert solution('3\\ncde\\nadb\\n') == '6'\nassert solution('3\\nabb\\nbcd\\n') == '6'\nassert solution('3\\naac\\nbbb\\n') == '6'\nassert solution('3\\nabb\\nbcd\\n') == '6'\nassert solution('3\\naac\\nbbb\\n') == '6'"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\naab\\nccb\") == \"6\"\nassert solution(\"5\\nabb\") == \"0\"\nassert solution(\"1\\nabc\") == \"1\"\nassert solution(\"2\\naab\\nccc\") == \"2\"\nassert solution(\"1\\naaa\") == \"1\"\nassert solution(\"3\\naaa\\nbbb\") == \"2\"\nassert solution(\"1\\nabc\\n\") == \"1\"\nassert solution(\"4\\naaa\\nbbb\\nccc\") == \"2\"\nassert solution(\"1\\naaa\\naaa\") == \"1\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\\n\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\\n\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\\n\") == \"NO\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''100 100 5\n5 2 1 2 1''') == 'YES'\nassert solution('''100 8 5\n5 2 1 2 1''') == 'NO'\nassert solution('''100 100 7\n1 2 3 4 5 6 7''') == 'NO'"
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\") == \"NO\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"YES\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"NO\"\nassert solution(open(\"input3.txt\", \"r\").read()) == \"YES\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: solution({input()})!= expected_output, expected_output={expected_output}\"\n"
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\") == \"NO\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\\n\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\\n\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\\n\") == \"NO\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(100, 100, 5) == \"YES\"\nassert solution(100, 8, 5) == \"NO\"\nassert solution(100, 100, 7) == \"NO\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\\n\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\\n\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\\n\") == \"NO\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('100 100 5\\n5 2 1 2 1\\n') == 'YES'\nassert solution('100 8 5\\n5 2 1 2 1\\n') == 'NO'\nassert solution('100 100 7\\n1 2 3 4 5 6 7\\n') == 'NO'"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10 2\\n4 1 5 10\\n1 4 10 5') == '4'\nassert solution('7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3') == '3'"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\") == \"4\"\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\") == \"3\"\nassert solution(\"\") == \"0\"\nassert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\") == \"4\"\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\") == \"3\"\nassert solution(\"1 2 3 4 5\\n2 3 4 5 6\\n3 4 5 6 7\\n4 5 6 7 8\\n5 6 7 8 9\") == \"9\"\nassert solution(\"10 2\\n1 4 10 5\\n2 5 2 5\\n3 2 5 3\\n4 1 5 10\") == \"4\"\nassert solution(\"4 1 4 3\") == \"2\"\nassert solution(\"1 4 2 4\") == \"2\"\nassert solution(\"5 5 3 3 2\") == \"1\"\nassert solution(\"1 2 1 2 3\\n2 3 2 3 4\\n3 4 3 4 5\\n4 5 4 5 6\\n5 6 5 6 7\") == \"9\"\nassert solution(\"1 2 3 4 5\\n2 3 4 5 6\\n3 4 5 6 7\\n4 5 6 7 8\\n5 6 7 8 9\") == \"9\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\\n\") == \"4\"\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\\n\") == \"3\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10 2\\n4 1 5 10\\n1 4 10 5') == '4'\nassert solution('7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3') == '3'"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\\n\") == \"4\\n\"\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\\n\") == \"3\\n\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\\n\") == \"4\\n\"\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\\n\") == \"3\\n\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\\n\") == \"4\"\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\\n\") == \"3\"\nassert solution(\"10 3\\n4 1 5 10\\n1 4 10 5\\n\") == \"4\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n10 2\n4 1 5 10\n1 4 10 5\n\"\"\") == \"4\\n\"\n\nassert solution(\n\"\"\"\n7 6\n2 1 2 1\n4 2 4 3\n2 5 2 5\n2 3 5 3\n1 2 1 2\n3 2 5 3\n\"\"\") == \"3\\n\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10 2\\n4 1 5 10\\n1 4 10 5\\n') == '4'\nassert solution('7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\\n') == '3'"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\") == 4\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\") == 3"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Test failed: expected '{expected}', got '{solution(stdin)}'\"\n"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10\") == \"no\\nyes\\nyes\\nno\\nyes\"\nassert solution(\"5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10\") == \"no\\nyes\\nyes\\nno\\nyes\""
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 'yes'\nassert solution() == 'yes'\nassert solution() == 'yes'\nassert solution() == 'no'\nassert solution() == 'yes'\nassert solution() == 'yes'\nassert solution() == 'yes'"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('slime_orac.in').read()) == 'no\\nno\\nno\\nno\\n'\nassert solution(open('slime_orac.in').read()) == 'yes\\nyes\\nyes\\nno\\n'\nassert solution(open('slime_orac.in').read()) == 'yes\\nyes\\nyes\\nno\\n'\nassert solution(open('slime_orac.in').read()) == 'no\\nno\\nno\\nno\\n'"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10\") == \"no\\nyes\\nyes\\nno\\nyes\""
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10\") == \"no\\nyes\\nyes\\nno\\nyes\""
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Expected '{expected}', got '{solution(input())}'\"\n"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\"\nno\nyes\nyes\nno\nyes\n\"\"\""
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected_output"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n5\n5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10\n''') == 'no\\nno\\nno\\nno\\nno'\n\nassert solution('''\n5\n5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10\n''') == 'no\\nyes\\nyes\\nyes\\nyes\\nno\\nno\\nno'"
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\") == \"2\\n1 0 2 1 0\"\n\nassert solution(\"4 2\\n1 4\\n2 4\\n3 5\\n4 3\") == \"3\\n5 2 0 1\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\") == \"2\\n1 0 2 1 0\"\nassert solution(\"4 2\\n1 4\\n2 4\\n\") == \"3\\n5 2 0 1\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 2\n"
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n5 3\n1 3\n2 5\n4 5\n''') == '2'\n\nassert solution('''\n4 2\n1 4\n2 4\n''') == '3'\n\nassert solution('''\n1 1\n1 1\n1 1\n1 1\n''') == '1'\n\nassert solution('''\n3 1\n1 3\n2 4\n3 4\n4 4\n''') == '1'\n\nassert solution('''\n2 2\n1 2\n2 3\n3 3\n''') == '2'\n\nassert solution('''\n2 2\n1 2\n2 3\n3 4\n''') == '2'\n\nassert solution('''\n2 2\n1 2\n2 3\n3 4\n5 5\n''') == '2'\n\nassert solution('''\n2 2\n1 2\n2 3\n3 4\n5 6\n''') == '2'\n\nassert solution('''\n2 2\n1 2\n2 3\n3 4\n5 7\n''') == '2'\n\nassert solution('''\n2 2\n1 2\n2 3\n3 4\n5 8\n''') == '2'\n\nassert solution('''\n2 2\n1 2\n2 3\n3 4\n5 9\n''') == '2'\n\nassert solution('''\n2 2\n1 2\n2 3\n3 4\n5 10\n''') == '2'\n\nassert solution('''\n2 2\n1 2\n2 3\n3 4\n5 11\n''') == '2'\n\nassert solution('''\n2 2\n1 2\n2 3\n3 4\n5 12\n''') == '2'\n\nassert solution('''\n2 2\n1 2\n2 3\n3 4\n5 13\n''') == '2'\n\nassert solution('''\n2 2\n1 2\n2 3\n3 4\n5 14\n''') == '2'\n\nassert solution('''\n2 2\n1 2\n2 3\n3 4\n5 15\n''') == '2'\n\nassert solution('''\n2 2\n1 2\n2 3\n3 4\n5 16\n''') == '2'\n\nassert solution('''\n2 2\n1 2\n2 3\n3 4\n5 17\n''') == '2'\n\nassert solution('''\n2 2\n1 2\n2 3\n3 4\n5 18\n''') == '2'\n\nassert solution('''\n2 2\n1 2\n2 3\n3 4\n5 19\n''') == '2'\n\nassert solution('''\n2 2\n1 2\n2 3\n3 4\n5 20\n''') == '2'\n\nassert solution('''\n2 2\n1 2\n2 3\n3 4\n5 21\n''') == '2'\n\nassert solution('''\n2 2\n1 2\n2 3\n3 4\n5 22\n''') == '2'\n\nassert solution('''\n2 2\n1 2\n2 3\n3 4\n5 23\n''') == '2'\n\nassert solution('''\n2 2\n1 2\n2 3\n3 4\n5 24\n''') == '2'\n\nassert solution('''\n2 2\n1 2\n2 3\n3 4\n5 25\n''') == '2'\n\nassert solution('''\n2 2\n1 2\n2 3\n3 4\n5 26\n''') == '2'\n\nassert solution('''\n2 2\n1 2\n2 3\n3 4\n5 27\n''') == '2'\n\nassert solution('''\n2 2\n1 2\n2 3\n3 4\n5 28\n''') == '2'\n\nassert solution('''\n2 2\n1 2\n2 3\n3 4\n5 29\n''') == '2'\n\nassert solution('''\n2 2\n1 2\n2 3\n3 4\n5 30\n''') == '2'\n\nassert solution('''\n2"
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\\n\") == \"2\\n1 0 2 1 0\\n\"\n\nassert solution(\"4 2\\n1 4\\n2 4\\n\") == \"3\\n5 2 0 1\\n\"\n\nassert solution(\"5 3\\n1 3\\n2 5\\n4 5\\n\") == \"2\\n1 0 2 1 0\\n\"\n\nassert solution(\"4 2\\n1 4\\n2 4\\n\") == \"3\\n5 2 0 1\\n\"\n\nassert solution(\"5 3\\n1 3\\n2 5\\n4 5\\n\") == \"2\\n1 0 2 1 0\\n\"\n\nassert solution(\"4 2\\n1 4\\n2 4\\n\") == \"3\\n5 2 0 1\\n\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '2\\n1 0 2 1 0\\n3\\n5 2 0 1'"
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\") == \"2\\n1 0 2 1 0\\n\"\nassert solution(\"4 2\\n1 4\\n2 4\\n\") == \"3\\n5 2 0 1\\n\"\nassert solution(\"3 2\\n1 3\\n2 5\\n3 5\\n\") == \"3\\n1 2 0 1 0\\n\"\nassert solution(\"1 3\\n2 5\\n3 7\\n4 9\\n\") == \"2\\n1 0 2 1 0\\n\"\nassert solution(\"1 2\\n1 2\\n1 2\\n\") == \"0\\n1 0 0 0 0\\n\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\") == \"2\\n1 0 2 1 0\\n\"\nassert solution(\"4 2\\n1 4\\n2 4\") == \"3\\n5 2 0 1\\n\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str: pass\\n\"\n"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\\n\") == \"NO\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"YES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n\") == \"NO\"\n"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\\n\") == \"YES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"NO\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n\") == \"NO\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 3\n1 0 1\n2 1 3\n2 1 2\n2 2 3\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n3 3\n1 0 1\n3 1 2 3\n1 2\n2 1 3\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n3 3\n1 0 1\n3 1 2 3\n2 1 2\n1 3\n\"\"\") == \"YES\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\") == \"NO\\n\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"YES\\n\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n\") == \"NO\\n\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'YES' #expected output: YES\nassert solution(input()) == 'NO' #expected output: NO\n"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(example1) == \"NO\"\nassert solution(example2) == \"YES\"\nassert solution(example3) == \"NO\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n3 3\n1 0 1\n2 1 3\n2 1 2\n2 2 3\n''') == 'NO'\nassert solution('''\n3 3\n1 0 1\n3 1 2 3\n1 2\n2 1 3\n''') == 'YES'\nassert solution('''\n3 3\n1 0 1\n3 1 2 3\n2 1 2\n1 3\n''') == 'NO'\n"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3') == 'YES'\nassert solution('3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n') == 'NO'\nassert solution('3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n') == 'NO'"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\") == \"NO\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"YES\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\") == \"NO\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"YES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n\") == \"NO\""
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('(((#)((#)')) == '1\\n2\\n'\nassert solution('()((#((#(#()')) == '2\\n2\\n1\\n'\nassert solution('#') == '-1\\n'\nassert solution('#') == '-1\\n'\nassert solution('(#)') == '-1\\n')"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('(((#)((#)')) == 1) # Test case 1\nassert solution('()((#((#(#()')) == 2) # Test case 2\nassert solution('#') == -1 # Test case 3\nassert solution('(#)') == -1 # Test case 4\nassert solution('') == -1 # Test case 5"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"(((#)((#)\")) == \"1\\n2\\n\"\nassert solution(\"()((#((#(#()\")) == \"2\\n2\\n1\\n\"\nassert solution(\"#\") == \"-1\\n\"\nassert solution(\"#\") == \"-1\\n\"\nassert solution(\"()\") == \"-1\\n\""
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"(((#)((#)\")) == \"1\\n2\\n\"\nassert solution(\"()((#((#(#()\")) == \"2\\n2\\n1\\n\"\nassert solution(\"#\") == \"-1\\n\"\nassert solution(\"(#)\") == \"-1\\n\"\nassert solution(\"()\") == \"-1\\n\""
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"(((#)((#)\")) == \"1\\n2\\n\"\nassert solution(\"()((#((#(#()\")) == \"2\\n2\\n1\\n\"\nassert solution(\"#\") == \"-1\\n\"\nassert solution(\"(#)\") == \"-1\\n\"\nassert solution(\"()\") == \"-1\\n\"\n\nprint(\"All test cases pass!\")"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"(((#)((#)\")) == 1\nassert solution(\"()((#((#(#()\")) == 2\nassert solution(\"#\") == -1\nassert solution(\"(#)\") == -1"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"(((#)((#)\")) == \"1\\n2\\n\", \"(((#)((#)\"))\nassert solution(\"()((#((#(#()\")) == \"2\\n2\\n1\\n\", \"()((#((#(#()\"))\nassert solution(\"#\") == \"-1\\n\", \"#\")\nassert solution(\"(#)\") == \"-1\\n\", \"(#)\")"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"(((#)((#)\")) == \"1\\n2\\n\"\nassert solution(\"(())((#((#(#()\")) == \"2\\n2\\n1\\n\"\nassert solution(\"#\") == \"-1\\n\"\nassert solution(\"#((#))\") == \"-1\\n\"\nassert solution(\"(#)\") == \"-1\\n\""
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('(((#)((#)')) == '1\\n2\\n')\nassert solution('()((#((#(#()')) == '2\\n2\\n1\\n')\nassert solution('#') == '-1\\n'\nassert solution('(#)') == '-1\\n'"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"(((#)((#)\")) == 1\nassert solution(\"()((#((#(#()\")) == 2\nassert solution(\"#\") == -1\nassert solution(\"(#)\") == -1"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"No solutions for this problem\"\nassert solution(\"2 3\") == \"-1\"\nassert solution(\"4 0\") == \"16\"\nassert solution(\"0 4\") == \"-16\"\n"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"-1\\nxoxox\\n\"\nassert solution(\"4 0\") == \"16\\noooo\\n\"\nassert solution(\"0 4\") == \"-16\\nxxxx\\n\""
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('0 4') == '-16'\nassert solution('4 0') == '16'\nassert solution('2 3') == '-1'\nassert solution('6 2') == '4'\nassert solution('3 6') == '8'\n\nfrom typing import List"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == -1"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n4 0\\n0 4\\n\") == \"-1\\nxoxox\\n16\\noo\\n-16\\nxxxx\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Example usage:\\nassert solution(input()) == expected\\n\\nexpected = '-1\\nxoxox\\n16\\noo\\n-16\\nxxxx\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Example usage:\\nassert solution(input()) == expected\""
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Test failed with input {input()} and expected output {expected}\""
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '-1', 'Please provide the correct input'\nprint('-1')"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(r\"2 3\") == -1\nassert solution(r\"4 0\") == 16\nassert solution(r\"0 4\") == -16\nassert solution(r\"2 3\") == 34\nassert solution(r\"2 4\") == 16\nassert solution(r\"3 2\") == -16\nassert solution(r\"10 1\") == -16"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"-1\\nxoxox\"\nassert solution(\"4 0\") == \"16\\no\"\nassert solution(\"0 4\") == \"-16\\nx\""
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"-1\"\nassert solution(\"4 0\") == \"16\"\nassert solution(\"0 4\") == \"-16\""
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"17\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1\") == \"17\"\n"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1\") == \"17\", \"Test case failed.\"\nprint(\"All test cases passed.\")\n"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1\") == \"17\"\n"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 1 1') == '17'\n"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1\") == \"17\"\n"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1\") == \"17\"\n"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"17\"\nprint(\"All test cases pass!\")"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1\") == \"17\"\n"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"17\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n1 2 1\\n2 1 2\") == [2, 2, 2]\nassert solution(\"2 2\\n1 2\\n3 4\") == [2, 3]"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n1 2 1\\n2 1 2\\n\") == \"2 2 2 \\n2 2 2 \\n\"\nassert solution(\"2 2\\n1 2\\n3 4\\n\") == \"2 3 \\n3 2 \\n\"\nassert solution(\"1 1 1\\n2 2 2\\n3 3 3\\n\") == \"1 1 1 \\n2 2 2 \\n3 3 3 \\n\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n1 2 1\\n2 1 2\") == \"2 2 2\\n2 2 2\\n\"\nassert solution(\"2 2\\n1 2\\n3 4\") == \"2 3\\n3 2 \\n\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n1 2 1\\n2 1 2\\n\") == \"2 2 2\\n2 2 2\\n\"\nassert solution(\"2 2\\n1 2\\n3 4\\n\") == \"2 3\\n3 2\\n\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 3\\n1 2 1\\n2 1 2') == ['2 2 2 ', '2 2 2 ']\nassert solution('2 2\\n1 2\\n3 4') == ['2 3 ', '3 2 ']"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3\\n1 2 1\\n2 1 2') == ['2 2 2 ', '2 2 2 ']\nassert solution('2 2\\n1 2\\n3 4') == ['2 3 ', '3 2 ']"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"\"\"2 2 \n2 2 \n\n\"\"\"\n\nassert solution(stdin) == \"\"\"2 3 \n3 2 \n\"\"\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"\"\"2 2\n3 2\"\"\"\nassert solution == \"\"\"2 2\n3 2\"\"\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 2, \"Dora's answer is incorrect\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == ['2 2 2', '2 2 2', '2 2 2']"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 1\\n0 1\\n2 1\\n') == '332748119\\n332748119\\n'\nassert solution('1 2\\n1\\n1\\n') == '3\\n'\nassert solution('3 3\\n0 1 1\\n4 3 5\\n') == '160955686\\n185138929\\n974061117\\n'"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"332748119\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(input())) == str(332748119)\nassert solution(str(input())) == str(332748119)\nassert solution(str(input())) == str(160955686)\nassert solution(str(input())) == str(185138929)\nassert solution(str(input())) == str(974061117)"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 1\\n0 1\\n2 1\\n') == '332748119\\n332748119\\n'\n\nassert solution('1 2\\n1\\n1\\n') == '3\\n'\n\nassert solution('3 3\\n0 1 1\\n4 3 5\\n') == '160955686\\n185138929\\n974061117\\n'\n\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Your solution is incorrect. Please check the prompt and examples provided.\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\") == \"332748119\"\nassert solution(\"1 2\\n1\") == \"3\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\") == \"160955686\"\nassert solution(\"1 2\\n2 1 3\\n1 2 3\") == \"15\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"332748119\" # correct output\nassert solution() == \"3\" # correct output"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 2\\n1\\n1\\n') == '3\\n'\nassert solution('3 3\\n0 1 1\\n4 3 5\\n') == '160955686\\n185138929\\n974061117\\n'\nassert solution('2 1\\n0 1\\n2 1\\n') == '332748119\\n332748119\\n'\nassert solution('1 2\\n1\\n1\\n') == '3\\n'\nassert solution('3 3\\n0 1 1\\n4 3 5\\n') == '160955686\\n185138929\\n974061117\\n'"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n2 1\n0 1\n2 1\n''') == '''\n332748119\n332748119\n'''\n\nassert solution('''\n1 2\n1\n1\n''') == '''\n3\n'''\n\nassert solution('''\n3 3\n0 1 1\n4 3 5\n''') == '''\n160955686\n185138929\n974061117\n'''"
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 11, \"Your solution is incorrect. The output should be 11, but it is {}\".format(solution(3))\nassert solution(5) == 6, \"Your solution is incorrect. The output should be 6, but it is {}\".format(solution(5))\nassert solution(5) == 102, \"Your solution is incorrect. The output should be 102, but it is {}\".format(solution(5))"
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3 1 5 2 6\\n5\\n1 2 3 4 5\\n5\\n1 100 101 100 1\\n\") == \"11\\n\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n3 1 5 2 6\\n\") == \"11\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"6\"\nassert solution(\"5\\n1 100 101 100 1\\n\") == \"102\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"11\", \"The output of the code is not as expected.\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 11\nassert solution(5) == 11\nassert solution(1) == 6\nassert solution(5) == 6\nassert solution(100) == 102"
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3 1 5 2 6\\n5\\n1 2 3 4 5\\n5\\n1 100 101 100 1\\n5\\n3 4 5 6 7\\n\") == \"11\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n5\\n1 100 101 100 1\\n5\\n3 4 5 6 7\\n\") == \"6\\n\"\nassert solution(\"5\\n100 101 100 1 1\\n5\\n1 100 101 100 1\\n5\\n3 4 5 6 7\\n\") == \"102\\n\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n3 1 5 2 6\\n\") == \"11\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"6\\n\"\nassert solution(\"5\\n1 100 101 100 1\\n\") == \"102\\n\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == '11', 'Test 1'\nassert solution(5) == '11', 'Test 2'\nassert solution(5) == '6', 'Test 3'\nassert solution(5) == '102', 'Test 4'\nassert solution(5) == '6', 'Test 5'"
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 3\nassert solution(4) == 4\nassert solution(5) == 5"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"No\"\nassert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"No\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"Yes\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 1) == \"Yes\"\nassert solution(14, 2) == \"Yes\"\nassert solution(3, 2) == \"No\"\nassert solution(10, 5) == \"Yes\"\nassert solution(5, 13) == \"No\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\") == \"Yes\\n\"\nassert solution(\"3 1\\n1 3\\n2 3\") == \"No\\n\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\") == \"Yes\\n\"\nassert solution(\"3 1\\n1 3\\n2 3\") == \"No\\n\"\n"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 'Yes'\nassert solution() == 'No'\n"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\") == \"Yes\"\nassert solution(\"3 1\\n1 3\\n2 3\") == \"No\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == output, f\"Expected {output}, got {solution(input)}\" for input, output in [\n    [14, 2],\n    [1, 4],\n    [2, 4],\n    [3, 4],\n    [4, 13],\n    [10, 5],\n    [11, 5],\n    [12, 5],\n    [14, 5],\n    [5, 13],\n    [6, 7],\n    [8, 6],\n    [13, 6],\n    [9, 6],\n]"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6') == 'Yes\\n'\nassert solution('3 1\\n1 3\\n2 3') == 'No\\n'"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 3) == 1\nassert solution(4, 2) == -1\nassert solution(4, 5) == 2\nassert solution(2, 1) == -1\nassert solution(3, 5) == 0"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3\\n###\\n##.\\n\\n4 2\\n##\\n.#\\n.#\\n##\\n\\n4 5\\n....#\\n####.\\n.###.\\n.#...\\n\\n2 1\\n. \\n# \\n\\n3 5\\n.....\\n.....\\n.....\\n\\n') == '1'\nassert solution('4 2\\n##\\n.#\\n.#\\n##\\n\\n4 5\\n....#\\n####.\\n.###.\\n.#...\\n\\n2 1\\n. \\n# \\n\\n3 5\\n.....\\n.....\\n.....\\n') == '-1'\nassert solution('4 5\\n....#\\n####.\\n.###.\\n.#...\\n\\n2 1\\n. \\n# \\n\\n3 5\\n.....\\n.....\\n.....\\n') == '2'\nassert solution('2 1\\n. \\n# \\n\\n3 5\\n.....\\n.....\\n.....\\n') == '-1'\n"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(example_input1) == \"1\"\nassert solution(example_input2) == \"2\"\nassert solution(example_input3) == \"0\"\nassert solution(example_input4) == \"-1\"\nassert solution(example_input5) == \"-1\""
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Expected output '{output}', got '{solution(input())}'\""
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n.#.\\n###\\n##.\\n\\n4 2\\n##\\n.#\\n.#\\n##\\n\\n4 5\\n....#\\n####. \\n.###.\\n.#...\\n\\n2 1\\n.\\n# \\n\\n3 5\\n.....\\n.....\\n.....\\n\\n0\") == \"1\"\nassert solution(\"4 2\\n##\\n.#\\n.#\\n##\\n\\n4 5\\n....#\\n####. \\n.###.\\n.#...\\n\\n2 1\\n.\\n# \\n\\n3 5\\n.....\\n.....\\n.....\\n\\n0\") == \"-1\"\nassert solution(\"2 1\\n. \\n# \\n\\n3 5\\n.....\\n.....\\n.....\\n\\n0\") == \"-1\""
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_string) == output_string, \"Your solution is incorrect.\"\nfor test in [input_string, \"3\\n###\\n##. \\n\\n\\n2\\n\\n\\n\\n\\n1\\n\\n\\n\\n\\n\\n\\n\", \"4\\n##\\n.#\\n.#\\n##\\n\", \"2\\n#\\n\", \"3\\n.....\\n.....\\n.....\\n\\n\", \"4\\n....#\\n####.\\n.###.\\n.#...\"]:\n    assert solution(test) == output_string, f\"Test {test} failed.\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n3 3\n.#.\n###\n##.\n''') == '1'\nassert solution('''\n4 2\n##\n.#\n.#\n##\n''') == '-1'\nassert solution('''\n4 5\n....#\n####.\n.###.\n.#...\n''') == '2'\nassert solution('''\n2 1\n.\n"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n#.\\n###\\n##.\\n\\n4 2\\n##\\n.#\\n.#\\n##\\n\\n4 5\\n....#\\n####. \\n.###. \\n.#... \\n\\n2 1\\n. \\n# \\n\\n3 5\\n.....\\n.....\\n.....\\n\\n\") == \"1\"\nassert solution(\"4 2\\n##\\n.#\\n.#\\n##\\n\\n4 5\\n....#\\n####. \\n.###. \\n.#... \\n\\n2 1\\n. \\n# \\n\\n3 5\\n.....\\n.....\\n.....\\n\\n\") == \"-1\"\nassert solution(\"4 5\\n....#\\n####. \\n.###. \\n.#... \\n\\n2 1\\n. \\n# \\n\\n3 5\\n.....\\n.....\\n.....\\n\\n\") == \"2\"\nassert solution(\"2 1\\n. \\n# \\n\\n3 5\\n.....\\n.....\\n.....\\n\\n\") == \"-1\"\nassert solution(\"3 5\\n.....\\n.....\\n.....\\n\\n\") == \"0\"\n"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"3 3\n.#.\n###\n##.\"\"\") == \"1\"\nassert solution(\"\"\"4 2\n##\n.#\n.#\n##\"\"\") == \"0\"\nassert solution(\"\"\"4 5\n....#\n####.\n.###.\n.#...\"\"\") == \"-1\"\nassert solution(\"\"\"2 1\n.\n"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"YES\\n1 2 2 3\\nYES\\n10 10 10\\nNO\\n5 4 2\\n\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\\n4 3\\n1 0 2 3\\nOutput\\nYES\\n1 2 2 3\\n\\nInput\\n3 10\\n10 10 10\\nOutput\\nYES\\n10 10 10\\n\\nInput\\n5 6\\n6 5 6 2 2\\nOutput\\nNO\\n\\nInput\\n3 5\\n0 0 0\\nOutput\\nYES\\n5 4 2\") == \"YES\\n1 2 2 3\\nYES\\n5 4 2\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 3\\n1 0 2 3\\n') == 'YES\\n1 2 2 3\\n'\nassert solution('3 10\\n10 10 10\\n') == 'YES\\n10 10 10 \\n'\nassert solution('5 6\\n6 5 6 2 2\\n') == 'NO\\n'\nassert solution('3 5\\n0 0 0\\n') == 'YES\\n5 4 2\\n'\n"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 3\\n1 0 2 3\\n\\n3 10\\n10 10 10\\n\\n5 6\\n6 5 6 2 2\\n\\n3 5\\n0 0 0\\n\\nYES\\n1 2 2 3\\nYES\\n10 10 10\\nYES\\n5 4 2') == 'YES\\n1 2 2 3\\nYES\\n10 10 10\\nYES\\n5 4 2'"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"YES\\n1 2 2 3\\nYES\\n10 10 10\\nNO\\n5 4 2\"\n"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n1 0 2 3\\n\") == \"YES\\n1 2 2 3\"\nassert solution(\"3 10\\n10 10 10\\n\") == \"YES\\n10 10 10\"\nassert solution(\"5 6\\n6 5 6 2 2\\n\") == \"NO\"\nassert solution(\"3 5\\n0 0 0\\n\") == \"YES\\n5 4 2\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('Input\\n4 3\\na 1 0 2 3\\nOutput\\nYES\\n1 2 2 3\\n\\nInput\\n3 10\\na 10 10 10\\nOutput\\nYES\\n10 10 10 \\n\\nInput\\n5 6\\na 6 5 6 2 2\\nOutput\\nNO\\n\\nInput\\n3 5\\na 0 0 0\\nOutput\\nYES\\n5 4 2') == 'YES\\n1 2 2 3\\nNO\\n\\n10 10 10'"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 3\\n1 0 2 3\\n') == 'YES\\n1 2 2 3\\n'\nassert solution('3 10\\n10 10 10\\n') == 'YES\\n10 10 10\\n'\nassert solution('5 6\\n6 5 6 2 2\\n') == 'NO\\n'\nassert solution('3 5\\n0 0 0\\n') == 'YES\\n5 4 2\\n'"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 0 2 3\") == \"YES\\n1 2 2 3\"\nassert solution(\"3 10\") == \"YES\\n10 10 10\"\nassert solution(\"5 6\") == \"NO\"\nassert solution(\"3 5\") == \"YES\\n5 4 2\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n1 0 2 3\\n\") == \"YES\\n1 2 2 3\\n\"\nassert solution(\"3 10\\n10 10 10\\n\") == \"YES\\n10 10 10\\n\"\nassert solution(\"5 6\\n6 5 6 2 2\\n\") == \"NO\\n\"\nassert solution(\"3 5\\n0 0 0\\n\") == \"YES\\n5 4 2\\n\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"No solution\\n\", \"Test case 1\"\nassert solution(\"2\\n1 1 1 1\") == \"1 1\\n\", \"Test case 2\"\nassert solution(\"1\\n42\") == \"42 42\\n\", \"Test case 3\"\nassert solution(\"2\\n1 2 3 4\") == \"1 1\\n1 2\\n\", \"Test case 4\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1 1 1 1\\n\", \"Test case 5\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\", \"Test failed\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\") == \"4 3 6 2\"\nassert solution(\"1\\n42\") == \"42 42\"\nassert solution(\"2\\n1 1 1 1\") == \"1 1\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\\n1\\n42\\n2\\n1 1 1 1\\n\") == \"4 3 6 2\\n42\\n1 1 1 1\\n\"\nassert solution(\"1\\n42\\n2\\n1 1 1 1\\n\") == \"42  \"\nassert solution(\"2\\n1 1 1 1\\n\") == \"1 1\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"4 3 6 2\\n42\\n1 1\\n1 1\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\") == \"4 3 6 2\"\nassert solution(\"1\\n42\") == \"42  \"\nassert solution(\"2\\n1 1 1 1\") == \"1 1\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"The expected output is {expected_output}, but got {solution(input())} instead.\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\") == \"4 3 6 2\\n\"\nassert solution(\"1\\n42\") == \"42 42\\n\"\nassert solution(\"2\\n1 1 1 1\") == \"1 1\\n\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"4 3 6 2\\n42\\n1 1\\n1 1\", \"Expected output not found.\"\n"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\") == \"3\\n\"\nassert solution(\"3\\n1 1\\n2 1\\n3 1\") == \"6\\n\"\nassert solution(\"4\\n2 1\\n2 2\\n3 1\\n3 2\") == \"6\\n\"\nassert solution(\"3\\n1 1\\n2 1\\n3 1\") == \"3\\n\"\nassert solution(\"4\\n2 1\\n2 2\\n3 1\\n3 2\") == \"6\\n\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\") == \"3\\n\"\nassert solution(\"3\\n1 1\\n2 1\\n3 1\") == \"6\\n\"\nassert solution(\"4\\n2 1\\n2 2\\n3 1\\n3 2\") == \"6\\n\"\nassert solution(\"10\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\") == \"6\\n\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\") == \"3\\n6\\n\"\nassert solution(\"4\\n2 1\\n2 2\\n3 1\\n3 2\") == \"6\\n\"\nassert solution(\"3\\n1 1\\n2 1\\n3 1\\n4 1\") == \"6\\n\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Test failed: solution({stdin}) == '{expected}', expected '{expected}'\"\nfor i, example in enumerate([\n    (3, 3),\n    (3, 2),\n    (4, 2),\n    (4, 1),\n    (3, 1),\n]):\n    assert solution(f\"Example {i+1}\") == str(example[0]), f\"Test failed for example {i+1}\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n1 1\\n1 2\\n1 3\\n') == '3\\n'\nassert solution('3\\n1 1\\n2 1\\n3 1\\n') == '6\\n'\nassert solution('4\\n2 1\\n2 2\\n3 1\\n3 2\\n') == '6\\n'"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 6, \"The solution is incorrect.\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\") == \"3\\n\"\nassert solution(\"3\\n1 1\\n2 1\\n3 1\") == \"6\\n\"\nassert solution(\"4\\n2 1\\n2 2\\n3 1\\n3 2\") == \"6\\n\"\n"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\") == \"3\\n\", \"Example 1\"\nassert solution(\"3\\n1 1\\n2 1\\n3 1\") == \"6\\n\", \"Example 2\"\nassert solution(\"4\\n2 1\\n2 2\\n3 1\\n3 2\") == \"6\\n\", \"Example 3\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Test failed: {expected}, but got {solution(input())}\"\nfor _ in range(10):\n    n, k = map(int, input().split())\n    l, r, a = map(int, input().split())\n    count = 0\n    for i in range(n):\n        x, y = map(int, input().split())\n        if l <= x <= r and y > a:\n            count += 1\n    print(count)"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == '3'\nassert solution(4) == '6'\nassert solution(3) == solution(4) == '6'\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    3\n        .E.\n        E.E\n        .E.\n        ''') == '''\n    1 1\n    2 2\n    3 3\n        '''\n\nassert solution('''\n    3\n        EEE\n        E..\n        E.E\n        ''') == '''\n-1\n        '''\n\nassert solution('''\n    5\n        EE.EE\n        E.EE.\n        E...E\n        .EE.E\n        EE.EE\n        ''') == '''\n    3 3\n        '''"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n.E.\\ne.E.\\n.E.\\n\") == \"1 1\\n2 2\\n3 3\\n\"\nassert solution(\"3\\nEEE\\ne..\\ne.E.\\n\") == \"-1\\n\"\nassert solution(\"5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n\") == \"3 3\\n1 3\\n2 2\\n4 4\\n5 3\\n\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''3\n.E.\nE.E\n.E.''') == '''1 1\n2 2\n3 3'''\n\nassert solution('''3\nEEE\nE..\nE.E\n''') == '''-1'''\n\nassert solution('''5\nEE.EE\nE.EE.\nE...E\n.EE.E\nEE.EE\n''') == '''3 3\n1 3\n2 2\n4 4\n5 3'''"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n.E.\\nE.E\\n.E.\\n\") == \"1 1\\n2 2\\n3 3\\n\"\nassert solution(\"3\\nEEE\\nE..\\nE.E\\n\") == \"-1\\n\"\nassert solution(\"5\\nEE.EE\\nE.EE.\\nE...E\\n.EE.E\\nEE.EE\\n\") == \"3 3\\n1 3\\n2 2\\n4 4\\n5 3\\n\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n.E.\\nE.E.\\n.E.\\n\") == \"1 1\\n2 2\\n3 3\\n\"\nassert solution(\"3\\nEEE\\nE..\\nE.E\\n\") == \"-1\\n\"\nassert solution(\"5\\nEE.EE\\nE.EE.\\nE...E\\n.EE.E\\nEE.EE\\n\") == \"3 3\\n1 3\\n2 2\\n4 4\\n5 3\\n\"\n"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Output\\n1 1\\n2 2\\n3 3\\n\"\nassert solution(input()) == \"Output\\n-1\\n\"\nassert solution(input()) == \"Output\\n3 3\\n1 3\\n2 2\\n4 4\\n5 3\\n\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n.E.\\nE.E\\n.E.\\n\") == \"1 1\\n2 2\\n3 3\\n\"\nassert solution(\"3\\nEEE\\nE..\\nE.E\\n\") == \"-1\\n\"\nassert solution(\"5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n\") == \"3 3\\n1 3\\n2 2\\n4 4\\n5 3\\n\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output() for input, output in zip(sample_input(), sample_output())"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n.E.\\ne.E\\n.E.\\n') == '1 1\\n2 2\\n3 3\\n'\nassert solution('3\\nEEE\\nE..\\nE.E\\n') == '-1\\n'\nassert solution('5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n') == '3 3\\n1 3\\n2 2\\n4 4\\n5 3\\n'"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n.E.\\nE.E\\n.E.\\n\") == \"1 1\\n2 2\\n3 3\"\nassert solution(\"3\\nEEE\\nE..\\nE.E\\n\") == \"-1\"\nassert solution(\"5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n\") == \"3 3\\n1 3\\n2 2\\n4 4\\n5 3\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(r\"\"\"\n    10 2\n    10 -1 2 2 2 2 2 2 -1 10\n    5 10\n    -1 -1 -1 -1 -1\n\"\"\") == \"32\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"32\", \"Output not as expected\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Test failed for input {stdin}\"\n"
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '32'"
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Output\\n32\\n\", \"Test case failed\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"32\"\n"
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt')) == \"32\"\nassert solution(open('input_5.txt')) == \"-1\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test Case {test_case} failed. Output: {output}, Expected: {output}\"\n"
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == output, f\"Test failed. Expected output: {output}, got: {solution(stdin)}\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"32\"\n"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 1 2\\n1 1 1\\n') == '3\\n'\nassert solution('4 2 3\\n1 2 4 8\\n') == '79\\n'"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1 2\\n1 1 1\\n\") == \"3\\n\"\nassert solution(\"4 2 3\\n1 2 4 8\\n\") == \"79\\n\"\n"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 1 2\\n1 1 1\\n') == '3\\n'\nassert solution('4 2 3\\n1 2 4 8\\n') == '79\\n'"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 1, 2) == 3\nassert solution(4, 2, 3) == 79\n"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 2\\n1 1 1\") == \"3\\n\"\nassert solution(\"4 2 3\\n1 2 4 8\") == \"79\\n\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1 2\") == \"3\"\nassert solution(\"4 2 3\") == \"79\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '3'"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1 2\\n1 1 1\\n\") == \"3\\n\"\nassert solution(\"4 2 3\\n1 2 4 8\\n\") == \"79\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 2\\n1 1 1\\n\") == \"3\"\nassert solution(\"4 2 3\\n1 2 4 8\\n\") == \"79\"\n\nfor test_case in [(\"3 1 2\", \"3\"), (\"4 2 3\", \"79\")]:\n    assert solution(test_case[0]) == test_case[1]"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 1 2') == '3'\nassert solution('4 2 3') == '79'"
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"5 5\\n\") == \"10\\n10\\n5\\n10\\n10\"\nassert solution(\"1 1\\n\") == \"2\\n2\\n1\\n2\\n2\"\nassert solution(\"2 2\\n\") == \"6\\n6\\n2\\n6\\n6\"\nassert solution(\"1 2\\n\") == \"2\\n2\\n1\\n2\\n2\"\nassert solution(\"1 3\\n\") == \"1\\n1\\n1\\n1\\n1\"\nassert solution(\"1 4\\n\") == \"1\\n1\\n1\\n1\\n1\"\nassert solution(\"2 3\\n\") == \"2\\n2\\n2\\n2\\n2\"\nassert solution(\"3 4\\n\") == \"3\\n3\\n3\\n3\\n3\"\nassert solution(\"4 5\\n\") == \"4\\n4\\n4\\n4\\n4\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n\") == \"7\\n7\\n4\\n7\\n7\"\n"
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\n') == '7\\n7\\n4\\n7\\n7\\n'"
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"5 3\") == \"16\\n16\\n12\\n16\\n16\"\nassert solution(\"10 3\") == \"720\\n720\\n360\\n720\\n720\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n\") == \"7\\n7\\n4\\n7\\n7\\n7\"\nassert solution(\"4 3\\n\") == \"4\\n4\\n4\\n4\"\nassert solution(\"5 3\\n\") == \"7\"\nassert solution(\"10 3\\n\") == \"7\\n15\\n16\\n15\\n11\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3') == '7\\n7\\n4\\n7\\n7\\n'\nassert solution('5 6') == '12\\n12\\n8\\n12\\n12\\n'\nassert solution('7 7') == '20\\n20\\n15\\n20\\n20\\n'\nassert solution('1 2') == '6\\n6\\n4\\n6\\n6\\n'\nassert solution('1 10') == '90\\n90\\n75\\n90\\n90\\n'"
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n\") == \"7\\n7\\n4\\n7\\n7\\n\"\n"
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"7\\n7\\n4\\n7\\n7\", \"Incorrect output\"\n"
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"No input given\"\nassert solution(\"1 2\\n3 3\\n\") == \"No input given\"\nassert solution(\"3 3\\n\") == \"No input given\"\nassert solution(\"3 2\\n\") == \"No input given\"\nassert solution(\"4 3\\n\") == \"No input given\"\n\nK, N = map(int, input().split())\n\nresult = []\n\nfor i in range(1, K + 1):\n    if i % 2 == 1:\n        for j in range(1, N + 1):\n            if i == j:\n                continue\n            if sum(set(range(1, K + 1)) - set([i])) == j:\n                result.append(i)\n                break\n\nfor t in range(1, 2 * K - 1):\n    print(result[t - 1])\n"
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"7\\n7\\n4\\n7\\n7\", \"Your code is incorrect.\"\n"
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\") == \"6\"\nassert solution(\"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\") == \"9\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\") == \"6\"\nassert solution(\"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\") == \"9\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\") == \"6\\n\"\nassert solution(\"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\") == \"9\\n\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\\n') == '6\\n'\nassert solution('9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\\n') == '9\\n'\n\nfrom typing import List"
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6') == '6'\nassert solution('9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8') == '9'"
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\\n\") == \"6\\n\"\nassert solution(\"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\\n\") == \"9\\n\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n    7 2\n    1 5 6 2\n    1 3\n    3 2\n    4 5\n    3 7\n    4 3\n    4 6\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\n    9 3\n    3 2 1 6 5 9\n    8 9\n    3 2\n    2 7\n    3 4\n    7 6\n    4 5\n    2 1\n    2 8\n\"\"\") == \"9\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\") == \"6\"\nassert solution(\"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\") == \"9\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\\n\") == \"6\"\nassert solution(\"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\\n\") == \"9\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3\\n3 1 3 4\\n3 2 5 6\\n1 7\\n-1\"\n"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('0010100') == 3\nassert solution('111') == -1"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0010100\") == 3\nassert solution(\"111\") == -1"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\\n3 1 3 4\\n3 2 5 6\\n1 7\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('0010100') == '3\\n3 1 3 4\\n3 2 5 6\\n1 7'"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got {solution(input())}.\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0010100\") == 3, \"Output not correct\"\nassert solution(\"111\") == -1, \"Output not correct\"\nassert solution(\"01011010\") == 2, \"Output not correct\"\nassert solution(\"0111110\") == 1, \"Output not correct\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3\"\nassert solution(\"0010100\") == \"3\\n3 1 3 4\\n3 2 5 6\\n1 7\"\nassert solution(\"111\") == \"-1\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0010100\") == \"3\\n3 1 3 4\\n3 2 5 6\\n1 7\"\n\nassert solution(\"111\") == \"-1\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0010100\") == \"3\\n3 1 3 4\\n3 2 5 6\\n1 7\"\nassert solution(\"111\") == \"-1\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\"\nassert solution() == \"6\"\nassert solution() == \"2\"\nassert solution() == \"1\"\nassert solution() == \"24\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 'Output\\n1\\n'\nassert solution(input()) == 'Output\\n6\\n'\nassert solution(input()) == 'Output\\n2\\n'\nassert solution(input()) == 'Output\\n1\\n'\nassert solution(input()) == 'Output\\n24\\n'"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 3\\n2 1 2\\n2 2 3\\n') == '1\\n'\nassert solution('1 3\\n3 1 2 3\\n') == '6\\n'\nassert solution('2 4\\n2 1 2\\n3 2 3 4\\n') == '2\\n'\nassert solution('2 2\\n3 2 2 1\\n2 1 2\\n') == '1\\n'\nassert solution('3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n') == '24\\n'"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n2 1 2\\n2 2 3\\n\") == \"1\\n\"\nassert solution(\"1 3\\n3 1 2 3\\n\") == \"6\\n\"\nassert solution(\"2 4\\n2 1 2\\n3 2 3 4\\n\") == \"2\\n\"\nassert solution(\"2 2\\n3 2 2 1\\n2 1 2\\n\") == \"1\\n\"\nassert solution(\"3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n\") == \"24\\n\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 3\\n2 1 2\\n2 2 3\\n') == '1\\n'\nassert solution('1 3\\n3 1 2 3\\n') == '6\\n'\nassert solution('2 4\\n2 1 2\\n3 2 3 4\\n') == '2\\n'\nassert solution('2 2\\n3 2 2 1\\n2 1 2\\n') == '1\\n'\nassert solution('3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n') == '24\\n'"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    2 3\n    2 1 2\n    2 2 3\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    1 3\n    3 1 2 3\n    \"\"\"\n) == \"6\\n\"\n\nassert solution(\n    \"\"\"\n    2 4\n    2 1 2\n    3 2 3 4\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    2 2\n    3 2 2 1\n    2 1 2\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    3 7\n    2 1 2\n    2 3 4\n    3 5 6 7\n    \"\"\"\n) == \"24\\n\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n2 1 2\\n2 2 3\") == \"1\\n\"\nassert solution(\"1 3\\n3 1 2 3\\n\") == \"6\\n\"\nassert solution(\"2 4\\n2 1 2\\n3 2 3 4\\n\") == \"2\\n\"\nassert solution(\"2 2\\n3 2 2 1\\n2 1 2\\n\") == \"1\\n\"\nassert solution(\"3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n\") == \"24\\n\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\\n\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Test case {tc_count} failed: Expected {expected}, but got {solution(input())}.\"\ntc_count += 1"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 3\\n2 1 2\\n2 2 3') == '1'\nassert solution('1 3\\n3 1 2 3\\n') == '6'\nassert solution('2 4\\n2 1 2\\n3 2 3 4\\n') == '2'\nassert solution('2 2\\n3 2 2 1\\n2 1 2\\n') == '1'\nassert solution('3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n') == '24'"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n1 4 2 3 1') == '3\\n'\nassert solution('4\\n1 5 4 7') == '6\\n'\n"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == \"3\"\nassert solution(stdin=\"5\\n1 4 2 3 1\\n\") == \"3\"\nassert solution(stdin=\"4\\n1 5 4 7\\n\") == \"6\"\n\nfrom typing import List"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1 4 2 3 1\\n\") == \"3\\n\"\nassert solution(\"4\\n1 5 4 7\\n\") == \"6\\n\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"3\"\nassert solution(4) == \"6\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 4 2 3 1\\n4\\n1 5 4 7\") == \"3\\n\"\nassert solution(\"4\\n1 5 4 7\") == \"6\\n\"\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"6\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3\\n6\\n\"\n"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Input {input()} expected output {output()}, but got {solution(input())}\"\n"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n1 4 2 3 1\\n') == '3'\nassert solution('4\\n1 5 4 7\\n') == '6'"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"5\\n1 4 2 3 1\\n4\\n1 5 4 7\\n6\\n1 3 2 4\\n\\n\") == \"3\\n6\\n\""
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 'print(4)'"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"20\"\nassert solution(open(\"input.txt\", \"r\")) == \"62\""
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 2\\n4\\n1 1 2 3\\n5\\n1 1 1 1 1') == 4\nassert solution('4\\n1 1 2 3\\n5\\n1 1 1 1 1') == 20\nassert solution('5\\n1 1 1 1 1\\n5\\n1 1 1 1 1') == 62"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"4\\n\", \"Your solution is incorrect.\"\nassert solution() == \"20\\n\", \"Your solution is incorrect.\"\nassert solution() == \"62\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"4\\n\", \"The output should be 4, not {}\".format(solution())"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n1 2\\n') == '4'\nassert solution('4\\n1 1 2 3\\n') == '20'\nassert solution('5\\n1 1 1 1 1\\n') == '62'"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2') == '4'\nassert solution('4') == '20'\nassert solution('5') == '62'"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n1 2') == '4'\nassert solution('4\\n1 1 2 3') == '20'\nassert solution('5\\n1 1 1 1 1') == '62'"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"20\", \"The output is incorrect\"\n"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"4\\n\"\nassert solution(\"4\\n1 1 2 3\\n\") == \"20\\n\"\nassert solution(\"5\\n1 1 1 1 1\\n\") == \"62\\n\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 1\n1 1\n1 1\n''') == '6'\n\nassert solution('''\n4\n1 2\n2 1\n3 5\n5 3\n''') == '15'\n\nassert solution('''\n1\n5 6\n''') == '7'"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1\\n1\\n\") == \"6\"\nassert solution(\"4\\n1 2\\n2 1\\n3 5\\n5 3\\n\") == \"15\"\nassert solution(\"1\\n5 6\\n\") == \"7\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Output\\n15\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1\\n1 1\\n1 1\\n\") == \"6\\n\"\nassert solution(\"4\\n1 2\\n2 1\\n3 5\\n5 3\\n\") == \"15\\n\"\nassert solution(\"1\\n5 6\\n\") == \"7\\n\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == expected_output, f\"Solution is incorrect. Expected: {expected_output}, Received: {solution}\"\n"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(solution.__doc__) == \"Output\\n15\"\nassert solution(input()) == \"Output\\n15\"\n"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Output: 15\\n\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 15, \"Solution is not correct\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\\n1\\n\") == \"6\"\nassert solution(\"4\\n1 2\\n2 1\\n3 5\\n5 3\\n\") == \"15\"\nassert solution(\"1\\n5 6\\n\") == \"7\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"0\"\nassert solution(\"6\") == \"6\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n1\n4\n2\n''') == '1'\n\nassert solution('''\n2\n1\n4 4\n2\n''') == '3'\n\nassert solution('''\n3\n3 3\n10 10 10\n17\n''') == '6'"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n4\\n2\\n\") == 1\nassert solution(\"2\\n1\\n4 4\\n2\\n\") == 3\nassert solution(\"3\\n3 3\\n10 10 10\\n17\\n\") == 6\n"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\"\nassert solution() == \"3\"\nassert solution() == \"6\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\nfor a, b, c in [(1, 4, 2), (2, 1, 4, 4), (3, 3, 3)]:\n    assert solution(str(a) + \" \" + str(b) + \" \" + str(c)) == str(expected_result)\n"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\\n1\\n4 4\\n2\") == \"3\"\nassert solution(\"3\\n3 3\\n10 10 10\\n17\") == \"6\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\\n\"\nassert solution(\"2\") == \"1\\n\"\nassert solution(\"3\") == \"6\\n\"\nassert solution(\"4\") == \"1\\n\"\nassert solution(\"5\") == \"1\\n\"\nassert solution(\"6\") == \"1\\n\"\nassert solution(\"7\") == \"1\\n\"\nassert solution(\"8\") == \"1\\n\"\nassert solution(\"9\") == \"1\\n\"\nassert solution(\"10\") == \"1\\n\"\nassert solution(\"11\") == \"1\\n\"\nassert solution(\"12\") == \"1\\n\"\nassert solution(\"13\") == \"1\\n\"\nassert solution(\"14\") == \"1\\n\"\nassert solution(\"15\") == \"1\\n\"\nassert solution(\"16\") == \"1\\n\"\nassert solution(\"17\") == \"1\\n\"\nassert solution(\"18\") == \"1\\n\"\nassert solution(\"19\") == \"1\\n\"\nassert solution(\"20\") == \"1\\n\"\nassert solution(\"21\") == \"1\\n\"\nassert solution(\"22\") == \"1\\n\"\nassert solution(\"23\") == \"1\\n\"\nassert solution(\"24\") == \"1\\n\"\nassert solution(\"25\") == \"1\\n\"\nassert solution(\"26\") == \"1\\n\"\nassert solution(\"27\") == \"1\\n\"\nassert solution(\"28\") == \"1\\n\"\nassert solution(\"29\") == \"1\\n\"\nassert solution(\"30\") == \"1\\n\"\nassert solution(\"31\") == \"1\\n\"\nassert solution(\"32\") == \"1\\n\"\nassert solution(\"33\") == \"1\\n\"\nassert solution(\"34\") == \"1\\n\"\nassert solution(\"35\") == \"1\\n\"\nassert solution(\"36\") == \"1\\n\"\nassert solution(\"37\") == \"1\\n\"\nassert solution(\"38\") == \"1\\n\"\nassert solution(\"39\") == \"1\\n\"\nassert solution(\"40\") == \"1\\n\"\nassert solution(\"41\") == \"1\\n\"\nassert solution(\"42\") == \"1\\n\"\nassert solution(\"43\") == \"1\\n\"\nassert solution(\"44\") == \"1\\n\"\nassert solution(\"45\") == \"1\\n\"\nassert solution(\"46\") == \"1\\n\"\nassert solution(\"47\") == \"1\\n\"\nassert solution(\"48\") == \"1\\n\"\nassert solution(\"49\") == \"1\\n\"\nassert solution(\"50\") == \"1\\n\"\nassert solution(\"51\") == \"1\\n\"\nassert solution(\"52\") == \"1\\n\"\nassert solution(\"53\") == \"1\\n\"\nassert solution(\"54\") == \"1\\n\"\nassert solution(\"55\") == \"1\\n\"\nassert solution(\"56\") == \"1\\n\"\nassert solution(\"57\") == \"1\\n\"\nassert solution(\"58\") == \"1\\n\"\nassert solution(\"59\") == \"1\\n\"\nassert solution(\"60\") == \"1\\n\"\nassert solution(\"61\") == \"1\\n\"\nassert solution(\"62\") == \"1\\n\"\nassert solution(\"63\") == \"1\\n\"\nassert solution(\"64\") == \"1\\n\"\nassert solution(\"65\") == \"1\\n\"\nassert solution(\"66\") == \"1\\n\"\nassert solution(\"67\") == \"1\\n\"\nassert solution(\"68\") == \"1\\n\"\nassert solution(\"69\") == \"1\\n\"\nassert solution(\"70\") == \"1\\n\"\nassert solution(\"71\") == \"1\\n\"\nassert solution(\"72\") == \"1\\n\"\nassert solution(\"73\") == \"1\\n\"\nassert solution(\"74\") == \"1\\n\"\nassert solution(\"75\") == \"1\\n\"\nassert solution(\"76\") == \"1\\n\"\nassert solution(\"77\") == \"1\\n\"\nassert solution(\"78\") == \"1\\n\"\nassert solution(\"79\") == \"1\\n\"\nassert solution(\"80\") == \""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n4\\n2\\n\") == \"1\\n\"\nassert solution(\"2\\n1\\n4 4\\n2\\n\") == \"3\\n\"\nassert solution(\"3\\n3 3\\n10 10 10\\n17\\n\") == \"6\\n\"\n"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '1\\n'\nassert solution() == '3\\n'\nassert solution() == '6\\n'"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Input\\n1\\n4\\n2\\n\") == \"1\\n\"\nassert solution(\"Input\\n2\\n1\\n4 4\\n2\\n\") == \"3\\n\"\nassert solution(\"Input\\n3\\n3 3\\n10 10 10\\n17\\n\") == \"6\\n\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\\n\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\\n\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\\n\") == \"0\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 1, \"Your solution is incorrect\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\\n\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\\n\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\\n\") == \"0\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n3 3 3 100\n1 1 1\n''') == '10'\n\nassert solution('''\n3 6 5 1000000007\n1 2 3\n''') == '0'\n\nassert solution('''\n3 5 6 11\n1 2 1\n''') == '0'"
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\\n\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\\n\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\\n\") == \"0\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"10\"\nassert solution() == \"0\"\nassert solution() == \"0\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\\n\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\\n\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\\n\") == \"0\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\") == \"0\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\") == \"0\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"0\\n\", \"Test 1\"\nassert solution() == \"0\\n\", \"Test 2\"\nassert solution() == \"0\\n\", \"Test 3\"\nassert solution() == \"0\\n\", \"Test 4\"\nassert solution() == \"10\\n\", \"Test 5\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\") == \"YES\\n\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghi\\njklmnopqrstu\\nvwxyz\\n\") == \"NO\\n\"\nassert solution(\"4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\\n\") == \"YES\\n\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n2 2 3\\nintel\\ncode\\nch allenge') == 'YES\\nNO\\nYES\\n'\nassert solution('4\\n1 2 3 1\\na\\nbcdefghi\\njklmnopqrstu\\nvwxyz') == 'NO\\nYES\\nYES\\nNO\\n'"
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\") == \"YES\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghi\\njklmnopqrstu\\nvwxyz\\n\") == \"NO\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'NO'\nassert solution(input()) == 'NO'"
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\") == \"YES\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdfghijklmnopqrstuvwxyz\\njklmnopqrstuvwxyz\\nuvwxyz\") == \"NO\"\nassert solution(\"4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\") == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\") == \"YES\\n\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghi\\njklmnopqrstu\\nvwxyz\\n\") == \"NO\\n\"\nassert solution(\"4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\\n\") == \"YES\\n\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\") == \"YES\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghijklmnopqrstuvwxyz\\njklmnopqrstuvwxyz\\nuvwxyz\") == \"NO\"\nassert solution(\"4\\n13 11 15 15\\ntis nobler in the mind to suffer\\nwhether tis nobler in the mind to suffer\\n\\n\\n\\n\\n\\n\") == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"3\n2 2 3\nintel\ncode\nch allenge\"\"\") == \"YES\"\nassert solution(\"\"\"4\n1 2 3 1\na\nbcdefghi\njklmnopqrstu\nvwxyz\"\"\") == \"NO\"\nassert solution(\"\"\"4\n13 11 15 15\nto be or not to be that is the question\nwhether tis nobler in the mind to suffer\nthe slings and arrows of outrageous fortune\nor to take arms against a sea of troubles\"\"\") == \"YES\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 1 5\\n1\\n10\") == \"26\\n\"\nassert solution(\"1\\n10\") == \"10\\n\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 26, \"Test failed\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 26\nassert solution(1) == 10\nassert solution(5) == 30\nassert solution(10) == 36"
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 1 5\\n\") == \"26\\n\"\nassert solution(\"1\\n10\\n\") == \"10\\n\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 1 5\") == \"26\\n\"\nassert solution(\"1\\n10\") == \"10\\n\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 1 5\\n\") == \"26\\n\"\nassert solution(\"1\\n10\\n\") == \"10\\n\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 1 5\") == \"26\\n\"\nassert solution(\"1\\n10\") == \"10\\n\"\n"
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '26\\n', \"The function is expected to return the correct output, but it returns {}\".format(solution())"
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n3 1 5\\n1\\n10\\n') == '26\\n'\nassert solution('1\\n10\\n') == '10\\n'"
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 26\nassert solution(1) == 10\n"
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n1 3 5\\n\") == \"3\"\nassert solution(\"3 40\\n10 30 50\\n\") == \"32\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 4\\n1 3 5\\n') == '3\\n'\nassert solution('3 40\\n10 30 50\\n') == '32\\n'"
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n1 3 5\\n\") == \"3\"\nassert solution(\"3 40\\n10 30 50\\n\") == \"32\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n1 3 5\") == \"3\"\nassert solution(\"3 40\\n10 30 50\") == \"32\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n1 3 5\\n\") == \"3\"\nassert solution(\"3 40\\n10 30 50\\n\") == \"32\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n1 3 5\\n\") == \"3\"\nassert solution(\"3 40\\n10 30 50\\n\") == \"32\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n1 3 5\\n\") == \"3\\n\"\nassert solution(\"3 40\\n10 30 50\\n\") == \"32\\n\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n1 3 5\\n\") == \"3\\n\"\nassert solution(\"3 40\\n10 30 50\\n\") == \"32\\n\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 4\\n1 3 5\\n') == '3\\n'\nassert solution('3 40\\n10 30 50\\n') == '32\\n'"
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n1 3 5\") == \"3\\n\"\nassert solution(\"3 40\\n10 30 50\") == \"32\\n\"\nassert solution(\"2 0\\n4\") == \"0\\n\"\nassert solution(\"2 10\\n3\\n1 2\") == \"5\\n\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Test failed!\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9 1\\n1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11\") == \"1 4 5 6 7 8 9\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2\nassert solution(sample_input3) == sample_output3"
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11\") == \"1 4 5 6 7 8 9\\n\"\nassert solution(\"5 1\\n1 1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5\\n\") == \"1 2 4\\n\"\nassert solution(\"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n\") == \"1 2\\n\"\nassert solution(\"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n\") == \"1 2\\n\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9 1\\n1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11\") == \"1 4 5 6 7 8 9\\n\"\nassert solution(\"5 1\\n1 1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5\\n\") == \"1 2 4\\n\"\nassert solution(\"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n\") == \"1 2\\n\"\nassert solution(\"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n\") == \"1 2\\n\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('9 1\\n1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11') == '1 4 5 6 7 8 9'\nassert solution('5 1\\n1 1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5\\n') == '1 2 4'\nassert solution('5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n') == '1 2'\nassert solution('') == ''"
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9 1\\n1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11\") == \"1 4 5 6 7 8 9\"\nassert solution(\"5 1\\n1 1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5\\n\") == \"1 2 4\"\nassert solution(\"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n\") == \"1 2\"\nassert solution(\"\") == \"\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11\\n') == '1 4 5 6 7 8 9\\n'"
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('9 1\\n1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11') == ['1 4 5 6 7 8 9']\nassert solution('5 1\\n1 1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5\\n5 5\\n5 5\\n5 5') == ['1 2 4']\nassert solution('5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5') == ['1 2']"
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"sample_input1.txt\", \"r\").read()) == \"1 4 5 6 7 8 9\"\nassert solution(open(\"sample_input2.txt\", \"r\").read()) == \"1 2 4\"\nassert solution(open(\"sample_input3.txt\", \"r\").read()) == \"1 2\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\") == \"1\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\") == \"0\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\") == \"2\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 2\\n2 1\\n1 2.0\\n1 3.100\\n') == '1\\n'\nassert solution('3 3\\n1 5.0\\n2 5.5\\n3 6.0\\n') == '0\\n'\nassert solution('6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\\n') == '2\\n'"
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\\n\") == \"1\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\\n\") == \"0\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\\n\") == \"2\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\\n\") == \"1\\n\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\\n\") == \"0\\n\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\") == \"1\\n\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\") == \"0\\n\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\") == \"2\\n\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\\n\") == \"1\\n\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\\n\") == \"0\\n\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\\n\") == \"2\\n\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\\n\") == \"1\\n\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\\n\") == \"0\\n\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\\n\") == \"2\\n\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\" # Test case 1\n\nassert solution() == \"0\" # Test case 2\n\nassert solution() == \"2\" # Test case 3\n\nassert solution() == \"2\" # Test case 4\n\nassert solution() == \"2\" # Test case 5"
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '1'\nassert solution() == '0'\nassert solution() == '2'"
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 1, \"The correct answer is 1, but it is not.\"\n\nassert solution() == 0, \"The correct answer is 0, but it is not.\"\n\nassert solution() == 2, \"The correct answer is 2, but it is not.\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 3"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6 2\\n2 3 6 5 4 10') == '3'\nassert solution('5 3\\n1 2 3 4 5 6') == '1'\nassert solution('5 4\\n1 2 3 4 5 6') == '0'\nassert solution('3 2\\n1 2 3 4 5 6') == '1'"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6 2\\n2 3 6 5 4 10') == '3'\nassert solution('2 3\\n3 4 5 6 7') == '2'\nassert solution('3 4\\n4 5 6 7 8') == '2'\nassert solution('3 4\\n4 5 6 7 8') == '2'"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6 2\\n2 3 6 5 4 10') == '3'\n"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\\n\") == \"3\"\n"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"6 1\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"10 2\") == \"1\"\nassert solution(\"1 10\") == \"1\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input {input()}, expected output {expected_output}\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"4\\n\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\\n\") == \"10\\n\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"4\\n\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\\n\") == \"10\\n\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"4\\n\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\\n\") == \"10\\n\"\n"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\", \"Alex doesn't like boredom. That's why whenever he gets bored, he comes up with games. One long winter evening he came up with a game and decided to play it.\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"4\\n\", \"Alex is a perfectionist, so he decided to get as many points as possible.\\n\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\\n\") == \"10\\n\", \"Alex is a perfectionist, so he decided to get as many points as possible.\\n\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_str) == expected_output, f\"Test failed for input {input_str}\" for input_str, expected_output in [\n    (\"2\", \"2\"),\n    (\"3\", \"4\"),\n    (\"9\", \"10\"),\n]"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"4\\n\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\\n\") == \"10\\n\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"2\"  # pass\nassert solution(\"3\") == \"4\"  # pass\nassert solution(\"9\") == \"10\"  # pass\nassert solution(\"\") == \"0\"  # pass"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\"\nassert solution(\"3\\n1 2 3\\n\") == \"4\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\\n\") == \"10\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 2\\n\\n3\\n1 2 3\\n\\n9\\n1 2 1 3 2 2 2 2 3\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\\n\\n9\\n1 2 1 3 2 2 2 2 3\\n\") == \"4\\n\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 2 3\\n\") == \"10\\n\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\\n\", \"Test failed.\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\\n\", \"Incorrect output.\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '4\\n', 'Test case 1 failed'\nassert solution(input()) == '4\\n', 'Test case 2 failed'\nassert solution(input()) == '4\\n', 'Test case 3 failed'\nassert solution(input()) == '4\\n', 'Test case 4 failed'\nassert solution(input()) == '4\\n', 'Test case 5 failed'"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"4\\n\", solution(stdin)"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"4\", \"Incorrect output\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2') == '4\\n', 'The four sequences that satisfy the conditions are:\\n - 1, 1, 1,...\\n - 1, 2, 2,...\\n - 2, 1, 1,...\\n - 2, 2, 2,...'"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"4\\n\", \"The four sequences that satisfy the conditions are: \\n - 1, 1, 1,... \\n - 1, 2, 2,... \\n - 2, 1, 1,... \\n - 2, 2, 2,... \\n\"\n"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt').read()) == '4\\n'"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4\", \"The answer is not correct.\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(b\"2\\n\") == \"4\\n\", \"The four sequences that satisfy the conditions are: - 1, 1, 1,... - 1, 2, 2,... - 2, 1, 1,... - 2, 2, 2,...\\n\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 6\\n1 5 1 4\\n') == '5'\nassert solution('2 3\\n1 2 2 3\\n') == '2'\nassert solution('2 3\\n1 2 2 3\\n1 2 2 3\\n') == '3'\nassert solution('5 7\\n1 2 3 4 5\\n') == '4'\nassert solution('1 2 3 4 5\\n') == '1'\n"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 6\\n1 5 1 4') == '5'\nassert solution('5 6\\n1 5 1 4') == '5'\nassert solution('1 5 1 4\\n3 4') == '5'\nassert solution('3 4\\n3 4') == '5'\nassert solution('3 4\\n1 2') == '11'\n\nassert solution('1 5 1 4\\n3 4') == '5'\nassert solution('3 4\\n3 4') == '5'\nassert solution('3 4\\n1 2') == '11'"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == \"5\"\nassert solution(\"3 3\\n1 1 1 1\\n2 2 2 2\\n\") == \"8\"\nassert solution(\"2 3\\n1 1 1 1\\n2 2 2 2\\n\") == \"14\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == \"5\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"5\\n\", \"Incorrect output\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"5\\n\"\n"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == \"5\"\n"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"5\", \"The solution is not correct.\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == \"5\\n\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == \"5\"\nassert solution(\"3 5\\n2 3 4 5\\n\") == \"7\"\nassert solution(\"2 5\\n1 5 4 5\\n\") == \"8\"\nassert solution(\"2 4\\n1 2 3 4\\n\") == \"9\"\n"
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"+-+-+\") == \"1\"\nassert solution(\"---\") == \"3\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"+-+-+\") == \"1\"\nassert solution(\"---\") == \"3\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"+-+-+\") == 1\nassert solution(\"---\") == 3"
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"+-+-+\") == \"1\"\nassert solution(\"---\") == \"3\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"+-+-+\") == \"1\"\nassert solution(\"---\") == \"3\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"+-+-+\") == 1\nassert solution(\"---\") == 3"
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"+-+-+\") == 1\nassert solution(\"---\") == 3"
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case_id} failed: Expected output '{expected_output}', but got '{solution(input())}'.\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"+-+-+\") == 1, \"Input is incorrect\"\nassert solution(\"---\") == 3, \"Input is incorrect\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"+-+-+\") == \"1\", \"Polycarpus just has been out of luck lately!\"\nassert solution(\"---\") == \"3\", \"Polycarpus just has been out of luck lately!\""
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n\") == \"10110\" # correct output\n"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n\") == \"10110\""
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\") == \"10110\", \"The solution should return '10110'.\""
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\") == \"10110\""
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '10110', 'The output is incorrect.'"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\") == \"10110\", \"Incorrect output\"\n"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8') == '10110'"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"10110\""
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_data) == output_data, f\"The solution does not match the expected output: {output_data}, while the provided input is: {input_data}\""
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n\") == \"10110\\n\"\nassert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n\") == \"10110\\n\"\nassert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n\") == \"10110\\n\"\nassert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n\") == \"10110\\n\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n5 3 1\n1 2 3 2 1\n1 2 3\n''') == '2\\n1 3\\n'\n\nassert solution('''\n6 3 2\n1 3 2 2 3 1\n1 2 3\n''') == '2\\n1 2\\n'"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == 2\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == 2\n"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '2\\n1 3\\n'\nassert solution(input()) == '2\\n1 2\\n'"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\\n1 3\\n\"\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == \"2\\n1 2\\n\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == 2\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == 2"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\\n1 3\"\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == \"2\\n1 2\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\\n1 3\"\n\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == \"2\\n1 2\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == 2\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == 2\nassert solution(\"\") == 0"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\\n1 3\\n\"\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == \"2\\n1 2\\n\"\nassert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\\n1 3\\n\"\n\nprint(\"All tests passed.\")"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 1 2\\n1 3\\n1 2\\n\\n3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\\n4 1 2\\n1 3\\n1 2\\n\\n5 5 5\\n2\\n1 2\\n1 3\\n2 3\\n3 4\\n4 5\\n5 1\\n6 7\\n7 1\\n8 9\\n9 1\\n10 11\\n11 1\\n12 13\\n13 1\\n14 15\\n15 1\\n16 17\\n17 1\\n18 19\\n19 1\\n20 21\\n21 1\\n22 23\\n23 1\\n24 25\\n25 1\\n26 27\\n27 1\\n28 29\\n29 1\\n30 31\\n31 1\\n32 33\\n33 1\\n34 35\\n35 1\\n36 37\\n37 1\\n38 39\\n39 1\\n40 41\\n41 1\\n42 43\\n43 1\\n44 45\\n45 1\\n46 47\\n47 1\\n48 49\\n49 1\\n50 51\\n51 1\\n52 53\\n53 1\\n54 55\\n55 1\\n56 57\\n57 1\\n58 59\\n59 1\\n60 61\\n61 1\\n62 63\\n63 1\\n64 65\\n65 1\\n66 67\\n67 1\\n68 69\\n69 1\\n70 71\\n71 1\\n72 73\\n73 1\\n74 75\\n75 1\\n76 77\\n77 1\\n78 79\\n79 1\\n80 81\\n81 1\\n82 83\\n83 1\\n84 85\\n85 1\\n86 87\\n87 1\\n88 89\\n89 1\\n90 91\\n91 1\\n92 93\\n93 1\\n94 95\\n95 1\\n96 97\\n97 1\\n98 99\\n99 1\\n100 101\\n101 1\\n102 103\\n103 1\\n104 105\\n105 1\\n106 107\\n107 1\\n108 109\\n109 1\\n110 111\\n111 1\\n112 113\\n113 1\\n114 115\\n115 1\\n116 117\\n117 1\\n118 119\\n119 1\\n120 121\\n121 1\\n122 123\\n123 1\\n124 125\\n125 1\\n126 127\\n127 1\\n128 129\\n129 1\\n130 131\\n131 1\\n132 133\\n133 1\\n134 135\\n135 1\\n136 137\\n137 1\\n138 139\\n"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 1 2\\n1 3\\n1 2\\n\") == \"2\"\nassert solution(\"3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\") == \"0\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2\\n\"\nassert solution(open(\"sample_test.txt\", \"r\")) == \"0\\n\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 1 2\\n1 3\\n1 2\\n\") == \"2\"\nassert solution(\"3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\") == \"0\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 1 2\\n1 3\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\") == \"0\\n\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('Input\\n4 1 2\\n1 3\\n1 2\\n') == '2\\n'\nassert solution('Input\\n3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n') == '0\\n'"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n4 1 2\n1 3\n1 2\n''') == '2'\nassert solution('''\n3 3 1\n2\n1 2\n1 3\n2 3\n''') == '0'\n"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 1 2\\n1 3\\n1 2\\n\\n3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\") == \"2\"\nassert solution(\"3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\") == \"0\"\n"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 1 2\\n1 3\\n1 2\\n\") == \"2\"\nassert solution(\"3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\") == \"0\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n100 100 100 100\") == \"1\"\nassert solution(\"6\\n10 2 3 5 4 2\") == \"3\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\") == \"4\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\") == \"3\\n\"\nassert solution(\"4\\n100 100 100 100\") == \"1\\n\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\") == \"4\\n\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\\n\") == \"3\"\nassert solution(\"4\\n100 100 100 100\\n\") == \"1\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\\n\") == \"4\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\") == \"3\"\nassert solution(\"4\\n100 100 100 100\") == \"1\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\") == \"4\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\nfor i in range(input().split()):\n    assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\nfor i in range(input().split()):\n    assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6\\n10 2 3 5 4 2') == '3'\nassert solution('4\\n100 100 100 100') == '1'\nassert solution('8\\n7 6 5 4 3 2 2 3') == '4'"
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\\n\") == \"3\"\nassert solution(\"4\\n100 100 100 100\\n\") == \"1\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\\n\") == \"4\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\") == \"3\"\nassert solution(\"4\\n100 100 100 100\") == \"1\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\") == \"4\"\nassert solution(\"6\\n10 2 3 5 4 2\") == \"3\"\nassert solution(\"4\\n100 100 100 100\") == \"1\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\") == \"4\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3\\n\", \"Expected: 3\\n, but got: {}\".format(solution(stdin))"
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\\n\\n4\\n100 100 100 100\\n\\n8\\n7 6 5 4 3 2 2 3\\n\\n\\n\\n3\") == \"3\\n\"\nassert solution(\"4\\n100 100 100 100\\n\\n1\\n\") == \"1\\n\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\\n2 3 \"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"Yes\\n0\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\") == \"No\"\n\nassert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\\n2 3 \"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"Yes\\n0\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\") == \"No\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'Yes'\nassert solution(input()) == 'No'\nassert solution(input()) == 'No'"
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == output, f\"Test failed: {input}!= {output}\" for input, output in zip(stdin, output)"
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"Yes\\n0\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\") == \"No\"\n"
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\\n\") == \"Yes\\n2\\n2 3\"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\\n\") == \"Yes\\n0\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\\n\") == \"No\"\n"
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\\n2 3\"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"Yes\\n0\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\") == \"No\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Yes'\n"
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"Yes\\n0\"\nassert solution() == \"No\\n0\"\nassert solution() == \"No\\n1\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"Yes\\n0\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\") == \"No\"\n"
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\\n2 3 \"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"Yes\\n0\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\") == \"No\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"20\\n0 2 1 4 3\" # Example case"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n\") == \"20\\n0 2 1 4 3\\n\"\nassert solution(\"8\\n\") == \"144\\n0 1 2 3 4 5 6 7\\n\"\nassert solution(\"10\\n\") == \"400\\n0 1 2 3 4 5 6 7 8 9\\n\"\nassert solution(\"12\\n\") == \"120\\n0 1 2 3 4 5 6 7 8 9 10 11 12\\n\"\nassert solution(\"15\\n\") == \"504\\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n\"\nassert solution(\"18\\n\") == \"2032\\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\\n\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"20\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 20, \"Expected output: 20\"\nassert solution(10) == 0, \"Expected output: 0\"\nassert solution(20) == 20, \"Expected output: 20\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4) == 20, \"Test case 1 failed\"\nassert solution(5) == 10, \"Test case 2 failed\"\nassert solution(6) == 2, \"Test case 3 failed\"\nassert solution(7) == 0, \"Test case 4 failed\"\nassert solution(8) == 1, \"Test case 5 failed\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n\") == \"20\\n0 2 1 4 3\"\nassert solution(\"5\\n\") == \"12\\n1 0 4 3 2\"\nassert solution(\"8\\n\") == \"32\\n3 2 0 1 4 5\"\nassert solution(\"10\\n\") == \"48\\n4 1 0 5 2 3\"\nassert solution(\"13\\n\") == \"60\\n5 4 0 3 2 1\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(4) == 20\nassert solution(10) == 16\nassert solution(20) == 4\nassert solution(100) == 14\nassert solution(101) == 15\nassert solution(102) == 16\nassert solution(103) == 17\nassert solution(104) == 18"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\") == 20\nassert solution(\"8\") == 10\nassert solution(\"10\") == 36"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"20\\n0 2 1 4 3\"\nassert solution(2) == \"12\\n0 1 3 4 2\"\nassert solution(5) == \"31\\n0 1 3 5 4 2\"\nassert solution(6) == \"1234\\n0 1 2 3 4 5 6 7 8 9\"\nassert solution(7) == \"123456\\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\"\nassert solution(8) == \"12345678\\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\"\nassert solution(9) == \"123456789\\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4) == \"20\\n0 2 1 4 3\"\nprint(solution(4))"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n1 1') == 'YES'\nassert solution('3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0') == 'NO'"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n1 1\") == \"YES\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\") == \"NO\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n1 1\\n0 0\") == \"YES\"\n"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"YES\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"YES\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"YES\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n1 1\") == \"YES\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\") == \"NO\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n1 1') == 'YES'"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n1 1\\n\") == \"YES\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n0 0\\n\") == \"NO\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n1 1\\n\") == \"YES\\n\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected_result, f\"Solution is incorrect. Expected: {expected_result}, Received: {solution}\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"9\") == \"1\"\n\nmorse_code = {\n    \"0\": \".\",\n    \"1\": \"-.\"\n}"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1\\n1\\n1\\n\") == \"1\\n3\\n7\\n\"\nassert solution(\"5\\n1\\n0\\n1\\n0\\n1\\n\") == \"1\\n4\\n10\\n22\\n43\\n\"\nassert solution(\"9\\n1\\n1\\n0\\n0\\n0\\n1\\n1\\n0\\n1\\n\") == \"1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\\n\"\n\nfrom typing import List\n"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n\") == \"1\\n3\\n7\\n\"\nassert solution(\"5\\n1\\n0\\n1\\n0\\n1\\n\") == \"1\\n4\\n10\\n22\\n43\\n\"\nassert solution(\"9\\n1\\n1\\n0\\n0\\n0\\n1\\n1\\n0\\n1\\n\") == \"1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\\n\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1\\n1\\n1\") == \"1\"\nassert solution(\"5\\n1\\n0\\n1\\n0\") == \"1\"\nassert solution(\"9\\n1\\n1\\n0\\n0\\n0\\n1\\n1\\n0\\n1\\n\") == \"1\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n\") == \"1\\n3\\n7\\n\"\nassert solution(\"5\\n1\\n0\\n1\\n0\\n1\\n\") == \"1\\n4\\n10\\n22\\n43\\n\"\nassert solution(\"9\\n1\\n1\\n0\\n0\\n0\\n1\\n1\\n0\\n1\\n\") == \"1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\\n\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1\\n1\\n1\") == \"1\"\nassert solution(\"5\\n1\\n0\\n1\\n0\") == \"1\"\nassert solution(\"9\\n1\\n1\\n0\\n0\\n0\\n1\\n1\\n0\\n1\\n\") == \"1\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1\\n1\\n1\") == \"1\\n3\\n7\"\nassert solution(\"5\\n1\\n0\\n1\\n0\\n1\") == \"1\\n4\\n10\\n22\\n43\"\nassert solution(\"9\\n1\\n1\\n0\\n0\\n0\\n1\\n1\\n0\\n1\\n1\") == \"1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"T\"\nassert solution(\"11\") == \"M\"\nassert solution(\"111\") == \"O\"\nassert solution(\"1111111\") == \"O\"\nassert solution(\"11111111111111111111111111111\") == \"O\"\nassert solution
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1\\n1\\n1\\n\") == \"1\\n3\\n7\\n\"\nassert solution(\"5\\n1\\n0\\n1\\n0\\n1\\n\") == \"1\\n4\\n10\\n22\\n43\\n\"\nassert solution(\"9\\n1\\n1\\n0\\n0\\n0\\n1\\n1\\n0\\n1\\n\") == \"1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\\n\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3\n3 0\n6 2\n1 2\n2 3\n15 10\n12 14\n8 3\n10 1\n14 6\n12 6\n1 9\n13 1\n2 5\n3 9\n7 2\"\"\") == \"First\\nSecond\"\n\nassert solution(\"\"\"100\n3 0\n6 2\n1 2\n2 3\n15 10\n12 14\n8 3\n10 1\n14 6\n12 6\n1 9\n13 1\n2 5\n3 9\n7 2\"\"\") == \"First\\nFirst\"\n\nassert solution(\"\"\"1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\"\"\") == \"First\\nFirst\"\n\nassert solution(\"\"\"0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n\") == \"First\\nSecond\"\n\nfor test_case in range(int(stdin.readline())):\n    N = int(stdin.readline())\n    M = int(stdin.readline())\n\n    a = list(map(int, stdin.readline().split()))\n    b = list(map(int, stdin.readline().split()))\n\n    G = [[] for _ in range(N + 1)]\n\n    for i in range(M):\n        G[a[i]].append(b[i])\n        G[b[i]].append(a[i])\n\n    has_cycle = False\n    for i in range(1, N + 1):\n        if len(set(G[i])) > 1:\n            has_cycle = True\n            break\n\n    if has_cycle:\n        print(\"Taro the first wins\")\n    else:\n        print(\"Jiro the second wins\")"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Expected: {output()}, Got: {solution(input())}\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_data) == output_data, \"Test case failed\"\nfor _ in range(T):\n    Taro, Jiro = input().split()\n    Taro = int(Taro)\n    Jiro = int(Jiro)\n    \n    N, M = map(int, input().split())\n    graph = [[] for _ in range(N+1)]\n    for _ in range(M):\n        u, v, *rest = map(int, input().split())\n        graph[u].append(v)\n        graph[v].append(u)\n    \n    good_graph = True\n    for i in range(1, N+1):\n        if len(graph[i]) > 1:\n            good_graph = False\n            break\n    \n    if good_graph:\n        print(\"First\")\n    else:\n        print(\"Second\")"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\") == \"First\\nSecond\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\") == \"First\\nSecond\\nFirst\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n\") == \"First\\nSecond\\nFirst\"\nassert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n8\\n\") == \"First\\nSecond\\nFirst\"\nassert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n8 3\\n\") == \"First\\nSecond\\nFirst\"\nassert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n8 3\\n10 1\\n\") == \"First\\nSecond\\nFirst\"\nassert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n8 3\\n10 1\\n14 6\\n\") == \"First\\nSecond\\nFirst\"\nassert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n8 3\\"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == 'First\\nSecond\\nFirst', \"Expected 'First\\nSecond\\nFirst', but got '{0}' instead.\".format(solution(sample_input))"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''3\n3 0\n6 2\n1 2\n2 3\n15 10\n12 14\n8 3\n10 1\n14 6\n12 6\n1 9\n13 1\n2 5\n3 9\n7 2''') == '''First\nSecond'''"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n\") == \"First\\nSecond\"\nassert solution(\"1\\n1 0\\n2 1\\n1 3\\n2 2\\n3 4\\n4 6\\n5 8\\n6 9\\n7 10\\n8 11\\n9 12\\n10 13\\n11 14\\n12 15\\n13 16\\n14 17\\n15 18\\n16 19\\n17 20\\n18 21\\n19 22\\n20 23\\n21 24\\n22 25\\n23 26\\n24 27\\n25 28\\n26 29\\n27 30\\n28 31\\n29 32\\n30 33\\n31 34\\n32 35\\n33 36\\n34 37\\n35 38\\n36 39\\n37 40\\n38 41\\n39 42\\n40 43\\n41 44\\n42 45\\n43 46\\n44 47\\n45 48\\n46 49\\n47 50\\n48 51\\n49 52\\n50 53\\n51 54\\n52 55\\n53 56\\n54 57\\n55 58\\n56 59\\n57 60\\n58 61\\n59 62\\n60 63\\n61 64\\n62 65\\n63 66\\n64 67\\n65 68\\n66 69\\n67 70\\n68 71\\n69 72\\n70 73\\n71 74\\n72 75\\n73 76\\n74 77\\n75 78\\n76 79\\n77 80\\n78 81\\n79 82\\n80 83\\n81 84\\n82 85\\n83 86\\n84 87\\n85 88\\n86 89\\n87 90\\n88 91\\n89 92\\n90 93\\n91 94\\n92 95\\n93 96\\n94 97\\n95 98\\n96 99\\n97 100\\n98 101\\n99 102\\n100 103\\n101 104\\n102 105\\n103 106\\n104 107\\n105 108\\n106 109\\n107 110\\n108 111\\n109 112\\n110 113\\n111 114\\n112 115\\n113 116\\n114 117\\n115 118\\n116 119\\n117 120\\n118 121\\n119 122\\n120 123\\n121 124\\n122 125\\n123 126\\n124 127\\n125 12"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Mike\"\nassert solution(\"abcc\") == \"Ann\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution_input) == solution_output, \"Test failed\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('abba') == 'Mike\\nAnn\\nAnn'\nassert solution('cba') == 'Mike\\nMike\\nMike\\ndef solution(stdin: str) -> str:\n    pass'"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abba\") == \"Mike\\nAnn\"\nassert solution(\"cba\") == \"Mike\\nMike\\nMike\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\\n# Example usage\\nassert solution('abba') == 'Mike\\nAnn'\\nassert solution('cba') == 'Mike\\nMike\\nMike\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\\n# Example usage\\nassert solution('abba') == 'Mike\\nAnn'\\nassert solution('cba') == 'Mike\\nMike\\nMike\\n\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('abba') == 'Mike\\nAnn\\nAnn\\nMike'\nassert solution('cba') == 'Mike\\nMike\\nMike\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abba\") == \"Mike\\nAnn\\nAnn\"\nassert solution(\"cba\") == \"Mike\\nMike\\nMike\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abba\") == \"Mike\\nAnn\\nAnn\\nMike\"\nassert solution(\"cba\") == \"Mike\\nMike\\nMike\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Mike\"\nassert solution(\"abcd\") == \"Mike\"\nassert solution(\"a\") == \"Mike\"\nassert solution(\"aa\") == \"Mike\"\nassert solution(\"aaa\") == \"Mike\"\nassert solution(\"aaaa\") == \"Mike\"\nassert solution(\"bbbb\") == \"Ann\"\nassert solution(\"cccc\") == \"Ann\"\nassert solution(\"dddd\") == \"Ann\"\nassert solution(\"eeee\") == \"Ann\"\nassert solution(\"ffffffff\") == \"Ann\"\nassert solution(\"ggggg\") == \"Mike\"\nassert solution(\"hhhhh\") == \"Mike\"\nassert solution(\"iiiii\") == \"Mike\"\nassert solution(\"jjjjj\") == \"Mike\"\nassert solution(\"kkkkk\") == \"Mike\"\nassert solution(\"lllll\") == \"Mike\"\nassert solution(\"mmmmm\") == \"Mike\"\nassert solution(\"nnnnn\") == \"Mike\"\nassert solution(\"ooooo\") == \"Mike\"\nassert solution(\"ppppp\") == \"Mike\"\nassert solution(\"qqqqq\") == \"Mike\"\nassert solution(\"rrrrr\") == \"Mike\"\nassert solution(\"sssss\") == \"Mike\"\nassert solution(\"ttttt\") == \"Mike\"\nassert solution(\"uuuuu\") == \"Mike\"\nassert solution(\"vvvvv\") == \"Mike\"\nassert solution(\"wwwww\") == \"Mike\"\nassert solution(\"xxxxx\") == \"Mike\"\nassert solution(\"yyyyy\") == \"Mike\"\nassert solution(\"zzzzz\") == \"Mike\"\nassert solution(\"eeeeee\") == \"Ann\"\nassert solution(\"gggggg\") == \"Ann\"\nassert solution(\"hhhhhh\") == \"Ann\"\nassert solution(\"iiiiii\") == \"Ann\"\nassert solution(\"jjjjjj\") == \"Ann\"\nassert solution(\"kkkkkk\") == \"Ann\"\nassert solution(\"llllll\") == \"Ann\"\nassert solution(\"mmmmmm\") == \"Ann\"\nassert solution(\"nnnnnn\") == \"Ann\"\nassert solution(\"oooooo\") == \"Ann\"\nassert solution(\"pppppp\") == \"Ann\"\nassert solution(\"qqqqqq\") == \"Ann\"\nassert solution(\"rrrrrr\") == \"Ann\"\nassert solution(\"ssssss\") == \"Ann\"\nassert solution(\"tttttt\") == \"Ann\"\nassert solution(\"uuuuuu\") == \"Ann\"\nassert solution(\"vvvvvv\") == \"Ann\"\nassert solution(\"wwwwww\") == \"Ann\"\nassert solution(\"xxxxxx\") == \"Ann\"\nassert solution(\"yyyyyy\") == \"Ann\"\nassert solution(\"zzzzzz\") == \"Ann\"\nassert solution(\"eeeeeee\") == \"Mike\"\nassert solution(\"ggggggg\") == \"Mike\"\nassert solution(\"hhhhhhh\") == \"Mike\"\nassert solution(\"iiiiiii\") == \"Mike\"\nassert solution(\"jjjjjjj\") == \"Mike\"\nassert solution(\"kkkkkkk\") == \"Mike\"\nassert solution(\"lllllll\") == \"Mike\"\nassert solution(\"mmmmmmm\") == \"Mike\"\nassert solution(\"nnnnnnn\") == \"Mike\"\nassert solution(\"ooooooo\") == \"Mike\"\nassert solution(\"ppppppp\") == \"Mike\"\nassert solution(\"qqqqqqq\") == \"Mike\"\nassert solution(\"rrrrrrr\") == \"Mike\"\nassert solution(\"sssssss\") == \"Mike\"\nassert solution(\"ttttttt\") == \"Mike\"\nassert solution(\"uuuuuuu\") == \"Mike\"\nassert solution(\"vvvvvvv\") == \"Mike\"\nassert solution(\"wwwwwww\") == \"Mike\"\nassert solution(\"xxxxxxx\") == \"Mike\"\nassert solution(\"yyyyyyy\") == \"Mike\"\nassert solution(\"zzzzzzz\") == \"Mike\"\nassert solution(\"eeeeeeee\") == \"Ann\"\nassert solution(\"gggggggg\") == \"Ann\"\nassert solution(\"hhhhhhhh\") == \"Ann\"\nassert solution(\"iiiiiiii\") == \"Ann\"\nassert solution(\"jjjjjjjj\") == \"Ann\"\nassert solution(\"kkkkkkkk\") == \"Ann\"\nassert solution(\"llllllll\") == \"Ann\"\nassert solution(\"mmmmmmmm\") == \"Ann\"\nassert solution(\"nnnnnnnn\") == \"Ann\"\n"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abba\") == [\"Mike\"]\nassert solution(\"cba\") == [\"Mike\", \"Mike\", \"Mike\", \"def\"]"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abba\") == \"Mike\\nAnn\\nAnn\"\nassert solution(\"cba\") == \"Mike\\nMike\\nMike\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\") == \"0\\n\"\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\") == \"2\\n\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\\n\") == \"0\\n\"\n\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\\n\") == \"2\\n\"\n\nassert solution(\"3 3\\n8 24 12\\n1 3\\n2 4\") == \"6\\n\"\n\nassert solution(\"3 3\\n8 24 12\\n1 3\\n2 4\") == \"7\\n\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 2\\n8 3 8\\n1 2\\n2 3') == '0\\n'\n\nassert solution('3 2\\n8 12 8\\n1 2\\n2 3') == '2\\n'"
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\") == \"0\"\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\") == \"2\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\\n\") == \"0\\n\"\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\\n\") == \"2\\n\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\") == \"0\"\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\") == \"2\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\") == \"0\"\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\") == \"2\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\\n\") == \"0\\n\"\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\\n\") == \"2\\n\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\") == \"0\"\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\") == \"2\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"0\\n\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'ababacd'\n\nassert solution(input()) == '-1'"
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 7\") == \"def\"\nprint(\"Tests passed successfully!\")"
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    7 4\n    \"\"\"\n) == \"ababacd\"\n\nassert solution(\n    \"\"\"\n    4 7\n    \"\"\"\n) == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 2) == \"ababacd\"\nassert solution(4, 7) == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'ababacd'\nassert solution(stdin) == '-1'"
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(read_input()) == \"ababacd\"\n"
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"ababacd\"\nassert solution(input()) == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"ababacd\"\nassert solution(input()) == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('7 4') == 'ababacd'\nassert solution('4 7') == '-1'"
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 4\\n\") == \"ababacd\\n\"\nassert solution(\"4 7\\n\") == \"-1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\") == \"9\\n\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4) == 4\nassert solution(10) == 9"
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2 1 2\\n10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"4\\n\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 1 2\") == \"4\"\nassert solution(\"10 1 1 2 2 2 1 1 2 2 1\") == \"9\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"4\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\") == \"9\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Input\\n4\\n1 2 1 2\\n') == 'Output\\n4\\n'\nassert solution('Input\\n10\\n1 1 2 2 2 1 1 2 2 1\\n') == 'Output\\n9\\n'"
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Incorrect output\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution"
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2 1 2\\n\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"9\\n\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2 1 2\") == 4\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\") == 9\n"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2 1\\n1 1 2\\n2 2 1\") == \"2\\n-\\n2\\n+\"\nassert solution(\"6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\") == \"6\\n++-\\n2\\n+-+\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test failed for input {input()}, expected output {output}, got {solution(input())}\"\n"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n2 2 1\n1 1 2\n2 2 1\n\"\"\") == \"2\\n-\\n2\"\n\nassert solution(\"\"\"\n6 6 3\n2 2 6\n1 4 5\n2 3 4\n1 4 1\n1 3 1\n2 2 3\n\"\"\") == \"6\\n++-\\n2\\n+-+\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"test_case.txt\", \"r\").read()) == \"2\\n++-\\n2\\n+-+\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Test failed: {solution(input())}!= {expected}\"\n"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 2 1') == '2\\n-\\n2\\n+'\nassert solution('6 6 3') == '6\\n++-*\\n2\\n+-+*'\n\nfrom typing import List"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 2 1\\n1 1 2\\n2 2 1') == '2\\n-\\n2\\n+'\nassert solution('6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3') == '6\\n++-\\n2\\n+-+'"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n2 2 1\n1 1 2\n2 2 1\n''') == '''2\n-\n2\n+'''\n\nassert solution('''\n6 6 3\n2 2 6\n1 4 5\n2 3 4\n1 4 1\n1 3 1\n2 2 3\n''') == '''6\n++-\n2\n+-+'''"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Input') == 'Output'\n"
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1689') == '1869'\nassert solution('18906') == '18690'"
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1689') == '1869', \"Solution should return '1869', but it returned '{}' instead.\".format(solution('1689'))\n\nassert solution('18906') == '18690', \"Solution should return '18690', but it returned '{}' instead.\".format(solution('18906'))\n\nassert solution('19910') == '0', \"Solution should return '0', but it returned '{}' instead.\".format(solution('19910'))"
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1689\") == \"1869\", \"Input '1689' should output '1869'\"\nassert solution(\"18906\") == \"18690\", \"Input '18906' should output '18690'\"\nassert solution(\"25\") == \"0\", \"Input '25' should output '0'\"\nassert solution(\"0\") == \"0\", \"Input '0' should output '0'\"\nassert solution(\"1\") == \"1\", \"Input '1' should output '1'\"\nassert solution(\"10\") == \"10\", \"Input '10' should output '10'\"\nassert solution(\"100\") == \"100\", \"Input '100' should output '100'\"\nassert solution(\"1000\") == \"1000\", \"Input '1000' should output '1000'\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1689\") == \"1869\", \"Test 1\"\nassert solution(\"18906\") == \"18690\", \"Test 2\"\nassert solution(\"0123456789\") == \"0\", \"Test 3\"\nassert solution(\"1234567890\") == \"0\", \"Test 4\"\nassert solution(\"123456789123456789\") == \"0\", \"Test 5\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1689) == 1869, \"Invalid solution\"\nassert solution(18906) == 18690, \"Invalid solution\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1689) == 1869, \"Test 1\"\nassert solution(18906) == 18690, \"Test 2\"\nassert solution(18906789) == 0, \"Test 3\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Test failed: solution({input()}) should return {output()}, but got {solution(input())}.\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1689') == '1869', \"Test 1\"\nassert solution('18906') == '18690', \"Test 2\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 2\n"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 'your solution here'"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"The output is not as expected.\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == expected_output, f\"Solution failed for input {input_data} and expected output {expected_output}\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4 2\n1 3\n3 4\n\"\"\") == \"2\\n\"\n\nassert solution(\"\"\"\n4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n\"\"\") == \"-1\\n\"\n\nassert solution(\"\"\"\n5 5\n4 2\n3 5\n4 5\n5 1\n1 2\n\"\"\") == \"3\\n\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 2\\n1 3\\n3 4\\n') == 2\nassert solution('4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 1\\n1 2\\n') == -1\nassert solution('5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n') == 3"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n1 3\\n3 4\\n\\n4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 1\\n1 2\\n\") == \"2\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 1\\n1 2\\n\") == \"-1\"\nassert solution(\"5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\") == \"3\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(r'4 2\\n1 3\\n3 4\\n') == '2'\nassert solution(r'4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n') == '-1'\nassert solution(r'5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n') == '3'"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n4 7\") == \"3\"\nassert solution(\"3\\n4 3 1\") == \"9\"\nassert solution(\"4\\n2 3 4 1 5\") == \"30\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n4 7\\n\") == \"3\"\nassert solution(\"3\\n4 3 1\\n\") == \"9\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n4 7\\n') == '3'\nassert solution('3\\n4 3 1\\n') == '9'"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4, 7) == 3\nassert solution(3, 4, 3, 1) == 9\nprint(solution(2))  # This line will fail with the error \"ValueError: invalid literal for int() with base 10: '3'\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"9\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Input') == 'Output'"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('Input\\n2\\n4 7\\n') == 'Output\\n3\\n'\nassert solution('Input\\n3\\n4 3 1\\n') == 'Output\\n9\\n'"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n4 7\\n\") == \"3\\n\"\nassert solution(\"3\\n4 3 1\\n\") == \"9\\n\"\nassert solution(\"2\\n4\\n5\") == \"10\\n\"\nassert solution(\"4\\n\") == \"4\\n\"\nassert solution(\"6\\n7 8 9 10\\n11\") == \"40\\n\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n4 7\\n\") == \"3\\n\"\nassert solution(\"3\\n4 3 1\\n\") == \"9\\n\"\nassert solution(\"\") == \"\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n4 7\\n\") == \"3\\n\"\nassert solution(\"3\\n4 3 1\\n\") == \"9\\n\"\nassert solution(\"2\\n3\\n4 5\\n\") == \"6\\n\"\nassert solution(\"10\\n1 2\\n3 4 5 6\\n\") == \"168\\n\"\nassert solution(\"10\\n7 2 3 8\\n\") == \"510\\n\"\nassert solution(\"10\\n3\\n1 2 3 4 5 6 7 8\\n\") == \"1408\\n\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n8 5\") == \"9\"\nassert solution(\"5\\n3 10 2 1 5\") == \"2\"\nassert solution(\"4\\n0 5 15 10\") == \"0\"\nassert solution(\"1\\n1\") == \"-1\"\n\nfrom typing import List"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '9'\nassert solution() == '2'\nassert solution() == '0'\nassert solution() == '-1'"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n3 10 2 1 5') == '2'\nassert solution('4\\n0 5 15 10') == '0'\nassert solution('1\\n1') == '-1'"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n4 8 5\") == \"9\\n\"\nassert solution(\"5\\n3 10 2 1 5\") == \"2\\n\"\nassert solution(\"4\\n0 5 15 10\") == \"0\\n\"\nassert solution(\"1\\n1\") == \"-1\\n\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4 8 5\") == \"9\"\nassert solution(\"5\\n3 10 2 1 5\") == \"2\"\nassert solution(\"4\\n0 5 15 10\") == \"0\"\nassert solution(\"1\\n1\") == \"-1\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n4 8 5\") == \"9\"\nassert solution(\"5\\n3 10 2 1 5\") == \"2\"\nassert solution(\"4\\n0 5 15 10\") == \"0\"\nassert solution(\"1\\n1\") == \"-1\"\n"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n4 8 5\") == \"9\"\nassert solution(\"5\\n3 10 2 1 5\") == \"2\"\nassert solution(\"4\\n0 5 15 10\") == \"0\"\nassert solution(\"1\\n1\") == \"-1\"\n"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"9\", \"Output incorrect\"\nassert solution() == \"2\", \"Output incorrect\"\nassert solution() == \"0\", \"Output incorrect\"\nassert solution() == \"-1\", \"Output incorrect\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3') == '9'\nassert solution('5') == '2'\nassert solution('4') == '0'\nassert solution('1') == '-1'"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n4 8 5\") == \"9\"\nassert solution(\"5\\n3 10 2 1 5\") == \"2\"\nassert solution(\"4\\n0 5 15 10\") == \"0\"\nassert solution(\"1\\n1\") == \"-1\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 3\nprint(\"All tests passed\")"
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\\n\") == \"3\\n\"\nassert solution(\"13 4 5\\n7 8 9 10\\n\") == \"1\\n\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\\n\") == \"3\"\nassert solution(\"13 4 5\\n7 8 9 10\\n\") == \"1\"\n\nfrom typing import List"
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(example1) == \"3\"\nassert solution(example2) == \"1\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10 4 5\\n3 5 7 10') == '3\\n'\nassert solution('13 4 5\\n7 8 9 10') == '1\\n'"
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 3, \"Test failed\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Your solution is incorrect. Please submit the correct code for the problem.\\nExpected: {expected}\\nActual: {solution(stdin)}\""
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 2 # example 1\n\nassert solution == 4 # example 2\n\nassert solution == 6 # example 3"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n101\\n3 3\\n3 2\\n3 1\") == \"2\"\nassert solution(\"4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\") == \"4\"\nassert solution(\"6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\") == \"6\""
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n101\\n3 3\\n3 2\\n3 1\") == \"2\"\nassert solution(\"4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\\n\") == \"4\"\nassert solution(\"6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n\") == \"6\""
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n101\\n3 3\\n3 2\\n3 1') == 2\nassert solution('4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2') == 4\nassert solution('6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5') == 6"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n101\\n3 3\\n3 2\\n3 1') == '2'\nassert solution('4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2') == '4'\nassert solution('6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5') == '6'\n\nsolution('3\\n101\\n3 3\\n3 2\\n3 1') # Output: 2\nsolution('4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2') # Output: 4\nsolution('6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5') # Output: 6"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Input\\n3\\n101\\n3 3\\n3 2\\n3 1\\n\\nOutput\\n2\\n\\nInput\\n4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\\n\\nOutput\\n4\\n\\nInput\\n6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n\\nOutput\\n6\") == \"2\\n4\\n6\\n\\n\""
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n101\\n3 3\\n3 2\\n3 1') == '2\\n'\nassert solution('4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\\n') == '4\\n'\nassert solution('6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5') == '6\\n'"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n101\\n3 3\\n3 2\\n3 1') == '2'\nassert solution('4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2') == '4'\nassert solution('6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5') == '6'"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n101\\n3 3\\n3 2\\n3 1\\n\") == \"2\\n\"\nassert solution(\"4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\\n\") == \"4\\n\"\nassert solution(\"6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n\") == \"6\\n\""
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n101\\n3 3\\n3 2\\n3 1\\n\") == \"2\"\nassert solution(\"4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\\n\") == \"4\"\nassert solution(\"6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n\") == \"6\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\") == \"1111\"\nassert solution(\"5 3\") == \"01010\"\nassert solution(\"7 3\") == \"1011011\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Test failed for input: {input()}, expected output: {expected}\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\") == \"1111\"\nassert solution(\"5 3\") == \"01010\"\nassert solution(\"7 3\") == \"1011011\"\n"
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1111\"\nassert solution(input()) == \"01010\"\nassert solution(input()) == \"1011011\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\") == \"1111\"\nassert solution(\"5 3\") == \"01010\"\nassert solution(\"7 3\") == \"1011011\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\") == \"1111\"\nassert solution(\"5 3\") == \"01010\"\nassert solution(\"7 3\") == \"1011011\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1111\"\nassert solution(input()) == \"01010\"\nassert solution(input()) == \"1011011\"\nassert solution(input()) == \"1011011\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\") == \"1111\"\nassert solution(\"5 3\") == \"01010\"\nassert solution(\"7 3\") == \"1011011\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\") == \"1111\"\nassert solution(\"5 3\") == \"01010\"\nassert solution(\"7 3\") == \"1011011\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n') == '1/2\\n'\nassert solution('3\\n1 1 1\\n') == '0/1\\n'"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n\") == \"1/2\\n\"\nassert solution(\"3\\n1 1 1\\n\") == \"0/1\\n\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=None) == '''1/2'''\nassert solution(stdin=None) == '''0/1'''"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n') == '1/2\\n'\nassert solution('3\\n1 1 1\\n') == '0/1\\n'"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"0/1\"\n"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n\") == \"1/2\\n\"\nassert solution(\"3\\n1 1 1\\n\") == \"0/1\\n\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n') == '1/2\\n'\nassert solution('3\\n1 1 1\\n') == '0/1\\n'"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n3\\n1 1 1\\n\") == \"1/2\\n0/1\"\nassert solution(\"1\\n2\\n3\\n4 5 6\\n\") == \"1/2\\n0/1\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n\") == \"1/2\\n\"\nassert solution(\"3\\n1 1 1\\n\") == \"0/1\\n\"\n"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n\") == \"1/2\\n\"\nassert solution(\"3\\n1 1 1\\n\") == \"0/1\\n\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\") == \"1 0 1 0 0\"\nassert solution(\"5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\") == \"4 3 2 1 0\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n\") == \"1 0 1 0 0\"\nassert solution(\"5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\\n\") == \"4 3 2 1 0\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n\") == \"1 0 1 0 0\\n\"\nassert solution(\"5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\\n\") == \"4 3 2 1 0\\n\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '1 0 1 0 0'\nassert solution() == '4 3 2 1 0'"
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Input\\n5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n\") == \"1 0 1 0 0\\n\"\nassert solution(\"Input\\n5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\\n\") == \"4 3 2 1 0\\n\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == '''\n1 0 1 0 0\n'''"
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test Case {test_case} failed: Solution {solution(input())} does not match expected output {expected_output}\"\n"
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\").read()) == \"1 0 1 0 0\"\nassert solution(open(\"input2.txt\").read()) == \"4 3 2 1 0\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n\") == \"1 0 1 0 0\"\nassert solution(\"5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\\n\") == \"4 3 2 1 0\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n4 5 1 7 4\\n\") == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\"\nassert solution(\"2\\n1 2\\n\") == \"0\\n2\\n11\\n11\"\nassert solution(\"3\\n1 1 1\\n\") == \"1\\n0\\n11\\n11\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\"1\n8\n01010\n00011\n01010\n10010\n00011\n11000\n00011\n11000\"\"\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Solution: {solution(stdin)}, Expected: {expected}\"\n"
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output"
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n4 5 1 7 4\\n') == '1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000'"
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n4 5 1 7 4\\n\") == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\"\nassert solution(\"2\\n1 2\\n\") == \"0\\n2\\n11\\n11\"\nassert solution(\"3\\n1 1 1\\n\") == \"1\\n0\\n0\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\"\nassert solution(input()) == \"0\\n2\\n11\\n11\\n\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\\n\"\nassert solution() == \"0\\n2\\n11\\n11\\n\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Output: {solution(stdin)}, Expected: {expected}\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n6\n0 1 2 3\n0 4 6 1\n1 6 7 2\n2 7 5 3\n6 4 5 7\n4 0 3 5\n''') == '1\\n'"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5') == '1\\n'\n\nprint('All tests pass!')"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n\") == \"1\\n\"\nprint(\"All test cases pass.\")"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\\n\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n') == '1\\n'\nprint('All tests passed!')"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n6\n0 1 2 3\n0 4 6 1\n1 6 7 2\n2 7 5 3\n6 4 5 7\n4 0 3 5\n''') == '1'\n\nprint(\"All test cases pass\")"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''6\n0 1 2 3\n0 4 6 1\n1 6 7 2\n2 7 5 3\n6 4 5 7\n4 0 3 5''') == '1'\n\nassert solution('''6\n0 1 2 3\n0 4 6 1\n1 6 7 2\n2 7 5 3\n6 4 5 7\n4 0 3 5''') == '2'\n\nassert solution('''6\n0 1 2 3\n0 4 6 1\n1 6 7 2\n2 7 5 3\n6 4 5 7\n4 0 3 5''') == '3'\n\nassert solution('''6\n0 1 2 3\n0 4 6 1\n1 6 7 2\n2 7 5 3\n6 4 5 7\n4 0 3 5''') == '4'\n\nassert solution('''6\n0 1 2 3\n0 4 6 1\n1 6 7 2\n2 7 5 3\n6 4 5 7\n4 0 3 5''') == '5'\n\nassert solution('''6\n0 1 2 3\n0 4 6 1\n1 6 7 2\n2 7 5 3\n6 4 5 7\n4 0 3 5''') == '6'\n\nassert solution('''6\n0 1 2 3\n0 4 6 1\n1 6 7 2\n2 7 5 3\n6 4 5 7\n4 0 3 5''') == '7'\n\nassert solution('''6\n0 1 2 3\n0 4 6 1\n1 6 7 2\n2 7 5 3\n6 4 5 7\n4 0 3 5''') == '8'\n\nassert solution('''6\n0 1 2 3\n0 4 6 1\n1 6 7 2\n2 7 5 3\n6 4 5 7\n4 0 3 5''') == '9'\n\nassert solution('''6\n0 1 2 3\n0 4 6 1\n1 6 7 2\n2 7 5 3\n6 4 5 7\n4 0 3 5''') == '10'\n\nassert solution('''6\n0 1 2 3\n0 4 6 1\n1 6 7 2\n2 7 5 3\n6 4 5 7\n4 0 3 5''') == '11'\n\nassert solution('''6\n0 1 2 3\n0 4 6 1\n1 6 7 2\n2 7 5 3\n6 4 5 7\n4 0 3 5''') == '12'\n\nassert solution('''6\n0 1 2 3\n0 4 6 1\n1 6 7 2\n2 7 5 3\n6 4 5 7\n4 0 3 5''') == '13'\n\nassert solution('''6\n0 1 2 3\n0 4 6 1\n1 6 7 2\n2 7 5 3\n6 4 5 7\n4 0 3 5''') == '14'\n\nassert solution('''6\n0 1 2 3\n0 4 6 1\n1 6 7 2\n2 7 5 3\n6 4 5 7\n4 0 3 5''') == '15'\n\nassert solution('''6\n0 1 2 3\n0 4 6 1\n1 6 7 2\n2 7 5 3\n6 4 5 7\n4 0 3 5''') == '16'\n\nassert solution('''6\n0 1 2 3\n0 4 6 1\n1 6 7 2\n2 7 5 3\n6 4 5 7\n4 0 3 5''') == '17'"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n\") == \"1\\n\"\n"
    }
]