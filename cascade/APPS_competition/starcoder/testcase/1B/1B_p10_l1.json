[
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2 3\") == \"5\"\nassert solution(\"8\\n( 2 ( 2 1 ) ) 3\") == \"9\"\nassert solution(\"4\\n( 12 3 )\") == \"36\"\nassert solution(\"6\\n( 2 ) ( 3 )\") == \"5\"\nassert solution(\"6\\n( ( 2 3 ) )\") == \"5\"\n"
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}, got: {solution(input())}\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n2 3\") == \"5\"\nassert solution(\"8\\n( 2 ( 2 1 ) ) 3\") == \"9\"\nassert solution(\"4\\n( 12 3 )\") == \"36\"\nassert solution(\"6\\n( 2 ) ( 3 )\") == \"5\"\nassert solution(\"6\\n( ( 2 3 ) )\") == \"5\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test failed: {input()}!= {output}\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n2 3\\n') == '5\\n'\nassert solution('8\\n( 2 ( 2 1 ) ) 3\\n') == '9\\n'\nassert solution('4\\n( 12 3 )\\n') == '36\\n'\nassert solution('6\\n( 2 ) ( 3 )\\n') == '5\\n'\nassert solution('6\\n( ( 2 3 ) )\\n') == '5\\n'"
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"5\", \"Test 1\"\nassert solution(\"8 ( 2 ( 2 1 ) ) 3\") == \"9\", \"Test 2\"\nassert solution(\"4 ( 12 3 )\") == \"36\", \"Test 3\"\nassert solution(\"6 ( 2 ) ( 3 )\") == \"5\", \"Test 4\"\nassert solution(\"6 ( ( 2 3 ) )\") == \"5\", \"Test 5\"\n"
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n2 3\") == \"5\\n\", \"Test 1 failed\"\nassert solution(\"8\\n( 2 ( 2 1 ) ) 3\") == \"9\\n\", \"Test 2 failed\"\nassert solution(\"4\\n( 12 3 )\") == \"36\\n\", \"Test 3 failed\"\nassert solution(\"6\\n( 2 ) ( 3 )\") == \"5\\n\", \"Test 4 failed\"\nassert solution(\"6\\n( ( 2 3 ) )\") == \"5\\n\", \"Test 5 failed\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"5\\n\"\nassert solution(\"8 ( 2 ( 2 1 ) ) 3\") == \"9\\n\"\nassert solution(\"4 ( 12 3 )\") == \"36\\n\"\nassert solution(\"6 ( 2 ) ( 3 )\") == \"5\\n\"\nassert solution(\"6 ( ( 2 3 ) )\") == \"5\\n\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n2 3\\n\") == \"5\\n\"\nassert solution(\"8\\n( 2 ( 2 1 ) ) 3\\n\") == \"9\\n\"\nassert solution(\"4\\n( 12 3 )\\n\") == \"36\\n\"\nassert solution(\"6\\n( 2 ) ( 3 )\\n\") == \"5\\n\"\nassert solution(\"6\\n( ( 2 3 ) )\\n\") == \"5\\n\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n2 3\\n\") == \"5\\n\", \"Input 1 failed\"\nassert solution(\"8\\n( 2 ( 2 1 ) ) 3\\n\") == \"9\\n\", \"Input 2 failed\"\nassert solution(\"4\\n( 12 3 )\\n\") == \"36\\n\", \"Input 3 failed\"\nassert solution(\"6\\n( 2 ) ( 3 )\\n\") == \"5\\n\", \"Input 4 failed\"\nassert solution(\"6\\n( ( 2 3 ) )\\n\") == \"5\\n\", \"Input 5 failed\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0\") == \"0\\n\", \"Test 1\"\nassert solution(\"009990001\") == \"3\\n\", \"Test 2\"\nassert solution(\"29998\") == \"5\\n\", \"Test 3\"\nassert solution(\"610\") == \"4\\n\", \"Test 4\"\nassert solution(\"981\") == \"2\\n\", \"Test 5\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == output, \"Your code is wrong. Please check the examples and the description.\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(0) == 0, \"Sabotage! exclaimed J.R. Diddly, president and founder of Diddly Widgets Inc.\"\nassert solution(99999999) == 3, \"Vandalism, perhaps. Nothing's actually been damaged.\"\nassert solution(29998) == 5, \"It's a palindrome.\"\nassert solution(610) == 4, \"4 steps.\"\nassert solution(981) == 2, \"2 steps.\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"009990001\") == \"3\"\nassert solution(\"29998\") == \"5\"\nassert solution(\"610\") == \"4\"\nassert solution(\"981\") == \"2\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"009990001\") == \"3\"\nassert solution(\"29998\") == \"5\"\nassert solution(\"610\") == \"4\"\nassert solution(\"981\") == \"2\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0\") == \"0\\n\"\nassert solution(\"009990001\") == \"3\\n\"\nassert solution(\"29998\") == \"5\\n\"\nassert solution(\"610\") == \"4\\n\"\nassert solution(\"981\") == \"2\\n\"\n"
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(610) == \"4\", \"Expected output: 4, got: \" + solution(610)"
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"009990001\") == \"3\"\nassert solution(\"29998\") == \"5\"\nassert solution(\"610\") == \"4\"\nassert solution(\"981\") == \"2\"\n"
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"009990001\") == \"3\"\nassert solution(\"29998\") == \"5\"\nassert solution(\"610\") == \"4\"\nassert solution(\"981\") == \"2\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Expected: {output}, Got: {solution(input())}\"\n"
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\") == \"seems legit\"\\n\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\") == \"insufficient service\"\\n\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\") == \"tampered odometer\"\\n\nassert solution(\"2\\n2013 1 0\\n2013 2 0\") == \"seems legit\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\\n\") == \"seems legit\"\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\\n\") == \"insufficient service\"\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\\n\") == \"tampered odometer\"\nassert solution(\"2\\n2013 1 0\\n2013 2 0\\n\") == \"seems legit\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"seems legit\" # expected output: \"seems legit\"\nassert solution(open(\"test_input.txt\", \"r\").read()) == \"seems legit\" # expected output: \"seems legit\"\nassert solution(open(\"tampered_input.txt\", \"r\").read()) == \"tampered odometer\" # expected output: \"tampered odometer\"\nassert solution(open(\"insufficient_service_input.txt\", \"r\").read()) == \"insufficient service\" # expected output: \"insufficient service\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\") == \"seems legit\"\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\") == \"insufficient service\"\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\") == \"tampered odometer\"\nassert solution(\"2\\n2013 1 0\\n2013 2 0\") == \"seems legit\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\") == \"seems legit\"\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\") == \"insufficient service\"\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\") == \"tampered odometer\"\nassert solution(\"2\\n2013 1 0\\n2013 2 0\") == \"seems legit\"\n"
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\") == \"seems legit\"\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\") == \"insufficient service\"\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\") == \"tampered odometer\"\nassert solution(\"2\\n2013 1 0\\n2013 2 0\") == \"seems legit\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\") == \"seems legit\"\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\") == \"insufficient service\"\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\") == \"tampered odometer\"\nassert solution(\"2\\n2013 1 0\\n2013 2 0\") == \"seems legit\"\n"
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"seems legit\"\nassert solution(4) == \"seems legit\"\nassert solution(5) == \"seems legit\"\nassert solution(6) == \"seems legit\"\nassert solution(7) == \"seems legit\"\nassert solution(8) == \"seems legit\"\nassert solution(9) == \"seems legit\"\nassert solution(10) == \"seems legit\"\nassert solution(11) == \"seems legit\"\nassert solution(12) == \"seems legit\"\nassert solution(13) == \"seems legit\"\nassert solution(14) == \"seems legit\"\nassert solution(15) == \"seems legit\"\nassert solution(16) == \"seems legit\"\nassert solution(17) == \"seems legit\"\nassert solution(18) == \"seems legit\"\nassert solution(19) == \"seems legit\"\nassert solution(20) == \"seems legit\"\nassert solution(21) == \"seems legit\"\nassert solution(22) == \"seems legit\"\nassert solution(23) == \"seems legit\"\nassert solution(24) == \"seems legit\"\nassert solution(25) == \"seems legit\"\nassert solution(26) == \"seems legit\"\nassert solution(27) == \"seems legit\"\nassert solution(28) == \"seems legit\"\nassert solution(29) == \"seems legit\"\nassert solution(30) == \"seems legit\"\nassert solution(31) == \"seems legit\"\nassert solution(32) == \"seems legit\"\nassert solution(33) == \"seems legit\"\nassert solution(34) == \"seems legit\"\nassert solution(35) == \"seems legit\"\nassert solution(36) == \"seems legit\"\nassert solution(37) == \"seems legit\"\nassert solution(38) == \"seems legit\"\nassert solution(39) == \"seems legit\"\nassert solution(40) == \"seems legit\"\nassert solution(41) == \"seems legit\"\nassert solution(42) == \"seems legit\"\nassert solution(43) == \"seems legit\"\nassert solution(44) == \"seems legit\"\nassert solution(45) == \"seems legit\"\nassert solution(46) == \"seems legit\"\nassert solution(47) == \"seems legit\"\nassert solution(48) == \"seems legit\"\nassert solution(49) == \"seems legit\"\nassert solution(50) == \"seems legit\"\nassert solution(51) == \"seems legit\"\nassert solution(52) == \"seems legit\"\nassert solution(53) == \"seems legit\"\nassert solution(54) == \"seems legit\"\nassert solution(55) == \"seems legit\"\nassert solution(56) == \"seems legit\"\nassert solution(57) == \"seems legit\"\nassert solution(58) == \"seems legit\"\nassert solution(59) == \"seems legit\"\nassert solution(60) == \"seems legit\"\nassert solution(61) == \"seems legit\"\nassert solution(62) == \"seems legit\"\nassert solution(63) == \"seems legit\"\nassert solution(64) == \"seems legit\"\nassert solution(65) == \"seems legit\"\nassert solution(66) == \"seems legit\"\nassert solution(67) == \"seems legit\"\nassert solution(68) == \"seems legit\"\nassert solution(69) == \"seems legit\"\nassert solution(70) == \"seems legit\"\nassert solution(71) == \"seems legit\"\nassert solution(72) == \"seems legit\"\nassert solution(73) == \"seems legit\"\nassert solution(74) == \"seems legit\"\nassert solution(75) == \"seems legit\"\nassert solution(76) == \"seems le"
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\") == \"seems legit\"\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\") == \"insufficient service\"\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\") == \"tampered odometer\"\nassert solution(\"2\\n2013 1 0\\n2013 2 0\") == \"seems legit\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\") == 0\nassert solution(\"4\\n1 2\\n0 2 3\\n0 1\\n1\\n\\n\\n5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n\\n6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\") == 3\nassert solution(\"5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n\\n6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\") == 2\nassert solution(\"6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n\") == 4"
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2\\n0 2 3\\n0 1\\n1\\n6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\") == \"3\"\nassert solution(\"5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n\") == \"2\"\nassert solution(\"6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\") == \"2\"\nassert solution(\"4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n\") == \"4\"\n"
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(input())) == \"3\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\\n\", \"Output 2 is incorrect\"\nassert solution(input()) == \"2\\n\", \"Output 2 is incorrect\"\nassert solution(input()) == \"2\\n\", \"Output 2 is incorrect\"\nassert solution(input()) == \"2\\n\", \"Output 2 is incorrect\"\nassert solution(input()) == \"2\\n\", \"Output 2 is incorrect\"\n"
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2\\n0 2 3\\n0 1\\n1\\n\\n5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n\\n6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n\\n\\n2\\n1\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n\\n6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n\\n\\n2\\n1\\n1\\n1\\n\") == \"2\\n\"\nassert solution(\"6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n\\n\\n2\\n1\\n1\\n1\\n\") == \"2\\n\"\nassert solution(\"4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n\\n\\n2\\n1\\n1\\n1\\n\") == \"4\\n\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\\n\"\nassert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"4\\n\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_str) == output_str, f\"Test Case {i+1} failed. Expected: {output_str}, Received: {solution(input_str)}\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Sample Input 1\\n4\\n1 2\\n0 2 3\\n0 1\\n1\\nSample Output 1\\n3\\n\\nSample Input 2\\n5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\nSample Output 2\\n2\\n\\nSample Input 3\\n6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\nSample Output 3\\n2\\n\\nSample Input 4\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\nSample Output 4\\n4\\n\") == \"3\\n2\\n\"\nassert solution(\"Sample Input 2\\n5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\nSample Output 2\\n2\\n\\nSample Input 3\\n6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\nSample Output 3\\n2\\n\\nSample Input 4\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\nSample Output 4\\n4\\n\") == \"2\\n\"\nassert solution(\"Sample Input 3\\n6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\nSample Output 3\\n2\\n\\nSample Input 4\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\nSample Output 4\\n4\\n\") == \"2\\n\"\nassert solution(\"Sample Input 4\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\nSample Output 4\\n4\\n\") == \"4\\n\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Sample Input 1\\n4\\n1 2\\n0 2 3\\n0 1\\n1\\nSample Output 1\\n3\\n\") == \"3\"\nassert solution(\"Sample Input 2\\n5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\nSample Output 2\\n2\\n\") == \"2\"\nassert solution(\"Sample Input 3\\n6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\nSample Output 3\\n2\\n\") == \"2\"\nassert solution(\"Sample Input 4\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\nSample Output 4\\n4\\n\") == \"4\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2\\n0 2 3\\n0 1\\n1\\n\\n5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n\\n6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n\\n\\n\") == \"3\\n2\\n2\\n4\\n4\"\nassert solution(\"5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n\\n6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n\\n\") == \"2\\n2\\n\"\nassert solution(\"6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n\\n\") == \"2\\n2\\n\"\nassert solution(\"4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n\\n\") == \"4\\n4\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\nBLUE 1 5000\\nRED 5001 10000\") == \"2\"\nassert solution(\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\") == \"3\"\nassert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\nBLUE 1 5000\\nRED 5001 10000\\n\") == \"2\\n\"\nassert solution(\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\n\") == \"3\\n\"\nassert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\n\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {i+1} failed: expected output '{expected_output}', got '{solution(stdin)}'.\"\nfor i, (color, a, b) in enumerate(stdin.splitlines(), start=1):\n    assert solution(stdin) == expected_output, f\"Test case {i+1} failed: expected output '{expected_output}', got '{solution(stdin)}'.\"\n"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\nBLUE 1 5000\\nRED 5001 10000\\n\") == \"2\\n\"\nassert solution(\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\n\") == \"3\\n\"\nassert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"2\\nBLUE 1 4000\\nRED 4002 10000\\n\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\nBLUE 1 5000\\nRED 5001 10000\\nSample Output 1: 2\\n\\nSample Input 2:3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\nSample Output 2:3\\n\\nSample Input 3:4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\nSample Output 3:IMPOSSIBLE\\n\\nSample Input 4:2\\nBLUE 1 4000\\nRED 4002 10000\\nSample Output 4:IMPOSSIBLE\") == \"2\\n3\\nIMPOSSIBLE\\n\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3\nassert solution(sample_input_4) == sample_output_4\n\nsample_input_1 = '''\n2\nBLUE 1 5000\nRED 5001 10000\n'''\nsample_output_1 = '''\n2\n'''\n\nsample_input_2 = '''\n3\nBLUE 1 6000\nRED 2000 8000\nWHITE 7000 10000\n'''\nsample_output_2 = '''\n3\n'''\n\nsample_input_3 = '''\n4\nBLUE 1 3000\nRED 2000 5000\nORANGE 4000 8000\nGREEN 7000 10000\n'''\nsample_output_3 = '''\nIMPOSSIBLE\n'''\n\nsample_input_4 = '''\n2\nBLUE 1 4000\nRED 4002 10000\n'''\nsample_output_4 = '''\nIMPOSSIBLE\n'''"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\nBLUE 1 5000\\nRED 5001 10000') == 2\nassert solution('3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000') == 3\nassert solution('4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000') == 'IMPOSSIBLE'"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n2\nBLUE 1 5000\nRED 5001 10000\n''') == '2'\n\nassert solution('''\n3\nBLUE 1 6000\nRED 2000 8000\nWHITE 7000 10000\n''') == '3'\n\nassert solution('''\n4\nBLUE 1 3000\nRED 2000 5000\nORANGE 4000 8000\nGREEN 7000 10000\n''') == 'IMPOSSIBLE'\n\nassert solution('''\n2\nBLUE 1 4000\nRED 4002 10000\n''') == 'IMPOSSIBLE'"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\nBLUE 1 5000\\nRED 5001 10000\\n\") == \"2\\n\"\nassert solution(\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\n\") == \"3\\n\"\nassert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"2\\nBLUE 1 4000\\nRED 4002 10000\\n\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Sample Output 1: Incorrect Output\"\nassert solution(\"GGGGGGGGG\") == \"1\", \"Sample Output 2: Incorrect Output\"\nassert solution(\"PRIME\") == \"5\", \"Sample Output 3: Incorrect Output\"\nassert solution(\"BABBABABBABBA\") == \"6\", \"Sample Output 4: Incorrect Output\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Invalid output for Sample Input 1\"\nassert solution(\"GGGGGGGGG\") == \"1\", \"Invalid output for Sample Input 2\"\nassert solution(\"PRIME\") == \"5\", \"Invalid output for Sample Input 3\"\nassert solution(\"BABBABABBABBA\") == \"6\", \"Invalid output for Sample Input 4\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"PRATTATTATTIC\") == 6, \"Expected output: 6, got: \" + str(solution(\"PRATTATTATTIC\"))\nassert solution(\"GGGGGGGGG\") == 1, \"Expected output: 1, got: \" + str(solution(\"GGGGGGGGG\"))\nassert solution(\"PRIME\") == 5, \"Expected output: 5, got: \" + str(solution(\"PRIME\"))\nassert solution(\"BABBABABBABBA\") == 6, \"Expected output: 6, got: \" + str(solution(\"BABBABABBABBA\"))"
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Sample Input 1\"\nassert solution(\"GGGGGGGGG\") == \"1\", \"Sample Input 2\"\nassert solution(\"PRIME\") == \"5\", \"Sample Input 3\"\nassert solution(\"BABBABABBABBA\") == \"6\", \"Sample Input 4\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Test 1: PRATTATTATTIC\"\nassert solution(\"GGGGGGGGG\") == \"1\", \"Test 2: GGGGGGGGGG\"\nassert solution(\"PRIME\") == \"5\", \"Test 3: PRIME\"\nassert solution(\"BABBABABBABBA\") == \"6\", \"Test 4: BABBABABBABBA\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Test Case 1\"\nassert solution(\"GGGGGGGGG\") == \"1\", \"Test Case 2\"\nassert solution(\"PRIME\") == \"5\", \"Test Case 3\"\nassert solution(\"BABBABABBABBA\") == \"6\", \"Test Case 4\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Your code is incorrect\"\nassert solution(\"GGGGGGGGG\") == \"1\", \"Your code is incorrect\"\nassert solution(\"PRIME\") == \"5\", \"Your code is incorrect\"\nassert solution(\"BABBABABBABBA\") == \"6\", \"Your code is incorrect\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Test case 1 failed\"\nassert solution(\"GGGGGGGGG\") == \"1\", \"Test case 2 failed\"\nassert solution(\"PRIME\") == \"5\", \"Test case 3 failed\"\nassert solution(\"BABBABABBABBA\") == \"6\", \"Test case 4 failed\"\n"
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Test 1 failed\"\nassert solution(\"GGGGGGGGG\") == \"1\", \"Test 2 failed\"\nassert solution(\"PRIME\") == \"5\", \"Test 3 failed\"\nassert solution(\"BABBABABBABBA\") == \"6\", \"Test 4 failed\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"PRATTATTATTIC\") == 6, \"Test case 1 failed\"\nassert solution(\"GGGGGGGGG\") == 1, \"Test case 2 failed\"\nassert solution(\"PRIME\") == 5, \"Test case 3 failed\"\nassert solution(\"BABBABABBABBA\") == 6, \"Test case 4 failed\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n\") == \"0\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n\") == \"1\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\\n\") == \"0\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == \"0\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n\") == \"0\\n\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n\") == \"1\\n\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\\n\") == \"0\\n\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == \"0\\n\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n\") == \"0\"\n\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n\") == \"1\"\n\nassert solution(\"I 1 X\\nD 1\\nE\\nE\\n\") == \"0\"\n\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == \"0\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\") == \"0\\n\", \"Test 1 failed\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\") == \"1\\n\", \"Test 2 failed\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\") == \"0\\n\", \"Test 3 failed\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\") == \"0\\n\", \"Test 4 failed\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"D 1\\nD 2\\nE\") == \"0\\n\", \"Sample Input 1\"\nassert solution(\"D 2\\nD 1\\nE\") == \"1\\n\", \"Sample Input 2\"\nassert solution(\"I 1 X\\nD 1\\nE\") == \"0\\n\", \"Sample Input 3\"\nassert solution(\"I 14 B\\nI 14 A\\nE\") == \"0\\n\", \"Sample Input 4\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n') == '0\\n'\nassert solution('D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n') == '1\\n'\nassert solution('I 1 X\\nD 1\\nE\\nE\\n') == '0\\n'\nassert solution('I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n') == '0\\n'"
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"D 1\\nD 2\\nE\") == \"0\"\nassert solution(\"D 2\\nD 1\\nE\") == \"1\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\") == \"0\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\") == \"0\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\") == \"0\", \"Expected: 0\\nGot: \" + solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\")\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\") == \"1\", \"Expected: 1\\nGot: \" + solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\")\nassert solution(\"I 1 X\\nD 1\\nE\\nE\") == \"0\", \"Expected: 0\\nGot: \" + solution(\"I 1 X\\nD 1\\nE\\nE\")\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\") == \"0\", \"Expected: 0\\nGot: \" + solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\")"
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\") == \"0\\n\", \"Test case 1 failed\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\") == \"1\\n\", \"Test case 2 failed\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\") == \"0\\n\", \"Test case 3 failed\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\") == \"0\\n\", \"Test case 4 failed\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"D 1\\nD 2\\nE\") == \"0\\n\"\nassert solution(\"D 2\\nD 1\\nE\") == \"1\\n\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\") == \"0\\n\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\") == \"0\\n\"\n\nfrom typing import List\n\nclass LongLongString:\n    def __init__(self):\n        self.s = \"\"\n\n    def insert(self, c: str, p: int) -> None:\n        self.s = c + self.s[p:]\n\n    def delete(self, p: int) -> None:\n        if p > 0:\n            self.s = self.s[:p] + self.s[p + 1:]\n        else:\n            self.s = \"\"\n\n    def compare(self, other: \"LongLongString\") -> int:\n        if len(self.s) > len(other.s):\n            return -1\n        elif len(self.s) < len(other.s):\n            return 1\n        else:\n            return self.s == other.s"
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Test failed. Expected: {expected}, got: {solution(input())}\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == \"300\", \"The maximum amount of Bling Johan can have after playing 4 days is 300.\"\nassert solution(input2) == \"1900\", \"The maximum amount of Bling Johan can have after playing 5 days is 1900.\"\nassert solution(input3) == \"2300\", \"The maximum amount of Bling Johan can have after playing 6 days is 2300.\"\nassert solution(input4) == \"399\", \"The maximum amount of Bling Johan can have after playing 10 days is 399.\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\"\nassert solution(\"10 399 0 0 0 0\") == \"399\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"300\", \"Incorrect output\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\"\nassert solution(\"10 399 0 0 0 0\") == \"399\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\"\nassert solution(\"10 399 0 0 0 0\") == \"399\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\"\nassert solution(\"10 399 0 0 0 0\") == \"399\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\\n\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\\n\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\\n\"\nassert solution(\"10 399 0 0 0 0\") == \"399\\n\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\"\nassert solution(\"10 399 0 0 0 0\") == \"399\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == # Expected Output"
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    2 10\n    1 12\n    1 13\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    2 10\n    1 5\n    1 12\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    2 10\n    1 5\n    1 4\n    \"\"\"\n) == \"2\\n\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n2 10\n1 12\n1 13\n''') == '2\\n'\n\nassert solution('''\n2 10\n1 5\n1 12\n''') == '2\\n'\n\nassert solution('''\n2 10\n1 5\n1 4\n''') == '2\\n'\n\nassert solution('''\n2 10\n1 5\n4 1\n''') == '2\\n'"
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 2, \"The output is incorrect.\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 10\\n1 12\\n1 13\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 12\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 4\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n4 1\") == \"2\\n\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '2\\n'\nassert solution(open('sample_input.txt', 'r')) == '2\\n'\nassert solution(open('sample_input.txt', 'r')) == '2\\n'\nassert solution(open('sample_input.txt', 'r')) == '2\\n'\nassert solution(open('sample_input.txt', 'r')) == '2\\n'\nassert solution(open('sample_input.txt', 'r')) == '2\\n'\nassert solution(open('sample_input.txt', 'r')) == '2\\n'"
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 10\\n1 12\\n1 13\\n\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 12\\n\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 4\\n\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n4 1\\n\") == \"2\\n\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_str) == output_str, f\"The output is incorrect. Expected {output_str}, but got {solution(input_str)}\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 10\\n1 12\\n1 13\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 12\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n4 1\") == \"2\\n\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, \"1 10\\n1 12\\n1 13\\n\") == \"2\\n\"\nassert solution(3, \"1 5\\n1 12\\n4 1\\n\") == \"2\\n\"\nassert solution(3, \"1 5\\n4 1\\n1 4\\n\") == \"2\\n\"\nassert solution(3, \"1 5\\n4 1\\n1 5\\n\") == \"2\\n\"\nassert solution(3, \"1 5\\n4 1\\n\") == \"2\\n\"\nassert solution(3, \"1 5\\n4 1\\n1 5\\n\") == \"2\\n\"\nassert solution(3, \"1 5\\n4 1\\n\") == \"2\\n\"\nassert solution(3, \"1 5\\n4 1\\n1 5\\n\") == \"2\\n\"\nassert solution(3, \"1 5\\n4 1\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4\n10 10 5\n10 20 5\n20 10 5\n20 20 5\n\"\"\") == 28\n\nassert solution(\"\"\"\n4\n10 10 5\n10 20 1\n20 10 12\n20 20 8\n\"\"\") == 36.2842712475\n\nassert solution(\"\"\"\n6\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3\n\"\"\") == 28.970562748\n\nassert solution(\"\"\"\n8\n4 4 1\n4 6 1\n4 8 1\n6 6 14\n8 4 1\n8 6 1\n8 8 1\n99 6 -8\n\"\"\") == 32"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output\n"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 28, \"Incorrect output: 28\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5') == 28, \"Sample Output 1\"\nassert solution('4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8') == 36.2842712475, \"Sample Output 2\"\nassert solution('6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3') == 28.970562748, \"Sample Output 3\"\nassert solution('8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8') == 32, \"Sample Output 4\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\") == \"28\\n\"\nassert solution(\"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\") == \"36.2842712475\\n\"\nassert solution(\"6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\") == \"28.970562748\\n\"\nassert solution(\"8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\") == \"32\\n\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input(1)) == \"28\"\nassert solution(sample_input(2)) == \"36.2842712475\"\nassert solution(sample_input(3)) == \"28.970562748\"\nassert solution(sample_input(4)) == \"32\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\") == \"28\"\nassert solution(\"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\") == \"36.2842712475\"\nassert solution(\"6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\") == \"28.970562748\"\nassert solution(\"8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\") == \"32\"\n\nfrom typing import List"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\\n\") == \"28\\n\"\nassert solution(\"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\\n\") == \"36.2842712475\\n\"\nassert solution(\"6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n\") == \"28.970562748\\n\"\nassert solution(\"8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\\n\") == \"32\\n\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\\n\") == \"28\\n\"\nassert solution(\"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\\n\") == \"36.2842712475\\n\"\nassert solution(\"6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n\") == \"28.970562748\\n\"\nassert solution(\"8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\\n\") == \"32\\n\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\") == \"28\"\nassert solution(\"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\") == \"36.2842712475\"\nassert solution(\"6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\") == \"28.970562748\"\nassert solution(\"8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\") == \"32\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\\n\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\") == \"3\\n\"\nassert solution(\"3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8\") == \"1\\n\"\nassert solution(\"3\\n2 1 6 5\\n2 5 5 4\\n5 1 7 7\") == \"1\\n\"\nassert solution(\"2\\n-1 -2 -1 -1\\n-1 2 -1 -1\") == \"1\\n\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\") == \"3\\n\"\nassert solution(\"3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8\") == \"1\\n\"\nassert solution(\"3\\n2 1 6 5\\n2 5 5 4\\n5 1 7 7\") == \"1\\n\"\nassert solution(\"2\\n-1 -2 -1 -1\\n-1 2 -1 -1\") == \"1\\n\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, \"Test case failed\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    3\n    1 3 9 5\n    2 2 6 8\n    4 8 9 3\n    \"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"\n    3\n    5 2 7 10\n    7 4 4 10\n    2 4 10 8\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    3\n    2 1 6 5\n    2 5 5 4\n    5 1 7 7\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    2\n    -1 -2 -1 -1\n    -1 2 -1 -1\n    \"\"\"\n) == \"1\\n\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"Test Case {test_case} failed: expected {expected_output}, got {solution(stdin)}\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == '''\nSolution:\nCounting points at which line segments intersect or touch\n\nFunction:\n"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\\n\", \"Test 1\\n\"\nassert solution() == \"1\\n\", \"Test 2\\n\"\nassert solution() == \"1\\n\", \"Test 3\\n\"\nassert solution() == \"1\\n\", \"Test 4\\n\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == \"3\\n\"\nassert solution(2) == \"1\\n\"\nassert solution(3) == \"1\\n\"\nassert solution(4) == \"1\\n\""
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(10) == 10, \"Test 1\"\nassert solution(55) == 55, \"Test 2\"\nassert solution(101) == -1, \"Test 3\"\nassert solution(1234321) == 94708, \"Test 4\""
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(10) == \"10\"\nassert solution(55) == \"55\"\nassert solution(101) == \"-1\"\nassert solution(1234321) == \"94708\""
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(10) == '10'\nassert solution(55) == '55'\nassert solution(101) == '-1'\nassert solution(1234321) == '94708'"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\") == 10, \"Incorrect output\"\nassert solution(\"55\") == 55, \"Incorrect output\"\nassert solution(\"101\") == -1, \"Incorrect output\"\nassert solution(\"1234321\") == 94708, \"Incorrect output\""
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(10) == \"10\"\nassert solution(55) == \"55\"\nassert solution(101) == \"-1\"\nassert solution(1234321) == \"94708\""
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(10) == 10, \"Expected 10, got {}\".format(solution(10))\nassert solution(55) == 55, \"Expected 55, got {}\".format(solution(55))\nassert solution(101) == -1, \"Expected -1, got {}\".format(solution(101))\nassert solution(1234321) == 94708, \"Expected 94708, got {}\".format(solution(1234321))"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '1234567890'\n"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 0, 0, 0, 3) == 6\nassert solution(1, 2, 0, 0, 5) == 2\nassert solution(1, 2, 0, 0, 4) == 4\nassert solution(1, 2, 0, 0, 6) == 0"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"6\\n\"\n\nassert solution() == \"2\\n\"\n\nassert solution() == \"4\\n\"\n\nassert solution() == \"0\\n\""
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 0 0 0 3') == '6'\nassert solution('1 2 0 0 5') == '2'\nassert solution('1 2 0 0 4') == '4'\nassert solution('1 2 0 0 6') == '0'"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"6\", \"Incorrect output\"\n\nimport bisect"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 0 0 0 3\") == \"6\"\nassert solution(\"1 2 0 0 5\") == \"2\"\nassert solution(\"1 2 0 0 4\") == \"4\"\nassert solution(\"1 2 0 0 6\") == \"0\"\n\nfrom typing import List"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 0 0 0 3\") == \"6\"\nassert solution(\"1 2 0 0 5\") == \"2\"\nassert solution(\"1 2 0 0 4\") == \"4\"\nassert solution(\"1 2 0 0 6\") == \"0\""
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Testcase {index + 1} failed: Solution and output do not match\"\n"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3 0 0 0 3) == 6\nassert solution(1 2 0 0 5) == 2\nassert solution(1 2 0 0 4) == 4\nassert solution(1 2 0 0 6) == 0"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(input())) == 6, \"Incorrect Output\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"(-1.26167861, 3.88425357)\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\"\n"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\\n\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\\n\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\\n\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\\n\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\", \"Expected: -1.26167861 3.88425357\\nActual: \" + solution(\"0.5 -5.301 3.098\")\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\", \"Expected: 9.21068947 2.56226688\\nActual: \" + solution(\"0.5 8 8\")\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\", \"Expected: 6.22375968 -0.31921472\\nActual: \" + solution(\"1 8 8\")\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\", \"Expected: -4.36385220 9.46891588\\nActual: \" + solution(\"0.5 -8 8\")\n"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\nprint(\"Test Passed\")\n\ninput1 = [0.5, -5.301, 3.098]\noutput1 = [-1.26167861, 3.88425357]\n\ninput2 = [0.5, 8, 8]\noutput2 = [9.21068947, 2.56226688]\n\ninput3 = [1, 8, 8]\noutput3 = [6.22375968, -0.31921472]\n\ninput4 = [0.5, -8, 8]\noutput4 = [-4.36385220, 9.46891588]\n\ninputs = [input1, input2, input3, input4]\noutputs = [output1, output2, output3, output4]\n\nfor i in range(len(inputs)):\n    assert abs(inputs[i][0] - outputs[i][0]) <= 10**-5\n    assert abs(inputs[i][1] - outputs[i][1]) <= 10**-5\n\nprint(\"Test Passed\")"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'\nassert solution('0.5 -8 8') == '-4.36385220 9.46891588'"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357', \"Solution 1\"\nassert solution('0.5 8 8') == '9.21068947 2.56226688', \"Solution 2\"\nassert solution('1 8 8') == '6.22375968 -0.31921472', \"Solution 3\"\nassert solution('0.5 -8 8') == '-4.36385220 9.46891588', \"Solution 4\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2\nassert solution(sample_input3) == sample_output3\nassert solution(sample_input4) == sample_output4\n\nsample_input1 = \"\"\"\n0.5 -5.301 3.098\n\"\"\"\nsample_output1 = \"\"\"\n-1.26167861 3.88425357\n\"\"\"\n\nsample_input2 = \"\"\"\n0.5 8 8\n\"\"\"\nsample_output2 = \"\"\"\n9.21068947 2.56226688\n\"\"\"\n\nsample_input3 = \"\"\"\n1 8 8\n\"\"\"\nsample_output3 = \"\"\"\n6.22375968 -0.31921472\n\"\"\"\n\nsample_input4 = \"\"\"\n0.5 -8 8\n\"\"\"\nsample_output4 = \"\"\"\n-4.36385220 9.46891588\n\"\"\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == 'Output\\n1\\n2\\n\\n1\\n1\\n\\n2\\n4\\n5'"
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"0\\n2\\n\", \"Sample Output 1 is not correct\"\nassert solution() == \"1\\n1\\n\", \"Sample Output 2 is not correct\"\nassert solution() == \"0\\n\", \"Sample Output 3 is not correct\"\nassert solution() == \"0\\n0\\n\", \"Sample Output 4 is not correct\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\\n2\"\nassert solution() == \"1\\n1\"\nassert solution() == \"0\"\nassert solution() == \"2\\n4\"\nassert solution() == \"2\\n5\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, Got: {solution(stdin)}\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\\n\") == \"1\\n2\\n\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\\n\") == \"1\\n1\\n\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n\") == \"0\\n2\\n4\\n5\\n\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\") == \"0\"\nassert solution(\"4 5\\n1 2\\n2 3\\n2 4\\n3 1\\n4 1\") == \"2\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\") == \"1\\n2\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\") == \"1\\n1\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\") == \"0\\n2\\n4\\n5\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n2 2\n1 2\n2 1\n''') == '''\n1\n2\n'''\n\nassert solution('''\n3 3\n1 2\n2 3\n3 1\n''') == '''\n1\n1\n'''\n\nassert solution('''\n4 5\n1 2\n1 3\n3 2\n2 4\n3 4\n''') == '''\n0\n'''\n\nassert solution('''\n4 5\n1 2\n2 3\n2 4\n3 1\n4 1\n''') == '''\n2\n4\n5\n'''"
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\") == \"1\\n2\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\") == \"1\\n1\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\") == \"0\\n2\\n4\\n5\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"11\\n\"\nassert solution(open(\"sample_input_1.txt\", \"r\").read()) == \"11\\n\"\nassert solution(open(\"sample_input_2.txt\", \"r\").read()) == \"infinity\\n\"\nassert solution(open(\"sample_input_3.txt\", \"r\").read()) == \"2\\n\"\nassert solution(open(\"sample_input_4.txt\", \"r\").read()) == \"infinity\\n\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == \"11\"\nassert solution(sample_input_2) == \"infinity\"\nassert solution(sample_input_3) == \"2\"\nassert solution(sample_input_4) == \"infinity\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\nSample Input 1:\\n4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\nSample Output 1:\\n11\\n\\n\\nSample Input 2:\\n5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\nSample Output 2:\\ninfinity\\n\\n\\nSample Input 3:\\n2 1 0 1\\n0 1 2\\nSample Output 3:\\n2\\n\\n\\nSample Input 4:\\n3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\nSample Output 4:\\ninfinity\\n\\n\") == \"11\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\nSample Input 1:\\n4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\nSample Output 1:\\n11\\n\\n\\nSample Input 2:\\n5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\nSample Output 2:\\ninfinity\\n\\n\\nSample Input 3:\\n2 1 0 1\\n0 1 2\\nSample Output 3:\\n2\\n\\n\\nSample Input 4:\\n3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\nSample Output 4:\\ninfinity\\n\\n\") == \"infinity\"\nassert solution(\"2 1 0 1\\n0 1 2\\nSample Input 1:\\n4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\nSample Output 1:\\n11\\n\\n\\nSample Input 2:\\n5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\nSample Output 2:\\ninfinity\\n\\n\\nSample Input 3:\\n2 1 0 1\\n0 1 2\\nSample Output 3:\\n2\\n\\n\\nSample Input 4:\\n3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\nSample Output 4:\\ninfinity\\n\\n\") == \"2\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\") == \"11\\n\", \"Invalid output\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\") == \"infinity\\n\", \"Invalid output\"\nassert solution(\"2 1 0 1\\n0 1 2\") == \"2\\n\", \"Invalid output\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\") == \"infinity\\n\", \"Invalid output\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\") == \"11\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\") == \"infinity\"\nassert solution(\"2 1 0 1\\n0 1 2\") == \"2\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\") == \"infinity\"\nassert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\") == \"11\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\") == \"infinity\"\nassert solution(\"2 1 0 1\\n0 1 2\") == \"2\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\") == \"infinity\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed: expected {output}, got {solution(input())}\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n') == '11\\n'\nassert solution('5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n') == 'infinity\\n'\nassert solution('2 1 0 1\\n0 1 2\\n') == '2\\n'\nassert solution('3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n') == 'infinity\\n'\nassert solution('4 1 0 0\\n0 0 1\\n0 0 0\\n1 1 1\\n') == 'infinity\\n'"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\") == \"11\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\") == \"infinity\"\nassert solution(\"2 1 0 1\\n0 1 2\") == \"2\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\") == \"infinity\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 'infinity' # For the first example\nassert solution() == '2' # For the second example\nassert solution() == '2' # For the third example\nassert solution() == 'infinity' # For the fourth example"
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\") == \"6\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\") == \"0\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\") == \"18\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\") == \"12\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"6\\n\"\n"
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 2 1 2 1\\n2 1 2\\n2 3 4\\nSample Output 1:6\\n\\nSample Input 2:3 3 1 1\\n1 1\\n2 2 3\\nSample Output 2:0\\n\\nSample Input 3:3 2 2 3\\n1 1\\n2 2 3\\nSample Output 3:18\\n\\nSample Input 4:3 1 2 3\\n2 1 2\\n0\\nSample Output 4:12\\n') == '6\\n0\\n18\\n12\\n'"
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\") == \"6\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\") == \"0\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\") == \"18\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\") == \"12\"\n"
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\") == \"6\\n\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\") == \"0\\n\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\") == \"18\\n\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\") == \"12\\n\"\n"
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == \"6\\n\"\nassert solution(sample_input_2) == \"0\\n\"\nassert solution(sample_input_3) == \"18\\n\"\nassert solution(sample_input_4) == \"12\\n\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"6\", \"Incorrect output\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\") == \"6\\n\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\") == \"0\\n\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\") == \"18\\n\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\") == \"12\\n\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2 1 2 1\") == \"6\"\nassert solution(\"3 3 1 1\") == \"0\"\nassert solution(\"3 2 2 3\") == \"18\"\nassert solution(\"3 1 2 3\") == \"12\"\n"
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"6\\n\", \"Output is incorrect.\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1000000 1\") == \"468559\"\nassert solution(\"1000000 5\") == \"49401\"\nassert solution(\"1000000 16\") == \"20\"\nassert solution(\"9000000000000000000 62\") == \"1\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution(stdin)) == \"468559\"\nassert solution(solution(stdin)) == \"49401\"\nassert solution(solution(stdin)) == \"20\"\nassert solution(solution(stdin)) == \"1\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1000000 1') == 468559\nassert solution('1000000 5') == 49401\nassert solution('1000000 16') == 20\nassert solution('9000000000000000000 62') == 1"
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=f\"{1000000} {1}\\n{1000000} {5}\\n{1000000} {16}\\n{9000000000000000000} {62}\\n\") == f\"{468559}\\n{49401}\\n{20}\\n{1}\\n\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1000000 1') == '468559', 'Solution is incorrect'\nassert solution('1000000 5') == '49401', 'Solution is incorrect'\nassert solution('1000000 16') == '20', 'Solution is incorrect'\nassert solution('9000000000000000000 62') == '1', 'Solution is incorrect'\n"
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1000000 1\\n1000000 5\\n1000000 16\\n9000000000000000000 62\\n\") == \"468559\\n49401\\n20\\n1\\n\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"49401\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1000000 1\\n1000000 5\\n1000000 16\\n9000000000000000000 62\\n\") == \"49401\\n\"\nassert solution(\"1000000 1\\n1000000 5\\n1000000 16\\n9000000000000000000 62\\n\") == \"20\\n\"\nassert solution(\"1000000 1\\n1000000 5\\n1000000 16\\n9000000000000000000 62\\n\") == \"1\\n\"\nassert solution(\"1000000 1\\n1000000 5\\n1000000 16\\n9000000000000000000 62\\n\") == \"1\\n\"\nassert solution(\"1000000 1\\n1000000 5\\n1000000 16\\n9000000000000000000 62\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1000000 1\") == \"468559\"\nassert solution(\"1000000 5\") == \"49401\"\nassert solution(\"1000000 16\") == \"20\"\nassert solution(\"9000000000000000000 62\") == \"1\"\n"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 9\\n5 4 1\\n\") == \"1\\n\"\nassert solution(\"4 13\\n2 2 2 2\\n\") == \"3\\n\"\nassert solution(\"18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\\n\") == \"12\\n\"\n"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n3 9\n5 4 1\n''') == '''\n1\n'''\n\nassert solution('''\n4 13\n2 2 2 2\n''') == '''\n3\n'''\n\nassert solution('''\n18 90\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\n''') == '''\n12\n'''\n\nassert solution('''\n3 7\n5 4 3 2\n''') == '''\n1\n'''\n\nassert solution('''\n3 10\n5 4 3 2 1\n''') == '''\n2\n'''"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 9\\n5 4 1\\n\") == \"1\\n\"\nassert solution(\"4 13\\n2 2 2 2\\n\") == \"3\\n\"\nassert solution(\"18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\\n\") == \"12\\n\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 9\\n5 4 1\") == \"1\\n\"\nassert solution(\"4 13\\n2 2 2 2\") == \"3\\n\"\nassert solution(\"18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\") == \"12\\n\"\n"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output, f\"Incorrect output: '{solution(stdin)}', expected '{expected_output}'\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 9\\n5 4 1\") == \"1\\n\"\nassert solution(\"4 13\\n2 2 2 2\") == \"3\\n\"\nassert solution(\"18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\") == \"12\\n\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, \"Your code is incorrect!\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 9\\n5 4 1\\n') == '1\\n'\nassert solution('4 13\\n2 2 2 2\\n') == '3\\n'\nassert solution('18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\\n') == '12\\n'"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1\\n\", \"Expected output: '1'\\n\""
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1\\n\") == \"0\\n\"\nassert solution(\"3\\n4 7 8\\n\") == \"3\\n\"\nassert solution(\"5\\n2 3 4 5 8\\n\") == \"5\\n\""
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"5\""
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 5\n"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 0\nassert solution(2) == 0\nassert solution(3) == 3\nassert solution(4) == 3\nassert solution(5) == 5"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 0\nassert solution(2) == 0\nassert solution(3) == 3\nassert solution(4) == 3\nassert solution(5) == 5"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == 0\nassert solution('3\\n4 7 8\\n') == 3\nassert solution('5\\n2 3 4 5 8\\n') == 5"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0\"\n\nassert solution(input()) == \"3\"\n\nassert solution(input()) == \"5\""
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1\\n\") == 0\nassert solution(\"3\\n4 7 8\\n\") == 3\nassert solution(\"5\\n2 3 4 5 8\\n\") == 5\n"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6') == '4', \"The expected result is 4, but the actual result is {}\".format(solution('6'))\nassert solution('149') == '17', \"The expected result is 17, but the actual result is {}\".format(solution('149'))\nassert solution('123476544') == '11112', \"The expected result is 11112, but the actual result is {}\".format(solution('123476544'))"
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\"\n\nfrom typing import List"
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\") == 4\nassert solution(\"149\") == 17\nassert solution(\"123476544\") == 11112"
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\"\n"
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\") == \"4\\n\", \"Expected: 4\\nActual: \" + str(solution(\"6\")) + \"\\n\"\nassert solution(\"149\") == \"17\\n\", \"Expected: 17\\nActual: \" + str(solution(\"149\")) + \"\\n\"\nassert solution(\"123476544\") == \"11112\\n\", \"Expected: 11112\\nActual: \" + str(solution(\"123476544\")) + \"\\n\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\\n\") == \"adcb\\n\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"f 2\\ndea\\ncfb\\n\") == \"AMBIGUOUS\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('d 4\\n'\n                 'cab\\n'\n                 'cda\\n'\n                 'ccc\\n'\n                 'badca\\n') == 'adcb\\n'\n\nassert solution('c 4\\n'\n                 'abc\\n'\n                 'bca\\n'\n                 'cab\\n'\n                 'aca\\n') == 'IMPOSSIBLE\\n'\n\nassert solution('f 2\\n'\n                 'dea\\n'\n                 'cfb\\n') == 'AMBIGUOUS\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_str) == expected_output, f\"Test failed with input {input_str} and expected output {expected_output}\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\") == \"adcb\"\n\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\") == \"IMPOSSIBLE\"\n\nassert solution(\"f 2\\ndea\\ncfb\") == \"AMBIGUOUS\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\\n\") == \"adcb\\n\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"f 2\\ndea\\ncfb\\n\") == \"AMBIGUOUS\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\\n\") == \"adcb\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\\n\") == \"IMPOSSIBLE\"\nassert solution(\"f 2\\ndea\\ncfb\\n\") == \"AMBIGUOUS\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"adcb\"\nassert solution(open(\"sample_input_1.txt\", \"r\")) == \"adcb\"\nassert solution(open(\"sample_input_2.txt\", \"r\")) == \"IMPOSSIBLE\"\nassert solution(open(\"sample_input_3.txt\", \"r\")) == \"AMBIGUOUS\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('d 4\\n'\n                 'cab\\n'\n                 'cda\\n'\n                 'ccc\\n'\n                 'badca') == 'adcb\\n'\n\nassert solution('c 4\\n'\n                 'abc\\n'\n                 'bca\\n'\n                 'cab\\n'\n                 'aca') == 'IMPOSSIBLE\\n'\n\nassert solution('f 2\\n'\n                 'dea\\n'\n                 'cfb') == 'AMBIGUOUS\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\") == \"adcb\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\") == \"IMPOSSIBLE\"\nassert solution(\"f 2\\ndea\\ncfb\") == \"AMBIGUOUS\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('d 4\\ncab\\ncda\\nccc\\nbadca') == 'adcb'\nassert solution('c 4\\nabc\\nbca\\ncab\\naca') == 'IMPOSSIBLE'\nassert solution('f 2\\ndea\\ncfb') == 'AMBIGUOUS'"
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3 3 3\") == \"9\"\nassert solution(\"10 20 0 0\") == \"10\"\nassert solution(\"100 20 543 12\") == \"164\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='2 3 3 3\\n10 20 0 0\\n100 20 543 12\\n') == '9\\n10\\n164\\n'"
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 3 3 3') == '9'\nassert solution('10 20 0 0') == '10'\nassert solution('100 20 543 12') == '164'"
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3 3 3\\n10 20 0 0\\n100 20 543 12\") == 9\nassert solution(\"100 20 543 12\\n10 20 0 0\") == 10\nassert solution(\"100 20 543 12\\n10 20 0 0\\n2 3 3 3\") == 164"
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3 3 3\") == \"9\"\nassert solution(\"10 20 0 0\") == \"10\"\nassert solution(\"100 20 543 12\") == \"164\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input1) == output1, f\"Expected {output1}, got {solution(input1)}\"\nassert solution(input2) == output2, f\"Expected {output2}, got {solution(input2)}\"\nassert solution(input3) == output3, f\"Expected {output3}, got {solution(input3)}\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3 3 3\") == \"9\\n\", \"Test Case 1 Failed\"\nassert solution(\"10 20 0 0\") == \"10\\n\", \"Test Case 2 Failed\"\nassert solution(\"100 20 543 12\") == \"164\\n\", \"Test Case 3 Failed\"\n\nfrom typing import List"
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3 3 3\") == \"9\", \"Sample Input 1\"\nassert solution(\"10 20 0 0\") == \"10\", \"Sample Input 2\"\nassert solution(\"100 20 543 12\") == \"164\", \"Sample Input 3\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3 3 3\\n10 20 0 0\\n100 20 543 12\") == \"9\\n10\\n164\"\nassert solution(\"2 1 1 1\\n1 1 1 1\\n2 2 2 2\\n2 2 2 2\") == \"2\\n2\\n2\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 3 3 3\\n10 20 0 0\\n100 20 543 12') == '9\\n'\nassert solution('3 2 1 0\\n5 3 2 1\\n6 1 2 1') == '11\\n'\nassert solution('1 2 3 4') == '0\\n'"
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\\n\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\\n\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\\n\") == \"yes\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n4 2 3\n0 1\n1 0\n-1 0\n0 -1\n-1 1 0\n2 1 0\n\"\"\") == \"yes\\n\"\n\nassert solution(\n\"\"\"\n4 3 3\n0 1\n1 2\n-1 2\n0 -1\n-1 1 -2\n-1 -1 2\n0 -1 0\n\"\"\") == \"no\\n\"\n\nassert solution(\n\"\"\"\n3 2 3\n2 1\n0 0\n-1 -2\n1 1 -2\n3 6 12\n\"\"\") == \"yes\\n\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\\n\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\\n\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\\n\") == \"yes\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\"\n\nfrom typing import List\n"
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\\n\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\\n\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\\n\") == \"yes\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\\n\", \"Output incorrect\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\\n\", \"Output incorrect\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\\n\", \"Output incorrect\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 'no', \"Please implement the solution\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\"\n\nfrom typing import List"
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"652526\") == \"4\\n\"\nassert solution(\"12121131221\") == \"7\\n\"\nassert solution(\"123456789\") == \"1\\n\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('652526') == 4\nassert solution('12121131221') == 7\nassert solution('123456789') == 1"
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"652526\") == \"4\", \"Test case 1 failed\"\nassert solution(\"12121131221\") == \"7\", \"Test case 2 failed\"\nassert solution(\"123456789\") == \"1\", \"Test case 3 failed\"\n\nfrom typing import List"
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"652526\") == \"4\", \"652526\" # This is incorrect, it should return 4 but returns \"4\". Fix the code below."
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('652526') == '4\\n', \"Incorrect output for sample input 1.\"\nassert solution('12121131221') == '7\\n', \"Incorrect output for sample input 2.\"\nassert solution('123456789') == '1\\n', \"Incorrect output for sample input 3.\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == output1, f\"Test 1 failed. Expected: {output1}, Received: {solution(input1)}\"\nassert solution(input2) == output2, f\"Test 2 failed. Expected: {output2}, Received: {solution(input2)}\"\nassert solution(input3) == output3, f\"Test 3 failed. Expected: {output3}, Received: {solution(input3)}\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"Output a single integer, indicating the maximum amount of gold that the bandits can purloin and still get safely home.\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\\n\") == \"0\"\nassert solution(\"4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n\") == \"24\"\nassert solution(\"6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\n\") == \"800\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Solution is incorrect. Expected: {expected}, Received: {solution(stdin)}\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n3 3\n1\n1 2\n2 3\n1 3\n''') == '0\\n'\n\nassert solution('''\n4 4\n24 10\n1 3\n2 3\n2 4\n1 4\n''') == '24\\n'\n\nassert solution('''\n6 8\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6\n''') == '800\\n'"
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''3 3\n1\n1 2\n2 3\n1 3''') == '0\\n'\nassert solution('''4 4\n24 10\n1 3\n2 3\n2 4\n1 4''') == '24\\n'\nassert solution('''6 8\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6''') == '800\\n'"
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == '0'\nassert solution(sample_input2) == '24'\nassert solution(sample_input3) == '800'"
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '800', \"The maximum amount of gold that the bandits can purloin and still get safely home should be 800.\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\\n\") == \"0\\n\"\nassert solution(\"4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n\") == \"24\\n\"\nassert solution(\"6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\n\") == \"800\\n\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3\\n1\\n1 2\\n2 3\\n1 3\\nSample Output 1: 0\\n\\nSample Input 2: 4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\nSample Output 2: 24\\n\\nSample Input 3: 6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\nSample Output 3: 800\\n') == '0'\nassert solution('4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\nSample Output 2: 24\\n\\nSample Input 3: 6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\nSample Output 3: 800\\n') == '24'\nassert solution('6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\nSample Output 3: 800\\n') == '800'"
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 3 2 4\\n\") == \"1 4\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"1 2 3 4 5\\n\"\nassert solution(\"4\\n2 1 4 3\\n\") == \"-1\\n\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 3 2 4\") == \"1 4\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1 2 3 4 5\"\nassert solution(\"4\\n2 1 4 3\") == \"-1\"\n"
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == [\"1\", \"4\"]\nassert solution(4) == [\"1\", \"4\"]\nassert solution(5) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(6) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(7) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(8) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(9) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(10) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(11) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(12) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(13) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(14) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(15) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(16) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(17) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(18) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(19) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(20) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(21) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(22) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(23) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(24) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(25) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(26) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(27) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(28) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(29) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(30) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(31) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(32) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(33) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(34) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(35) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(36) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(37) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(38) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(39) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(40) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(41) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(42) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(43) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(44) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(45) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(46) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(47) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(48) == [\"1\", \"2\", \"3\","
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 3 2 4\") == \"1 4\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1 2 3 4 5\"\nassert solution(\"4\\n2 1 4 3\") == \"-1\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2\nassert solution(input_3) == output_3"
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 3 2 4\") == \"1 4\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1 2 3 4 5\\n\"\nassert solution(\"4\\n2 1 4 3\") == \"-1\\n\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=r'''4\n1 3 2 4\n''') == '''1 4'''\n\nassert solution(stdin=r'''5\n1 2 3 4 5\n''') == '''1 2 3 4 5'''\n\nassert solution(stdin=r'''4\n2 1 4 3\n''') == '''-1'''"
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('example1.txt', 'r')) == '1 4\\n'\nassert solution(open('example2.txt', 'r')) == '1 2 3 4 5\\n'\nassert solution(open('example3.txt', 'r')) == '-1\\n'\n\nfrom typing import List"
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 3 2 4\") == \"1 4\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1 2 3 4 5\\n\"\nassert solution(\"4\\n2 1 4 3\") == \"-1\\n\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == ['1', '4']\nassert solution(sample_input_2) == ['1', '2', '3', '4', '5']\nassert solution(sample_input_3) == ['-1']"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1\\n..#..#..\\n.######.\\n.######.\\n..#..#..\\n') == '8'\nassert solution('2\\n...\\n.#.\\n...\\n') == '1'\nassert solution('3\\n.#####\\n#####.\\n') == '5'"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 8\nassert solution(input()) == 1\nassert solution(input()) == 5"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"..#..#..\") == 8\nassert solution(\".#######.\") == 4\nassert solution(\".#####..\") == 2\nassert solution(\"..#..#..\") == 8\nassert solution(\"..#..#..\") == 8"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"8\", \"Incorrect output: \" + solution(stdin)"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"8\\n\", \"The correct answer is 8.\""
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 8\\n..#..#..\\n.######.\\n.######.\\n..#..#..\\n') == '8\\n'\nassert solution('3 3\\n...\\n.#.\\n...\\n') == '1\\n'\nassert solution('2 6\\n.#####\\n#####.\\n') == '5\\n'"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 8\\n..#..#..\\n.######.\\n.######.\\n..#..#..\\n\") == 8\nassert solution(\"3 3\\n...\\n.#.\\n...\\n\") == 1\nassert solution(\"2 6\\n.#####\\n#####.\\n\") == 5"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 8\\n..#..#..\\n.######.\\n.######.\\n..#..#..\") == 8\nassert solution(\"3 3\\n...\\n.#.\\n...\\n\") == 1\nassert solution(\"2 6\\n.#####\\n#####.\\n\") == 5"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1') == 6\nassert solution('3 3 3\\n3 1 1\\n1 3 2\\n3 2 3') == 13\nassert solution('3 2 2\\n1 2\\n2 1\\n1 2') == -1\n"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == 6\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\") == 13\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == -1"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n\") == \"6\\n19 12 2 18 5 5\"\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\\n\") == \"13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\"\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\\n\") == \"-1\""
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input1) == \"6\"\nassert solution(input2) == \"19 12 2 18 5 5\"\nassert solution(input3) == \"-1\""
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == \"6\\n19 12 2 18 5 5\"\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\") == \"13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\"\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == \"-1\""
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''4 5 5\n2 1 1 1 2\n5 3 4 4 3\n4 3 3 3 2\n3 1 3 3 1''') == '6\\n19 12 2 18 5 5\\n'\n\nassert solution('''3 3 3\n3 1 1\n1 3 2\n3 2 3''') == '13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\\n'\n\nassert solution('''3 2 2\n1 2\n2 1\n1 2''') == '-1\\n'"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == '6\\n19 12 2 18 5 5'\nassert solution(sample_input_2) == '13\\n4 2 6 1 9 7 5 5 7 1 2 3 3'\nassert solution(sample_input_3) == '-1'"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n'''\n4 5 5\n2 1 1 1 2\n5 3 4 4 3\n4 3 3 3 2\n3 1 3 3 1\n''') == '6\\n19 12 2 18 5 5\\n'\n\nassert solution(\n'''\n3 3 3\n3 1 1\n1 3 2\n3 2 3\n''') == '13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\\n'\n\nassert solution(\n'''\n3 2 2\n1 2\n2 1\n1 2\n''') == '-1\\n'"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1') == 6\nassert solution('3 3 3\\n3 1 1\\n1 3 2\\n3 2 3') == 13\nassert solution('3 2 2\\n1 2\\n2 1\\n1 2') == -1"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == \"6\\n19 12 2 18 5 5\"\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\") == \"13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\"\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == \"-1\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"5 1\", \"Incorrect output\"\nassert solution(4) == \"1 5\", \"Incorrect output\"\nassert solution(5) == \"3 2\", \"Incorrect output\"\nassert solution(6) == \"3 2\", \"Incorrect output\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '5 1', \"Solution is incorrect. Please fix it and resubmit.\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n3\\n3\\n3\\n3\\n3\\n1\\n2\\n3\\n4\") == \"5 1\\n\", \"Test 1\"\nassert solution(\"5\\n4\\n3\\n2\\n1\\n0\\n1\\n2\\n3\\n4\") == \"1 5\\n\", \"Test 2\"\nassert solution(\"4\\n1\\n5\\n3\\n6\\n1\\n2\\n3\\n\") == \"3 2\\n\", \"Test 3\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('example.in').read()) == '5 1'\nassert solution(open('example.in').read()) == '1 5'\nassert solution(open('example.in').read()) == '3 2'"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == \"5 1\"\nassert solution(2) == \"1 5\"\nassert solution(3) == \"3 2\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1 5\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"5 1\", \"Test 1 failed\"\nassert solution() == \"1 5\", \"Test 2 failed\"\nassert solution() == \"3 2\", \"Test 3 failed\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(input())) == str(input())"
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3"
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 1\nassert solution(5) == 5\nassert solution(6) == 5"
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == \"1\", \"Test case 1\"\nassert solution(input2) == \"5\", \"Test case 2\"\nassert solution(input3) == \"5\", \"Test case 3\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(input())) == \"Output the number of nodes in the largest subset satisfying the Heap Property.\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n3 0\\n3 1\\n3 2\\n3 3\\n3 4\") == 1\nassert solution(\"5\\n4 0\\n3 1\\n2 2\\n1 3\\n0 4\") == 5"
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {test_case_id} failed: solution({stdin})!= expected_output\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3 0\\n3 1\\n3 2\\n3 3\\n3 4\") == \"1\\n\"\nassert solution(\"5\\n4 0\\n3 1\\n2 2\\n1 3\\n0 4\") == \"5\\n\"\nassert solution(\"6\\n3 0\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\") == \"5\\n\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 0\\n3 1\\n3 2\\n3 3\\n3 4\\n') == '1'\nassert solution('4 0\\n3 1\\n2 2\\n1 3\\n0 4\\n') == '5'\nassert solution('6\\n3 0\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n') == '5'"
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    5\n    3 0\n    3 1\n    3 2\n    3 3\n    3 4\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    5\n    4 0\n    3 1\n    2 2\n    1 3\n    0 4\n    \"\"\"\n) == \"5\\n\"\n\nassert solution(\n    \"\"\"\n    6\n    3 0\n    1 1\n    2 1\n    3 1\n    4 1\n    5 1\n    \"\"\"\n) == \"5\\n\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Output: {output}, But your solution returned {solution(input())}\""
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('sample_input1.txt', 'r')) == '4\\n3\\n4\\n5\\n6\\n'\nassert solution(open('sample_input2.txt', 'r')) == '0\\n'\nassert solution(open('sample_input3.txt', 'r')) == '5\\n1\\n2\\n3\\n6\\n7\\n'"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Solution is incorrect. Output: {solution(input())}, Expected Output: {expected_output}\""
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8\\n1 3 1\\n2 3 1\\n3 4 3\\n4 5 4\\n5 6 3\\n6 7 2\\n6 8 2\\n\") == \"4\\n3\\n4\\n5\\n6\\n\"\nassert solution(\"8\\n1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n5 6 2\\n7 8 1\\n\") == \"0\\n\"\nassert solution(\"9\\n1 2 2\\n1 3 1\\n1 4 5\\n1 5 5\\n2 6 3\\n3 7 3\\n4 8 1\\n5 9 2\\n\") == \"5\\n1\\n2\\n3\\n6\\n7\\n\""
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input1) == output1, \"Incorrect output for sample 1\"\nassert solution(input2) == output2, \"Incorrect output for sample 2\"\nassert solution(input3) == output3, \"Incorrect output for sample 3\""
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"TODO: Implement the solution\""
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == solution() # duplicate solution is accepted"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8\\n1 3 1\\n2 3 1\\n3 4 3\\n4 5 4\\n5 6 3\\n6 7 2\\n6 8 2\") == \"4\\n3\\n4\\n5\\n6\\n\"\nassert solution(\"8\\n1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n5 6 2\\n7 8 1\") == \"0\\n\"\nassert solution(\"9\\n1 2 2\\n1 3 1\\n1 4 5\\n1 5 5\\n2 6 3\\n3 7 3\\n4 8 1\\n5 9 2\") == \"5\\n1\\n2\\n3\\n6\\n7\\n\""
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '0\\n'\n\nassert solution() == '5\\n1\\n2\\n3\\n6\\n7\\n'\n\nassert solution() == '4\\n3\\n4\\n5\\n6\\n'\n\nassert solution() == '0\\n'"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == \"5\", \"Test case 1 failed\"\nassert solution(sample_input_2) == \"6\", \"Test case 2 failed\"\nassert solution(sample_input_3) == \"30\", \"Test case 3 failed\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\nV1 V2 V1 V1 V2\\n\") == \"5\"\nassert solution(\"2 1\\nV1 V2 V1 V1 V2\\n\") == \"6\"\nassert solution(\"1 2\\nR10 V1 V2 V1 E\\n\") == \"30\"\n\nfrom typing import List"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Test case {input()} failed: Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\nV1 V2 V1 V1 V2\\nSample Output 1: 5\\n\\nSample Input 2: 2 1\\nV1 V2 V1 V1 V2\\nSample Output 2: 6\\n\\nSample Input 3: 1 2\\nR10 V1 V2 V1 E\\nSample Output 3: 30\") == \"30\\n\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\nV1 V2 V1 V1 V2\") == \"5\\n\"\nassert solution(\"2 1\\nV1 V2 V1 V1 V2\") == \"6\\n\"\nassert solution(\"1 2\\nR10 V1 V2 V1 E\") == \"30\\n\"\n\nfrom typing import List, Tuple"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\nV1 V2 V1 V1 V2\\n\") == 5\nassert solution(\"2 1\\nV1 V2 V1 V1 V2\\n\") == 6\nassert solution(\"1 2\\nR10 V1 V2 V1 E\\n\") == 30"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\nV1 V2 V1 V1 V2\\n\") == \"5\"\nassert solution(\"2 1\\nV1 V2 V1 V1 V2\\n\") == \"6\"\nassert solution(\"1 2\\nR10 V1 V2 V1 E\\n\") == \"30\"\n\nfrom typing import List"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Output\", \"Test Case 3\"\n\nfrom typing import List"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 2\\nV1 V2 V1 V1 V2\\nSample Output 1: 5\\nSample Input 2: 2 1\\nSample Output 2: 6\\nSample Input 3: 1 2\\nSample Output 3: 30\\ndef solution(stdin: str) -> str: pass\\n') == '5\\n6\\n30\\n'\n"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 24\") == 38\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == 546"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 24\") == \"38\"\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == \"546\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 24\") == \"38\"\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == \"546\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 24\") == \"38\"\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == \"546\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == \"38\"\nassert solution(sample_input_2) == \"impossible\"\nassert solution(sample_input_3) == \"546\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(r'10 24') == '38'\nassert solution(r'10 11') == 'impossible'\nassert solution(r'9 216') == '546'\n\nfrom typing import List"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 24\") == \"38\", \"Test 1 failed.\"\nassert solution(\"10 11\") == \"impossible\", \"Test 2 failed.\"\nassert solution(\"9 216\") == \"546\", \"Test 3 failed.\""
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    20 60 2 1\n    5 15 0.33333 30\n    22 60 0.66666 70\n    0 10\n    \"\"\"\n) == \"466.662\"\n\nassert solution(\n    \"\"\"\n    3 4 2 1\n    1 3 0.25 8\n    2 4 0.66667 15\n    1 2\n    \"\"\"\n) == \"10.00005\"\n\nassert solution(\n    \"\"\"\n    3 4 1 0\n    0 2 0.25 8\n    \"\"\"\n) == \"2.0\""
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"20 60 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10\") == \"466.662\"\nassert solution(\"3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2\") == \"10.00005\"\nassert solution(\"3 4 1 0\\n0 2 0.25 8\") == \"2.0\"\n"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"20 60 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10\") == 466.662\nassert solution(\"3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2\") == 10.00005\nassert solution(\"3 4 1 0\\n0 2 0.25 8\") == 2.0"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"466.662\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"10.00005\"\nassert solution(open(\"input3.txt\", \"r\").read()) == \"2.0\""
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"20 60 2 1\n5 15 0.33333 30\n22 60 0.66666 70\n0 10\n\"\"\") == \"466.662\"\n\nassert solution(\"\"\"3 4 2 1\n1 3 0.25 8\n2 4 0.66667 15\n1 2\n\"\"\") == \"10.00005\"\n\nassert solution(\"\"\"3 4 1 0\n0 2 0.25 8\n\"\"\") == \"2.0\""
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"20 60 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10\") == \"466.662\"\nassert solution(\"3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2\") == \"10.00005\"\nassert solution(\"3 4 1 0\\n0 2 0.25 8\") == \"2.0\""
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"Your code is here\" # Add your solution here\n"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output\nprint(\"Test Passed\") if test_passed else print(\"Test Failed\")"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Solution doesn't match the expected output. Input: {input()}, Output: {output}, Diff: {abs(output - solution(input()))}\""
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"466.662\", \"Expected output: 466.662, but got: {}\".format(solution(input()))"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1.500000000000000\"\nassert solution() == \"0.000000000000000\"\nassert solution() == \"10.000000000000000\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('blue pink 1.0\\nred pink 1.5\\nblue red 1.0') == '1.500000000000000'\nassert solution('blue red 1.0\\nred pink 1.5') == '0.000000000000000'\nassert solution('orange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9') == '10.000000000000000'"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\nblue pink 1.0\\nred pink 1.5\\nblue red 1.0\\n') == '1.500000000000000'\nassert solution('2\\nblue red 1.0\\nred pink 1.5\\n') == '0.000000000000000'\nassert solution('4\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\\n') == '10.000000000000000'\n"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('blue pink 1.0\\nred pink 1.5\\nblue red 1.0\\n') == '1.500000000000000\\n'\nassert solution('2\\nblue red 1.0\\nred pink 1.5\\n') == '0.000000000000000\\n'\nassert solution('4\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\\n') == '10.000000000000000\\n'"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '1.500000000000000'\n\nfrom typing import List"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    3\n    blue pink 1.0\n    red pink 1.5\n    blue red 1.0\n    \"\"\"\n) == \"1.500000000000000\"\n\nassert solution(\n    \"\"\"\n    2\n    blue red 1.0\n    red pink 1.5\n    \"\"\"\n) == \"0.000000000000000\"\n\nassert solution(\n    \"\"\"\n    4\n    orange pink 1.9\n    yellow orange 1.9\n    green yellow 1.9\n    blue green 1.9\n    \"\"\"\n) == \"10.000000000000000\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('Sample Input 1\\n3\\nblue pink 1.0\\nred pink 1.5\\nblue red 1.0\\nSample Output 1\\n1.500000000000000\\n\\nSample Input 2\\n2\\nblue red 1.0\\nred pink 1.5\\nSample Output 2\\n0.000000000000000\\n\\nSample Input 3\\n4\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\\nSample Output 3\\n10.000000000000000\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nfor case in range(1, 4):\\n    assert round(solution(f'Sample Input {case}\\n{case}\\nSample Output {case}\\n'), 6) == round(1.5, 6)\\n    break\\n\\nfor case in range(1, 4):\\n    assert round(solution(f'Sample Input {case}\\n{case}\\nSample Output {case}\\n'), 6) == round(0.0, 6)\\n    break\\n\\nfor case in range(1, 4):\\n    assert round(solution(f'Sample Input {case}\\n{case}\\nSample Output {case}\\n'), 6) == round(10.0, 6)\\n    break') == True, \"The solution is incorrect\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\nblue pink 1.0\\nred pink 1.5\\nblue red 1.0') == '1.500000000000000'\nassert solution('2\\nblue red 1.0\\nred pink 1.5') == '0.000000000000000'\nassert solution('4\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9') == '10.000000000000000'"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"blue pink 1.0\\nred pink 1.5\\nblue red 1.0\\n\") == \"1.500000000000000\\n\"\nassert solution(\"2\\nblue red 1.0\\nred pink 1.5\\n\") == \"0.000000000000000\\n\"\nassert solution(\"4\\noff green 1.9\\nred blue 1.9\\nblue pink 1.9\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\\n\") == \"10.000000000000000\\n\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"3\nblue pink 1.0\nred pink 1.5\nblue red 1.0\"\"\") == \"1.500000000000000\"\nassert solution(\"\"\"2\nblue red 1.0\nred pink 1.5\"\"\") == \"0.000000000000000\"\nassert solution(\"\"\"4\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9\"\"\") == \"10.000000000000000\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\n\") == \"180\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\n\") == \"22\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n\") == \"0\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\n\") == \"180\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\n\") == \"22\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n\") == \"0\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\nSample Output 1: 180\\n\\nSample Input 2: 3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\nSample Output 2: 22\\n\\nSample Input 3: 3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\nSample Output 3: 0\") == \"180\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\nSample Output 2: 22\\n\\nSample Input 3: 3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\nSample Output 3: 0\") == \"0\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6''') == 180\nassert solution('''3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3''') == 22\nassert solution('''3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1''') == 0"
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\") == \"180\\n\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\") == \"22\\n\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\") == \"0\\n\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"too many\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6') == '180\\n'\nassert solution('3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\n') == '22\\n'\nassert solution('3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n') == '0\\n'"
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Output '{solution(input())}' does not match expected output '{expected_output}'.\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"180\"\nassert solution() == \"22\"\nassert solution() == \"0\"\n"
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == expected1, f\"Test 1 failed: {solution(sample_input1)} should be {expected1}\"\nassert solution(sample_input2) == expected2, f\"Test 2 failed: {solution(sample_input2)} should be {expected2}\"\nassert solution(sample_input3) == expected3, f\"Test 3 failed: {solution(sample_input3)} should be {expected3}\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1: 20 20\\n\\nSample Input 2: 6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2: 17 17\\n\\nSample Input 3: 3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3: -1 -1\\n\") == \"20 20\\n17 17\\n-1 -1\\n\"\n"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n6 8 5\n........\n...#....\n########\n"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\n\") == \"20 20\\n\"\nassert solution(\"6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\n\") == \"17 17\\n\"\nassert solution(\"3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\n\") == \"-1 -1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n### Solution ###\\n\\nWe can solve this problem using dynamic programming. We will use two arrays to store the minimum and maximum time that the marker can dry out at each timestep. The first array will store the minimum time and the second array will store the maximum time. We will fill these arrays as follows:\n\n- Initialize the first array with all negative infinity.\n- Initialize the second array with all positive infinity.\n- Iterate over the input line by line.\n- For each command, we will check if the command is a marker or a blank cell.\n- If the command is a marker, we will check if the marker can dry out at the current timestep. If the marker can dry out at the current timestep, we will update the minimum time and maximum time.\n- If the command is a blank cell, we will update the maximum time.\n- After iterating over all commands, we will return the minimum time and maximum time as output.\n\nHere is the implementation of the solution:\n\n```python\n"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\"\n"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test case {tc_num}: Expected output is {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Input 1:\\n6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1:\\n20 20\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1:\\n20 20\\n\\nSample Input 2:\\n6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2:\\n17 17\\n\\nSample Input 3:\\n3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3:\\n-1 -1\\n\\ndef solution(stdin: str) -> str:\\n    pass\") == \"20 20\\n17 17\\n\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1:20 20\\n\\nSample Input 2:6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2:17 17\\n\\nSample Input 3:3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3:-1 -1\\ndef solution(stdin: str) -> str:\\n    pass\\n\") == (\"20 20\\n17 17\\n\", -1, -1)"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 8 5\\n.......\\n.......\\n.......\\n...#....\\n...#....\\n.#####..\\n..#####..\\n........\\n.......\\n...#....\\n...#....\\n...#....\\n...#....\\n...#....\\n...#....\\n...#....\\n...#....\\n........\\n.......\\n...#....\\n...#....\\n...#....\\n...#....\\n...#....\\n...#....\\n...#....\\n...#....\\n........\\n.......\\n...#....\\n...#....\\n...#....\\n...#....\\n...#....\\n...#....\\n...#....\\n........\\n.......\\n...#....\\n...#....\\n...#....\\n...#....\\n...#....\\n...#....\\n...#....\\n........\\n.......\\n...#....\\n...#....\\n...#....\\n...#....\\n...#....\\n...#....\\n........\\n.......\\n...#....\\n...#....\\n...#....\\n...#....\\n...#....\\n........\\n.......\\n...#....\\n...#....\\n...#....\\n...#....\\n...#....\\n........\\n.......\\n...#....\\n...#....\\n...#....\\n...#....\\n...#....\\n........\\n.......\\n...#....\\n...#....\\n...#....\\n...#....\\n...#....\\n........\\n.......\\n...#....\\n...#....\\n...#....\\n...#....\\n........\\n.......\\n...#....\\n...#....\\n...#....\\n........\\n.......\\n...#....\\n...#....\\n...#....\\n........\\n.......\\n...#....\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\n........\\n.......\\n...#....\\"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1: 20 20\\n\\nSample Input 2: 6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2: 17 17\\n\\nSample Input 3: 3 3 2\\n... \\n.#. \\n... \\nup 2 \\nright 2\\nSample Output 3: -1 -1\") == \"20 20\\n17 17\"\nassert solution(\"6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2: 17 17\\n\\nSample Input 3: 3 3 2\\n... \\n.#. \\n... \\nup 2 \\nright 2\\nSample Output 3: -1 -1\") == \"-1 -1\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output\nprint(\"OK\") if solution(input()) == output else print(\"FAILED\")"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"impossible\"\n"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\") == \"impossible\"\nassert solution(\"310\\n3\\n2 40 65\\n2 100 150\\n2 300 320\") == \"300\"\nassert solution(\"90\\n2\\n2 20 35\\n2 88 200\") == \"88\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\") == \"impossible\"\nassert solution(\"310\\n3\\n2 40 65\\n2 100 150\\n2 300 320\") == \"300\"\nassert solution(\"90\\n2\\n2 20 35\\n2 88 200\") == \"88\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n\") == \"impossible\"\nassert solution(\"310\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n\") == \"300\"\nassert solution(\"90\\n2\\n2 20 35\\n2 88 200\\n\") == \"88\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n\") == \"impossible\"\nassert solution(\"310\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n\") == \"300\"\nassert solution(\"90\\n2\\n2 20 35\\n2 88 200\\n\") == \"88\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 'impossible', \"Testcase 1 failed\"\nassert solution() == '300', \"Testcase 2 failed\"\nassert solution() == '88', \"Testcase 3 failed\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n\") == \"impossible\\n\"\nassert solution(\"310\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n\") == \"300\\n\"\nassert solution(\"90\\n2\\n2 20 35\\n2 88 200\\n\") == \"88\\n\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n\") == \"impossible\"\nassert solution(\"310\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n\") == \"300\"\nassert solution(\"90\\n2\\n2 20 35\\n2 88 200\\n\") == \"88\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"impossible\", \"The expected output is impossible but it is not.\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\") == \"can fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n......\") == \"cannot fold\"\n"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n......\n......\n######\n......\n......\n......\n\"\"\") == \"cannot fold\"\n\nassert solution(\"\"\"\n......\n"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\\n\") == \"cannot fold\"\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\\n\") == \"can fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"can fold\"\nassert solution(input()) == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\") == \"cannot fold\"\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\") == \"can fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\\n\") == \"cannot fold\"\n\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\\n......\\n\") == \"can fold\"\n\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n......\\n\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('......\\n......\\n######\\n......\\n......\\n......\\n...') == 'cannot fold'\nassert solution('......\\n#.....\\n####..\\n#.....\\n......\\n......\\n......\\n...') == 'can fold'\nassert solution('..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n......\\n...') == 'cannot fold'"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\\n\") == \"can fold\"\nassert solution(\"......\\n......\\n#.....\\n####..\\n#.....\\n......\\n......\\n\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n..##..\n...#..\n..##..\n...#..\n......\n......\n''') == 'can fold'\n\nassert solution('''\n..##..\n...#..\n"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n"
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\"\n"
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\"\n"
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abcefgabc\") == \"abc\", \"Test 1\"\nassert solution(\"abcbabcba\") == \"abcba\", \"Test 2\"\nassert solution(\"aaaa\") == \"aaa\", \"Test 3\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abcefgabc\") == \"abc\", \"Incorrect output for sample input 1\"\nassert solution(\"abcbabcba\") == \"abcba\", \"Incorrect output for sample input 2\"\nassert solution(\"aaaa\") == \"aaa\", \"Incorrect output for sample input 3\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'"
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 4\n"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 4, \"Output 1 incorrect\"\nassert solution(6) == 6, \"Output 2 incorrect\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(None) == 'Invalid input'\nassert solution('') == 'Invalid input'"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == expected, f\"Expected {expected}, got {solution()}\"\n"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 4, \"Expected output: 4, got: \" + str(solution())"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == '4', 'Sample Input 1'\nassert solution(sample_input2) == '6', 'Sample Input 2'\nassert solution(sample_input3) == '4', 'Sample Input 3'"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n1 4\\n2 5\\n') == '4\\n'\nassert solution('2\\n1 4\\n2 10005\\n') == '6\\n'\nassert solution('3\\n1 4\\n2 10\\n0 15\\n') == '4\\n'\n"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 4\\n2 5\\n\") == 4\nassert solution(\"2\\n1 4\\n2 10005\\n\") == 6\nassert solution(\"3\\n1 4\\n2 10\\n0 15\\n\") == 4"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 4\\n2 5\\n2 10005\\n3 10\\n0 15\") == 4\nassert solution(\"1 4\\n2 10005\\n3 10\\n0 15\") == 6"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 4, \"Expected output: 4, but got: {}\".format(solution(3)) # Solution\nassert solution(4) == 6, \"Expected output: 6, but got: {}\".format(solution(4)) # Solution\nassert solution(5) == 6, \"Expected output: 6, but got: {}\".format(solution(5)) # Solution\nassert solution(6) == 6, \"Expected output: 6, but got: {}\".format(solution(6)) # Solution\nassert solution(7) == 6, \"Expected output: 6, but got: {}\".format(solution(7)) # Solution\nassert solution(8) == 4, \"Expected output: 4, but got: {}\".format(solution(8)) # Solution\nassert solution(9) == 6, \"Expected output: 6, but got: {}\".format(solution(9)) # Solution\nassert solution(10) == 6, \"Expected output: 6, but got: {}\".format(solution(10)) # Solution\nassert solution(11) == 6, \"Expected output: 6, but got: {}\".format(solution(11)) # Solution\nassert solution(12) == 6, \"Expected output: 6, but got: {}\".format(solution(12)) # Solution\nassert solution(13) == 4, \"Expected output: 4, but got: {}\".format(solution(13)) # Solution\nassert solution(14) == 6, \"Expected output: 6, but got: {}\".format(solution(14)) # Solution\nassert solution(15) == 4, \"Expected output: 4, but got: {}\".format(solution(15)) # Solution"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(b'2\\n3\\n5\\n1 2 3 2 1\\n') == '2\\n'\nassert solution(b'7\\n2 3 4 4 8 12 24\\n') == '2\\n'\nassert solution(b'3\\n7 7 7\\n') == '3\\n'\nassert solution(b'5\\n1 2 3 2 1\\n') == '0\\n'"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(7) == 2\nassert solution(3) == 3\nassert solution(5) == 0"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\n2 3 4 4 8 12 24\") == \"2\"\nassert solution(\"3\\n7 7 7\") == \"3\"\nassert solution(\"5\\n1 2 3 2 1\") == \"0\""
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == \"TODO\""
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == output, f\"Test failed: The output is '{output}', but the solution returns '{solution(stdin)}'.\"\n\nfrom typing import List"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3 4 4 8 12 24\") == 2\nassert solution(\"7 7 7\") == 3\nassert solution(\"1 2 3 2 1\") == 0"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Sample Input {i+1}, Expected Output {output()}, Received {solution(input())}\""
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n2 3 4 4 8 12 24\") == 2\nassert solution(\"3\\n7 7 7\") == 3\nassert solution(\"5\\n1 2 3 2 1\") == 0\n\nfrom typing import List"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n2 3 4 4 8 12 24\") == \"2\"\nassert solution(\"3\\n7 7 7\") == \"3\"\nassert solution(\"5\\n1 2 3 2 1\") == \"0\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"The function should return '{expected}', but it returned '{solution(input())}'\"\n"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\") == \"3\"\nassert solution(\"1 2 1\\nGS\") == \"1\"\nassert solution(\"2 2 10\\nS#\") == \"-1\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 5 4\\nS#.F.\\n.MFMG\\nSample Input 1:\\n2 5 4\\nS#.F.\\n.MFMG\\nSample Output 1:\\n3\\n\\nSample Input 2:\\n1 2 1\\nGS\\nSample Output 2:\\n1\\n\\nSample Input 3:\\n2 2 10\\nS#\\n#G\\nSample Output 3:\\n-1') == 3\nassert solution('1 2 1\\nGS\\nSample Input 2:\\n1 2 1\\nGS\\nSample Output 2:\\n1\\n\\nSample Input 3:\\n2 2 10\\nS#\\n#G\\nSample Output 3:\\n-1') == 1\nassert solution('2 2 10\\nS#\\n#G\\nSample Input 3:\\n2 2 10\\nS#\\n#G\\nSample Output 3:\\n-1') == -1\n"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2\nassert solution(sample_input3) == expected_output3"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\") == \"3\"\nassert solution(\"1 2 1\\nGS\") == \"1\"\nassert solution(\"2 2 10\\nS#\") == \"-1\"\n"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\\nSample Output 1: 3\\n\\nSample Input 2: 1 2 1\\nGS\\nSample Output 2: 1\\n\\nSample Input 3: 2 2 10\\nS#\\n#G\\nSample Output 3: -1\\ndef solution(stdin: str) -> str:\\n    pass\\n\") == \"3\\n\\n1\\n\\n1\\n\\n-1\\n\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('treasure_hunter.in', 'r')) == '3\\n'\nassert solution(open('treasure_hunter.in', 'r')) == '1\\n'\nassert solution(open('treasure_hunter.in', 'r')) == '-1\\n'"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Solution returned {solution(input())}, expected {expected_output}\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\"\nassert solution() == \"1\"\nassert solution() == \"-1\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 5 4\\nS#.F.\\n.MFMG\\n') == '3\\n'\nassert solution('1 2 1\\nGS\\n') == '1\\n'\nassert solution('2 2 10\\nS#\\n#G\\n') == '-1\\n'"
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3\\nS..\\n.#.G\\n..G\\nDRRDD') == '1\\n'\nassert solution('3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR') == '1\\n'\nassert solution('3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR') == '2\\n'"
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1\" # Sample Output 1\nassert solution(input()) == \"1\" # Sample Output 2\nassert solution(input()) == \"2\" # Sample Output 3"
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\\n\") == 1\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\\n\") == 1\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\\n\") == 2"
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\") == \"1\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\") == \"1\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\") == \"2\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\\n\") == \"2\\n\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\") == \"1\\n\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\") == \"1\\n\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\") == \"2\\n\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\") == \"1\\n\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\") == \"1\\n\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\") == \"2\\n\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\\n\") == \"2\\n\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\nS..\\n.#.G\\n..G\\nDRRDD\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\\n\") == \"2\\n\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r').read()) == \"1\\n\"\nassert solution(open('input_2.txt', 'r').read()) == \"1\\n\"\nassert solution(open('input_3.txt', 'r').read()) == \"2\\n\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin.strip()) == expected.strip() for stdin, expected in zip(input_list, expected_list)\n"
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n999999 0 1000\\n999900 950 451\\n987654 123 13222') == '1000200 799'\nassert solution('2\\n100 0 101\\n0 200 199') == 'uncertain'\nassert solution('2\\n100 0 100\\n0 200 199') == 'impossible'"
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == '1000200 799'\nassert solution(sample_input2) == 'uncertain'\nassert solution(sample_input3) == 'impossible'"
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"999999 0 1000\\n999900 950 451\\n987654 123 13222\\n\") == \"1000200 799\"\nassert solution(\"2\\n100 0 101\\n0 200 199\\n\") == \"uncertain\"\nassert solution(\"2\\n100 0 100\\n0 200 199\\n\") == \"impossible\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, \"Test case failed\"\n"
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1000200 799\"\nassert solution(open(\"input2.txt\", \"r\")) == \"uncertain\"\nassert solution(open(\"input3.txt\", \"r\")) == \"impossible\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Output: {solution(input())}\\nInput: {input()}\"\n\nfrom typing import List"
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n999999 0 1000\\n999900 950 451\\n987654 123 13222\") == \"1000200 799\\n\"\nassert solution(\"2\\n100 0 101\\n0 200 199\") == \"uncertain\\n\"\nassert solution(\"2\\n100 0 100\\n0 200 199\") == \"impossible\\n\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1000200 799\\n\" # Test case 1\nassert solution() == \"uncertain\\n\" # Test case 2\nassert solution() == \"impossible\\n\" # Test case 3"
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Sample Input 1:\\n3\\n999999 0 1000\\n999900 950 451\\n987654 123 13222\\nSample Output 1:\\n1000200 799\\n\") == \"1000200 799\\n\"\n\nassert solution(\"Sample Input 2:\\n2\\n100 0 101\\n0 200 199\\nSample Output 2:\\nuncertain\\n\") == \"uncertain\\n\"\n\nassert solution(\"Sample Input 3:\\n2\\n100 0 100\\n0 200 199\\nSample Output 3:\\nimpossible\\n\") == \"impossible\\n\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n4 7\\n9 8\\n14 17\\n19 18') == '2\\n1\\n'\nassert solution('2\\n4 7\\n14 17\\n9 8\\n19 18') == '1\\n2\\n'\nassert solution('2\\n4 8\\n9 7\\n14 18\\n19 17') =='syntax error'"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output\nfor i in range(1, n+1):\n    for j in range(1, i+1):\n        print(i*j, end=\" \")\n    print()"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n4 7\\n9 8\\n14 17\\n19 18\\n') == '2\\n1\\n'\nassert solution('2\\n4 7\\n14 17\\n9 8\\n19 18\\n') == '1\\n2\\n'\nassert solution('2\\n4 8\\n9 7\\n14 18\\n19 17\\n') =='syntax error\\n'"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Input {input()}, expected output {expected_output}\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n2\n4 7\n9 8\n14 17\n19 18\n\"\"\") == \"1\\n2\\n\"\n\nassert solution(\"\"\"\n2\n4 7\n14 17\n9 8\n19 18\n\"\"\") == \"2\\n1\\n\"\n\nassert solution(\"\"\"\n2\n4 8\n9 7\n14 18\n19 17\n\"\"\") == \"syntax error\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 7\\n9 8\\n14 17\\n19 18\") == [\"2\", \"1\", \"2\", \"1\"]\nassert solution(\"2\\n4 7\\n14 17\\n9 8\\n19 18\") == [\"1\", \"2\", \"1\", \"2\"]\nassert solution(\"2\\n4 8\\n9 7\\n14 18\\n19 17\") == \"syntax error\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\\n2\\n\" or solution(input()) == \"2\\n1\\n\" or solution(input()) == \"syntax error\\n\"\n"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 7\\n9 8\\n14 17\\n19 18') == 2\nassert solution('2\\n4 7\\n14 17\\n9 8\\n19 18') == 1\nassert solution('2\\n4 8\\n9 7\\n14 18\\n19 17') =='syntax error'\n\nfrom typing import List"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\\nb\\nc\\n\") == \"\"\nassert solution(\"a\\nb\\nc\\nd\\n\") == \"1\"\nassert solution(\"a\\nb\\nc\\nd\\ne\\nf\\n\") == \"2\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"many\"\nassert solution(\"_ 90 22 _ 6 _ _ _ _ 81\") == \"many\"\nassert solution(\"_ 40 _ _ _ 12 60 _ 90 _\") == \"many\"\nassert solution(\"_ 85 55 _ 99 51 _ _ _ _ _\") == \"many\"\nassert solution(\"_ _ _ _ _ _ _ 85 63 153\") == \"many\"\nassert solution(\"_ _ _ _ _ _ _ 160 _ _ 136 _\") == \"many\"\nassert solution(\"_ _ _ _ _ _ _ _ _ 120 _ _ 144 _\") == \"many\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\\n\") == \"1\\n\"\nassert solution(\"85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\\n\") == \"1\\n\"\nassert solution(\"160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\\n\") == \"8640\\n\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == output, f\"The solution is incorrect.\\nInput: {stdin}\\nOutput: {output}\\n\"\nfor line in [stdin, output]:\n    print(line)"
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\nassert solution(input3) == output3"
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\nprint(output())"
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    _ 90 22 _ 6 _ _ _ _ 81\n    _ 40 _ _ _ 12 60 _ 90 _\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n   85 55 _ 99 51 _ _ _ _ _\n    _ _ _ _ _ _ _ 85 63 153\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n   160 _ _ 136 _ _ _ _ _ 170\n    _ _ _ _ 120 _ _ 144 _ _\n    \"\"\"\n) == \"8640\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1\"\n\nclass Solution:\n    def count_distinct_solutions(self, plates: List[List[int]]) -> int:\n        n = len(plates)\n        dp = [1] * (n + 1)\n        dp[0] = 0\n        dp[1] = 1\n        for i in range(2, n + 1):\n            dp[i] = dp[i - 1] + dp[i - 2]\n            for j in range(i - 2, -1, -1):\n                dp[i] = min(dp[i], dp[j] + 1)\n        return dp[n]"
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"many\"  # Example 1\nassert solution(\"100 22 _ 6 _ _ _ _ 81\") == \"many\"  # Example 2\nassert solution(\"85 55 _ 99 51 _ _ _ _ _\") == \"many\"  # Example 3\n\nfrom typing import List"
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n_ 90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\") == \"1\"\nassert solution(\"2\\n85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\") == \"1\"\nassert solution(\"3\\n160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\") == \"8640\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input1) == '1', \"Solution 1 is incorrect\"\nassert solution(input2) == '1', \"Solution 2 is incorrect\"\nassert solution(input3) == '8640', \"Solution 3 is incorrect\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\").read()) == \"24\"\nprint(\"All test cases passed!\")\n"
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\", \"Test case 1 failed\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2\\n1 3\\n\") == \"2\"\nassert solution(\"5\\n2 1\\n1 5\\n3 1\\n4 3\\n\") == \"8\"\nassert solution(\"10\\n1 2\\n2 3\\n2 4\\n1 5\\n3 6\\n2 7\\n7 8\\n5 9\\n5 10\\n\") == \"24\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n1 2\\n1 3\\n') == '2\\n'\nassert solution('5\\n2 1\\n1 5\\n3 1\\n4 3\\n') == '8\\n'\nassert solution('10\\n1 2\\n2 3\\n2 4\\n1 5\\n3 6\\n2 7\\n7 8\\n5 9\\n5 10\\n') == '24\\n'"
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2\\n1 3\") == 2\nassert solution(\"5\\n2 1\\n1 5\\n3 1\\n4 3\") == 8\nassert solution(\"10\\n1 2\\n2 3\\n2 4\\n1 5\\n3 6\\n2 7\\n7 8\\n5 9\\n5 10\") == 24"
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2\\n1 3\\n\") == \"2\\n\", \"Sample Input 1\"\nassert solution(\"5\\n2 1\\n1 5\\n3 1\\n4 3\\n\") == \"8\\n\", \"Sample Input 2\"\nassert solution(\"10\\n1 2\\n2 3\\n2 4\\n1 5\\n3 6\\n2 7\\n7 8\\n5 9\\n5 10\\n\") == \"24\\n\", \"Sample Input 3\"\n"
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n1 2\\n1 3\\n') == '2\\n', \"Test case 1 failed\"\nassert solution('5\\n2 1\\n1 5\\n3 1\\n4 3\\n') == '8\\n', \"Test case 2 failed\"\nassert solution('10\\n1 2\\n2 3\\n2 4\\n1 5\\n3 6\\n2 7\\n7 8\\n5 9\\n5 10\\n') == '24\\n', \"Test case 3 failed\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == \"2\", \"Input 1 incorrect.\"\nassert solution(sample_input_2) == \"8\", \"Input 2 incorrect.\"\nassert solution(sample_input_3) == \"24\", \"Input 3 incorrect.\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input(\"Input:\\n\")) == \"Output:\" + str(solution(input(\"Input:\\n\"))) + \"\\n\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2\\n1 3\\n\") == \"2\\n\"\nassert solution(\"5\\n2 1\\n1 5\\n3 1\\n4 3\\n\") == \"8\\n\"\nassert solution(\"10\\n1 2\\n2 3\\n2 4\\n1 5\\n3 6\\n2 7\\n7 8\\n5 9\\n5 10\\n\") == \"24\\n\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"test_cases/sample_input1.txt\").read()) == \"essa\"\nassert solution(open(\"test_cases/sample_input2.txt\").read()) == \"3\"\nassert solution(open(\"test_cases/sample_input3.txt\").read()) == \"0\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"secretmessage\") == \"essa\"\nassert solution(\"treetreetreetree\") == \"3\"\nassert solution(\"oranges\") == \"0\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('secretmessage\\nboot') == 'essa'\nassert solution('treetreetreetree\\nwood') == '3'\nassert solution('oranges\\naples') == '0'"
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"secretmessage\") == \"essa\"\nassert solution(\"treetreetreetree\") == \"3\"\nassert solution(\"oranges\") == \"0\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"secretmessage\") == \"essa\"\nassert solution(\"treetreetreetree\") == \"3\"\nassert solution(\"oranges\") == \"0\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\nsecretmessage\nboot\n''') == 'essa'\n\nassert solution('''\ntreetreetreetree\nwood\n''') == '3'\n\nassert solution('''\noranges\napples\n''') == '0'"
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"secretmessage\") == \"essa\", \"Secret message should be encrypted and contain 'essa'.\"\nassert solution(\"treetreetreetree\") == \"3\", \"Message should be encrypted and contain '3'.\"\nassert solution(\"oranges\") == \"0\", \"Message should be encrypted and contain '0'.\"\n\nfrom typing import List"
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"def solution(stdin: str) -> str:\", \"Function signature is incorrect.\"\n\nfrom typing import List"
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"essa\\n\"\nassert solution(\"treetreetreetree\") == \"3\\n\"\nassert solution(\"orangesapples\") == \"0\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"secretmessage\") == \"essa\", \"The solution should return 'essa'\"\nassert solution(\"treetreetreetree\") == \"3\", \"The solution should return '3'\"\nassert solution(\"oranges\") == \"0\", \"The solution should return '0'\"\n\nfrom typing import List"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == \"2\", \"The solution is incorrect.\"\nassert solution(sample_input_2) == \"4\", \"The solution is incorrect.\"\nassert solution(sample_input_3) == \"1\", \"The solution is incorrect.\""
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6\\n>^<^\\n######\\n#.#..#\\n#....#\\n#..R.#\\n#....#\\n######\\n') == '2'\nassert solution('4\\nv<^>\\n####\\n#.R#\\n#..#\\n####\\n') == '4'\nassert solution('4\\n<<<\\n####\\n#.R#\\n#..#\\n####\\n') == '1'"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n>^<^\\n######\\n#.#..#\\n#....#\\n#..R.#\\n#....#\\n######\\n\") == \"2\\n\"\nassert solution(\"4\\nv<^>\\n####\\n#.R#\\n#..#\\n####\\n\") == \"4\\n\"\nassert solution(\"4\\n<<<\\n####\\n#.R#\\n#..#\\n####\\n\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"6\\n>^<^\\n######\\n#.#..#\\n#....#\\n#..R.#\\n#....#\\n######\\n\") == \"2\"\nassert solution(stdin=\"4\\nv<^> \\n#### \\n#.R# \\n#..# \\n#### \\n\") == \"4\"\nassert solution(stdin=\"4\\n<<< \\n#### \\n#.R# \\n#..# \\n#### \\n\") == \"1\""
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n>^<^\\n######\\n#.#..#\\n#....#\\n#..R.#\\n#....#\\n######\") == 2\nassert solution(\"4\\nv<^>\\n####\\n#.R#\\n#..#\\n####\") == 4\nassert solution(\"4\\n<<<\\n####\\n#.R#\\n#..#\\n####\") == 1\n\nfrom typing import List"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\"\nassert solution() == \"1\"\nassert solution() == \"1\"\nassert solution() == \"1\"\nassert solution() == \"1\""
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1\" # Your code should print 1\n"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n>^<^\\n######\\n#.#..#\\n#....#\\n#..R.#\\n#....#\\n######\") == \"2\"\nassert solution(\"4\\nv<^>\\n####\\n#.R#\\n#..#\\n####\") == \"4\"\nassert solution(\"4\\n<<<\\n####\\n#.R#\\n#..#\\n####\") == \"1\""
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6\\n>^<^\\n######\\n#.#..#\\n#....#\\n#..R.#\\n#....#\\n######') == '2'\nassert solution('4\\nv<^>\\n####\\n#.R#\\n#..#\\n####') == '4'\nassert solution('4\\n<<<\\n####\\n#.R#\\n#..#\\n####') == '1'"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == '2'\nassert solution(open('input.txt', 'r')) == '4'\nassert solution(open('input.txt', 'r')) == '1'\n\nfrom typing import List"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input) == expected_output, f\"Test failed for input {input}, expected output {expected_output}, got {solution(input)}\"\n"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\\n\") == \"3\\n\"\nassert solution(\"3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n\") == \"6\\n\"\nassert solution(\"2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7\\n\") == \"11\\n\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\\n\") == 3\nassert solution(\"3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n\") == 6\nassert solution(\"2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7\\n\") == 11\nassert solution(\"4\\n0 10 0 5 0 10 10\\n10 10 0 5 0 10 10\\n10 10 0 5 0 10 10\\n\") == 20"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == expected, f\"Solution does not match. Received: {solution(stdin=input())}, Expected: {expected}\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2\\n3\\n6\\n11\"\n"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\\n\") == \"3\\n\"\nassert solution(\"3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n\") == \"6\\n\"\nassert solution(\"2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7\\n\") == \"11\\n\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\") == \"3\\n\"\nassert solution(\"3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\") == \"6\\n\"\nassert solution(\"2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7\") == \"11\\n\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == 3\nassert solution(sample_input2) == 6\nassert solution(sample_input3) == 11"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"Output\\n3\\n\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"168.7916512460\\n\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\\n\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\") == \"3.7320508076\\n\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == output1, \"Test case 1\"\nassert solution(input2) == output2, \"Test case 2\"\nassert solution(input3) == output3, \"Test case 3\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"168.7916512460\", \"The output should be 168.7916512460.\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == 168.7916512460, \"Sample Output 1\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == 163.5274740179, \"Sample Output 2\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\") == 3.7320508076, \"Sample Output 3\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"168.7916512460\", \"Incorrect output\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\", \"Incorrect output\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\") == \"3.7320508076\", \"Incorrect output\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\\n') == '168.7916512460\\n'\nassert solution('60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\\n') == '163.5274740179\\n'\nassert solution('0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\\n') == '3.7320508076\\n'"
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\\n\") == \"168.7916512460\\n\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\\n\") == \"163.5274740179\\n\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\\n\") == \"3.7320508076\\n\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"168.7916512460\", \"Incorrect answer 1\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\", \"Incorrect answer 2\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\") == \"3.7320508076\", \"Incorrect answer 3\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"168.7916512460\", \"Expected: 168.7916512460, Got: \" + solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\")"
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\") == \"168.7916512460\\n\", \"Solution 1 incorrect\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"168.7916512460\\n\", \"Solution 2 incorrect\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\") == \"3.7320508076\\n\", \"Solution 3 incorrect\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"rarity\"\nassert solution(stdin) == \"def solution(stdin: str) -> str: pass\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 5 3\") == \"rarity\\n\"\nassert solution(\"9 8 1\") == \"canterlot\\n\"\nassert solution(\"5 3 5\") == \"madam\\n\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"madam\"\nassert solution(4) == \"canterlot\"\nassert solution(5) == \"defied\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == \"rarity\"\nassert solution(sample_input_2) == \"canterlot\"\nassert solution(sample_input_3) == \"madam\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=sample_stdin_1) == \"rarity\", \"Invalid sample input 1\"\nassert solution(stdin=sample_stdin_2) == \"canterlot\", \"Invalid sample input 2\"\nassert solution(stdin=sample_stdin_3) == \"madam\", \"Invalid sample input 3\"\n\nfrom typing import List"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(6, 5, 3) == \"rarity\"\nassert solution(9, 8, 1) == \"canterlot\"\nassert solution(5, 3, 5) == \"madam\"\n\nfrom typing import List"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin1) == \"rarity\", \"Invalid Input\"\nassert solution(stdin2) == \"canterlot\", \"Invalid Input\"\nassert solution(stdin3) == \"madam\", \"Invalid Input\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == 'rarity'\nassert solution(sample_input_2) == 'canterlot'\nassert solution(sample_input_3) =='madam'"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2) =='madam'\nassert solution(6) == 'rarity'\nassert solution(9) == 'canterlot'"
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!.  \") == \"International contest- motivation high Programmers have fun!. \""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!. \") == \"International contest- motivation high Programmers have fun!.\"\n"
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!. def solution(stdin: str) -> str: pass\") == \"International contest- motivation high Programmers have fun!. def solution(stdin: str) -> str: pass\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road.\\nLeaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\\n\"\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International\\ncontest- motivation high\\nProgrammers have fun!\\n\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!. def solution(stdin: str) -> str:\\n    pass\\n\") == \"International contest- motivation high Programmers have fun!\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\n\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\n\nassert solution(\"International contest- motivation high Programmers have fun!. def solution(stdin: str) -> str: pass\") == \"International contest- motivation high Programmers have fun!. def solution(stdin: str) -> str: pass\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\\n\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\\n\"\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International\\ncontest- motivation high\\nProgrammers have fun!\\n\"\n"
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.\"\n\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\\n\"\n\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International\\ncontest- motivation high\\nProgrammers have fun!\\n\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!. \") == \"International contest- motivation high Programmers have fun!. \""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!. def solution(stdin: str) -> str: pass\") == \"International contest- motivation high Programmers have fun!. def solution(stdin: str) -> str: pass\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"ThoreHusfeldter\"\nassert solution(open(\"input2.txt\", \"r\")) == \"Thore is awesome\"\nassert solution(open(\"input3.txt\", \"r\")) == \"Thore sucks\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\nThoreTiemann\\nThoreHusfeldt\\n') == 'ThoreH\\n'\nassert solution('2\\nThoreHusfeldt\\nJohanSannemo\\n') == 'Thore is awesome\\n'\nassert solution('2\\nThoreHusfeldter\\nThoreHusfeldt\\n') == 'Thore sucks\\n'"
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"Thore is awesome\"\nassert solution(\"2\") == \"Thore is awesome\"\nassert solution(\"3\") == \"Thore sucks\"\nassert solution(\"1\\nThoreTiemann\\nThoreHusfeldt\") == \"ThoreH\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\") == \"Thore is awesome\"\nassert solution(\"3\\nThoreHusfeldter\\nThoreHusfeldt\") == \"Thore sucks\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"Thore is awesome\"\nassert solution(open(\"sample_input.txt\", \"r\")) == \"Thore is awesome\"\nassert solution(open(\"sample_input_2.txt\", \"r\")) == \"Thore is awesome\"\nassert solution(open(\"sample_input_3.txt\", \"r\")) == \"Thore sucks\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\nThoreTiemann\\nThoreHusfeldt\\n\") == \"ThoreH\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\\n\") == \"Thore is awesome\"\nassert solution(\"2\\nThoreHusfeldter\\nThoreHusfeldt\\n\") == \"Thore sucks\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"ThoreHusfeldter\"\nassert solution(4) == \"Thore sucks\"\nassert solution(1) == \"ThoreHusfeldt\"\nassert solution(5) == \"Thore is awesome\"\nassert solution(6) == \"ThoreH is the best ThoreH\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"ThoreH\"\nassert solution(open(\"sample_input_1.txt\", \"r\").read()) == \"ThoreH\"\nassert solution(open(\"sample_input_2.txt\", \"r\").read()) == \"Thore is awesome\"\nassert solution(open(\"sample_input_3.txt\", \"r\").read()) == \"Thore sucks\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"2\\nThoreTiemann\\nThoreHusfeldt\\n\") == \"ThoreH\"\nassert solution(stdin=\"2\\nThoreHusfeldt\\nJohanSannemo\\n\") == \"Thore is awesome\"\nassert solution(stdin=\"2\\nThoreHusfeldter\\nThoreHusfeldt\\n\") == \"Thore sucks\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\nThoreTiemann\\nThoreHusfeldt\\n\") == \"ThoreH\\n\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\\n\") == \"Thore is awesome\\n\"\nassert solution(\"2\\nThoreHusfeldter\\nThoreHusfeldt\\n\") == \"Thore sucks\\n\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\nThoreTiemann\\nThoreHusfeldt\\n\") == \"ThoreH\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\\n\") == \"Thore is awesome\"\nassert solution(\"2\\nThoreHusfeldter\\nThoreHusfeldt\\n\") == \"Thore sucks\"\nassert solution(\"2\\nThoreTiemann\\nThoreHusfeldt\\n\") == \"ThoreH\"\nassert solution(\"3\\nThoreTiemann\\nThoreHusfeldt\\nThoreHusfeldter\\n\") == \"Thore sucks\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"P*P\") == 6, \"The value of the set of walks L*R is not 6.\"\nassert solution(\"L*R\") == 25, \"The value of the set of walks L*R is not 25.\"\nassert solution(\"**\") == 33, \"The value of the set of walks ** is not 33.\"\n"
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"P*P\") == \"6\", \"Incorrect Output for sample input 1\"\nassert solution(\"L*R\") == \"25\", \"Incorrect Output for sample input 2\"\nassert solution(\"**\") == \"33\", \"Incorrect Output for sample input 3\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"P*P\") == \"6\", \"Incorrect solution for sample input 1\"\nassert solution(\"L*R\") == \"25\", \"Incorrect solution for sample input 2\"\nassert solution(\"**\") == \"33\", \"Incorrect solution for sample input 3\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"P*P\") == \"6\", \"Expected output: 6, Actual output: \" + solution(\"P*P\")\nassert solution(\"L*R\") == \"25\", \"Expected output: 25, Actual output: \" + solution(\"L*R\")\nassert solution(\"**\") == \"33\", \"Expected output: 33, Actual output: \" + solution(\"**\")"
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"P*P\") == 6, \"Incorrect output\"\nassert solution(\"L*R\") == 25, \"Incorrect output\"\nassert solution(\"**\") == 33, \"Incorrect output\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"P*P\") == \"6\", \"The value of the set of walks P*P is not 6.\"\nassert solution(\"L*R\") == \"25\", \"The value of the set of walks L*R is not 25.\"\nassert solution(\"**\") == \"33\", \"The value of the set of walks ** is not 33.\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"P*P\") == 6, \"The value of the set P*P is incorrect.\"\nassert solution(\"L*R\") == 25, \"The value of the set L*R is incorrect.\"\nassert solution(\"**\") == 33, \"The value of the set ** is incorrect.\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"P*P\") == \"6\", \"P*P should return 6\"\nassert solution(\"L*R\") == \"25\", \"L*R should return 25\"\nassert solution(\"**\") == \"33\", \"** should return 33\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"P*P\") == 6\nassert solution(\"L*R\") == 25\nassert solution(\"**\") == 33"
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"P*P\") == 6, \"The correct value of the set is 6, but the actual value is: \" + str(solution(\"P*P\"))\n\nassert solution(\"L*R\") == 25, \"The correct value of the set is 25, but the actual value is: \" + str(solution(\"L*R\"))\n\nassert solution(\"**\") == 33, \"The correct value of the set is 33, but the actual value is: \" + str(solution(\"**\"))"
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"yes\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3"
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"yes\"\nassert solution(input()) == \"wait what?\"\nassert solution(input()) == \"yes\"\nassert solution(input()) == \"wait what?\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"wait what?\"\nassert solution(stdin) == \"wait what?\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'wait what?'\n\nfrom typing import List"
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4) == \"yes\"\nassert solution(3) == \"wait what?\"\nassert solution(1) == \"yes\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == 'yes'"
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"herp is derp\\nderp is herp\\nderp is herp\\nderp is derp\") == \"yes\"\n\nassert solution(\"oskar not lukas\\nostrak is poptart\\nlukas is smart\") == \"wait what?\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"wait what?\"\nassert solution(input()) == \"yes\"\nassert solution(input()) == \"wait what?\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('herp is derp') == 'wait what?'\nassert solution('derp is herp') == 'wait what?'\nassert solution('herp is herp') == 'wait what?'\nassert solution('derp is derp') == 'wait what?'"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\nAACCMMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\\n\") == \"1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n\"\nassert solution(\"3\\nACMA\\ACM\\ACA\\AMA\\n\") == \"impossible\"\nassert solution(\"1\\nAM\\nMA\\n\") == \"impossible\""
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    5\n        AACCMMAA\n        ACA\n        MM\n        ACMAA\n        AA\n        A\n    ''') == '''\n    1 4\n        MM\n        A\n        AA\n        ACA\n        ACMAA\n    '''\n\nassert solution('''\n    3\n        ACMA\n        ACM\n        ACA\n        AMA\n    ''') == '''\n        impossible\n    '''\n\nassert solution('''\n    1\n        AM\n        MA\n    ''') == '''\n        impossible\n    '''"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"impossible\", \"Your implementation is incorrect.\""
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"impossible\""
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\nAACCMMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\\n\") == \"1 4\\nMM\\nA\\nA\\nACA\\nACMAA\\n\"\nassert solution(\"3\\nACMA\\ACM\\ACA\\AMA\\n\") == \"impossible\"\nassert solution(\"1\\nAM\\nMA\\n\") == \"impossible\""
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\nAACCMMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\\n') == '1 4\\nMM\\nA\\nA\\nACA\\nACMAA\\n'\nassert solution('3\\nACMA\\ACM\\ACA\\AMA\\n') == 'impossible\\n'\nassert solution('1\\nAM\\nMA\\n') == 'impossible\\n'"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\nAACCMMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\\n\") == \"1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n\"\nassert solution(\"3\\nACMA\\ACM\\ACA\\AMA\\n\") == \"impossible\"\nassert solution(\"1\\nAM\\nMA\\n\") == \"impossible\""
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\nAACCMMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\\nSample Output 1:\\n1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n\\nSample Input 2:\\n3\\nACMA\\ACM\\ACA\\AMA\\nSample Output 2:\\nimpossible\\n\\nSample Input 3:\\n1\\nAM\\nMA\\nSample Output 3:\\nimpossible') == 'impossible\\n'\nassert solution('3\\nACMA\\ACM\\ACA\\AMA\\nSample Output 2:\\nimpossible\\n\\nSample Input 1:\\n5\\nAACCMMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\\nSample Output 1:\\n1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n\\nSample Input 2:\\n3\\nACMA\\ACM\\ACA\\AMA\\nSample Output 2:\\nimpossible\\n\\nSample Input 3:\\n1\\nAM\\nMA\\nSample Output 3:\\nimpossible') == 'impossible\\n'"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\nAACCMMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\") == \"1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n\"\nassert solution(\"3\\nACMA\\ACM\\ACA\\AMA\\n\") == \"impossible\\n\"\nassert solution(\"1\\nAM\\nMA\\n\") == \"impossible\\n\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"The function should return {expected}, but it returned {solution(stdin)}\"\n"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n\"\"\") == \"124\"\n\nassert solution(\"\"\"\n2 4 1\n1 0.5 5\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n10 20 3\n5 0.3 8\n6 0.8 3\n8 0.9 3\n\"\"\") == \"18.9029850746\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == output, f\"Expected '{output}', got '{solution(input)}'\" for input, output in [\n    (\"100 111 5\", \"124\"),\n    (\"2 4 1\", \"3\"),\n    (\"10 20 3\", \"18.9029850746\"),\n]"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100 111 5\\n20 0.5 10\\n80 0.5 2\\n85 0.5 2\\n90 0.5 2\\n95 0.5 2\") == \"124\"\nassert solution(\"2 4 1\\n1 0.5 5\\n\") == \"3\"\nassert solution(\"10 20 3\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3\\n\") == \"18.9029850746\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n''') == '124\\n'\n\nassert solution('''\n2 4 1\n1 0.5 5\n''') == '3\\n'\n\nassert solution('''\n10 20 3\n5 0.3 8\n6 0.8 3\n8 0.9 3\n''') == '18.9029850746\\n'"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(str(input())) == output, f\"Solution error for input: {input()} vs. expected output: {output}\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"100 111 5\\n20 0.5 10\\n80 0.5 2\\n85 0.5 2\\n90 0.5 2\\n95 0.5 2\") == \"124\"\nassert solution(\"2 4 1\\n1 0.5 5\\n\") == \"3\"\nassert solution(\"10 20 3\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3\\n\") == \"18.9029850746\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '18.9029850746'"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\") == \"2 1 2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"5 22\") == \"4 3 4 2\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"2 1 2\"\nassert solution(4) == \"1\"\nassert solution(22) == \"4 3 4 2\"\n"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\") == \"2 1 2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"5 22\") == \"4 3 4 2\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}, got: {solution(input())}\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\") == \"2 1 2\", \"Gwen loves most numbers. In fact, she loves every number that is not a multiple of $n$ (she really hates the number $n$).\"\nassert solution(\"2 1\") == \"1\", \"Gwen wants her paintings to be unique, so no two paintings will have the same sequence of flowers.\"\nassert solution(\"5 22\") == \"4 3 4 2\", \"Gwen wants her paintings to be unique, so no two paintings will have the same sequence of flowers.\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\") == \"2 1 2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"5 22\") == \"4 3 4 2\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n2 1\\n5 22\") == \"2 1 2\\n4 3 4 2\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, Received: {solution(stdin)}\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\") == \"2 1 2\\n\"\nassert solution(\"2 1\") == \"1\\n\"\nassert solution(\"5 22\") == \"4 3 4 2\\n\"\n"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\"\n"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n3 4\\n2 4\") == \"2\\n\"\nassert solution(\"7 6\\n1 2\\n2 3\\n2 5\\n6 3\\n7 2\\n3 4\") == \"2\\n\"\nassert solution(\"7 5\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\") == \"0\\n\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '0'\n"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 2"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    4 4\n    1 2\n    1 3\n    3 4\n    2 4\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    7 6\n    1 2\n    2 3\n    2 5\n    6 3\n    7 2\n    3 4\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    7 5\n    1 2\n    2 3\n    3 4\n    5 6\n    6 7\n    \"\"\"\n) == \"0\\n\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\\n\", \"Wrong Answer\"  # expected output: 2"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n3 4\\n2 4\") == \"2\\n\"\nassert solution(\"7 6\\n1 2\\n2 3\\n2 5\\n6 3\\n7 2\\n3 4\") == \"2\\n\"\nassert solution(\"7 5\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\") == \"0\\n\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == \"2\\n\", \"Your code is not correct.\"\nassert solution(sample_input_2) == \"2\\n\", \"Your code is not correct.\"\nassert solution(sample_input_3) == \"0\\n\", \"Your code is not correct.\"\n\nsample_input_1 = '''\n4 4\n1 2\n1 3\n3 4\n2 4\n'''\n\nsample_input_2 = '''\n7 6\n1 2\n2 3\n2 5\n6 3\n7 2\n3 4\n'''\n\nsample_input_3 = '''\n7 5\n1 2\n2 3\n3 4\n5 6\n6 7\n'''"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r'''\n4 4\n1 2\n1 3\n3 4\n2 4\n''') == '2'\n\nassert solution(r'''\n7 6\n1 2\n2 3\n2 5\n6 3\n7 2\n3 4\n''') == '2'\n\nassert solution(r'''\n7 5\n1 2\n2 3\n3 4\n5 6\n6 7\n''') == '0'"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Got '{solution(stdin)}', expected '{expected}'\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == \"20.00000000\", \"Test Input 1 failed\"\nassert solution(sample_input_2) == \"3.14159265\", \"Test Input 2 failed\"\nassert solution(sample_input_3) == \"28.26445910\", \"Test Input 3 failed\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '20.00000000', \"The solution should be 20.00000000\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"20 0\\n1.00 0.10\\n\") == \"20.00000000\"\nassert solution(\"0 20\\n1.00 0.10\\n\") == \"28.26445910\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"20 0\\n1.00 0.10\\n\") == \"20.00000000\\n\"\nassert solution(\"-10 10\\n10.00 1.00\\n\") == \"3.14159265\\n\"\nassert solution(\"0 20\\n1.00 0.10\\n\") == \"28.26445910\\n\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3.14159265\", \"Your solution is incorrect!\"\n\nfrom math import sqrt, pi"
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"20.00000000\\n\"\nassert solution(stdin) == \"3.14159265\\n\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"20.00000000\", \"Expected Output 1\"\nassert solution(stdin) == \"3.14159265\", \"Expected Output 2\"\nassert solution(stdin) == \"28.26445910\", \"Expected Output 3\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"20 0\\n1.00 0.10\") == \"20.00000000\"\nassert solution(\"-10 10\\n10.00 1.00\") == \"3.14159265\"\nassert solution(\"0 20\\n1.00 0.10\") == \"28.26445910\"\n"
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"20 0\\n1.00 0.10\") == \"20.00000000\", \"20 0\"\nassert solution(\"0 -20\\n1.00 1.00\") == \"3.14159265\", \"0 -20\"\nassert solution(\"0 20\\n1.00 0.10\") == \"28.26445910\", \"0 20\"\n"
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"20.00000000\\n\", \"Your solution is incorrect!\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 100\\n1 100\\n4 70\\n3 70\\n\") == \"170\\n\", \"Incorrect output\"\nassert solution(\"3\\n2 120\\n3 50\\n2 80\\n\") == \"150\\n\", \"Incorrect output\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"\n\ninput() # Read input\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"170\\n\"\nassert solution(open(\"example1.txt\", \"r\")) == \"170\\n\"\nassert solution(open(\"example2.txt\", \"r\")) == \"150\\n\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 170"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"170\", \"Test 1 failed\"\nassert solution(stdin) == \"150\", \"Test 2 failed\"\n"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 100\\n1 100\\n4 70\\n3 70\") == \"170\\n\"\nassert solution(\"3\\n2 120\\n3 50\\n2 80\") == \"150\\n\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 100\\n1 100\\n4 70\\n3 70\\n\") == \"170\"\nassert solution(\"3\\n2 120\\n3 50\\n2 80\\n\") == \"150\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n2 100\\n1 100\\n4 70\\n3 70\\n') == 170\n\nassert solution('3\\n2 120\\n3 50\\n2 80\\n') == 150"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"170\", \"Incorrect Output\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"Got {solution(stdin)}, expected {expected_output}\"\n"
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n1 2\\n1 3\\n2 4\\n\") == \"2\\n\"\nassert solution(\"6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\\n\") == \"5\\n\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == f\"Output: {solution(stdin)}\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == '2', \"The expected output for sample input 1 is not provided.\"\nassert solution(sample_input_2) == '5', \"The expected output for sample input 2 is not provided.\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n1 2\\n1 3\\n2 4\\n\") == \"2\\n\"\nassert solution(\"6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\\n\") == \"5\\n\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n1 2\\n1 3\\n2 4\\n\") == 2\nassert solution(\"6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\\n\") == 5"
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\nr\"\"\"\n4 3\n1 2\n1 3\n2 4\n\"\"\") == \"2\\n\"\n\nassert solution(\nr\"\"\"\n6 6\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6\n\"\"\") == \"5\\n\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n1 2\\n1 3\\n2 4\\n\") == \"2\"\nassert solution(\"6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\\n\") == \"5\"\n"
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n1 2\\n1 3\\n2 4\\n\") == \"2\"\nassert solution(\"6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\\n\") == \"5\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0.5\\n\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"0.0446429\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 0.5\nassert solution() == 0.0446429"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n1\\n0\\n2 1 2\\n1 0\\n1 0\\n') == '0.5'\nassert solution('8\\n6\\n1 0 2 3 0 1\\n7 1 2 3 4 5 6 7\\n1 0\\n2 0 3\\n2 0 2\\n1 0\\n1 0\\n1 0\\n1 0\\n') == '0.0446429'"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n1\\n0\\n2 1 2\\n1 0\\n1 0\\n') == '0.5\\n'\n\nassert solution('8\\n6\\n1 0 2 3 0 1\\n7 1 2 3 4 5 6 7\\n1 0\\n2 0 3\\n2 0 2\\n1 0\\n1 0\\n1 0\\n1 0\\n') == '0.0446429\\n'"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1\\n0\\n2 1 2\\n1 0\\n1 0\") == \"0.5\"\nassert solution(\"8\\n6\\n1 0 2 3 0 1\\n7 1 2 3 4 5 6 7\\n1 0\\n2 0 3\\n2 0 2\\n1 0\\n1 0\\n1 0\\n1 0\") == \"0.0446429\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n1\\n0\\n2 1 2\\n1 0\\n1 0\\n') == 0.5\nassert solution('8\\n6\\n1 0 2 3 0 1\\n7 1 2 3 4 5 6 7\\n1 0\\n2 0 3\\n2 0 2\\n1 0\\n1 0\\n1 0\\n1 0\\n') == 0.0446429"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"0.5\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '0.5', \"The expected output is 0.5, but got: \" + solution(stdin)"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"example.txt\", \"r\").read()) == \"0.5\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6\\n1 2 3 3 2 1') == '3\\n1 6 1\\n2 5 2\\n3 4 3'\nassert solution('4\\n1 2 1 2') == 'IMPOSSIBLE'"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n1 2 3 3 2 1\") == \"3\\n1 6 1\\n2 5 2\\n3 4 3\"\nassert solution(\"4\\n1 2 1 2\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 2 3 3 2 1\\n\") == \"3\\n1 6 1\\n2 5 2\\n3 4 3\\n\"\nassert solution(\"4\\n1 2 1 2\\n\") == \"IMPOSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(6, [1, 2, 3, 3, 2, 1]) == '3\\n1 6 1\\n2 5 2\\n3 4 3'\nassert solution(4, [1, 2, 1, 2]) == 'IMPOSSIBLE'"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"1 6 1\\n2 5 2\\n3 4 3\"\nassert solution(4) == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n1 2 3 3 2 1\") == \"3\\n1 6 1\\n2 5 2\\n3 4 3\"\nassert solution(\"4\\n1 2 1 2\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"6\n1 2 3 3 2 1\"\"\"\n) == \"\"\"3\n1 6 1\n2 5 2\n3 4 3\"\"\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 'IMPOSSIBLE'"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 2 3 3 2 1\\n\") == \"3\\n1 6 1\\n2 5 2\\n3 4 3\\n\"\nassert solution(\"4\\n1 2 1 2\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    '''\n    6\n    1 2 3 3 2 1\n    '''\n) == '''\n3\n1 6 1\n2 5 2\n3 4 3\n'''\n\nassert solution(\n    '''\n    4\n    1 2 1 2\n    '''\n) == '''\nIMPOSSIBLE\n'''"
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(data1) == '1 2 100', \"Test 1: Incorrect output\"\nassert solution(data2) == '10 20 28 27 30 40 50', \"Test 2: Incorrect output\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2\\n1 100\\n1 1\\n2\\n5 10 20 30 40 50\\n2 28 27\") == \"1 2 100\\n\"\nassert solution(\"2\\n5 10 20 30 40 50\\n2 28 27\") == \"10 20 28 27 30 40 50\\n\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2\\n1 100\\n1 1\\n2\\n5 10 20 30 40 50\\n2 28 27\\n\") == \"1 2 100\\n1 100 2 28 27\\n\", \"Test 1 failed\"\nassert solution(\"2\\n5 10 20 30 40 50\\n2 28 27\\n\") == \"10 20 28 27 30 40 50\\n\", \"Test 2 failed\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2\\n1 100\\n1 1\\n2\\n5 10 20 30 40 50\\n2 28 27\\n\") == \"1 2 100\\n1 100 20\\n1 20 28\\n1 28 30\\n1 30 40\\n1 40 50\\n\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"\"\"1 2 100\n1 100 2\n1 1\"\"\"\n\nassert solution == \"\"\"5 10 20 30 40 50\n2 28 27\"\"\"\n\nassert solution == \"\"\"10 20 28 27 30 40 50\n"
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected {output}, but got {solution(input())}.\"\n\nfrom typing import List"
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n1 100\\n1 1\\n2 2\\n5 10 20 30 40 50\\n2 28 27\") == \"1 2 100\\n1 100 2 2 5 10 20 30 40 50\\n2 28 27\"\nassert solution(\"1\\n2\\n100\\n1\\n100\\n200\\n10\\n200\\n30\\n200\\n40\\n200\\n50\") == \"1 100\\n1 200\\n2 200\\n10 200\\n200 30 200 40 200 50\"\nassert solution(\"1\\n2\\n100\\n1\\n100\\n200\\n10\\n200\\n30\\n200\\n40\\n200\\n50\\n200\\n200\\n300\\n200\\n400\\n200\\n500\") == \"1 100\\n1 200\\n2 200\\n10 200\\n200 30 200 40 200 500\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1 2 100\\n1 100 1\\n2 28 27\\n10 20 28 27 30 40 50\", \"Testcase failed\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == '1 2 100'\nassert solution(2) == '10 20 28 27 30 40 50'"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 2600\nassert solution(4) == 506"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"506\"\nassert solution(5) == \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(6) == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('0') == '2600'\nassert solution('3\\nAB 1 1\\nAC 2 1\\nBC 2 1') == '506'"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == 'def solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2600\"\n"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2600\"\nprint(\"Success!\")"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('0\\n' + '\\n'.join(['AB 1 1\\nAC 2 1\\nBC 2 1\\n'])) == 2600\nassert solution('3\\n' + '\\n'.join(['AB 1 1\\nAC 2 1\\nBC 2 1\\n'])) == 506"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == \"2600\"\nassert solution(sample_input_2) == \"506\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0\\nSample Output 1:\\n2600\\nSample Input 2:\\n3\\nAB 1 1\\nAC 2 1\\nBC 2 1\\nSample Output 2:\\n506\\ndef solution(stdin: str) -> str:\") == \"506\\ndef solution(stdin: str) -> str:\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"(()))\" == \"possible\")\nassert solution(\"(()()))\" == \"possible\")\nassert solution(\"(()())()\" == \"possible\")\nassert solution(\"(()(())())\" == \"impossible\")\nassert solution(\"())(())\" == \"possible\")\nassert solution(\"()())\" == \"impossible\")\nassert solution(\"()()(\" == \"impossible\")\nassert solution(\"()())()\" == \"impossible\")"
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"()))\" == \"possible\"\nassert solution(\"()())\") == \"possible\"\nassert solution(\"()())(()\") == \"possible\"\nassert solution(\"()(())()\") == \"impossible\"\nassert solution(\"()()()\") == \"impossible\"\nassert solution(\"()(())(())\") == \"impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r'''()))\nassert solution(r'''())()\nassert solution(r'''(()()))()()\nassert solution(r'''(\nSample Input 3:\n(\nSample Output 3:\npossible\n\nSample Input 4:\n)()\nSample Output 4:\nimpossible\n\nSample Input 5:\n())))\nSample Output 5:\npossible"
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"()))\") == \"possible\"\nassert solution(\"())(())\") == \"impossible\"\n"
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"()))\") == \"possible\"\nassert solution(\")))(\") == \"impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"()))\") == \"possible\"\nassert solution(\"()(())\") == \"possible\"\nassert solution(\"(())())\") == \"possible\"\nassert solution(\"(()())())\") == \"possible\"\nassert solution(\"(())\") == \"impossible\"\nassert solution(\"()())\") == \"impossible\"\nassert solution(\"(()())\") == \"impossible\"\nassert solution(\"()\") == \"impossible\"\nassert solution(\"()())\") == \"impossible\"\nassert solution(\"(()())\") == \"impossible\"\nassert solution(\"()\") == \"impossible\"\nassert solution(\"()())\") == \"impossible\"\nassert solution(\"(()())\") == \"impossible\"\nassert solution(\"()\") == \"impossible\"\nassert solution(\"()())\") == \"impossible\"\nassert solution(\"(()())\") == \"impossible\"\nassert solution(\"()\") == \"impossible\"\nassert solution(\"()())\") == \"impossible\"\nassert solution(\"(()())\") == \"impossible\"\nassert solution(\"()\") == \"impossible\"\nassert solution(\"()())\") == \"impossible\"\nassert solution(\"(()())\") == \"impossible\"\nassert solution(\"()\") == \"impossible\"\nassert solution(\"()())\") == \"impossible\"\nassert solution(\"(()())\") == \"impossible\"\nassert solution(\"()\") == \"impossible\"\nassert solution(\"()())\") == \"impossible\"\nassert solution(\"(()())\") == \"impossible\"\nassert solution(\"()\") == \"impossible\"\nassert solution(\"()())\") == \"impossible\"\nassert solution(\"(()())\") == \"impossible\"\nassert solution(\"()\") == \"impossible\"\nassert solution(\"()())\") == \"impossible\"\nassert solution(\"(()())\") == \"impossible\"\nassert solution(\"()\") == \"impossible\"\nassert solution(\"()())\") == \"impossible\"\nassert solution(\"(()())\") == \"impossible\"\nassert solution(\"()\") == \"impossible\"\nassert solution(\"()())\") == \"impossible\"\nassert solution(\"(()())\") == \"impossible\"\nassert solution(\"()\") == \"impossible\"\nassert solution(\"()())\") == \"impossible\"\nassert solution(\"(()())\") == \"impossible\"\nassert solution(\"()\") == \"impossible\"\nassert solution(\"()())\") == \"impossible\"\nassert solution(\"(()())\") == \"impossible\"\nassert solution(\"()\") == \"impossible\"\nassert solution(\"()())\") == \"impossible\"\nassert solution(\"(()())\") == \"impossible\"\nassert solution(\"()\") == \"impossible\"\nassert solution(\"()())\") == \"impossible\"\nassert solution(\"(()())\") == \"impossible\"\nassert solution(\"()\") == \"impossible\"\nassert solution(\"()())\") == \"impossible\"\nassert solution(\"(()())\") == \"impossible\"\nassert solution(\"()\") == \"impossible\"\nassert solution(\"()())\") == \"impossible\"\nassert solution(\"(()())\") == \"impossible\"\nassert solution(\"()\") == \"impossible\"\nassert solution(\"()())\") == \"impossible\"\nassert solution(\"(()())\") == \"impossible\"\nassert solution(\"()\") == \"impossible\"\nassert solution(\"()())\") == \"impossible\"\nassert solution(\"(()())\") == \"impossible\"\nassert solution(\"()\") == \"impossible\"\nassert solution(\"()())\") == \"impossible\"\nassert solution(\"(()())\") == \"impossible\"\nassert solution(\"()\") == \"impossible\"\nassert solution(\"()())\") == \"impossible\"\nassert solution(\"(()())\") == \"impossible\"\nassert solution(\"()\") == \"impossible\"\nassert solution(\"()())\") == \"impossible\"\nassert solution(\"(()())\") == \"impossible\"\nassert solution(\"()\") == \"impossible\"\nassert solution(\"()())\") == \"impossible\"\nassert solution(\"(()())\") == \"impossible\"\nassert solution(\"()\") == \"impossible\"\nassert solution(\"()())\") == \"impossible\"\nassert solution(\"(()())\") == \"impossible\"\nassert solution(\"()\") == \"impossible\"\nassert solution(\"()())\") == \"impossible\"\nassert solution(\"(()())\") == \"impossible\"\nassert solution(\"()\") == \"impossible\"\nassert solution(\"()())\") == \"impossible\"\nassert solution(\"(()())\") == \"impossible\"\nassert solution(\"()\") == \"impossible\"\nassert solution(\"()())\") == \"impossible\"\nassert solution(\"(()())\") == \"impossible\"\nassert solution"
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"(()())\") == \"possible\"\nassert solution(\"((())())\") == \"possible\"\nassert solution(\"(())\") == \"possible\"\nassert solution(\"())()\") == \"impossible\"\nassert solution(\"()())())\") == \"impossible\"\nassert solution(\"((())())(()\") == \"possible\"\nassert solution(\"((())())()()())\") == \"possible\"\nassert solution(\"(())(())\") == \"impossible\"\nassert solution(\"()()\") == \"possible\"\nassert solution(\"(())\") == \"possible\"\nassert solution(\"(()())\") == \"possible\"\nassert solution(\"(())()())\") == \"impossible\"\nassert solution(\"((())())()(()\") == \"possible\"\nassert solution(\"((())())()()())\") == \"possible\"\nassert solution(\"(())(())\") == \"impossible\"\nassert solution(\"()()\") == \"possible\"\nassert solution(\"(())\") == \"possible\"\nassert solution(\"(()())\") == \"possible\"\nassert solution(\"(())()())\") == \"impossible\"\nassert solution(\"((())())()(()\") == \"possible\"\nassert solution(\"((())())()()())\") == \"possible\"\nassert solution(\"(())(())\") == \"impossible\"\nassert solution(\"()()\") == \"possible\"\nassert solution(\"(())\") == \"possible\"\nassert solution(\"(()())\") == \"possible\"\nassert solution(\"(())()())\") == \"impossible\"\nassert solution(\"((())())()(()\") == \"possible\"\nassert solution(\"((())())()()())\") == \"possible\"\nassert solution(\"(())(())\") == \"impossible\"\nassert solution(\"()()\") == \"possible\"\nassert solution(\"(())\") == \"possible\"\nassert solution(\"(()())\") == \"possible\"\nassert solution(\"(())()())\") == \"impossible\"\nassert solution(\"((())())()(()\") == \"possible\"\nassert solution(\"((())())()()())\") == \"possible\"\nassert solution(\"(())(())\") == \"impossible\"\nassert solution(\"()()\") == \"possible\"\nassert solution(\"(())\") == \"possible\"\nassert solution(\"(()())\") == \"possible\"\nassert solution(\"(())()())\") == \"impossible\"\nassert solution(\"((())())()(()\") == \"possible\"\nassert solution(\"((())())()()())\") == \"possible\"\nassert solution(\"(())(())\") == \"impossible\"\nassert solution(\"()()\") == \"possible\"\nassert solution(\"(())\") == \"possible\"\nassert solution(\"(()())\") == \"possible\"\nassert solution(\"(())()())\") == \"impossible\"\nassert solution(\"((())())()(()\") == \"possible\"\nassert solution(\"((())())()()())\") == \"possible\"\nassert solution(\"(())(())\") == \"impossible\"\nassert solution(\"()()\") == \"possible\"\nassert solution(\"(())\") == \"possible\"\nassert solution(\"(()())\") == \"possible\"\nassert solution(\"(())()())\") == \"impossible\"\nassert solution(\"((())())()(()\") == \"possible\"\nassert solution(\"((())())()()())\") == \"possible\"\nassert solution(\"(())(())\") == \"impossible\"\nassert solution(\"()()\") == \"possible\"\nassert solution(\"(())\") == \"possible\"\nassert solution(\"(()())\") == \"possible\"\nassert solution(\"(())()())\") == \"impossible\"\nassert solution(\"((())())()(()\") == \"possible\"\nassert solution(\"((())())()()())\") == \"possible\"\nassert solution(\"(())(())\") == \"impossible\"\nassert solution(\"()()\") == \"possible\"\nassert solution(\"(())\") == \"possible\"\nassert solution(\"(()())\") == \"possible\"\nassert solution(\"(())()())\") == \"impossible\"\nassert solution(\"((())())()(()\") == \"possible\"\nassert solution(\"((())())()()())\") == \"possible\"\nassert solution(\"(())(())\") == \"impossible\"\nassert solution(\"()()\") == \"possible\"\nassert solution(\"(())\") == \"possible\"\nassert solution(\"(()())\") == \"possible\"\nassert solution(\"(())()())\") == \"impossible\"\nassert solution(\"((())())()(()\") == \"possible\"\nassert solution(\"((())())()()())\") == \"possible\"\nassert solution(\"(())(())\") == \"impossible\"\nassert solution(\"()()\") == \"possible\"\nassert solution(\"(())\") == \"possible\"\nassert solution(\"(()())\") == \"possible\"\nassert solution(\"(())()())\") == \"impossible\"\nassert solution(\"((())())()(()\") == \"possible\"\nassert solution(\"((())())()()())"
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('()))') == 'possible', \"The first test case is not correct.\"\nassert solution(')))') == 'impossible', \"The second test case is not correct.\"\nassert solution('())') == 'possible', \"The third test case is not correct.\"\nassert solution('()))') == 'possible', \"The fourth test case is not correct.\"\nassert solution('(()())') == 'impossible', \"The fifth test case is not correct.\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"()))\") == \"possible\"\nassert solution(\")))(\") == \"impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"()))\") == \"possible\"\nassert solution(\")))(\") == \"impossible\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1800\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1800\"\nassert solution(input()) == \"impossible\"\n"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1800\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '1800'\nprint(solution())"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400\") == \"1800\\n\"\nassert solution(\"2 2\\n1 1800 3600 1800\\n1 1900 3600 1600\") == \"impossible\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(f\"\"\"\n2 3\n1 1800 9000 1800\n1 2000 9200 1600\n1 2200 9400 1400\n\"\"\") == '1800\\n'\n\nassert solution(f\"\"\"\n2 2\n1 1800 3600 1800\n1 1900 3600 1600\n\"\"\") == 'impossible\\n'"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 1800, \"Sample Input 1\"\n\nprint(\"Sample Output 1:\")\n\nprint(1800)\n\nprint()\n\nassert solution() == \"impossible\", \"Sample Input 2\"\n\nprint(\"Sample Output 2:\")\n\nprint(\"impossible\")"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2 3\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400\") == \"1800\"\nassert solution(\"2\\n1 1800 3600 1800\\n1 1900 3600 1600\\n3 2000 2400 1800\") == \"impossible\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Solution: {solution(input())}, Expected output: {expected_output}\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n    2 3\n    1 1800 9000 1800\n    1 2000 9200 1600\n    1 2200 9400 1400\n    \"\"\") == \"1800\"\n\nassert solution(\"\"\"\n    2 2\n    1 1800 3600 1800\n    1 1900 3600 1600\n    \"\"\") == \"impossible\""
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n2 3\\n\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\"\nassert solution(\"2 3\\n3 2\\n\") == \"A1-B1 A2-C1 B2-C2\\nA1-C1 A2-B1 B2-C1\\nA1-B2 A2-C2 B1-C2\\nA1-C2 A2-B1 B1-C1\"\nassert solution(\"3 4\\n4 3\\n\") == \"A1-B1 A2-C1 B2-C1 A3-C1 B3-C1\"\nassert solution(\"4 5\\n5 4\\n\") == \"A1-B1 A2-C1 B2-C1 A3-C1 B3-C1\"\nassert solution(\"5 6\\n6 5\\n\") == \"A1-B1 A2-C1 B2-C1 A3-C1 B3-C1\"\nassert solution(\"6 7\\n7 6\\n\") == \"A1-B1 A2-C1 B2-C1 A3-C1 B3-C1\"\nassert solution(\"7 8\\n8 7\\n\") == \"A1-B1 A2-C1 B2-C1 A3-C1 B3-C1\"\nassert solution(\"8 9\\n9 8\\n\") == \"A1-B1 A2-C1 B2-C1 A3-C1 B3-C1\"\nassert solution(\"9 10\\n10 9\\n\") == \"A1-B1 A2-C1 B2-C1 A3-C1 B3-C1\"\nassert solution(\"10 11\\n11 10\\n\") == \"A1-B1 A2-C1 B2-C1 A3-C1 B3-C1\"\nassert solution(\"11 12\\n12 11\\n\") == \"A1-B1 A2-C1 B2-C1 A3-C1 B3-C1\"\nassert solution(\"12 13\\n13 12\\n\") == \"A1-B1 A2-C1 B2-C1 A3-C1 B3-C1\"\nassert solution(\"13 14\\n14 13\\n\") == \"A1-B1 A2-C1 B2-C1 A3-C1 B3-C1\"\nassert solution(\"14 15\\n15 14\\n\") == \"A1-B1 A2-C1 B2-C1 A3-C1 B3-C1\"\nassert solution(\"15 16\\n16 15\\n\") == \"A1-B1 A2-C1 B2-C1 A3-C1 B3-C1\"\nassert solution(\"16 17\\n17 16\\n\") == \"A1-B1 A2-C1 B2-C1 A3-C1 B3-C1\"\nassert solution(\"17 18\\n18 17\\n\") == \"A1-B1 A2-C1 B2-C1 A3-C1 B3-C1\"\nassert solution(\"18 19\\n19 18\\n\") == \"A1-B1 A2-C1 B2-C1 A3-C1 B3-C1\"\nassert solution(\"19 20\\n20 19\\n\") == \"A1-B1 A2-C1 B2-C1 A3-C1 B3-C1\"\nassert solution(\"20 21\\n21 20\\n\") == \"A1-B1 A2-C1 B2-C1 A3-C1 B3-C1\"\nassert solution(\"21 22\\n22 21\\n\") == \"A1-B1 A2-C1 B2-C1 A3-C1 B3-C"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\n\"\nassert solution(\"2 3\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\\n\""
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\") == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\n\"\nassert solution(\"2 3\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\\n\"\n"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n2 3\\n\") == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\n\""
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n2 3\\n\") == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\"\nassert solution(\"2 3\\n\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\""
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n2 3\\n\") == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\n\""
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected_output, f\"Expected output: {expected_output}, Got output: {solution}\""
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n2 3\\n\") == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\"\nassert solution(\"2 3\\n\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\"\nassert solution(\"2 5\\n1 2\\n2 3\\n3 4\\n\") == \"A1-B1 A2-C1 B2-C2 C2-A1 A3-B1 C3-B2\\nA2-C1 C1-A2 A3-B2 C3-B1\\nA3-B1 C3-A2 C2-A3 B3-A1\"\nassert solution(\"3 4\\n1 2\\n2 3\\n3 4\\n\") == \"A1-B1 A2-C1 B2-C2 C2-A1 A3-B1 C3-B2\\nA2-C1 C1-A2 A3-B2 C3-B1\\nA3-B1 C3-A2 C2-A3 B3-A1\"\nassert solution(\"5 6\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == \"A1-B1 A2-C1 B2-C2 C2-A1 A3-B1 C3-B2 D3-B3 E3-B4 F3-B5 G3-B6\\nA2-C1 C1-A2 A3-B2 C3-B1\\nA3-B1 C3-A2 C2-A3 B3-A1\"\nassert solution(\"7 8\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\") == \"A1-B1 A2-C1 B2-C2 C2-A1 A3-B1 C3-B2 D3-B3 E3-B4 F3-B5 G3-B6 H3-B7 I3-B8\"\nassert solution(\"9 10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n\") == \"A1-B1 A2-C1 B2-C2 C2-A1 A3-B1 C3-B2 D3-B3 E3-B4 F3-B5 G3-B6 H3-B7 I3-B8 J3-B9\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 2\\n..\\n..') == 7\nassert solution('4 4\\nX.XX\\nX..X\\n..X.\\n..XX') == 9"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '7\\n'"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n..\\n..\") == \"7\"\nassert solution(\"4 4\\nX.XX\\nX..X\\n..X.\\n..XX\") == \"9\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n..\\n..\") == 7\nassert solution(\"4 4\\nX.XX\\nX..X\\n..X. \\n..XX\") == 9"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n..\\n..\") == 7\nassert solution(\"4 4\\nX.XX\\nX..X\\n..X. \\n..XX\") == 9"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n..\\n..\") == \"7\"\nassert solution(\"4 4\\nX.XX\\nX..X\\n..X. \\n..XX\") == \"9\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"7\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(input())) == str(output())"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"600\\n\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin: str) == \"600\", \"The solution is not correct\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n3 3 2 2 100\\n1 1 1 1 500\\n') == 600\nassert solution('2\\n2 0 2 1 100\\n6 0 8 1 1\\n') == 100"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == 600, \"Sample Input 1: Expected 600, but got {}\".format(solution(sample_input_1))\nassert solution(sample_input_2) == 100, \"Sample Input 2: Expected 100, but got {}\".format(solution(sample_input_2))"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"2\n3 3 2 2 100\n1 1 1 1 500\n\"\"\") == \"600\\n\"\n\nassert solution(\n\"\"\"2\n2 0 2 1 100\n6 0 8 1 1\n\"\"\") == \"100\\n\"\n\nassert solution(\n\"\"\"2\n3 3 2 2 100\n1 1 1 1 500\n\"\"\") == \"600\\n\"\n\nassert solution(\n\"\"\"2\n2 0 2 1 100\n6 0 8 1 1\n\"\"\") == \"100\\n\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n3 3 2 2 100\\n1 1 1 1 500\\n\") == \"600\"\nassert solution(\"2\\n2 0 2 1 100\\n6 0 8 1 1\\n\") == \"100\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n3 3 2 2 100\\n1 1 1 1 500\\n') == 600\nassert solution('2\\n2 0 2 1 100\\n6 0 8 1 1\\n') == 100"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 600, \"The expected output is not obtained.\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n3 3 2 2 100\\n1 1 1 1 500\\n\") == \"600\"\nassert solution(\"2\\n2 0 2 1 100\\n6 0 8 1 1\\n\") == \"100\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 100, \"The expected output is not returned. Please check the solution.\"\nassert solution() == 100, \"The expected output is not returned. Please check the solution.\""
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n361\") == \"3\"\nassert solution(\"2\\n11\") == \"0\"\n\nfrom typing import List"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(2) == \"3\"\nassert solution(3) == \"361\"\nassert solution(4) == \"0\""
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n361\") == \"3\"\nassert solution(\"2\\n11\") == \"0\""
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 3\nassert solution(2) == 0"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 3\nassert solution(361) == 3\nassert solution(2) == 0"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed.\\nExpected output: {expected_output}\\nActual output: {solution(input())}\""
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='3\\n361') == 3\nassert solution(stdin='2\\n11') == 0"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == '3\\n'\nassert solution(open('input2.txt', 'r')) == '0\\n'\n\nfrom typing import List\n"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(361) == 3\nassert solution(11) == 0"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(b'\\n'.join(input().split())) == \"10\"\nassert solution(b'\\n'.join(input().split())) == \"cancel road trip\""
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"cancel road trip\""
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 10\\n2 100\\n1 10\\n11 5\") == \"10\\n\"\nassert solution(\"3 10\\n2 100\\n1 10\\n13 5\") == \"cancel road trip\\n\""
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == output"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"cancel road trip\""
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == \"10\"\nassert solution(sample_input2) == \"cancel road trip\""
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"10\""
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(b'\\n'.join([str(x) for x in [3, 10] + [100] * 3 + [10] + [5] * 3])) == '10\\n'\nassert solution(b'\\n'.join([str(x) for x in [3, 10] + [100] * 3 + [10] + [5] * 3])) == 'cancel road trip\\n'"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution, \"No solution provided\"\nsolution()"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_str), \"Test failed\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == [0, 7, 8, 11, 15, 16, 19]\nprint(\"All tests passed!\")"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed. Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 9\\n2 8\\n1 1\\n3 4\\n5 100\\n') == '1 8 9 9 100 101 108 109 109'\nassert solution('5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\\n') == '0 7 8 11 15 16 19'"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == [\n    \"1 8 9 9 100 101 108 109 109\",\n    \"0 7 8 11 15 16 19\",\n]"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 9\\n2 8\\n1 1\\n3 4\\n5 100\") == [\"1 8 9 9 100 101 108 109 109\", \"0 7 8 11 15 16 19\"]"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 9\\n2 8\\n1 1\\n3 4\\n5 100\\n\") == \"1 8 9 9 100 101 108 109 109\"\nassert solution(\"5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\\n\") == \"0 7 8 11 15 16 19\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    4 9\n    2 8\n    1 1\n    3 4\n    5 100\n    \"\"\"\n) == \"1 8 9 9 100 101 108 109 109\"\n\nassert solution(\n    \"\"\"\n    5 7\n    2 2\n    3 8\n    2 7\n    2 4\n    3 8\n    \"\"\"\n) == \"0 7 8 11 15 16 19\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Test failed. Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1 8 9 9 100 101 108 109 109\", \"Incorrect output\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == 1\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == 3"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3') == '1\\n3'\nassert solution('1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 0\\n0 3') == '3\\n'"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == \"1\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == \"3\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == \"1\\n\", \"Test case 1 failed\"\n\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == \"3\\n\", \"Test case 2 failed\"\n\nassert solution(\"5 3 3\\n1 1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == \"1\\n\", \"Test case 3 failed\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == \"1\\n\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == \"3\\n\"\n\nfrom typing import List\n"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == 1\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == 3"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"Solution\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n\") == \"1\\n\", \"Your solution is incorrect. It should return the string '1'.\"\n\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n\") == \"3\\n\", \"Your solution is incorrect. It should return the string '3'.\"\n\nassert solution(\"1 3 10\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n\") == \"0\\n\", \"Your solution is incorrect. It should return the string '0'.\"\n\nassert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n\") == \"1\\n\", \"Your solution is incorrect. It should return the string '1'.\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3') == '1'\nassert solution('1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3') == '3'"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"liam_area_of_effect.txt\", \"r\")) == \"1\\n\"\nassert solution(open(\"liam_max_villages.txt\", \"r\")) == \"3\\n\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\\n\") == \"4\\n4\\n2\\n2\\n0\\n\"\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\\n\") == \"2\\n0\\n0\\n2\\n0\\n\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 10000\\n1\\n1\\n1\\n1\\n1') == '4\\n4\\n2\\n2\\n0\\n'\nassert solution('5 9\\n1\\n1\\n10\\n1\\n9') == '2\\n0\\n0\\n2\\n0\\n'"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\\n\") == \"4\\n4\\n2\\n2\\n0\\n\"\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\\n\") == \"2\\n0\\n0\\n2\\n0\\n\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\") == \"4\\n4\\n2\\n2\\n0\\n\"\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\") == \"2\\n0\\n0\\n2\\n0\\n\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Incorrect output. Expected: {expected_output}, Received: {solution(input())}\"\n\nfrom typing import List"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\") == \"4\\n4\\n2\\n2\\n0\\n\"\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\") == \"2\\n0\\n0\\n2\\n0\\n\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    5 10000\n    1\n    1\n    1\n    1\n    1\n    \n''') == '''\n4\n4\n2\n2\n0\n'''\n\nassert solution('''\n    5 9\n    1\n    1\n    10\n    1\n    9\n    \n''') == '''\n2\n0\n0\n2\n0\n'''"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\") == \"4\\n4\\n2\\n2\\n0\\n\"\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\") == \"2\\n0\\n0\\n2\\n0\\n\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\") == \"4\\n4\\n2\\n2\\n0\"\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\") == \"2\\n0\\n0\\n2\\n0\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\ne\\n\") == \"NE\\n\"\nassert solution(\"4\\nkava\\n\") == \"DA\\nak\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\nne') == 'NE'\nassert solution('4\\nkava') == 'DA'"
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\nne\\n\") == \"NE\\n\"\nassert solution(\"4\\nkava\\n\") == \"DA\\nak\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\nne\") == \"NE\"\nassert solution(\"4\\nkava\") == \"DA\"\n"
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'NE', \"The correct output is 'NE', but it is actually '%s'.\" % solution(stdin)"
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == sample_output1, f\"Expected '{sample_output1}', but got '{solution(sample_input1)}'.\"\nassert solution(sample_input2) == sample_output2, f\"Expected '{sample_output2}', but got '{solution(sample_input2)}'.\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"NE\"\nassert solution() == \"DA\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\nne\") == \"NE\", \"Expected 'NE', got {}\".format(solution(\"2\\nne\"))\nassert solution(\"4\\nkava\") == \"DA\", \"Expected 'DA', got {}\".format(solution(\"4\\nkava\"))"
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"2\\nne\\n\") == \"NE\"\nassert solution(stdin=\"4\\nkava\\n\") == \"DA\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\nne\\n') == 'NE\\n'\nassert solution('4\\nkava\\n') == 'DA\\nak\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Input') == 'Output'"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2\") == \"2\\n0\\n2\\n1\\n\"\nassert solution(\"8 10 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8\") == \"0\\n0\\n3\\n2\\n\"\n"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2') == '2\\n0\\n2\\n1'"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\n\ninput1 = \"\"\"\n4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n\"\"\"\n\noutput1 = \"2\\n0\\n2\\n1\\n\"\n\ninput2 = \"\"\"\n8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n\"\"\"\n\noutput2 = \"0\\n0\\n3\\n2\\n\""
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"Output 1:\\n2\\n0\\n2\\n1\\n\\nOutput 2:\\n0\\n0\\n3\\n2\\n\\n\""
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2\\n\") == \"2\\n0\\n2\\n1\\n\"\nassert solution(\"8 10 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8\\n\") == \"0\\n0\\n3\\n2\\n\"\n"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2\") == \"2\\n0\\n2\\n1\"\nassert solution(\"8 10 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8\") == \"0\\n0\\n3\\n2\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\\n2 1 3\") == \"2\\n\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\\n\") == 2\nassert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 3\\n\") == 1"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\\n2 1 3\") == \"2\\n\"\nassert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 3\\n4 5 6\") == \"4\\n\"\nassert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 3\\n4 5 6\\n7 8 9\") == \"7\\n\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 2\nassert solution() == 1"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\npass\\n'"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input1) == expected1\nassert solution(input2) == expected2"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {input()}, {expected_output}\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Your solution is {solution(input())}, not {output()}\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\\n2 1 3') == '2'\nassert solution('2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 3\\n4 5 6\\n7 8 9') == '1'"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''2 15\nD 4 10 1\nC 6 1''') == '40.5'\nassert solution('''3 15\nD 4 10 1\nC 6 1\nC 9 3''') == '49.0'\n"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 15\\nD 4 10 1\\nC 6 1\\n\") == \"40.500000000\\n\"\nassert solution(\"3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\n\") == \"49.000000000\\n\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 15\\nD 4 10 1\\nC 6 1\\n\") == \"40.500000000\"\nassert solution(\"3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\n\") == \"49.000000000\"\nassert solution(\"2 20\\nD 4 10 1\\nC 6 1\\nD 5 10 1\\n\") == \"impossible\"\nassert solution(\"1 10\\nD 4 10 1\\nC 6 1\\nD 5 10 1\\n\") == \"impossible\"\nassert solution(\"2 20\\nD 4 10 1\\nC 6 1\\nD 4 10 1\\n\") == \"impossible\"\nassert solution(\"3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\nC 12 10 1\\n\") == \"impossible\"\nassert solution(\"10 10\\nC 4 10 1\\nD 5 10 1\\nC 6 10 1\\n\") == \"impossible\"\nassert solution(\"5 10\\nD 4 10 1\\nC 6 1\\nD 5 10 1\\n\") == \"impossible\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"40.500000000\", \"The solution is not correct.\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 15\\nD 4 10 1\\nC 6 1\\n\") == \"40.500000000\"\nassert solution(\"3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\n\") == \"49.000000000\"\n"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 15\\nD 4 10 1\\nC 6 1\\n\") == \"40.500000000\\n\"\nassert solution(\"3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\n\") == \"49.000000000\\n\"\nassert solution(\"1 2\\nD 2 1 1\\n\") == \"impossible\\n\"\nassert solution(\"1 100\\nD 1 1 1\\n\") == \"impossible\\n\"\n"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"40.500000000\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"40.500000000\", \"The solution is not correct.\"\n"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Output {solution(input())} is not correct!\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 15\\nD 4 10 1\\nC 6 1\\n2 15\\nD 4 10 1\\nC 6 1\\n') == '40.500000000\\n'\nassert solution('3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\n') == '49.000000000\\n'\nassert solution('2 15\\nD 4 10 1\\nC 6 1\\n2 15\\nD 4 10 1\\nC 6 1\\n') == '40.500000000\\n'"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input(1)) == '5 4 9 3 1 10 7 6 2'\nassert solution(sample_input(2)) == 'fail'"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == \"5 4 9 3 1 10 7 6 2\"\nassert solution(sample_input_2) == \"fail\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == \"5 4 9 3 1 10 7 6 2\\n\"\nassert solution(\"10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\n\") == \"fail\\n\"\nassert solution(\"10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\n\\n\") == \"fail\\n\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input(1)) == \"5 4 9 3 1 10 7 6 2\"\nassert solution(sample_input(2)) == \"fail\"\n\nfrom typing import List"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\n\") == \"5 4 9 3 1 10 7 6 2\\n\"\nassert solution(\"10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\n\") == \"fail\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\n\") == \"5 4 9 3 1 10 7 6 2\"\nassert solution(\"10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\n\") == \"fail\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\n\") == \"5 4 9 3 1 10 7 6 2\\n\"\nassert solution(\"10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\n\") == \"fail\\n\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input1) == expected1\nassert solution(input2) == expected2"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 'fail'  # Add your solution here"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(input())) == \"5 4 9 3 1 10 7 6 2\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('test_input.txt').read()) == ['\\n'.join(['00:00', '01:00', '01:01'])]"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"00:00\\n01:01\") == 3\nassert solution(\"00:08\\n00:00\") == 3\nassert solution(\"00:00\\n00:00\") == 1\nassert solution(\"00:00\\n00:00\") == 0"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"00:00\") == \"3\\n00:00\\n01:01\"\nassert solution(\"00:08\") == \"3\\n00:08\\n00:09\\n00:00\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"00:00\") == \"3\", \"Test 1 failed\"\nassert solution(\"01:01\") == \"3\", \"Test 2 failed\"\nassert solution(\"00:08\") == \"3\", \"Test 3 failed\"\nassert solution(\"23:59\") == \"3\", \"Test 4 failed\"\nassert solution(\"00:60\") == \"3\", \"Test 5 failed\"\n\nfrom typing import List"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"00:00\\n01:01\") == \"3\\n00:00\\n01:00\\n01:01\"\nassert solution(\"00:08\\n00:00\") == \"3\\n00:08\\n00:09\\n00:00\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"00:00\\n01:01\") == \"3\\n00:00\\n01:00\\n01:01\"\nassert solution(\"00:08\\n00:00\") == \"3\\n00:08\\n00:09\\n00:00\"\nassert solution(\"00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n0"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"00:00\") == \"3\\n00:00\\n01:00\"\nassert solution(\"00:08\") == \"3\\n00:08\\n00:09\\n00:00\"\n"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"00:00\\n01:01\") == \"3\\n00:00\\n01:00\\n01:01\"\nassert solution(\"00:08\\n00:00\") == \"3\\n00:08\\n00:09\\n00:00\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('00:00') == '3\\n00:00\\n01:00'\nassert solution('00:08') == '3\\n00:08\\n00:09'"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\"\n"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"(()))\") == \"4,4:\"\nassert solution(\"()())\") == \"4,8:8,8:\"\nassert solution(\"((())()))\") == \"4,8:8,8:\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\"\nassert solution(\"())()\") == \"4,8:8,8:\"\nassert solution(\"(())()\") == \"4,8:8,8:\"\nassert solution(\"(())(())\") == \"4,8:8,8:\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(()) == '4,8:8,8:'\nassert solution(() == '4,4:')\n\nfrom typing import List"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(()) == \"4,8:8,8:\"\nassert solution(() == \"\") == \"4,4:\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"(())\") == \"4,4:4,4:\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('(())') == '4,8:8,8:'\nassert solution('()') == '4,4:'\nassert solution('((a))') == '4,8:8,8:'\nassert solution('((ab))') == '4,8:8,8:'\nassert solution('(())') == '4,8:8,8:'\nassert solution('()') == '4,4:'\nassert solution('((a))') == '4,8:8,8:'\nassert solution('((ab))') == '4,8:8,8:'\nassert solution('(())') == '4,8:8,8:'\nassert solution('()') == '4,4:'\nassert solution('((a))') == '4,8:8,8:'\nassert solution('((ab))') == '4,8:8,8:'\nassert solution('(())') == '4,8:8,8:'\nassert solution('()') == '4,4:'\nassert solution('((a))') == '4,8:8,8:'\nassert solution('((ab))') == '4,8:8,8:'"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n26 02 03 03 1\\n\") == \"5\\n\"\nassert solution(\"1 1\\n26 02 03 03 2\\n\") == \"185\\n\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 1\\n26 02 03 03 1\\n26 02 03 03 2') == '5\\n185\\n'"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n26 02 03 03 1\\n26 02 03 03 2\\n1 1\\n26 02 03 03 1\\n26 02 03 03 2\\n1 1\\n26 02 03 03 1\\n26 02 03 03 2\\n1 1\\n26 02 03 03 1\\n26 02 03 03 2\") == \"5\\n185\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '5\\n'"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input1) == \"5\"\nassert solution(input2) == \"185\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n1 1\n26 02 03 03 1\n''') == '5'\nassert solution('''\n1 1\n26 02 03 03 2\n''') == '185'"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n26 02 03 03 1\\n26 02 03 03 2\\n\") == \"5\\n185\\n\"\nassert solution(\"2 1\\n01 01 01 01 01\\n26 02 03 03 1\\n26 02 03 03 2\\n\") == \"185\\n\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 1\\n26 02 03 03 1\\n26 02 03 03 2\\n') == '5\\n185'"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n1 1\n26 02 03 03 1\n26 02 03 03 2\n26 02 03 03 3\n26 02 03 03 4\n26 02 03 03 5\n26 02 03 03 6\n26 02 03 03 7\n26 02 03 03 8\n26 02 03 03 9\n26 02 03 03 10\n26 02 03 03 11\n26 02 03 03 12\n26 02 03 03 13\n26 02 03 03 14\n26 02 03 03 15\n26 02 03 03 16\n26 02 03 03 17\n26 02 03 03 18\n26 02 03 03 19\n26 02 03 03 20\n26 02 03 03 21\n26 02 03 03 22\n26 02 03 03 23\n26 02 03 03 24\n26 02 03 03 25\n26 02 03 03 26\n26 02 03 03 27\n26 02 03 03 28\n26 02 03 03 29\n26 02 03 03 30\n26 02 03 03 31\n26 02 03 03 32\n26 02 03 03 33\n26 02 03 03 34\n26 02 03 03 35\n26 02 03 03 36\n26 02 03 03 37\n26 02 03 03 38\n26 02 03 03 39\n26 02 03 03 40\n26 02 03 03 41\n26 02 03 03 42\n26 02 03 03 43\n26 02 03 03 44\n26 02 03 03 45\n26 02 03 03 46\n26 02 03 03 47\n26 02 03 03 48\n26 02 03 03 49\n26 02 03 03 50\n26 02 03 03 51\n26 02 03 03 52\n26 02 03 03 53\n26 02 03 03 54\n26 02 03 03 55\n26 02 03 03 56\n26 02 03 03 57\n26 02 03 03 58\n26 02 03 03 59\n26 02 03 03 60\n26 02 03 03 61\n26 02 03 03 62\n26 02 03 03 63\n26 02 03 03 64\n26 02 03 03 65\n26 02 03 03 66\n26 02 03 03 67\n26 02 03 03 68\n26 02"
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"\"\"2 3 4 1\"\"\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6 2\\n3 4 5 6 1 2\\n4 2\\n3 4 1 2\\n') == '5 6 1 2 3 4'"
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\\n\") == \"5 6 1 2 3 4\\n\"\nassert solution(\"4 2\\n3 4 1 2\\n\") == \"2 3 4 1\\n\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input1) == output1, f\"Test 1 failed: {solution(input1)}!= {output1}\"\nassert solution(input2) == output2, f\"Test 2 failed: {solution(input2)}!= {output2}\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"Impossible\"  # Test case 1\nassert solution() == \"5 6 1 2 3 4\"  # Test case 2"
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\\n\") == \"5 6 1 2 3 4 \\n\"\nassert solution(\"4 2\\n3 4 1 2\\n\") == \"2 3 4 1 \\n\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"6 2\\n3 4 5 6 1 2\\n4 2\\n3 4 1 2\\n\") == \"5 6 1 2 3 4 \\n\"\nassert solution(stdin=\"4 2\\n3 4 1 2\\n6 2\\n1 3\\n\") == \"2 3 4 1 \\n\"\nassert solution(stdin=\"4 2\\n3 4 1 2\\n6 2\\n1 3\\n\") == \"2 3 4 1 \\n\"\nassert solution(stdin=\"6 2\\n3 4 5 6 1 2\\n4 2\\n3 4 1 2\\n\") == \"Impossible \\n\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"\n\nfrom typing import List"
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\\n\") == \"5 6 1 2 3 4 \\n\"\nassert solution(\"4 2\\n3 4 1 2\\n\") == \"2 3 4 1 \\n\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Received: {solution(input())}\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1374 2\\n210 1\\n\") == \"7413\\n201\\n\"\nassert solution
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(1374) + \" \" + str(2)) == \"7413\"\nassert solution(str(210) + \" \" + str(1)) == \"201\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1374 2\") == \"7413\"\nassert solution(\"210 1\") == \"201\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1374 2\\n210 1\") == \"7413\"\nassert solution(\"10 2\\n30 1\\n50 2\") == \"6030\"\nassert solution(\"100 2\\n1000 1\\n10000 1\") == \"99999\"\nassert solution(\"100000 2\\n1000000 1\\n10000000 1\") == \"9999999\"\nassert solution(\"999999999999 2\\n999999999999 1\\n9999999999999 1\") == \"1000000000000000000000\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1374 2\") == \"7413\"\nassert solution(\"210 1\") == \"201\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1374 2\") == \"7413\"\nassert solution(\"210 1\") == \"201\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1374 2\") == \"7413\", \"Solution 1 failed\"\nassert solution(\"210 1\") == \"201\", \"Solution 2 failed\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Output the largest number you can get after exactly k swaps.\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"0.733333333333333\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '0.666666666666667'\n"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0.666666666666667\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0\\n0 1\\n1 1\\n1 0\\n\") == \"0.666666666666667\\n\"\nassert solution(\"3\\n0 0\\n1 1\\n2 0\\n\") == \"0.733333333333333\\n\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0 0\\n0 1\\n1 1\\n1 0') == '0.666666666666667'\nassert solution('0 0\\n1 1\\n2 0') == '0.733333333333333'"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0.666666666666667\", \"Output should be 0.666666666666667\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\n\ninput1 = [0, 0]\ninput2 = [0, 1]\noutput1 = 0.666666666666667\noutput2 = 0.733333333333333"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '0.666666666666667', \"Incorrect output\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 1\\n1 0\") == \"0.666666666666667\"\nassert solution(\"3\\n0 0\\n1 1\\n2 0\") == \"0.733333333333333\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Test case failed. Got: {solution(input())}, Expected: {output()}\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 21"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Output the minimum total cost (in dollars) to provide a wireless network that covers every corridor.\\n\", \"Test failed\"\nelse:\n    print(\"Test passed\")"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"9\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3 4\\n10 1 3\\n0 1 20\") == \"9\"\nassert solution(\"2 3 100\\n10 1 10\\n10 1 10\") == \"21\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3 4\\n10 1 3\\n0 1 20\\n\") == \"9\"\nassert solution(\"2 3 100\\n10 1 10\\n10 1 10\\n\") == \"21\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"9\"\nassert solution(open(\"input.txt\", \"r\")) == \"21\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 9"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3 4\\n10 1 3\\n0 1 20\\n2 3 100\\n10 1 10\\n10 1 10\") == \"9\"\nassert solution(\"2 3 100\\n10 1 10\\n10 1 10\") == \"21\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"9\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\\n\") == \"2\\n\"\nassert solution(\"9 2 7 -\\n1 1 1 2\\n\") == \"4\\n\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Output the number of valid ways in which the section could be filled in for a KenKen puzzle of the given size.\\n\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\", \"Your solution should return the string '2'\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('8 2 7 -\\n1 1 1 2\\n') == '2'\nassert solution('9 2 7 -\\n1 1 1 2\\n') == '4'\n\nfrom typing import List"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\\n\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\\n\") == \"4\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\\n\"\n"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\") == \"4\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('8 2 7 -\\n1 1 1 2\\n') == '2\\n'\nassert solution('9 2 7 -\\n1 1 1 2\\n') == '4\\n'"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8') == '3\\n4\\n3\\n2\\n1\\n'\nassert solution('4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8') == '2\\n3\\n2\\n1\\n'"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"The output is {solution(stdin)} but should be {expected}\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\\n4\\n3\\n2\\n1\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_str1) == expected_output1, f\"Test case 1 failed. Expected output: '{expected_output1}', but got '{solution(input_str1)}'.\"\nassert solution(input_str2) == expected_output2, f\"Test case 2 failed. Expected output: '{expected_output2}', but got '{solution(input_str2)}'.\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input1) == output1, f\"Expected {output1}, got {solution(input1)}\"\nassert solution(input2) == output2, f\"Expected {output2}, got {solution(input2)}\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '''3\n4\n3\n2\n1'''"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output, f\"Incorrect output: {solution(stdin)}, expected {expected_output}\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\") == \"3\\n4\\n3\\n2\\n1\"\nassert solution(\"4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\") == \"2\\n3\\n2\\n1\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test failed with input {input()}, expected output {expected_output}\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n2 1\") == \"6\"\nassert solution(\"3 4\\n2 3 1\") == \"24\"\n"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 6\n"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 3\\n2 1\\n') == '6\\n'\nassert solution('3 4\\n2 3 1\\n') == '24\\n'"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 24, \"The solution is incorrect.\"\n"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 6\nassert solution() == 24"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == expected_output1, \"Test 1: Expected output is not correct.\"\nassert solution(sample_input2) == expected_output2, \"Test 2: Expected output is not correct.\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 24"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"output\"\nassert solution(input()) == \"output\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == 6, \"Sample Input 1: 2 3\\nSample Output 1: 6\\n\"\nassert solution(sample_input_2) == 24, \"Sample Input 2: 3 4\\nSample Output 2: 24\\n\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 2') == '2\\n'\nassert solution('5\\n3 4 5 1 2') == '1\\n'"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"5\\n3 4 5 1 2\\n\") == \"1\\n\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n1 2\\nSample Output 1:\\n2') == '2\\n'\nassert solution('5\\n3 4 5 1 2\\nSample Output 2:\\n1') == '1\\n'"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\", \"Output should be 2, not {}.\".format(solution(stdin))"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 2\") == \"2\\n\"\nassert solution(\"5\\n3 4 5 1 2\") == \"1\\n\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\\n\"\n"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 2\\n\") == 2\nassert solution(\"5\\n3 4 5 1 2\\n\") == 1"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"5\\n3 4 5 1 2\\n\") == \"1\\n\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '2'\n"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == output, f\"Expected output {output}, got {solution(stdin)}\"\nfor i in range(3):\n    for j in range(3):\n        assert A[i][j] <= A[(i+1) % 3][(j+1) % 3], f\"Matrix is not extremely cool for submatrix ({i+1}, {j+1})\"\n\nmax_elements = 0\nfor i in range(3):\n    for j in range(3):\n        max_elements = max(max_elements, A[i][j])\n\nprint(max_elements)"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"9\\n\", \"Your solution is incorrect!\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 4 10\\n5 2 6\\n11 1 3\") == \"9\"\nassert solution(\"3 3\\n1 3 1\\n2 1 2\\n1 1 1\") == \"4\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3\\n1 4 10\\n5 2 6\\n11 1 3') == '9'\nassert solution('3 3\\n1 3 1\\n2 1 2\\n1 1 1') == '4'"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\n1 4 10\\n5 2 6\\n11 1 3') == '9\\n'"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3\\n1 4 10\\n5 2 6\\n11 1 3') == 9\nassert solution('3 3\\n1 3 1\\n2 1 2\\n1 1 1') == 4"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n1 4 10\\n5 2 6\\n11 1 3\") == 9\nassert solution(\"3 3\\n1 3 1\\n2 1 2\\n1 1 1\") == 4"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"9\\n\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 4 10\\n5 2 6\\n11 1 3\\n\") == \"9\\n\"\nassert solution(\"3 3\\n1 3 1\\n2 1 2\\n1 1 1\\n\") == \"4\\n\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2\n\nsample_input_1 = \"\"\"\n4\n2 1 3 4\n1 2\n1 3\n3 4\n\"\"\"\n\nexpected_output_1 = 6\n\nsample_input_2 = \"\"\"\n4\n3 4 5 6\n1 2\n1 3\n2 4\n\"\"\"\n\nexpected_output_2 = 3"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(None) == \"Sample Output 1:\\n6\"\nassert solution(None) == \"Sample Output 2:\\n3\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"6\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 1 3 4\\n1 2\\n1 3\\n3 4\\n\") == \"6\"\nassert solution(\"4\\n3 4 5 6\\n1 2\\n1 3\\n2 4\\n\") == \"3\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '6\\n', \"The function should return '6', but it returned '\"+str(solution())+\"'\"\nassert solution() == '3\\n', \"The function should return '3', but it returned '\"+str(solution())+\"'\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(stdin=input())}\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"6\\n\"\n"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2 1 3 4\\n1 2\\n1 3\\n3 4\") == 6\nassert solution(\"4\\n3 4 5 6\\n1 2\\n1 3\\n2 4\") == 3"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 1 3 4\\n1 2\\n1 3\\n3 4\\n\") == \"6\\n\"\nassert solution(\"4\\n3 4 5 6\\n1 2\\n1 3\\n2 4\\n\") == \"3\\n\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2 1 3 4\\n1 2\\n1 3\\n3 4\\n\") == \"6\\n\"\nassert solution(\"4\\n3 4 5 6\\n1 2\\n1 3\\n2 4\\n\") == \"3\\n\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_stream) == expected_output, f\"Test case {i+1} failed.\\nExpected: {expected_output}\\nGot: {solution(input_stream)}\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == \"18\"\nassert solution(sample_input_2) == \"265\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 10\\n5 8\\n\") == \"18\\n8\\n\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\\n\") == \"265\\n25\\n10\\n\"\n"
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"18\\n8\\n\", \"Function should return 18, but instead returned {}\".format(solution())"
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 10\\n5 8\") == \"18\"\nassert solution(\"17 144\\n121 121\\n89 98\") == \"265\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n1 10\\n5 8\\n') == '18\\n8\\n'\nassert solution('3\\n17 144\\n121 121\\n89 98\\n') == '265\\n25\\n10\\n'"
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 10\\n5 8\") == \"18\\n8\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\") == \"265\\n25\\n10\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input {input()} and expected output {expected_output}\"\nprint(\"Test passed\")"
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 10\\n5 8\") == \"18\\n8\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\") == \"265\\n25\\n10\"\nassert solution(\"1\\n1 10\\n5 8\") == \"18\\n8\"\nassert solution(\"2\\n1 10\\n5 8\") == \"18\\n8\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\") == \"265\\n25\\n10\"\nassert solution(\"1\\n1 10\\n5 8\") == \"18\\n8\"\nassert solution(\"2\\n1 10\\n5 8\") == \"18\\n8\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\") == \"265\\n25\\n10\"\nassert solution(\"1\\n1 10\\n5 8\") == \"18\\n8\"\nassert solution(\"2\\n1 10\\n5 8\") == \"18\\n8\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\") == \"265\\n25\\n10\"\nassert solution(\"1\\n1 10\\n5 8\") == \"18\\n8\"\nassert solution(\"2\\n1 10\\n5 8\") == \"18\\n8\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\") == \"265\\n25\\n10\"\nassert solution(\"1\\n1 10\\n5 8\") == \"18\\n8\"\nassert solution(\"2\\n1 10\\n5 8\") == \"18\\n8\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\") == \"265\\n25\\n10\"\nassert solution(\"1\\n1 10\\n5 8\") == \"18\\n8\"\nassert solution(\"2\\n1 10\\n5 8\") == \"18\\n8\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\") == \"265\\n25\\n10\"\nassert solution(\"1\\n1 10\\n5 8\") == \"18\\n8\"\nassert solution(\"2\\n1 10\\n5 8\") == \"18\\n8\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\") == \"265\\n25\\n10\"\nassert solution(\"1\\n1 10\\n5 8\") == \"18\\n8\"\nassert solution(\"2\\n1 10\\n5 8\") == \"18\\n8\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\") == \"265\\n25\\n10\"\nassert solution(\"1\\n1 10\\n5 8\") == \"18\\n8\"\nassert solution(\"2\\n1 10\\n5 8\") == \"18\\n8\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\") == \"265\\n25\\n10\"\nassert solution(\"1\\n1 10\\n5 8\") == \"18\\n8\"\nassert solution(\"2\\n1 10\\n5 8\") == \"18\\n8\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\") == \"265\\n25\\n10\"\nassert solution(\"1\\n1 10\\n5 8\") =="
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_1) == output_1, f\"Expected {output_1}, got {solution(input_1)}\"\nassert solution(input_2) == output_2, f\"Expected {output_2}, got {solution(input_2)}\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\\n\") == 0.5\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\\n\") == 12.5"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 0.50000000, \"Expected 0.50000000, got {}\".format(solution())\nassert solution() == 12.50000000, \"Expected 12.50000000, got {}\".format(solution())"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 0.50000000, \"Expected 0.50000000, but got {}.\".format(solution())\n"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\") == \"0.50000000\"\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\") == \"12.50000000\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\") == \"0.50000000\"\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\") == \"12.50000000\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"0.50000000\"\n\nfor i in range(3):\n    x1, y1 = map(float, stdin.readline().split())\n    x2, y2 = map(float, stdin.readline().split())\n    x3, y3 = map(float, stdin.readline().split())\n    x4, y4 = map(float, stdin.readline().split())\n    x5, y5 = map(float, stdin.readline().split())\n\n    def triangle_area(a, b, c):\n        s = ((a[0] - b[0]) * (c[1] + b[1]) - (a[1] - b[1]) * (c[0] + b[0])) / 2\n        return abs(s / 2)\n\n    a = [x1, y1]\n    b = [x2, y2]\n    c = [x3, y3]\n    if triangle_area(a, b, c) < 0:\n        c, b, a = a, b, c\n\n    def is_collinear(x1, y1, x2, y2, x3, y3):\n        return abs(x1 - x2) < 0.00001 and abs(y1 - y2) < 0.00001 and abs(x2 - x3) < 0.00001 and abs(y2 - y3) < 0.00001\n\n    if is_collinear(a[0], a[1], b[0], b[1], c[0], c[1]):\n        continue\n    if is_collinear(b[0], b[1], c[0], c[1], a[0], a[1]):\n        continue\n    if is_collinear(c[0], c[1], a[0], a[1], b[0], b[1]):\n        continue\n    if is_collinear(a[0], a[1], b[0], b[1], c[0], c[1]):\n        continue\n\n    points = [(x1, y1), (x2, y2), (x3, y3)]\n    points.sort()\n    if len(points) < k:\n        continue\n\n    poly = [[points[0][0], points[0][1]], [points[1][0], points[1][1]], [points[2][0], points[2][1]]]\n    for i in range(len(points) - 1):\n        for j in range(i + 1, len(points)):\n            area = triangle_area(points[i], points[j], points[(i + j) % len(points)])\n            if abs(area) < 0.00001:\n                poly.append([points[(i + j) % len(points)][0], points[(i + j) % len(points)][1]])\n\n    polygon = []\n    for point in poly:\n        polygon.append(point[0] + \" \" + point[1])\n\n    area = 0\n    for i in range(len(polygon) // 2):\n        area += 0.5 * polygon[i * 2 + 1] * polygon[i * 2 + 2] - 0.5 * polygon[i * 2] * polygon[i * 2 + 1]\n\n    return f\"{area:.6f}\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\") == 0.5\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\") == 12.5\n"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\") == \"0.5\"\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\") == \"12.5\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\\n\") == \"0.50000000\\n\"\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\\n\") == \"12.50000000\\n\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == \"2\", \"Test 1 failed\"\nassert solution(sample_input2) == \"1\", \"Test 2 failed\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\\n\", \"Incorrect output\"\nassert solution() == \"1\\n\", \"Incorrect output\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\\n\") == \"2\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\\n\") == \"1\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\") == 2\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\") == 1\n\nfrom typing import List"
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\") == \"2\\n\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\") == \"1\\n\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\") == \"2\\n\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\") == \"1\\n\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\") == \"2\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\") == \"1\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\") == \"2\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\") == \"1\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\") == \"2\\n\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\") == \"1\\n\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected_output, f\"Solution: {solution}, Expected Output: {expected_output}\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 1\") == 6\nassert solution(\"2 2 2\") == 30"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 1\") == \"6\\n\", \"Test case 1 failed\"\nassert solution(\"2 2 2\") == \"30\\n\", \"Test case 2 failed\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 1\") == \"6\"\nassert solution(\"2 2 2\") == \"30\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 1\") == \"6\"\nassert solution(\"2 2 2\") == \"30\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 1\") == \"6\"\nassert solution(\"2 2 2\") == \"30\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r').read()) == '6'\n"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 1\") == 6\nassert solution(\"2 2 2\") == 30"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r\"1 2 1\") == \"6\"\nassert solution(r\"2 2 2\") == \"30\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 1\") == \"6\\n\"\nassert solution(\"2 2 2\") == \"30\\n\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output\n"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n2020 2020 2020\\n\") == \"2021 2020 2020\"\nassert solution(\"2\\n1 9999999\\n\") == \"impossible\"\n\nsolution = lambda stdin: \"impossible\"  # add your solution here"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2020 2020 2020\") == \"2021 2020 2020\"\nassert solution(\"2\\n1 9999999\") == \"impossible\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2020 2020 2020\") == \"2021 2020 2020\\n\"\nassert solution(\"2\\n1 9999999\") == \"impossible\\n\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2020 2020 2020\\n\") == \"2021 2020 2020\\n\"\nassert solution(\"2\\n1 9999999\\n\") == \"impossible\\n\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == \"2021 2020 2020\"\nassert solution(sample_input2) == \"impossible\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"2\\n2020 2020 2020\\n2\\n1 9999999\\n\") == \"2021 2020 2020\\n\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case {i+1} failed. Please provide the correct output for this test case.\" for i, (sample_input, sample_output) in enumerate(test_cases)"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n2020 2020 2020') == '2021 2020 2020'\\n\nassert solution('2\\n1 9999999') == 'impossible'\\n"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r').read()) == '2021 2020 2020'\nassert solution(open('input_2.txt', 'r').read()) == 'impossible'"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Output mismatch. Expected {output}, got {solution(input())}.\"\n"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"30 70\") == \"11\\n\"\nassert solution(\"66 69\") == \"2\\n\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(30, 70) == 11\nassert solution(66, 69) == 2"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"30 70\") == \"11\"\nassert solution(\"66 69\") == \"2\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"30 70\") == \"11\", \"Incorrect output for sample input 1.\"\nassert solution(\"66 69\") == \"2\", \"Incorrect output for sample input 2.\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"30 70\") == \"11\"\nassert solution(\"66 69\") == \"2\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(30, 70) == 11\nassert solution(66, 69) == 2"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"30 70\") == \"11\"\nassert solution(\"66 69\") == \"2\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"30 70\") == \"11\"\nassert solution(\"66 69\") == \"2\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 11\n"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Sample Input 1') == '2\\n'\nassert solution('Sample Input 2') == '4\\n'\n\nfrom typing import List"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 0\\n>@\\n>~\") == \"2\\n\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\") == \"4\\n\""
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r').read()) == '2\\n'"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 2 0\\n>@\\n>~') == '2\\n'\nassert solution('3 5 1\\n>>@<<\\n>~#\\n>>>>~') == '4\\n'"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(solution) == \"4\", \"Your function is not correct\""
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"2\\n4\"\nassert solution == \"4\"\nassert solution == \"begin repairs\"\n\nfrom typing import List"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"4\"\n"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('Input') == 'Output'\n"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 0\\n>@\\n>~\") == \"2\\n\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\") == \"4\\n\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('143175=120') == '14+31+75=120\\n'\nassert solution('5025=30') == '5+025=30\\n'"
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\", \"Test 1\"\nassert solution(\"5025=30\") == \"5+025=30\", \"Test 2\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('143175=120') == '14+31+75=120'\nassert solution('5025=30') == '5+025=30'"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1 2\\n\"\nassert solution() == \"-1\\n\"\n"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"1 2\\n\"\nassert solution(8) == \"1 2\\n\"\nassert solution(6) == \"-1\\n\""
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n\") == \"1 2\\n\"\nassert solution(\"8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n1\\n\") == \"-1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == \"1 2\\n\"\nassert solution(sample_input_2) == \"-1\\n\""
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '1 2'\nassert solution() == '-1'"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(example1) == \"1 2\"\nassert solution(example2) == \"-1\""
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n\") == \"1 2\\n\"\nassert solution(\"8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n1\\n\") == \"-1\\n\"\nassert solution(\"8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n1\\n\") == \"-1\\n\"\nassert solution(\"8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n1\\n\") == \"-1\\n\""
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"2 1\"\nassert solution(4) == \"1 2\"\nassert solution(5) == \"2 4\"\nassert solution(6) == \"1 3\"\nassert solution(7) == \"4 5\"\nassert solution(8) == \"1 2\"\nassert solution(9) == \"-1\"\nassert solution(10) == \"-1\""
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(8)) == \"1 2\"\nassert solution(str(8)) == \"1 2\"\nassert solution(str(8)) == \"-1\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 0, \"Incorrect output for sample input 1.\"\nassert solution() == 0, \"Incorrect output for sample input 2.\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1101\") == \"1\", \"The correct answer is 1.\"\nassert solution(\"1\") == \"0\", \"The correct answer is 0.\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1101\") == \"1\\n\"\nassert solution(\"1\") == \"0\\n\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed. Expected output: {expected_output}, but got {solution(input())}.\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1101') == 1\nassert solution('1') == 0"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1101') == '1', 'Input 1 is incorrect'\nassert solution('1') == '0', 'Input 2 is incorrect'"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1101\") == \"1\", \"Test 1 failed\"\nassert solution(\"1\") == \"0\", \"Test 2 failed\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1101\") == \"1\\n\", \"Output 1:1\"\nassert solution(\"1\") == \"0\\n\", \"Output 2:0\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1101\") == \"1\"\nassert solution(\"1\") == \"0\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1101\") == \"1\"\nassert solution(\"1\") == \"0\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, \"The provided code is incorrect\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1\") == \"1\\n0\\n2\\n\"\nassert solution(\"2 1\\n4 1 6 3 6\\n7 3 4 2 6 5 6 1\\n1 2\\n\") == \"3\\n\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Solution: {solution(input())}, Expected: {expected}\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'Correct output'"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\"\n"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1''') == '1\\n0\\n2\\n\\n3'\n\nassert solution('''2 1\n4 1 6 3 6\n7 3 4 2 6 5 6 1\n1 2\n''') == '3\\n'\n\nfrom typing import List"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1) == 1\\n0\\n2\\n\nassert solution(2 1\\n4 1 6 3 6\\n7 3 4 2 6 5 6 1\\n1 2\\n) == 3\\n3\\n3\\n\n"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1\") == \"1\\n0\\n2\\n3\\n1\\n\"\nassert solution(\"2 1\\n4 1 6 3 6\\n7 3 4 2 6 5 6 1\\n1 2\\nSample Output 2:3\\n\") == \"3\\n\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"Output \\n1\\n0\\n2\\n\\n\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 1\\n1 2 3 4\") == \"4.000000\"\nassert solution(\"4 2\\n2 4 3 4\") == \"3.666666\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 1\\n1 2 3 4\\n4 2\\n2 4 3 4\\n\") == \"4.000000\\n\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 1\\n1 2 3 4\\n\") == \"4.000000\"\nassert solution(\"4 2\\n2 4 3 4\\n\") == \"3.666666\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 1\\n1 2 3 4\\n\") == \"4.000000\\n\", \"Incorrect output\"\nassert solution(\"4 2\\n2 4 3 4\\n\") == \"3.666666\\n\", \"Incorrect output\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin.read()) == '3.666666'"
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 1\\n1 2 3 4\\n\") == \"4.000000\\n\"\nassert solution(\"4 2\\n2 4 3 4\\n\") == \"3.666666\\n\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"4.000000\", \"You must implement the solution\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"4.000000\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 1\\n1 2 3 4\") == \"4.000000\\n\"\nassert solution(\"4 2\\n2 4 3 4\") == \"3.666666\\n\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 1\\n1 2 3 4\\n\") == \"4.000000\\n\"\nassert solution(\"4 2\\n2 4 3 4\\n\") == \"3.666666\\n\""
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('test_input.txt').read()) == '0.750', \"Test case 1 failed\"\nassert solution(open('test_input1.txt').read()) == '0.750', \"Test case 2 failed\"\nassert solution(open('test_input2.txt').read()) == '0.625', \"Test case 3 failed\""
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Test failed. Expected output: {output()}. Received: {solution(input())}\"\n"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\") == \"0.750\", \"Expected output '0.750', but got '{}'\".format(solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\"))\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\") == \"0.625\", \"Expected output '0.625', but got '{}'\".format(solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\"))"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\\n') == '0.750'\nassert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\\n') == '0.625'\n"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\") == \"0.750\\n\"\n\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\") == \"0.625\\n\""
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0') == 0.75\nassert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0') == 0.625"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0.750\", \"Test 1 Failed\""
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\") == 0.75\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\") == 0.625\n"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.0 0.0\n0.0 2.0\n''') == '0.750'\n\nassert solution('''\n2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n''') == '0.625'"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0') == 0.75\nassert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0') == 0.625"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == \"2\", \"Solution should return 2\"\nassert solution(input2) == \"37\", \"Solution should return 37\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\", \"Invalid output\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\", \"Expected 2, got {}\".format(solution(stdin))"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    3 3\n    1 2 4\n    0 3 6\n    4 0 3\n    \"\"\"\n) == 2\n\nassert solution(\n    \"\"\"\n    3 4\n    2 3 0 7\n    0 0 2 1\n    0 0 3 0\n    \"\"\"\n) == 37\n\nassert solution(\n    \"\"\"\n    3 5\n    1 1 0 0 1\n    0 1 1 0 1\n    0 1 1 0 1\n    0 0 0 1 0\n    \"\"\"\n) == 11\n\nassert solution(\n    \"\"\"\n    2 4\n    1 2 3 4\n    3 4 5 6\n    6 7 8 9\n    \"\"\"\n) == 8\n\nassert solution(\n    \"\"\"\n    2 4\n    1 0 1 0 1\n    0 1 0 1 1\n    1 0 1 0 1\n    1 1 0 1 0\n    \"\"\"\n) == 25\n\nassert solution(\n    \"\"\"\n    2 4\n    0 0 0 0 0\n    1 1 0 0 1\n    1 0 1 0 1\n    0 1 0 1 1\n    \"\"\"\n) == 5\n\nassert solution(\n    \"\"\"\n    3 4\n    1 2 3 0\n    0 1 2 3\n    0 0 3 2\n    1 0 2 3\n    \"\"\"\n) == 10\n\nassert solution(\n    \"\"\"\n    2 4\n    1 1 1 0\n    0 1 1 0\n    0 0 1 1\n    0 1 1 0\n    \"\"\"\n) == 1"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == output, f\"Test case failed: {stdin}\\nExpected: {output}\\nActual: {solution(stdin=input())}\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\n1 2 4\\n0 3 6\\n4 0 3') == 2\nassert solution('3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0') == 37"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == 2, \"Sample Input 1\"\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == 37, \"Sample Input 2\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == \"2\"\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == \"37\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == \"2\"\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == \"37\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n4 3\n1234\n1 4\n1 4\n1 4\n''') == '''\n10\n14\n18\n'''\n\nassert solution('''\n4 4\n1234\n1 1\n1 2\n1 3\n1 4\n''') == '''\n1\n4\n9\n16\n'''"
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == \"10\\n14\\n18\\n\"\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\") == \"1\\n4\\n9\\n16\\n\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\\n\") == [\"10\", \"14\", \"18\"]\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\\n\") == [\"1\", \"4\", \"9\", \"16\"]"
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Test failed with:\\nInput:\\n{input()}\\n\\nOutput:\\n{output()}\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == [\"10\", \"14\", \"18\"]\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\") == [\"1\", \"4\", \"9\", \"16\"]"
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == \"10\\n14\\n18\\n\"\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\") == \"1\\n4\\n9\\n16\\n\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == \"10\\n14\\n18\"\nassert solution(sample_input_2) == \"1\\n4\\n9\\n16\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 3\\n1234\\n1 4\\n1 4\\n1 4') == ['10', '14', '18']\nassert solution('4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4') == ['1', '4', '9', '16']"
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\\n\") == [\"10\", \"14\", \"18\"]\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\\n\") == [\"1\", \"4\", \"9\", \"16\"]"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2 3\\n1 3\\n2 3\\n3 4\\n\") == \"2\\n\"\nassert solution(\"5 2 4\\n1 3\\n3 4\\n2 4\\n4 5\\n\") == \"1\\n\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(Input) == Output, f\"Your solution is incorrect. Expected: {Output}, Received: {solution(Input)}\"\nfor Input, Output in [\n    (\"4 2 3\\n1 3\\n2 3\\n3 4\", \"2\"),\n    (\"5 2 4\\n1 3\\n3 4\\n2 4\\n4 5\", \"1\"),\n]:\n    assert solution(Input) == Output, f\"Your solution is incorrect for input {Input}. Expected: {Output}, Received: {solution(Input)}\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\\n\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 2, \"Solution should return 2, but it returns {}.\".format(solution())"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '2\\n'"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\\n\"\nassert solution() == \"1\\n\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 2, \"Expected output 2, but got {}\".format(solution())"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2 3\\n1 3\\n2 3\\n3 4\\n\") == \"2\"\nassert solution(\"5 2 4\\n1 3\\n3 4\\n2 4\\n4 5\\n\") == \"1\"\nassert solution(\"\") == \"0\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"1\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\"\"\") == \"no\"\n\nassert solution(\"\"\"2\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\"\"\") == \"no\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == \"yes\"\nassert solution(sample_input2) == \"no\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\\n2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\\n\") == \"no\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\\n\") == \"no\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n1\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\n\"\"\") == \"no\"\n\nassert solution(\"\"\"\n2\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\n\"\"\") == \"no\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\\n\") == \"no\"\nassert solution(stdin=\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\\n\") == \"no\"\nassert solution(stdin=\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\\n\") == \"yes\"\nassert solution(stdin=\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\\n\") == \"yes\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n1\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\n''') == 'yes'\nassert solution('''\n2\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\n''') == 'no'"
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"no\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\\n\") == \"no\\n\", \"The correct solution should be 'no'.\"\n\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\\n\") == \"no\\n\", \"The correct solution should be 'no'.\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\\n\") == \"no\\n\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\\n\") == \"no\\n\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\") == \"no\\n\", \"Your code is incorrect.\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 2\\n2 3\\n1 3\") == \"YES\\n1 3\\n2 1\\n3 2\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\") == \"NO\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"YES\\n1 3\\n2 1\\n3 2\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"NO\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(Sample Input 1) == Sample Output 1, \"Sample Input 1 has incorrect output\"\nassert solution(Sample Input 2) == Sample Output 2, \"Sample Input 2 has incorrect output\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == sample_output1, \"Test case 1 failed\"\nassert solution(sample_input2) == sample_output2, \"Test case 2 failed\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n1 2\\n2 3\\n1 3\\n\") == \"YES\\n1 3\\n2 1\\n3 2\\n\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''3 3\n1 2\n2 3\n1 3\n''') == 'YES\\n1 3\\n2 1\\n3 2'\n\nassert solution('''4 3\n1 2\n1 3\n1 4\n''') == 'NO'"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n1 2\\n2 3\\n1 3\\n\") == \"YES\\n1 3\\n2 1\\n3 2\\n\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"NO\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"YES\\n1 3\\n2 1\\n3 2\\n\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"3 3\\n1 2\\n2 3\\n1 3\\n\") == \"YES\\n1 3\\n2 1\\n3 2\\n\"\nassert solution(stdin=\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"NO\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 2\\n2 3\\n1 3\") == \"YES\\n1 3\\n2 1\\n3 2\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"consistent\"\n"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3\\n0 > 1\\n1 = 2\\n0 = 2\\n') == 'inconsistent'\n\nassert solution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\\n') == 'consistent'"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == \"consistent\"\nassert solution(sample_input2) == \"consistent\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('sample_input1.txt', 'r')) == 'inconsistent'\nassert solution(open('sample_input2.txt', 'r')) == 'consistent'"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 3) == 'inconsistent'\nassert solution(5, 5) == 'consistent'"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"consistent\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 'consistent'"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(read_input()) == \"consistent\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n0 > 1\\n1 = 2\\n0 = 2\\n\") == \"inconsistent\"\nassert solution(\"5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\\n\") == \"consistent\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(b'4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1\\n') == '1.57079633\\n'\nassert solution(b'4\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0\\n') == '41938.65135885\\n'"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1\") == \"1.57079633\"\nassert solution(\"4\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0\") == \"41938.65135885\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1\\n\") == \"1.57079633\"\nassert solution(\"4\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0\\n\") == \"41938.65135885\"\n"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1\\n') == '1.57079633\\n'\nassert solution('4\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0\\n') == '41938.65135885\\n'"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == pytest.approx(1.57079633, abs=1e-6), \"Your code is incorrect.\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 1.57079633, \"Incorrect output\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1\") == 1.57079633\nassert solution(\"4\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0\") == 41938.65135885"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '1.57079633'"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1\") == 1.57079633\nassert solution(\"4\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0\") == 41938.65135885"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(read_input()) == '3'\nassert solution(read_input()) == '4'\n"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11\\nsabcabcfabc\") == \"3\"\nassert solution(\"18\\ntrutrutiktiktappop\") == \"4\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test Failed\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    11\n    sabcabcfabc\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n    18\n    trutrutiktiktappop\n    \"\"\"\n) == \"4\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11\\nsabcabcfabc\") == 3\nassert solution(\"18\\ntrutrutiktiktappop\") == 4"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11\\nsabcabcfabc\") == \"3\\n\"\nassert solution(\"18\\ntrutrutiktiktappop\") == \"4\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('example1.txt', 'r').read()) == \"3\"\nassert solution(open('example2.txt', 'r').read()) == \"4\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3\", \"Incorrect solution\"\n"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == expected_output, f\"For input {stdin}, expected output {expected_output}, but got {solution(stdin=input())}\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"The output of the function is not as expected. Expected {expected_output}, but got {solution(stdin)}.\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Expected '{output()}' but got '{solution(input())}'\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output, \"Test failed\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == '2'\nassert solution(sample_input2) == '5'"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 3 1\\n3 1 2\") == \"2\"\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\") == \"5\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 2, \"Expected 2 shuffles, got {}\".format(solution())\nassert solution() == 5, \"Expected 5 shuffles, got {}\".format(solution())\nassert solution() == int(1e12), \"Expected 1e12 shuffles, got {}\".format(solution())"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 3 1\\n3 1 2\") == \"2\\n\"\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\") == \"5\\n\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 2\nassert solution(6) == 5"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 3 1\\n3 1 2\\n6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\") == \"2\\n\"\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\\n2\\n3 1 2 6 5 4\") == \"5\\n\"\nassert solution(\"1\\n2 3 4 5\\n6 7 8 9 10\") == \"3\\n\"\nassert solution(\"3\\n1 2 3\\n4 5 6\\n7 8 9\") == \"4\\n\"\nassert solution(\"2\\n5 3 2\\n8 6 4\") == \"1\\n\"\nassert solution(\"4\\n3 2 1 5\\n1 4 2 3\\n8 9 6 7\") == \"2\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\\n7 8 9 10 11 12\\n13 14 15 16 17 18\") == \"16\\n\"\nassert solution(\"3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\") == \"6\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\\n7 8 9 10 11 12\\n13 14 15 16 17 18\\n2\\n5 3 2\\n8 6 4\\n11 9 7\\n14 12 6\") == \"16\\n\"\nassert solution(\"3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n2\\n5 3 2\\n8 6 4\") == \"11\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\\n7 8 9 10 11 12\\n13 14 15 16 17 18\\n2\\n5 3 2\\n8 6 4\\n11 9 7\\n14 12 6\\n2\\n5 3 2\\n8 6 4\\n11 9 7\\n14 12 6\") == \"16\\n\"\nassert solution(\"3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n2\\n5 3 2\\n8 6 4\\n11 9 7\\n14 12 6\\n2\\n5 3 2\\n8 6 4\\n11 9 7\\n14 12 6\\n2\\n5 3 2\\n8 6 4\\n11 9 7\\n14 12 6\\n2\\n5 3 2\\n8 6 4\\n11 9 7\\n14 12 6\\n2\\n5 3 2\\n8 6 4\\n11 9 7\\n14 12 6\") == \"16\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\\n7 8 9 10 11 12\\n13 14 15 16 17 18\\n2\\n5 3 2\\n8 6 4\\n11 9 7\\n14 12 6\\n2\\n5 3 2\\n8 6 4\\n11 9 7\\n14 12 6\\n2\\n5 3 2\\n8 6 4\\n11 9 7\\n14 12 "
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 3 1\\n3 1 2\") == 2\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\") == 5"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''3 1\n0 10 20\n0 10\n''') == '4\\n'\n\nassert solution('''6 1\n0 10 20 26 40 50\n0 40\n''') == '9\\n'"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n    3 1\n    0 10 20\n    0 10\n    \"\"\") == \"4\\n\"\n\nassert solution(\"\"\"\n    6 1\n    0 10 20 26 40 50\n    0 40\n    \"\"\") == \"9\\n\""
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 1\\n0 10 20\\n0 10\\n6 1\\n0 10 20 26 40 50\\n0 40\\n') == '4\\n'"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 1\\n0 10 20\\n0 10') == '4\\n'\nassert solution('6 1\\n0 10 20 26 40 50\\n0 40') == '9\\n'\n\nfrom math import sqrt"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"You can solve this problem using dynamic programming.\""
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1234567890\"\n"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"4\", \"Test case 1 failed\"\nassert solution() == \"9\", \"Test case 2 failed\""
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == '4', \"Sample Input 1 failed\"\nassert solution(sample_input_2) == '9', \"Sample Input 2 failed\"\n\nfrom typing import List"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected\n"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 4\nassert solution(stdin) == \"4\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\") == \"equal\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"equal\"\nassert solution(input()) == \"not equal\"\n"
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\n\" +\n               \"shuffle([1,2,1,2])\\n\" +\n               \"concat([3,2,1],[4,5,6])\\n\" +\n               \"sorted([1,2,3,4,5,6])\\n\") == \"equal\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\n\\nshuffle([1,2,1,2])\") == \"not equal\\n\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\") == \"equal\\n\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\") == \"equal\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\\n') == 'not equal'\nassert solution('sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\\n') == 'equal'"
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\\n') == 'not equal\\n'\nassert solution('sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\\n') == 'equal\\n'\n"
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\") == \"equal\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"concat(shuffle([1,2]),shuffle([1,2]))\\n\"\n    \"shuffle([1,2,1,2])\\n\"\n) == \"not equal\\n\"\n\nassert solution(\n    \"sorted(concat([3,2,1],[4,5,6]))\\n\"\n    \"[1,2,3,4,5,6]\\n\"\n) == \"equal\\n\"\n\nassert solution(\n    \"def solution(stdin: str) -> str:\\n\"\n    \"    pass\\n\"\n) == \"not equal\\n\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\") == \"equal\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n1 2\n3 2\n1 2 1 2\n2 3 1 2\n''') == 'Oh no'\n\nassert solution('''\n1 3\n3 2\n1 2 1 2\n2 3 1 2\n''') == '1'\n\nassert solution('''\n2 4\n3 2\n1 2 1 2\n2 3 1 2\n''') == '1'"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n1 2\n3 2\n1 2 1 2\n2 3 1 2\n''') == 'Oh no'\n\nassert solution('''\n1 3\n3 2\n1 2 1 2\n2 3 1 2\n''') == '1'"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 2\\n3 2\\n1 2 1 2\\n2 3 1 2') == 'Oh no'\nassert solution('1 3\\n3 2\\n1 2 1 2\\n2 3 1 2') == '1'"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"Oh no\"\nassert solution(\"1 3\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"1\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == 'Oh no'\nassert solution(open('input.txt', 'r')) == '1'\n"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == 'Oh no', \"Your solution is incorrect.\"\nassert solution(sample_input2) == '1', \"Your solution is incorrect.\"\n\nsample_input1 = \"1 2\\n3 2\\n1 2 1 2\\n2 3 1 2\"\nsample_input2 = \"1 3\\n3 2\\n1 2 1 2\\n2 3 1 2\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"Oh no\"\nassert solution(\"1 3\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"1\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 2\\n3 2\\n1 2 1 2\\n2 3 1 2') == 'Oh no'\nassert solution('1 3\\n3 2\\n1 2 1 2\\n2 3 1 2') == '1'"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"Oh no\"\nassert solution(\"1 3\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"1\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    4 4\n    1 2 2\n    2 3 1\n    3 4 1\n    4 1 2\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n    5 5\n    1 2 1\n    2 3 1\n    2 4 1\n    2 5 1\n    4 5 1\n    \"\"\"\n) == \"impossible\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\") == \"3\\n\"\nassert solution(\"5 5\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\") == \"impossible\\n\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(4,4)) == 3\nassert solution(str(5,5)) == 'impossible'"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '3\\n'"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\").read()) == \"3\"\nassert solution(open(\"sample_input_1.txt\").read()) == \"3\"\nassert solution(open(\"sample_input_2.txt\").read()) == \"impossible\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == '3\\n'\n"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str: pass\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == '3\\n'\nassert solution(sample_input2) == 'impossible\\n'"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == '2', \"The correct result is: '2'\"\nassert solution(sample_input2) == '4', \"The correct result is: '4'\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input(\"n: \")) == \"2\", \"Test 1\"\nassert solution(input(\"n: \")) == \"2\", \"Test 2\"\nassert solution(input(\"n: \")) == \"4\", \"Test 3\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 1 1 1 3\") == \"2\"\nassert solution(\"1\\n22\") == \"4\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n2 1 1 1 3\\n') == '2', \"Error 1\"\nassert solution('1\\n22\\n') == '4', \"Error 2\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\").read()) == \"2\\n\"\nassert solution(open(\"sample_input2.txt\", \"r\").read()) == \"4\\n\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n2 1 1 1 3\\n') == '2\\n'\nassert solution('1\\n22\\n') == '4\\n'"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\\n\", \"Test failed: Invalid output\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 1 1 1 3\\n1\\n22\\n\") == \"2\\n\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"5\n2 1 1 1 3\"\"\") == \"2\"\nassert solution(\"\"\"1\n22\"\"\") == \"4\"\n\nfrom typing import List"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='3\\n3 1 5\\n4\\n1 2 3 4\\n') == 3\nassert solution(stdin='4\\n1 2 3 4\\n') == 2"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 3, \"The output for the given input is incorrect.\"\nassert solution(4) == 2, \"The output for the given input is incorrect.\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''3\n3 1 5''') == '3'\nassert solution('''4\n1 2 3 4''') == '2'"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1 5\") == \"3\"\nassert solution(\"4 1 2 3 4\") == \"2\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Output the desired number on a single line.\\n\", \"The solution function is missing.\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"3\\n3 1 5\\n4\\n1 2 3 4\") == \"3\\n\"\nassert solution(stdin=\"4\\n1 2 3 4\") == \"2\\n\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n3 1 5') == '3\\n'\nassert solution('4\\n1 2 3 4') == '2\\n'"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == \"3\"\nassert solution(sample_input2) == \"2\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3\\n\"\nassert solution(stdin) == \"2\\n\"\n"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == \"3\"\nassert solution(2) == \"2\""
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"a+b-c\\na-b+d-c\") == [\"- +d-\", \"<any> <empty>\"]"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('a+b-c\\na-b+d-c') == '- +d-'\nassert solution('knuth-morris-pratt\\knuthmorrispratt') == '<any> <empty>'"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('a+b-c') == '- +d-'\nassert solution('a-b+d-c') == '- +d-'\nassert solution('knuth-morris-pratt') == '<any> <empty>'\nassert solution('knuthmorrispratt') == 'def solution(stdin: str) -> str: pass'"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"a+b-c\\na-b+d-c\") == ['- +d-', '<any>', '<empty>']\nassert solution(\"knuth-morris-pratt\\knuthmorrispratt\") == ['<any>', '<empty>']"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"a+b-c\\na-b+d-c\") == \"- +d-\"\nassert solution(\"knuth-morris-pratt\\nknothmorrispratt\") == \"<empty> <any>\""
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('a+b-c\\na-b+d-c') == '- +d-', \"Incorrect output\"\nassert solution('knuth-morris-pratt\\knuthmorrispratt') == '<any> <empty>', \"Incorrect output\"\n"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"a+b-c\") == [\"- +d-\", \"d- +c-\"]\nassert solution(\"a-b+d-c\") == [\"- +d-\", \"d- +c-\"]\nassert solution(\"knuth-morris-pratt\") == [\"<any>\", \"<empty>\"]"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"a+b-c\") == [\"-+d-\", \"-+d-\", \"d-c\"]\nassert solution(\"a-b+d-c\") == [\"-+d-\", \"-+d-\", \"d-c\"]\nassert solution(\"knuth-morris-pratt\") == [\"<any> <empty>\", \"<any> <empty>\", \"<any> <empty>\"]"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"a+b-c\") == \"- +d-\"\nassert solution(\"knuth-morris-pratt\") == \"<any> <empty>\"\n"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\nassert solution(\"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\") == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"example1.txt\", \"r\")) == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\nassert solution(open(\"example2.txt\", \"r\")) == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nSample Output 1:0\\n1\\n3\\n2\\n3\\n5\\n3\\n\\nSample Input 2:3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\\nSample Output 2:11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n') == '0\\n1\\n3\\n2\\n3\\n5\\n3\\n\\n'"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '0\\n1\\n3\\n2\\n3\\n5\\n3\\n'"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\", \"Incorrect output\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\n') == '0\\n1\\n3\\n2\\n3\\n5\\n3\\n'\nassert solution('3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\\n') == '11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n'"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n1 1\n0\n7\nt 0\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\n''') == '0\\n1\\n3\\n2\\n3\\n5\\n3\\n'\n\nassert solution('''\n3 0\n2 6 6\n10\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10\n''') == '11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n'"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"1 1\n0\n7\nt 0\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\n\"\"\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\n\nassert solution(\"\"\"3 0\n2 6 6\n10\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10\n\"\"\") == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n\"\n\nassert solution(\"\"\"\n1 1\n0\n7\nt 0\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\n\"\"\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\n\nassert solution(\"\"\"\n3 0\n2 6 6\n10\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10\n\"\"\") == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == expected_output, f\"Expected Output: {expected_output}\\nActual Output: {solution(input_data)}\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\\n\") == \"2\\n4 6\\n\"\n\nassert solution(stdin=\"5 6\\n1 2 2\\n2 3 2\\n3 5 2\\n1 4 3\\n4 5 3\\n1 5 6\\n\") == \"0\\n\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == [\"2\", \"4 6\"]\nassert solution(\"5 6\\n1 2 2\\n2 3 2\\n3 5 2\\n1 4 3\\n4 5 3\\n1 5 6\") == [\"0\"]\n\nfrom typing import List"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test case not passing.\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\"\n"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '''2\n4 6'''"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == sample_output1, \"Solution incorrect\"\nassert solution(sample_input2) == sample_output2, \"Solution incorrect\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1\n\"\"\") == \"\"\"\n2\n4 6\n\"\"\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == ['2']\nassert solution(sample_input_2) == ['0']"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\\n4 6\\n\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"12\\n1 1\\n1 2\\n1 3\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\") == \"4\\n5\\n6\\n1\\n2\\n3\"\nassert solution(\"6\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\") == \"1\\n2\\n3\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, \"The expected output is not correct\"\n"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"12\\n1 1\\n1 2\\n1 3\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\") == \"4\\n5\\n6\\n1\\n2\\n3\"\nassert solution(\"6\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\") == \"1\\n2\\n3\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n12\n1 1\n1 2\n1 3\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n''') == '''\n4\n5\n6\n1\n2\n3\n'''\n\nassert solution('''\n6\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n''') == '''\n1\n2\n3\n'''"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"12\\n1 1\\n1 2\\n1 3\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\") == \"4\\n5\\n6\\n1\\n2\\n3\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == '4\\n5\\n6\\n1\\n2\\n3\\n'"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"12\\n1 1\\n1 2\\n1 3\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\\n\") == \"4\\n5\\n6\\n1\\n2\\n3\"\nassert solution(\"6\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n\") == \"1\\n2\\n3\"\n"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected_output, f\"Solution is '{solution}', expected output is '{expected_output}'\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"4\\n5\\n6\\n1\\n2\\n3\\n\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('CPCC') == 1\nassert solution('PPPPCCCC') == 8"
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"CPCC\") == 1\nassert solution(\"PPPPCCCC\") == 8"
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('CPCC') == 1\nassert solution('PPPPCCCC') == 8"
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"CPCC\") == \"1\\n\", \"Test Case 1\"\nassert solution(\"PPPPCCCC\") == \"8\\n\", \"Test Case 2\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"PPPPCCCC\") == \"8\", \"Expected output is 8, but got {}\".format(solution(\"PPPPCCCC\"))"
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"CPCC\") == 1\nassert solution(\"PPPPCCCC\") == 8"
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"CPCC\") == \"1\", \"1\"\nassert solution(\"PPPPCCCC\") == \"8\", \"8\""
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 2 1\\n1 2\\n2 3\\n2\\n') == '1 2 3\\n', 'Test 1 failed'\nassert solution('3 2 1\\n1 3\\n2 3\\n3\\n') == '3\\n', 'Test 2 failed'\nassert solution('3 2 1\\n1 2\\n2 3\\n1\\n') == '1 2 3\\n', 'Test 3 failed'\nassert solution('3 2 1\\n1 3\\n2 3\\n1\\n') == '3\\n', 'Test 4 failed'"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n3 2 1\n1 2\n2 3\n2\n''') == '1 2 3\\n'\n\nassert solution('''\n3 2 1\n1 3\n2 3\n3\n''') == '3\\n'\n\nassert solution('''\n3 2 1\n1 2\n2 3\n2\n''') == '1 2 3\\n'\n\nassert solution('''\n3 2 1\n1 2\n2 3\n3\n''') == '3\\n'\n\nassert solution('''\n3 2 1\n1 2\n2 3\n2\n''') == '1 2 3\\n'\n\nassert solution('''\n3 2 1\n1 2\n2 3\n3\n''') == '3\\n'"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_data) == output_data, f\"The given code is not correct. Please fix it.\""
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 2 1\\n1 2\\n2 3\\n2\\n') == '1 2 3\\n'\n\nassert solution('3 2 1\\n1 3\\n2 3\\n3\\n') == '3\\n'"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input1) == output1, \"Incorrect output for Sample Input 1\"\nassert solution(input2) == output2, \"Incorrect output for Sample Input 2\"\nassert solution(input3) == output3, \"Incorrect output for Sample Input 3\""
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2 1\\n1 2\\n2 3\\n2\") == \"1 2 3\\n\"\nassert solution(\"3 2 1\\n1 3\\n2 3\\n3\") == \"3\\n\"\nassert solution(\"3 2 1\\n1 3\\n2 3\\n4\") == \"1 3\\n2 3\\n4\\n\""
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(r'''\n3 2 1\n1 2\n2 3\n2\n''') == '1 2 3\\n'\n\nassert solution(r'''\n3 2 1\n1 3\n2 3\n3\n''') == '3\\n'\n\nassert solution(r'''\n3 2 1\n1 3\n2 3\n4\n''') == '1 2 3 4\\n'"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2 1\\n1 2\\n2 3\\n2\\n3\\n4\") == \"1 2 3\\n4\""
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\") == \"39\\n\", \"Incorrect result for sample case 1\"\n\nassert solution(\"5 1\\n1 0 1 1 1\") == \"4\\n\", \"Incorrect result for sample case 2\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\") == \"39\", \"The given input is incorrect.\"\nassert solution(\"5 1\\n1 0 1 1 1\") == \"4\", \"The given input is incorrect.\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\\n\") == \"39\"\nassert solution(\"5 1\\n1 0 1 1 1\\n\") == \"4\"\n"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == expected1, \"Sample Input 1 failed\"\nassert solution(sample_input2) == expected2, \"Sample Input 2 failed\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\\n\") == \"39\", \"Please correct the code\"\nprint(solution(\"5 1\\n1 0 1 1 1\\n\"))  # Output: \"4\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"The output doesn't match the expected output.\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    5 3\n    2 4 2 3 4\n''') == 39\n\nassert solution('''\n    5 1\n    1 0 1 1 1\n''') == 4"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\\n\") == \"39\\n\"\nassert solution(\"5 1\\n1 0 1 1 1\\n\") == \"4\\n\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\\n\") == \"39\\n\"\nassert solution(\"5 1\\n1 0 1 1 1\\n\") == \"4\\n\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\\n\") == \"39\"\nassert solution(\"5 1\\n1 0 1 1 1\\n\") == \"4\""
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\nxx.\\nxxx\\n...\\n\") == \"1 1 2\\n2 3 1\\n\"\nassert solution(\"4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx\\n\") == \"1 1 2\\n2 4 3\\ndef solution(stdin: str) -> str:\n    pass"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\nxx.\\nxxx\\n...\\n\") == \"1 1 2\\n2 3 1\\n\"\nassert solution(\"4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx\\n\") == \"1 1 2\\n2 4 3\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3,3) == ['1 1 2', '2 3 1']\nassert solution(4,6) == ['1 1 2', '2 4 3']"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('example1.txt')) == '1 1 2\\n2 3 1\\n'\nassert solution(open('example2.txt')) == '1 1 2\\n2 4 3\\n'"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\nxx.\\nxxx\\n...\"), \"Test Input 1\"\nassert solution(\"4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx\"), \"Test Input 2\""
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\nx\\nxx.\\nxxx\\n...\\n\") == \"1 1 2\\n2 3 1\\n\"\nassert solution(\"4 6\\nx....\\nx.xxx\\n...xxx\\n...xxx\\n\") == \"1 1 2\\n2 4 3\\n\""
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3\\nx\\nxx\\nxxxxx') == '1 1 2\\n2 3 1\\n'\nassert solution('4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx') == '1 1 2\\n2 4 3\\n'\nassert solution('5 5\\nx.x\\nxx\\nxx\\nxx') == '1 1 2\\n2 2 1\\n'"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([3, 3, 'xx', 'xxx', '...', 'xx', 'xx', 'xxx', 'x.', 'x.']) == ['1 1 2', '2 3 1']"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1 1 2\\n2 4 3\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 1 2\\n1 2 1\\n0 2 0\\n0 1 0') == 'indistinguishable'\n\nassert solution('2 0 1\\n1 1 1\\n0 0 0') == '0'"
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test failed: {solution(input())}!= {output}\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\") == \"indistinguishable\"\nassert solution(\"2 0 1\\n1 1 1\\n0 0 0\") == \"0\"\n"
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 1 2\n1 2 1\n0 2 0\n0 1 0\n\"\"\") == \"indistinguishable\\n\"\n\nassert solution(\"\"\"\n2 0 1\n1 1 1\n0 0 0\n\"\"\") == \"0\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\") == \"indistinguishable\"\nassert solution(\"2 0 1\\n1 1 1\\n0 0 0\") == \"0\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"indistinguishable\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"indistinguishable\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\") == \"indistinguishable\"\nassert solution(\"2 0 1\\n1 1 1\\n0 0 0\") == \"0\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\") == \"indistinguishable\"\nassert solution(\"2 0 1\\n1 1 1\\n0 0 0\") == \"0\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 1\\n0 2 0\\n0 1 0\") == \"indistinguishable\"\nassert solution(\"1 1 1\\n0 0 0\\n0 0 0\") == \"indistinguishable\"\nassert solution(\"1 2 1\\n0 2 0\\n0 1 0\") == \"indistinguishable\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1111\\n0111\\n1110\\n1111\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\"\n"
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0110') == '1111\\n0111\\n1110\\n1111', 'Test case 1 failed'\nassert solution('0') == '0000\\n0000\\n0000\\n0000', 'Test case 2 failed'\nassert solution('1111') == '1111\\n1111\\n1111\\n1111', 'Test case 3 failed'"
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10000) == '+0000'\nassert solution(1111) == '+000-'"
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10000') == '+0000'\nassert solution('1111') == '+000-'\n"
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"9\\n\", \"Sample Output 1: \" + solution(input())\nassert solution(input()) == \"2\\n\", \"Sample Output 2: \" + solution(input())"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"9\"\nassert solution() == \"2\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"9\"\n"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\\n\") == \"9\"\nassert solution(\"2 1 1 1\\n2 2\\n1\\n1\\n1 2 1\\n\") == \"2\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '9\\n', \"Expected output: 9\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input1) == expected1\nassert solution(input2) == expected2"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\\n\") == \"9\\n\"\n"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\") == 9\nassert solution(\"2 1 1 1\\n2 2\\n1\\n1\\n1 2 1\") == 2\n"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '9\\n'\nassert solution(open('sample_input.txt', 'r')) == '2\\n'"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''7 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5''') == '9'"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\") == 2\nassert solution(\"3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\") == 7\nassert solution(\"\") == -1"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"3 3 1\\n2 2\\n1 1 U\\n010\\n000\\n000\\n\") == \"2\"\nassert solution(stdin=\"3 4 2\\n2 2\\n3 4 U\\n2327\\n6009\\n2112\\n3 2 U\\n1310\\n2101\\n1301\\n\") == \"7\""
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n3 3 1\n2 2\n1 1 R\n010\n000\n000\n''') == '2'\n\nassert solution('''\n3 4 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301\n''') == '7'"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n3 3 1\n2 2\n1 1 R\n010\n000\n000\n''') == '2'\n\nassert solution('''\n3 4 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301\n''') == '7'"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 2  # Solution 1"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\\n\") == \"2\"\nassert solution(\"3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\\n\") == \"7\""
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\") == 2\nassert solution(\"3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\") == 7\nprint(\"All tests passed!\")"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\") == 2\nassert solution(\"3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\") == 7"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\", \"Incorrect output for sample input 1\"\n\nassert solution(stdin) == \"7\", \"Incorrect output for sample input 2\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 2, \"Incorrect output\" # Sample Output 1\n\nfrom typing import List"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\\n\"\n\nassert solution(stdin) == \"4\\n\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n2 2 1 2 3\\n\") == \"2\\n\"\nassert solution(\"8\\n1 2 4 1 1 2 5 1\\n\") == \"4\\n\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"2\"\nassert solution(2) == \"2\"\nassert solution(3) == \"4\"\nassert solution(4) == \"4\"\nassert solution(5) == \"2\"\nassert solution(6) == \"4\"\nassert solution(7) == \"8\"\nassert solution(8) == \"8\"\nassert solution(9) == \"8\"\nassert solution(10) == \"16\"\nassert solution(11) == \"32\"\nassert solution(12) == \"64\"\nassert solution(13) == \"128\"\nassert solution(14) == \"256\"\nassert solution(15) == \"512\"\nassert solution(16) == \"1024\"\nassert solution(17) == \"2048\"\nassert solution(18) == \"4096\"\nassert solution(19) == \"8192\"\nassert solution(20) == \"16384\"\nassert solution(21) == \"32768\"\nassert solution(22) == \"65536\"\nassert solution(23) == \"131072\"\nassert solution(24) == \"262144\"\nassert solution(25) == \"524288\"\nassert solution(26) == \"1048576\"\nassert solution(27) == \"2097152\"\nassert solution(28) == \"4194304\"\nassert solution(29) == \"8388608\"\nassert solution(30) == \"16777216\"\nassert solution(31) == \"33554432\"\nassert solution(32) == \"67108864\"\nassert solution(33) == \"134217728\"\nassert solution(34) == \"268435456\"\nassert solution(35) == \"536870912\"\nassert solution(36) == \"1073741824\"\nassert solution(37) == \"2147483648\"\nassert solution(38) == \"4294967296\"\nassert solution(39) == \"8589934592\"\nassert solution(40) == \"17179869184\"\nassert solution(41) == \"34359738368\"\nassert solution(42) == \"68719476736\"\nassert solution(43) == \"137438953472\"\nassert solution(44) == \"274877906944\"\nassert solution(45) == \"549755813888\"\nassert solution(46) == \"1099511627776\"\nassert solution(47) == \"2199023255552\"\nassert solution(48) == \"4398046511104\"\nassert solution(49) == \"8796093022208\"\nassert solution(50) == \"17592186044416\"\nassert solution(51) == \"35184372088832\"\nassert solution(52) == \"70368744177664\"\nassert solution(53) == \"140737488355328\"\nassert solution(54) == \"281474976710656\"\nassert solution(55) == \"562949953421312\"\nassert solution(56) == \"1125899906842624\"\nassert solution(57) == \"2251799813685248\"\nassert solution(58) == \"4503599627370496\"\nassert solution(59) =="
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 1 2 3\") == \"2\\n\"\nassert solution(\"8 1 2 4 1 1 2 5 1\") == \"4\\n\"\n"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    '''\n    5\n    2 2 1 2 3\n    '''\n) == '2'\n\nassert solution(\n    '''\n    8\n    1 2 4 1 1 2 5 1\n    '''\n) == '4'"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 2 1 2 3\\n\") == \"2\"\nassert solution(\"8\\n1 2 4 1 1 2 5 1\\n\") == \"4\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    '''\n    5\n    2 2 1 2 3\n    '''\n) == '2'\n\nassert solution(\n    '''\n    8\n    1 2 4 1 1 2 5 1\n    '''\n) == '4'"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6\\nD 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\nSample Output 1:\\nNE\\nNE\\nNE\\n') == ['NE', 'NE', 'NE']\nassert solution('6\\nD 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\\nSample Output 2:\\n3\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n') == ['3', '1', 'def solution(stdin: str) -> str:\\n    pass\\n']"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"D 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\") == \"NE\\nNE\\nNE\\n\"\n\nassert solution(\"D 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\") == \"3\\n1\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nsolution(\"D 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\") == \"NE\\nNE\\nNE\\n\"\n\nsolution(\"D 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\") == \"3\\n1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == output, f\"Test {test_case} failed. Expected: {output}, Received: {solution(stdin)}\"\nprint(f\"Test {test_case} passed.\")"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\nD 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\n\") == [\"NE\", \"NE\", \"NE\", \"3\", \"1\", \"def solution(stdin: str) -> str:\"]"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"D 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\") == \"NE\\nNE\\nNE\\n3\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == 'NE\\nNE\\nNE'"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'NE'\nassert solution(input()) == 'NE'\nassert solution(input()) == '3'\nassert solution(input()) == '1'"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6\\nD 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\nSample Output 1:NE\\nNE\\nNE\\n\\n6\\nD 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\\nSample Output 2:3\\n1\\ndef solution(stdin: str) -> str:\\n    pass') == '3\\n1\\ndef solution(stdin: str) -> str:\\n    pass'\n"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"D 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\n\") == \"NE\\nNE\\nNE\\n\"\n\nassert solution(\"D 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\\n\") == \"3\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 'NE'"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    2 2 1 10\n    0 0\n    1 4\n    3 2\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    2 3 5 6\n    1 1\n    1 1 6\n    1 2 2\n    \"\"\"\n) == \"5\\n\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 2 1 10\\n0 0\\n1 4\\n3 2') == '2'\nassert solution('2 3 5 6\\n1 1\\n1 1 6\\n1 2 2') == '5'"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 1 10\\n0 0\\n1 4\\n3 2\") == \"2\"\nassert solution(\"2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\") == \"5\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n2 2 1 10\n0 0\n1 4\n3 2\n''') == '2'\n\nassert solution('''\n2 3 5 6\n1 1\n1 1 6\n1 2 2\n''') == '5'"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 1 10\\n0 0\\n1 4\\n3 2\") == \"2\"\nassert solution(\"2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\") == \"5\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 1 10\\n0 0\\n1 4\\n3 2\\n\") == \"2\"\nassert solution(\"2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\\n\") == \"5\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n        2 2 1 10\n        0 0\n        1 4\n        3 2\n        ''') == '2\\n'\nassert solution('''\n        2 3 5 6\n        1 1\n        1 1 6\n        1 2 2\n        ''') == '5\\n'"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 1 10\\n0 0\\n1 4\\n3 2\") == \"2\"\nassert solution(\"2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\") == \"5\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 1 10\\n0 0\\n1 4\\n3 2\") == \"2\"\nassert solution(\"2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\") == \"5\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input1) == output1, f\"Test 1 failed: {solution(input1)}!= {output1}\"\nassert solution(input2) == output2, f\"Test 2 failed: {solution(input2)}!= {output2}\""
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\\n'\n                '3\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5\\n') == '2.0000000000'\nassert solution('3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\\n5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5\\n') == '2.0000000000'"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\") == 2.0\nassert solution(\"1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5\") == 2.0"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\") == \"2.0000000000\\n\"\nassert solution(\"5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5\") == \"2.0000000000\\n\""
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\") == \"2.0000000000\\n\"\nassert solution(\"5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5\") == \"2.0000000000\\n\"\n"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '2.0000000000', 'Incorrect output'"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2.0000000000\\n\""
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2.0000000000\""
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass'\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass'\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass'\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass'\"\n"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\"2.0\n\"\"\""
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2.0000000000\\n\"\n"
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\"\nassert solution(\"1 100 10\") == \"9\\n19\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 9 5\\n1 100 10\") == \"1\\n9\\n19\\n\"\nprint(\"Test case 1 passed\")\n\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\") == \"0\\n0\\n0\\n\"\nprint(\"Test case 2 passed\")\n\nassert solution(\"1 100 10\\n2 200 20\\n3 300 30\\n4 400 40\\n5 500 50\\n6 600 60\\n7 700 70\\n8 800 80\\n9 900 90\\n10 1000 100\\n\") == \"1\\n9\\n19\\n\"\nprint(\"Test case 3 passed\")\n\nassert solution(\"1 10 10\\n1 20 20\\n1 30 30\\n1 40 40\\n1 50 50\\n1 60 60\\n1 70 70\\n1 80 80\\n1 90 90\\n1 100 100\\n1 110 110\\n1 120 120\\n\") == \"0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n\"\nprint(\"Test case 4 passed\")\n\nassert solution(\"1 1 100\\n1 2 200\\n1 3 300\\n1 4 400\\n1 5 500\\n1 6 600\\n1 7 700\\n1 8 800\\n1 9 900\\n1 10 1000\\n1 11 1100\\n1 12 1200\\n\") == \"1\\n9\\n19\\n\"\nprint(\"Test case 5 passed\")"
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\\n\", \"Sample Input 1\"\nassert solution(\"1 100 10\") == \"9\\n19\\n\", \"Sample Input 2\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 9 5') == '1\\n5\\n', \"Test case 1 failed\"\nassert solution('1 100 10') == '9\\n19\\n', \"Test case 2 failed\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\"\nassert solution(\"1 100 10\") == \"9\\n19\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 9 5\\n1 100 10\") == \"1\\n9\\n19\\n\"\nassert solution(\"2 100 100\") == \"2\\n100\\n100\\n\"\nassert solution(\"1 100 100\") == \"1\\n100\\n100\\n\"\nassert solution(\"1 999 100\") == \"1\\n999\\n100\\n\"\nassert solution(\"1 1000 1000\") == \"1\\n1000\\n1000\\n\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 9 5\\n1 100 10\\n\") == \"1\\n9\\n19\\n\"\n"
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\"\nassert solution(\"1 100 10\") == \"9\\n19\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 9 5\") == \"1\"\nassert solution(\"1 100 10\") == \"9\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"The output {output()} is incorrect. The correct output should be {solution(input())}\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\\n1\\n1\\n7\\n4 4 2 4 4 1 4\"\n"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n1\") == \"1\\n1\\n\"\nassert solution(\"4 5\\n4 1 2 4 4\\n4 3 2 1\") == \"7\\n4 4 2 4 4 1 4\\n\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 1\\n1\\n1\\n') == '1\\n1\\n'\nassert solution('4 5\\n4 1 2 4 4\\n4 3 2 1\\n') == '7\\n4 4 2 4 4 1 4\\n'\n"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('attendance_list.in', 'r')) == [1]\n"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n1\") == \"1\\n1\"\nassert solution(\"4 5\\n4 1 2 4 4\\n4 3 2 1\") == \"7\\n4 4 2 4 4 1 4\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n1\\n1\\n\") == \"1\\n1\\n\"\nassert solution(\"4 5\\n4 1 2 4 4\\n4 3 2 1\\n\") == \"7\\n4 4 2 4 4 1 4\"\n"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case {case_num} failed: expected output '{expected_output}', got '{solution(input())}'\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\\n1\\n1\\n\") == \"1\\n1 \\n\", \"The first line of input should be 1 1.\"\nassert solution(\"4 5\\n4 1 2 4 4\\n4 3 2 1\\n\") == \"7\\n4 4 2 4 4 1 4\\n\", \"The second line of input should be 7.\"\nassert solution(\"5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n\") == \"10\\n5 5 5 5 5 5\\n\", \"The third line of input should be 10.\"\n\nprint(\"All tests passed.\")"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 1\\n1\\n1') == '1'\nassert solution('4 5\\n4 1 2 4 4\\n4 3 2 1') == '7'\n"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\", \"Test case 1 failed\"\nassert solution(stdin) == \"10\", \"Test case 2 failed\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 10 3 2\") == \"4\", \"Test 1\"\nassert solution(\"10 10 5 0\") == \"10\", \"Test 2\"\n\nfrom typing import List"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"2 10 3 2\\n\") == \"4\\n\"\nassert solution(stdin=\"10 10 5 0\\n\") == \"10\\n\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 10, \"The solution is incorrect\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 10 3 2\\n10 10 5 0') == '4\\n', \"Test case 1 failed\"\n\nassert solution('10 10 5 0') == '10\\n', \"Test case 2 failed\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 10 3 2\\n') == '4'\nassert solution('10 10 5 0\\n') == '10'"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Solution is incorrect. Expected output: {expected_output}, actual output: {solution(input())}\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Test case {i+1} failed: expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 10, \"Expected output 10, got {}\".format(solution()) # expected output: 10\n"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, but got {solution(stdin)}\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1 20\\n0123456789\\n\") == 10\nassert solution(\"6 100 9294\\n23689\\n\") == 111\n\nfrom typing import List"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 1 20\\n0123456789\\n') == '10'\nassert solution('6 100 9294\\n23689\\n') == '111'"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1 20\\n0123456789\") == \"10\"\nassert solution(\"6 100 9294\\n23689\") == \"111\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r'1\\n0123456789') == 10\nassert solution(r'2\\n0123456789') == 10\nassert solution(r'6\\n23689') == 111"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 1 20\\n0123456789\\nSample Output 1: 10\\n\\nSample Input 2: 6 100 9294\\n23689\\nSample Output 2: 111\\n') == 10\nassert solution('6 100 9294\\n23689\\nSample Output 2: 111\\n') == 111\n"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1 20\\n0123456789\") == 10\nassert solution(\"6 100 9294\\n23689\") == 111"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1 20\\n0123456789\") == \"10\"\nassert solution(\"6 100 9294\\n23689\") == \"111\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 1 20\\n0123456789') == 10\nassert solution('6 100 9294\\n23689') == 111"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1 20\\n0123456789\\n\") == \"10\"\nassert solution(\"6 100 9294\\n23689\\n\") == \"111\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == \"10\"\nassert solution(sample_input_2) == \"111\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2"
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test case failed\"\n"
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r\"\"\"\n    5 3\n    1 R 4\n    2 R 2\n    3 R 2\n    4 S 2\n    5 S 1\n    \"\"\") == \"\"\"\n    1.5 2.6\n\"\"\"\n\nassert solution(r\"\"\"\n    5 2\n    1 R 4\n    2 R 2\n    3 R 2\n    4 S 2\n    5 S 1\n    \"\"\") == \"\"\"\n    1.5 3.6\n\"\"\"\n\nassert solution(r\"\"\"\n    5 3\n    1 R 4\n    2 R 2\n    3 R 2\n    4 S 2\n    5 S 1\n    \"\"\") == \"\"\"\n    1.5 2.6\n\"\"\"\n\nassert solution(r\"\"\"\n    5 3\n    1 R 4\n    2 R 2\n    3 R 2\n    4 S 2\n    5 S 1\n    \"\"\") == \"\"\"\n    1.5 2.6\n\"\"\"\n\nassert solution(r\"\"\"\n    5 2\n    1 R 4\n    2 R 2\n    3 R 2\n    4 S 2\n    5 S 1\n    \"\"\") == \"\"\"\n    1.5 3.6\n\"\"\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"The function should return the average completion time for in-store and remote customers under the given policy!\"\n"
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Test failed. Expected: {expected}, got: {solution(stdin)}\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == solution(stdin), \"Input and output should be the same\"\n"
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"\"\"1.500000 2.666667\"\"\"\n"
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.500000 2.666667\\n\"\n\nimport math"
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1.500000 2.666667\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is {solution(input())}, but the expected output is {expected_output}.\"\n"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\\n\"\nassert solution(\"\") == \"-1\\n\"\nassert solution(\"1 0 1 1 0 0 1 0\\n0 1 1 1 0 0 1 1\\n0 0 0 0 0 1 0 0\\n0 0 1 0 0 1 1 1\\n1 1 1 1 0 1 0 1\\n\") == \"3\\n\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input_1.txt\", \"r\").read()) == \"3\\n\"\nassert solution(open(\"input_2.txt\", \"r\").read()) == \"3\\n\"\n\nsolution(open(\"input_1.txt\", \"r\").read())  # Output: 3\nsolution(open(\"input_2.txt\", \"r\").read())  # Output: 3"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 3, \"Incorrect result\""
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected_output, f\"Solution: {solution}, Expected Output: {expected_output}\""
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == '''\n"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_str) == output_str, \"The given input and output do not match. Please check the problem statement.\" for input_str, output_str in [\n    (\"3 6\", \"3\"),\n    (\"4 5\", \"3\"),\n]"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 6\\n101010\\n111001\\n101001\\n\") == \"3\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\\n\") == \"3\"\n"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == output, \"Test failed\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"You can output any one of them.\\n\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    '''\n5\n0 0\n0 1\n1 0\n0 -1\n-1 0\n'''\n) == '''\n3 -1\n3 1\n'''\n\nassert solution(\n    '''\n4\n2 4\n6 -1\n3 5\n-1 -1\n'''\n) == '''\n3 4\n3 -1\n'''"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n5\n0 0\n0 1\n1 0\n0 -1\n-1 0\n\"\"\") == \"\"\"\n-3 -1\n3 1\n\"\"\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\\n\") == \"-3 -1\\n3 1\"\nassert solution(\"4\\n2 4\\n6 -1\\n3 5\\n-1 -1\\n\") == \"3 4\\n3 -1\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\") == '-3 -1\\n3 1\\n'\nassert solution(\"4\\n2 4\\n6 -1\\n3 5\\n-1 -1\") == '3 4\\n3 -1\\n'"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\") == \"-3 -1\\n3 1\"\nassert solution(\"4\\n2 4\\n6 -1\\n3 5\\n-1 -1\") == \"3 4\\n3 -1\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r').read()) == '''-3 -1\n3 1'''\n"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\") == \"Output: -3 -1\\n3 1\\n\\nOutput: 3 4\\n3 -1\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\\n') == '-3 -1\\n3 1\\n'\nassert solution('4\\n2 4\\n6 -1\\n3 5\\n-1 -1\\n') == '3 4\\n3 -1\\n'\n"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\") == \"-3 -1\\n3 1\\n\"\nassert solution(\"4\\n2 4\\n6 -1\\n3 5\\n-1 -1\") == \"3 4\\n3 -1\\n\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"The problem statement is incorrect.\"\nassert solution(\"5\") == \"The problem statement is incorrect.\"\nassert solution(\"3 6 5 45 20 0 0 2 0 1 1.5\") == \"The problem statement is incorrect.\"\nassert solution(\"3 0.25 2 45 20 0 0 2 0 1 1.5\") == \"The problem statement is incorrect.\"\n\nfrom math import pi"
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\") == \"2 5.086781\"\nassert solution(\"3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5\") == \"1 12.715255\"\n"
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'Output 1: 2 5.086781\\nOutput 2: 1 12.715255\\n'\n\nfrom typing import List\nfrom math import radians, sin, cos, tan"
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2 5.086781\"\n"
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\") == \"2 5.086781\"\nassert solution(\"3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5\") == \"1 12.715255\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 6 5 45 20\\n0 0\\n2 0\\n1 1.5') == '2 5.086781'\n\nassert solution('3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5') == '1 12.715255'\n\nassert solution('2 10 2 30 10\\n0 0\\n2 0\\n1 2.5') == '0 3.543677'\n\nassert solution('3 0 2 0 10\\n0 0\\n2 0\\n1 1') == '0 0'\n\nassert solution('3 2 1 10 20\\n0 0\\n2 0\\n1 0') == '1 2'\n\nassert solution('3 2 1 10 20\\n0 0\\n2 0\\n1 0') == '1 2'"
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2 5.086781\"\nassert solution() == \"1 12.715255\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\") == \"2 5.086781\"\nassert solution(\"3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5\") == \"1 12.715255\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\\n\") == \"2 5.086781\\n\"\nassert solution(\"3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5\\n\") == \"1 12.715255\\n\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\\n\") == \"2 5.086781\\n\"\nassert solution(\"3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5\\n\") == \"1 12.715255\\n\""
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"The output '{solution(input())}' is not as expected.\"\nfor test in [\n    (6, 0, 1, 0),\n    (6, 0, 0, 1),\n    (1, 0, 1, 1),\n    (0, 1, 1, 1),\n    (0, 0, 1, 1),\n    (1, 0, 0, 1),\n]:\n    assert solution(str(test[0]) + \" \" + str(test[1]) + \" \" + str(test[2]) + \" \" + str(test[3])) == str(expected), f\"The output '{solution(str(test[0]) + \" \" + str(test[1]) + \" \" + str(test[2]) + \" \" + str(test[3]))}' is not as expected.\"\n"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}\"\n"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\") == 8\nassert solution(\"5 1 7 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4\") == 1"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"8\", \"Expected output '8', got {}\".format(solution(stdin))\nassert solution(stdin) == \"1\", \"Expected output '1', got {}\".format(solution(stdin))\n\nfrom typing import List"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 8, \"Your code is incorrect.\""
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n') == '8'\nassert solution('4\\n5 1 7 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4\\n') == '1'"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(b'''\n    6\n    0 0 1 0\n    0 0 0 1\n    1 0 1 1\n    0 1 1 1\n    0 0 1 1\n    1 0 0 1\n''') == 8\nassert solution(b'''\n    4\n    5 1 7 1\n    1 1 5 1\n    4 0 4 4\n    7 0 3 4\n''') == 1"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\n\"\"\"\n6\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n\"\"\") == \"8\\n\"\n\nassert solution(stdin=\n\"\"\"\n4\n5 1 7 1\n1 1 5 1\n4 0 4 4\n7 0 3 4\n\"\"\") == \"1\\n\""
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n\") == \"8\\n\"\nassert solution(\"4\\n5 1 7 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4\\n\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 8, \"Solution is incorrect.\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\") == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(10) == 'impossible' # correct\nassert solution(1) == 'impossible' # correct"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"4 3\"\nassert solution(7) == \"4 3\"\nassert solution(10) == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10) == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5) == 4, \"Test case 1 failed\"\nassert solution(10) == \"impossible\", \"Test case 2 failed\"\n"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'impossible'"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(10) == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(7) == [4, 3]\nassert solution(10) == [\"impossible\"]"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n\") == \"4 3\\n\"\nassert solution(\"10\\n\") == \"impossible\\n\"\n"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4) == \"4 3\"\nassert solution(5) == \"impossible\"\n"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"16\", \"Your solution is incorrect. Expected: 16, but got: \" + str(solution())"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution) == \"16\"\n\nassert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"16\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"16\"\nassert solution(open(\"input2.txt\", \"r\")) == \"109\"\nprint(\"All test cases passed successfully!\")"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"109\", \"The correct output should be 109.\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 16\nassert solution(5) == 109\n\nfrom typing import List"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == '16'\nassert solution(sample_input_2) == '109'"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"109\", \"The solution is incorrect\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n3') == '16'\nassert solution('2\\n2\\n4\\n1\\n4') == '109'"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2\\n4\\n1\\n4\") == \"109\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, but got: {solution(input())}\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n5 1\\n1 2\\n1 2\\n1 2\") == \"3\\n1 2 1\\n1 2 2\\n1 2 2\"\n\nassert solution(\"4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\") == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n5 1\\n1 2\\n1 2\\n1 2\") == \"3\\n1 2 1\\n1 2 2\\n1 2 2\"\nassert solution(\"4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\") == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input1) == expected1, f\"Expected '{expected1}', got '{solution(input1)}'.\"\nassert solution(input2) == expected2, f\"Expected '{expected2}', got '{solution(input2)}'.\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3\"\nprint(\"3\")"
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Expected output: {output()}, got: {solution(input())}\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '3\\n1 2 1\\n1 2 2\\n1 2 2\\n'\nprint(\"The solution is correct.\")"
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 'Output not available'"
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Solution not provided\\n\", \"Solution not provided\""
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin: str) == expected\n"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n6 7\\n0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1\") == \"1 2\"\nassert solution(\"2 1\\n20 3\\n0 1 1\\n10 1 0\\n10 2 1\") == \"impossible\""
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 3\\n6 7\\n0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1') == ['1', '2']\nassert solution('2 1\\n20 3\\n0 1 1\\n10 1 0\\n10 2 1') == ['impossible']"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1 2\"\nassert solution(\"2 1\\n20 3\\n0 1 1\\n10 1 0\\n10 2 1\\n\") == \"impossible\""
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n2 3\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1\n''') == '''1 2'''\n\nassert solution('''\n2 1\n20 3\n0 1 1\n10 1 0\n10 2 1\n''') == '''impossible'''\n\nassert solution('''\n2 2\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1\n''') == '''2 1'''"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1 2\"\nassert solution() == \"impossible\"\n"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 3\\n6 7\\n0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1') == '1 2\\n'\nassert solution('2 1\\n20 3\\n0 1 1\\n10 1 0\\n10 2 1') == 'impossible\\n'"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Expected '{expected}', got '{solution(stdin)}'\""
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    '''\n    2 3\n    6 7\n    0 1 1\n    0 2 2\n    1 1 3\n    2 1 2\n    2 2 1\n    3 2 3\n    4 2 1\n    '''\n) == \"1 2\"\n\nassert solution(\n    '''\n    2 1\n    20 3\n    0 1 1\n    10 1 0\n    10 2 1\n    '''\n) == \"impossible\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10') == '5 2', 'Your code is not correct.'\nassert solution('2020') == '2020 1', 'Your code is not correct.'"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(10) == (5, 2), \"Test case 1\"\nassert solution(2020) == (2020, 1), \"Test case 2\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\") == \"5 2\"\nassert solution(\"2020\") == \"2020 1\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10) == [5, 2], \"Expected: [5, 2], Actual: [\" + str(solution(10)) + \"]\"\nassert solution(2020) == [2020, 1], \"Expected: [2020, 1], Actual: [\" + str(solution(2020)) + \"]\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\") == \"5 2\"\nassert solution(\"2020\") == \"2020 1\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10) == (5, 2), \"Your code is incorrect\"\nassert solution(2020) == (2020, 1), \"Your code is incorrect\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"5 2\"\nassert solution(\"2020\") == \"2020 1\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\") == \"5 2\", \"Incorrect output\"\nassert solution(\"2020\") == \"2020 1\", \"Incorrect output\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(10) == [5, 2]\nassert solution(2020) == [2020, 1]"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(10) == (5, 2)\nassert solution(2020) == (2020, 1)"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"impossible\"  # your implementation goes here"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\n\") == \"impossible\"\nassert solution(\"3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\n\") == \"unique\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(example1) == \"impossible\", \"Expected impossible, got: \" + solution(example1)\nassert solution(example2) == \"unique\", \"Expected unique, got: \" + solution(example2)"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\") == \"impossible\"\nassert solution(\"3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\") == \"unique\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n3\\n0 chocolate 1 icecream 2 cookies\\n3\\nchocolate cookies icecream') == 'impossible'\nassert solution('3\\n4\\n0 chocolate 1 icecream 2 cookies 2 chocolate 3 cookies\\n3\\nchocolate cookies icecream') == 'unique'\nassert solution('3\\n4\\n0 chocolate 1 icecream 2 cookies 2 chocolate 3 cookies\\n3\\nchocolate cookies icecream 2 noodles\\n2\\nnoodles 3 chocolate\\n1\\nchocolate 4 cookies\\n4\\nchocolate cookies icecream\\n') == 'ambiguous'\n"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\n\") == \"impossible\"\nassert solution(\"3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\n\") == \"unique\"\nassert solution(\"3\\n2\\n1 apple\\n2 orange\\n3 cherry\\n4 banana\\n\") == \"ambiguous\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\n\") == \"impossible\"\n\nassert solution(\"3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\n\") == \"unique\"\n\nassert solution(\"3\\n3\\n0 apple\\n1 banana\\n2 orange\\n3\\napple\\norange\\nbanana\\n\") == \"impossible\"\n\nassert solution(\"3\\n3\\n0 apple\\n1 banana\\n2 orange\\n3\\napple\\norange\\nbanana\\n\") == \"ambiguous\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"impossible\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"impossible\"\n\nsolution = '''\nfrom typing import List\n"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\nSample Input 1:\\n3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\nSample Output 1:\\nimpossible\\n\") == \"impossible\"\nassert solution(\"3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\nSample Input 2:\\n3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\nSample Output 2:\\nunique\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Solution should return '{output}', but instead returned '{solution(input())}'\"\n"
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 0 10\") == \"0\\n\", \"Sample Input 1\"\nassert solution(\"1 2 10\") == \"1\\n\", \"Sample Input 2\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Solution should be {output}, but got {solution(input())}\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Your code is missing or incorrect. The given output {output} is not correct. Please check your code again.\"\n\nN, K, M = map(int, input().split())"
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 0 10') == '0'\nassert solution('1 2 10') == '1'"
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\nprint(output)"
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 0 10\") == \"0\"\nassert solution(\"1 2 10\") == \"1\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 0 10\") == \"0\\n\"\nassert solution(\"1 2 10\") == \"1\\n\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 0 10\") == \"0\", \"Test case 1 failed\"\nassert solution(\"1 2 10\") == \"1\", \"Test case 2 failed\"\n\nfrom typing import List\n"
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 0, \"Test case 1 failed\"\nprint(\"Test case 1 passed\")"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Sample Input 1\") == \"1 pan\\n\"\nassert solution(\"Sample Input 2\") == \"3 zoom out\\n\"\n\nThe solution to this problem can be written in Python as follows:\n\n```python\n"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('............................................................\\n'\n                  '............................................................\\n'\n                  '....XXXX....................................................\\n'\n                  '....XXXX..................................XXXX..............\\n'\n                  '....XXXX...................................XXX..............\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\n'\n                  '............................................................\\"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Input 1\") == \"Output 1\"\nassert solution(\"Input 2\") == \"Output 2\"\nassert solution(\"\") == \"No Input\""
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('sampleInput1.txt') == '1 pan'\nassert solution('sampleInput2.txt') == '3 zoom out'"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n............................................................\n............................................................\n....XXXX....................................................\n....XXXX..................................XXXX..............\n....XXXX...................................XXX..............\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n............................................................\n............................................................\n....XXXX....................................................\n....XXXX..................................XXXX..............\n....XXXX...................................XXX..............\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('............................................................\\n............................................................\\n....XXXX....................................................\\n....XXXX..................................XXXX..............\\n....XXXX...................................XXX..............\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n.....\\n.....\\n....X\\n....X\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n....."
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('...X.X...X.X..X.X.....X.XX..X.X............X..X....X....XX.X...X.X.X..X.XX.X.....X.X..X...............X.X.X..X.XX..X.X.X..X.XX.X.X.X.X.X...X.X.X..X.XX.X.X.X..........X.X..X..X.X..X.X...X.X.X.X.X..X.X.X.X.X.X.X..X.X.X.X..........X.X.X..X.X..X.X.X.X.X.X.X..X.X.X.X.X.X.X.X.X..X.X.X.X.X.X.X.X.X.X.X.X.X.X..........X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X..........X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X..........X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X..........X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X..........X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are    +\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\n fresh apples!\\n\") == \" apples are great!\\n fresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"  =  +\\n+++++++\\n\"\nassert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are    +\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\n fresh apples!\\n\") == \" apples are great!\\n fresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"  =  +\\n+++++++\\n\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are      +\\n+ way better!      +\\n+ #oranges>apples  +\\n++++++++++++++++++++\\n check out our    \\n fresh apples!\\n\") == \" apples are great!\\n check out our    \\n fresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"   +\\n   +\\n   +\\n   +\\n   +\\n   +\\n   +\\n\"\nassert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are      +\\n+ way better!      +\\n+ #oranges>apples  +\\n++++++++++++++++++++\\n check out our    \\n fresh apples!\\n\") == \" apples are great!\\n check out our    \\n fresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"   +\\n   +\\n   +\\n   +\\n   +\\n   +\\n   +\\n\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 20\\n apples are great!\\n++++++++++++++++++++\\n+ oranges are      +\\n+ way better!\\n+ #oranges>apples  +\\n++++++++++++++++++++\\n check out our    \\n fresh apples!\\n\") == \" apples are great!\\n fresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n+++++++\\n+++++++\\n+++++++\\n\"\nassert solution(\"8 20\\n 1 2\\n 3 4\\n 5 6\\n\") == \"1 2\\n 3 4\\n 5 6\\n\"\nassert solution(\"1 1\\n++++++\\n+++++++\\n\") == \"++++++\\n+++++++\\n\"\nassert solution(\"10 20\\n1 2\\n2 3\\n3 4\\n4 5\\n6 7\\n8 9\\n10 11\\n12 13\\n14 15\\n16 17\\n18 19\\n20 21\\n22 23\\n24 25\\n26 27\\n28 29\\n30 31\\n32 33\\n34 35\\n36 37\\n38 39\\n40 41\\n42 43\\n44 45\\n46 47\\n48 49\\n50 51\\n52 53\\n54 55\\n56 57\\n58 59\\n60 61\\n62 63\\n64 65\\n66 67\\n68 69\\n70 71\\n72 73\\n74 75\\n76 77\\n78 79\\n80 81\\n82 83\\n84 85\\n86 87\\n88 89\\n90 91\\n92 93\\n94 95\\n96 97\\n98 99\\n100 101\\n102 103\\n104 105\\n106 107\\n108 109\\n110 111\\n112 113\\n114 115\\n116 117\\n118 119\\n120 121\\n122 123\\n124 125\\n126 127\\n\") == \"\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \"apples are great!\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\n fresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \" + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + + + +\\n + +"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\n fresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n+++     +\\n+++++++\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n+++     +\\n+++++++\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n+++     +\\n+++++++\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n+++     +\\n+++++++\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n+++     +\\n+++++++\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n+++     +\\n+++++++\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n+++     +\\n+++++++\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n+++     +\\n+++++++\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n+++     +\\n+++++++\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n+++     +\\n+++++++\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n+++     +\\n+++++++\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n+++     +\\n+++++++\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n+++     +\\n+++++++\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n+++     +\\n+++++++\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n+++     +\\n+++++++\\"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are    +\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\nfresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n+++++++\\n+++++++\\n+++++++\\n\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are    \\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\n fresh apples!\\n\") == \" apples are great!\\n fresh apples!\\n\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n') =='apples are great!\\n'\nassert solution('7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n') == '+++++++\\n'"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2.0\", \"The solution is incorrect.\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('HH') == 2.0\nassert solution('H?') == 1.5"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('HH') == '2.0', \"Your solution is incorrect.\"\nassert solution('H?') == '1.5', \"Your solution is incorrect.\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('HH') == '2.0', \"Your solution is incorrect\"\nassert solution('H?') == '1.5', \"Your solution is incorrect\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('HH') == '2.0'\nassert solution('H?') == '1.5'\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2.0\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"HH\") == 2.0, \"Incorrect output for input 'HH'\"\nassert solution(\"H?\") == 1.5, \"Incorrect output for input '?'\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('HH') == '2.0', 'Test case 1'\nassert solution('H?') == '1.5', 'Test case 2'"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"HH\") == \"2.0\"\nassert solution(\"H?\") == \"1.5\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"HH\") == \"2.0\", \"Please fix the code\"\nassert solution(\"H?\") == \"1.5\", \"Please fix the code\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\") == \"1\\n0001\\n0001\\n0011\\n1111\"\n\nfrom typing import List"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\") == \"1\\n0001\\n0001\\n0011\\n1111\"\nassert solution(\"4\\n1111\\n1111\\n1111\\n1111\") == \"6\\n0011\\n0011\\n0111\\n1101\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0001\\n0001\\n0011\\n1110\\n\") == \"1\\n0001\\n0001\\n0011\\n1111\\n\"\nassert solution(\"0001\\n0001\\n0011\\n1111\\n\") == \"6\\n0011\\n0011\\n0111\\n1101\\n\"\nassert solution(\"0001\\n0001\\n0011\\n1110\\n\") == \"1\\n0001\\n0001\\n0011\\n1111\\n\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == sample_output1, \"Your solution is incorrect!\"\nassert solution(sample_input2) == sample_output2, \"Your solution is incorrect!\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\") == \"1\\n0001\\n0001\\n0011\\n1111\"\nassert solution(\"4\\n1111\\n1111\\n1111\\n1111\") == \"6\\n0011\\n0011\\n0111\\n1101\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\") == \"1\\n0001\\n0001\\n0011\\n1111\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\\n\") == \"1\\n0001\\n0001\\n0011\\n1111\\n\"\nassert solution(\"4\\n1111\\n1111\\n1111\\n1111\\n\") == \"6\\n0011\\n0011\\n0111\\n1101\\n\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\") == \"1\\n0001\\n0001\\n0011\\n1111\"\nassert solution(\"4\\n1111\\n1111\\n1111\\n1111\") == \"6\\n0011\\n0011\\n0111\\n1101\"\n"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\") == \"1\\n0001\\n0001\\n0011\\n1111\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n0001\\n0001\\n0011\\n1110') == '1\\n0001\\n0001\\n0011\\n1111\\n'\nassert solution('4\\n1111\\n1111\\n1111\\n1111') == '6\\n0011\\n0011\\n0111\\n1101\\n'"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(samples[0]) == expected[0], f\"Test {i + 1} failed\" for i, (samples, expected) in enumerate(zip(samples_list, expected_list))\n"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\nh 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\\n\") == \"2\\n\"\n\nassert solution(\"4\\nh 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\\n\") == \"4\\n\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"h 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\") == \"2\"\nassert solution(\"h 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\") == \"4\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == output, f\"Expected {output}, got {solution(input)}\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\nh 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3') == '2\\n'\nassert solution('4\\nh 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3') == '4\\n'"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n4\nh 1 4 1\nv 2 4 2\nh 10 2 2\nv 11 2 3\n''') == '2'\n\nassert solution('''\n4\nh 1 10 1\nh 5 10 2\nv 1 10 1\nv 5 10 3\n''') == '4'"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Solution for the given input is incorrect. Expected: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('test_input.txt').read()) == '2\\n'\nassert solution(open('sample_input1.txt').read()) == '2\\n'\nassert solution(open('sample_input2.txt').read()) == '4\\n'"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"h 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\") == \"2\\n\"\nassert solution(\"h 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\") == \"4\\n\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\\n\") == \"2\"\n\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\\n\") == \"4\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_str) == expected_output, f\"Test case failed: {solution(input_str)}!= {expected_output}\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5') == '2'\nassert solution('3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8') == '4'"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\").read()) == \"2\\n\"\n"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\") == \"2\\n\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\") == \"4\\n\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\\n').strip() == '2'\nassert solution('3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\\n').strip() == '4'"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\") == \"2\\n\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\") == \"4\\n\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\\n\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\") == \"2\\n\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\") == \"4\\n\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"The function is incorrect. The output is '{solution(input())}', but the expected output is '{expected_output}'.\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input(\"Enter the number of elements in the array: \")) == output(\"The length of the longest sub-array so that each element appears exactly twice is:\", 2)"
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Output the length of the longest sub-array so that each element in the sub-array appears exactly twice.\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 3 4 2\") == \"2\"\nassert solution(\"1 2 1 3 1 3 1 2\") == \"4\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 2\nassert solution(7) == 4\n\nfrom typing import List"
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n1 2 3 3 4 2\\nSample Input 1\\n8\\n1 2 1 3 1 3 1 2\\nSample Output 1\\n4\") == \"2\\n\"\nassert solution(\"6\\n1 2 3 3 4 2\\nSample Input 2\\n8\\n1 2 1 3 1 3 1 2\\nSample Output 2\\n4\") == \"4\\n\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n1 2 3 3 4 2\") == \"2\"\nassert solution(\"8\\n1 2 1 3 1 3 1 2\") == \"4\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"6\\n1 2 3 3 4 2\\n8\\n1 2 1 3 1 3 1 2\") == \"2\\n4\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\"2\"\"\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Output the length of the longest sub-array so that each element in the sub-array appears exactly twice.\\n\", \"Test case not passing.\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'Output'"
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\\n') == '4\\n0\\n'\nassert solution('2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\\n') == '4\\n2\\n'"
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\") == \"4\\n0\"\nassert solution(\"2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\") == \"4\\n2\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"4\\n0\"\nassert solution(open(\"input.txt\", \"r\")) == \"4\\n2\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"example1.txt\", \"r\")) == \"4\\n0\\n\"\nassert solution(open(\"example2.txt\", \"r\")) == \"4\\n2\\n\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\") == \"4\\n0\\n\"\nassert solution(\"2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\") == \"4\\n2\\n\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Solution does not match.\\nExpected: {output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"\"\"\n\"\"\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"sample_input1.txt\").read()) == \"4\\n0\\n\"\nassert solution(open(\"sample_input2.txt\").read()) == \"4\\n2\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"0\\n\"  # expected output\nassert solution() == \"2\\n\"  # expected output"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected, f\"Your solution is incorrect. Expected: {expected}, Received: {solution}\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\\n\", \"Output incorrect\"\n"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n4 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n1 2\n''') == '1\\n'"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\\n\", \"The output is not as expected\"\n"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == \"1\", \"Expected Output 1: 1\"\nassert solution(sample_input_2) == \"impossible\", \"Expected Output 2: impossible\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\\n\") == \"1\\n\"\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\\n\") == \"impossible\\n\"\n"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2') == '1\\n'\nassert solution('4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2') == 'impossible\\n'"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\\n\") == \"1\\n\"\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\\n\") == \"impossible\\n\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"35\"\n\nprint(solution(input()))"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\\n\") == \"35\\n18\\n3\\n\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\") == \"35\\n18\\n3\\n\\n8\\n2\\n1\\n\"\n"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\\n\") == \"35\\n18\\n3\\n\\n8\\n2\\n1\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\") == \"35\\n18\\n3\\n\\n8\\n2\\n1\"\nassert solution(\"11 3\\n3 7 10\\n3\\n0 10\\n2 6\\n7 7\") == \"8\\n2\\n1\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\") == \"35\\n18\\n3\\n\\n8\\n2\\n1\"\nassert solution(\"11 3\\n3 7 10\\n3\\n0 10\\n2 6\\n7 7\") == \"8\\n2\\n1\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\") == \"35\\n18\\n3\\n\\n8\\n2\\n1\\n\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2\n\nsample_input1 = \"\"\"\n10 4\n1 1 2 1\n3\n0 9\n2 6\n7 7\n\"\"\"\n\nsample_output1 = \"\"\"\n35\n18\n3\n\"\"\"\n\nsample_input2 = \"\"\"\n11 3\n3 7 10\n3\n0 10\n2 6\n7 7\n\"\"\"\n\nsample_output2 = \"\"\"\n8\n2\n1\n\"\"\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"35\", \"Your solution is incorrect.\"\nassert solution() == \"18\", \"Your solution is incorrect.\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '35\\n18\\n3\\n8\\n2\\n1\\n'\n"
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1\\n2\\n3\\n4\") == \"0\\n1\\n3\\n6\\n\"\nassert solution(\"5\\n3\\n2\\n4\\n1\\n5\") == \"0\\n1\\n2\\n4\\n6\\n\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3\\n4\\n4') == '0\\n1\\n3\\n6\\n'\nassert solution('1\\n1\\n1\\n1\\n1') == '0\\n1\\n2\\n3\\n4\\n5\\n'\nassert solution('1\\n2\\n3\\n4\\n5') == '0\\n1\\n2\\n4\\n5\\n6\\n'\nassert solution('1\\n2\\n3\\n4\\n5\\n') == '0\\n1\\n2\\n3\\n4\\n5\\n6\\n'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == '0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n'"
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n1\\n2\\n3\\n4\\n') == '0\\n1\\n3\\n6\\n', \"Function should return the correct output\"\nassert solution('5\\n3\\n2\\n4\\n1\\n5\\n') == '0\\n1\\n2\\n4\\n6\\n', \"Function should return the correct output\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"0\\n1\\n3\\n6\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1\\n2\\n3\\n4\\n5\") == \"0\\n1\\n3\\n6\\n10\"\nassert solution(\"2\\n5\\n3\\n4\\n1\") == \"0\\n1\\n2\\n4\\n6\\n10\"\nassert solution(\"2\\n5\\n1\\n3\\n4\") == \"0\\n1\\n2\\n4\\n6\\n10\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\") == \"0\\n1\\n2\\n4\\n6\\n10\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Input 1') == 'Output 1\\n0\\n1\\n3\\n6\\n', \\\n    'The code is not correct.'\n\nassert solution('Input 2') == 'Output 2\\n0\\n1\\n2\\n4\\n6\\n', \\\n    'The code is not correct.'\n\nassert solution('Input 3') == 'The code is not correct.', \\\n    'The code is not correct.'\n\nassert solution('Input 4') == 'The code is not correct.', \\\n    'The code is not correct.'\n\nassert solution('Input 5') == 'The code is not correct.', \\\n    'The code is not correct.'"
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"TODO\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"4\n1\n2\n3\n4\"\"\") == \"\"\"0\n1\n3\n6\n\"\"\"\n\nassert solution(\"\"\"5\n3\n2\n4\n1\n5\"\"\") == \"\"\"0\n1\n2\n4\n6\n\"\"\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == expected_output, f\"Your code is not correct. Please check the given examples and the expected output.\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"0\\n1\\n3\\n6\\n\", \"Test case 1 failed.\"\nassert solution() == \"0\\n1\\n2\\n4\\n6\\n\", \"Test case 2 failed.\"\nassert solution() == \"0\\n1\\n3\\n6\\n\", \"Test case 3 failed.\"\nassert solution() == \"0\\n1\\n2\\n4\\n6\\n\", \"Test case 4 failed.\"\nassert solution() == \"0\\n1\\n3\\n6\\n\", \"Test case 5 failed.\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"4 3 1 2\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\") == [\"2 4 1 3\", \"4 3 1 2\"]\nassert solution(\"4\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\") == [\"4 3 1 2\"]\nassert solution(\"4\\n5 6 7 8\\n9 10 11 12\\n13 14 15 16\") == [\"5 6 7 8\", \"9 10 11 12\"]"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output:\\n{expected_output}\\nActual output:\\n{solution(stdin)}\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4) == \"2 4 1 3\\n4 3 1 2\"\nassert solution(4) == \"2 4 1 3\\n4 3 1 2\"\n\nfrom typing import List"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n4\n1 3 2 2\n1 1 3 2\n2 4 7 3\n3 3 5 3\n''') == '''\n2 4 1 3\n'''\n\nassert solution('''\n4\n0 0 1 1\n1 2 0 3\n2 2 3 3\n4 0 3 1\n''') == '''\n4 3 1 2\n'''"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"4 3 1 2\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '2 4 1 3', \"The expected output is: 2 4 1 3\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2 4 1 3\\n4 3 1 2\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"4 3 1 2\\n\"\nassert solution() == \"2 4 1 3\\n\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\"\"\"\n) == \"Theta wins\"\n\nassert solution(\n    \"\"\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\"\"\"\n) == \"Theta loses\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\", \"Incorrect output for sample input 1.\"\n\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\", \"Incorrect output for sample input 2.\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\"\n"
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == 'Theta wins', 'Sample Input 1'\n\nassert solution('89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49') == 'Theta wins', 'Sample Input 2'"
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\", \"The solution should be 'Theta wins'.\"\n\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\", \"The solution should be 'Theta wins'.\"\n\nassert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta loses\", \"The solution should be 'Theta loses'.\"\n\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta loses\", \"The solution should be 'Theta loses'.\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\"\n"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"fabulist\\n\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 2\\n1 charlatan 1\\n1 not charlatan 1\\n') == ['charlatan']\nassert solution('2 1\\n1 and fabulist 1 fabulist 2\\n') == ['fabulist', 'truther', 'def']"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r').read()) == '''fabulist\ntruther\n"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('Input\\n1 2\\n1 charlatan 1\\n1 not charlatan 1\\n') == 'charlatan\\n'"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'charlatan'"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\n1 charlatan 1\\n1 not charlatan 1\\n\") == [\"charlatan\"]\nassert solution(\"2 1\\n1 and fabulist 1 fabulist 2\\n\") == [\"fabulist\", \"truther\", \"def\"]"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(f\"\"\"\n1 2\n1 charlatan 1\n1 not charlatan 1\n\"\"\") == [\"charlatan\"]\n\nassert solution(f\"\"\"\n2 1\n1 and fabulist 1 fabulist 2\n\"\"\") == [\"fabulist\", \"truther\", \"def solution(stdin: str) -> str:\"]"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\n1 charlatan 1\\n1 not charlatan 1\\n\") == \"charlatan\\n\"\nassert solution(\"2 1\\n1 and fabulist 1 fabulist 2\\n\") == \"fabulist\\ntruther\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 2\\n1 charlatan 1\\n1 not charlatan 1\\n') == ['charlatan']\nassert solution('2 1\\n1 and fabulist 1 fabulist 2\\n') == ['fabulist', 'truther']"
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\") == \"4\\n\", \"Output 1 is incorrect\"\n\nassert solution(\"3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\") == \"3\\n\", \"Output 2 is incorrect\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input1) == output1, f\"Test case {1} failed. Output: {solution(input1)}, Expected Output: {output1}\"\nassert solution(input2) == output2, f\"Test case {2} failed. Output: {solution(input2)}, Expected Output: {output2}\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\\n') == '4'\nassert solution('3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\\n') == '3'"
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed: {expected_output}!= {solution(stdin)}\"\n"
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\") == \"4\"\nassert solution(\"1.50 -1.00\\n-1.50 -1.00\\n0.00 1.00\") == \"3\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\\n') == '4\\n'\nassert solution('3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\\n') == '3\\n'"
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\") == \"4\"\nassert solution(\"3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\") == \"3\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Output the maximum number of fruits that can be sliced with one straight-line swipe.\\nA swipe slices a fruit if the line intersects the inner part or the boundary of the fruit.\\n\""
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '16\\n', \"Expected output: 16, but got: {}\".format(solution(input()))"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    2 5 2\n    R..?.\n    .X...\n    100 100 7 100 8\n    ''') == '16'\nassert solution('''\n    2 3 1\n    X..\n    .?.\n    10 1000 1\n    ''') == '10'"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 5 2\\nR..?\\n.X...\\n100 100 7 100 8') == '16'\nassert solution('2 3 1\\nX..\\n.?.\\n10 1000 1') == '10'"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8\") == 16\nassert solution(\"2 3 1\\nX..\\n.?.\\n10 1000 1\") == 10\n"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"16\", \"Your solution is incorrect.\""
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input1) == expected1, f\"Test {test_case} failed\"\nassert solution(input2) == expected2, f\"Test {test_case} failed\"\n\ntest_case += 1\n\ninput1 = \"\"\"\n2 5 2\nR..?.\n.X...\n100 100 7 100 8\n\"\"\"\n\ninput2 = \"\"\"\n2 3 1\nX..\n.?.\n10 1000 1\n\"\"\"\n\nexpected1 = 16\nexpected2 = 10\n"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8\\n\") == \"16\\n\"\nassert solution(\"2 3 1\\nX..\\n.?.\\n10 1000 1\\n\") == \"10\\n\""
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input1) == output1, \"Test 1 failed\"\nassert solution(input2) == output2, \"Test 2 failed\""
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8\\n') == '16\\n'\nassert solution('2 3 1\\nX..\\n.?.\\n10 1000 1\\n') == '10\\n'"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8\") == \"16\"\nassert solution(\"2 3 1\\nX..\\n.?.\\n10 1000 1\") == \"10\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\nr'3 3\n0 4 4\n1 5 1\n2 6 1'\n) == '1.414'\n\nassert solution(\nr'6 11\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10'\n) == '5.657'"
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1.414\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1.414\", \"Your solution is incorrect.\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1.414\", \"Incorrect output\"\n"
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n0 4 4\\n1 5 1\\n2 6 1\") == \"1.414\"\nassert solution(\"6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\") == \"5.657\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''3 3\n0 4 4\n1 5 1\n2 6 1''') == '1.414'\nassert solution('''6 11\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10''') == '5.657'"
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '1.414', \"Output is incorrect\"\n"
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n0 4 4\\n1 5 1\\n2 6 1\") == \"1.414\"\nassert solution(\"6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\") == \"5.657\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == '1.414'\nassert solution(sample_input_2) == '5.657'"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 1 1 1 1\\n3 1 1 1\") == \"1.0\"\nassert solution(\"3 1 1 1\") == \"0.433\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '1.0\\n'\nassert solution() == '0.433\\n'"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"4 1 1 1 1\\n3 1 1 1\\n\") == \"1.0\"\nassert solution(stdin=\"4 1 1 1\\n3 1 1\\n\") == \"0.433\"\nassert solution(stdin=\"4 1 1 1 1\\n3 1 1 1 1\\n\") == \"0.0\"\nassert solution(stdin=\"4 1 1 1 1\\n3 1 1 1 1\\n\") == \"0.0\"\nassert solution(stdin=\"4 1 1 1 1\\n3 1 1 1 1\\n\") == \"0.0\"\nassert solution(stdin=\"4 1 1 1 1\\n3 1 1 1 1\\n\") == \"0.0\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 1 1 1 1\\n3 1 1 1\") == \"1.0\"\nassert solution(\"3 1 1 1\") == \"0.433\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test Case Failed.\\nExpected: {output}\\nReceived: {solution(input())}\"\n"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 1 1 1 1\") == \"1.0\"\nassert solution(\"3 1 1 1\") == \"0.433\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n4 1 1 1 1\n''') == '1.0'\n\nassert solution('''\n3 1 1 1\n''') == '0.433'"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 1 1 1 1\") == \"1.0\"\nassert solution(\"3 1 1 1\") == \"0.433\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '1.0', 'Please provide the correct solution'\n"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 1 1 1 1\") == \"1.0\"\nassert solution(\"3 1 1 1\") == \"0.433\"\nassert solution(\"\") == \"0\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"Output the final energy level on the first line. Output an integer L, the number of plants Barica should travel, including plants 1 and N. On the following L lines, output the sequence of plants Barica should travel.\"\nprint(\"Correct!\")"
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\") == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\\n\", \"Test 1 failed.\"\nassert solution(\"8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15\") == \"36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3\\n\", \"Test 2 failed.\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt').read()) == \"Output\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Got {solution(input())}, expected {expected_output}\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(str(input())) == str(input())  # Test case 1\nassert solution(str(input())) == str(input())  # Test case 2"
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2"
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5') == '5\\n4\\n1 1\\n2 1\\n2 3\\n3 3'\nassert solution('8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15') == '36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3'\n\nfrom collections import deque"
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case {i+1} failed\" for i, sample_input, sample_output in enumerate([(\"6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\", \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\"), (\"8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15\", \"36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3\")])"
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\\n\") == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\"\nassert solution(\"8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15\\n\") == \"36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3\"\n"
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\") == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\"\nassert solution(\"8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15\") == \"36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Your solution is incorrect. The output is '{output}', but you provided the input '{input()}'.\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(f\"\"\"2 1\n2 1\n1 2\n\"\"\") == \"1\"\n\nassert solution(f\"\"\"3 2\n2 1 3\n1 3\n2 3\n\"\"\") == \"3\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\\n\") == \"1\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"3\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\\n\") == \"1\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"3\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\"\n\nprint(\"1\")"
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\" arrange \\n 2 1 \\n 2 1 \\n 1 2 \\n\") == \"1\\n\", \"Arrange is a planetary popular Flash game. In Arrange the player is given a permutation of numbers 1 to N and a list of allowed swaps. He then has to perform a sequence of swaps that transforms the initial permutation back to the ordered sequence 1, 2, 3, 4, 5, \\ldots, N. Arrange has no high score list and you need to perform a minimum amount of swaps possible.\"\nassert solution(\"arrange \\n 3 2 \\n 2 1 3 \\n 1 3 \\n 2 3 \\n\") == \"3\\n\", \"Arrange is a planetary popular Flash game. In Arrange the player is given a permutation of numbers 1 to N and a list of allowed swaps. He then has to perform a sequence of swaps that transforms the initial permutation back to the ordered sequence 1, 2, 3, 4, 5, \\ldots, N. Arrange has no high score list and you need to perform a minimum amount of swaps possible.\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected output: {output}, Got: {solution(input())}\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\\n\") == \"1\\n\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"3\\n\"\n"
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\" arrange \") == \"1\"\nassert solution(\" arrange \") == \"1\"\nassert solution(\" arrange \") == \"1\"\nassert solution(\" arrange \") == \"1\"\nassert solution(\" arrange \") == \"1\""
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\\n\") == -1\nassert solution(\"6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\\n\") == 5"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\\n') == -1\nassert solution('6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\\n') == 5"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\\n\") == -1\nassert solution(\"6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\\n\") == 5"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n5 8\n1 4\n4 5\n1 5\n1 2\n1 3\n2 3\n3 5\n2 5\n\"\"\") == -1\n\nassert solution(\"\"\"\n6 5\n2 4\n3 5\n1 5\n3 6\n1 6\n\"\"\") == 5"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n    5 8\n   1 4\n    4 5\n   1 5\n   1 2\n   1 3\n   2 3\n   3 5\n   2 5\n    '''\n) == 5\n\nassert solution(\n    '''\n    6 5\n   2 4\n   3 5\n   1 5\n   3 6\n   1 6\n    '''\n) == -1"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\") == -1\nassert solution(\"6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\") == 5"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\\n\") == -1\n\nassert solution(\"6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\\n\") == 5"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\") == 2\nassert solution(\"6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\") == 5"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\"-1\"\"\"\n"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\\n\") == -1\nassert solution(\"6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\\n\") == 5"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '4.00\\n'\nassert solution(open('input2.txt', 'r')) == '9.00\\n'"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"4.00\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 4.00, \"Incorrect solution\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    '''\n    4 1\n    1 1\n    5 1\n    5 5\n    4 2\n    '''\n) == 4.00\n\nassert solution(\n    '''\n    6 3\n    -8 -8\n    0 -1\n    8 -8\n    1 0\n    0 10\n    -1 0\n    '''\n) == 9.00"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4 1\n1 1\n5 1\n5 5\n4 2\n\"\"\") == \"4.00\"\n\nassert solution(\"\"\"\n6 3\n-8 -8\n0 -1\n8 -8\n1 0\n0 10\n-1 0\n\"\"\") == \"9.00\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 1\\n1 1\\n5 1\\n5 5\\n4 2\\n') == 4.0, \"Expected 4.0, got: {}\".format(solution('4 1\\n1 1\\n5 1\\n5 5\\n4 2\\n'))\nassert solution('6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\\n') == 9.0, \"Expected 9.0, got: {}\".format(solution('6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\\n'))"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n    return\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 4.0, \"Expected 4.0, got {}\".format(solution())\n"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 1\\n1 1\\n5 1\\n5 5\\n4 2\\n\") == 4.00, \"Solution 1 should return 4.00.\"\nassert solution(\"6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\\n\") == 9.00, \"Solution 2 should return 9.00.\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == output1, \"Incorrect output for sample input 1\"\nassert solution(input2) == output2, \"Incorrect output for sample input 2\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n\"\n\nassert solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n\") == \"3 1 1\\n1 3 1\\n1 1 1\\n\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n') == '2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n'\nassert solution('3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n') == '3 1 1\\n1 3 1\\n1 1 1\\n'"
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\nr'''\n4 3 2\nPAINT 2 0 0 3 3\nPAINT 3 0 3 3 3\n'''\n) == '2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2'\n\nassert solution(\nr'''\n3 3 4\nPAINT 3 0 0 1 1\nSAVE\nPAINT 2 1 1 2 2\nLOAD 1\n'''\n) == '3 1 1\\n1 3 1\\n1 1 1'"
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test failed: Expected output not found\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Received: {solution(input())}\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"\"\"2 1 2 3\n1 2 1 2\n2 1 2 3\n1 2 1 2\"\"\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n\") == [\"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n\"]\n\nassert solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n\") == [\"3 1 1\\n1 3 1\\n1 1 1\\n\"]"
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"\"\"2 1 2 3\n1 2 1 2\n2 1 2 3\n1 2 1 2\"\"\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\"\nassert solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n\") == \"3 1 1\\n1 3 1\\n1 1 1\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    '''\n    4 3\n    2 4 2 3\n    1 1 1 1 1\n    '''\n) == '''\n1 4 2 3\n'''\n\nassert solution(\n    '''\n    5 1\n    1 2 3 4 5\n    '''\n) == '''\n-1\n'''"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\") == [\"1\", \"4\", \"2\", \"3\"]\nassert solution(\"5 1\") == [-1]"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == \"1 4 2 3\\n\"\nassert solution(input2) == \"-1\\n\"\n\nfrom collections import deque"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 3\\n5 1\\n') == '1 4 2 3\\n'\nassert solution('4 5\\n5 1\\n') == '1 4 2 3\\n1 4 3\\n'\nassert solution('5 4\\n5 1\\n') == '-1\\n'\nassert solution('6 1\\n6 2\\n') == '1 6\\n1 6 2\\n'\nassert solution('5 3\\n5 4\\n') == '1 4 3\\n1 4 3 2\\n1 4 3 2 1\\n'\nassert solution('6 4\\n6 5\\n') == '1 6 4\\n1 6 4 3\\n1 6 4 3 2\\n1 6 4 3 2 1\\n'\nassert solution('5 2\\n5 3\\n') == '1 3\\n1 3 2\\n1 3 2 1\\n'"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 3\\n5 1\\n') == '1 4 2 3\\n'\nassert solution('4 5\\n6 4\\n') == '1 5 4 6 2\\n'\nassert solution('5 1\\n') == '-1\\n'"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    4 3\n    1 4 2 3\n    5 1\n    \"\"\"\n) == \"\"\"\n1 4 2 3\n\"\"\"\nassert solution(\n    \"\"\"\n    3 2\n    1 4 2 3\n    5 1\n    \"\"\"\n) == \"\"\"\n-1\n\"\"\"\nassert solution(\n    \"\"\"\n    3 2\n    1 2 3\n    5 1\n    \"\"\"\n) == \"\"\"\n-1\n\"\"\"\nassert solution(\n    \"\"\"\n    5 3\n    1 4 2 3\n    5 1\n    \"\"\"\n) == \"\"\"\n-1\n\"\"\"\nassert solution(\n    \"\"\"\n    4 3\n    1 4 2 3\n    5 2\n    \"\"\"\n) == \"\"\"\n-1\n\"\"\"\nassert solution(\n    \"\"\"\n    4 3\n    1 4 2 3\n    5 1\n    \"\"\"\n) == \"\"\"\n1 4 2 3\n\"\"\"\nassert solution(\n    \"\"\"\n    4 3\n    1 4 2 3\n    5 1\n    \"\"\"\n) == \"\"\"\n1 4 2 3\n\"\"\"\nassert solution(\n    \"\"\"\n    4 3\n    1 4 2 3\n    5 1\n    \"\"\"\n) == \"\"\"\n1 4 2 3\n\"\"\"\nassert solution(\n    \"\"\"\n    4 3\n    1 4 2 3\n    5 1\n    \"\"\"\n) == \"\"\"\n1 4 2 3\n\"\"\"\nassert solution(\n    \"\"\"\n    4 3\n    1 4 2 3\n    5 1\n    \"\"\"\n) == \"\"\"\n1 4 2 3\n\"\"\"\nassert solution(\n    \"\"\"\n    4 3\n    1 4 2 3\n    5 1\n    \"\"\"\n) == \"\"\"\n1 4 2 3\n\"\"\"\nassert solution(\n    \"\"\"\n    4 3\n    1 4 2 3\n    5 1\n    \"\"\"\n) == \"\"\"\n1 4 2 3\n\"\"\"\nassert solution(\n    \"\"\"\n    4 3\n    1 4 2 3\n    5 1\n    \"\"\"\n) == \"\"\"\n1 4 2 3\n\"\"\"\nassert solution(\n    \"\"\"\n    4 3\n    1 4 2 3\n    5 1\n    \"\"\"\n) == \"\"\"\n1 4 2 3\n\"\"\"\nassert solution(\n    \"\"\"\n    4 3\n    1 4 2 3\n    5 1\n    \"\"\"\n) == \"\"\"\n1 4 2 3\n\"\"\"\nassert solution(\n    \"\"\"\n    4 3\n    1 4 2 3\n    5 1\n    \"\"\"\n) == \"\"\"\n1 4 2 3\n\"\"\"\nassert solution(\n    \"\"\"\n    4 3\n    1 4 2 3\n    5 1\n    \"\"\"\n) == \"\"\"\n1 4 2 3\n\"\"\"\nassert solution(\n    \"\"\"\n    4 3\n    1 4 2 3\n    5 1\n    \"\"\"\n) == \"\"\"\n1 4 2 3\n\"\"\"\nassert solution(\n    \"\"\"\n    4 3\n    1 4 2 3\n    5 1\n    \"\"\"\n) == \"\"\"\n1 4 2 3\n\"\"\"\nassert solution(\n    \"\"\"\n    4 3\n    1 4 2 3\n    5 1\n    \"\"\"\n) == \"\"\"\n1 4 2 3\n\"\"\"\nassert solution(\n    \"\"\"\n    4 3\n    1 4 2 3\n    5 1\n    \"\"\"\n) == \"\"\"\n1 4 2 3\n\"\"\"\nassert solution(\n    \"\"\"\n    4 3\n    1 4 2 3\n    5 1\n    \"\"\"\n) == \"\"\"\n1 4 2 3\n\"\"\"\nassert solution(\n    \"\"\"\n    4 3\n    1 4 2 3\n    5 1\n    \"\"\"\n) == \"\"\"\n1 4 2 3\n\"\"\"\nassert solution(\n    \"\"\"\n    4 3\n    1 4 2 3\n    5 1\n    \"\"\"\n) == \"\"\"\n1 4 2 3\n\"\"\"\nassert solution(\n    \"\"\"\n    4 3\n    1 4 2 3\n    5 1\n    \"\"\"\n) == \"\"\"\n1 4 2 3\n\"\"\"\nassert solution(\n    \"\"\"\n    4 3\n    1 4 2 3\n    5 1"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '1 4 2 3\\n-1'\nassert solution(stdin) == '1 2 3 4 5\\n-1'\nassert solution(stdin) == '1 3 5 4 2\\n-1'\nassert solution(stdin) == '1 4 2 5 3\\n-1'\nassert solution(stdin) == '1 2 4 3 5\\n-1'\nassert solution(stdin) == '1 4 5 2 3\\n-1'\nassert solution(stdin) == '1 2 5 3 4\\n-1'\nassert solution(stdin) == '1 3 5 4 2\\n-1'\nassert solution(stdin) == '1 3 4 5 2\\n-1'\nassert solution(stdin) == '1 3 5 4 2\\n-1'\nassert solution(stdin) == '1 4 2 5 3\\n-1'\nassert solution(stdin) == '1 2 3 4 5\\n-1'\nassert solution(stdin) == '1 3 5 4 2\\n-1'\nassert solution(stdin) == '1 3 4 5 2\\n-1'\nassert solution(stdin) == '1 3 5 4 2\\n-1'\nassert solution(stdin) == '1 4 2 5 3\\n-1'\nassert solution(stdin) == '1 2 3 4 5\\n-1'\nassert solution(stdin) == '1 3 5 4 2\\n-1'\nassert solution(stdin) == '1 3 4 5 2\\n-1'\nassert solution(stdin) == '1 3 5 4 2\\n-1'\nassert solution(stdin) == '1 4 2 5 3\\n-1'\nassert solution(stdin) == '1 2 3 4 5\\n-1'\nassert solution(stdin) == '1 3 5 4 2\\n-1'\nassert solution(stdin) == '1 3 4 5 2\\n-1'\nassert solution(stdin) == '1 3 5 4 2\\n-1'\nassert solution(stdin) == '1 4 2 5 3\\n-1'\nassert solution(stdin) == '1 2 3 4 5\\n-1'\nassert solution(stdin) == '1 3 5 4 2\\n-1'\nassert solution(stdin) == '1 3 4 5 2\\n-1'\nassert solution(stdin) == '1 3 5 4 2\\n-1'\nassert solution(stdin) == '1 4 2 5 3\\n-1'\nassert solution(stdin) == '1 2 3 4 5\\n-1'\nassert solution(stdin) == '1 3 5 4 2\\n-1'\nassert solution(stdin) == '1 3 4 5 2\\n-1'\nassert solution(stdin) == '1 3 5 4 2\\n-1'\nassert solution(stdin) == '1 4 2 5 3\\n-1'\nassert solution(stdin) == '1 2 3 4 5\\n-1'\nassert solution(stdin) == '1 3 5 4 2\\n-1'\nassert solution(stdin) == '1 3 4 5 2\\n-1'\nassert solution(stdin) == '1 3 5 4 2\\n-1'\nassert solution(stdin) == '1 4 2 5 3\\n-1'\nassert solution(stdin) == '1 2 3 4 5\\n-1'\nassert solution(stdin) == '1 3 5 4 2\\n-1'\nassert solution(stdin) == '1 3 4 5 2\\n-1'\nassert solution(stdin) == '1 3 5 4 2\\n-1'\nassert solution(stdin) == '1 4 2 5 3\\n-1'\nassert solution(stdin) == '1 2 3 4 5"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, \"The output is incorrect.\"\n"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\") == \"1 4 2 3\"\nassert solution(\"5 1\") == \"-1\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == '1 4 2 3 -1'\nassert solution(open('input.txt', 'r')) == '1 4 2 3'\nassert solution(open('input.txt', 'r')) == '-1'"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"The expected output is '{expected_output}' but got '{solution(stdin)}'\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"3\\n4 2\\n2 1\\n1 3\\n\") == 1\nassert solution(stdin=\"4\\n5 0\\n2 6\\n8 6\\n5 7\\n\") == 0\n"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test Case Failed: Input: {stdin}, Output: {output}, Expected: {expected}\"\n"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4 2\\n2 1\\n1 3\") == \"1\"\nassert solution(\"4\\n5 0\\n2 6\\n8 6\\n5 7\") == \"0\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1\\n\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n4 2\\n2 1\\n1 3\\n\") == \"1\\n\"\nassert solution(\"4\\n5 0\\n2 6\\n8 6\\n5 7\\n\") == \"0\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n4 2\\n2 1\\n1 3\\n\") == \"1\\n\"\nassert solution(\"4\\n5 0\\n2 6\\n8 6\\n5 7\\n\") == \"0\\n\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '1', 'Please implement the solution.'"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1\"\n\nfrom typing import List\n"
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\") == \"4 140\\n\"\nassert solution(\"2 1 0 1\\n0 1 1000 100\") == \"1000 100000\\n\"\n"
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\") == \"4 140\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"4 140\\n1000 100000\\n\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"1000 100000\\n\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10') == '4 140\\n'\nassert solution('2 1 0 1\\n0 1 1000 100') == '1000 100000\\n'\n"
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\") == \"4 140\\n\"\nassert solution(\"2 1 0 1\\n0 1 1000 100\") == \"1000 100000\\n\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_str) == output_str, f\"Expected {output_str}, got {solution(input_str)}\"\n\ninput_str = \"\"\"4 4 0 3\n0 1 4 10\n1 2 2 10\n0 2 4 30\n2 3 4 10\"\"\"\n\noutput_str = \"\"\"4 140\"\"\"\n\nprint(solution(input_str))"
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n4 4 0 3\n0 1 4 10\n1 2 2 10\n0 2 4 30\n2 3 4 10\n''') == '4 140'\n\nassert solution('''\n2 1 0 1\n0 1 1000 100\n''') == '1000 100000'"
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\") == \"4 140\"\nassert solution(\"2 1 0 1\\n0 1 1000 100\") == \"1000 100000\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10') == '4 140\\n', 'Solution is incorrect.'\nassert solution('2 1 0 1\\n0 1 1000 100') == '1000 100000\\n', 'Solution is incorrect.'"
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10') == '4 140\\n', 'Test 1'\n\nassert solution('2 1 0 1\\n0 1 1000 100') == '1000 100000\\n', 'Test 2'"
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20\") == 3\nassert solution(\"8 2\\n8 3\\n5 7\") == \"impossible\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20\") == 3\nassert solution(\"8 2\\n8 3\\n5 7\") == \"impossible\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Incorrect output: expected '{expected}', got '{solution(stdin)}'\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\\n\"\nassert solution() == \"impossible\\n\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([100, 7, 1, 50, 50, 70, 70, 90, 90, 40, 20, 60, 60, 80, 80, 20]) == 3\nassert solution([8, 2, 8, 3, 5, 7]) == \"impossible\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20\") == 3, \"Invalid output\"\nassert solution(\"8 2\\n8 3\\n5 7\") == \"impossible\", \"Invalid output\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20') == 3\nassert solution('8 2\\n8 3\\n5 7') == 'impossible'\n"
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20') == 3\nassert solution('8 2\\n8 3\\n5 7') == 'impossible'"
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20\\n\") == 3\nassert solution(\"8 2\\n8 3\\n5 7\\n\") == \"impossible\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(51090942171709440000) == 21, \"The factorial of 51090942171709440000 is 21, but the solution should be 21.\"\nassert solution(120) == 5, \"The factorial of 120 is 5, but the solution should be 5.\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(120) == 5, \"Incorrect output for sample input 1.\"\nassert solution(51090942171709440000) == 21, \"Incorrect output for sample input 2.\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"120\") == 5, \"Error in solution\"\nassert solution(\"51090942171709440000\") == 21, \"Error in solution\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"120\") == \"5\"\nassert solution(\"51090942171709440000\") == \"21\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(51090942171709440000) == 21, \"Test failed for input 2\"\nprint(\"Test passed\")"
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(120) == 5, \"The factorial of 120 is incorrect\"\nassert solution(51090942171709440000) == 21, \"The factorial of 51090942171709440000 is incorrect\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"120\") == \"5\"\nassert solution(\"51090942171709440000\") == \"21\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(120) == 5\nassert solution(51090942171709440000) == 21"
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"120\") == \"5\", \"The solution should be '5'.\"\nassert solution(\"51090942171709440000\") == \"21\", \"The solution should be '21'.\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(120) == 5, \"The factorial of 120 is not 5.\"\nassert solution(51090942171709440000) == 21, \"The factorial of 51090942171709440000 is not 21.\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 1 2\") == \"45\"\nassert solution(\"3 3 3\") == \"10\"\n"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 1 2\") == \"45\", \"Test 1 failed\"\nassert solution(\"3 3 3\") == \"10\", \"Test 2 failed\"\n\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 1 2\") == \"45\", \"Test 1 failed\"\nassert solution(\"3 3 3\") == \"10\", \"Test 2 failed\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Output the number of ways\"\n"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 1 2\") == 45\nassert solution(\"3 3 3\") == 10"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 1 2\") == \"45\"\nassert solution(\"3 3 3\") == \"10\"\n"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10 1 2\\n3 3 3\\n') == 45\nassert solution('10 2 3\\n3 1 1\\n') == 45\nassert solution('10 1 3\\n2 1 2\\n') == 45\nassert solution('10 2 1\\n1 1 1\\n') == 45\nassert solution('10 1 4\\n1 1 1\\n') == 45\nassert solution('10 1 2\\n1 1 1\\n') == 45"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Solution does not match the expected output for {input()}.\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 45"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 1 2\") == \"45\"\nassert solution(\"3 3 3\") == \"10\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"18\"\n"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n\") == \"20\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n5\n3 1\n4 1\n5 9\n2 6\n5 3\n5\n''') == '20'"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n\") == \"18\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n\") == \"20\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n\") == \"18\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n\") == \"20\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"18\"\n"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\") == \"18\\n\"  # expected output: \"18\\n\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n\") == \"impossible\\n\"  # expected output: \"impossible\\n\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n\") == \"18\\n\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n\") == \"20\\n\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n6\\n\") == \"impossible\\n\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n10\\n\") == \"impossible\\n\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n\") == \"20\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n\") == \"impossible\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 5 10\\n7 8 2\") == \"3\\n\"\nassert solution(\"3\\n-1 -1 -1\\n5 5 5\") == \"11\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3\\n\" + \"11\\n\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n1 5 10\\n7 8 2\\n') == '3\\n'\nassert solution('2\\n-1 -1 -1\\n5 5 5\\n10 10 10\\n') == '11\\n'"
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n1 5 10\\n7 8 2') == '3\\n', \"Incorrect solution\"\nassert solution('3\\n-1 -1 -1\\n5 5 5\\n10 10 10') == '11\\n', \"Incorrect solution\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 5 10\\n7 8 2\") == \"3\\n\"\nassert solution(\"3\\n-1 -1 -1\\n5 5 5\\n10 10 10\") == \"11\\n\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n1 5 10\\n7 8 2\\n') == '3\\n'\nassert solution('3\\n-1 -1 -1\\n5 5 5\\n10 10 10\\n') == '11\\n'"
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n1 5 10\\n7 8 2\\n3\\n-1 -1 -1\\n5 5 5\\n10 10 10\\n') == '3\\n'\nassert solution('3\\n-1 -1 -1\\n5 5 5\\n10 10 10\\n') == '11\\n'"
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 5 10\\n7 8 2\\n\") == \"3\"\nassert solution(\"3\\n-1 -1 -1\\n5 5 5\\n10 10 10\\n\") == \"11\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"Solution: {solution(stdin)}, Expected Output: {expected_output}\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"def solution(stdin: str) -> str:\\n    pass\") == \"2\\n\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n3 1\n110\n011\n''') == '2'\n\nassert solution('''\n4 2\n1000\n1000\n0000\n0010\n''') == '0'"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 1\\n110\\n011\\n4 2\\n1000\\n1000\\n0000\\n0010') == 2\n"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n110\\n011\\n4 2\\n1000\\n1000\\n0000\\n0010\\n\") == \"2\"\nassert solution(\"4 2\\n1000\\n1000\\n0000\\n0010\\n\") == \"0\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\n110\\n011\") == \"2\"\nassert solution(\"4 2\\n1000\\n1000\\n0000\\n0010\") == \"0\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n110\\n011\\n4 2\\n1000\\n1000\\n0000\\n0010\") == \"2\"\nassert solution(\"4 2\\n1000\\n1000\\n0000\\n0010\\n5 3\\n1000\\n1000\\n0000\\n0010\") == \"0\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test case not passed.\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n110\\n011\\n4 2\\n1000\\n1000\\n0000\\n0010\") == \"2\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='3 1\\n110\\n011\\n4 2\\n1000\\n1000\\n0000\\n0010') == '2\\n'\nassert solution(stdin='3 1\\n110\\n011\\n4 2\\n1000\\n1000\\n0000\\n0010') == '0\\n'"
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"3\\n1 2 3\\n3\\n2\\n\") == \"1\\n\"\nassert solution(stdin=\"3\\n1 3 2\\n2\\n\") == \"5\\n\"\n"
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2\\n2\\n5\\n\") == \"1\\n\"\nassert solution(\"3\\n1 3 2\\n2\\n2\\n5\\n\") == \"5\\n\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n1 2 3\\n3\\n') == '1\\n'"
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\\n\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n1 2 3\\n3\\nSample Input 1:3\\nSample Output 1:1\\nSample Input 2:3\\nSample Output 2:5')"
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2\\n\") == \"1\\n\"\nassert solution(\"3\\n1 3 2\\n2\\n\") == \"5\\n\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Your solution is incorrect. Expected: {expected}, Received: {solution(input())}\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2\\n\") == \"1\\n\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n\") == \"1\\n\"\nassert solution(\"3\\n1 3 2\\n2\\n\") == \"5\\n\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == \"0\\n\"\n\nimport time"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 'crashing line', \"The program should crash at the line crashing_line\"\n\nfor i in range(1, 101):\n    for j in range(1, 101):\n        if i + j < 100:\n            continue\n        if i + j == 100:\n            print(i + j)\n        else:\n            print(i + j)\n            print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i + j)\n        print(i +"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Output the worst-case time to find the crashing line when using an optimal strategy.\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == \"0\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='1 100 20') == '0'\nassert solution(stdin='10 10 1') == '19'"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '0'"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin: str) == \"crash\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 0, \"Solution should return 0 for the given input\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0\"\n\nprint(\"def solution(stdin: str) -> str:\\n    pass\")"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Hello, world!\\n\") == \"Hello, world!\\n\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"inputs/sample1.txt\", \"r\")) == \"c\\n\"\nassert solution(open(\"inputs/sample2.txt\", \"r\")) == \"SHIP IT\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\na b c d\\na 1\\nimport d, b, c\\nb 2\\nimport d\\nimport c\\nc 1\\nimport c\\nd 0\") == \"c\"\nassert solution(\"5\\nclassa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\") == \"SHIP IT\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\na b c d\\na 1\\nimport d, b, c\\nb 2\\nimport d\\nimport c\\nc 1\\nimport c\\nd 0\") == \"c\\n\"\nassert solution(\"2\\nclassa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\") == \"SHIP IT\\n\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('sample_input.txt', 'r')) == 'SHIP IT'"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    input(\"\"\"\n4\na b c d\na 1\nimport d, b, c\nb 2\nimport d\nimport c\nc 1\nimport c\nd 0\nSample Output 1:\nc\n\nSample Input 2:\n5\nclassa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0\nSample Output 2:\nSHIP IT\n"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"classa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\") == \"c\", \"Solution is incorrect.\"\nassert solution(\"classa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\") == \"SHIP IT\", \"Solution is incorrect.\"\n\nsolution(\"classa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\")"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == \"SHIP IT\"\n"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == \"c\\n\"\nassert solution(sample_input_2) == \"SHIP IT\\n\"\n\nsample_input_1 = \"4\\na b c d\\na 1\\nimport d, b, c\\nb 2\\nimport d\\nimport c\\nc 1\\nimport c\\nd 0\"\n\nsample_input_2 = \"5\\nclassa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\na b c d\\na 1\\nimport d, b, c\\nb 2\\nimport d\\nimport c\\nc 1\\nimport c\\nd 0\\n') == ['c']\nassert solution('5\\nclassa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\\n') == ['SHIP IT', 'def solution(stdin: str) -> str:']"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"classa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\") == \"c\"\nassert solution(\"classa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\\nclassb classc myfiled exece\\nclassb 2\\nimport classc\\nimport myfiled, exece\\nclassc 1\\nimport classc\\nimport exece\\nexece 1\\nimport exece\\nmyfiled 1\\nimport exece\\nexece 0\\nexece execd 1\\nimport execd\\nexecd 2\\nimport execd\\nexecd 1\\nimport execd\\nlibe 0\\nclassb classc myfiled exece\\nclassb 2\\nimport classc\\nimport myfiled, exece\\nclassc 1\\nimport classc\\nimport exece\\nexece 1\\nimport exece\\nmyfiled 1\\nimport exece\\nexece 0\\nexece execd 1\\nimport execd\\nexecd 2\\nimport execd\\nexecd 1\\nimport execd\\nlibe 0\") == \"c\"\nassert solution(\"a b c d\\na 1\\nimport d, b, c\\nb 2\\nimport d\\nimport c\\nc 1\\nimport c\\nd 0\\na 1\\nimport d, b, c\\nb 2\\nimport d\\nimport c\\nc 1\\nimport c\\nd 0\") == \"c\"\nassert solution(\"classa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\\nclassb classc myfiled exece\\nclassb 2\\nimport classc\\nimport myfiled, exece\\nclassc 1\\nimport classc\\nimport exece\\nexece 1\\nimport exece\\nmyfiled 1\\nimport exece\\nexece 0\\nexece execd 1\\nimport execd\\nexecd 2\\nimport execd\\nexecd 1\\nimport execd\\nlibe 0\\nclassb classc myfiled exece\\nclassb 2\\nimport classc\\nimport myfiled, exece\\nclassc 1\\nimport classc\\nimport exece\\nexece 1\\nimport exece\\nmyfiled 1\\nimport exece\\nexece 0\\nexece execd 1\\nimport execd\\nexecd 2\\nimport execd\\nexecd 1\\nimport execd\\nlibe 0\\nclassb classc myfiled exece\\nclassb 2\\nimport classc\\nimport myfiled, exece\\nclassc 1\\nimport classc\\nimport exece\\nexece 1\\nimport exece\\nmyfiled 1\\nimport exece\\nexece 0\\nexece execd 1\\nimport execd\\nexecd 2\\nimport execd\\nexecd 1\\nimport execd\\nlibe 0\\nclassb classc myfiled exece\\nclassb 2\\nimport classc\\nimport myfiled, exece\\nclassc 1\\nimport classc\\nimport exece\\nexece 1\\nimport exece\\nmyfiled 1\\nimport exece\\nexece 0\\nexece execd 1\\nimport execd\\nexecd 2\\nimport execd\\nexecd 1\\nimport execd\\nlibe 0\\nclassb class"
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"\n\nassert solution(input()) == \"2\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n5+3+x\n9 10\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n20+3+x\n0 5\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n(5+3+x)*x\n9 10\n\"\"\") == \"5\"\n\nassert solution(\n\"\"\"\n(5+3+x)*x\n9 10\n\"\"\") == \"5\"\n\nassert solution(\n\"\"\"\n(20+3+x)*x\n9 10\n\"\"\") == \"5\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5+3+x\\n9 10\") == \"1\\n\"\nassert solution(\"20+3+x\\n0 5\") == \"2\\n\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('sample_input_1.txt', 'r').read()) == '1\\n'\nassert solution(open('sample_input_2.txt', 'r').read()) == '2\\n'"
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5+3+x\\n9 10\") == \"1\", \"Example 1 incorrect.\"\nassert solution(\"20+3+x\\n0 5\") == \"2\", \"Example 2 incorrect.\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5+3+x\\n9 10\") == \"1\\n\"\nassert solution(\"20+3+x\\n0 5\") == \"2\\n\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5+3+x\\n9 10') == '1'\nassert solution('20+3+x\\n0 5') == '2'"
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5+3+x\\n9 10\\n\") == \"1\"\nassert solution(\"20+3+x\\n0 5\\n\") == \"2\"\nassert solution(\"5+3+x\\n(5+3+x)\\n\") == \"1\"\nassert solution(\"5+3+x\\n(5+3+x)\\n\") == \"1\"\n\nfrom typing import List"
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5+3+x\\n9 10\") == \"1\"\nassert solution(\"20+3+x\\n0 5\") == \"2\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"yes\"\n"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 10\\n0 15\\n5 20\\n\") == \"yes\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"yes\"\n"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 'no'"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == 'yes\\n'"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 15\\n5 20\") == \"yes\"\nassert solution(\"1 15\\n0 20\") == \"no\"\n\nfrom typing import List"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 10\\n0 15\\n5 20\") == \"yes\"\nassert solution(\"2 10\\n1 15\\n0 20\") == \"no\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'yes'"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=sys.stdin) == 'yes'"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 10\\n0 15\\n5 20') == 'yes'\nassert solution('2 10\\n1 15\\n0 20') == 'no'"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4 4 4\n3\n2 green\n18 yellow\n34 red\n5 green\n\"\"\") == \"0.25\"\nassert solution(\"\"\"\n4 4 4\n4\n2 green\n6 yellow\n10 red\n14 green\n4 red\n\"\"\") == \"0\""
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    4 4 4\n    \"\"\"\n) == \"0.25\"\n\nassert solution(\n    \"\"\"\n    4 4 4\n    \"\"\"\n) == \"0.25\"\n\nassert solution(\n    \"\"\"\n    4 4 4\n    \"\"\"\n) == \"0.25\"\n\nassert solution(\n    \"\"\"\n    4 4 4\n    \"\"\"\n) == \"0.25\""
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green\") == \"0.25\"\nassert solution(\"4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red\") == \"0\""
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green\\n\") == \"0.25\\n\"\nassert solution(\"4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red\\n\") == \"0\\n\""
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green\") == \"0.25\"\nassert solution(\"4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red\") == \"0\""
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_str) == output_str\n"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green\") == \"0.25\""
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"4 4 4\n3\n2 green\n18 yellow\n34 red\n5 green\"\"\"\n) == 0.25\n\nassert solution(\n    \"\"\"4 4 4\n4\n2 green\n6 yellow\n10 red\n14 green\n4 red\"\"\"\n) == 0\n\nassert solution(\n    \"\"\"4 4 4\n10 1 2\n1 green\n3 yellow\n4 red\n4 green\n5 yellow\n6 green\"\"\"\n) == 0.75"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected\nprint(\"OK\")"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2"
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"3\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n4 3\") == \"inf\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"inf\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n4 3\") == \"inf\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n4 3\") == \"inf\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n4 3\") == \"inf\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n4 3\") == \"inf\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n4 3\") == \"inf\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n4 3\") == \"inf\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n4 3\") == \"inf\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n4 3\") == \"inf\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n4 3\") == \"inf\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n4 3\") == \"inf\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n4 3\") == \"inf\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n4 3\") == \"inf\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n4 3\") == \"inf\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n4 3\") == \"inf\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n4 3\") == \"inf\"\nassert solution(\"6 8\\n1 "
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"inf\"  # Test 1\nassert solution(open(\"test1.txt\", \"r\").read()) == \"3\"  # Test 2"
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n\") == \"3\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n\") == \"inf\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"3\\n\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"inf\\ndef solution(stdin: str) -> str: pass\\n\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"example1.txt\", \"r\")) == \"3\\n\"\nassert solution(open(\"example2.txt\", \"r\")) == \"inf\\n\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3\"\nassert solution() == \"inf\"\n\nfrom typing import List"
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n') == '3'\nassert solution('6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n') == 'inf'\n"
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(str(6) + '\\n' + '1 3\\n' + '1 4\\n' + '3 2\\n' + '4 2\\n' + '5 6\\n' + '6 5\\n' + '3 4\\n' + '4 3') == '3'\n\nassert solution(str(6) + '\\n' + '1 3\\n' + '1 4\\n' + '3 2\\n' + '4 2\\n' + '5 6\\n' + '6 5\\n' + '3 4\\n' + '4 3\\n' + '5 7') == 'inf'"
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == \"3\", \"Expected output: 3\"\nassert solution(sample_input_2) == \"inf\", \"Expected output: inf\"\n\nfrom typing import List"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\") == \"4\"\nassert solution(\"12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\\n\") == \"2\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\") == \"4\\n\"\nassert solution(\"12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\\n\") == \"2\\n\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1\\n2 3 4 5\\n') == '4'\nassert solution('12\\n2 3 4 5 6 7 4 7 8 8 12 12\\n') == '2'\n"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4\\n1 2 3 4\\n\") == \"4\"\nassert solution(\"12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\\n\") == \"2\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 4\\n1 2 3 4\\n') == '4\\n'\nassert solution('12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\\n') == '2\\n'"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\nSample Output 1: 4\\n\\n12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\\nSample Output 2: 2\\n\") == \"4\\n2\\n\"\n"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\") == \"4\"\nassert solution(\"12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\\n\") == \"2\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 4\\n1 2 3 4') == '4\\n'\nassert solution('12 3\\n2 3 4 5 6 7 4 7 8 8 12 12') == '2\\n'"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\") == \"4\\n\"\nassert solution(\"12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\\n\") == \"2\\n\""
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == 'hoose\\nnoises\\nnoise', \"Test case 1 failed\""
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(b'5\\nhoose\\nhose\\nnose\\nnoises\\nnoise\\n') == ['hoose', 'noises', 'noise']\nassert solution(b'4\\nhose\\nhoose\\oose\\n') == ['hoose','moose']"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"hoose\\noises\\noise\", \"The output should be 'hoose\\noises\\noise'.\""
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'hoose\\nnoises\\nnoise\\n'\nassert solution(stdin) == 'hoose\\nmoose\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('Sample Input 1') == 'hoose\\nnoises\\nnoise\\n', 'Sample Input 1'\nassert solution('Sample Input 2') == 'hoose\\nmoose\\ndef solution(stdin: str) -> str:\\n    pass\\n', 'Sample Input 2'"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == 'hoose\\nnoises\\nnoise\\n'"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == [\"hoose\", \"noises\", \"noise\"]\nassert solution(open(\"input.txt\", \"r\")) == [\"hoose\", \"noises\", \"noise\"]"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == [\"hoose\", \"noises\", \"noise\"]\nassert solution() == [\"hoose\", \"noises\", \"noise\"]\nassert solution() == [\"hoose\", \"moose\", \"def solution(stdin: str) -> str: pass\"]\nassert solution() == [\"hoose\", \"moose\", \"def solution(stdin: str) -> str: pass\"]"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == 'hoose'\nassert solution(sample_input2) == 'hoose'"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\nhoose\\n\"\n                \"hose\\n\"\n                \"nose\\n\"\n                \"noises\\n\"\n                \"noise\\n\") == \"hoose\\nnoises\\nnoise\\n\"\n\nassert solution(\"4\\nhose\\n\"\n                \"hoose\\n\"\n                \"oose\\n\"\n                \"moose\\n\") == \"hoose\\nmoose\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n3\\n2 3\\n4\\n\") == \"2\\n2\\n5\\n\"\nassert solution(\"2 3\\n4\\n\") == \"0\\n16\\n8\\n\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == output, f\"Test {i+1} failed. Input: {input}, Output: {output}, Expected: {expected}\"\nfor i, (input, output, expected) in enumerate(zip(stdin, stdout, expecteds)):\n    assert solution(input) == output, f\"Test {i+1} failed. Input: {input}, Output: {output}, Expected: {expected}\"\n"
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n3\\n\") == \"2\\n2\\n5\\n\"\nassert solution(\"2 3\\n4\\n\") == \"0\\n16\\n8\\n\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    1 1\n    3\n    \"\"\"\n) == \"2\\n2\\n5\\n\"\n\nassert solution(\n    \"\"\"\n    2 3\n    4\n    \"\"\"\n) == \"0\\n16\\n8\\n\"\n\nassert solution(\n    \"\"\"\n    5 5\n    5\n    \"\"\"\n) == \"0\\n0\\n5\\n\"\n\nassert solution(\n    \"\"\"\n    10 10\n    5\n    \"\"\"\n) == \"5\\n5\\n10\\n\"\n\nassert solution(\n    \"\"\"\n    50 50\n    10\n    \"\"\"\n) == \"10\\n10\\n20\\n\"\n\nassert solution(\n    \"\"\"\n    100 100\n    10\n    \"\"\"\n) == \"5\\n5\\n10\\n\"\n\nassert solution(\n    \"\"\"\n    1000 1000\n    100\n    \"\"\"\n) == \"10\\n10\\n20\\n\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n3\\n\") == \"2\\n2\\n5\\n\"\nassert solution(\"2 3\\n4\\n\") == \"0\\n16\\n8\\n\"\n"
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n3\\n\") == \"2\\n2\\n5\\n\", \"Incorrect output for sample input 1.\"\nassert solution(\"2 3\\n4\\n\") == \"0\\n16\\n8\\n\", \"Incorrect output for sample input 2.\"\n"
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '2\\n2\\n5\\n'"
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n3\") == \"2\\n2\\n5\"\nassert solution(\"2 3\\n4\") == \"0\\n16\\n8\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input1) == expected1, f\"Expected output: {expected1}, Actual output: {solution(input1)}\"\nassert solution(input2) == expected2, f\"Expected output: {expected2}, Actual output: {solution(input2)}\"\n\ninput1 = \"1 1\\n3\"\ninput2 = \"2 3\\n4\"\n\nexpected1 = \"2\"\nexpected2 = \"0\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 1\\n3\\n') == '2\\n2\\n5\\n'\nassert solution('2 3\\n4\\n') == '0\\n16\\n8\\n'\nassert solution('1 2\\n3\\n') == '1\\n2\\n0\\n'\nassert solution('3 2\\n4\\n') == '32\\n48\\n27\\n'"
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Your solution is not correct.\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 68.52419365, \"The output is incorrect.\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == solution_1(sample_input_1)\nassert solution(sample_input_2) == solution_2(sample_input_2)"
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"44.72135955\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"Output the minimum time required to reach the end of the road.\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed with input '{stdin}' and expected output '{expected_output}'.\"\n"
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n50 45 45\\n68.52419365\") == \"68.52419365\"\nassert solution(\"2\\n50 45 45\\n68.52419365\") == \"68.52419365\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n' + '50 45 45\\n') == '68.52419365'  # expected output\n"
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 44.72135955, \"The expected output is not obtained.\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(11) == \"1\"\nassert solution(5) == \"1\"\nassert solution(111) == \"1\"\nassert solution(555) == \"1\"\nassert solution(11111) == \"1\"\nassert solution(55555) == \"1\"\nassert solution(111111) == \"1\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected_output\n"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''2 3 1 5\n1 2''') == '1\\n3'\n\nassert solution('''3 4 2 3\n1 3 1''') == '1\\n1\\n0\\n2'"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3 1 5\\n1 2\") == \"1\\n3\\n2\\n\"\nassert solution(\"3 4 2 3\\n1 3 1\") == \"1\\n1\\n0\\n2\\n\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output\nprint(solution(input()))"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3 1 5\\n1 2\\n\") == \"1\\n3\\n2\\n\"\nassert solution(\"3 4 2 3\\n1 3 1\\n\") == \"1\\n1\\n0\\n2\\n\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '1\\n3\\n2\\n', \"Test case 1\"\n\nassert solution() == '1\\n1\\n0\\n2\\n', \"Test case 2\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {solution(input())}!= {expected_output}\"\nprint(solution(input()))"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Solution does not match expected output.\\nExpected: {expected}\\nGot: {solution(stdin)}\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n2 5\\n1 1\\n2 2 3 2 2\\n5 3\\n2 2 3 2 2\\n2 2\\n\") == \"3\"\n"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 3, \"The correct output should be: 3\"\n"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 5\\n1 1\") == 3\nassert solution(\"5 3\\n2 2 3 2 2\") == 2"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Sample Input {i+1}:\\n{input()}\\nExpected Output {i+1}:\\n{output}\\nOutput:\\n{solution(input())}\"\nfor i, (N, K) in enumerate(input().split()):\n    assert int(N) <= 100, f\"Sample Input {i+1}:\\n{input()}\\nInvalid input for N: {N}\"\n    assert 2 <= int(K) <= 5, f\"Sample Input {i+1}:\\n{input()}\\nInvalid input for K: {K}\"\n    for j in range(int(N)):\n        colors = list(map(int, input().split()))\n        if len(set(colors))!= len(colors):\n            print(\"Invalid input for N: duplicate colors\")\n            break\n        colors.sort()\n        for k in range(int(K)-1):\n            if colors[k] == colors[k+1]:\n                print(\"Invalid input for N: consecutive marbles of same color\")\n                break\n    else:\n        print(f\"Solution for Input {i+1}: {int(N)-K}\")\n"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n2 5\n1 1\n\"\"\") == \"\"\"\n3\n\"\"\"\n\nassert solution(\n\"\"\"\n5 3\n2 2 3 2 2\n\"\"\") == \"\"\"\n2\n\"\"\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 5\\n1 1\\n\") == \"3\\n\"\nassert solution(\"5 3\\n2 2 3 2 2\\n\") == \"2\\n\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 5\\n1 1\\n5 3\\n2 2 3 2 2\\n') == '3'\nassert solution('2 5\\n2 1\\n5 3\\n2 2 3 2 2\\n') == '2'"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n100 100\\n50 50\") == \"50\\n\"\nassert solution(\"2\\n0 50\\n50 0\") == \"25\\n\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n100 100\\n50 50\\n') == '50\\n'\nassert solution('2\\n0 50\\n50 0\\n') == '25\\n'"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"50\\n\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('sample_input_1.txt')) == '50'\nassert solution(open('sample_input_2.txt')) == '25'"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"50\\n\"\n"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(r\"\"\"\n2\n100 100\n50 50\n\"\"\") == \"50\"\n\nassert solution(r\"\"\"\n2\n0 50\n50 0\n\"\"\") == \"25\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution( \"\"\"\n        2\n        100 100\n        50 50\n\"\"\") == 50\n\nassert solution( \"\"\"\n        2\n        0 50\n        50 0\n\"\"\") == 25"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"25\", \"The output is incorrect.\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n100 100\\n50 50\\n\") == \"50\\n\"\nassert solution(\"2\\n0 50\\n50 0\\n\") == \"25\\n\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n100 100\\n50 50\") == \"50\"\nassert solution(\"2\\n0 50\\n50 0\") == \"25\"\n\nfrom math import *"
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Test {test_case_number} failed. Expected: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"160\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == \"160\"\nassert solution(sample_input2) == \"250\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"160\", \"The total number of seconds during which the bridge must be unavailable for road traffic is incorrect\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"160\", \"Incorrect output for sample input 1\"\nassert solution(stdin) == \"250\", \"Incorrect output for sample input 2\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '160\\n'"
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=None) == \"160\", \"Incorrect output for sample case 1\"\n\nassert solution(stdin=\"2\\n100\\n200\\n\") == \"160\", \"Incorrect output for sample case 2\"\n\nassert solution(stdin=\"3\\n100\\n200\\n2010\\n\") == \"250\", \"Incorrect output for sample case 3\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"160\\n250\", \"Your solution is incorrect\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 160\nassert solution(2) == 250\n\nfrom typing import List"
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 'TODO'"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4 2\n0 1 1\n2 3 1\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n5 5\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3\n\"\"\") == \"0\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"test_input.txt\").read()) == \"2\"\nassert solution(open(\"test_input2.txt\").read()) == \"0\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n0 1 1\\n2 3 1\\n\") == \"2\\n\"\nassert solution(\"5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n\") == \"0\\n\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == '2\\n'\n"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\") == \"0\", \"Expected output 0, got: \" + solution(\"5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\")"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n0 1 1\\n2 3 1\") == \"2\\n\"\nassert solution(\"5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\") == \"0\\n\"\n"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 2\\n0 1 1\\n2 3 1\\n') == '2\\n'\nassert solution('5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n') == '0\\n'"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 2\\n0 1 1\\n2 3 1\\n') == '2'\nassert solution('5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n') == '0'"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n0 1 1\\n2 3 1\\nSample Input 1:\\n4 2\\n0 1 1\\n2 3 1\\nSample Output 1:\\n2\\n\\nSample Input 2:\\n5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\nSample Output 2:\\n0\\n\") == \"2\\n\""
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '1 1\\n1 2\\n2 3 4'"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == expected_output, f\"The output {solution()} does not match the expected output {expected_output}\""
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n3 3 2 1\\n3 3 3\") == 1\nassert solution(\"4 2\\n3 3 2 2\\n6 3\") == -1\n"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1 1\\n1 2\\n2 3 4\\n\"\n"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'def solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 3\\n3 3 2 1\\n3 3 3\\n') == '1 1\\n1 2\\n2 3 4\\n'\nassert solution('4 2\\n3 3 2 2\\n6 3\\n') == '-1'\n"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 4\n"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\\n1\\n1\\n2\\n1\\n\"\n"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n3 3 2 1\\n3 3 3\") == [1, 1]\nassert solution(\"4 2\\n3 3 2 2\\n6 3\") == [-1]"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 3\\n3 3 2 1\\n3 3 3') == ['1 1', '1 2']\nassert solution('4 2\\n3 3 2 2\\n6 3') == [-1]"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n    2 3 10\n    0 0 D\n    10 1 L\n    \"\"\") == \"10.0\\n10.0\\n0.0\"\n\nassert solution(\"\"\"\n    4 3 7\n    1 0 D\n    3 0 D\n    4 1 L\n    6 2 D\n    \"\"\") == \"10.0\\n4.0\\n1.0\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 3 10\\n0 0 D\\n10 1 L\\n') == '10.0\\n10.0\\n0.0\\n'\nassert solution('4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\\n') == '10.0\\n4.0\\n1.0\\n'"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    2 3 10\n    0 0 D\n    10 1 L\n    \"\"\"\n) == \"10.0\\n10.0\\n0.0\"\n\nassert solution(\n    \"\"\"\n    4 3 7\n    1 0 D\n    3 0 D\n    4 1 L\n    6 2 D\n    \"\"\"\n) == \"10.0\\n4.0\\n1.0\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n2 3 10\n0 0 D\n10 1 L\n''') == '10.0\\n10.0\\n0.0\\n'\n\nassert solution('''\n4 3 7\n1 0 D\n3 0 D\n4 1 L\n6 2 D\n''') == '10.0\\n4.0\\n1.0\\n'"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input1) == output1, \"The solution is incorrect.\"\nassert solution(input2) == output2, \"The solution is incorrect.\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\\n\") == \"10.0\\n10.0\\n0.0\"\nassert solution(\"4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\\n\") == \"10.0\\n4.0\\n1.0\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\\n\") == \"10.0\\n10.0\\n0.0\\n\"\nassert solution(\"4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\\n\") == \"10.0\\n4.0\\n1.0\\n\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 3 10\\n0 0 D\\n10 1 L') == '10.0\\n10.0\\n0.0'\nassert solution('4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D') == '10.0\\n4.0\\n1.0'"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\\n\\n4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\\n\") == \"10.0\\n4.0\\n1.0\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('ex eoii jpxbmx cvz uxju sjzzcn jzz') == 'we will avenge our dead parrot arr'\nassert solution('wl jkd') == 'Impossible'\n"
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"ex eoii jpxbmx cvz uxju sjzzcn jzz\\nwl jkd\\n\"\n) == \"we will avenge our dead parrot arr\\n\"\nassert solution(\n    \"ex eoii jpxbmx cvz uxju sjzzcn jzz\\nwlk jzz\\n\"\n) == \"Impossible\"\nassert solution(\n    \"ex eoii jpxbmx cvz uxju sjzzcn jzz\\nwlk jzz\\ny\\n\"\n) == \"Impossible\"\nassert solution(\n    \"ex eoii jpxbmx cvz uxju sjzzcn jzz\\nwlk jzz\\nyi\\n\"\n) == \"Impossible\"\n\nprint(\"All test cases pass\")"
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Hamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120\\nAmsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10\\n') == '68.3'\nassert solution('Amsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10\\n') == 'IMPOSSIBLE'\n\nfrom typing import List"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('Hamburg Bremen\\n'\n                 '3\\n'\n                 'Hamburg Bremen 15 68 10 5\\n'\n                 'Hamburg Bremen 46 55 50 60\\n'\n                 'Bremen Frankfurt 14 226 10 120\\n'\n                 ) == '68.3\\n'\n\nassert solution('Amsterdam Rotterdam\\n'\n                 '1\\n'\n                 'Amsterdam Utrecht 10 22 5 10\\n'\n                 ) == 'IMPOSSIBLE\\n'\n\nfrom typing import List, Tuple"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_1) == expected_output_1, f\"Test case {test_case} failed.\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"68.3\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Hamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120\") == 68.3\nassert solution(\"Amsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Hamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120\\n\") == 68.3\nassert solution(\"Amsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('Hamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120') == 68.3\nassert solution('Amsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10') == 'IMPOSSIBLE'"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('Hamburg Bremen') == 68.3\nassert solution('Amsterdam Rotterdam') == 'IMPOSSIBLE'"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 68.3, \"IMPOSSIBLE\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Hamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120\") == 68.3, \"Incorrect output\"\nassert solution(\"Amsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10\") == \"IMPOSSIBLE\", \"Incorrect output\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Test failed: solution({input()})!= output({output()})\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n3\n*-*.*\n|.|.|\n*.*-*\n|...|\n*.*.*\n''') == '3'\n\nassert solution('''\n2\n*.*\n...\n*.*\n''') == '4'"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_str1) == output_str1\nassert solution(input_str2) == output_str2\n"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('example_input.txt', 'r').read()) == '3\\n'\nassert solution(open('example_input.txt', 'r').read()) == '4\\n'"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n*-*.*\\n|.|.| \\n*.*-* \\n|...|\\n*.*.*\") == \"3\\n\"\nassert solution(\"2\\n*.*\\n... \\n*.*\\n\") == \"4\\n\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*\") == \"3\\n\"\nassert solution(\"2\\n*.*\\n...\\n*.*\") == \"4\\n\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution(stdin=\"3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*\")) == \"3\\n\"\nassert solution(solution(stdin=\"2\\n*.*\\n...\\n*.*\\n\")) == \"4\\n\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n3\n*-*.*\n|.|.|\n*.*-*\n|...|\n*.*.*\n''') == '3'\n\nassert solution('''\n2\n*.*\n...\n*.*\n''') == '4'"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*\") == \"3\\n\"\nassert solution(\"2\\n*.*\\n...\\n*.*\\n\") == \"4\\n\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('8\\n12210020\\n4\\n1111') == '4\\n'\nassert solution('4\\n1111') == 'impossible'"
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(input())) == \"impossible\"\n"
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8\\n12210020\\n4\\n1111\") == \"4\"\nassert solution(\"4\\n1111\") == \"impossible\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"8\\n12210020\\n\"\n) == \"4\\n\", \"Sample Input 1\"\n\nassert solution(\n    \"4\\n1111\\n\"\n) == \"impossible\\n\", \"Sample Input 2\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"impossible\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8\\n12210020\\n\") == \"4\"\nassert solution(\"4\\n1111\\n\") == \"impossible\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"impossible\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str) == output_str, f\"Expected output: {output_str}, but got: {solution(input_str)}\"\n\ninput_str = \"8\\n12210020\"\noutput_str = \"4\"\nsolution(input_str)\n\ninput_str = \"4\\n1111\"\noutput_str = \"impossible\"\nsolution(input_str)"
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8\\n12210020\\n\") == \"4\"\nassert solution(\"4\\n1111\\n\") == \"impossible\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n3\n500 500 499\n0 0 999\n1000 1000 200\n\"\"\"\n) == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n\"\n\nassert solution(\n\"\"\"\n4\n250 250 300\n750 250 300\n250 750 300\n750 750 300\n\"\"\"\n) == \"Bill will be bitten.\\n\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n500 500 499\\n0 0 999\\n1000 1000 200\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n\"\nassert solution(\"4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300\") == \"Bill will be bitten.\\n\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n500 500 499\\n0 0 999\\n1000 1000 200\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n\"\nassert solution(\"4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300\") == \"Bill will be bitten.\\n\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"test.txt\", \"r\")) == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\"\nassert solution(open(\"input.txt\", \"r\")) == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\"\nassert solution(open(\"output.txt\", \"r\")) == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\"\nassert solution(open(\"test_sample1.txt\", \"r\")) == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\"\nassert solution(open(\"test_sample2.txt\", \"r\")) == \"Bill will be bitten.\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''3\n500 500 499\n0 0 999\n1000 1000 200''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n'\n\nassert solution('''4\n250 250 300\n750 250 300\n250 750 300\n750 750 300''') == 'Bill will be bitten.\\n'"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt').read()) == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\"\n"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt').read()) == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\"\nassert solution(open('sample_input_1.txt').read()) == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\"\nassert solution(open('sample_input_2.txt').read()) == \"Bill will be bitten.\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n500 500 499\\n0 0 999\\n1000 1000 200') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\n\nassert solution('4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300') == 'Bill will be bitten.'"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n500 500 499\\n0 0 999\\n1000 1000 200\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\"\n\nassert solution(\"4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300\") == \"Bill will be bitten.\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 3\\n++xx+x++\") == \"++xx+o++\\n\"\nassert solution(\"8 3\\nxxxxxxxx\") == \"xxoooooo\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 3\\n++xx+x++\") == \"++xx+o++\"\nassert solution(\"8 3\\nxxxxxxxx\") == \"xxoooooo\"\n"
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 3\\n++xx+x++\") == \"++xx+o++\"\nassert solution(\"8 3\\nxxxxxxxx\") == \"xxoooooo\"\n"
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('8 3\\n++xx+x++') == '++xx+o++'\nassert solution('8 3\\nxxxxxxxx') == 'xxoooooo'"
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 3\\n++xx+x++\") == \"++xx+o++\"\nassert solution(\"8 3\\nxxxxxxxx\") == \"xxoooooo\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 3\\n++xx+x++\\n\") == \"++xx+o++\"\nassert solution(\"8 3\\nxxxxxxxx\\n\") == \"xxoooooo\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == \"++xx+o++\"\nassert solution(sample_input_2) == \"xxoooooo\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"++xx+o++\", \"Test failed\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input(1)) == '++xx+o++'\nassert solution(sample_input(2)) == 'xxoooooo'"
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('8 3\\n++xx+x++') == '++xx+o++'\nassert solution('8 3\\nxxxxxxxx') == 'xxoooooo'"
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Lost is Close to Lose\") == \"close: lose\\nhe: the\\nin: inc is\\ninc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\\n\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Lost is Close to Lose\\n\\n***\") == \"close: lose\\nhe: the\\nin: inc is\\nin: in\\nlose: close lost\\nlost: lose\\nthe: he\\n\\n***\"\nassert solution(\"The fox said, \\\"When?\\\"\\n\\n***\") == \"clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\nthe: he\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\\n\\n***\") == \"Lorem: ipsum dolor sit amet, consectetur adipiscing elit.\\n\\n***\"\nassert solution(\"This is a test string for spell checker testing.\\n\\n***\") == \"This: a test string for spell checker testing.\\n\\n***\"\nassert solution(\"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\\n***\") == \"Lorem: ipsum dolor sit amet, consectetur adipiscing elit.\\n\\n***\"\nassert solution(\"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\\n***\") == \"Lorem: ipsum dolor sit amet, consectetur adipiscing elit.\\n\\n***\"\nassert solution(\"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\\n***\") == \"Lorem: ipsum dolor sit amet, consectetur adipiscing elit.\\n\\n***\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"close: lose\\nhe: the\\ninc is\\nin\\nis\\nlose: close lost\\nlost: lose\\nthe: he\\n\"\n"
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Lost is Close to Lose\") == \"close: lose\\nhe: the\\nin: inc is\\ninc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\"\nassert solution(\"The fox said, \\\"When?\\\"\") == \"clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\nthe: he\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"The quick brown fox jumps over the lazy dog.\") == \"over: lazy the quick brown fox\"\nassert solution(\"The quick brown fox jumps over the lazy dog. The dog is very frightening.\") == \"over: lazy the quick brown fox\\ndog: very frightening\\nvery: very\\nfrightening: frightening\"\nassert solution(\"\") == \"***\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\nLost is Close to Lose\n\n\"Better Documents Inc. wants to add Typo Checking in to the\nnext generation of word processors,\" he said.\n\nSample Input 1:\nLost is Close to Lose\n\n\"Better Documents Inc. wants to add Typo Checking in to the\nnext generation of word processors,\" he said.\n***\n\nSample Output 1:\nclose: lose\nhe: the\nin: inc is\ninc: in\nis: in\nlose: close lost\nlost: lose\nthe: he\n\nSample Input 2:\nThe fox said, \"When?\"\n\"Not till 12 o'clock\", replied the hen.\n\"That clock is stopped, it will never strike.\", he said.\n***\n\nSample Output 2:\nclock: oclock\nhe: hen the\nhen: he when\nis: it\nit: is\noclock: clock\nthe: he\ntill: will\nwhen: hen\nwill: till"
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected"
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Lost is Close to Lose\\n\\n\"\n                 \"Better Documents Inc. wants to add Typo Checking in to the\\n\"\n                 \"next generation of word processors,\\n\"\n                 \"he said. ***\\n\\n\"\n                 \"Sample Input 1:\\n\"\n                 \"Lost is Close to Lose\\n\\n\"\n                 \"Sample Output 1:\\n\"\n                 \"close: lose\\n\"\n                 \"he: the\\n\"\n                 \"in: inc is\\n\"\n                 \"inc: in\\n\"\n                 \"is: in\\n\"\n                 \"lose: close lost\\n\"\n                 \"lost: lose\\n\"\n                 \"the: he\\n\\n\"\n                 \"Sample Input 2:\\n\"\n                 \"The fox said, \\\"When?\\\"\\n\\n\"\n                 \"Sample Output 2:\\n\"\n                 \"clock: oclock\\n\"\n                 \"he: hen the\\n\"\n                 \"hen: he when\\n\"\n                 \"is: it\\n\"\n                 \"it: is\\n\"\n                 \"oclock: clock\\n\"\n                 \"the: he\\n\"\n                 \"till: will\\n\"\n                 \"when: hen\\n\"\n                 \"will: till\\n\") == \"\"\"\nclose: lose\nhe: the\nin: inc is\ninc: in\nis: in\nlose: close lost\nlost: lose\nthe: he\n\"\"\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2"
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Lost is Close to Lose\") == \"close: lose\\nhe: the\\nin: inc is\\inc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\"\nassert solution(\"The fox said, \\\"When?\\n\\\"Not till 12 o'clock, replied the hen. \\\"That clock is stopped, it will never strike.\\\"\") == \"clock: oclock\\nhe: hen the\\nen: it\\nhe: he when\\nit: is\\nhe: hen till\\ntill: will\\nwhen: hen\\nwill: till\"\nassert solution(\"***\") == \"***\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Lost is Close to Lose\\n\"\n\"Better Documents Inc. wants to add Typo Checking in to the\\n\"\n\"next generation of word processors,\\n\"\n\"he said. Not till 12 o'clock, replied the hen. That clock is stopped, it will never strike.\\n\") == \\\n\"close: lose\\nhe: the\\nin: inc is\\ninc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\\n\"\n\nassert solution(\"The fox said, \\\"When?\\\"\\n\"\n\"Not till 12 o'clock, replied the hen. That clock is stopped, it will never strike.\\n\") == \\\n\"clock: oclock\\nhe: hen the\\nen: it\\nis: it\\noclock: clock\\nthe: he\\nwill: till\\nwhen: hen\\n\"\n\nassert solution(\"When's the time to breakfast?\\n\"\n\"The man walked into the bathroom.\\n\"\n\"He slipped out the door.\\n\"\n\"He was suddenly tired.\\n\"\n\"The man turned around and walked back in.\\n\") == \\\n\"breakfast: tired\\nman: man walked\\nbathroom: bathroom the\\ndoor: door the\\ntired: man was suddenly\\n\"\n\nassert solution(\"The cat loves me like a bear.\\n\"\n\"But if I don't care about cats, they're worthless.\\n\"\n\"I think the bears were made to hold cats alive.\\n\"\n\"So, I'm not worried.\\n\") == \\\n\"love: me\\nbears: made\\nhats: hold\\nsure: I'm not\\n\"\n\nassert solution(\"A man is a martyr for his master.\\n\"\n\"He's gone on business with his master.\\n\"\n\"He's made the master his lord.\\n\"\n\"He's a martyr for his master.\\n\") == \\\n\"master: his lord\\nfor: his\\nmaster: his lord\\nhis: his\\n\"\n\nassert solution(\"I've never seen a man that isn't a martyr for his master.\\n\"\n\"He's gone on business with his master.\\n\"\n\"He's made the master his lord.\\n\"\n\"He's a martyr for his master.\\n\"\n\"He's always a good martyr for a master.\\n\") == \\\n\"master: his lord\\nfor: his\\nmaster: his lord\\nhis: his\\nalways: always good\\n\"\n\nassert solution(\"When was the first time I noticed a cat?\\n\"\n\"It was in 1964.\\n\"\n\"It was the first time I noticed a cat.\\n\"\n\"It was not the first time I noticed a cat.\\n\") == \\\n\"first: not the first\\nnotice: notice first\\ncat: cat the\\nfirst: it was\\n\"\n\nassert solution(\"When was the first time I saw a cat?\\n\"\n\"It was in 1964.\\n\"\n\"It was the first time I saw a cat.\\n\"\n\"It was not the first time I saw a cat.\\n\") == \\\n\"first: not the first\\nsaw: saw first\\ncat: cat the\\nfirst: it was\\n\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, \"Expected: {}, Received: {}\".format(output, solution(input()))"
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\n1 2 7 3 8 9 4 5 10 6\") == \"1\\n\", \"Sample Input 1\"\nassert solution(\"10\\n3 8 1 9 4 5 2 7 10 6\") == \"2\\n\", \"Sample Input 2\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\n1 2 7 3 8 9 4 5 10 6\") == \"1\"\nassert solution(\"10\\n3 8 1 9 4 5 2 7 10 6\") == \"2\"\n"
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str(input())) == solution(str"
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\n1 2 7 3 8 9 4 5 10 6\") == \"1\\n\", \"Input 1\"\nassert solution(\"10\\n3 8 1 9 4 5 2 7 10 6\") == \"2\\n\", \"Input 2\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1\", \"Expected output: 1\\nGot: {}\".format(solution())"
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\n1 2 7 3 8 9 4 5 10 6\\n\") == \"1\\n\"\nassert solution(\"10\\n3 8 1 9 4 5 2 7 10 6\\n\") == \"2\\n\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input1), \"Incorrect answer for sample input 1.\"\nassert solution(input2), \"Incorrect answer for sample input 2.\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\n1 2 7 3 8 9 4 5 10 6\") == \"1\\n\"\nassert solution(\"10\\n3 8 1 9 4 5 2 7 10 6\") == \"2\\n\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('$0.142857$ 6') == '1/7', \"Test 1 failed.\"\nassert solution('$1.6$ 1') == '5/3', \"Test 2 failed.\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('$0.142857 6') == '1/7', 'Test case 1 failed'\nassert solution('$1.6 1') == '5/3', 'Test case 2 failed'"
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\", \"Sample Output 1\"\nassert solution(\"1.6 1\") == \"5/3\", \"Sample Output 2\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('0.142857 6') == '1/7'\nassert solution('1.6 1') == '5/3'"
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"$0.142857$ $6$\") == \"1/7\"\nassert solution(\"$1.6 1\") == \"5/3\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\", \"The solution should be 1/7, not {}\".format(solution(\"0.142857 6\"))\n\nassert solution(\"1.6 1\") == \"5/3\", \"The solution should be 5/3, not {}\".format(solution(\"1.6 1\"))"
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\", \"Test 1 failed\"\nassert solution(\"1.6 1\") == \"5/3\", \"Test 2 failed\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"$0.142857$ 6\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\"\n"
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"$0.142857 6\") == \"1/7\"\nassert solution(\"$1.6 1\") == \"5/3\"\nassert solution(\"0.142857 6 4\") == \"0.5367796086455126\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == 6\nassert solution(open('input.txt', 'r')) == 10"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n0 0 0\\n2\\n0 0 1\\n') == 6\nassert solution('2\\n0 0 0\\n0 0 1\\n') == 10"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0 0\\n0 0 1\") == 6\nassert solution(\"0 0 0\\n0 0 1\") == 10"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Test 1 failed.\"\nassert solution(sample_input_2) == sample_output_2, \"Test 2 failed.\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Expected output: {output()}, but got: {solution(input())}\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n0 0 0\\n2\\n0 0 1\\n3\\n0 1 0\\n4\\n1 0 0\\n5\\n1 1 0\\n6\\n1 2 0\\n7\\n2 0 0\\n8\\n2 1 0\\n9\\n2 2 0\\n10\\n0 0 0\") == \"6\\n\", \"Test case 1 failed\"\nassert solution(\"2\\n0 0 0\\n0 0 1\\n3\\n0 1 0\\n4\\n1 0 0\\n5\\n1 1 0\\n6\\n1 2 0\\n7\\n2 0 0\\n8\\n2 1 0\\n9\\n2 2 0\\n10\\n0 0 0\") == \"10\\ndef solution(stdin: str) -> str:\n    pass\\n\", \"Test case 2 failed\"\nassert solution(\"1\\n0 0 0\\n0 0 1\\n1\\n1 0 0\\n2\\n1 1 0\\n3\\n1 2 0\\n4\\n2 0 0\\n5\\n2 1 0\\n6\\n2 2 0\\n7\\n3 0 0\\n8\\n3 1 0\\n9\\n3 2 0\\n10\\n0 0 0\") == \"6\\ndef solution(stdin: str) -> str:\n    pass\\n\", \"Test case 3 failed\"\nassert solution(\"1\\n0 0 0\\n0 0 1\\n1\\n1 0 0\\n2\\n1 1 0\\n3\\n1 2 0\\n4\\n2 0 0\\n5\\n2 1 0\\n6\\n2 2 0\\n7\\n3 0 0\\n8\\n3 1 0\\n9\\n3 2 0\\n10\\n0 0 0\") == \"10\\ndef solution(stdin: str) -> str:\n    pass\\n\", \"Test case 4 failed\"\nassert solution(\"1\\n0 0 0\\n0 0 1\\n1\\n1 0 0\\n2\\n1 1 0\\n3\\n1 2 0\\n4\\n2 0 0\\n5\\n2 1 0\\n6\\n2 2 0\\n7\\n3 0 0\\n8\\n3 1 0\\n9\\n3 2 0\\n10\\n0 0 0\") == \"6\\ndef solution(stdin: str) -> str:\n    pass\\n\", \"Test case 5 failed\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 6"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"6\\n\"\nassert solution(input()) == \"10\\n\"\n"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Input {input()} and Output {output} are not matching.\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == 1234\n"
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n-1 2 -1\\n2 2\\n1 -1 1\\n\") == \"1\"\n\nassert solution(\"7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\\n\") == \"1\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"3\\n-1 2 -1\\n2 2\\n1 -1 1\") == \"1\\n\"\nassert solution(stdin=\"7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\") == \"1\\n\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '1'\n"
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Test failed: {solution(input())}!= {output()}\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n-1 2 -1\\n2 2\\n1 -1 1\") == \"1\\n\", \"Solution should return 1\"\nassert solution(\"7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\") == \"1\\n\", \"Solution should return 1\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0\\n\"\nassert solution(\"3\\n-1 2 -1\\n2 2\\n1 -1 1\\n\") == \"1\\n\"\nassert solution(\"7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\\n\") == \"1\\n\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 1, \"The number of valid colorings is not 1\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n-1 2 -1\\n2 2\\n1 -1 1\") == \"1\\n\"\nassert solution(\"7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\") == \"1\\n\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 1, \"The solution is incorrect\"\n\nprint(\"The solution is correct\")"
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1\" # Example 1"
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1001\") == \"3\"\nassert solution(\"1111\") == \"1\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1001') == '3', \"Output must be '3'.\"\nassert solution('1111') == '1', \"Output must be '1'.\"\n\nfrom typing import List"
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1001\") == \"3\", \"Test case 1 failed\"\nassert solution(\"1111\") == \"1\", \"Test case 2 failed\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1001\") == \"3\\n\"\nassert solution(\"1111\") == \"1\\n\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1001') == '3\\n'\nassert solution('1111') == '1\\n'"
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1001\") == \"3\\n\", \"Output 1\"\nassert solution(\"1111\") == \"1\\n\", \"Output 2\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1001') == '3', \"Test case 1 failed\"\nassert solution('1111') == '1', \"Test case 2 failed\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1001') == '3'\nassert solution('1111') == '1'"
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1001') == '3', \"Invalid output for the example 1.\"\nassert solution('1111') == '1', \"Invalid output for the example 2.\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1001) == 3\nassert solution(1111) == 1"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Solution does not match expected output.\\nInput: {input()}\\nOutput: {solution(input())}\"\n"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1 1\") == \"LLL\\n\"\nassert solution(\"5\\n1 2 2 1 2\") == \"LLRLR\\n\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='3\\n1 1 1\\n') == 'LLL'\nassert solution(stdin='5\\n1 2 2 1 2\\n') == 'LLRLR'"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, but got {solution(stdin)}\"\n"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n3\n1 1 1\n''') == '''\nLLL\n'''\n\nassert solution('''\n5\n1 2 2 1 2\n''') == '''\nLLRLR\n'''"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(solution(solution(stdin: str))) == \"LLRRLL\"\nassert solution(solution(solution(stdin: str
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"LLL\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1 1\\n\") == \"LLL\"\nassert solution(\"5\\n1 2 2 1 2\\n\") == \"LLRLR\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1 1 1\\n1 2 2 1 2') == 'LLL\\n'\nassert solution('5\\n1 2 2 1 2\\n1 3 3 1 4 5\\n1 4 4 1 5 6\\n1 5 5 1 6 7\\n1 6 6 1 7 8\\n1 7 7 1 8 9') == 'LLRLR\\n'"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000\\n\") == 25000000000021, \"Solution does not satisfy the condition\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '49000000000070'\n"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"49000000000070\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000') == '49000000000070\\n'\nassert solution('6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000') == '25000000000021\\n'"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '49000000000070\\n', \"Incorrect output\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == \"25000000000021\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"49000000000070\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000\") == \"49000000000070\\n\"\nassert solution(\"6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000\\n7 1 7000000\") == \"25000000000021\\n\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000') == '49000000000070'\nassert solution('6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000') == '25000000000021'"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000\") == \"49000000000070\\n\"\nassert solution(\"6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000\\n\") == \"25000000000021\\n\"\nassert solution(\"6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000\\n\") == \"25000000000021\\n\"\nassert solution(\"1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000\\n\") == \"49000000000070\\n\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == \"2\\n2\\n0\\n1\\n2\\n2\\n3\"\nassert solution(sample_input2) == \"Yeah!\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 3\") == \"Yeah!\\n\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"Yeah!\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == output, f\"Test failed for {input} and expected output {output}\" for input, output in zip(input_list, output_list)"
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\\n\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 3\\n\") == \"Yeah!\\n\"\nassert solution(\"4 3\\n0 1\\n1 0\\n2 3\\n3 2\\n\") == \"3\\n2\\n1\\n0\\n2\\n1\\n\"\nassert solution(\"4 3\\n0 1\\n1 0\\n2 3\\n3 3\\n\") == \"Yeah!\\n\"\nassert solution(\"4 2\\n0 1\\n1 0\\n2 3\\n3 2\\n\") == \"3\\n2\\n1\\n0\\n2\\n1\\n\"\nassert solution(\"4 2\\n0 1\\n1 0\\n2 3\\n3 3\\n\") == \"Yeah!\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 4\\n\") == \"Yeah!\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 4\\n\") == \"Yeah!\\n\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\n\nfrom typing import List"
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\\n\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 3\\n\") == \"Yeah!\\n\"\nassert solution(\"5 4\\n0 1\\n1 0\\n2 3\\n3 2\\n4 1\\n\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\\n\") == \"Yeah!\\n\"\n"
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 3\") == \"Yeah!\\n\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '2\\n2\\n0\\n1\\n2\\n2\\n3'"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"POSSIBLE\\n1 3\\n2 3\"\nassert solution(2) == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(3)) == 'POSSIBLE\\n1 3\\n2 3'\nassert solution(str(2)) == 'IMPOSSIBLE'"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n1 1 2') == 'POSSIBLE\\n1 3\\n2 3'\nassert solution('2\\n1 2') == 'IMPOSSIBLE'"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2\n\nfrom typing import List"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 'POSSIBLE\\n1 3\\n2 3'\nassert solution(2) == 'IMPOSSIBLE'"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"POSSIBLE\\n1 3\\n2 3\\n\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 'POSSIBLE\\n1 3\\n2 3'"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"IMPOSSIBLE\", \"Your solution is incorrect\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0.5 0.5 0.5\\n\"\n"
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0.5 0.5 0.5\", \"Incorrect output for input 1\"\nassert solution(stdin) == \"0.0 0.0 -0.0\", \"Incorrect output for input 2\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.5 0.5 0.5\"\nassert solution(\"-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.0 0.0 -0.0\"\n"
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 0, \"Please implement the solution correctly.\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([str(x) for x in [0, 0, 0]]) == '0.5 0.5 0.5'\nassert solution([str(x) for x in [1, 0, 0]]) == '0.0 0.0 -0.0'\nassert solution([str(x) for x in [-1, 0, 0]]) == '0.0 0.0 -0.0'\nassert solution([str(x) for x in [0, 1, 0]]) == '0.5 0.5 0.5'\nassert solution([str(x) for x in [0, 0, 1]]) == '0.5 0.5 0.5'\n"
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n\") == \"0.5 0.5 0.5\"\nassert solution(\"-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n\") == \"0.0 0.0 -0.0\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n0 0 0\n1 0 0\n0 1 0\n0 0 1\n''') == '''\n0.5 0.5 0.5\n'''\n\nassert solution('''\n-1 0 0\n1 0 0\n0 1 0\n0 0 1\n''') == '''\n0.0 0.0 -0.0\n'''"
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.5 0.5 0.5\\n\"\nassert solution(\"-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.0 0.0 -0.0\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.5 0.5 0.5\"\nassert solution(\"-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.0 0.0 -0.0\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == '2\\n3 2 2 1 5\\n3 2 2'\nassert solution(sample_input2) == '0\\n17 17 17'"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == expected, f\"Test failed: {solution()} should be {expected}\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\n3 6 2 3 2 2 2 1 5 6\") == \"2\\n3 2 2 1 5\\n3 2 2\"\nassert solution(\"3\\n17 17 17\") == \"0\\n17 17 17\"\n"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Test case failed: {stdin}!= {expected_output}\"\n"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == \"2\\n3 2 2 1 5\\n3 2 2\\n6 6\"\nassert solution(sample_input_2) == \"0\\n17 17 17\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 2\nassert solution() == 3\nassert solution() == 6"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\n3 6 2 3 2 2 2 1 5 6\") == \"2\\n3 2 2 1 5\\n3 2 2\"\nassert solution(\"3\\n17 17 17\") == \"0\\n17 17 17\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10\\n3 6 2 3 2 2 2 1 5 6') == '2\\n3 2 2 1 5\\n3 2 2\\n6 6'"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"Output\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt').read()) == \"\"\"2\n3 2 2 1 5\n3 2 2\n6 6\"\"\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n') == 'IMPOSSIBLE'"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3\\n\") == \"74.6666666667\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"IMPOSSIBLE\", \"Output 1 should be IMPOSSIBLE\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3\") == \"74.6666666667\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == 'IMPOSSIBLE'\nassert solution(sample_input2) == '74.6666666667'"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == 'IMPOSSIBLE'\n\nassert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n2 3\n''') == '74.6666666667'"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3\\n\") == \"74.6666666667\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2') == 'IMPOSSIBLE'\nassert solution('3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3') == '74.6666666667'"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n\") == \"IMPOSSIBLE\"\n\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3\\n\") == \"74.6666666667\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '0\\n1\\n1\\n1\\n1\\n1\\n0\\n'"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"0\\n2\\n2\\n1\\n2\\n2\\n1\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"0\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n\") == \"1\\n2\\n1\\n2\\n2\\n1\\n\"\nassert solution(\"7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\\n\") == \"0\\n0\\n0\\n0\\n0\\n0\\n\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n\") == \"1\\n2\\n1\\n2\\n2\\n1\\n\"\nassert solution(\"7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\\n\") == \"0\\n0\\n0\\n0\\n0\\n\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '0\\n2\\n1\\n2\\n2\\n1\\n'"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('sample_input1.txt', 'r')) == '1\\n2\\n1\\n2\\n2\\n1'\nassert solution(open('sample_input2.txt', 'r')) == '0\\n0\\n0\\n0\\n0\\n0'"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\\n\") == \"1\\n2\\n1\\n2\\n2\\n1\\n\"\nassert solution(\"5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n\") == \"0\\n\"\nassert solution(\"7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\\n\") == \"0\\n0\\n\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1\\n2\\n1\\n2\\n2\\n1\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\\n\") == \"1\\n2\\n1\\n2\\n2\\n1\\n\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == '10\\n'\nassert solution(input2) == '5\\n'"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 10 2\\n0\\n15\\n30\\n45\") == \"10\\n\"\nassert solution(\"4 10 3\\n0\\n15\\n30\\n45\") == \"5\\n\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '10'\n\nfrom typing import List\n"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Output 1\", \"Your solution is incorrect.\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 10 2\\n0\\n15\\n30\\n45\") == \"10\"\nassert solution(\"4 10 3\\n0\\n15\\n30\\n45\") == \"5\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 10 2\\n0\\n15\\n30\\n45\\n\") == \"10\"\nassert solution(\"4 10 3\\n0\\n15\\n30\\n45\\n\") == \"5\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Test failed: {solution(input())}!= {output()}\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input1) == output1, \"Solution 1 not correct.\"\nassert solution(input2) == output2, \"Solution 2 not correct.\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == expected_output, f\"Test case {test_case} failed\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(b\"\\n4 10 2\\n0\\n15\\n30\\n45\\n\") == \"10\\n\"\nassert solution(b\"\\n4 10 3\\n0\\n15\\n30\\n45\\n\") == \"5\\n\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2\n\nfrom typing import List"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"4 2\\n50 50 75\\n25 25 25\\n\") == \"2\"\nassert solution(stdin=\"5 2\\n50 50 50 50\\n25 25 25 25\\n\") == \"1\"\nassert solution(stdin=\"4 2\\n50 50 75\\n25 25 25\\n\") == \"2\"\nassert solution(stdin=\"5 2\\n50 50 50 50\\n25 25 25 25\\n\") == \"1\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n50 50 75\\n25 25 25\\n\") == \"2\"\nassert solution(\"5 2\\n50 50 50 50\\n25 25 25 25\\n\") == \"1\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n50 50 75\\n25 25 25\") == 2\nassert solution(\"5 2\\n50 50 50 50\\n25 25 25 25\") == 1"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"2\", \"Your solution is incorrect\"\nassert solution(4) == \"1\", \"Your solution is incorrect\"\n"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4 2\n50 50 75\n25 25 25\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n5 2\n50 50 50 50\n25 25 25 25\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n5 2\n\"\"\") == \"1\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n50 50 75\\n25 25 25\\n\") == \"2\"\nassert solution(\"5 2\\n50 50 50 50\\n25 25 25 25\\n\") == \"1\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"4 2\n50 50 75\n25 25 25\"\"\") == 2\nassert solution(\"\"\"5 2\n50 50 50 50\n25 25 25 25\"\"\") == 1"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Testcase {i+1} failed\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('example1.txt', 'r')) == '2'\nassert solution(open('example2.txt', 'r')) == '1'"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 4\\n.LX.\\n.X..\\n....\\n.L..\\n') == '1\\n'\nassert solution('4 4\\n.XLX\\n.X..\\n...L\\n.X..\\n') == '2\\n'"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\") == \"1\"\nassert solution(\"4 4\\n.XLX\\n.X..\\n...L\\n.X..\") == \"2\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 4\\n.LX.\\n.X..\\n....\\n.L..\\n') == '1\\n'\nassert solution('4 4\\n.XLX\\n.X..\\n...L\\n.X..\\n') == '2\\n'"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == '1'\nassert solution(open('test_input.txt', 'r')) == '2'"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\\n\") == \"1\\n\"\nassert solution(\"4 4\\n.XLX\\n.X..\\n...L\\n.X..\\n\") == \"2\\n\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"The output is {solution(stdin)} but expected output is {expected_output}\"\n"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 4\\n.LX.\\n.X..\\n....\\n.L..\\n') == '1'\nassert solution('4 4\\n.XLX\\n.X..\\n...L\\n.X..\\n') == '2'"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == '1', \"Invalid output for sample input 1\"\nassert solution(sample_input_2) == '2', \"Invalid output for sample input 2\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == \"1\", \"The correct output should be '1'.\"\nassert solution(sample_input2) == \"2\", \"The correct output should be '2'.\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test failed: expected {output}, got {solution(input())}\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n\") == \"home\"\nassert solution(\"5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n\") == \"detention\"\n"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == expected_output, f\"Test {test_case_index} failed. Expected output: {expected_output}, Got: {solution(input)}\" for test_case_index, (input, expected_output) in enumerate(zip(test_inputs, test_outputs))"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\nSample Input 1:\\n4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\nSample Output 1:\\nhome\\n2\\n2 0 1\\n2 2 3\\n\") == \"home\"\nassert solution(\"5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\nSample Input 2:\\n5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\nSample Output 2:\\ndetention\\ndef solution(stdin: str) -> str:\\n    pass\\n\") == \"detention\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(input())) == \"detention\"\nassert solution(str(input())) == \"home\"\nassert solution(str(input())) == \"detention\"\nassert solution(str(input())) == \"home\"\nassert solution(str(input())) == \"detention\"\n"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n4 2 1\n1 1\n2 0 2\n2 1 3\n1 2\n\"\"\") == \"home\"\n\nassert solution(\n\"\"\"\n5 2 1\n1 1\n2 0 2\n2 1 3\n2 2 4\n1 3\n\"\"\") == \"detention\"\n\nfrom typing import List"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"detention\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n') == 'home'\nassert solution('5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n') == 'detention'"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n') == 'home\\n2\\n2 0 1\\n2 2 3\\n'"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n\") == \"home\"\nassert solution(\"5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n\") == \"detention\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == -1"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('tralalal') == 'allatral'\nassert solution('zzzz') == '-1'"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\"\n"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('tralalal') == 'allatral'\n\nassert solution('zzzz') == -1"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == -1"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('tralalal') == 'allatral'\nassert solution('zzzz') == '-1'"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == -1"
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == \"Output one integer representing the number of scary subarrays.\\n\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2 3 4 5\") == \"5\\n\", \"Output is incorrect\"\nassert solution(\"6\\n3 2 1 6 4 5\") == \"8\\n\", \"Output is incorrect\"\n\nsolution(\"5\\n1 2 3 4 5\") # Wrong output, should be 5\nsolution(\"6\\n3 2 1 6 4 5\") # Wrong output, should be 8"
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == 5\nassert solution(sample_input2) == 8\n"
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([5, 1, 2, 3, 4, 5]) == 5, \"Expected 5, but got {}\"\nassert solution([6, 3, 2, 1, 6, 4, 5]) == 8, \"Expected 8, but got {}\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"5\", \"Invalid Output\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4 5\\n\") == \"5\"\nassert solution(\"1 2 3 4 5\\n1 2 3 4 5\\n\") == \"8\"\n"
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2 3 4 5\") == \"5\\n\"\nassert solution(\"6\\n3 2 1 6 4 5\") == \"8\\n\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10\\n1 2 3 4 5\\n2 4 6 8 10\\n3 6 9 12 15\\n4 8 11 14 17\\n5 10 13 16 19') == '5'\nassert solution('6\\n3 2 1 6 4 5\\n6 7 8 9 10 11') == '8'"
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"5\\n\", \"Please implement the solution for the given problem statement.\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"Sample Output 1\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(47) == 1, \"The given solution is incorrect.\"\nassert solution(523) == 2, \"The given solution is incorrect.\""
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('47') == '1\\n', \"Incorrect output for Sample Input 1\"\nassert solution('523') == '2\\n', \"Incorrect output for Sample Input 2\""
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(47) == 1\nassert solution(523) == 2"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"47\") == 1\nassert solution(\"523\") == 2"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"47\") == 1\nassert solution(\"523\") == 2"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"47\") == 1\nassert solution(\"523\") == 2"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed. Input: {input()}, Output: {output}, Explanation: {explanation}\""
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1), \"Test case 1 failed\"\nassert solution(1000000000), \"Test case 2 failed\""
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(47) == 1\nassert solution(523) == 2"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"47\") == 1\nassert solution(\"523\") == 2"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20\") == \"0\"\nassert solution(\"2 2\\n0 1 20\\n1 0 5\") == \"1\"\nassert solution(\"4 4\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20\") == \"0\"\nassert solution(\"2 2\\n0 1 20\\n1 0 5\") == \"1\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20') == '0\\n\\n1\\n0 1 15'"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n\"\"\") == \"0\\n1 0 15\"  # Output: 0\n\nassert solution(\"\"\"\n2 2\n0 1 20\n1 0 5\n\"\"\") == \"1\\n0 1 15\"  # Output: 1"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20\\n\") == \"0\\n1\\n0 1 15\\n\"\nassert solution(\"2 2\\n0 1 20\\n1 0 5\\n\") == \"1\\n0 1 15\\n\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n''') == '0\\n'\n\nassert solution('''\n2 2\n0 1 20\n1 0 5\n''') == '1\\n0 1 15\\n'"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20\") == \"0\\n1\\n0 1 15\" # expected output\nassert solution(\"2 2\\n0 1 20\\n1 0 5\") == \"1\\n0 1 15\" # expected output"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20\\n\") == \"0\\n\"\nassert solution(\"1\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20\\n1\\n0 4 15\\n\") == \"1\\n0 1 15\\n\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20\") == \"0\\n1\\n0 1 15\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20\") == \"0\\n1\\n0 1 15\\n\" # expected output"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n5 6\n1 3 2 1 5\n1 3\n2 3\n1 4\n3 5\n4 5\n2 5\n''') == '5'\n\nassert solution('''\n4 3\n4 4 8 12\n1 2\n2 3\n3 4\n''') == '1'"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"5\""
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == output\n\nfor input, output in [\n    ([], 0),\n    ([1], 1),\n    ([1, 2], 2),\n    ([1, 2, 3], 3),\n    ([1, 2, 3, 4], 4),\n    ([1, 2, 3, 4, 5], 5),\n    ([1, 2, 3, 4, 5, 6], 6),\n    ([1, 2, 3, 4, 5, 6, 7], 7),\n    ([1, 2, 3, 4, 5, 6, 7, 8], 8),\n    ([1, 2, 3, 4, 5, 6, 7, 8, 9], 9),\n    ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10),\n    ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], 11),\n    ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], 12),\n    ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], 13),\n    ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], 14),\n    ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], 15),\n    ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], 16),\n    ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], 17),\n    ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], 18),\n    ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 19),\n    ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], 20),\n    ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], 21),\n    ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], 22),\n    ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\") == 5, \"Test case 1 failed\"\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\") == 1, \"Test case 2 failed\""
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\").read()) == \"5\\n\"\n\ninput_1 = \"\"\"\n5 6\n1 3 2 1 5\n1 3\n2 3\n1 4\n3 5\n4 5\n2 5\n\"\"\"\nassert solution(input_1) == \"5\\n\"\n\ninput_2 = \"\"\"\n4 3\n4 4 8 12\n1 2\n2 3\n3 4\n\"\"\"\nassert solution(input_2) == \"1\\n\""
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\\n\") == \"5\"\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\\n\") == \"1\"\nassert solution(\"5 0\\n0 0\\n0 0\\n0 0\\n0 0\\n\") == \"0\"\n"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\") == 5, \"The solution for the given inputs is incorrect.\""
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 5"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5') == 5\nassert solution('4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4') == 1"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\\n\") == 5\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\\n\") == 1"
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('020302') == '7'\nassert solution('1311') == '24'"
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('020302') == '7'\nassert solution('1311') == '24'\n\nfrom functools import reduce"
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"020302\") == \"7\", \"Expected: 7, Received: \" + str(solution(\"020302\"))\nassert solution(\"1311\") == \"24\", \"Expected: 24, Received: \" + str(solution(\"1311\"))"
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('020302') == '7'\nassert solution('1311') == '24'"
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##.\\n##########\\n##########\") == \"3 1 3 10\\n\"\n\nassert solution(\"5 20\\n###########.#.#.#.#.\\n###########...#.###.\\n##########..##.#..##\\n###########..#.#.##.\\n###########.###...#.\") == \"1 15 5 15\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##.\\n##########\\n##########\\n\") == \"3 1 3 10\"\nassert solution(\"5 20\\n###########.#.#.#.#.\\n###########...#.###.\\n##########..##.#..##\\n###########..#.#.##.\\n###########.###...#.\") == \"1 15 5 15\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##.\\n##########\\n##########\\n') == '3 1 3 10'\n\nassert solution('5 20\\n###########.#.#.#.#.\\n###########...#.###.\\n##########..##.#..##\\n###########..#.#.##.\\n###########.###...#.') == '1 15 5 15'"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##. \\n##########\\n##########\\n\") == \"3 1 3 10\\n\"\nassert solution(\"5 20\\n###########.#.#.#.#.\\n###########...#.###.\\n##########..##.#..##\\n###########..#.#.##.\\n###########.###...#.\") == \"1 15 5 15\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_sample1) == output_sample1\nassert solution(input_sample2) == output_sample2"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"####..####\") == \"1 15\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 1\"\nassert solution(\"#.#..##..#\") == \"3 "
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(50.000000000000001) == 16.339203308, \"Your solution is incorrect.\"\nassert solution(201.000000000000002) == 5.000000000, \"Your solution is incorrect.\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, \"The output is not as expected.\"\nfor _ in range(10):\n    assert round(solution(input()), 6) == round(output, 6), f\"The output is not as expected.\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"The solution for the given input {stdin} is incorrect. Expected output: {expected}, got: {solution(stdin)}\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, \"Test case failed.\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\nprint(\"Test Passed\")"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"50 0.125\") == \"16.339203308\"\nassert solution(\"201 1.000\") == \"5.000000000\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == \"16.339203308\"\nassert solution(2) == \"5.000000000\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, but got {solution(stdin)}\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"16.339203308\", \"The output of solution() is incorrect.\"\n"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('50 0.125') == '16.34', \"Test 1 failed\"\nassert solution('201 1.000') == '5.000', \"Test 2 failed\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2 2\n0.5 1\n\"\"\") == \"2\\n\"\n\nassert solution(\"\"\"\n4 3\n1 11\n0.4 1\n\"\"\") == \"3\\n\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n0.5 1\\n2 0\\n0.2 0\\n1 0\\n\") == \"2\\n\"\nassert solution(\"2 2\\n0.5 1\\n2 0\\n0.2 0\\n1 0\\n\") == \"3\\n\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '3' # expected output"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    2 2\n    0.5 1\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    4 3\n    1 11\n    0.4 1\n    \"\"\"\n) == \"3\\n\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 2\\n0.5 1\\n') == '2\\n'\nassert solution('4 3\\n1 11\\n0.4 1\\n') == '3\\n'\n"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n2 2\n0.5 1\n\"\"\") == \"2\\n\"\n\nassert solution(\"\"\"\n4 3\n1 11\n0.4 1\n\"\"\") == \"3\\n\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n0.5 1\\n2 3\\n1 11\\n0.4 1\") == \"2\\n\"\nassert solution(\"4 3\\n1 11\\n0.4 1\\n0.5 0.8\\n0.75 0.1\") == \"3\\n\"\nassert solution(\"2 2\\n1 1\\n0.5 1\\n2 3\\n1 11\\n0.4 1\\n0.5 0.8\\n0.75 0.1\") == \"2\\n\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 2\\n0.5 1\\n') == '2\\n'\nassert solution('4 3\\n1 11\\n0.4 1\\n') == '3\\n'"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\\n\", \"Sample Output 1\"\n\nassert solution() == \"3\\n\", \"Sample Output 2\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\\n\"\n"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n7 1\\n3 2\\n10 0\\n') == '10.5'\nassert solution('3\\n2 1\\n4 0\\n0 3\\n') == '-1'\nassert solution('3\\n\\n3 0\\n1 1\\n1 0\\n') == '1.0'\n"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"10.5\", \"Please implement the solution\"\n"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"10.5\""
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == \"10.5\\n\"\n"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == solution(open('input.txt', 'r')) # Correctness check"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == \"10.5\"\nassert solution(sample_input_2) == \"-1\"\n\nfrom typing import List"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n7 1\\n3 2\\n10 0\") == \"10.5\\n\"\nassert solution(\"3\\n2 1\\n4 0\\n0 3\") == \"-1\\n\"\n"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Test case {input()} failed: expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n7 1\\n3 2\\n10 0\") == 10.5\nassert solution(\"3\\n2 1\\n4 0\\n0 3\") == -1"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n7 1\\n3 2\\n10 0\") == 10.5\nassert solution(\"3\\n2 1\\n4 0\\n0 3\") == -1"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == expected_output"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 0.5\\n2 0.5\\n1 0.5\\n\") == \"1\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\\n\") == \"2\"\n"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Your solution is incorrect. Expected: {expected}, but got: {solution(stdin)}\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '1\\n'\n"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 0.5\\n2 0.5\\n1 0.5\\n\") == \"1\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\\n\") == \"2\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2\n\ninput_1 = \"\"\"2 0.5\n2 0.5\n1 0.5\"\"\"\noutput_1 = \"1\\n\"\n\ninput_2 = \"\"\"2 0.5\n2 0.51\n1 0.49\"\"\"\noutput_2 = \"2\\n\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\"\n\nfrom typing import List\nimport sys"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 1\n\nfrom typing import List"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 0.5\\n2 0.5\\n1 0.5\") == \"1\\n\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\") == \"2\\n\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"yes\\n\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5 2\\n3 3 3 3\\n0 1\\n0 3\\n1 3\\n1 2\\n2 3\") == \"yes\"\nassert solution(\"5 4 4\\n1 1 2 2 2\\n0 1\\n2 3\\n3 4\\n4 2\") == \"yes\"\nassert solution(\"5 4 5\\n1 1 2 2 2\\n0 1\\n2 3\\n3 4\\n4 2\\n5 5\") == \"no\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5 2\\n3 3 3 3\\n0 1\\n0 3\\n1 3\\n1 2\\n2 3\\n\") == \"yes\"\nassert solution(\"5 4 4\\n1 1 2 2 2\\n0 1\\n2 3\\n3 4\\n4 2\\n\") == \"no\"\n\nfrom typing import List"
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'yes'"
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}\\nGot: {solution(input())}\"\n"
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"yes\" # Expected output: \"yes\"\nprint(\"yes\")"
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 5 2\\n3 3 3 3\\n0 1\\n0 3\\n1 3\\n1 2\\n2 3') == 'yes'\nassert solution('5 4 4\\n1 1 2 2 2\\n0 1\\n2 3\\n3 4\\n4 2') == 'yes'\nassert solution('4 5 2\\n3 3 3 3\\n0 1\\n0 3\\n1 3\\n1 2\\n2 3') == 'no'\nassert solution('5 4 4\\n1 1 2 2 2\\n0 1\\n2 3\\n3 4\\n4 2') == 'no'"
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"yes\"\nassert solution() == \"yes\"\nassert solution() == \"no\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == ['2', '1', '2']\nassert solution(4) == ['5', '8', '2', '7']"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input(\"Enter the number of integers: \")) == expected_output, \"The solution is not correct. Please check the input and try again.\"\n"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n5\\n5\") == \"2\\n1\\n2\"\nassert solution(\"4\\n20\\n15\\n17\\n14\") == \"5\\n8\\n2\\n7\"\nassert solution(\"3\\n5\\n5\") == \"2\\n1\\n2\"\nassert solution(\"4\\n20\\n15\\n17\\n14\") == \"5\\n8\\n2\\n7\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2\\n1\\n2\\n\"\nassert solution(open(\"input2.txt\", \"r\")) == \"5\\n8\\n2\\n7\\n\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\\n1\\n2\\n\"\n"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2\n\nfrom typing import List"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == [\"2\", \"1\", \"2\"]"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n5\\n5\\n5\\n\") == \"2\\n1\\n2\\n\", \"Sample Input 1 failed\"\nassert solution(\"4\\n20\\n15\\n17\\n14\\n\") == \"5\\n8\\n2\\n7\\n\", \"Sample Input 2 failed\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"python\"\nassert solution(input()) == \"python main.py\"\nassert solution(input()) == \"python main.py -n 10\"\nassert solution(input()) == \"java\"\nassert solution(input()) == \"java\"\nassert solution(input()) == \"java\"\nassert solution(input()) == \"java\"\nassert solution(input()) == \"java\"\nassert solution(input()) == \"java\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"python\\npython main.py\\npython main.py -n 10\\njava\\njava\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"python main.py\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"python java\"\nassert solution(open(\"input3.txt\", \"r\").read()) == \"python\"\n"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('python') == 'python\\npython main.py\\npython main.py -n 10'"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\npython\\np^ main.py\\n^ -n 10\") == \"python\\npython main.py\\npython main.py -n 10\"\nassert solution(\"5\\npython\\njava\\n^\\n^^^\\n^^^\\n\") == \"python\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:pass\"\nassert solution(\"1\\nSample Input 1\\n2\\nSample Input 2\\n3\\nSample Input 3\") == \"Sample Input 3\\nSample Output 3\\nSample Input 3\\nSample Output 3\"\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"python\") == \"python\"\nassert solution(\"python main.py\") == \"python main.py\"\nassert solution(\"java\") == \"java\"\nassert solution(\"python -n 10\") == \"python -n 10\"\nassert solution(\"^\") == \"python\"\nassert solution(\"^ main.py\") == \"python main.py\"\nassert solution(\"^ -n 10\") == \"python -n 10\"\nassert solution(\"^A\") == \"python\"\nassert solution(\"^A main.py\") == \"python main.py\"\nassert solution(\"^A -n 10\") == \"python -n 10\"\nassert solution(\"python \") == \"python\"\nassert solution(\"python main.py \") == \"python main.py\"\nassert solution(\"python main.py -n 10 \") == \"python main.py -n 10\"\nassert solution(\"python -n 10 \") == \"python -n 10\"\nassert solution(\"python -n 10 main.py \") == \"python -n 10 main.py\"\nassert solution(\"python -n 10 main.py -n 10 \") == \"python -n 10 main.py -n 10\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, \"Expected output: {}\\nActual output: {}\".format(output, solution(input()))"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"python main.py -n 10\"\nassert solution() == \"python main.py -n 10\"\nassert solution() == \"python main.py -n 10\"\nassert solution() == \"java\"\nassert solution() == \"java\"\nassert solution() == \"java\"\nassert solution() == \"def solution(stdin: str) -> str: pass\"\nassert solution() == \"def solution(stdin: str) -> str: pass\"\nassert solution() == \"def solution(stdin: str) -> str: pass\"\n"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"python\") == \"python\\npython main.py\\npython main.py -n 10\"\nassert solution(\"java\") == \"java\\njava\\njava\\njava\\njava\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"\") == \"\"\nassert solution(\"python main.py -n 10\") == \"python main.py -n 10\\n\"\nassert solution(\"python\") == \"python\\npython main.py\\npython main.py -n 10\"\nassert solution(\"java\") == \"java\\njava\\njava\\njava\\njava\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"\") == \"\"\nassert solution(\"python main.py -n 10\") == \"python main.py -n 10\\n\"\n"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"python\") == \"python\"\nassert solution(\"python main.py\") == \"python main.py\"\nassert solution(\"java\") == \"java\"\nassert solution(\"python java\") == \"java\"\nassert solution(\"python main.py -n 10\") == \"python main.py -n 10\"\nassert solution(\"python java\") == \"java\"\nassert solution(\"python\") == \"python\"\nassert solution(\"python main.py\") == \"python main.py\"\nassert solution(\"python main.py -n 10\") == \"python main.py -n 10\"\nassert solution(\"python java\") == \"java\"\nassert solution(\"python\") == \"python\"\nassert solution(\"python main.py\") == \"python main.py\"\nassert solution(\"python main.py -n 10\") == \"python main.py -n 10\"\nassert solution(\"python java\") == \"java\"\nassert solution(\"python\") == \"python\"\nassert solution(\"python main.py\") == \"python main.py\"\nassert solution(\"python main.py -n 10\") == \"python main.py -n 10\"\nassert solution(\"python java\") == \"java\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\") == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\") == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\", 5, \"makes\", \"perfect\", \"sense\", \"sentence\", \"this\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\", 2, \"there\", \"hello\") == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\", \"Test 1 failed\"\nassert solution(\"hitehre\") == \"impossible\", \"Test 2 failed\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\\n5\\nmakes\\nperfect\\nsense\\nsentence\\nthis\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\\n2\\nthere\\nhello\") == \"impossible\"\nassert solution(\"afghij\") == \"ambiguous\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\", 5, \"makes\", \"perfect\", \"sense\", \"sentence\", \"this\") == \"this sentence makes perfect sense\\n\"\nassert solution(\"hitehre\", 2, \"there\", \"hello\") == \"impossible\\n\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\") == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\\n5\\nmakes\\nperfect\\nsense\\nsentence\\nthis\\n\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\\n2\\nthere\\nhello\\n\") == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"tihssnetnceemkaesprfecetsesne\\n5\\nmakes\\nperfect\\nsense\\nsentence\\nthis\\n\") == \"this sentence makes perfect sense\"\nassert solution(stdin=\"hitehre\\n2\\nthere\\nhello\\n\") == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\") == \"impossible\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 2') == '4'\nassert solution('2 2') == '16'\n\nfrom typing import List"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n2 2\\n\") == \"4\"\nassert solution(\"2 2\\n\") == \"16\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == 4\nassert solution(\"2 2\") == 16"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '4\\n'"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"4\"\nassert solution(\"2 2\") == \"16\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(solution(\"1 2\")) == \"4\"\nassert solution(solution(\"2 2\")) == \"16\"\n\nfrom typing import List"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test {i+1} failed. Input: {stdin}, Output: {output}, Diff: {output - expected}\" for i, (stdin, output, expected) in enumerate(zip(inputs, outputs, expected_outputs)):\n    pass"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Output does not match expected output.\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Solution {solution(input())} doesn't match expected output {expected}\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abc\") == 2\nassert solution(\"abcd\") == 1\nassert solution(\"aaba\") == 3\nassert solution(\"aabbc\") == 4\nassert solution(\"abaa\") == 1"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abc\") == \"abc\"\nassert solution(\"abcde\") == \"abcde\"\nassert solution(\"abcd\") == \"abcd\"\nassert solution(\"aeiou\") == \"aeiou\"\nassert solution(\"1234567890\") == \"1234567890\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Sample Input 1\") == \"2\\n\"\nassert solution(\"Sample Input 2\") == \"4\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == \"2\"\nassert solution(sample_input_2) == \"4\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\nabcbab\\n2\\ncb\\ncbab\\n\") == \"2\"\nassert solution(\"4\\abab\\n2\\nbac\\nbaba\\n\") == \"4\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    6\n    abcbab\n    2\n    cb\n    cbab\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    abab\n    \"\"\"\n) == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    abab\n    \"\"\"\n) == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('50\\n4\\n110 10\\n80 10\\n80 0\\n110 0') == '6\\n85\\n90\\n95\\n100\\n105'\nassert solution('24\\n3\\n10 10\\n30 10\\n20 20') == '4\\n17.071067\\n20\\n22.928932'"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Output\"\n"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Output\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"50\\n4\\n110 10\\n80 10\\n80 0\\n110 0\") == \"6\\n85\\n90\\n95\\n100\\n105\"\nassert solution(\"24\\n3\\n10 10\\n30 10\\n20 20\") == \"4\\n17.071067\\n20\\n22.928932\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == \"6\\n85\\n90\\n95\\n100\\n105\"\nassert solution(sample_input2) == \"4\\n17.071067\\n20\\n22.928932\"\n\nfrom typing import List"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"50\\n4\\n110 10\\n80 10\\n80 0\\n110 0\") == \"6\\n85\\n90\\n95\\n100\\n105\"\nassert solution(\"24\\n3\\n10 10\\n30 10\\n20 20\") == \"4\\n17.071067\\n20\\n22.928932\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"50\\n4\\n110 10\\n80 10\\n80 0\\n110 0\\n\") == \"6\\n85\\n90\\n95\\n100\\n105\\n\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == \"6\\n85\\n90\\n95\\n100\\n105\"\nassert solution(sample_input2) == \"4\\n17.071067\\n20\\n22.928932\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_1) == \"6\\n85\\n90\\n95\\n100\\n105\\n\"\nassert solution(input_2) == \"4\\n17.071067\\n20\\n22.928932\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"yes\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\"\n"
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10 11') == 'yes'\nassert solution('10 7') == 'yes'"
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"yes\", \"Test failed\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\"\n"
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"yes\\n\", \"Test 1 Failed\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(10 11) == \"yes\"\nassert solution(10 7) == \"yes\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    3\n    3 4\n    2 5\n    1 6\n    \"\"\"\n) == \"\"\"\n    3\n    1 6\n    2 5\n    3 4\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    5\n    10 30\n    20 40\n    30 50\n    10 60\n    30 40\n    \"\"\"\n) == \"\"\"\n    3\n    10 60\n    30 50\n    30 40\n    \"\"\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 4\\n2 5\\n1 6\\n\") == \"3\\n1 6\\n2 5\\n3 4\"\nassert solution(\"5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40\\n\") == \"3\\n10 60\\n30 50\\n30 40\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution, \"Solution not defined\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution, \"No solution provided\"\n\nfrom typing import List"
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 4\\n2 5\\n1 6\\n\") == \"3\\n1 6\\n2 5\\n3 4\\n\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n3 4\\n2 5\\n1 6') == '3\\n1 6\\n2 5\\n3 4\\n'\nassert solution('5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40') == '3\\n10 60\\n30 50\\n30 40\\n'\n\nimport itertools"
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == 'The length of the longest sequence is 3.\\n1 6\\n2 5\\n3 4\\n'\nassert solution(open('input_2.txt', 'r')) == 'The length of the longest sequence is 3.\\n10 60\\n30 50\\n30 40\\n'"
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"\"\"3\n1 6\n2 5\n3 4\"\"\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n3\n3 4\n2 5\n1 6\n''') == '''\n3\n1 6\n2 5\n3 4\n'''\n\nassert solution('''\n5\n10 30\n20 40\n30 50\n10 60\n30 40\n''') == '''\n3\n10 60\n30 50\n30 40\n'''\n\nassert solution('''\n3\n3 4\n2 5\n1 6\n''') == '''\n3\n1 6\n2 5\n3 4\n'''\n\nassert solution('''\n5\n10 30\n20 40\n30 50\n10 60\n30 40\n''') == '''\n3\n10 60\n30 50\n30 40\n'''"
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1\\n3\\n2\\n1\\n3\\n2\\n1\\n') == '3\\n1 6\\n2 5\\n3 4\\n'\nassert solution('2\\n10\\n20\\n30\\n10\\n30\\n') == '3\\n10 60\\n30 50\\n30 40\\n'\n"
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"5 1\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16\n\"\"\") == \"5836\\n\"\n\nassert solution(\"\"\"5 2\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16\n\"\"\") == \"1828\\n\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"5836\"\nassert solution(\"5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"1828\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1828\"\nassert solution() == \"5836\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"5836\\n\", \"Test 1 failed\"\nassert solution(\"5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"1828\\n\", \"Test 2 failed\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 5836, \"Incorrect Answer\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\\n') == '5836\\n', \"Test case 1 failed\"\nassert solution('5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\\n') == '1828\\n', \"Test case 2 failed\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"5836\\n\", \"Sample Output 1 incorrect\"\nassert solution(\"5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"1828\\n\", \"Sample Output 2 incorrect\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16') == '5836\\n', 'The expected output is not correct.'\nassert solution('5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16') == '1828\\n', 'The expected output is not correct.'"
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\\n') == 5836\n\nprint(solution('5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\\n')) == 1828\n"
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r').read()) == '5836', 'Incorrect output'"
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99\") == \"50\\n\"\nassert solution(\"3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200\") == \"impossible\\n\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99') == 50\nassert solution('3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200') == 'impossible'"
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99\") == 50\nassert solution(\"3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200\") == \"impossible\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99\") == \"50\"\nassert solution(\"3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200\") == \"impossible\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"impossible\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99') == '50\\n'\nassert solution('3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200') == 'impossible\\n'"
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"50\\n\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99\\n\") == \"50\\n\"\nassert solution(\"3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200\\n\") == \"impossible\\n\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"50\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 50, \"Test case 1 is incorrect\"\nassert solution() == 50, \"Test case 2 is incorrect\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5.0\") == \"0 0 0 0 1\\n\"\nassert solution(\"4.5\") == \"0 0 0 1 1\\n\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\nassert solution(\"5.0\") == \"0 0 0 0 1\"\nassert solution(\"4.5\") == \"0 0 0 1 1\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, \"Test case failed. Please check the code and try again.\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5.0\") == \"0 0 0 0 1\", \"Input 1\"\nassert solution(\"4.5\") == \"0 0 0 1 1\", \"Input 2\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5.0) == '0 0 0 0 1'\nassert solution(4.5) == '0 0 0 1 1'"
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, \"Test case failed: \\n Input: {}\\n Expected Output: {}\\n Received Output: {}\".format(input(), expected_output, solution(input()))"
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(12.5) == \"0 0 0 0 1\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5.0\\n\") == \"0 0 0 0 1\\n\"\nassert solution(\"4.5\\n\") == \"0 0 0 1 1\\n\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5.0) == \"0 0 0 0 1\"\nassert solution(4.5) == \"0 0 0 1 1\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5.0) == \"0 0 0 0 1\", \"Slavko decided to challenge Mirko! He gave him a real number P and a bag full of pieces of paper with exactly one number between 1 and 5 inclusive written on each paper. There is an unlimited quantity of each type of paper.\"\n\nassert solution(4.5) == \"0 0 0 1 1\", \"Mirko\u2019s task is to pick the minimum number of papers in a way that the average of the numbers written on them equals exactly P.\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('8 3 1\\n1 7 8 2 6 4 3 5') == '8\\n'\nassert solution('8 2 1\\n1 7 8 2 6 4 3 5') == '3\\n'"
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin1) == \"8\\n\"\nassert solution(stdin2) == \"3\\n\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\") == \"8\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\") == \"3\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\") == \"8\\n\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\") == \"3\\n\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\\n\") == \"8\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\\n\") == \"3\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('8 3 1\\n1 7 8 2 6 4 3 5\\n') == '8'\nassert solution('8 2 1\\n1 7 8 2 6 4 3 5\\n') == '3'"
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Output does not match. Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\") == \"8\\n\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\") == \"3\\n\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"8\", \"Your solution is not correct.\"\nassert solution() == \"3\", \"Your solution is not correct.\"\n"
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\") == \"8\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\") == \"3\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3\", \"Your solution is incorrect\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 2\\n2 3 4 1\\n') == '3\\n'\nassert solution('6 3\\n2 2 2 4 4 4\\n') == '4\\n'"
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n2 3 4 1\\n\") == \"3\\n\"\nassert solution(\"6 3\\n2 2 2 4 4 4\\n\") == \"4\\n\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\", \"Expected output: 3, got: \" + str(solution())"
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n2 3 4 1\\n\") == \"3\\n\"\nassert solution(\"6 3\\n2 2 2 4 4 4\\n\") == \"4\\n\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '3', \"The function should return '3', but instead it returns '{}'\".format(solution())"
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3\\n\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n2 3 4 1\\n\") == \"3\"\nassert solution(\"6 3\\n2 2 2 4 4 4\\n\") == \"4\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == \"3\\n\", \"Test case 1 failed\"\nassert solution(sample_input2) == \"4\\n\", \"Test case 2 failed\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n2 3 4 1\\n\") == \"3\"\nassert solution(\"6 3\\n2 2 2 4 4 4\\n\") == \"4\""
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1.732050808\\n\", \"Incorrect output\"\n"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(1, 1, 1.732050)) == 1.732050808\nassert solution(str(1, 1, 3.0)) == -1"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output, \"Your solution should output '{}'\".format(sample_output)\nfor i in range(1, 100):\n    sample_input
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 1 1.732050') == '1.732050808'\nassert solution('1 1 3.0') == '-1'\nassert solution('') == '-1'\nassert solution('1 1 2.0') == '1.25'\nassert solution('1 1 2.1') == '1.25'\nassert solution('1 1 2.2') == '1.25'\nassert solution('1 1 2.3') == '1.25'\nassert solution('1 1 2.4') == '1.25'\nassert solution('1 1 2.5') == '1.25'\nassert solution('1 1 2.6') == '1.25'\nassert solution('1 1 2.7') == '1.25'\nassert solution('1 1 2.8') == '1.25'\nassert solution('1 1 2.9') == '1.25'\nassert solution('1 1 3.0') == '1.25'\nassert solution('1 1 3.1') == '1.25'\nassert solution('1 1 3.2') == '1.25'\nassert solution('1 1 3.3') == '1.25'\nassert solution('1 1 3.4') == '1.25'\nassert solution('1 1 3.5') == '1.25'\nassert solution('1 1 3.6') == '1.25'\nassert solution('1 1 3.7') == '1.25'\nassert solution('1 1 3.8') == '1.25'\nassert solution('1 1 3.9') == '1.25'\nassert solution('1 1 4.0') == '1.25'\nassert solution('1 1 4.1') == '1.25'\nassert solution('1 1 4.2') == '1.25'\nassert solution('1 1 4.3') == '1.25'\nassert solution('1 1 4.4') == '1.25'\nassert solution('1 1 4.5') == '1.25'\nassert solution('1 1 4.6') == '1.25'\nassert solution('1 1 4.7') == '1.25'\nassert solution('1 1 4.8') == '1.25'\nassert solution('1 1 4.9') == '1.25'\nassert solution('1 1 5.0') == '1.25'\nassert solution('1 1 5.1') == '1.25'\nassert solution('1 1 5.2') == '1.25'\nassert solution('1 1 5.3') == '1.25'\nassert solution('1 1 5.4') == '1.25'\nassert solution('1 1 5.5') == '1.25'\nassert solution('1 1 5.6') == '1.25'\nassert solution('1 1 5.7') == '1.25'\nassert solution('1 1 5.8') == '1.25'\nassert solution('1 1 5.9') == '1.25'\nassert solution('1 1 6.0') == '1.25'\nassert solution('1 1 6.1') == '1.25'\nassert solution('1 1 6.2') == '1.25'\nassert solution('1 1 6.3') == '1.25'\nassert solution('1 1 6.4') == '1.25'\nassert solution('1 1 6.5') == '1.25'\nassert solution('1 1 6.6') == '1.25'\nassert solution('1 1 6.7') == '1.25'\nassert solution('1 1 6.8') == '1.25'\nassert solution('1 1 6.9') == '1.25'\nassert solution('1 1 7.0') == '1.25'\nassert solution"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"1 1 1.732050\") == \"1.732050808\"\nassert solution(stdin=\"1 1 3.0\") == \"-1\""
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=sample_stdin) == sample_output, f\"Expected output: {sample_output}, Got: {solution(stdin=sample_stdin)}\""
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 1 1.732050') == '1.732050808'\nassert solution('1 1 3.0') == '-1'\n\nfrom typing import List"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 1 1.732050') == 1.732050808\nassert solution('1 1 3.0') == -1"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1.732050808\"\nassert solution(stdin) == \"-1\""
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == '1.732050808'\nassert solution(sample_input_2) == '-1'"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\\n\") == \"2.4999999987500003\\n\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\\n\") == \"9.999999999000002\\n\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(r\"1\\n3 4 2\\n.75\\n\") == \"2.4999999987500003\\n\"\nassert solution(r\"2\\n0 100 10\\n0 -100 100\\n.80\\n\") == \"9.999999999000002\\n\"\n"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2.4999999987500003\"\n"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2.4999999987500003\", \"The answer is incorrect\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"1\\n3 4 2\\n.75\\n\") == \"2.4999999987500003\\n\"\nassert solution(stdin=\"2\\n0 100 10\\n0 -100 100\\n.80\\n\") == \"9.999999999000002\\n\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2.4999999987500003\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2.4999999987500003\", \"Test Case 1 Failed\"\n\nassert solution() == \"9.999999999000002\", \"Test Case 2 Failed\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"The output for sample {stdin} is incorrect. Expected {expected}, but got {solution(stdin)}.\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\") == \"2.4999999987500003\\n\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\") == \"9.999999999000002\\n\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    6 3\n    2 1 6\n    1 1 5 1 2\n    2 1 6\n    \"\"\"\n) == \"0\\n3\"\n\nassert solution(\n    \"\"\"\n    4 5\n    1 1 4 3 4\n    2 1 1\n    2 2 2\n    2 3 3\n    2 4 4\n    \"\"\"\n) == \"3\\n2\\n1\\n0\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Test failed. Expected: {expected}, Received: {solution(input())}\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1 6\\n1 1 5 1 2\\n2 1 6\\n\") == \"0\\n3\\n\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '1234567890\\n1234567890'"
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Solution {solution(stdin)} doesn't match expected {expected}\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 6 3\\n2 1 6\\n1 1 5 1 2\\n2 1 6\") == \"0\\n3\\n\"\nassert solution(\"4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\") == \"3\\n2\\n1\\n0\\n\"\n"
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\") == \"3\\n2\\n1\\n0\"\nassert solution(\"1 1 6 3 4\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n2 1 4\\n\") == \"0\\n3\\n3\\n3\\n3\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 6\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\nSample Input 1: 6 3\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\nSample Output 1: 0\\nSample Input 2: 4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\\nSample Output 2: 3\\n\") == \"0\\n3\\n2\\n1\\n0\\n\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 6\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n\") == \"0\\n3\\n\"\nassert solution(\"4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\\n\") == \"3\\n2\\n1\\n0\\n\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\\n\", \"Expected output 1, but got: \" + solution(stdin)\nassert solution(stdin) == \"4\\n\", \"Expected output 4, but got: \" + solution(stdin)"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '1\\n', 'Output should be 1'"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 7 1000000007') == '1'\nassert solution('3 2 1000000007') == '4'"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    1 7 1000000007\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    3 2 1000000007\n    \"\"\"\n) == \"4\\n\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 2, 1000000007) == 4\nassert solution(1, 7, 1000000007) == 1\nassert solution(10, 7, 1000000007) == 1128438222346229758768715739711714772456045165937122098402334279744555999920313122406916699679723711550599445763856089608100826932304129899682806125653886973185098751392923652279214135308965422139627745812588989913968648365274105388491230535484991695878534302141157725030036777400266079365022646140409535154376629869609991756192991149942234627435016089414268323194469884398904772107776313544052941938664128763754991254784919671430481395728615983877766175090144636374386886991143887989285023361115644112226207023995714859509932007940980682210783716566490941940805608583655105812562553149313062813275892246970953100118068268829299360071462141165284316149165514049865728297758637748423416140769015699684117448716003251526455462186528250769236532967752617182101829506939040680443480118682136001032354123925762814816638798824692368078382734167211301303313708494123587717612491543535670285349395138254429024826176473990345083267763170160604480795854336834295352"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == sample_output1, \"The output is incorrect for the first example.\"\nassert solution(sample_input2) == sample_output2, \"The output is incorrect for the second example.\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 7 1000000007\\n\") == \"1\\n\"\nassert solution(\"3 2 1000000007\\n\") == \"4\\n\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 7 1000000007') == 1, \"The expected output is 1, but got {}\".format(solution('1 7 1000000007'))\nassert solution('3 2 1000000007') == 4, \"The expected output is 4, but got {}\".format(solution('3 2 1000000007'))\n"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 7 1000000007\") == \"1\\n\"\nassert solution(\"3 2 1000000007\") == \"4\\n\"\n\nfrom itertools import permutations"
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    10 10\n    6\n    11\n    \"\"\"\n) == \"5\"\n\nassert solution(\n    \"\"\"\n    3 5\n    11\n    \"\"\"\n) == \"8\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"5\", \"The solution is incorrect.\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 10\\n6\\n11\") == 5\nassert solution(\"3 5\\n11\") == 8"
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Output the number of grey cells the hedgehog visits.\\n\", \"Test failed\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"Output the number of grey cells the hedgehog visits.\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 10\\n6\\n3 5\\n11\") == \"5\"\nassert solution(\"3 5\\n11\") == \"8\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 10\\n6\\n11\\n3 5\\n\") == 8"
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 10\\n6\\n11\\n3 5\\n11\") == \"5\"\nassert solution(\"3 5\\n11\\n10 10\\n3 5\\n11\") == \"8\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"output\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Output the number of grey cells the hedgehog visits.\\n\", \"Test failed\"\n"
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\"\n) == \"2\"\n\nassert solution(\n    \"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\"\n) == \"3\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\") == \"2\"\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\") == \"3\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n\") == \"2\"\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n\") == \"3\"\n\nfrom typing import List"
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n   4 5 3\n   1 2 3\n   0 1 1\n   0 3 1\n   0 2 1\n   1 2 1\n   3 2 1\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n   4 5 3\n   1 2 3\n   0 1 1\n   0 3 1\n   0 2 1\n   1 2 1\n   3 2 1\n    \"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"\n   4 5 3\n   1 2 3\n   0 1 1\n   0 3 1\n   0 2 1\n   1 2 1\n   3 2 1\n    \"\"\"\n) == \"2\\n\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1') == '2'"
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\") == \"2\"\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\") == \"3\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"The output is '{output()}', but the function's solution is '{solution(input())}'.\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_data) == expected_output, f\"Test case failed for input {input_data} and output {expected_output}\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\\n3\\n\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"3\\n\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1') == '2\\n'\nassert solution('4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1') == '3\\n'"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '3'\n"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == \"3\"\nassert solution(sample_input2) == \"3\""
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '3'\n"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n10 20 30\\n5 5 10\\n2 20\\n1 30\\n1 32\\n3 120\") == \"3\\n\"\nassert solution(\"3 1\\n10\\n10\\n1 10\\n1 10\\n1 10\") == \"3\\n\""
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 3, \"The output should be 3.\""
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 3\nassert solution(1) == 1\nassert solution(4) == 4\nassert solution(10) == 3\nassert solution(5) == 6\nassert solution(2) == 3\nassert solution(1) == 1\nassert solution(3) == 3\nassert solution(4) == 4\nassert solution(5) == 6\nassert solution(6) == 6\nassert solution(7) == 6\nassert solution(8) == 7\nassert solution(9) == 7\nassert solution(10) == 7\nassert solution(11) == 7\nassert solution(12) == 8\nassert solution(13) == 8\nassert solution(14) == 8\nassert solution(15) == 8\nassert solution(16) == 8\nassert solution(17) == 8\nassert solution(18) == 8\nassert solution(19) == 8\nassert solution(20) == 8\nassert solution(21) == 8\nassert solution(22) == 8\nassert solution(23) == 8\nassert solution(24) == 8\nassert solution(25) == 8\nassert solution(26) == 8\nassert solution(27) == 8\nassert solution(28) == 8\nassert solution(29) == 8\nassert solution(30) == 8\nassert solution(31) == 8\nassert solution(32) == 8\nassert solution(33) == 8\nassert solution(34) == 8\nassert solution(35) == 8\nassert solution(36) == 8\nassert solution(37) == 8\nassert solution(38) == 8\nassert solution(39) == 8\nassert solution(40) == 8\nassert solution(41) == 8\nassert solution(42) == 8\nassert solution(43) == 8\nassert solution(44) == 8\nassert solution(45) == 8\nassert solution(46) == 8\nassert solution(47) == 8\nassert solution(48) == 8\nassert solution(49) == 8\nassert solution(50) == 8\nassert solution(51) == 8\nassert solution(52) == 8\nassert solution(53) == 8\nassert solution(54) == 8\nassert solution(55) == 8\nassert solution(56) == 8\nassert solution(57) == 8\nassert solution(58) == 8\nassert solution(59) == 8\nassert solution(60) == 8\nassert solution(61) == 8\nassert solution(62) == 8\nassert solution(63) == 8\nassert solution(64) == 8\nassert solution(65) == 8\nassert solution(66) == 8\nassert solution(67) == 8\nassert solution(68) == 8\nassert solution(69) == 8\nassert solution(70) == 8\nassert solution(71) == 8\nassert solution(72) == 8\nassert solution(73) == 8\nassert solution(74) == 8\nassert solution(75) == 8\nassert solution(76) == 8\nassert solution(77) == 8\nassert solution(78) == 8\nassert solution(79) == 8\nassert solution(80) == 8\nassert solution(81) == 8\nassert solution(82) == 8\nassert solution(83) == 8\nassert solution(84) == 8\nassert solution(85) == 8\nassert solution(86) == 8\nassert solution(87) == 8\nassert solution(88) == 8\nassert solution(89) == 8\nassert solution(90) == 8\nassert solution(91) == 8\nassert solution(92) == 8\nassert solution(93) == 8\nassert solution(94) == 8\nassert solution(95) == 8\nassert solution(96) == 8\nassert solution(97) == 8\nassert solution(98) == 8\nassert solution(99) == 8"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 1, 10, 1, 10, 1, 10, 1, 10) == 3, \"Test 1 failed\"\nassert solution(3, 1, 10, 1, 10, 1, 10, 1, 10) == 3, \"Test 2 failed\"\nassert solution(3, 1, 10, 1, 10, 1, 10, 1, 10) == 3, \"Test 3 failed\""
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n10 20 30\\n5 5 10\\n2 20\\n1 30\\n1 32\\n3 120\\n\") == \"3\"\nassert solution(\"3 1\\n10\\n10\\n1 10\\n1 10\\n1 10\\n\") == \"3\"\n"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n10 20 30\\n5 5 10\\n2 20\\n1 30\\n1 32\\n3 120\\n\") == \"3\\n\"\nassert solution(\"3 1\\n10\\n10\\n1 10\\n1 10\\n1 10\\n\") == \"3\\n\""
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, but got {solution(input())}\"\n"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 5, \"Your solution is incorrect\"\nprint(1)"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1), \"Expected output 1, but got output 0.\"\nassert solution(2), \"Expected output 2, but got output 0.\"\nassert solution(3), \"Expected output 5, but got output 0.\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '1', \"Your implementation is wrong\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n\") == \"1\\n\"\nassert solution(\"3\\n\") == \"5\\n\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '1\\n'\n\nfrom collections import defaultdict\nfrom itertools import combinations\nimport math"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, got: {solution(stdin)}\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '1', \"Incorrect output\"\n"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n\") == \"5\"\n\nimport random"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"1\"  # Mirko wins with a set of pairs {3}"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n\") == \"1\\n\"\nassert solution(\"3\\n\") == \"5\\n\""
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 2, \"Solution is incorrect.\""
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n0 11 9\\n1 0 10\\n0 0 0\") == \"2\"\nassert solution(\"4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\") == \"-1\""
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 1\\n0 11 9\\n1 0 10\\n0 0 0') == '2'\nassert solution('4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0') == '-1'"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n3 1\n0 11 9\n1 0 10\n0 0 0\n''') == '2'\n\nassert solution('''\n4 3\n0 1 0 19\n0 0 2 0\n0 5 0 3\n0 0 0 0\n''') == '-1'"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 1\\n0 11 9\\n1 0 10\\n0 0 0') == 2\nassert solution('4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0') == -1"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 1\\n0 11 9\\n1 0 10\\n0 0 0') == '2\\n'\nassert solution('4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0') == '-1\\n'"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Got '{solution(input())}', expected '{expected_output}'\"\n"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n0 11 9\\n1 0 10\\n0 0 0\") == \"2\\n\"\nassert solution(\"4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\") == \"-1\\n\""
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n0 11 9\\n1 0 10\\n0 0 0\") == \"2\\n\"\nassert solution(\"4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\") == \"-1\\n\""
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == '2\\n'\n"
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\"\nassert solution(\"2 1 0 1\\n0 1 100000\") == \"2 100000 1\\n0 1 100000\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n4 5 0 3\n0 1 10\n1 2 1\n1 3 1\n0 2 1\n2 3 10\n''') == '''\n4 3 5\n0 1 2\n0 2 1\n1 2 1\n1 3 1\n2 3 2\n'''\n\nassert solution('''\n2 1 0 1\n0 1 100000\n''') == '''\n2 100000 1\n0 1 100000\n'''"
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r').read()) == expected_output, f\"Expected output: {expected_output}, but got {solution(open('input.txt', 'r').read())}\"\n\ninput1 = '''\n4 5 0 3\n0 1 10\n1 2 1\n1 3 1\n0 2 1\n2 3 10\n'''\nexpected_output = '''\n4 3 5\n0 1 2\n0 2 1\n1 2 1\n1 3 1\n2 3 2\n'''\n\ninput2 = '''\n2 1 0 1\n0 1 100000\n'''\nexpected_output = '''\n2 100000 1\n0 1 100000\n'''"
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\"\nassert solution(\"2 1 0 1\\n0 1 100000\") == \"2 100000 1\\n0 1 100000\"\n"
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"4 5 0 3\\n\"\n    \"0 1 10\\n\"\n    \"1 2 1\\n\"\n    \"1 3 1\\n\"\n    \"0 2 1\\n\"\n    \"2 3 10\"\n) == \"4 3 5\\n\" + \\\n    \"0 1 2\\n\" + \\\n    \"0 2 1\\n\" + \\\n    \"1 2 1\\n\" + \\\n    \"1 3 1\\n\" + \\\n    \"2 3 2\\n\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\\n\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4 5 0 3\n0 1 10\n1 2 1\n1 3 1\n0 2 1\n2 3 10\n\"\"\") == \"\"\"\n4 3 5\n0 1 2\n0 2 1\n1 2 1\n1 3 1\n2 3 2\n\"\"\"\n\nassert solution(\"\"\"\n2 1 0 1\n0 1 100000\n\"\"\") == \"\"\"\n2 100000 1\n0 1 100000\n\"\"\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\\n\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n\"\nassert solution(\"2 1 0 1\\n0 1 100000\\n\") == \"2 100000 1\\n0 1 100000\\n\"\n"
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\"\nassert solution(\"2 1 0 1\\n0 1 100000\") == \"2 100000 1\\n0 1 100000\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\\n\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\\n\") == \"3 5\\n\", \"Sample Input 1\"\nassert solution(\"2 3\\nS.M\\nM..\\n\") == \"2 0\\n\", \"Sample Input 2\"\n\nfrom typing import List"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 3\\nSMS\\nMMS\\n') == '3 5\\n'\nassert solution('2 3\\nS.M\\nM..\\n') == '2 0\\n'"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\") == \"3 5\"\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution) == '''\n1\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n2\n3\n"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\") == \"3 5\"\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\") == \"3 5\\n\", \"Test 1 failed\"\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\\n\", \"Test 2 failed\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2 0\\n\", \"Output not correct\"\n"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3 5\\n2 0\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3 5\", \"Your solution is incorrect.\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\") == \"3 5\\n\", \"Test 1 failed\"\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\\n\", \"Test 2 failed\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a') == '2\\n3 c\\n6 c\\n'\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a') == '1\\n6 b\\ndef solution(stdin: str) -> str:pass'\nassert solution('13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a') == '2\\n3 c\\n6 c\\n'\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a') == '1\\n6 b\\ndef solution(stdin: str) -> str:pass'\n"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == [2, 3, 'c']\nassert solution(sample_input_2) == [1, 6, 'b']"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\") == \"2\\n3 c\\n6 c\\n\"\nassert solution(\"6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n\") == \"1\\n6 b\\n\"\nassert solution(\"6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n\") == \"1\\n6 b\\n\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''13\n0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a''') == '2\\n3 c\\n6 c'\n\nassert solution('''6\n0 B\n1 B\n1 T a\n2 E a\n2 S\n5 T a\n''') == '1\\n6 b\\ndef solution(stdin: str) -> str:\\npass\\n'\n\nassert solution('''13\n0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a''') == '2\\n3 c\\n6 c'"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\\n') == '2\\n3 c\\n6 c\\n'\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == '1\\n6 b\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a') == '2\\n3 c\\n6 c\\n'\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == '1\\n6 b\\n'\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == '1\\n6 b\\n'\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == '1\\n6 b\\n'"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\\n\") == \"2\\n3 c\\n6 c\\n\"\nassert solution(\"6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n\") == \"1\\n6 b\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\nprint(solution(stdin))\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    13\n    0 B\n    1 B\n    2 E a\n    2 E b\n    2 S\n    5 G a\n    5 T a\n    5 E a\n    5 E b\n    1 S\n    10 E a\n    10 G b\n    1 T a\n    ''') == ['2', '3 c', '6 c']\n\nassert solution('''\n    6\n    0 B\n    1 B\n    1 T a\n    2 E a\n    2 S\n    5 T a\n    ''') == ['1', '6 b', 'def solution(stdin: str) -> str: pass']\n\nassert solution('''\n    13\n    0 B\n    1 B\n    2 E a\n    2 E b\n    2 S\n    5 G a\n    5 T a\n    5 E a\n    5 E b\n    1 S\n    10 E a\n    10 G b\n    1 T a\n    ''') == ['2', '3 c', '6 c']"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([\n    '3',\n    '0 B',\n    '1 B',\n    '2 E a',\n    '2 E b',\n    '2 S',\n    '5 G a',\n    '5 T a',\n    '5 E a',\n    '5 E b',\n    '1 S',\n    '10 E a',\n    '10 G b',\n    '1 T a',\n]) == '2\\n3 c\\n6 c\\n'\n\nassert solution([\n    '6',\n    '0 B',\n    '1 B',\n    '1 T a',\n    '2 E a',\n    '2 S',\n    '5 T a',\n]) == '1\\n6 b\\ndef solution(stdin: str) -> str:\\npass\\n'\n\nassert solution([\n    '13',\n    '0 B',\n    '1 B',\n    '2 E a',\n    '2 E b',\n    '2 S',\n    '5 G a',\n    '5 T a',\n    '5 E a',\n    '5 E b',\n    '1 S',\n    '10 E a',\n    '10 G b',\n    '1 T a',\n]) == '2\\n3 c\\n6 c\\n'\n\nassert solution([\n    '6',\n    '0 B',\n    '1 B',\n    '1 T a',\n    '2 E a',\n    '2 S',\n    '5 T a',\n]) == '1\\n6 b\\ndef solution(stdin: str) -> str:\\npass\\n'\n\nassert solution([\n    '13',\n    '0 B',\n    '1 B',\n    '2 E a',\n    '2 E b',\n    '2 S',\n    '5 G a',\n    '5 T a',\n    '5 E a',\n    '5 E b',\n    '1 S',\n    '10 E a',\n    '10 G b',\n    '1 T a',\n]) == '2\\n3 c\\n6 c\\n'"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('example.txt', 'r')) == '''2\n3 c\n6 c\n'''"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('test_input.txt').read()) == \"40\\n\"\nassert solution(open('test_input2.txt').read()) == \"76\\n\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 5\\n288 291\") == \"40\\n\", \"Test 1 failed\"\nassert solution(\"1 5\\n288 291\") == \"40\\n\", \"Test 2 failed\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, got {solution(stdin)}\"\n"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 5\\n288 291\") == \"40\"\n\nassert solution(\"3 6\\n600 1200\") == \"120\"\n\nassert solution(\"10 20\\n300 500\") == \"30\"\n\nassert solution(\"5 6\\n100 200\") == \"25\"\n\nassert solution(\"5 12\\n7 10\") == \"35\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Solution does not meet the expected output: {solution(input())}!= {expected_output}\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '40'"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 5\\n288 291\\n\") == \"40\\n76\\n\"\n"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output\nprint(answer % 1000000007)"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 5\\n288 291\\n') == '40\\n76\\n'\n"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('CAT') == 'COG'\nassert solution('DOG') == 'COG'\nassert solution('COT') == 'COG'"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == ['COG']\nassert solution(open('test_input1.txt', 'r')) == ['COG', 3]\nassert solution(open('test_input2.txt', 'r')) == [0, -1]"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == expected_output_1, f\"The function should return {expected_output_1}, but it returns {solution(sample_input_1)}.\"\nassert solution(sample_input_2) == expected_output_2, f\"The function should return {expected_output_2}, but it returns {solution(sample_input_2)}.\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == (0, -1)\nassert solution(open('input2.txt', 'r')) == (1, 1)"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 'COG'\nassert solution(2) == 3"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"COG\", \"The solution should be COG\"\n\nprint(0, -1)"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"CAT\") == \"COG\"\nassert solution(\"DOG\") == \"DGO\"\nassert solution(\"COT\") == \"COT\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"CAT\") == \"COG\"\nassert solution(\"DOG\") == \"COG\"\nassert solution(\"COT\") == \"COG\"\nassert solution(\"ABC\") == \"0\"\nassert solution(\"XZY\") == \"0\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"COG\"\nassert solution(stdin) == \"0\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"9\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 2) == 9\nassert solution(4, 3) == 6\n\nfrom typing import List"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test Failed\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Output the number of sequences modulo 1000000007.\", \"Test Failed\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"6\", \"Test case 1 failed.\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"Output the number of sequences modulo 1000000007.\\n\", \"The solution is not correct.\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(10, 1) == 9\nassert solution(4, 3) == 6"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10 1') == '9\\n'\nassert solution('4 3') == '6\\n'"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {solution(input())}!= {expected_output}\"\n"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n5 5\n/.V.\\\n./.V.\n..#..\n.V.#.\n\\.V./\n''') == 3\n\nassert solution('''\n2 5\nV...\\\nH...V\n''') == -1"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 3, \"Expected output: 3, but got: {}\".format(solution())\n"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected_output, f\"The solution {solution} does not match the expected output {expected_output}\""
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 5\\n/.V.\\n./.V.\\n..#..\\n.V.#.\\n\\.V./') == 3\nassert solution('2 5\\nV...\\nH...V') == -1"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 3, \"Expected 3, got {}\".format(solution())"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 5\\n/.V.\\n./.V. \\n..#.. \\n.V.#. \\n\\.V./') == 3\nassert solution('2 5\\nV...\\nH...V') == -1"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"3\\n\", \"Expected output is 3, got {}\".format(solution)"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 3, \"Expected result: 3\"\nassert solution(\"5 5\\n/.V.\\n./.V.\\n..#..\\n.V.#.\\n\\.V./\\n\") == 3, \"Expected result: 3\"\nassert solution(\"2 5\\nV...\\nH...V\\n\") == -1, \"Expected result: -1\""
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 5\\n/.V.\\n./.V.\\n..#..\\n.V.#.\\n\\.V./\") == 3\nassert solution(\"2 5\\nV...\\nH...V\") == -1\nassert solution(\"1 1\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n..#\\n.."
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"The quick brown fox jumps over the lazy dog.\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input: {input()}, expected output: {expected_output}\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('n fox jumps ove\\u001b[0m uick brown f\\u001b[0mThe quick b\\u001b[0m y dog.\\u001b[0mrown fox\\u001b[0mmps over the l\\u001b[0m the lazy dog\\u001b[0m') == 'The quick brown fox jumps over the lazy dog.'\nassert solution('4 cdefghi\\u001b[0m efghijk\\u001b[0m efghijx\\u001b[0mabcdefg\\u001b[0m') == 'AMBIGUOUS'\n\nfrom typing import List"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"n fox jumps ove\\nuick brown f\\nThe quick b\\ny dog.\") == \"The quick brown fox jumps over the lazy dog.\"\nassert solution(\"cdefghi\\nefghijk\\nefghijx\\nabcdefg\") == \"AMBIGUOUS\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"The quick brown fox jumps over the lazy dog.\"\nassert solution(\"cdefghi\\nabcdefg\") == \"AMBIGUOUS\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n\ninput_fragments = set(map(str.strip, input().split()))\nfragments = []\nfor fragment in input_fragments:\n    fragments.append(fragment)"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"n fox jumps ove\\nuick brown f\\nThe quick b\\ny dog.\") == \"The quick brown fox jumps over the lazy dog.\"\nassert solution(\"cdefghi\\nefghijk\\nefgijkx\\nabcdefg\") == \"AMBIGUOUS\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin: str) == \"AMBIGUOUS\"\n\nfrom typing import List\n"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == 'The quick brown fox jumps over the lazy dog.'"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"The quick brown fox jumps over the lazy dog.\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"0+-\"\nassert solution(\"3 2\\n1 2 1\\n-2 0 2\") == \"0+-\"\nassert solution(\"3 1\\n1 1 2\") == \"impossible\"\nassert solution(\"2 3\\n-1 -2 -3\\n0 1 2\") == \"0+-\"\nassert solution(\"2 1\\n1 1 2\\n-2 0 2\") == \"0+-\"\nassert solution(\"4 5\\n-1 -2 -3\\n0 1 2\\n1 2 3\\n2 3 4\") == \"0+-\"\nassert solution(\"10 10\") == \"impossible\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_str) == expected_output, f\"Expected output: {expected_output}\\nActual output: {solution(input_str)}\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"--+0-\"\nassert solution(\"3 2\\n1 2 1\\n-2 0 2\") == \"0+-\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"impossible\"\nassert solution(\"3 2\\n1 2 1\\n-2 0 2\") == \"0+-\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"0+-\"\nassert solution(\"3 2\\n1 2 1\\n-2 0 2\") == \"0+-\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 'impossible'"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"0+-\"\nassert solution(\"3 2\\n1 2 1\\n-2 0 2\") == \"0+-\"\nassert solution(\"5 3\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"impossible\"\nassert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"impossible\"\n"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"0+-\"\nassert solution(\"3 2\\n1 2 1\\n-2 0 2\") == \"0+-\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"--+0-\"\nassert solution(\"3 2\\n1 2 1\\n-2 0 2\") == \"0+-\"\nassert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"--+0-\"\nassert solution(\"3 2\\n1 2 1\\n-2 0 2\") == \"0+-\"\nassert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"--+0-\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Error: Your solution is incorrect. The output is: {output}, but the expected output is: {output}\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Test failed for input {input()}\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output, f\"Expected {expected_output}, got {solution(stdin)}\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n1 1\\n1 1\\n1\\n1 1 1\") == \"1\\n\"\nassert solution(\"2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2\") == \"4\\n4\\n\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 2\\n1 1\\n1 1\\n1\\n1 1 1\\n2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2\\n') == '1\\n4\\n4\\n'\n"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n1 1\\n1 1\\n1\\n1 1 1\") == \"1\\n\"\nassert solution(\"2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2\") == \"4\\n4\\n\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(None) == \"\"\nassert solution(\"1\\n2\\n3\\n\") == \"1\\n4\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '''1'''"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('Test Input 1') == '1\\n'\nassert solution('Test Input 2') == '4\\n4\\n'"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"Expected: {expected_output}, Received: {solution(stdin)}\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB') == 'YES'\nassert solution('3 4\\nWWRR\\nWRRR\\nWRRR') == 'NO'"
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\\n\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\\n\") == \"NO\\n\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\\n\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\\n\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB') == 'YES'\nassert solution('3 4\\nWWRR\\nWRRR\\nWRRR') == 'NO'"
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == 'YES'\nassert solution(sample_input2) == 'NO'"
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\\n\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\\n\") == \"NO\"\n"
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB') == 'YES\\n'\nassert solution('3 4\\nWWRR\\nWRRR\\nWRRR\\n') == 'NO\\n'"
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\\n\") == \"NO\""
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 5\\n1\\n2\\n3\\nSample Output 1: 1\\n\") == \"1\\n\"\nassert solution(\"6 3 5\\n1\\n2\\n3\\n3\\n2\\n1\\nSample Output 2: 3\\n\") == \"3\\n\""
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3 5\\n1\\n2\\n3\") == \"1\"\nassert solution(\"6 3 5\\n1\\n2\\n3\\n3\\n2\\n1\") == \"3\"\n"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 1"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3 5\\n1\\n2\\n3\\n6 3 5\\n1\\n2\\n3\\n3\\n2\\n1') == '1\\n'\nassert solution('6 3 5\\n1\\n2\\n3\\n3\\n2\\n1') == '3\\n'"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == expected\n"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '1\\n'"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r').read()) == '1\\n'\n"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '1', \"The given input is incorrect.\"\n"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 5\\n1\\n2\\n3\") == \"1\"\nassert solution(\"6 3 5\\n1\\n2\\n3\\n3\\n2\\n1\") == \"3\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    3\n    0 2\n    1 2\n    3 3\n    ''') == '''\n    3 2\n    '''\n\nassert solution('''\n    5\n    0 2\n    1 3\n    3 3\n    7 5\n    9 5\n    ''') == '''\n    12 3\n    '''"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"example_input.txt\", \"r\").read()) == \"3 2\\n12 3\"\n"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == output, f\"Test case {case_num} failed: expected {output}, got {solution(stdin)}\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n0 2\\n1 2\\n3 3\\n5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n\") == \"3 2\\n\"\nassert solution(\"5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n\") == \"12 3\\n\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3 2\\n12 3\"\n"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == \"3 2\"\nassert solution(sample_input2) == \"12 3\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\").read()) == \"3 2\\n12 3\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 2\\n1 2\\n3 3\\nSample Input 1:\\n3\\n0 2\\n1 2\\n3 3\\nSample Output 1:\\n3 2\\n\") == \"3 2\"\nassert solution(\"5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\nSample Input 2:\\n5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\nSample Output 2:\\n12 3\\n\") == \"12 3\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n0 2\\n1 2\\n3 3\\n5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\") == \"3 2\\n12 3\"\nassert solution(\"5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\") == \"12 3\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3 2\"\n"
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1000\\n000\\n010\\n010\\n000\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == output1, f\"Expected output1 to be '{output1}', but got '{solution(input1)}'.\"\nassert solution(input2) == output2, f\"Expected output2 to be '{output2}', but got '{solution(input2)}'.\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\\n\") == \"100\\n000\\n01\\n01\\n01\\n\", \"Bar Code is a puzzle game invented by Thinh Van Duc Lai in 2017 that was first published in the New York Times. Bar Code is played on a square grid consisting of $n \\times n$ unit squares with $(n+1) \\times (n+1)$ grid points. For a given specification, the puzzle requires the marking of some of the borders of these unit squares by drawing a vertical or horizontal bar, subject to the following conditions:\n\n1. For each row/column, the specification describes exactly how many separate groups of consecutive bars of the same orientation (vertical and horizontal, resp.) there should be in this row/column. For instance, if the specification demands 2 1 1, then there have to be $3$ groups of $2$, $1$, and $1$ bars, separated by at least one unmarked border. For example, for a $n = 6$ puzzle with $7$ borders in each row, the following markings would meet this specification:\n\n  1101010 1101001 1100101 0110101\n\n2. No $2$ bars may touch.\n\nThe illustration shows the solution for sample input $3$.\n\nFind a marking that is consistent with the given specification!\n\n-----Input-----\nThe input consists of a single test case. The first line contains a single integer $n$ ($0 < n \\le 9$). This is followed by $n$ lines. The $i^{\\text {th}}$ line contains $1$ or more non-negative integers denoting the sizes of groups that must be formed by the vertical bars in row $i$ (counting from the top). If the line contains the single integer $0$, then no borders may be marked for that row. Otherwise, none of the integers on the line will be $0$.\n\nFollowing that will be another $n$ lines. The $j^{\\text {th}}$ line contains $1$ or more non-negative integers denoting the sizes of groups that must be formed by the horizontal bars in column $j$ (counting from the left). If the line contains the single integer $0$, then no borders may be marked for that column. Otherwise, none of the integers on the line will be $0$.\n\n-----Output-----\nOutput the solution as follows. On the first $n$ lines, output a string of length $n+1$ consisting of 1 and 0 characters. The $i^{\\text {th}}$ string should contain a 1 in position $j$ if and only if the $j^{\\text {th}}$ vertical border in row $i$ should be marked as a bar. On the next $n+1$ lines, output a string of length $n$ also consisting of 1 and 0 characters. The $i^{\\text {th}}$ string should contain a 1 in position $j$ if and only if the $i^{\\text {th}}$ horizontal border in column $j$ should be marked as a bar. Rows are counted top down and columns are counted left to right.\n\nIf there are multiple solutions, you may output any of them! You may assume that at least one marking exists that is consistent with the specification.\n\n-----Examples-----\nSample Input 1:\n2\n1\n0\n0\n3\nSample Output 1:\n100\n000\n01\n01\n01\n\nSample Input 2:\n3\n0\n1 1\n1\n1 1\n1\n1\nSample Output 2:\n0000\n1001\n0010\n101\n010\n000\n100"
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\\n\") == \"100\\n000\\n01\\n01\\n01\\n\"\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n\") == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\\n\") == \"100\\n000\\n01\\n01\\n01\\n\"\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n\") == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == output, \"Test case failed\"\nfor i in range(n):\n    line = input.readline().strip().split()\n    vertical_borders = []\n    for j in range(n):\n        if line[j] == '0':\n            continue\n        border = int(line[j])\n        vertical_borders.append(border)\n    if not vertical_borders:\n        continue\n    marking = [0] * n\n    for i, vertical_border in enumerate(vertical_borders):\n        for j in range(i+1, n):\n            if vertical_borders[j] <= vertical_border:\n                marking[j] = 1\n    for j in range(n):\n        if marking[j] == 1:\n            output += '1'\n        else:\n            output += '0'\n    output += '\\n'\nprint(output)"
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    2\n    1\n    0\n    0\n    3\n    \"\"\"\n) == \"100\\n000\\n01\\n01\\n01\\n\"\n\nassert solution(\n    \"\"\"\n    3\n    0\n    1 1\n    1\n    1 1\n    1\n    1\n    \"\"\"\n) == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\\n\") == \"100\\n000\\n01\\n01\\n01\\n\"\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n\") == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\\n\") == \"100\\n000\\n01\\n01\\n01\\n\", \"Sample Input 1\"\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n\") == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\", \"Sample Input 2\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n1\\n0\\n0\\n3\\n') == '100\\n000\\n01\\n01\\n01\\n'\nassert solution('3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n') == '0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n'\n\nfrom typing import List"
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    3 1\n    1 2\n    2 3\n    2 3\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    4 1\n    1 3\n    4 6\n    7 8\n    2 5\n    \"\"\"\n) == \"3\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n1 2\\n2 3\\n2 3\") == 2\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\") == 3"
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n2 3\\n2 3\\n2 3\\n\") == \"2\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n\") == \"3\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n1 2\\n2 3\\n2 3\\n\") == \"2\\n\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n\") == \"3\\n\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\", \"The output should be 2\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n1 2\\n2 3\\n2 3\\n\") == \"2\\n\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n\") == \"3\\n\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"3 1\\n\"\n    \"1 2\\n\"\n    \"2 3\\n\"\n    \"2 3\\n\"\n) == \"2\\n\"\n\nassert solution(\n    \"4 1\\n\"\n    \"1 3\\n\"\n    \"4 6\\n\"\n    \"7 8\\n\"\n    \"2 5\\n\"\n) == \"3\\n\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n2 3\\n2 3\\n2 3\\n\") == \"2\\n\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n\") == \"3\\n\"\n"
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 1\\n1 2\\n2 3\\n2 3\\n4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n') == '2\\n'"
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n\") == \"2\\n\"\nassert solution(\"4\\n1\\n3\\n4\\n6\\n7\\n8\\n2\\n5\\n\") == \"3\\n\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"90.00000000\"\nassert solution(\"5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"126.86989765\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"90.00000000\"\nassert solution(\"5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"126.86989765\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == \"90.00000000\"\nassert solution(sample_input2) == \"126.86989765\"\n\nfrom typing import List"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5') == '90.00000000'\nassert solution('5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5') == '126.86989765'"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n') == '90.00000000\\n'\nassert solution('5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n') == '126.86989765\\n'"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"90.00000000\"\nassert solution(\"5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"126.86989765\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"90.00000000\"\nassert solution() == \"126.86989765\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n\"\"\") == \"90.00000000\\n\"  # expected output: 90 degrees\n\nassert solution(\"\"\"5 6 450\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n\"\"\") == \"126.86989765\\n\"  # expected output: 126 degrees"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"90.00000000\"\nassert solution(\"5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"126.86989765\"\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '90.00000000'\n\nsolution = '''\n"
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"37\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(\"30014\") == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"37\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(\"30014\") == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\"\nassert solution(\"4\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(\"8\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(\"9\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(\"11\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(\"15\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(\"35\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(\"25\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(\"45\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(\"60\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(\"1000000000\") == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\"\nassert solution(\"9999999999\") == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(37) == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(30014) == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(37) == \"4\"\nassert solution(30014) == \"7\"\n\nfrom typing import List"
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test Failed: Expected Output: {expected_output}, Actual Output: {solution(input())}\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"37\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(\"30014\") == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\"\n\nfrom typing import List"
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '4\\n8 29\\n9 28\\n11 26\\n15 22'"
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '''\n4\n8 29\n9 28\n11 26\n15 22\n'''"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3.5\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"The output is wrong. Please check the solution.\"\n"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"4.9\", \"Expected Output: 4.9, Received Output: {}\".format(solution())"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == expected_output\n"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3 1\") == \"3.5\"\nassert solution(\"3 3 2\") == \"4.9\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Solution failed for input {stdin} and expected {expected}\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3 1\") == \"3.5\"\nassert solution(\"3 3 2\") == \"4.9\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, but got {solution(stdin)}\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3 1\") == 3.5, \"Expected 3.5\"\nassert solution(\"3 3 2\") == 4.9, \"Expected 4.9\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3 1\") == 3.5\nassert solution(\"3 3 2\") == 4.9"
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 5 1 5') == '19'\nassert solution('12 12 1 12') == '4'"
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 5 1 5\") == \"19\"\nassert solution(\"12 12 1 12\") == \"4\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 5 1 5\") == \"19\\n\"\nassert solution(\"12 12 1 12\") == \"4\\n\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 5 1 5\\n12 12 1 12') == '19'\n\nassert solution('1 2 3 4\\n1 3 5 7') == '3'\n\nassert solution('1 10 1 20\\n1 15 5 10') == '2'\n\nassert solution('1 10 2 20\\n1 15 5 10') == '2'"
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5 1 5\\n\") == \"19\\n\"\nassert solution(\"12 12 1 12\\n\") == \"4\\n\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 5 1 5\") == \"19\", \"Sample Input 1\"\nassert solution(\"12 12 1 12\") == \"4\", \"Sample Input 2\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 5 1 5\") == \"19\\n\"\nassert solution(\"12 12 1 12\") == \"4\\n\"\n"
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5 1 5\") == \"19\"\nassert solution(\"12 12 1 12\") == \"4\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt').read()) == 19, \"Incorrect output\"\n"
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Test Failed for {input()}, got {solution(input())}, expected {output}\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 5\") == \"4\"\nassert solution(\"1 12\") == \"4\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == 4, \"Expected Output: 4\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 5\") == \"4\"\nassert solution(\"1 12\") == \"4\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 5\") == \"4\", \"Test 1 failed\"\nassert solution(\"1 12\") == \"4\", \"Test 2 failed\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5\") == \"4\"\nassert solution(\"1 12\") == \"4\"\nassert solution(\"3 4\") == \"2\"\nassert solution(\"1 20\") == \"0\"\nassert solution(\"1 5\") == \"4\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 5') == '4\\n', 'Sample Input 1'\nassert solution('1 12') == '4\\n', 'Sample Input 2'\n\nfrom typing import List"
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input(\"Enter the value of A_1: \")) == \"4\", \"The given input is incorrect. Please enter a valid value for A_1.\"\nassert solution(input(\"Enter the value of m: \")) == \"4\", \"The given input is incorrect. Please enter a valid value for m.\"\n\nfrom typing import List"
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5\") == \"4\"\nassert solution(\"1 12\") == \"4\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5\") == \"4\", \"Test case 1 failed.\"\nassert solution(\"1 12\") == \"4\", \"Test case 2 failed.\""
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"car\") == \"1\", \"Sample Input 1 failed\"\nassert solution(\"cocar\") == \"2\", \"Sample Input 2 failed\""
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('car') == '1'\nassert solution('cocar') == '2'"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='car') == '1'\nassert solution(stdin='cocar') == '2'"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"car\") == 1\nassert solution(\"cocar\") == 2\nassert solution(\"cocaror\") == 1"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"car\") == 1\nassert solution(\"cocar\") == 2"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"car\") == 1\nassert solution(\"cocaror\") == 2"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"car\") == 1\nassert solution(\"cocar\") == 2"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"car\") == 1\nassert solution(\"cocar\") == 2"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"car\") == 1\nassert solution(\"cocar\") == 2\n"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"car\") == 1\nassert solution(\"cocar\") == 2"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == \"8\"\nassert solution(sample_input2) == \"0\""
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '8' # Change this line with your actual solution\n"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n0 2 0 1\\n') == '8\\n'\nassert solution('5\\n1000000 1 1 1 1\\n') == '0\\n'"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"8\""
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == \"8\\n\", \"Incorrect output for sample input 1\"\nassert solution(sample_input2) == \"0\\n\", \"Incorrect output for sample input 2\""
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0 2 0 1\") == 8\nassert solution(\"5\\n1000000 1 1 1 1\") == 0"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n0 2 0 1\") == 8\nassert solution(\"5\\n1000000 1 1 1 1\") == 0"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 8\nassert solution(4) == 16\nassert solution(5) == 24\nassert solution(6) == 32\nassert solution(7) == 40\nassert solution(8) == 48\nassert solution(9) == 56\nassert solution(10) == 64"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Expected '{expected}', but got '{solution(stdin)}'.\"\nprint(\"All tests passed.\")\n"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n0 2 0 1') == '8'\nassert solution('5\\n1000000 1 1 1 1') == '0'"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 650\") == \"zyz\"\nassert solution(\"2 651\") == \"-1\"\n"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'zyz', \"Output should be zyz, but instead got {}\".format(solution(stdin))"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 650') == 'zyz', \"The solution is incorrect.\"\nassert solution('2 651') == '-1', \"The solution is incorrect.\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"zyz\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 650\\n\") == \"zyz\"\nassert solution(\"2 651\\n\") == \"-1\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"2 650\"\n) == \"zyz\", \"The solution should return 'zyz' for the given example.\"\n\nassert solution(\n    \"2 651\"\n) == \"-1\", \"The solution should return '-1' for the given example.\"\n\nfrom typing import List"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'zyz'"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 650\") == \"zyz\"\nassert solution(\"2 651\") == \"-1\"\n"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"zyz\", \"The correct string should be 'zyz'.\"\n"
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('example.txt', 'r').read()) == '4\\n'"
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"4\"\nassert solution() == \"8\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"8\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Output: \\n8\"\n"
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\\n\") == \"4\\n\"\n\nassert solution(\"10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\\n\") == \"8\\n\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\\n\") == \"4\\n\"\nassert solution(\"10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\\n\") == \"8\\n\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"8\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    6\n    0 10 0\n    10 0 1\n    12 8 1\n    5 5 0\n    11 2 1\n    11 3 0\n    ''') == '4\\n'\n\nassert solution('''\n    10\n    6 1 1\n    0 2 0\n    2 1 1\n    6 1 1\n    8 2 0\n    4 4 0\n    4 0 0\n    2 3 1\n    6 1 0\n    6 3 1\n    ''') == '8\\n'"
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\") == \"4\\n\", \"Solution should return the correct output.\"\nassert solution(\"10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\") == \"8\\n\", \"Solution should return the correct output.\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\") == \"4\\n\"\nassert solution(\"10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\") == \"8\\n\""
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 4 3\\n3 4 5 7\\n1 2 10') == '0\\n'\nassert solution('3 5 2\\n1 4 7 9 11\\n2 3') == '2\\ndef solution(stdin: str) -> str:\\npass\\n'"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4 3\\n3 4 5 7\\n1 2 10\\n\") == 0\nassert solution(\"3 5 2\\n1 4 7 9 11\\n2 3\\n\") == 2"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 0, \"Expected: 0, but got: {}\"\nassert solution() == 2, \"Expected: 2, but got: {}\""
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    2 4 3\n    3 4 5 7\n    1 2 10\n''') == '0\\n'\n\nassert solution('''\n    3 5 2\n    1 4 7 9 11\n    2 3\n''') == '2\\n'"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 4 3\\n3 4 5 7\\n1 2 10') == '0\\n'\nassert solution('3 5 2\\n1 4 7 9 11\\n2 3') == '2\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 4 3\\n3 4 5 7\\n1 2 10') == '0\\n'\nassert solution('3 5 2\\n1 4 7 9 11\\n2 3') == '2\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4 3\\n3 4 5 7\\n1 2 10\") == \"0\"\nassert solution(\"3 5 2\\n1 4 7 9 11\\n2 3\") == \"2\"\nassert solution(\"\") == \"-1\""
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(input())) == \"0\\n\"  # Example 1\nassert solution(str(input())) == \"2\\n\"  # Example 2"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 4 3\\n3 4 5 7\\n1 2 10') == 0\nassert solution('3 5 2\\n1 4 7 9 11\\n2 3') == 2\nassert solution('2 4 3\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 5 7\\n1 2 10\\n3 4 "
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 0, \"Solution should return 0 for the given input.\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\\n-2 -1\\n3\\n-1 1\\n2 1\\n0 -2\\n\", \"Your solution is incorrect.\"\n"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Test case {case_number} failed. Expected output: {expected_output}, Actual output: {solution(stdin=input())}\"\n"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == \"1\"\nassert solution(2) == \"1 -2\"\nassert solution(3) == \"3\"\nassert solution(4) == \"3 -1 1\"\nassert solution(5) == \"2 1\"\nassert solution(6) == \"2 1 0 -2\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"Sample Output 1:\\n1\\n-2 -1\\n\\nSample Output 2:\\n3\\n-1 1\\n2 1\\n0 -2\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output() for input, output in zip(stdin, output)"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n3 2\\n\") == \"1\\n-2 -1\\n\"\nassert solution(\"1 2\\n3 4\\n\") == \"3\\n-1 1\\n2 1\\n0 -2\\n\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == expected_output, \\\n    f\"Test failed: Expected output is: {expected_output}, but got: {solution()}\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n3 2\") == \"1\\n-2 -1\"\nassert solution(\"1 2\\n3 4\") == \"3\\n-1 1\\n2 1\\n0 -2\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\nIVO\\nJASNA\\nJOSIPA\") == 4\nassert solution(\"5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\") == 24"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\nIVO\\nJASNA\\nJOSIPA\\n\") == \"4\\n\"\nassert solution(\"5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\\n\") == \"24\\n\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == output1, \"Test case 1 failed\"\nassert solution(input2) == output2, \"Test case 2 failed\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=f\"\"\"\n    3\n    4\n    5\n    6\n    7\n\"\"\") == 4\n\nassert solution(stdin=f\"\"\"\n    4\n    5\n    6\n    7\n    8\n\"\"\") == 24"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Test failed for input {stdin}\"\n"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"4\\n\"\nassert solution(open(\"sample_input_1.txt\", \"r\")) == \"4\\n\"\nassert solution(open(\"sample_input_2.txt\", \"r\")) == \"24\\n\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 4, \"Test 1 failed\"\nassert solution(5) == 24, \"Test 2 failed\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\nIVO\\nJASNA\\nJOSIPA\") == \"4\\n\"\nassert solution(\"5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\") == \"24\\n\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(read_input()) == \"4\\n\"\nassert solution(read_input()) == \"24\\n\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\") == 3\nassert solution(\"3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7\") == 39\nassert solution(\"3\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == 47\nassert solution(\"3\\n1 2 3 5\\n2 3 4 6\\n3 4 5 7\\n4 5 6 8\") == 50\nassert solution(\"3\\n1 2 3 6\\n2 3 4 7\\n3 4 5 8\\n4 5 6 9\") == 53\nassert solution(\"3\\n1 2 3 7\\n2 3 4 8\\n3 4 5 9\\n4 5 6 10\") == 56"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3\\n\"\nassert solution(open(\"sample_input_1.txt\", \"r\")) == \"3\\n\"\nassert solution(open(\"sample_input_2.txt\", \"r\")) == \"39\\n\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 3, \"Incorrect solution for sample input 1\"\nassert solution(1) == 0, \"Incorrect solution for sample input 2\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 39, \"The solution should return 39\"\n"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\") == 3, \"Incorrect output\"\n\nassert solution(\"3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7\") == 39, \"Incorrect output\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1') == '3\\n'\nassert solution('3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7') == '39\\n'\nassert solution('') == ''\nassert solution('1\\n1\\n1') == ''"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 3, \"Incorrect solution\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\") == \"3\\n\"\nassert solution(\"3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7\") == \"39\\n\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == 39, \"Incorrect output. Please check the solution.\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\\n') == '5.2696518641\\n'\nassert solution('1\\n8 9 3 -14 -14 14 -14 0 20\\n') == '9\\n'"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\") == 5.2696518641\nassert solution(\"1\\n8 9 3 -14 -14 14 -14 0 20\") == 9"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == \"5.2696518641\\n\"\nassert solution(open(\"sample_input2.txt\", \"r\")) == \"9\\n\""
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 10 10 10\") == \"5.2696518641\"\nassert solution(\"2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\") == \"5.2696518641\"\nassert solution(\"1\\n8 9 3 -14 -14 14 -14 0 20\") == \"9\""
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n    2\n    5 8 4 -2 0 0 -3 2 0 0 3\n    8 10 4 -1 -1 1 -1 1 1 -1 1\n    '''\n) == 5.2696518641\n\nassert solution(\n    '''\n    1\n    8 9 3 -14 -14 14 -14 0 20\n    '''\n) == 9"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\\n\") == \"5.2696518641\\n\"\nassert solution(\"1\\n8 9 3 -14 -14 14 -14 0 20\\n\") == \"9\\n\""
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"5.2696518641\\n\""
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    2\n    5 8 4 -2 0 0 -3 2 0 0 3\n    8 10 4 -1 -1 1 -1 1 1 -1 1\n    \"\"\"\n) == \"5.2696518641\"\n\nassert solution(\n    \"\"\"\n    1\n    8 9 3 -14 -14 14 -14 0 20\n    \"\"\"\n) == \"9\""
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\") == 5.2696518641\nassert solution(\"1\\n8 9 3 -14 -14 14 -14 0 20\") == 9"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Expected output: {expected}, Got: {solution(stdin)}\"\n"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n1 1 1\\n2 0 2\\n3 1 1') == '1\\n8\\n4'\nassert solution('3\\n4 1 1\\n5 2 3\\n5 0 3') == '6\\n4\\n24'\nassert solution('2\\n2 3\\n1 1') == '-1'\nassert solution('3\\n1 2 3\\n2 4 5\\n3 6 7') == '1\\n4\\n14'"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"your_code_here\"\n"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1 1\\n2 0 2\\n3 1 1\") == \"1\\n8\\n4\"\nassert solution(\"3\\n4 1 1\\n5 2 3\\n5 0 3\") == \"6\\n4\\n24\"\nassert solution(\"1\\n1 1 1\\n2 0 2\\n3 1 1\") == \"1\\n8\\n4\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, got: {solution(stdin)}\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Testcase failed: {stdin}\\nExpected Output: {expected}\\nActual Output: {solution(stdin)}\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n1 1 1\\n2 0 2\\n3 1 1\\n') == ['1\\n8\\n4\\n']\nassert solution('3\\n4 1 1\\n5 2 3\\n5 0 3\\n') == ['6\\n4\\n24\\n']\nassert solution('3\\n1 2 3\\n2 1 4\\n3 2 5\\n') == ['2\\n-1\\n']\nassert solution('3\\n1 1 1\\n2 0 2\\n3 1 1\\n') == ['1\\n8\\n4\\n']\nassert solution('1\\n1 1 1\\n2 0 2\\n3 1 1\\n') == ['1\\n8\\n4\\n']\nassert solution('3\\n1 1 1\\n2 0 2\\n3 1 1\\n4 2 3\\n') == ['6\\n4\\n24\\n']\nassert solution('1\\n1 1 1\\n2 0 2\\n3 1 1\\n4 2 3\\n') == ['1\\n8\\n4\\n']\nassert solution('1\\n1 1 1\\n2 0 2\\n3 1 1\\n5 2 3\\n') == ['6\\n4\\n24\\n']\n"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1 1 1\\n2 0 2\\n3 1 1\\n') == '1\\n8\\n4\\n'\nassert solution('3\\n4 1 1\\n5 2 3\\n5 0 3\\n') == '6\\n4\\n24\\n'\n\nassert solution('1\\n1 1 1\\n') == '-1\\n'\nassert solution('3\\n4 1 1\\n5 2 3\\n6 2 2\\n') == '-1\\n'\n\nassert solution('3\\n1 1 1\\n2 0 2\\n3 1 1\\n4 0 0\\n') == '-1\\n'\nassert solution('3\\n4 1 1\\n5 2 3\\n5 0 3\\n4 1 1\\n') == '6\\n4\\n24\\n'\n\nassert solution('5\\n2 1 2\\n1 2 2\\n') == '4\\n'\nassert solution('5\\n2 1 2\\n1 2 2\\n3 0 2\\n') == '24\\n'"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1 1 1\\n2 0 2\\n3 1 1') == '1\\n8\\n4'\nassert solution('3\\n4 1 1\\n5 2 3\\n5 0 3') == '6\\n4\\n24'"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3\\n\"\nassert solution() == \"240\\n\""
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"3 2\\n\") == \"3\"\nassert solution(stdin=\"6 6\\n\") == \"240\""
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected, f\"Solution is {solution}, but expected {expected}\"\n"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 3\nassert solution(6) == 240"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 2) == 3\nassert solution(6, 6) == 240"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 2) == 3\nassert solution(6, 6) == 240\n"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"3\\n\"\nassert solution(\"6 6\") == \"240\\n\""
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 3\nassert solution() == 240\nassert solution() == 3"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3\\n\"\nassert solution(stdin) == \"240\\n\""
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 2) == 3\nassert solution(6, 6) == 240"
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(\"SEND+MORE=MONEY\")))))))) == \"9567+1085=10652\"\nassert solution(solution(solution(solution(solution(solution(solution(solution(\"A+A=A\")))))))) == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == '9567+1085=10652'\nassert solution(sample_input2) == 'impossible'"
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\", \"Solution 1 is incorrect.\"\nassert solution(\"A+A=A\") == \"impossible\", \"Solution 2 is incorrect.\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\", \"Incorrect output for sample case 1\"\nassert solution(\"A+A=A\") == \"impossible\", \"Incorrect output for sample case 2\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"The function returned {solution(input())}, but the expected output is {expected_output}\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n4\\n0\\n1\\n2\\n3\\n4\\n6\\n5\\n5\") == \"14\"\nassert solution(\"1\\n1\\n2\\n1\\n1\\n\") == \"1\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == output, f\"Expected {output}, got {solution(stdin=input())}\"\n\ninput_data = [[int(x) for x in input().split()] for _ in range(int(input()))]"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n0 1 2 3\") == \"14\\n\"\nassert solution(\"5\\n1 1 2 1 1\") == \"1\\n\"\n"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"14\"\nassert solution() == \"1\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n0 1 2 3\\n') == '14'\n\nfrom itertools import permutations\n\nn = int(stdin.readline().strip())\na = list(map(int, stdin.readline().split()))\n\ncount = 1\nfor i in range(n):\n    if i > 0 and a[i]!= a[i-1]:\n        count += 1\n\nprint(count % (10**9 + 9))"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 14"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 2 1 1\") == \"1\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == str(14)"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\").read()) == 14\n"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output\nprint(\"OK\")"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n\\n4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n\\n4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n') == '88\\n'\nassert solution('1\\n4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n\\n4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n\\n4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n') == '-1\\n'"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n4 4\n1 2 3 0\n0 0 5 6\n0 0 7 8\n7 0 0 10\n''') == '88'\n\nassert solution('''\n4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n''') == '-1'"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == \"88\"\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\") == \"-1\""
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == 88\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\") == -1"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == 88\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\") == -1"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test Case {i+1} failed. Output: {solution(input())}, Expected: {output}\""
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''4 4\n1 2 3 0\n0 0 5 6\n0 0 7 8\n7 0 0 10''') == '88\\n'"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"0.000\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Output: {solution(input())}, Expected: {expected_output}\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Test case failed. Expected output: {expected_output}, got: {solution(stdin)}\"\n"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"0.000\"\n"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0.000\", \"The correct output should be 0.000.\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0.000\"\n"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0.000\", \"The correct solution is 0.000\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n1 1\\n1 1\\n') == '0.000\\n'\nassert solution('2\\n1 99999\\n99999 99999\\n') == '9999700002.000\\n'"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 0.000"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n6 8 1 6\n1 2 5\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5\n1 3 6 5 4\n''') == 3\n\nassert solution('''\n3 4 1 2\n1 2 6\n1 3 2\n1 2 7\n2 3 3\n2\n1 2\n''') == Infinity"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\\n\") == \"3\\n\"\nassert solution(\"3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\\n\") == \"Infinity\\n\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"\"\"3\"\"\"\n"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '3', \"Incorrect Output\"\n"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\\n') == '3\\n'\nassert solution('3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\\n') == 'Infinity\\n'"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '3', \"Incorrect output\"\n\nfrom typing import List"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\\n') == '3\\n'\nassert solution('3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\\n') == 'Infinity\\n'"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\") == \"3\\n\"\nassert solution(\"3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\\n\") == \"Infinity\\n\"\n"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\\n') == 3\n\nassert solution('3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\\n') == Infinity"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"impossible\""
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n6\\n6 1\\n"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\""
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"impossible\""
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"impossible\" # add your solution here"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6 1\\n6\\nSample Input 1:6 1\\n6\\nSample Output 1:impossible\\n\\nSample Input 2:3 1\\n1\\nSample Output 2:000\\n001\\n011\\n010\\n110\\n111\\n101\\n100') == 'impossible\\n\\n000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n'"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"impossible\" #Your code goes here"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output() for input, output in [\n    (\"6 1\", \"impossible\"),\n    (\"3 1\", \"000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\"),\n    (\"12 2\", \"011010100\\n111000000\\n011111101\\n101010101\\n011011110\\n000101111\\n100001101\\n011100011\\n111011110\\n101111111\\n111001011\\n100010101\\n100111111\\n100100000\\n110011100\\n001100100\\n110110110\\n011111110\\n010110000\\n111110110\\n001110111\\n001010010\\n100101001\\n010011100\\n111000101\\n010011011\\n110100011\\n101101111\\n111101111\\n101111001\\n001111010\\n101101100\\n010100001\\n101101001\\n110100101\\n110010111\\n111110100\\n111100110\\n100111101\\n110110100\\n101000011\\n001010101\\n100110110\\n100000010\\n101011111\\n001000111\\n001101001\\n110010100\\n100110001\\n001001001\\n110001011\\n001010110\\n010001101\\n010111111\\n110000100\\n001110100\\n110110110\\n100010001\\n100011101\\n110001110\\n101000101\\n110000111\\n001011000\\n000101111\\n111110100\\n001110100\\n111001100\\n001111000\\n100110100\\n011111001\\n011010000\\n101000010\\n000010010\\n111001001\\n011010010\\n100001000\\n110011011\\n111111101\\n010111010\\n101011110\\n100111110\\n101101111\\n111011111\\n100111111\\n001111111\\n111111111\\n11"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"impossible\"\n"
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\n99\\n\") == \"1\\n\"\nassert solution(\"90\\n10\\n\") == \"10\\n\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\n99\\n\") == \"1\\n\", \"First test case failed\"\nassert solution(\"90\\n10\\n\") == \"10\\n\", \"Second test case failed\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\n99\") == \"1\\n\", \"The first example does not match the expected output.\"\nassert solution(\"90\\n10\") == \"10\\n\", \"The second example does not match the expected output.\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\n99\") == 1\nassert solution(\"90\\n10\") == 10"
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10\\n99') == 1\nassert solution('90\\n10') == 10\n\nfrom typing import List"
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\n99\") == \"1\"\nassert solution(\"90\\n10\") == \"10\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"1\", \"1\"\nassert solution(\"99\") == \"1\", \"1\"\nassert solution(\"90\") == \"10\", \"10\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\n99\") == \"1\\n\", \"Input 1 is incorrect\"\nassert solution(\"90\\n10\") == \"10\\n\", \"Input 2 is incorrect\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10\\n99') == '1\\n', \"The correct output should be '1\\n'\"\nassert solution('90\\n10') == '10\\n', \"The correct output should be '10\\n'\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\") == \"1\\n\"\nassert solution(\"99\") == \"1\\n\"\nassert solution(\"90\") == \"10\\n\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\", \"The maximum number of victories that can be achieved by elves is 2.\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n2 3 3\\n4 1 10\\n2 7 3\\n') == '2\\n'\nassert solution('4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\\n') == '1\\n'"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 3 3\\n4 1 10\\n2 7 3\") == \"2\\n\"\nassert solution(\"4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\") == \"1\\n\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\\n\", \"Test 1 failed\"\n\nassert solution() == \"1\\n\", \"Test 2 failed\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Solution does not match the expected output\\nInput: {stdin}\\nExpected Output: {expected}\\n\"\n\nfor i in range(1, 11):\n    expected = i\n    stdin = input(f\"Sample Input {i}:\")\n    solution(stdin)"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    '''\n    3\n    2 3 3\n    4 1 10\n    2 7 3\n    '''\n) == '2'\n\nassert solution(\n    '''\n    4\n    3 1 3 3\n    5 8 7 10\n    4 1 2 6\n    '''\n) == '1'"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n2 3 3\\n4 1 10\\n2 7 3') == '2'\nassert solution('4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6') == '1'"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 3 3\\n4 1 10\\n2 7 3\") == 2\nassert solution(\"4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\") == 1"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"The solution is not correct. Please check the code and the input.\"\n"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('9 3\\nbeginning\\n1 5\\n4 8\\n1 9') == ['5', '11', '16']\nassert solution('6 1\\nvelvet\\n1 6') == ['7', 'def solution(stdin: str) -> str: pass']"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"beginning\") == 5\nassert solution(\"1 5\") == 11\nassert solution(\"4 8\") == 16"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9 3\\nbeginning\\n1 5\\n4 8\\n1 9\") == 5\nassert solution(\"6 1\\nvelvet\\n1 6\") == 7"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"beginning\\n1 5\\n4 8\\n1 9\") == 5\nassert solution(\"velvet\\n1 6\") == 7"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"beginning\") == 5\nassert solution(\"1 5\\n4 8\\n1 9\") == 11\nassert solution(\"velvet\") == 7"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"beginning\") == \"5\"\nassert solution(\"1 5\") == \"11\"\nassert solution(\"4 8\") == \"16\"\nassert solution(\"1 9\") == \"5\""
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"beginning\") == \"5\", \"Solution 1\"\nassert solution(\"1 5 4 8 1 9\") == \"5\\n11\\n16\", \"Solution 2\""
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output, f\"Test failed for the given input: {sample_input} and expected output: {sample_output}\""
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abc\") == 2\nassert solution(\"Hello\") == 6\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == 15\nassert solution(\"This is a test string\") == 16\nassert solution(\"level and madam\") == 11\nassert solution(\"The quick brown fox jumps over the lazy dog\") == 7\nassert solution(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\") == 15"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n3 1\\n2 2\\n1 1\\n\") == \"2\\n\"\n\nassert solution(\"2 3\\n1 23\\n2 17\\n\") == \"23\\n\""
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n3 1\\n2 2\\n1 1\\n\") == 2\nassert solution(\"2 3\\n1 23\\n2 17\\n\") == 23"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 4\\n3 1\\n2 2\\n1 1\\n') == 2\nassert solution('2 3\\n1 23\\n2 17\\n') == 23"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n3 1\\n2 2\\n1 1\") == \"2\\n\"\nassert solution(\"2 3\\n1 23\\n2 17\") == \"23\\n\""
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"123\\n345\\n678\\n901\\n123\\n456\\n789\\n\") == \"23\"\nassert solution(\"123\\n345\\n678\\n901\\n123\\n456\\n789\\n\") == \"23\"\nassert solution(\"123\\n345\\n678\\n901\\n123\\n456\\n789\\n\") == \"23\"\nassert solution(\"123\\n345\\n678\\n901\\n123\\n456\\n789\\n\") == \"23\"\nassert solution(\"123\\n345\\n678\\n901\\n123\\n456\\n789\\n\") == \"23\"\nassert solution(\"123\\n345\\n678\\n901\\n123\\n456\\n789\\n\") == \"23\"\nassert solution(\"123\\n345\\n678\\n901\\n123\\n456\\n789\\n\") == \"23\"\nassert solution(\"123\\n345\\n678\\n901\\n123\\n456\\n789\\n\") == \"23\"\nassert solution(\"123\\n345\\n678\\n901\\n123\\n456\\n789\\n\") == \"23\"\nassert solution(\"123\\n345\\n678\\n901\\n123\\n456\\n789\\n\") == \"23\"\nassert solution(\"123\\n345\\n678\\n901\\n123\\n456\\n789\\n\") == \"23\"\nassert solution(\"123\\n345\\n678\\n901\\n123\\n456\\n789\\n\") == \"23\"\nassert solution(\"123\\n345\\n678\\n901\\n123\\n456\\n789\\n\") == \"23\"\nassert solution(\"123\\n345\\n678\\n901\\n123\\n456\\n789\\n\") == \"23\"\nassert solution(\"123\\n345\\n678\\n901\\n123\\n456\\n789\\n\") == \"23\"\nassert solution(\"123\\n345\\n678\\n901\\n123\\n456\\n789\\n\") == \"23\"\nassert solution(\"123\\n345\\n678\\n901\\n123\\n456\\n789\\n\") == \"23\"\nassert solution(\"123\\n345\\n678\\n901\\n123\\n456\\n789\\n\") == \"23\"\nassert solution(\"123\\n345\\n678\\n901\\n123\\n456\\n789\\n\") == \"23\"\nassert solution(\"123\\n345\\n678\\n901\\n123\\n456\\n789\\n\") == \"23\"\nassert solution(\"123\\n345\\n678\\n901\\n123\\n456\\n789\\n\") == \"23\"\nassert solution(\"123\\n345\\n678\\n901\\n123\\n456\\n789\\n\") == \"23\"\nassert solution(\"123\\n345\\n678\\n901\\n123\\n456\\n789"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n3 1\\n2 2\\n1 1\") == 2\nassert solution(\"2 3\\n1 23\\n2 17\") == 23"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    3 4\n    3 1\n    2 2\n    1 1\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    2 3\n    1 23\n    2 17\n    \"\"\"\n) == \"23\""
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution, \"No solution provided\"\n"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n4\n0 0\n2 0\n2 2\n0 2\n0 -1 0 3\n''') == '0.0000000000'\n\nassert solution('''\n6\n0 1\n0 4\n3 6\n7 5\n4 2\n7 0\n5 7 2 0\n''') == '9.476048311178'"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\") == \"0.0000000000\"\nassert solution(\"6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\") == \"9.476048311178\""
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\").read()) == '9.476048311178'\n"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\npass\\n\"\n"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_data) == expected_output, \"Your solution is incorrect.\""
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\\n6\") == \"0.0000000000\"\nassert solution(\"6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\\n\") == \"9.476048311178\""
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\") == \"0.0000000000\"\nassert solution(\"6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\") == \"9.476048311178\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == \"0.0000000000\"\nassert solution(sample_input_2) == \"9.476048311178\""
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\\n6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\\n') == '0.0000000000'\nassert solution('6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\\n') == '9.476048311178'"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n\") == \"8.0000000000\"\nassert solution(\"5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\\n\") == \"0.0200000000\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '8.0000000000', \"Incorrect output\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str: pass\\n\"\n"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == '8.0000000000'"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input1) == output1, \"Test 1 failed\"\nassert solution(input2) == output2, \"Test 2 failed\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\") == \"8.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n\") == \"8.0000000000\\n\"\nassert solution(\"5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\\n\") == \"0.0200000000\\n\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"8.0000000000\", \"Incorrect output for sample input 1\"\n\nassert solution(stdin) == \"0.0200000000\", \"Incorrect output for sample input 2\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"9 4 3\\n1 1 9 9 1 6 6 39 9\\n\") == \"2\\n\"\nassert solution(\n    \"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == \"2\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\\n\", \"Expected output: '2\\n', but got: '{}'.\".format(solution())"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: '{expected_output}', got: '{solution(stdin)}'\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test failed: {solution(input())}!= {output}\"\n\nfor i in range(3):\n    N, K, C = list(map(int, input().split()))\n    A = list(map(int, input().split()))\n    \n    max_companies = 0\n    for i in range(N):\n        for j in range(N):\n            if A[i] == A[j]:\n                max_companies += 1\n                break\n    \n    if max_companies < K or max_companies < C:\n        max_companies = 0\n    \n    print(max_companies)"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\\n\") == \"2\\n\"\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == \"2\\n\"\nassert solution(\"8 3 2\\n1 1 1 1 1 1 1 1 1 1\\n\") == \"0\\n\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\\n\") == \"2\\n\"\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == \"2\\n\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\\n\") == \"2\"\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == \"2\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('9 4 3\\n1 1 9 9 1 6 6 39 9\\n') == '2\\n'\n\nassert solution('10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n') == '2\\n'"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == '3.666666667\\n'\nassert solution(stdin='3 3 2\\n1 2 3\\n') == '3.666666667\\n'\nassert solution(stdin='4 11 4\\n10 10 10 10\\n') == '20.000000000\\n'"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3 2\\n1 2 3\") == \"3.666666667\"\nassert solution(\"4 11 4\\n10 10 10 10\") == \"20.000000000\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 2\\n1 2 3\") == \"3.666666667\"\nassert solution(\"4 11 4\\n10 10 10 10\") == \"20.000000000\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2\n\nsample_input1 = \"3 3 2\\n1 2 3\"\nsample_input2 = \"4 11 4\\n10 10 10 10\"\nexpected_output1 = \"3.666666667\"\nexpected_output2 = \"20.000000000\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == \"3.666666667\", \"The correct answer is: 3.666666667\"\nassert solution(sample_input_2) == \"20.000000000\", \"The correct answer is: 20.000000000\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '20.000000000'"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=None) == solution(stdin='3 3 2\\n1 2 3\\n4 11 4\\n10 10 10 10')\nassert abs(solution(stdin='3 3 2\\n1 2 3\\n4 11 4\\n10 10 10 10') - 3.666666667) <= 1e-6\n\nassert solution(stdin=None) == solution(stdin='3 3 2\\n1 2 3\\n4 11 4\\n10 10 10 10')\nassert abs(solution(stdin='3 3 2\\n1 2 3\\n4 11 4\\n10 10 10 10') - 20.0) <= 1e-6"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3 2\\n1 2 3') == '3.666666667'\nassert solution('4 11 4\\n10 10 10 10') == '20.000000000'"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_str) == output_str, \"The solution is incorrect. Please check the example cases and the input/output format.\" for input_str, output_str in test_cases\n"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 1\nassert solution(2) == 1\nassert solution(5) == 5\nassert solution(10) == 601\nassert solution(100) == 317847510392982345747200\nassert solution(1000000000) == 1331427805450263359565179188857083723185187947108435296173238976314618695444500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Solution is {solution(input())} but expected {expected_output}\""
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 42\") == 2\nassert solution(\"5 123456789\") == 16317634"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 42\") == \"2\"\nassert solution(\"5 123456789\") == \"16317634\""
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 42\") == \"2\\n\", \"Test 1 failed\"\nassert solution(\"5 123456789\") == \"16317634\\n\", \"Test 2 failed\""
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 42\") == \"2\"\nassert solution(\"5 123456789\") == \"16317634\""
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 42\\n5 123456789\\n\") == \"2\\n16317634\\n\""
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2\"\nassert solution(open(\"input.txt\", \"r\")) == \"16317634\""
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Test case 1 failed.\"\nassert solution(sample_input_2) == sample_output_2, \"Test case 2 failed.\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Incorrect output\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"0\\n\"\nprint(\"Success\")"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == \"0\"\nassert solution(sample_input_2) == \"4\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n3 1 0 0 2\n1 2 2\n1 1 1\n\"\"\") == \"0\\n\"\n\nassert solution(\n\"\"\"\n3 1 1 1 8\n0 1 1\n1 0 1\n2 1 1\n1 2 1\n1 2 2\n2 2 3\n0 2 5\n1 2 6\n\"\"\") == \"4\\n\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 1 0 0 2\\n1 2 2\\n1 1 1') == '0'\nassert solution('3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6') == '4'"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1 0 0 2\\n1 2 2\\n1 1 1\\n\") == \"0\\n\"\nassert solution(\"3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\\n\") == \"4\\n\"\n"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 1 0 0 2\\n1 2 2\\n1 1 1') == '0\\n'\nassert solution('3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6') == '4\\n'"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '0'\nassert solution() == '4'"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''3 1 0 0 2\n1 2 2\n1 1 1''') == '0\\n'\n\nassert solution('''3 1 1 1 8\n0 1 1\n1 0 1\n2 1 1\n1 2 1\n1 2 2\n2 2 3\n0 2 5\n1 2 6''') == '4\\n'"
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == \"3\\n\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\") == \"3\\n\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == \"3\\n\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\") == \"3\\n\"\nassert solution(\"\") == \"0\\n\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Test case {i+1} failed. Expected output: '{expected}', got: '{solution(stdin)}'.\" for i, (stdin, expected) in enumerate(test_cases)"
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == \"3\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\") == \"3\"\n"
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == \"3\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\") == \"3\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\\n\") == \"3\\n\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\\n\") == \"3\\n\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n5 1 10 10\n8 8\n5 1\n4 6\n4 7\n7 9\n''') == '3\\n'\n\nassert solution('''\n5 1 100 100\n27 75\n79 77\n40 93\n62 41\n52 45\n''') == '3\\n'\n\nassert solution('''\n5 1 10 10\n8 8\n5 1\n4 6\n4 7\n7 9\n''') == '3\\n'\n\nassert solution('''\n5 1 100 100\n27 75\n79 77\n40 93\n62 41\n52 45\n''') == '3\\n'"
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == \"3\\n\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\") == \"3\\n\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\") == \"3\\n\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\\n\", \"Test Case 1 Failed\"\n\nassert solution() == \"3\\n\", \"Test Case 2 Failed\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''5 1 10 10\n8 8\n5 1\n4 6\n4 7\n7 9''') == '3'\n\nassert solution('''5 1 100 100\n27 75\n79 77\n40 93\n62 41\n52 45''') == '3'\n\nassert solution('''5 1 100 100\n27 75\n79 77\n40 93\n62 41\n52 45\n3 10 50 50''') == '3'\n\nassert solution('''5 1 100 100\n27 75\n79 77\n40 93\n62 41\n52 45\n3 10 50 50\n2 12 40 40''') == '3'\n\nassert solution('''5 1 100 100\n27 75\n79 77\n40 93\n62 41\n52 45\n3 10 50 50\n2 12 40 40\n1 14 30 30''') == '3'\n\nassert solution('''5 1 100 100\n27 75\n79 77\n40 93\n62 41\n52 45\n3 10 50 50\n2 12 40 40\n1 14 30 30\n4 20 30 30''') == '3'"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ABC\") == 2, \"Incorrect solution 1\"\nassert solution(\"ABBBAAAA\") == 3, \"Incorrect solution 2\""
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3\n"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('ABC') == 2\nassert solution('ABBBAAAA') == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ABC\") == \"2\"\nassert solution(\"ABBBAAAA\") == \"3\""
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3\n\nfrom typing import List"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\nA\\nB\\nA\\nB\\nA\\n\") == \"3\\n\", \"The solution is not correct.\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"The output {output()} is not correct.\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3\\n\"\n"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\nA\\nB\\nA\\nB\\nA\") == \"3\\n\"\nassert solution(\"5\\nA\\nA\\AAB\\AAB\\AAB\\AAB\") == \"3\\n\"\nassert solution(\"5\\nA\\AAB\\AAB\\AAB\\AAB\\AAB\\AAB\") == \"3\\n\"\nassert solution(\"5\\n
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3\", \"Test case not passing\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\nA\\nB\\nA\\nB\\nA') == '3'\nassert solution('5\\nA\\ABA\\BBB\\ABABA\\AAAAAB') == '3'"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '3'\n"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, got: {solution(stdin)}\"\nfor i in range(5):\n    with open(f\"inputs/input{i+1}.txt\", \"r\") as f:\n        input = f.read()\n    expected = int(input.strip())\n    assert solution(input) == str(expected), f\"Expected: {expected}, got: {solution(input)}\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test case failed\"\nprint(solution(input()))"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100 10 2 1\\n\") == \"0.1\\n\"\nassert solution(\"100 10 2 2\\n\") == \"0.1909090909\\n\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"100 10 2 1\") == 0.1\nassert solution(\"100 10 2 2\") == 0.1909090909"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 0.1909090909, \"Your code is incorrect.\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"100 10 2 1\\n100 10 2 2\") == \"0.1909090909\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Output should be {output}, but got {solution(input())}\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"100 10 2 1\\n100 10 2 2\\n\") == \"0.1909090909\"\n"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 0.1"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='100 10 2 1\\n100 10 2 2\\n') == '0.1909090909\\n'"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100 10 2 1\") == \"0.1\"\nassert solution(\"100 10 2 2\") == \"0.1909090909\"\n\nfrom random import random"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"100 10 2 1\\n100 10 2 2\\n\") == \"0.1\\n\"\nassert solution(\"100 10 2 3\\n100 10 2 2\\n\") == \"0.1909090909\\n\""
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == \"4\"\nassert solution(\"ABABABcABABAbAbab\") == \"4\"\nassert solution(\"ABABABcABABAbAbab\") == \"4\""
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == 4, \"Expected 4, got {}\".format(solution(\"ABABABcABABAbAbab\"))\nassert solution(\"ABABABcABABAbAbab\") == 4, \"Expected 4, got {}\".format(solution(\"ABABABcABABAbAbab\"))\nassert solution(\"ABABABcABABAbAbab\") == 4, \"Expected 4, got {}\".format(solution(\"ABABABcABABAbAbab\"))\nassert solution(\"ABABABcABABAbAbab\") == 4, \"Expected 4, got {}\".format(solution(\"ABABABcABABAbAbab\"))\nassert solution(\"ABABABcABABAbAbab\") == 4, \"Expected 4, got {}\".format(solution(\"ABABABcABABAbAbab\"))"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('ABABABcABABAbAbab') == '4', 'Output should be \"4\"'\nassert solution('ABABABcABABAbAbab') == '4', 'Output should be \"4\"'\nassert solution('ABABABcABABAbAbab') == '4', 'Output should be \"4\"'\nassert solution('ABABABcABABAbAbab') == '4', 'Output should be \"4\"'\nassert solution('ABABABcABABAbAbab') == '4', 'Output should be \"4\"'\n"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_string) == expected_output, f\"The solution is incorrect. Expected: {expected_output}, but got: {solution(input_string)}\""
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('ABABABcABABAbAbab') == '0'\nassert solution('ABABABcABABAbAbab') == '5'"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ABABABcABABAbAbab\", 3) == \"0\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"0\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"0\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"0\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"0\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"0\""
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}, Received output: {solution(input())}\""
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == \"4\"\nassert solution(\"ABABABcABABAbAbab\") == \"0\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\""
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == \"0\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"5 10\\n1 1 2 3 4 5\") == \"6\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test Failed!\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"example.txt\").read()) == \"2\\n\"\n"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\") == \"2\\n\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\\n\") == \"2\"\nassert solution(\"5 4\\n0\\n0\\n1\\n2\\n3\\n4\\n\") == \"4\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 3\\n0\\n0\\n1\\n') == '2\\n'\nassert solution('2 2\\n1\\n2\\n3\\n') == '2\\n'\nassert solution('2 3\\n1\\n2\\n3\\n') == '2\\n'\nassert solution('5 3\\n0\\n0\\n2\\n') == '2\\n'\nassert solution('2 2\\n1\\n2\\n3\\n4\\n') == '2\\n'"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 3\\n0\\n0\\n1\\n') == '2\\n'"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\") == \"2\\n\", \"Test case 1 failed.\"\nassert solution(\"4 3\\n0\\n0\\n1\") == \"2\\n\", \"Test case 2 failed.\"\nassert solution(\"4 3\\n0\\n0\\n1\") == \"2\\n\", \"Test case 3 failed.\"\nassert solution(\"4 3\\n0\\n0\\n1\") == \"2\\n\", \"Test case 4 failed.\"\nassert solution(\"4 3\\n0\\n0\\n1\") == \"2\\n\", \"Test case 5 failed.\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\\n\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP0: 22 1 4 2 6 -1 0\\n\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\\np0: 22 1 4 2 6 -1 0\"\n"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP0: 22 1 4 2 6 -1 0\\n\"\n"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == \"1\\nP0: 22 1 4 2 6 -1 0\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP0: 22 1 4 2 6 -1 0\\n\"\n"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\"\nassert solution() == \"P0: 22 1 4 2 6 -1 0\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\"\nassert solution(\"2 16 16 16\\n100 100 100 100\\n1000 1000 1000 1000\") == \"3\"\nassert solution(\"2 16 16 16\\n100 100 100 100\\n1000 1000 1000 1000\") == \"2\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP0: 22 1 4 2 6 -1 0\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == 1\nprint('All tests passed')"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    2 8 8 8\n    12 4 1 4 5 3 -2\n    10 1 2 1 8 -6 1''') == '1\\nP0: 22 1 4 2 6 -1 0\\n'\nassert solution('''\n    2 8 8 8\n    12 4 1 4 5 3 -2\n    10 1 2 1 8 -6 1''') == '1\\nP0: 22 1 4 2 6 -1 0\\n'"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\") == \"1\\n2\\n3\\n\"\nassert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\") == \"1\\n2\\n3\\n\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n\") == \"1\\n2\\n3\\n\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\") == \"1\\n2\\n3\\n\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\") == [1, 2, 3, 4]\nassert solution(\"1 2\\n1 3\\n3 4\\n1 2\\n2 3\\n2 4\\n3 4\\n3\") == [1, 2, 3, 4]"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4') == '1\\n2\\n3\\n'"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n\") == \"1\\n2\\n3\\n\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n\") == \"1\\n2\\n3\\n\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\\n2\\n3\\n\"\n"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected, f\"Expected {expected}, but got {solution}\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\\n\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(stdin=\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\\n\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(stdin=\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\\n\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\n2\\n1\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\"\nassert solution(\"6\\n1 5 4 3 2 6\\n1 5 4 3 2 6\") == \"1\"\nassert solution(\"6\\n1 5 4 3 2 6\\n1 4 3 2 5 6\") == \"1\"\nassert solution(\"6\\n1 5 4 3 2 6\\n1 3 2 5 4 6\") == \"1\"\nassert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"1\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\\n\") == \"2\\n1 2 3 4 5 6\\n\"\nassert solution(\"3\\n1 2 3\\n2 3 4\\n3 4 5\\n\") == \"3\\n1 2 3 4 5\\n\"\nassert solution(\"4\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n\") == \"4\\n1 2 3 4 5 6\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n2 3 4 5 6\\n3 4 5 6 7\\n\") == \"5\\n1 2 3 4 5 6 7\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\\n2 3 4 5 6 7\\n3 4 5 6 7 8\\n\") == \"6\\n1 2 3 4 5 6 7 8\\n\"\nassert solution(\"7\\n1 2 3 4 5 6 7\\n2 3 4 5 6 7 8\\n3 4 5 6 7 8 9\\n\") == \"7\\n1 2 3 4 5 6 7 8 9\\n\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\\n2 3 4 5 6 7 8 9\\n3 4 5 6 7 8 9 10\\n\") == \"8\\n1 2 3 4 5 6 7 8 9 10\\n\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\\n2 3 4 5 6 7 8 9 10\\n3 4 5 6 7 8 9 10 11\\n\") == \"9\\n1 2 3 4 5 6 7 8 9 10 11\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\\n2 3 4 5 6 7 8 9 10 11\\n3 4 5 6 7 8 9 10 11 12\\n\") == \"10\\n1 2 3 4 5 6 7 8 9 10 11 12\\n\"\nassert solution(\"11\\n1 2 3 4 5 6 7 8 9 10 11\\n2 3 4 5 6 7 8 9 10 11 12\\n3 4 5 6 7 8 9 10 11 12 13\\n\") == \"11\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\n\"\nassert solution(\"12\\n1 2 3 4 5 6 7 8 9 10 11 12\\n2 3 4 5 6 7 8 9 10 11 12 13\\n3 4 5 6 7 8 9 10 11 12 13 14\\n\") == \"12\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\\n\"\nassert solution(\"13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\n2 3 4 5 6 7 8 9 10 11 12 13 14\\n3 4 5 6 7 8 9 10 11 12 13 14 15"
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5 4 3 2 6\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 2 1\\n1 5 2 7\\n2 10 3 5\\n3 8 1 4\") == \"-1\"\nassert solution(\"5 4 3\\n1 10 2 20\\n2 15 3 15\\n3 12 1 9\") == \"118\""
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"60\", \"Please provide the correct solution.\"\n"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"60\\n\", \"The output is incorrect.\""
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"60\"\n\nfrom typing import List"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80') == 60\nassert solution('3 1 2\\n1 100 2 200\\n2 50 3 300\\n3 50 1 400') == -1"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"60\\n\", \"Sample Output: 60\\n\"\nassert solution() == \"-1\\n\", \"Sample Output: -1\\n\"\nassert solution() == \"60\\n\", \"Sample Output: 60\\n\"\nassert solution() == \"-1\\n\", \"Sample Output: -1\\n\""
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80') == '60\\n'"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '60'"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n    3 3 2\n    1 30 2 50\n    2 70 3 10\n    3 20 1 80\n''') == '60'"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80\"\"\") == \"60\\n\""
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 'Case #1: 1\\nCase #2: 2'"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"\"\"\n    2\n    3\n    10000 0 0\n    0 10000 0\n    0 0 10000\n    \"\"\") == \"\"\"Case #1: 1\nCase #2: 2\"\"\"\n\nassert solution(stdin=\"\"\"\n    2\n    3\n    10000 0 0\n    0 10000 0\n    0 0 10000\n    \"\"\") == \"\"\"Case #1: 1\nCase #2: 2\"\"\""
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '''Case #1: 1\nCase #2: 2'''\n"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n3\\n10000 0 0\\n0 10000 0\\n0 0 10000\\n3\\n5000 0 0\\n0 2000 0\\n0 0 4000\\n\") == \"Case #1: 1\\nCase #2: 2\\n\""
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"Case #1: 1\\nCase #2: 2\\n\""
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '''Case #1: 1\nCase #2: 2'''"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n10000 0 0\\n0 10000 0\\n0 0 10000\\n3\\n5000 0 0\\n0 2000 0\\n0 0 4000\") == \"\"\"\nCase #1: 1\nCase #2: 2\n\"\"\""
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n3\\n10000 0 0\\n0 10000 0\\n0 0 10000\\n3\\n5000 0 0\\n0 2000 0\\n0 0 4000') == 'Case #1: 1\\nCase #2: 2'"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n3\\n10000 0 0\\n0 10000 0\\n0 0 10000\\n3\\n5000 0 0\\n0 2000 0\\n0 0 4000\") == \"Case #1: 1\\nCase #2: 2\""
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n3\\n10000 0 0\\n0 10000 0\\n0 0 10000\\n3\\n5000 0 0\\n0 2000 0\\n0 0 4000') == 'Case #1: 1\\nCase #2: 2\\n'"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == ['6', '6', '6', '1']\nassert solution('1 2 H 2 O 1\\n1 2 C 1 O 2\\n2 1 O 2\\n3 6 H 12 O 6\\n4 0') == ['1', '2', '2', '3', '4']\nassert solution('1 2 H 2 O 1\\n1 2 C 1 O 2\\n2 1 O 2\\n3 6 H 12 O 6\\n4 0\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10') == ['10', '9', '8', '7', '6']\nassert solution('1 2 H 2 O 1\\n1 2 C 1 O 2\\n2 1 O 2\\n3 6 H 12 O 6\\n4 0\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n16 16\\n17 17\\n18 18\\n19 19\\n20 20\\n') == ['20', '19', '18', '17', '16', '15', '14', '13', '12', '11', '10']"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == '6 6 6 1\\n'\nprint('All tests passed!')"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == ['6 6 6 1']  # Expected Output: ['6 6 6 1']"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\nprint(\"Test Passed\")"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"example.in\", \"r\").read()) == \"6 6 6 1\""
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == ['6', '6', '6', '1']"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0\\n+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\") == \"6 6 6 1\""
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\") == \"6 6 6 1\""
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\") == \"6 6 6 1\"\nassert solution(\"+1 6 C 1 H 5 C 1 O 1 O 1 H 1\\n-1 4 C 2 H 3 O 4\\n+2 1 C 5 H 6 O 5\\n-1 2 C 7 H 8 O 7\\n+1 3 C 10 H 11 O 10\\n-1 1 C 13 H 14 O 13\\n+1 4 C 15 H 16 O 15\") == \"15 15 15 1\"\nassert solution(\"+1 6 C 1 H 5 C 1 O 1 O 1 H 1\\n-1 4 C 2 H 3 O 4\\n+2 1 C 5 H 6 O 5\\n-1 2 C 7 H 8 O 7\\n+1 3 C 10 H 11 O 10\\n-1 1 C 13 H 14 O 13\\n+1 4 C 15 H 16 O 15\") == \"15 15 15 1\"\nassert solution(\"+1 6 C 1 H 5 C 1 O 1 O 1 H 1\\n-1 4 C 2 H 3 O 4\\n+2 1 C 5 H 6 O 5\\n-1 2 C 7 H 8 O 7\\n+1 3 C 10 H 11 O 10\\n-1 1 C 13 H 14 O 13\\n+1 4 C 15 H 16 O 15\\n0 0\") == \"15 15 15 1\""
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == output_data, f\"Test case failed: {input_data}!= {output_data}\"\nprint(\"Test case passed\")"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '20.83', \"Incorrect output.\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\\n') == '20.83\\n'"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\") == \"20.83\"\n"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\") == \"20.83\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\").read()) == \"20.83\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40') == '20.83'"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"20.83\", \"Incorrect output\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\\n\") == \"20.83\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"20.83\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == expected_output, f\"Test case {t+1} failed: expected {expected_output}, got {solution(input_data)}\" for t, (input_data, expected_output) in enumerate(tests)"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"49\\n\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3\\n1 2 5\\n7 6 4\\n9 8 3') == 49, \"The solution is incorrect.\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == 49"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"49\", \"Test case 1 failed\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\n1 2 5\\n7 6 4\\n9 8 3') == '49'"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 3) == 49\nprint(\"All tests passed!\")"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == \"49\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\\n\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3\\n1 2 5\\n7 6 4\\n9 8 3') == '49'"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '49'\nprint(\"All tests passed!\")"
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\") == \"##CROSSWORD####\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\") == \"##CROSSWORD####\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\"\n##CROSSWORD####\n\"\"\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\\n\") == \"##CROSSWORD####\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\\n\") == \"##CROSSWORD####\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"##CROSSWORD####\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\\n\") == \"#CROSSWORD#\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '''\n##CROSSWORD####\n"
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"\"\"\n##CROSSWORD####\n\"\"\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n1 15\n##.........####\n1\nCROSSWORD\n''') == '''\n##CROSSWORD####\n"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n2 7 6\\n9 5 1\\n4 3 8\\n\") == \"31\\n\"\nassert solution(\"5 10\\n20 70\\n30 40\\n60 50\\n\") == \"120\\n\"\nassert solution(\"20 10\\n100 20\\n80 10\\n70 20\\n\") == \"140\\n\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"31\\n\"\n"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"31\\n\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n2 7 6\\n9 5 1\\n4 3 8\") == \"31\"\nassert solution(\"5 10\\n2 4 8\") == \"10\"\nassert solution(\"10 5\\n5 10\") == \"20\"\nassert solution(\"3 10\") == \"0\"\nassert solution(\"10 1\") == \"0\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 1\\n2 7 6\\n9 5 1\\n4 3 8') == '31'\nassert solution('3 2\\n2 3 6\\n2 7 4\\n1 1 10') == '35'\nassert solution('5 2\\n3 10 5\\n6 8 1\\n1 1 10') == '7'\nassert solution('5 3\\n3 10 5\\n6 8 1\\n1 1 10') == '14'\nassert solution('5 1\\n3 10 5\\n6 8 1\\n1 1 10') == '14'"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == '31'\n\nfrom typing import List"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\n2 7 6\\n9 5 1\\n4 3 8\\n\") == \"31\\n\"\n"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"31\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"31\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n2 7 6\\n9 5 1\\n4 3 8\") == \"31\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\\n\"\nassert solution(\"5 3\\nBBBW\") == \"12\\n\"\n"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\\n\"\nassert solution(\"5 1\\nBWW\") == \"3\\n\"\nassert solution(\"6 2\\nBWW\") == \"4\\n\"\nassert solution(\"7 3\\nBBW\") == \"5\\n\"\nassert solution(\"8 1\\nBWW\") == \"1\\n\"\nassert solution(\"9 1\\nWWW\") == \"1\\n\"\nassert solution(\"10 1\\nWWW\") == \"2\\n\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\\n\"\nassert solution(\"1 2\\nWWWWW\") == \"1\\n\"\nassert solution(\"3 3\\nWWWWWW\") == \"3\\n\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\n    pass\"\n"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\"\n"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\\n\"\nassert solution(\"5 3\\nWWWWW\") == \"10\\n\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\\n\"\nassert solution(\"4 2\\nWWBBWB\") == \"2\\n\"\nassert solution(\"5 3\\nBBWWBW\") == \"1\\n\"\nassert solution(\"6 4\\nBBWBWW\") == \"2\\n\"\nassert solution(\"7 5\\nBBWWRW\") == \"1\\n\"\nassert solution(\"8 6\\nBBWRWW\") == \"2\\n\"\nassert solution(\"9 7\\nBBWWWR\") == \"1\\n\"\nassert solution(\"10 8\\nBBWWR\") == \"2\\n\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0.556\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n3 2 1\\n1 2 3\") == 0.556"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n3 2 1\\n1 2 3\") == \"0.556\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\n3 2 1\\n1 2 3\") == 0.556, \"The output is not correct.\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 1\\n3 2 1\\n1 2 3') == '0.556'\n"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 0.556\n"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n3 2 1\\n1 2 3\") == 0.556, \"The solution should return 0.556\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0.556\\n\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n3 2 1\\n1 2 3\") == \"0.556\\n\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test cases do not match.\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 4 3 2') == '3', \"Expected output: 3, but got: {}\".format(solution('5 4 3 2'))"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 4 3 2') == '3'\n"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 4 3 2') == '3'\n\nassert solution('5 4 3 2') == '3'\n\nassert solution('5 4 3 2') == '3'\n\nassert solution('5 4 3 2') == '3'\n\nassert solution('5 4 3 2') == '3'"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\\n\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 3"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4 3 2\") == \"3\\n\"\n"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4 3 2\") == \"3\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 3, \"Expected output 3, but got {}\".format(solution())"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"13\""
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == 13"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 3 6\\n2 5 8\\n3 3 5\\n5 3 6') == '13'\nassert solution('1 2 5\\n3 4 6\\n7 8 9\\n10 11 12') == '31'"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\"\n"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '13'\n"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n3\\n6\\n2\\n5\\n8\\n3\\n3\\n5\\n5\\n6\") == \"13\""
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\""
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '13', \"Expected '13', but got '{}'\".format(solution(stdin))"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\\n\") == \"13\""
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n2\\n13.141593 20.123456\\n\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n3\\n13.141593 20.123456\\n\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n4\\n13.141593 20.123456\\n\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n5\\n13.141593 20.123456\\n\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n6\\n13.141593 20.123456\\n\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n7\\n13.141593 20.123456\\n\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n8\\n13.141593 20.123456\\n\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n9\\n13.141593 20.123456\\n\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n10\\n13.141593 20.123456\\n\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n11\\n13.141593 20.123456\\n\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n12\\n13.141593 20.123456\\n\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n13\\n13.141593 20.123456\\n\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n14\\n13.141593 20.123456\\n\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n15\\n13.141593 20.123456\\n\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n16\\n13.141593 20.123456\\n\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n17\\n13.141593 20.12"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Solution does not match. Expected: {output()}, Received: {solution(input())}\""
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\") == \"3.141593\""
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == 3.141593\nassert solution(\"1.000000 2.000000\\n2\\n1.000000 3.000000\\n\") == 2.000000\nassert solution(\"1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3.141593\""
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == \"3.141593\"\n"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\") == \"3.141593\"\n"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n2\\n13.141593 20.123456\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n3\\n13.141593 20.123456\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n4\\n13.141593 20.123456\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n5\\n13.141593 20.123456\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n6\\n13.141593 20.123456\") == \"3.141593\"\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == 3.141593\nassert solution(\"10.000000 20.123456\\n2\\n13.141593 20.123456\\n\") == 0.0\nassert solution(\"10.000000 20.123456\\n3\\n13.141593 20.123456\\n\") == 0.0\nassert solution(\"10.000000 20.123456\\n4\\n13.141593 20.123456\\n\") == 0.0\nassert solution(\"10.000000 20.123456\\n5\\n13.141593 20.123456\\n\") == 0.0\nassert solution(\"10.000000 20.123456\\n6\\n13.141593 20.123456\\n\") == 0.0\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == \"3.141593\"\nassert solution(\"5.000000 10.000000\\n2\\n10.000000 10.000000\\n\") == \"3.141593\"\nassert solution(\"2.500000 10.000000\\n3\\n10.000000 10.000000\\n\") == \"3.141593\"\nassert solution(\"1.000000 10.000000\\n4\\n10.000000 10.000000\\n\") == \"3.141593\"\nassert solution(\"0.000000 0.000000\\n5\\n10.000000 10.000000\\n\") == \"3.141593\"\nassert solution(\"1000000000 0\\n6\\n1000000000 0\\n\") == \"3141593.141593\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n3\n4 4\n2\n''') == '2.13333333333333'\nassert solution('''\n3\n1 3\n3\n4 5\n2\n1\n''') == 'impossible'\nassert solution('''\n3\n4 4\n2\n1\n''') == 'impossible'\nassert solution('''\n3\n4 4\n2\n''') == '2.13333333333333'"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"4 4\\n2\\n\") == \"2.13333333333333\\n\"\nassert solution(stdin=\"2\\n\") == \"impossible\\n\"\n"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == '''2.13333333333333"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    3\n    4 4\n    2\n    \"\"\"\n) == \"2.13333333333333\"\n\nassert solution(\n    \"\"\"\n    4\n    2 3\n    100\n    200\n    300\n    \"\"\"\n) == \"impossible\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"2.13333333333333\", \"Your solution is incorrect\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2 3\\n4 5\") == \"2.13333333333333\\n\"\nassert solution(\"3\\n1 3\\n2 4\\n4 2\\n5 4\\n6 3\\n7 5\\n8 5\\n9 4\") == \"impossible\\n\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n4 4\\n2\\n') == '2.13333333333333'"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n2\\n\") == \"2.13333333333333\\n\"\nassert solution(\"2\\n4 4\\n\") == \"impossible\\n\"\nassert solution(\"2\\n4 3\\n\") == \"2.0\\n\"\nassert solution(\"2\\n4\\n\") == \"impossible\\n\"\nassert solution(\"5\\n1\\n\") == \"impossible\\n\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2.13333333333333\", \"Expected '2.13333333333333', got: {}\".format(solution(stdin))"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n4 4\\n2\") == \"2.13333333333333\"\nassert solution(\"4\\n2 3\\n1\") == \"impossible\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\n\") == \"18\\n\"\n"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '18' # replace with your solution"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == '18\\n'\n"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\") == \"18\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\n\") == \"18\\n\"\nassert solution(\"15\\n\") == \"5\\n\"\nassert solution(\"2000000\\n\") == \"1\\n\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(7) == \"18\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"18\\n\"\nassert solution(4) == \"24\\n\"\nassert solution(5) == \"30\\n\"\nassert solution(6) == \"36\\n\"\nassert solution(7) == \"42\\n\"\nassert solution(8) == \"48\\n\"\nassert solution(9) == \"54\\n\"\nassert solution(10) == \"60\\n\"\nassert solution(11) == \"66\\n\"\nassert solution(12) == \"72\\n\"\nassert solution(13) == \"78\\n\"\nassert solution(14) == \"84\\n\"\nassert solution(15) == \"90\\n\"\nassert solution(16) == \"96\\n\"\nassert solution(17) == \"102\\n\"\nassert solution(18) == \"108\\n\"\nassert solution(19) == \"114\\n\"\nassert solution(20) == \"120\\n\"\nassert solution(21) == \"126\\n\"\nassert solution(22) == \"132\\n\"\nassert solution(23) == \"138\\n\"\nassert solution(24) == \"144\\n\"\nassert solution(25) == \"150\\n\"\nassert solution(26) == \"156\\n\"\nassert solution(27) == \"162\\n\"\nassert solution(28) == \"168\\n\"\nassert solution(29) == \"174\\n\"\nassert solution(30) == \"180\\n\"\nassert solution(31) == \"186\\n\"\nassert solution(32) == \"192\\n\"\nassert solution(33) == \"198\\n\"\nassert solution(34) == \"204\\n\"\nassert solution(35) == \"210\\n\"\nassert solution(36) == \"216\\n\"\nassert solution(37) == \"222\\n\"\nassert solution(38) == \"228\\n\"\nassert solution(39) == \"234\\n\"\nassert solution(40) == \"240\\n\"\nassert solution(41) == \"246\\n\"\nassert solution(42) == \"252\\n\"\nassert solution(43) == \"258\\n\"\nassert solution(44) == \"264\\n\"\nassert solution(45) == \"270\\n\"\nassert solution(46) == \"276\\n\"\nassert solution(47) == \"282\\n\"\nassert solution(48) == \"288\\n\"\nassert solution(49) == \"294\\n\"\nassert solution(50) == \"300\\n\"\nassert solution(51) == \"306\\n\"\nassert solution(52) == \"312\\n\"\nassert solution(53) == \"318\\n\"\nassert solution(54) == \"324\\n\"\nassert solution(55) == \"330\\n\"\nassert solution(56) == \"336\\n\"\nassert solution(57) == \"342\\n\"\nassert solution(58) == \"348\\n\"\nassert solution(59) == \"354\\n\"\nassert solution(60) == \"360\\n\"\nassert solution(61) == \"366\\n\"\nassert solution(62) == \"372\\n\"\nassert solution(63) == \"378\\n\"\nassert solution(64) == \"384\\n\"\nassert solution(65) == \"390\\n\"\nassert solution(66) == \"396\\n\"\nassert solution(67) == \"402\\n\"\nassert solution(68) == \"408\\n\"\nassert solution(69) == \"414\\n\"\nassert solution(70) == \"420\\n\"\nassert solution(71) == \"426\\n\"\nassert solution(72) == \"432\\"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=r\"7\") == \"18\"\nassert solution(stdin=r\"10\") == \"21\"\nassert solution(stdin=r\"50\") == \"2897\"\nassert solution(stdin=r\"51\") == \"0\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"18\"\nassert solution(stdin) == \"16\"\nassert solution(stdin) == \"48\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(7) == \"18\"\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nfrom typing import List"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3\"\n"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\") == \"3\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\") == \"3\"\n"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n\") == \"3\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3\"\n"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer') == '3'\nassert solution('5\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer') == '2'\nassert solution('6\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer') == '1'\nassert solution('7\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer') == '0'\nassert solution('8\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer') == '1'\nassert solution('9\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer') == '2'\nassert solution('10\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer') == '3'\n\nfrom typing import List"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n\") == \"3\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\n"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"a 0\\na 1\\nb 2\\nc 2 3\\nb 4\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected output: {sample_output}, Received output: {solution(sample_input)}\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5) == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    5\n    0\n    1\n    2\n    2 3\n    2 4\n    \"\"\"\n) == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    5\n    0\n    1\n    2\n    2 3\n    2 4\n    3 0\n    3 2\n    3 3\n    \"\"\"\n) == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n3\\n0\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n3\\n2\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    5\n    0\n    1\n    2\n    2 3\n    2 4\n    3 0\n    3 2\n    3 3\n    4 0\n    4 2\n    \"\"\"\n) == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n3\\n0\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n3\\n2\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n4\\n0\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n4\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    5\n    0\n    1\n    2\n    2 3\n    2 4\n    3 0\n    3 2\n    3 3\n    4 0\n    4 2\n    4 4\n    \"\"\"\n) == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n3\\n0\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n3\\n2\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n4\\n0\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n4\\n2\\n4\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    5\n    0\n    1\n    2\n    2 3\n    2 4\n    3 0\n    3 2\n    3 3\n    4 0\n    4 2\n    4 4\n    5 0\n    5 1\n    \"\"\"\n) == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n3\\n0\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n3\\n2\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n4\\n0\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n4\\n2\\n4\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n5\\n0\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n5\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\nassert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\nassert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\\n') == '5\\n'\nassert solution('7 1\\n90 70 0 0\\n70 60 0 0\\n100 80 0 0\\n90 75 0 0\\n80 60 0 0\\n90 70 0 0\\n') == '6\\n'\nassert solution('5 2\\n90 70 0 0\\n90 70 0 0\\n90 70 0 0\\n90 70 0 0\\n90 70 0 0\\n90 70 0 0\\n') == '7\\n'\nassert solution('4 2\\n78 61 88 71\\n80 80 90 90\\n90 70 80 100\\n90 70 90 90\\n80 80 70 100\\n') == '8\\n'"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n6 1\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0\n''') == '5\\n'\n"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\\n\") == \"5\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\\n') == '5\\n'\nassert solution('10 5\\n80 70 80 100\\n80 80 90 100\\n80 70 80 90\\n70 80 80 100\\n60 70 80 100\\n50 60 80 100\\n40 50 80 100\\n30 40 80 100\\n20 30 80 100\\n10 20 80 100\\n') == '15\\n'"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"5\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\\n\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('example_input.txt', 'r')) == '5\\n'\nassert solution(open('example_input.txt', 'r')) == '5\\n'"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\") == 5, \"Your solution is not correct.\""
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\") == \"4\\n\"\nassert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n5 6\\n3 4\\n3 5\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n\") == \"4\\n\"\n\nimport math"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n') == '4\\n'\nassert solution('4 7\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n1 5\\n2 6\\n') == '10\\n'\nassert solution('5 2\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n') == '5\\n'\n"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n\") == \"4\"\n"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\") == \"4\\n\""
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\"\n4\n4\n\"\"\""
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"4\\n\"\n"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '4\\n' # Add your solution here\n"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 4"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"4\\n\", \"Output should be 4\"\n"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"4\\n\", input()\n"
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n2 4\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''4\n1 2\n2 3\n3 4''') == '''2\n3 4\n2 4'''"
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4') == '2\\n3 4\\n2 4'\nassert solution('5\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\\n9 10') == '2\\n3 4\\n2 4\\n1 5\\n4 6\\n7 8\\n9 10'\nassert solution('6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11') == '2\\n3 4\\n2 4\\n1 5\\n4 6\\n7 8\\n9 10\\n11 12'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100' == '2\\n3 4\\n2 4\\n1 5\\n4 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\\n21 22\\n23 24\\n25 26\\n27 28\\n29 30\\n31 32\\n33 34\\n35 36\\n37 38\\n39"
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n\") == \"2\\n3 4\\n2 4\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4\n1 2\n2 3\n3 4\n\"\"\") == \"\"\"\n2\n3 4\n2 4\n\"\"\"\n\nassert solution(\"\"\"\n3\n1 2\n2 3\n3 4\n\"\"\") == \"\"\"\n2\n3 4\n2 4\n\"\"\"\n\nassert solution(\"\"\"\n2\n1 2\n1 3\n\"\"\") == \"\"\"\n2\n1 3\n1 2\n\"\"\"\n\nassert solution(\"\"\"\n2\n1 2\n2 3\n4 5\n\"\"\") == \"\"\"\n2\n1 3\n3 5\n\"\"\"\n\nassert solution(\"\"\"\n3\n1 2\n2 3\n3 4\n5 6\n\"\"\") == \"\"\"\n2\n1 3\n3 5\n\"\"\"\n\nassert solution(\"\"\"\n5\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n\"\"\") == \"\"\"\n2\n1 3\n3 5\n\"\"\"\n\nassert solution(\"\"\"\n7\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n20 21\n21 22\n22 23\n23 24\n24 25\n25 26\n26 27\n27 28\n28 29\n29 30\n30 31\n31 32\n32 33\n33 34\n34 35\n35 36\n36 37\n37 38\n38 39\n39 40\n40 41\n41 42\n42 43\n43 44\n44 45\n45 46\n46 47\n47 48\n48 49\n49 50\n50 51\n51 52\n52 53\n53 54\n54 55\n55 56\n56 57\n57 58\n58 59\n59 60\n60 61\n61 62\n62 63\n63 64\n64 65\n65 66\n66 67\n67 68\n68 69\n69 70\n70 71\n71 72\n72 73\n73 74\n74 75\n75 76\n76 77\n77 78\n78 79\n79 80\n80 81\n81 82\n82 83\n83 84\n84 85\n85 86\n86 87\n87 88\n88 89\n89 90\n90 91\n91 92\n92 93\n93 94\n94 95\n95 96\n96 97\n97 98\n98 99\n99 100\n100 101\n101 102\n102 103\n103 104\n104 105\n105 106\n106 107\n107 108\n108 109\n109 110\n110 111\n111 112\n112 113\n113 114\n114 115\n115 116\n116 117\n117 118\n118 119\n119 120\n120 121\n121 122\n122 123\n123 124\n124 125\n125 126"
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == expected_result, f\"Got {solution} instead of {expected_result}\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"\"\"\n2\n3 4\n2 4\n\"\"\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n2 4\"\nassert solution(\"5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\") == \"2\\n3 4\\n2 4\\n4 6\\n5 5\"\n\nfrom typing import List"
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '2\\n3 4\\n2 4'"
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n# Example usage:\\n# n = int(input())\\n# flights = []\\n# for _ in range(n - 1):\\n#     a, b = map(int, input().split())\\n#     flights.append([a, b])\\n\\n# result = solution(str(n))\\n# print(*result, sep='\\n')\""
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n    2 2\n    1 3\n    2 1\n    3 5\n    7 2\n\"\"\") == \"5\\n\""
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 5, \"Solution should return 5\""
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"5\\n\"\nassert solution(input()) == \"0\\n\""
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\") == 5\nassert solution(\"\") == 0"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected {sample_output}, got {solution(sample_input)}\""
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 5 # solution is correct"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\\n\") == \"5\\n\"\n"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\") == 5\nassert solution(\"1 5\\n3 5\\n2 1\\n3 7\") == 5\nassert solution(\"5 3\\n4 2\\n1 5\\n2 8\") == 10\nassert solution(\"5 5\\n3 4\\n1 2\\n2 5\") == 0"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\\n\") == \"5\""
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\") == \"5\\n\"\nassert solution(\"1 3\\n2 1\\n3 5\\n7 2\") == \"0\\n\"\nassert solution(\"2 2\\n3 3\\n4 4\\n5 5\") == \"5\\n\"\nassert solution(\"5 5\\n3 3\\n4 4\\n5 5\") == \"20\\n\"\nassert solution(\"1 3\\n2 4\\n3 5\\n4 6\\n5 7\") == \"5\\n\"\nassert solution(\"1 3\\n2 4\\n3 5\\n4 6\\n5 7\") == \"5\\n\"\nassert solution(\"5 5\\n3 3\\n4 4\\n5 5\") == \"20\\n\"\n"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(None) == 0\nassert solution(open('input.txt', 'r')) == 2"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0') == 2\nassert solution('5 3\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5') == 6\nassert solution('3 3\\n0 0\\n1 1\\n2 2\\n3 3') == 0\nassert solution('2 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5') == 0\nassert solution('1 1\\n1 1\\n1 1\\n1 1\\n1 1') == 0\n"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\\n\"\n"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '2'"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == \"2\""
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2, \"Incorrect output\""
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2, \"Invalid Output\""
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n0 4\") == 0\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n0 5\") == 1\n"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\") == \"GHOST\"\nassert solution(\"5 3\\n3 C\\n2 C\\n1 C\") == \"SAFE\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 3\\n3 C\\n2 C\\n1 C') == 'GHOST'\nassert solution('4 3\\n3 W\\n2 W\\n1 W') == 'SAFE'\nassert solution('4 3\\n3 C\\n2 W\\n1 W') == 'SAFE'\nassert solution('4 3\\n3 C\\n2 W\\n1 C') == 'GHOST'\n"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\") == \"GHOST\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test failed. Input: '{input()}' Output: '{output}'\"\n\nfrom typing import List"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\") == \"GHOST\"\nassert solution(\"4 3\\n3 C\\n2 C\\n1 W\") == \"SAFE\"\nassert solution(\"4 3\\n3 C\\n2 W\\n1 C\") == \"SAFE\"\nassert solution(\"4 3\\n3 C\\n2 W\\n1 W\") == \"GHOST\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 3\\n3 C\\n2 C\\n1 C') == 'GHOST'\nassert solution('4 3\\n3 C\\n2 C\\n1 W') == 'SAFE'\nassert solution('4 3\\n3 C\\n2 W\\n1 C') == 'SAFE'\nassert solution('4 3\\n3 C\\n2 W\\n1 W') == 'SAFE'\n"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"GHOST\"\nassert solution(stdin) == \"SAFE\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\\n\") == \"GHOST\\n\"\nassert solution(\"4 4\\n1 C\\n2 C\\n3 C\\n\") == \"SAFE\\n\"\nassert solution(\"4 3\\n3 C\\n2 W\\n1 W\\n\") == \"GHOST\\n\"\nassert solution(\"4 3\\n3 C\\n2 W\\n1 C\\n\") == \"SAFE\\n\"\nassert solution(\"4 3\\n3 C\\n2 C\\n1 C\\n\") == \"SAFE\\n\"\nassert solution(\"4 3\\n3 C\\n2 C\\n1 W\\n\") == \"GHOST\\n\"\n"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"GHOST\"\nassert solution(input()) == \"SAFE\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n0.00 2.00\") == \"2\"\nassert solution(\"2 4\\n0.01 2.00\") == \"2\"\nassert solution(\"2 4\\n0.02 2.00\") == \"2\"\nassert solution(\"2 5\\n0.00 2.00\") == \"no fika\"\nassert solution(\"2 6\\n0.01 2.00\") == \"no fika\"\nassert solution(\"2 7\\n0.02 2.00\") == \"no fika\"\nassert abs(float(solution(\"2 7\\n0.02 2.00\")) - 1.0) <= 1e-9\nassert abs(float(solution(\"2 7\\n0.01 2.00\")) - 1.0) <= 1e-9"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n0.00 2.00\\n\") == \"2\\n\"\nassert solution(\"3 10\\n0.5 5.0\\n\") == \"5\\n\"\nassert solution(\"3 5\\n0.0 2.0\\n0.0 2.0\\n\") == \"no fika\\n\"\nassert solution(\"3 5\\n0.0 2.0\\n0.0 2.0\\n0.0 2.0\\n\") == \"5\\n\"\nassert solution(\"4 5\\n1.0 2.0\\n1.0 2.0\\n1.0 2.0\\n\") == \"no fika\\n\"\nassert solution(\"4 5\\n1.0 2.0\\n1.0 2.0\\n1.0 2.0\\n0.0 2.0\\n\") == \"5\\n\""
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 3\\n0.00 2.00') == '2\\n'\nassert solution('1 2\\n3.50 3.12') == '2\\n'\nassert solution('5 7\\n1.00 1.50') == '1\\n'\nassert solution('3 10\\n0.80 1.20') == '3\\n'\nassert solution('2 1\\n0.80 1.20') == 'no fika\\n'"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) =="
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\", \"The expected output is: 2\\nThe actual output is: \" + solution(input())"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n0.00 2.00\") == \"2\"\n"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n0.00 2.00\") == \"2\\nno fika\\n\"\n"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n0.00 2.00\") == \"2\"\n\nsolution(\"2 3\\n0.00 2.00\") == \"2\""
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    '''\n    2 3\n    0.00 2.00\n    '''\n) == '2\\n'\nassert solution(\n    '''\n    2 3\n    0.10 0.50\n    '''\n) == '2\\n'\nassert solution(\n    '''\n    2 3\n    0.80 1.00\n    '''\n) == 'no fika\\n'\nassert solution(\n    '''\n    2 3\n    1.00 1.20\n    '''\n) == 'no fika\\n'\nassert solution(\n    '''\n    2 3\n    1.50 1.70\n    '''\n) == 'no fika\\n'\nassert solution(\n    '''\n    2 3\n    2.00 2.20\n    '''\n) == '2\\n'"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n0.00 2.00\") == \"2\"\nassert solution(\"5 4\\n0.50 0.50\") == \"no fika\"\nassert solution(\"6 5\\n0.00 0.00\") == \"no fika\"\nassert solution(\"5 3\\n0.00 0.00\") == \"no fika\"\nassert solution(\"5 4\\n0.50 0.50\") == \"no fika\"\nassert solution(\"5 4\\n0.50 0.50\") == \"no fika\"\nassert solution(\"5 4\\n0.50 0.50\") == \"no fika\""
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\n\nfrom typing import List"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 10\nassert solution(4) == 10\nassert solution(5) == 10\nassert solution(6) == 10\nassert solution(7) == 10\nassert solution(8) == 10\nassert solution(9) == 10\nassert solution(10) == 10\nassert solution(11) == 10\nassert solution(12) == 10\nassert solution(13) == 10\nassert solution(14) == 10\nassert solution(15) == 10\nassert solution(16) == 10\nassert solution(17) == 10\nassert solution(18) == 10\nassert solution(19) == 10\nassert solution(20) == 10\nassert solution(21) == 10\nassert solution(22) == 10\nassert solution(23) == 10\nassert solution(24) == 10\nassert solution(25) == 10\nassert solution(26) == 10\nassert solution(27) == 10\nassert solution(28) == 10\nassert solution(29) == 10\nassert solution(30) == 10\nassert solution(31) == 10\nassert solution(32) == 10\nassert solution(33) == 10\nassert solution(34) == 10\nassert solution(35) == 10\nassert solution(36) == 10\nassert solution(37) == 10\nassert solution(38) == 10\nassert solution(39) == 10\nassert solution(40) == 10\nassert solution(41) == 10\nassert solution(42) == 10\nassert solution(43) == 10\nassert solution(44) == 10\nassert solution(45) == 10\nassert solution(46) == 10\nassert solution(47) == 10\nassert solution(48) == 10\nassert solution(49) == 10\nassert solution(50) == 10\nassert solution(51) == 10\nassert solution(52) == 10\nassert solution(53) == 10\nassert solution(54) == 10\nassert solution(55) == 10\nassert solution(56) == 10\nassert solution(57) == 10\nassert solution(58) == 10\nassert solution(59) == 10\nassert solution(60) == 10\nassert solution(61) == 10\nassert solution(62) == 10\nassert solution(63) == 10\nassert solution(64) == 10\nassert solution(65) == 10\nassert solution(66) == 10\nassert solution(67) == 10\nassert solution(68) == 10\nassert solution(69) == 10\nassert solution(70) == 10\nassert solution(71) == 10\nassert solution(72) == 10\nassert solution(73) == 10\nassert solution(74) == 10\nassert solution(75) == 10\nassert solution(76) == 10\nassert solution(77) == 10\nassert solution(78) == 10\nassert solution(79) == 10\nassert solution(80) == 10\nassert solution(81) == 10\nassert solution(82) == 10\nassert solution(83) == 10\nassert solution(84) == 10\nassert solution(85) == 10\nassert solution(86) == 10\nassert solution(87) == 10\nassert solution(88) == 10\nassert solution(89) == 10\nassert solution(90) == 10\nassert solution(91) == 10\nassert solution(92) == 10\nassert solution(93) == 10\nassert solution(94) == 10\nassert solution(95) == 10\nassert solution(96) == 10"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"10\\n\"\n"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '10\\n', \"Test case failed\""
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\n"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == '10\\n'"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == '10\\n'\n"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == output, f\"Test failed: {input}!= {output}\"\n"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"10\", \"The solution is incorrect\""
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == expected, f\"Test failed: {expected}!= {solution(stdin=input())}\""
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\""
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('8 3\\nW 10 0\\nW 10 3\\nE 17 4') == '0\\n'\n"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"0\", \"Output: 0\"\n"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"W 10 0\\nW 10 3\\nE 17 4\\n\") == \"0\\n\"\nassert solution(\"W 10 0\\nW 10 3\\nE 17 4\\nA 20 4\\nB 23 1\\n\") == \"0\\n\"\nassert solution(\"W 10 0\\nW 10 3\\nE 17 4\\nA 20 4\\nB 23 1\\nC 25 1\\nD 28 1\\nE 32 3\\nF 37 3\\n\") == \"0\\n\"\nassert solution(\"W 10 0\\nW 10 3\\nE 17 4\\nA 20 4\\nB 23 1\\nC 25 1\\nD 28 1\\nE 32 3\\nF 37 3\\nG 42 3\\n\") == \"1\\n\"\nassert solution(\"W 10 0\\nW 10 3\\nE 17 4\\nA 20 4\\nB 23 1\\nC 25 1\\nD 28 1\\nE 32 3\\nF 37 3\\nG 42 3\\nA 47 4\\nB 51 3\\n\") == \"2\\n\"\nassert solution(\"W 10 0\\nW 10 3\\nE 17 4\\nA 20 4\\nB 23 1\\nC 25 1\\nD 28 1\\nE 32 3\\nF 37 3\\nG 42 3\\nA 47 4\\nB 51 3\\nC 55 3\\n\") == \"3\\n\"\nassert solution(\"W 10 0\\nW 10 3\\nE 17 4\\nA 20 4\\nB 23 1\\nC 25 1\\nD 28 1\\nE 32 3\\nF 37 3\\nG 42 3\\nA 47 4\\nB 51 3\\nC 55 3\\nA 59 4\\n\") == \"4\\n\"\nassert solution(\"W 10 0\\nW 10 3\\nE 17 4\\nA 20 4\\nB 23 1\\nC 25 1\\nD 28 1\\nE 32 3\\nF 37 3\\nG 42 3\\nA 47 4\\nB 51 3\\nC 55 3\\nA 59 4\\nC 63 4\\n\") == \"5\\n\""
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\") == \"0\\n\"\nassert solution(\"10 0\\n12 3\\n0 4\\n0 4\\n0 4\") == \"1\\n\"\nassert solution(\"86400 3600\\n0 3600\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\") == \"0\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 5\") == \"3\""
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n8 3\nW 10 0\nW 10 3\nE 17 4\n''') == '0'\n\nassert solution('''\n8 4\nW 10 0\nW 10 3\nW 11 2\nE 17 5\nE 18 4\n''') == '1'\n\nassert solution('''\n8 4\nW 10 0\nW 10 3\nW 11 2\nE 17 5\nE 18 4\nW 19 1\nW 20 2\n''') == '2'\n\nassert solution('''\n8 5\nW 10 0\nW 10 3\nW 11 2\nW 12 1\nE 17 5\nE 18 4\nW 19 1\nW 20 2\nW 21 3\n''') == '3'"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0\\n\"\nassert solution() == \"0\\n\""
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\") == \"0\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 5\") == \"3\\n\""
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"0\\n\"\n"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '3'"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\") == \"3\"\nassert solution(\"10\\n5 4\\n10 10\\n10 9\\n10 6\") == \"3\"\nassert solution(\"10\\n10 10\\n10 9\\n10 6\") == \"4\"\nassert solution(\"10\\n5 4\\n10 10\\n10 9\\n10 6\") == \"4\"\nassert solution(\"10\\n5 4\\n10 10\\n10 9\\n10 6\") == \"4\"\nassert solution(\"10\\n5 4\\n10 10\\n10 9\\n10 6\") == \"4\"\nassert solution(\"10\\n5 4\\n10 10\\n10 9\\n10 6\") == \"4\"\nassert solution(\"10\\n5 4\\n10 10\\n10 9\\n10 6\") == \"4\"\n"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\") == \"3\"\n"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\") == \"3\\n\"\n"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"5\n    5 8\n    5 6\n    3 4\n    5 13\n    6 10\"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"6\n    6 10\n    7 6\n    8 5\n    9 4\"\"\"\n) == \"5\\n\"\n\nassert solution(\n    \"\"\"2\n    1 1\n    1 1\"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"10\n    2 2\n    2 2\n    3 3\n    4 4\n    5 5\n    6 6\"\"\"\n) == \"10\\n\"\n\nassert solution(\n    \"\"\"5\n    5 8\n    5 6\n    3 4\n    5 13\n    6 10\n    7 6\n    8 5\n    9 4\n    10 3\n    11 2\n    12 1\"\"\"\n) == \"12\\n\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3\\n\"\n"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\") == \"3\"\nassert solution(stdin=\"4\\n1 1000\") == \"4\"\nassert solution(stdin=\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\") == \"3\"\nassert solution(stdin=\"6\\n1 1000\\n1 0\\n1 1\") == \"2\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution) == '3'\n"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n10 3 3\") == \"impossible\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"impossible\"\nassert solution(\"1 2\") == \"impossible\"\nassert solution(\"1 1\") == \"impossible\"\nassert solution(\"1 1 1 2 1 3\") == \"impossible\"\nassert solution(\"1 1 1 2 1 3 4\") == \"def\"\nassert solution(\"2 2\") == \"2\\n1A3C2B\"\nassert solution(\"1 1 2\") == \"def\"\nassert solution(\"1 1 1 3 1 1\") == \"def\"\nassert solution(\"1 2 1\") == \"def\"\nassert solution(\"1 1 2 1 1\") == \"def\"\nassert solution(\"2 1 1\") == \"def\"\nassert solution(\"1 1 1 1 1 1\") == \"def\"\nassert solution(\"1 1 1 1 1 1 1\") == \"impossible\"\nassert solution(\"1 1 1 1 1 1 2\") == \"impossible\"\nassert solution(\"1 1 1 1 1 1 1 2\") == \"impossible\"\nassert solution(\"1 1 1 1 1 1 1 1 2\") == \"impossible\"\nassert solution(\"1 1 1 1 1 1 1 1 1 2\") == \"impossible\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 2\") == \"impossible\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 2\") == \"impossible\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 2\") == \"impossible\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 2\") == \"impossible\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 2\") == \"impossible\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2\") == \"impossible\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2\") == \"impossible\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2\") == \"impossible\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2\") == \"impossible\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2\") == \"impossible\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2\") == \"impossible\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2\") == \"impossible\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2\") == \"impossible\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2\") == \"impossible\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2\") == \"impossible\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2\") == \"impossible\"\nassert solution(\"1 1 "
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"impossible\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 'def solution(stdin: str) -> str:\\n    pass\\n\\n# Your solution here\\n\\n# Test cases\\n# Test case 1\\nassert solution()\\n\\n# Test case 2\\nassert not solution()\\n\\n# Test case 3\\nassert not solution()\\n\\n# Test case 4\\nassert not solution()\\n\\n# Test case 5\\nassert not solution()\\n\\n# Test case 6\\nassert not solution()\\n\\n# Test case 7\\nassert not solution()\\n\\n# Test case 8\\nassert not solution()\\n\\n# Test case 9\\nassert not solution()\\n\\n# Test case 10\\nassert not solution()\\n\\n# Test case 11\\nassert not solution()\\n\\n# Test case 12\\nassert not solution()\\n\\n# Test case 13\\nassert not solution()\\n\\n# Test case 14\\nassert not solution()\\n\\n# Test case 15\\nassert not solution()\\n\\n# Test case 16\\nassert not solution()\\n\\n# Test case 17\\nassert not solution()\\n\\n# Test case 18\\nassert not solution()\\n\\n# Test case 19\\nassert not solution()\\n\\n# Test case 20\\nassert not solution()\\n\\n# Test case 21\\nassert not solution()\\n\\n# Test case 22\\nassert not solution()\\n\\n# Test case 23\\nassert not solution()\\n\\n# Test case 24\\nassert not solution()\\n\\n# Test case 25\\nassert not solution()\\n\\n# Test case 26\\nassert not solution()\\n\\n# Test case 27\\nassert not solution()\\n\\n# Test case 28\\nassert not solution()\\n\\n# Test case 29\\nassert not solution()\\n\\n# Test case 30\\nassert not solution()\\n\\n# Test case 31\\nassert not solution()\\n\\n# Test case 32\\nassert not solution()\\n\\n# Test case 33\\nassert not solution()\\n\\n# Test case 34\\nassert not solution()\\n\\n# Test case 35\\nassert not solution()\\n\\n# Test case 36\\nassert not solution()\\n\\n# Test case 37\\nassert not solution()\\n\\n# Test case 38\\nassert not solution()\\n\\n# Test case 39\\nassert not solution()\\n\\n# Test case 40\\nassert not solution()\\n\\n# Test case 41\\nassert not solution()\\n\\n# Test case 42\\nassert not solution()\\n\\n# Test case 43\\nassert not solution()\\n\\n# Test case 44\\nassert not solution()\\n\\n# Test case 45\\nassert not solution()\\n\\n# Test case 46\\nassert not solution()\\n\\n# Test case 47\\nassert not solution()\\n\\n# Test case 48\\nassert not solution()\\n\\n# Test case 49\\nassert not solution()\\n\\n# Test case 50\\nassert not solution()\\n\\n# Test case 51\\nassert not solution()\\n\\n# Test case 52\\nassert not solution()\\n\\n# Test case 53\\nassert not solution()\\n\\n# Test case 54\\nassert not solution()\\n\\n# Test case 55\\nassert not solution()\\n\\n# Test case 56\\nassert not solution()\\n\\n# Test case 57\\nassert not solution()\\n\\n# Test case 58\\nassert not solution()\\n\\n# Test case 59\\nassert not solution()\\n\\n# Test case 60\\nassert not solution()\\n\\n# Test case 61\\nassert not solution()\\n\\n# Test case 62\\nassert not solution()\\n\\n# Test case 63\\nassert not solution()\\n\\n# Test case 64\\nassert not solution()\\n\\n# Test case 65\\nassert not solution()\\n\\n# Test case 66\\nassert not solution()\\n\\n# Test case 67\\nassert not solution"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_str) == expected_output, f\"Test failed. Expected output: '{expected_output}'. Received: '{solution(input_str)}'\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == \"impossible\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"impossible\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"impossible\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 4\\n10 3 3') == 'impossible\\n'"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n10 3 3\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 3 3\\n2 2 2\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 3 3\\n2 2 1\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 3 3\\n2 2 3\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 3 3\\n2 2 4\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 3 3\\n2 2 6\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 3 3\\n2 2 7\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 3 3\\n2 2 9\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 3 3\\n2 2 10\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 3 3\\n2 2 11\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 3 3\\n2 2 12\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 3 3\\n2 2 13\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 3 3\\n2 2 14\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 3 3\\n2 2 15\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 3 3\\n2 2 16\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 3 3\\n2 2 17\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 3 3\\n2 2 18\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 3 3\\n2 2 19\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 3 3\\n2 2 20\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 3 3\\n2 2 21\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 3 3\\n2 2 22\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 3 3\\n2 2 23\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 3 3\\n2 2 24\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 3 3\\n2 2 25\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 3 3\\n2 2 26\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 3 3\\n2 2 27\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 3 3\\n2 2 28\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 3 3\\n2 2 29\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 3 3\\n2 2 30\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 3 3\\n2 2 31\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 3 3\\n2 2 32\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 3 3\\n2 2 33\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 3 3\\n2 2 34\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 3 3\\n2 "
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected output: '{output}', got: '{solution(input())}'\""
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\n"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\""
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    11\n    BETWEEN\n    SUBTLE\n    SHADING\n    AND\n    THE\n    ABSENCE\n    OF\n    LIGHT\n    LIES\n    NUANCE\n    IQLUSION\n    BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n    \"\"\"\n) == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\n\nassert solution(\n    \"\"\"\n    11\n    BETWEEN\n    SUBTLE\n    SHADING\n    AND\n    THE\n    ABSENCE\n    OF\n    LIGHT\n    LIES\n    NUANCE\n    IQLUSION\n    BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n    A\n    B\n    C\n    D\n    E\n    F\n    G\n    H\n    I\n    J\n    K\n    L\n    M\n    N\n    O\n    P\n    Q\n    R\n    S\n    T\n    U\n    V\n    W\n    X\n    Y\n    Z\n    \"\"\"\n) == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\n\nassert solution(\n    \"\"\"\n    11\n    BETWEEN\n    SUBTLE\n    SHADING\n    AND\n    THE\n    ABSENCE\n    OF\n    LIGHT\n    LIES\n    NUANCE\n    IQLUSION\n    BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n    A\n    B\n    C\n    D\n    E\n    F\n    G\n    H\n    I\n    J\n    K\n    L\n    M\n    N\n    O\n    P\n    Q\n    R\n    S\n    T\n    U\n    V\n    W\n    X\n    Y\n    Z\n    \"\"\"\n) == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\n\nassert solution(\n    \"\"\"\n    11\n    BETWEEN\n    SUBTLE\n    SHADING\n    AND\n    THE\n    ABSENCE\n    OF\n    LIGHT\n    LIES\n    NUANCE\n    IQLUSION\n    BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n    A\n    B\n    C\n    D\n    E\n    F\n    G\n    H\n    I\n    J\n    K\n    L\n    M\n    N\n    O\n    P\n    Q\n    R\n    S\n    T\n    U\n    V\n    W\n    X\n    Y\n    Z\n    \"\"\"\n) == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\n\nassert solution(\n    \"\"\"\n    11\n    BETWEEN\n    SUBTLE\n    SHADING\n    AND\n    THE\n    ABSENCE\n    OF\n    LIGHT\n    LIES\n    NUANCE\n    IQLUSION\n    BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n    A\n    B\n    C\n    D\n    E\n    F\n    G\n    H\n    I\n    J\n    K\n    L\n    M\n    N\n    O\n    P\n    Q\n    R\n    S\n    T\n    U\n    V\n    W\n    X\n    Y\n    Z\n    \"\"\"\n) == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\n\nassert solution(\n    \"\"\"\n    11\n    BETWEEN\n    SUBTLE\n    SHADING\n    AND\n    THE\n    ABSENCE\n    OF\n    LIGHT\n    LIES\n    NUANCE\n    IQLUSION\n    BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n    A\n    B\n    C\n    D\n    E\n    F\n    G\n    H\n    I\n    J\n    K\n    L\n    M\n    N\n    O\n    P\n    Q\n    R\n    S\n    T\n    U\n    V\n    W\n    X\n    Y\n    Z\n    \"\"\"\n) == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\""
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"11\\nABSTRACT\\nRESEARCH\\nCONSTRUCTION\\nAND\\nTHE\\nBEHAVIOR\\nOF\\nTHE\\nEXPERT\\nARITHMETICIAN\\nLIES\\nINVERTERS\\nLITERATURE\\nCONSISTENCY\\nAND\\nCOMPUTER\\nSCIENCE\") == \"RESEARCH CONSTRUCTION AND THE BEHAVIOR OF THE EXPERT ARITHMETICIAN LIES INVERTERS LITERATURE CONSISTENCY AND COMPUTER SCIENCE\"\nassert solution(\"2\\nA\\nB\\nC\") == \"A B C\"\nassert solution(\"2\\nHELLO\\nWORLD\\n\") == \"H E L L O W W\"\nassert solution(\"2\\nAB\\nCD\") == \"A B C D\"\nassert solution(\"1\\nA\") == \"A\"\n"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(f\"\"\"\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n\"\"\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\\n\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"3\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS\\nLETTERS"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\n"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\""
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\n"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('abrahellehhelleh') == 12, \"The correct power of the word is 12.\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abrahellehhelleh\") == \"12\", \"Test 1\"\nassert solution(\"rachelhellabracadabra\") == \"0\", \"Test 2\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('abrahellehhelleh') == 12, \"Test case 1 failed\"\nassert solution('rachelhellabracadabra') == 0, \"Test case 2 failed\"\nassert solution('hello') == 0, \"Test case 3 failed\"\nassert solution('world') == 0, \"Test case 4 failed\"\nassert solution('abcd') == 0, \"Test case 5 failed\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abrahellehhelleh\") == 12"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"The solution is incorrect.\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"Output should be 12\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"Incorrect output. Expected 12, got {}\".format(solution(\"abrahellehhelleh\"))"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"abrahellehhelleh\") == 12\n"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abrahellehhelleh\") == 12\n"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"Output does not match expected output\""
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"70\" # expected output: \"70\""
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\""
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n\") == \"70\"\n"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '70'"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '70'"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\"  # Example 1\nassert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 "
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin: str) == \"70\""
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\") == \"70\\n\"\n"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '70\\n'\nassert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 2') == '50\\n'\nassert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 3') == '10\\n'\nassert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 4') == '5\\n'\nassert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 5') == '0\\n'\nassert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 6') == '5\\n'\nassert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 7') == '0\\n'\nassert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 8') == '0\\n'\nassert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 9') == '0\\n'\nassert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 10') == '0\\n'\nassert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 11') == '0\\n'\nassert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 12') == '0\\n'\nassert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 13') == '0\\n'\nassert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 14') == '0\\n'\nassert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 15') == '0\\n'\nassert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 16') == '0\\n'\nassert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 17') == '0\\n'\nassert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 18') == '0\\n'\nassert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 19') == '0\\n'\nassert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 20') == '0\\n'\nassert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 21') == '0\\n'\nassert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 22') == '0\\n'\nassert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 23') == '0\\n'"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n\") == \"10\\n7\\n8\\n7\\n\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"10\\n7\\n8\\n7\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9') == '10\\n7\\n8\\n7\\n'\nassert solution('10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9') == '10\\n7\\n8\\n7\\n'"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    10 5\n    1 2 3 4 5 6 7 8 9 10\n    1 2 3 4 5 6 7 8 9\n    \"\"\"\n) == '10\\n7\\n8\\n7\\n'\n\nassert solution(\n    \"\"\"\n    10 5\n    1 2 3 4 5 6 7 8 9 10\n    1 2 3 4 5 6 7 8 9\n    0 1\n    0 4\n    1 4\n    0 1\n    0 4\n    \"\"\"\n) == '10\\n7\\n8\\n7\\n'\n\nassert solution(\n    \"\"\"\n    10 5\n    1 2 3 4 5 6 7 8 9 10\n    1 2 3 4 5 6 7 8 9\n    0 1\n    0 4\n    1 4\n    0 1\n    0 4\n    2 3 4 5\n    3 4 5\n    4 5\n    \"\"\"\n) == '2\\n7\\n7\\n'\n\nassert solution(\n    \"\"\"\n    10 5\n    1 2 3 4 5 6 7 8 9 10\n    1 2 3 4 5 6 7 8 9\n    0 1\n    0 4\n    1 4\n    0 1\n    0 4\n    2 3 4 5\n    3 4 5\n    4 5\n    5 6 7\n    6 7 8\n    7 8 9\n    \"\"\"\n) == '8\\n7\\n7\\n'\n\nassert solution(\n    \"\"\"\n    10 5\n    1 2 3 4 5 6 7 8 9 10\n    1 2 3 4 5 6 7 8 9\n    0 1\n    0 4\n    1 4\n    0 1\n    0 4\n    2 3 4 5\n    3 4 5\n    4 5\n    5 6 7\n    6 7 8\n    7 8 9\n    9 10\n    \"\"\"\n) == '1\\n7\\n7\\n'"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\") == \"10\\n7\\n8\\n7\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n\") == \"10\\n7\\n8\\n7\\n\"\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n\") == \"10\\n7\\n8\\n7\\n\"\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n\") == \"10\\n7\\n8\\n7\\n\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    10 5\n    1 2 3 4 5 6 7 8 9 10\n    1 2 3 4 5 6 7 8 9\n    0 1\n    0 4\n    1 4\n    0 1\n    0 4\n    \"\"\"\n) == \"10\\n7\\n8\\n7\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"The solution is incorrect. Expected {expected}, but got {solution(input())}.\"\n"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n\") == \"10\\n7\\n8\\n7\\n\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\"\n10\n7\n8\n7\n\"\"\""
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\\n\") == \"6\"\n"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\"\"\") == 6\n\nassert solution(\"\"\"2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\"\"\") == 6\n\nassert solution(\"\"\"2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\"\"\") == 6"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == output, f\"Expected {output}, got {solution(input)}\""
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\\n\"\nassert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 0\") == \"n\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"6\\n\"\n"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"\"\"\n"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\\n\") == \"6\\n\""
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\"\n"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 4 40\") == \"3\\n\"\nassert solution(\"5 2 2 50\") == \"10\\n\"\nassert solution(\"3 2 1 50\") == \"6\\n\"\nassert solution(\"6 1 2 60\") == \"15\\n\"\nassert solution(\"6 2 3 70\") == \"22\\n\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 1 4 40') == '3\\n'"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1 4 40\") == 3, \"The correct output is: 3\"\nassert solution(\"3.0 1.0 4.0 40.0\") == 3, \"The correct output is: 3\"\nassert solution(\"3 1 4 40.1\") == 3, \"The correct output is: 3\"\nassert solution(\"3.0 1.0 4.0 40.5\") == 3, \"The correct output is: 3\"\nassert solution(\"3 1 4 40\") == 3, \"The correct output is: 3\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1 4 40\") == 3, \"Sample Output: 3\"\n\nfrom collections import Counter"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 1 4 40') == '3\\n'\n"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 1 4 40') == '3\\n'\nassert solution('3.5 1.5 4.5 40') == '3\\n'\nassert solution('1.5 2.5 1.5 100') == '1\\n'\nassert solution('3.5 1.5 3.5 30') == '3\\n'\nassert solution('5 5 2 100') == '5\\n'"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1 4 40\") == \"3\\n\"\n"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1 4 40\") == \"3\\n\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 4 40\") == \"3\\n\"\nassert solution(\"4 2 5 10\") == \"3\\n\"\nassert solution(\"3 1 5 40\") == \"3\\n\"\nassert solution(\"4 2 5 10\") == \"3\\n\"\nassert solution(\"3 1 5 50\") == \"4\\n\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 4 40\") == \"3\\n\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0') == '99\\n3\\n'\nassert solution('6 10\\n100 200 300\\n100 200 300\\n100 200 300\\n100 200 300') == '100\\n0 1 2 3 4\\n'\nassert solution('1 1 1 1') == '1\\n'\nassert solution('3 3') == '0\\n'"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '''\n99\n3\n'''\n"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\") == \"99\\n3\\n\"\nassert solution(\"1 3 99\\n3 6 4 3\\n\") == \"99\\n3\\n\"\nassert solution(\"1 3 99\\n3 6 4 3\\n1 1 1 1 1\\n\") == \"99\\n3\\n\"\nassert solution(\"1 3 99\\n3 6 4 3\\n1 1 1 1 1\\n2 1 2 1 1\\n\") == \"99\\n3\\n\"\nassert solution(\"1 3 99\\n3 6 4 3\\n1 1 1 1 1\\n2 1 2 1 1\\n2 2 1 2 2\\n\") == \"99\\n3\\n\"\nassert solution(\"1 3 99\\n3 6 4 3\\n1 1 1 1 1\\n2 1 2 1 1\\n2 2 1 2 2\\n2 2 2 1 2\\n\") == \"99\\n3\\n\"\nassert solution(\"1 3 99\\n3 6 4 3\\n1 1 1 1 1\\n2 1 2 1 1\\n2 2 1 2 2\\n2 2 2 1 2\\n2 2 2 2 1\\n\") == \"99\\n3\\n\"\nassert solution(\"1 3 99\\n3 6 4 3\\n1 1 1 1 1\\n2 1 2 1 1\\n2 2 1 2 2\\n2 2 2 1 2\\n2 2 2 2 1\\n2 2 2 2 2\\n\") == \"99\\n3\\n\"\nassert solution(\"1 3 99\\n3 6 4 3\\n1 1 1 1 1\\n2 1 2 1 1\\n2 2 1 2 2\\n2 2 2 1 2\\n2 2 2 2 1\\n2 2 2 2 2\\n2 2 2 2 2\\n2 2 2 2 2\\n2 2 2 2 2\\n2 2 2 2 2\\n\") == \"99\\n3\\n\"\nassert solution(\"1 3 99\\n3 6 4 3\\n1 1 1 1 1\\n2 1 2 1 1\\n2 2 1 2 2\\n2 2 2 1 2\\n2 2 2 2 1\\n2 2 2 2 2\\n2 2 2 2 2\\n2 2 2 2 2\\n2 2 2 2 2\\n2 2 2 2 2\\n2 2 2 2 2\\n2 2 2 2 2\\n2 2 2 2 2\\n2 2 2 2 2\\n2 2 2 2 2\\n2 2 2 2 2\\n2 2 2 2 2\\n2 2 2 2 2\\n2 2 2 2 2\\n2 2 2 2 2\\n2 2 2 2 2\\n2 2 2 2 2\\n2 2 2 2 2\\n2 2 2 2 2\\n2 2 2 2 2\\n2 2 2 2 "
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n\") == \"99\\n3\"\nassert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n2 4 3\\n5 4 3\\n6 4 3\\n\") == \"99\\n3\"\nassert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n0 0 0\\n1 1 1\\n\") == \"0\\n\"\nassert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n\") == \"0\\n\"\nassert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n2 4 3\\n5 4 3\\n6 4 3\\n\") == \"99\\n3\"\nassert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n0 0 0\\n1 1 1\\n\") == \"0\\n\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\") == \"99\\n3\\n\"\nassert solution(\"2 10\\n1 2 3 4\\n1 3 5 6\\n2 4 7 8\\n3 5 9 10\\n4 6 11 12\\n5 7 13 14\\n6 8 15 16\\n7 9 17 18\\n8 10 19 20\\n9 11 21 22\\n10 12 23 24\") == \"99\\n1\\n4\\n\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    3 352\n    93 82 444\n    92 76 436\n    99 62 -1\n    0 70 66 71 97\n    76 0 87 66 74\n    62 90 0 60 94\n    60 68 68 0 69\n    83 78 83 73 0\n    \"\"\"\n) == \"99\\n3\"\n\nassert solution(\n    \"\"\"\n    3 352\n    93 82 444\n    92 76 436\n    99 62 -1\n    0 70 66 71 97\n    76 0 87 66 74\n    62 90 0 60 94\n    60 68 68 0 69\n    83 78 83 73 0\n    \"\"\"\n) == \"99\\n3\"\n\nassert solution(\n    \"\"\"\n    3 352\n    93 82 444\n    92 76 436\n    99 62 -1\n    0 70 66 71 97\n    76 0 87 66 74\n    62 90 0 60 94\n    60 68 68 0 69\n    83 78 83 73 0\n    \"\"\"\n) == \"99\\n3\"\n\nassert solution(\n    \"\"\"\n    3 352\n    93 82 444\n    92 76 436\n    99 62 -1\n    0 70 66 71 97\n    76 0 87 66 74\n    62 90 0 60 94\n    60 68 68 0 69\n    83 78 83 73 0\n    \"\"\"\n) == \"99\\n3\"\n\nassert solution(\n    \"\"\"\n    3 352\n    93 82 444\n    92 76 436\n    99 62 -1\n    0 70 66 71 97\n    76 0 87 66 74\n    62 90 0 60 94\n    60 68 68 0 69\n    83 78 83 73 0\n    \"\"\"\n) == \"99\\n3\"\n\nassert solution(\n    \"\"\"\n    3 352\n    93 82 444\n    92 76 436\n    99 62 -1\n    0 70 66 71 97\n    76 0 87 66 74\n    62 90 0 60 94\n    60 68 68 0 69\n    83 78 83 73 0\n    \"\"\"\n) == \"99\\n3\"\n\nassert solution(\n    \"\"\"\n    3 352\n    93 82 444\n    92 76 436\n    99 62 -1\n    0 70 66 71 97\n    76 0 87 66 74\n    62 90 0 60 94\n    60 68 68 0 69\n    83 78 83 73 0\n    \"\"\"\n) == \"99\\n3\"\n\nassert solution(\n    \"\"\"\n    3 352\n    93 82 444\n    92 76 436\n    99 62 -1\n    0 70 66 71 97\n    76 0 87 66 74\n    62 90 0 60 94\n    60 68 68 0 69\n    83 78 83 73 0\n    \"\"\"\n) == \"99\\n3\"\n\nassert solution(\n    \"\"\"\n    3 352\n    93 82 444\n    92 76 436\n    99 62 -1\n    0 "
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    3 352\n    93 82 444\n    92 76 436\n    99 62 -1\n    0 70 66 71 97\n    76 0 87 66 74\n    62 90 0 60 94\n    60 68 68 0 69\n    83 78 83 73 0\n    ''') == '99\\n3\\n'"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n\") == \"99\\n3\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"99\\n3\\n\"\nassert solution() == \"0\\n0\\n\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0') == '99\\n3'\n\nassert solution('4 24\\n1 2 3 4\\n5 6 7 8\\n9 10 11 12\\n13 14 15 16') == '0\\n'\n\nassert solution('1 10\\n0 1 2 3 4\\n5 6 7 8 9\\n10 11 12 13 14') == '0\\n'\n\nassert solution('1 10\\n0 1 2 3 4\\n5 6 7 8 9\\n10 11 12 13 14\\n20 21 22 23 24') == '0\\n'\n\nassert solution('2 10\\n0 1 2 3 4\\n5 6 7 8 9\\n10 11 12 13 14\\n20 21 22 23 24\\n1 1 1 1 1') == '1 3'\n\nassert solution('2 20\\n0 1 2 3 4\\n5 6 7 8 9\\n10 11 12 13 14\\n20 21 22 23 24\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1') == '1 3'\n\nassert solution('2 30\\n0 1 2 3 4\\n5 6 7 8 9\\n10 11 12 13 14\\n20 21 22 23 24\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1') == '1 3'\n\nassert solution('2 30\\n0 1 2 3 4\\n5 6 7 8 9\\n10 11 12 13 14\\n20 21 22 23 24\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1') == '1 3'\n\nassert solution('2 40\\n0 1 2 3 4\\n5 6 7 8 9\\n10 11 12 13 14\\n20 21 22 23 24\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Moles are tidy and hard-working animals. Our mole likes to keep its underground residence in utmost order, so that everyone living there knows where to find things.\\nTo achieve this, the mole connected rooms with tunnels so that there is a single unique way to get from one room to any other room. The distance between two rooms is the number of halls passed on the way from one to the other.\\nDespite all the effort, some of the mole\u2019s guests are complaining that it takes too long to walk between certain pairs of rooms.\\nThe mole decided to reconstruct her residence, closing one tunnel and opening a new one, so that the distance between the farthest two rooms is the smallest possible, but so that it is still possible to reach every room from every other room.\\n\") == \"2\\n3 4\\n4 2\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Moles are tidy and hard-working animals. Our mole likes to keep its underground residence in utmost order, so that everyone living there knows where to find things.\\n\\nTo achieve this, the mole connected rooms with tunnels so that there is a single unique way to get from one room to any other room. The distance between two rooms is the number of halls passed on the way from one to the other.\\n\\nDespite all the effort, some of the mole\u2019s guests are complaining that it takes too long to walk between certain pairs of rooms.\\n\\nThe mole decided to reconstruct her residence, closing one tunnel and opening a new one, so that the distance between the farthest two rooms is the smallest possible, but so that it is still possible to reach every room from every other room.\\n\\nWrite a program which determines the distance between the farthest two rooms after reconstruction, which tunnel to close and which to open. It is allowed to reopen the same tunnel that is closed, if this results in the minimum farthest distance.\\n\\n-----Input-----\\nThe first line contains an integer $N$ ($2 \\le N \\le 300000$), the number of rooms. The rooms are numbered $1$ to $N$.\\n\\nEach of the next $N-1$ lines contains two integers, the numbers of rooms a tunnel connects.\\n\\n-----Output-----\\nOutput on separate lines, in order:\\n - The distance between the two farthest rooms after reconstruction.\\n - A pair of integers representing a previously existing tunnel, which should be closed.\\n - A pair of integers, the rooms between which a new tunnel should be opened.\\n\\nNote: The solution will not necessarily be unique. Output any reconstruction plan which achieves the smallest distance between the farthest two rooms.\\n\\n-----Examples-----\\nSample Input:\\n4\\n1 2\\n2 3\\n3 4\\nSample Output:\\n2\\n3 4\\n4 2\") == 2"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\\n3 4\\n4 2\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\\n3\\n4\") == \"2\\n3 4\\n4 2\"\nassert solution(\"2\\n3\\n4\") == \"2\\n3 4\\n4 2\"\nassert solution(\"3\\n4\\n5\") == \"2\\n3 4\\n4 2\"\nassert solution(\"4\\n5\\n6\") == \"3\\n4 5\\n5 6\"\nassert solution(\"5\\n6\\n7\") == \"3\\n4 5\\n5 6\"\nassert solution(\"6\\n7\\n8\") == \"4\\n5 6\\n6 7\"\nassert solution(\"7\\n8\\n9\") == \"4\\n5 6\\n6 7\"\nassert solution(\"8\\n9\\n10\") == \"4\\n5 6\\n6 7\"\nassert solution(\"9\\n10\\n11\") == \"5\\n6 7\\n7 8\"\nassert solution(\"10\\n11\\n12\") == \"5\\n6 7\\n7 8\"\nassert solution(\"11\\n12\\n13\") == \"5\\n6 7\\n7 8\"\nassert solution(\"12\\n13\\n14\") == \"5\\n6 7\\n7 8\"\nassert solution(\"13\\n14\\n15\") == \"5\\n6 7\\n7 8\"\nassert solution(\"14\\n15\\n16\") == \"5\\n6 7\\n7 8\"\nassert solution(\"15\\n16\\n17\") == \"5\\n6 7\\n7 8\"\nassert solution(\"16\\n17\\n18\") == \"5\\n6 7\\n7 8\"\nassert solution(\"17\\n18\\n19\") == \"5\\n6 7\\n7 8\"\nassert solution(\"18\\n19\\n20\") == \"5\\n6 7\\n7 8\"\nassert solution(\"19\\n20\\n21\") == \"5\\n6 7\\n7 8\"\nassert solution(\"20\\n21\\n22\") == \"5\\n6 7\\n7 8\"\nassert solution(\"21\\n22\\n23\") == \"5\\n6 7\\n7 8\"\nassert solution(\"22\\n23\\n24\") == \"5\\n6 7\\n7 8\"\nassert solution(\"23\\n24\\n25\") == \"5\\n6 7\\n7 8\"\nassert solution(\"24\\n25\\n26\") == \"5\\n6 7\\n7 8\"\nassert solution(\"25\\n26\\n27\") == \"5\\n6 7\\n7 8\"\nassert solution(\"26\\n27\\n28\") == \"5\\n6 7\\n7 8\"\nassert solution(\"27\\n28\\n29\") == \"5\\n6 7\\n7 8\"\nassert solution(\"28\\n29\\n30\") == \"5\\n6 7\\n7 8\"\nassert solution(\"29\\n30\\n31\") == \"5\\n6 7\\n7 8\"\nassert solution(\"30\\n31\\n32\") == \"5\\n6 7\\n7 8\"\nassert solution(\"31\\n32\\n33\") == \"5\\n6 7\\n7 8\"\nassert solution(\"32\\n33\\n34\") == \"5\\n6 7\\n7 8\"\nassert solution(\"33\\n34\\n35\") == \"5\\n6 7\\n7 8\"\nassert solution(\"34\\n35\\n36\") == \"5\\n6 7\\n7 8\"\nassert solution(\"35\\n36\\n37\") == \"5\\n6 7\\n7 8\"\nassert solution(\"36\\n37\\n38\") == \"5\\n6 7\\n7 8\"\nassert solution(\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\\n3 4\\n4 2\"\nassert solution() == \"2\\n3 4\\n4 2\"\nassert solution() == \"2\\n3 4\\n4 2\"\nassert solution() == \"2\\n3 4\\n4 2\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '2\\n3 4\\n4 2'\n"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2\\n3 4\\n4 2\"\n"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input()) == sample_output()"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"2\\n3 4\\n4 2\"\nassert solution(7) == \"2\\n3 4\\n4 2\"\nassert solution(8) == \"4\\n2 3\"\nassert solution(10) == \"4\\n2 3\"\nassert solution(11) == \"4\\n2 3\"\nassert solution(12) == \"3\\n1 2\"\nassert solution(13) == \"3\\n1 2\"\nassert solution(14) == \"3\\n1 2\"\nassert solution(15) == \"3\\n1 2\"\nassert solution(16) == \"3\\n1 2\"\nassert solution(17) == \"3\\n1 2\"\nassert solution(18) == \"3\\n1 2\"\nassert solution(19) == \"3\\n1 2\"\nassert solution(20) == \"3\\n1 2\"\nassert solution(21) == \"3\\n1 2\"\nassert solution(22) == \"3\\n1 2\"\nassert solution(23) == \"3\\n1 2\"\nassert solution(24) == \"3\\n1 2\"\nassert solution(25) == \"3\\n1 2\"\nassert solution(26) == \"3\\n1 2\"\nassert solution(27) == \"3\\n1 2\"\nassert solution(28) == \"3\\n1 2\"\nassert solution(29) == \"3\\n1 2\"\nassert solution(30) == \"3\\n1 2\"\nassert solution(31) == \"3\\n1 2\"\nassert solution(32) == \"3\\n1 2\"\nassert solution(33) == \"3\\n1 2\"\nassert solution(34) == \"3\\n1 2\"\nassert solution(35) == \"3\\n1 2\"\nassert solution(36) == \"3\\n1 2\"\nassert solution(37) == \"3\\n1 2\"\nassert solution(38) == \"3\\n1 2\"\nassert solution(39) == \"3\\n1 2\"\nassert solution(40) == \"3\\n1 2\"\nassert solution(41) == \"3\\n1 2\"\nassert solution(42) == \"3\\n1 2\"\nassert solution(43) == \"3\\n1 2\"\nassert solution(44) == \"3\\n1 2\"\nassert solution(45) == \"3\\n1 2\"\nassert solution(46) == \"3\\n1 2\"\nassert solution(47) == \"3\\n1 2\"\nassert solution(48) == \"3\\n1 2\"\nassert solution(49) == \"3\\n1 2\"\nassert solution(50) == \"3\\n1 2\"\nassert solution(51) == \"3\\n1 2\"\nassert solution(52) == \"3\\n1 2\"\nassert solution(53) == \"3\\n1 2\"\nassert solution(54) == \"3\\n1 2\"\nassert solution(55) == \"3\\n1 2\"\nassert solution(56) == \"3\\n1 2\"\nassert solution(57) == \"3\\n1 2\"\nassert solution(58) == \"3\\n1 2\"\nassert solution(59) == \"3\\n1 2\"\nassert solution(60) == \"3\\n1 2\"\nassert solution(61) == \"3\\n1 2\"\nassert solution(62) == \"3\\n1 2\"\nassert solution(63) == \"3\\n1 2\"\nassert solution(64) == \"3\\n1 2\"\nassert solution(65) == \"3\\n1 2\"\nassert solution(66) == \"3\\n1 2\"\nassert solution(67) == \"3\\n1 2\"\nassert solution(68) == \"3\\n1 2\"\nassert solution(69) == \"3\\n1 2\"\nassert solution(70) == \"3\\n"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\") == \"9.0000\\n12\\n12.00000\\n9.0\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\\n\") == \"9.0000\\n12\\n12.00000\\n9.0\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n1 1\\n2 2\\n3 2\\n4 1') == '9.0000\\n12\\n12.00000\\n9.0'"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\") == \"9.0\"\nassert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\") == \"12\"\nassert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\") == \"12.00000\"\nassert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\") == \"9.0\"\nassert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\") == \"12\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n1 1\\n2 2\\n3 2\\n4 1') == '9.0000\\n12\\n12.00000\\n9.0'"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"9.0000\", \"Test failed for '9.0000'\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"The solution is {solution(input())}, but should be {output}\"\n"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == sample_output, \"Test failed\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n4\n1 1\n2 2\n3 2\n4 1\n''') == '9.0000'\nassert solution('''\n4\n5 6\n10 10\n15 15\n20 20\n''') == '12'\nassert solution('''\n4\n5 6\n10 10\n15 15\n20 20\n''') == '12.00000'\nassert solution('''\n4\n5 6\n10 10\n15 15\n20 20\n''') == '9.0'"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == expected, f\"Test failed for input: {stdin}\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\n\nprint(\" \".join(solution(input())))"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\ndef solution(stdin: str) -> str:\\n    N = int(stdin.strip())\\n    ST A\\n    ST X\\n    PH A\\n    PH X\\n    AD\\n    PL Y\\n    DI Y\\n    return N\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nassert solution(\"1\\n\") == \"ST A\\n\"\nassert solution(\"3\\n\") == \"ST A\\nST X\\nST Y\\n\"\nassert solution(\"4\\n\") == \"ST A\\nST X\\nST Y\\nDI Y\\n\"\nassert solution(\"127\\n\") == \"ST A\\nST X\\nST Y\\nDI Y\\n\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(None) == \"0\\n\"\nassert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"1\\n2\\n3\\n\") == \"6\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n\") == \"15\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"20\\n\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output, f\"Test failed: {solution(sample_input)}\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2') == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n'\nassert solution('3') == 'ST A\\nST X\\nPL A\\nPL X\\nAD\\nPL Y\\nDI Y\\n'\nassert solution('4') == 'ST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nDI Y\\n'\nassert solution('5') == 'ST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nAD\\nPL Y\\nDI Y\\n'\nassert solution('6') == 'ST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nAD\\nST Z\\nDI Y\\n'\nassert solution('7') == 'ST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nAD\\nST Z\\nST Z\\nDI Y\\n'\nassert solution('8') == 'ST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nAD\\nST Z\\nST Z\\nST Z\\nDI Y\\n'\nassert solution('9') == 'ST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nAD\\nST Z\\nST Z\\nST Z\\nAD\\nPL Y\\nDI Y\\n'\nassert solution('10') == 'ST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nAD\\nST Z\\nST Z\\nST Z\\nAD\\nST Z\\nAD\\nPL Y\\nDI Y\\n'\nassert solution('11') == 'ST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nAD\\nST Z\\nST Z\\nST Z\\nAD\\nST Z\\nAD\\nST Z\\nDI Y\\n'\nassert solution('12') == 'ST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nAD\\nST Z\\nST Z\\nST Z\\nAD\\nST Z\\nAD\\nST Z\\nAD\\nST Z\\nDI Y\\n'\nassert solution('13') == 'ST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nAD\\nST Z\\nST Z\\nST Z\\nAD\\nST Z\\nAD\\nST Z\\nAD\\nST Z\\nAD\\nST Z\\nDI Y\\n'\nassert solution('14') == 'ST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nAD\\nST Z\\nST Z\\nST Z\\nAD\\nST Z\\nAD\\nST Z\\nAD\\nST Z\\nAD\\nST Z\\nAD\\nST Z\\nAD\\nST Z\\nAD\\nPL Y\\nDI Y\\n'\nassert solution('15') == 'ST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nAD\\nST Z\\nST Z\\nST Z\\nAD\\nST Z\\nAD\\nST Z\\nAD\\nST Z\\nAD\\nST Z\\nAD\\nST Z\\nAD\\nST Z\\nAD\\nST Z\\nAD\\nST Z\\nAD\\nST Z\\nAD\\nST Z\\nAD\\nPL Y\\nDI Y\\n'\nassert solution('16') == 'ST A\\nST X\\nST Y\\nST A\\nST X\\nST Y\\nAD\\nST Z\\nST Z\\nST Z\\nAD\\nST Z\\nAD\\nST Z\\nAD\\nST Z\\nAD\\nST Z\\nAD\\nST Z\\nAD\\nST Z\\nAD\\nST Z\\nAD\\nST Z\\nAD\\nST Z\\nAD\\nST Z\\nAD\\nST Z\\nAD\\nPL Y\\nDI Y\\n'\nassert solution('17') == 'ST A\\n"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(b'2\\n') == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\n"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\""
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"2\""
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"1 5 6\n0000 FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000\"\"\") == 2"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Solution does not match expected output: {solution(input())}!= {output}\""
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 2\nprint(\"All is well!\")"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == \"2\"\n"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\", \"The solution should return '2'.\"\n"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000') == 2\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('photography.in', 'r').read()) == 2\n"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == \"2\"\nassert solution(\"1 5 6\\n0000 0000 0000 0000 0000 0000\\n0000 0000 0000 0000 0000 0000\\n0000 0000 0000 0000 0000 0000\\n0000 0000 0000 0000 0000 0000\\n0000 0000 0000 0000 0000 0000\") == \"1\""
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == 2, \"Incorrect output\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"abbbbbbbbbbbbbbbbba\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\n"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\none on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\\nSample Output:\\nbababba\\nNONE\\nbbbbbbbbba\\na\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\\n\") == \"abaaba\\nNONE\\nbbbbbbbbba\\na\\n\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    5\n        S -> aSa\n        S -> bSb\n        S -> a\n        S -> b\n        S -> \n''') == 'abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\ndef solution(stdin: str) -> str: \\n    pass'"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\none on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\") == \"abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    5\n    10 -> aSa\n    10 -> bSb\n    10 -> a\n    10 -> b\n    10 -> \n''') == 'abaaba'\nassert solution('''\n10\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \n''') == 'abaaba'\nassert solution('''\n10\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \n''') == 'abbbbbbbbbbbbbbbbba'\nassert solution('''\n10\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \n''') == 'a'"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == sample_output, f\"Sample input: \\n{sample_input}\\nSample Output: \\n{sample_output}\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS ->\\nwhere are the abaaba palindromes on this line\\none on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\\nSample Output:abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\ndef solution(stdin: str) -> str:\\n    pass\") == \"abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \n''') == 'abaaba'\nassert solution('''\n    5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \n''') == 'NONE'\nassert solution('''\n    5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \n''') == 'abbbbbbbbbbbbbbbbba'\nassert solution('''\n    5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \n''') == 'a'"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5 0 2\\n1 3 7\\n2 0\\n4\") == \"4\\n4\"\nassert solution(\"2 4 5 6\\n1 2 3\\n4 5 6\") == \"0\\n2\"\nassert solution(\"1 1 1 1\\n1 1 1 1\") == \"1\"\nassert solution(\"1 1 1 1\\n1 1 1 1\") == \"1\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4, 5, 0, 2) == 4\nassert solution(1, 3, 7) == 7\nassert solution(2, 0) == 0\nassert solution(4) == 4"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 4, \"Test case failed.\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n4 5 0 2\\n1 3 7\\n2 0\\n4') == '4\\n4'"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Output\"\n"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 4, \"Incorrect output\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 4, \"Test Failed\"\nprint(\"All Test Passed\")"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n4 5 0 2\\n1 3 7\\n2 0\\n4\") == 4, \"Test case 1 failed\"\nassert solution(\"5\\n1 3 7\\n2 0\\n4\") == 4, \"Test case 2 failed\"\nassert solution(\"10\\n1 3 7\\n2 0\\n4\") == 4, \"Test case 3 failed\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n4 5 0 2\\n1 3 7\\n2 0\\n4') == '4'"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n4 5 0 2\\n1 3 7\\n2 0\\n4\") == 4\nassert solution(\"5\\n2 4 1 7\\n1 0\\n3 2\") == 2\nassert solution(\"5\\n4 0\\n1 4\\n2 2\") == 2\nassert solution(\"6\\n5 0\\n1 3\\n2 2\\n3 3\") == 3\n"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nSBBW\") == \"SUCCESS\"\nassert solution(\"1 2\\n5 6\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"NO WAY\"\nassert solution(\"1 2\\n5 6\\nWWWW\\nWSBB\\nWWWW\\nWSBB\") == \"NO CHANCE\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG''') == 'GO FOR IT'\n\nassert solution('''2 3\n5 5\nWWWW\nWBBS\nWWWW\nBWGW''') == 'GO FOR IT'\n\nassert solution('''2 3\n2 3\nSSS\nSSS\nSSS''') == 'NO CHANCE'\n\nassert solution('''2 3\n2 4\nSSS\nSSS\nSBB''') == 'NO WAY'\n\nassert solution('''2 4\n4 2\nSSS\nSBB\nSSS''') == 'NO WAY'"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nSSBB\\nWSBB\\nWSBB\\nWSBB\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBGW\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\") == \"NO CHANCE\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(\"1 2\\n5 6\\nSBBW\\nBSWG\\nSGWW\\n\") == \"SUCCESS\"\nassert solution(\"1 2\\n5 6\\nSBBW\\nBSWG\\nSGWW\\nW\") == \"SUCCESS\"\nassert solution(\"1 2\\n5 6\\nSBBW\\nBSWG\\nSGWW\\nBB\") == \"NO WAY\"\nassert solution(\"1 2\\n5 6\\nSBBW\\nBSWG\\nSGWW\\nWSBB\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"NO WAY\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG') == 'GO FOR IT'\nassert solution('2 4\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG') == 'GO FOR IT'\nassert solution('2 4\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBGW') == 'GO FOR IT'\nassert solution('2 4\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWWG') == 'GO FOR IT'\nassert solution('2 4\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWBG') == 'GO FOR IT'\nassert solution('2 4\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWWG') == 'GO FOR IT'\nassert solution('2 4\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWBG') == 'NO WAY'\nassert solution('2 4\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWBG') == 'NO WAY'\nassert solution('2 4\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWBG') == 'NO WAY'\nassert solution('2 4\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWBG') == 'NO WAY'\nassert solution('2 4\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWBG') == 'NO WAY'"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\nprint(\"SUCCESS\" if solution(input()) == output else \"NO WAY\" if (not solution(input()) and output == \"GO FOR IT\") or (solution(input()) and output == \"GO FOR IT\") else \"NO CHANCE\")"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBGW\") == \"NO WAY\"\nassert solution(\"10 10\\n1 1\\n1010\\n1010\\n1010\") == \"SUCCESS\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG') == 'GO FOR IT'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBW') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB') == 'SUCCESS'\n"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWWW\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWWW\\nWSBB\\nWWWW\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\nWSBB\\nWWWW\\nWSBB\\nWWWW\") == \"NO WAY\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2243\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2243\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 2243, \"Incorrect output.\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 900\\n800 700 400 300 200') == '2243\\n'"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2243\"\n"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    5 900\n    800 700 400 300 200\n    \"\"\"\n) == \"2243\\n\"\n"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(str(5) + \" \" + str(900)) == \"2243\\n\", \"Test case 1 failed\"\n\nassert solution(str(5) + \" \" + str(800) + \" \" + str(700) + \" \" + str(400) + \" \" + str(300) + \" \" + str(200)) == \"1900\\n\", \"Test case 2 failed\"\n\nassert solution(str(5) + \" \" + str(900) + \" \" + str(800) + \" \" + str(700) + \" \" + str(600) + \" \" + str(500)) == \"1234\\n\", \"Test case 3 failed\"\n\nassert solution(str(5) + \" \" + str(900) + \" \" + str(800) + \" \" + str(700) + \" \" + str(400) + \" \" + str(300) + \" \" + str(200)) == \"2243\\n\", \"Test case 4 failed\"\n\nassert solution(str(5) + \" \" + str(900) + \" \" + str(800) + \" \" + str(700) + \" \" + str(600) + \" \" + str(500) + \" \" + str(400)) == \"2000\\n\", \"Test case 5 failed\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin: str) == \"2243\\n\", \"Test Failed\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 900\\n800 700 400 300 200\") == \"2243\"  # correct output\n"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 900\\n800 700 400 300 200') == '2243\\n'"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\") == \"no\\nyes\\n\"\nassert solution(\"10 5\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\") == \"yes\\nno\\n\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\") == \"no\\nyes\\n\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    10 4\n    3 = 2\n    5 = 4\n    \"\"\"\n) == \"yes\\nno\\n\"\n\nassert solution(\n    \"\"\"\n    10 4\n    3 = 2\n    5 = 4\n    6 = 8\n    5 = 6\n    \"\"\"\n) == \"yes\\nno\\n\"\n\nassert solution(\n    \"\"\"\n    10 4\n    3 = 2\n    5 = 4\n    6 = 8\n    5 = 6\n    8 = 10\n    10 = 10\n    \"\"\"\n) == \"no\\n\"\n\nassert solution(\n    \"\"\"\n    10 4\n    3 = 2\n    5 = 4\n    6 = 8\n    5 = 6\n    8 = 10\n    10 = 10\n    12 = 12\n    \"\"\"\n) == \"no\\n\"\n\nassert solution(\n    \"\"\"\n    10 4\n    3 = 2\n    5 = 4\n    6 = 8\n    5 = 6\n    8 = 10\n    10 = 10\n    12 = 12\n    14 = 16\n    16 = 16\n    \"\"\"\n) == \"no\\n\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n') == 'no\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3') == 'no\\nyes'\n"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n\") == \"no\\nno\\n\"\nassert solution(\"10 5\\n? 1 2\\n? 2 2\\n= 1 8\\n? 1 2\\n\") == \"no\\nno\\nno\\n\"\nassert solution(\"10 5\\n? 1 2\\n? 2 3\\n? 3 2\\n= 1 8\\n= 2 8\\n= 3 8\\n\") == \"no\\nno\\nno\\nno\\n\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input: {input()}, expected output: {expected_output}, got: {solution(input())}\"\n"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n\") == \"no\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\") == \"2\\n\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == \"2\""
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\""
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Test case failed: expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 3\\n10 5 4 8 3') == '2\\n'\nassert solution('10 100 10\\n1 2 3 4 5\\n2 4 6 8 10') == '20\\n'\nassert solution('2 4\\n1 2 3 4 5') == '0\\n'\nassert solution('1 2 3\\n4 5 6 7 8') == '4\\n'\nassert solution('1 1 1\\n1 1 1') == '1\\n'"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\") == \"2\"\nassert solution(\"5 3\\n7 8 9\") == \"0\"\nassert solution(\"5 3\\n2 3 4\") == \"3\"\nassert solution(\"5 3\\n1 2 3 4 5\") == \"1\""
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\\n\""
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 3\\n10 5 4 8 3\\n') == '2\\n'\n"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\") == \"2\\n\"\nassert solution(\"5 3\\n10 5 6 9 3\") == \"0\\n\"\nassert solution(\"5 3\\n10 5 4 8 6\") == \"2\\n\"\nassert solution(\"5 3\\n10 5 4 8 3\") == \"2\\n\"\nassert solution(\"5 3\\n10 5 4 8 2\") == \"0\\n\"\nassert solution(\"5 3\\n10 5 4 8 4\") == \"3\\n\"\n\nfrom typing import List\nfrom math import sqrt"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 127\") == \"1083\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == '1083'"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 127\") == \"1083\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 1083, \"The output should be 1083.\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 127\") == \"1083\\n\", \"The output should be 1083.\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 127\") == \"1083\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 127\") == \"1083\\n\"\nprint(\"All Tests Passed!\")"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 127\") == \"1083\"\n"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='1 127') == '1083'\nprint('All tests pass')"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 127\") == \"1083\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?') == 2.0, \"Wrong Answer\"\nassert solution('4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\\nWhat is the air speed velocity of an unladen swallow? African?') == 2.0, \"Wrong Answer\"\nassert solution('4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\\nWhat is the air speed velocity of an unladen swallow? African?\\nWhat is the air speed velocity of an unladen swallow? African?') == 2.0, \"Wrong Answer\"\nassert solution('4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\\nWhat is the air speed velocity of an unladen swallow? African?\\nWhat is the air speed velocity of an unladen swallow? African?\\nWhat is the air speed velocity of an unladen swallow? African?') == 2.0, \"Wrong Answer\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\\n\") == \"2.0000000000\", \"The correct output is '2.0000000000'.\"\nassert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\\n\") == \"2.0000000000\", \"The correct output is '2.0000000000'.\"\nassert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\\n\") == \"2.0000000000\", \"The correct output is '2.0000000000'.\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\") == \"2.0000000000\", \"The solution is incorrect.\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 2.0"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\") == 2.0, \"Incorrect output\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2.0000000000\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2.0000000000\", \"The expected output is incorrect.\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"How much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\") == \"2.0000000000\", \"Output should be 2.0000000000, but it is {}\".format(solution(\"How much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\"))\n"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == output, f\"Testcase failed: {input} -> {output}\"\nfor input, output in testcases:\n    assert solution(input) == output, f\"Testcase failed: {input} -> {output}\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2.0000000000\\n\", \"Testcase 1 failed\"\n\nassert solution(input()) == \"2.0000000000\\n\", \"Testcase 2 failed\"\n\nassert solution(input()) == \"1.3333333333\\n\", \"Testcase 3 failed\"\n\nassert solution(input()) == \"4.0000000000\\n\", \"Testcase 4 failed\"\n\nassert solution(input()) == \"1.0000000000\\n\", \"Testcase 5 failed\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 6\\nmonkey 2 lion penguin\\n'\n                 'lion 3 monkey penguin lion\\n'\n                 'penguin 1 monkey') == 'POSSIBLE'\n\nassert solution('5 7\\nmonkey 2 lion penguin\\n'\n                 'lion 3 monkey penguin lion\\n'\n                 'penguin 1 monkey') == 'IMPOSSIBLE'\n\nassert solution('1 1\\nmonkey 1 lion\\n'\n                 'lion 1 monkey') == 'FALSE ALARM'\n\nfrom typing import List"
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\npenguin 1 monkey''') == 'POSSIBLE'\n\nassert solution('''3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\nmonkey 4 lion\npenguin 1 monkey'''\n) == 'POSSIBLE'\n\nassert solution('''3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\nmonkey 4 lion\nmonkey 5 lion\npenguin 1 monkey'''\n) == 'POSSIBLE'\n\nassert solution('''3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\nmonkey 4 lion\nmonkey 5 lion\nmonkey 6 lion\npenguin 1 monkey'''\n) == 'POSSIBLE'\n\nassert solution('''3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\nmonkey 4 lion\nmonkey 5 lion\nmonkey 6 lion\nmonkey 7 lion\npenguin 1 monkey'''\n) == 'POSSIBLE'\n\nassert solution('''3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\nmonkey 4 lion\nmonkey 5 lion\nmonkey 6 lion\nmonkey 7 lion\nmonkey 8 lion\npenguin 1 monkey'''\n) == 'POSSIBLE'\n\nassert solution('''3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\nmonkey 4 lion\nmonkey 5 lion\nmonkey 6 lion\nmonkey 7 lion\nmonkey 8 lion\nmonkey 9 lion\npenguin 1 monkey'''\n) == 'POSSIBLE'\n\nassert solution('''3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\nmonkey 4 lion\nmonkey 5 lion\nmonkey 6 lion\nmonkey 7 lion\nmonkey 8 lion\nmonkey 9 lion\nmonkey 10 lion\npenguin 1 monkey'''\n) == 'POSSIBLE'\n\nassert solution('''3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\nmonkey 4 lion\nmonkey 5 lion\nmonkey 6 lion\nmonkey 7 lion\nmonkey 8 lion\nmonkey 9 lion\nmonkey 10 lion\nmonkey 11 lion\npenguin 1 monkey'''\n) == 'POSSIBLE'\n\nassert solution('''3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\nmonkey 4 lion\nmonkey 5 lion\nmonkey 6 lion\nmonkey 7 lion\nmonkey 8 lion\nmonkey 9 lion\nmonkey 10 lion\nmonkey 11 lion\nmonkey 12 lion\npenguin 1 monkey'''\n) == 'POSSIBLE'\n\nassert solution('''3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\nmonkey 4 lion\nmonkey 5 lion\nmonkey 6 lion\nmonkey 7 lion\nmonkey 8 lion\nmonkey 9 lion\nmonkey 10 lion\nmonkey 11 lion\nmonkey 12 lion\nmonkey 13 lion\npenguin 1 monkey'''\n) == 'POSSIBLE'\n\nassert solution('''3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\nmonkey 4 lion\nmonkey 5 lion\nmonkey 6 lion\nmonkey 7 lion\nmonkey 8 lion\nmonkey 9 lion\nmonkey 10 lion\nmonkey 11 lion\nmonkey 12 lion\nmonkey 13 lion\nmonkey 14 lion\npenguin 1 monkey'''\n) == 'POSSIBLE'\n\nassert solution('''3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\nmonkey 4 lion\nmonkey 5 lion\nmonkey 6 lion\nmonkey 7 lion\nmonkey 8 lion\nmonkey 9 lion\nmonkey 10 lion\nmonkey 11 lion\nmonkey 12 lion\nmonkey 13"
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\nmonkey 1 lion\") == \"IMPOSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\nmonkey 1 lion\") == \"FALSE ALARM\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\n\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\n\") == \"FALSE ALARM\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey') == 'POSSIBLE'\nassert solution('4 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey') == 'IMPOSSIBLE'\nassert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 1 lion\\nmonkey 2 lion\\nmonkey 3 lion\\nmonkey 4 lion') == 'FALSE ALARM'"
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == expected, f\"Test {test_case_id} failed. Expected: '{expected}', Received: '{solution(input)}'.\" for test_case_id, input, expected in [\n    (1, \"3 6\", \"POSSIBLE\"),\n    (2, \"3 6\", \"POSSIBLE\"),\n    (3, \"3 6\", \"POSSIBLE\"),\n    (4, \"3 6\", \"IMPOSSIBLE\"),\n    (5, \"3 6\", \"FALSE ALARM\"),\n]"
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey  # All animals are in their proper enclosures\\n\") == \"FALSE ALARM\"\nassert solution(\"2 1\\nmonkey 2 lion penguin\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\n\"\n                 \"lion 3 monkey penguin lion\\n\"\n                 \"penguin 1 monkey\\n\") == \"POSSIBLE\"\n\nassert solution(\"5 6\\nmonkey 2 lion penguin\\n\"\n                 \"lion 3 monkey penguin lion\\n\"\n                 \"penguin 1 monkey\\n\"\n                 \"lion 4 ape\\n\"\n                 \"monkey 3 panda\\n\"\n                 \"panda 2 monkey\\n\"\n                 \"lion 3 monkey penguin lion\\n\"\n                 \"monkey 2 lion penguin\\n\"\n                 \"lion 3 monkey penguin lion\\n\"\n                 \"penguin 1 monkey\\n\") == \"FALSE ALARM\"\n\nassert solution(\"3 6\\nmonkey 2 lion penguin\\n\"\n                 \"lion 3 monkey penguin lion\\n\"\n                 \"penguin 1 monkey\\n\"\n                 \"lion 4 ape\\n\"\n                 \"monkey 3 panda\\n\"\n                 \"panda 2 monkey\\n\"\n                 \"lion 3 monkey penguin lion\\n\"\n                 \"monkey 2 lion penguin\\n\"\n                 \"lion 3 monkey penguin lion\\n\"\n                 \"penguin 1 monkey\\n\"\n                 \"monkey 2 lion penguin\\n\"\n                 \"lion 3 monkey penguin lion\\n\"\n                 \"penguin 1 monkey\\n\") == \"POSSIBLE\"\n\nassert solution(\"3 6\\nmonkey 2 lion penguin\\n\"\n                 \"lion 3 monkey penguin lion\\n\"\n                 \"penguin 1 monkey\\n\"\n                 \"lion 4 ape\\n\"\n                 \"monkey 3 panda\\n\"\n                 \"panda 2 monkey\\n\"\n                 \"lion 3 monkey penguin lion\\n\"\n                 \"monkey 2 lion penguin\\n\"\n                 \"lion 3 monkey penguin lion\\n\"\n                 \"penguin 1 monkey\\n\"\n                 \"monkey 2 lion penguin\\n\"\n                 \"lion 3 monkey penguin lion\\n\"\n                 \"penguin 1 monkey\\n\") == \"FALSE ALARM\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\npenguin 1 monkey\"\"\") == \"POSSIBLE\"\n\nassert solution(\"\"\"3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin\npenguin 1 monkey\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\"\"\"3 6\nmonkey 2 lion penguin\nlion 3 monkey\npenguin 1 monkey\"\"\") == \"FALSE ALARM\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey') == 'POSSIBLE'"
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\") == \"triple correlation 4(1)4(3)3 found\"\nassert solution(\"100\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2 0\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\"\nassert solution(\"100\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2 0\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9 6\\n1 2 3 2 6 9 9 3 0 4 1 2 7 8 5 6 0 0 5 0\\n6 0 0 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\") == \"random sequence found\"\nassert solution(\"100\\n1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234"
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n\") == \"triple correlation 4(1)4(3)3 found\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Expected '{expected}', got '{solution(input())}'\"\n\nfrom typing import List"
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"triple correlation 4(1)4(3)3 found\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_str) == expected_output, f\"Test failed for solution: {solution(input_str)}\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 'triple correlation 4(1)4(3)3 found\\n'"
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"triple correlation 4(1)4(3)3 found\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n\") == \"triple correlation 4(1)4(3)3 found\\n\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Test case {i+1} failed: {solution(input())}!= {output()}\"\nprint(\"Test case passed\")"
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''100\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4''') == '''triple correlation 4(1)4(3)3 found''', \"Your solution is incorrect\"\nassert solution('''100\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9''') == '''random sequence''', \"Your solution is incorrect\"\n"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    3 1\n    39\n    10\n    40\n''') == '40.5'"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == expected_output, f\"Test failed. Expected output: {expected_output}, Actual output: {solution(sample_input)}\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 1\\n39\\n10\\n40') == '40.5'"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    '''\n    3 1\n    39\n    10\n    40\n    '''\n) == '40.5\\n'"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"40.5\\n\", \"Please fix the given code.\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\\n\"\nassert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\\n\"\nassert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\\n\"\nassert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\\n\"\nassert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\\n\"\nassert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\\n\"\nassert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\\n\"\nassert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\\n\"\nassert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\\n\"\nassert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\\n\"\nassert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\\n\"\nassert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\\n\"\nassert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\\n\"\nassert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\\n\"\nassert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\\n\"\nassert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\\n\"\nassert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\\n\"\nassert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\\n\"\nassert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\\n\"\nassert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\\n\"\nassert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\\n\"\nassert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\\n\"\nassert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\\n\"\nassert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\\n\"\nassert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\\n\"\nassert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\\n\"\nassert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\\n\"\nassert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\\n\"\nassert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\\n\"\nassert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\\n\"\nassert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\\n\"\nassert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\\n\"\nassert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\\n\"\nassert solution(\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '40.5'"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\\n\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n39\\n10\\n40\") == \"40.5\"\n"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=r'3 1\\n39\\n10\\n40') == '40.5'"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\""
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987') == 'Impossible'\n"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output, f\"Test failed. Please fix the code for the solution and resubmit.\""
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987') == 'Impossible'"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Impossible\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"Impossible\""
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'Impossible'"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987') == 'Impossible' # pass\nassert solution('4 8\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 5 1987\\n') == '1987' # pass"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\\n\""
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\"\nprint(\"Test Passed\")\n"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == \"3\"\nassert solution(sample_input2) == \"impossible\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"impossible\"\nassert solution(\"\") == \"impossible\"\nassert solution(\"2 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\") == \"3\"\n\nfrom typing import List"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"impossible\" # Your code should return \"impossible\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\") == \"impossible\"\n"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"impossible\", \"Your code is incorrect\"\n"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == \"3\"\nassert solution(sample_input_2) == \"3\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\") == \"impossible\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == \"impossible\", \"Expected 'impossible' but got '{}'.\".format(solution(sample_input1))\nassert solution(sample_input2) == \"3\", \"Expected '3' but got '{}'.\".format(solution(sample_input2))"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"impossible\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"impossible\"\n"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    3\n    ())\n    ((()\n    )()''') == 10"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3\n())\n((()\n)()\"\"\") == 10"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n(()\\n((()\\n)\\n)') == 10\nassert solution('3\\n(())\\n()()') == 10\nassert solution('3\\n(())\\n(())') == 20\nassert solution('3\\n(())\\n(())\\n(())') == 30"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 10, \"Incorrect output\""
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"()\") == 10, \"Test 1 failed\"\nassert solution(\"(())\") == 10, \"Test 2 failed\"\nassert solution(\"((()))\") == 10, \"Test 3 failed\"\nassert solution(\"()(()())\") == 10, \"Test 4 failed\"\nassert solution(\"(())()()\") == 10, \"Test 5 failed\""
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='3\\n())\\n((()\\n)()') == 10, \"Expected 10, got {}\".format(solution(stdin='3\\n())\\n((()\\n)()'))"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n())\\n((()\\n)()\") == 10, \"The correct length of the longest balanced string is 10.\"\nassert solution(\"3\\n(())\\n(()()\\n(())\") == 16, \"The correct length of the longest balanced string is 16.\"\nassert solution(\"3\\n()())\\n(())()\\n(())()\\n(()())\\n(())()\\n(())()\\n(())()\\n(())()\") == 45, \"The correct length of the longest balanced string is 45.\"\n"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n())\\n((()()\\n)\") == 10\nassert solution(\"4\\n())\\n((()()\\n())\") == 16\nassert solution(\"1\\n\") == 0\n\nfrom typing import List"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n())\\n((()()\\n())\") == 10\n"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('(()')) == 10, \"The solution should be 10\"\nassert solution('(())') == 10, \"The solution should be 10\"\nassert solution('((()') == 10, \"The solution should be 10\"\nassert solution(')()') == 10, \"The solution should be 10\""
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n\") == \"85293\""
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n\") == \"85293\"\n"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\") == \"85293\"\n"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 85293\nprint(\"All test cases pass!\")"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n\") == \"85293\\n\"\n"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '85293'"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''9\n377 a\n455 h\n180 a\n211 a\n134 a\n46 h\n111 h\n213 h\n17 a\n15\n1 2\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n4 6\n4 7\n4 9\n5 7\n5 8\n6 9\n7 9\n7 8''') == '85293'\nprint('Test Passed')"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n') == 85293, \"Testcase 1 failed\"\n\nassert solution('9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n8\\n') == 85293, \"Testcase 2 failed\"\n\nassert solution('9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n10\\n') == 85293, \"Testcase 3 failed\""
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 85293, \"The given solution is incorrect\"\n"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8') == '85293'"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_str) == expected_output, f\"Expected output: {expected_output}\\nGot: {solution(input_str)}\""
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '5\\n'\nassert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '5\\n'\nassert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '5\\n'\nassert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '5\\n'\nassert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '5\\n'\nassert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '5\\n'\nassert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '5\\n'\nassert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '5\\n'\nassert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '5\\n'\nassert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '5\\n'\nassert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '5\\n'\nassert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '5\\n'\nassert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '5\\n'\nassert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '5\\n'\nassert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '5\\n'\nassert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '5\\n'\nassert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '5\\n'\nassert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '5\\n'\nassert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '5\\n'\nassert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '5\\n'\nassert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '5\\n'\nassert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '5\\n'\nassert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '5\\n'\nassert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '5\\n'\nassert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '5\\n'\n"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == output, f\"Test failed for input: {input}, expected output: {output}\"\nprint(\"Test passed\")"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 5\n"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"5\", \"Invalid solution\"\n"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == 5\nprint(\"Test passed\")"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, \"Expected output: {}, Received output: {}\".format(output, solution(input()))"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == \"5\\n\""
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == \"5\"\n"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly') == 5100, \"The solution for the given input is incorrect.\"\n"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\") == \"5100\""
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"5100\""
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\") == \"5100\"\n"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"5100\""
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    3\n    3 caterpillar 3 pupa 7 butterfly\n    3 dove 3 pigeon 7 aaabaaajss\n    3 mouse 1 electromouse 5 rat\n    7\n    0 electromouse\n    500 electromouse\n    1000 electromouse\n    1500 rat\n    2000 aaabaaajss\n    2500 pigeon\n    3000 butterfly\n    \"\"\"\n) == \"5100\"\n"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '5100'"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly') == '5100'"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\") == \"5100\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n    5\n    0\n    1 1\n    1 1\n    2 2 3\n    1 4\n    8\n    1\n    2\n    3\n    1\n    4\n    2\n    3\n    5\n''') == '6\\n1\\n2\\n3\\n1\\n4\\n5\\n'"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    5\n    0\n    1 1\n    1 1\n    2 2 3\n    1 4\n    8\n    1\n    2\n    3\n    1\n    4\n    2\n    3\n    5\n    \"\"\"\n) == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"\"\"def solution(stdin: str) -> str:\n    pass\n\"\"\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '6\\n1\\n2\\n3\\n1\\n4\\n5'"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\"\n"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n''') == '''\n6\n1\n2\n3\n1\n4\n5\n'''\n\nassert solution('''\n5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n''') == '''\n6\n1\n2\n3\n1\n4\n5\n'''\n\nassert solution('''\n5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n''') == '''\n6\n1\n2\n3\n1\n4\n5\n'''\n\nassert solution('''\n5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n''') == '''\n6\n1\n2\n3\n1\n4\n5\n'''\n\nassert solution('''\n5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n''') == '''\n6\n1\n2\n3\n1\n4\n5\n'''\n\nassert solution('''\n5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n''') == '''\n6\n1\n2\n3\n1\n4\n5\n'''"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\"\nassert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n\") == \"-1\"\nassert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n6\\n1\\n2\\n3\\n1\\n4\\n5\\n\") == \"1\"\nassert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n6\\n1\\n2\\n3\\n1\\n4\\n5\\n7\\n1\\n2\\n3\\n1\\n4\\n5\\n8\\n1\\n2\\n3\\n1\\n4\\n5\\n\") == \"2\"\nassert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n6\\n1\\n2\\n3\\n1\\n4\\n5\\n7\\n1\\n2\\n3\\n1\\n4\\n5\\n8\\n1\\n2\\n3\\n1\\n4\\n5\\n9\\n1\\n2\\n3\\n1\\n4\\n5\\n\") == \"3\"\nassert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n6\\n1\\n2\\n3\\n1\\n4\\n5\\n7\\n1\\n2\\n3\\n1\\n4\\n5\\n8\\n1\\n2\\n3\\n1\\n4\\n5\\n9\\n1\\n2\\n3\\n1\\n4\\n5\\n\") == \"1\"\n"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\"\nassert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n\") == \"-1\"\nassert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n\") == \"1\\n2\\n3\\n1\\n4\\n5\\n\"\nassert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\""
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\"\n"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == \"10\""
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '10'\nprint(\"Test passed\")"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\\n\""
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5') == '10'\nassert solution('3 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5') == '10'\nassert solution('5 6\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5') == '10'\nassert solution('3 2\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5') == '5'"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\"\n"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5') == '10'"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n') == '10'\nassert solution('2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n') == '10'"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"10\\n\"\nassert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"10\\n\"\nassert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"10\\n\"\nassert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"10\\n\"\nassert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"10\\n\""
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"10\"\nprint(\"All tests passed successfully\")"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 3\\n0 1\\n1 2\\n2 3') == '1\\n'\n"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 3\\n0 1\\n1 2\\n2 3') == 1"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n0 1\\n1 2\\n2 3\") == \"1\\n\"\nassert solution(\"10 10\\n0 1\\n1 2\\n2 3\\n4 5\") == \"10\\n\"\nassert solution(\"1 2\\n3 4\") == \"2\\n\"\nassert solution(\"1 0\\n2 0\\n3 0\\n4 0\") == \"1\\n\"\nassert solution(\"2 0\\n0 0\\n1 0\\n2 0\\n3 0\") == \"2\\n\"\nassert solution(\"1 0\\n1 0\\n1 0\\n1 0\") == \"1\\n\"\nassert solution(\"1 0\\n2 0\\n3 0\\n4 0\\n5 0\\n6 0\\n7 0\\n8 0\\n9 0\\n10 0\\n11 0\\n12 0\\n13 0\\n14 0\\n15 0\\n16 0\\n17 0\\n18 0\\n19 0\\n20 0\\n21 0\\n22 0\\n23 0\\n24 0\\n25 0\\n26 0\\n27 0\\n28 0\\n29 0\\n30 0\\n31 0\\n32 0\\n33 0\\n34 0\\n35 0\\n36 0\\n37 0\\n38 0\\n39 0\\n40 0\\n41 0\\n42 0\\n43 0\\n44 0\\n45 0\\n46 0\\n47 0\\n48 0\\n49 0\\n50 0\\n51 0\\n52 0\\n53 0\\n54 0\\n55 0\\n56 0\\n57 0\\n58 0\\n59 0\\n60 0\\n61 0\\n62 0\\n63 0\\n64 0\\n65 0\\n66 0\\n67 0\\n68 0\\n69 0\\n70 0\\n71 0\\n72 0\\n73 0\\n74 0\\n75 0\\n76 0\\n77 0\\n78 0\\n79 0\\n80 0\\n81 0\\n82 0\\n83 0\\n84 0\\n85 0\\n86 0\\n87 0\\n88 0\\n89 0\\n90 0\\n91 0\\n92 0\\n93 0\\n94 0\\n95 0\\n96 0\\n97 0\\n98 0\\n99 0\\n100 0\") == \"1\\n\""
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n0 1\\n1 2\\n2 3\") == \"1\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n0 1\\n1 2\\n2 3\") == \"1\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\") == \"1\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\") == \"1\""
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 3\\n0 1\\n1 2\\n2 3') == '1'"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(r\"\"\"\n    4 3\n    0 1\n    1 2\n    2 3\n    \"\"\") == \"1\\n\"\n\nassert solution(r\"\"\"\n    5 7\n    0 1\n    1 2\n    2 3\n    3 4\n    4 5\n    5 6\n    6 7\n    \"\"\") == \"4\\n\"\n\nassert solution(r\"\"\"\n    3 3\n    0 1\n    1 2\n    2 3\n    \"\"\") == \"1\\n\"\n\nassert solution(r\"\"\"\n    5 5\n    0 1\n    1 2\n    2 3\n    3 4\n    4 5\n    5 6\n    \"\"\") == \"3\\n\"\n\nassert solution(r\"\"\"\n    6 4\n    0 1\n    1 2\n    2 3\n    3 4\n    4 5\n    5 6\n    6 7\n    \"\"\") == \"3\\n\"\n\nassert solution(r\"\"\"\n    2 3\n    0 1\n    1 2\n    2 3\n    3 4\n    4 5\n    \"\"\") == \"2\\n\"\n\nassert solution(r\"\"\"\n    5 6\n    0 1\n    1 2\n    2 3\n    3 4\n    4 5\n    5 6\n    6 7\n    \"\"\") == \"4\\n\""
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n0 1\\n1 2\\n2 3\") == \"1\\n\"\nassert solution(\"5 3\\n0 1\\n1 2\\n2 3\") == \"1\\n\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\") == \"1\\n\"\nassert solution(\"7 4\\n0 1\\n1 2\\n2 3\\n3 4\") == \"1\\n\"\nassert solution(\"8 5\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\") == \"1\\n\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test failed. Output: {output}, Expected: {output}\"\n\ninput_data = \"\"\"\n4 3\n0 1\n1 2\n2 3\n\"\"\"\n\noutput_data = \"\"\"\n1\n\"\"\"\n\nassert output_data == solution(input_data), f\"Test failed. Input: {input_data}, Output: {solution(input_data)}, Expected: {output_data}\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4') == '0.962962962963\\n'\n"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0.962962962963\"\n"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0.962962962963\", \"Your function should return '0.962962962963' for the given input.\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0.962962962963\\n\", \"The given code does not work correctly\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '0.962962962963', \"The code is not correct.\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0.962962962963\"\n"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == \"0.962962962963\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == 0.962962962963, \"Incorrect output\"\nassert solution(open(\"input.txt\", \"r\")) == 0.962962962963, \"Incorrect output\"\nassert solution(open(\"input.txt\", \"r\")) == 0.962962962963, \"Incorrect output\"\nassert solution(open(\"input.txt\", \"r\")) == 0.962962962963, \"Incorrect output\"\nassert solution(open(\"input.txt\", \"r\")) == 0.962962962963, \"Incorrect output\"\nassert solution(open(\"input.txt\", \"r\")) == 0.962962962963, \"Incorrect output\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 0.9630\nassert solution(2) == 0.8690\nassert solution(3) == 0.9422\nassert solution(4) == 0.9629\nassert solution(5) == 0.9860"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5) == \"0.962962962963\", \"The solution should be 0.962962962963.\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"\"\"0 0\n40000000 0\n0 40000000\"\"\"\n"
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"\"\"0 0\n40000000 0\n0 40000000\"\"\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"0 0\\n40000000 0\\n0 40000000\\n\"\nassert solution(4) == \"0 0\\n40000000 0\\n0 40000000\\n\"\nassert solution(5) == \"0 0\\n40000000 0\\n0 40000000\\n\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n\") == \"0 0\\n40000000 0\\n0 40000000\\n\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n\") == \"0 0\\n40000000 0\\n0 40000000\\n\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3') == '0 0\\n40000000 0\\n0 40000000\\n'\nassert solution('10') == '0 0\\n40000000 0\\n0 40000000\\n0 0\\n40000000 40000000\\n0 40000000\\n0 0\\n40000000 40000000\\n0 40000000\\n0 0\\n40000000 40000000\\n0 40000000\\n0 0\\n40000000 40000000\\n0 40000000\\n0 0\\n40000000 40000000\\n0 40000000\\n0 0\\n40000000 40000000\\n0 40000000\\n0 0\\n40000000 40000000\\n0 40000000\\n0 0\\n40000000 40000000\\n0 40000000\\n0 0\\n40000000 40000000\\n0 40000000\\n0 0\\n40000000 40000000\\n0 40000000\\n0 0\\n40000000 40000000\\n0 40000000\\n0 0\\n40000000 40000000\\n0 40000000\\n0 0\\n40000000 40000000\\n0 40000000\\n0 0\\n40000000 40000000\\n0 40000000\\n0 0\\n40000000 40000000\\n0 40000000\\n0 0\\n40000000 40000000\\n0 40000000\\n0 0\\n40000000 40000000\\n0 40000000\\n0 0\\n40000000 40000000\\n0 40000000\\n0 0\\n40000000 40000000\\n0 40000000\\n0 0\\n40000000 40000000\\n0 40000000\\n0 0\\n40000000 40000000\\n0 40000000\\n0 0\\n40000000 40000000\\n0 40000000\\n0 0\\n40000000 40000000\\n0 40000000\\n0 0\\n40000000 40000000\\n0 40000000\\n0 0\\n40000000 40000000\\n0 40000000\\n0 0\\n40000000 40000000\\n0 40000000\\n0 0\\n40000000 4"
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(2) == \"0 0\\n40000000 0\"\nassert solution(5) == \"0 0\\n40000000 0\\n0 40000000\\n40000000 40000000\\n0 0\"\nassert solution(6) == \"0 0\\n40000000 0\\n0 40000000\\n40000000 40000000\\n0 40000000\"\nassert solution(7) == \"0 0\\n40000000 0\\n0 40000000\\n40000000 40000000\\n0 40000000\\n40000000 40000000\"\nassert solution(8) == \"0 0\\n40000000 0\\n0 40000000\\n40000000 40000000\\n0 40000000\\n40000000 40000000\\n40000000 40000000\"\nassert solution(9) == \"0 0\\n40000000 0\\n0 40000000\\n40000000 40000000\\n0 40000000\\n40000000 40000000\\n40000000 40000000\\n40000000 40000000\"\nassert solution(10) == \"0 0\\n40000000 0\\n0 40000000\\n40000000 40000000\\n0 40000000\\n40000000 40000000\\n40000000 40000000\\n40000000 40000000\\n40000000 40000000\\n40000000 40000000\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '0 0\\n40000000 0\\n0 40000000'"
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"your_answer_here\"  # Replace 'your_answer_here' with the correct implementation of the solution function"
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input: {input()}, expected output: {expected_output}\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5 5 2\") == \"1\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 5 5 2') == '1'\n"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Output does not match expected output.\\nExpected: {output}\\nActual: {solution(input())}\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5 5 2\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"2 3 4 9\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5 5 2\") == \"1\"\nassert solution(\"2 3 4 9\") == \"impossible\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"3 5 5 2\") == \"1\\ndef solution(stdin: str) -> str:\\npass\\n\\n\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5 5 2\") == \"1\"\n"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5 5 2\") == \"1\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5 5 2\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5 5 2\") == \"1\\n\"\nassert solution(\"2 3 4 9\") == \"impossible\\n\"\nprint(\"All test cases pass!\")"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\""
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\""
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\\n20\\n30\\n\""
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0') == '2\\n0'\n"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0') == '2'"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == expected_solution, f\"Your solution is incorrect. Expected: {expected_solution}, Received: {solution}\""
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\"\n"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\\n\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\\n\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\\n\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\\n\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\\n\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\\n\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\\n\""
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == 2\nassert solution(\"1000 2 100 10\") == 1000\nassert solution(\"1000000 3 100 10\") == 1000000\nassert solution(\"1000000000 4 100 10\") == 1000000000\nassert solution(\"1000000000000 5 100 10\") == 1000000000000\nassert solution(\"100000000000000000 6 100 10\") == 100000000000000000000\nassert solution(\"10000000000000000000 7 100 10\") == 100000000000000000000\nassert solution(\"10000000000000000000 8 100 10\") == 10000000000000000000000\nassert solution(\"1000000000000000000000 9 100 10\") == 10000000000000000000000\nassert solution(\"1000000000000000000000 10 100 10\") == 100000000000000000000000\nassert solution(\"10000000000000000000000 11 100 10\") == 1000000000000000000000000\nassert solution(\"100000000000000000000000 12 100 10\") == 10000000000000000000000000\nassert solution(\"100000000000000000000000 13 100 10\") == 100000000000000000000000000\nassert solution(\"1000000000000000000000000 14 100 10\") == 100000000000000000000000000\nassert solution(\"1000000000000000000000000 15 100 10\") == 1000000000000000000000000000\nassert solution(\"10000000000000000000000000 16 100 10\") == 1000000000000000000000000000\nassert solution(\"10000000000000000000000000 17 100 10\") == 10000000000000000000000000000\nassert solution(\"100000000000000000000000000 18 100 10\") == 1000000000000000000000000000"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is {solution(input())}, but expected {expected_output}.\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(13) == \"12 14\\n\", \"Test failed\"\nassert solution(10) == \"10\\n\", \"Test failed\"\nassert solution(20) == \"2 20\\n\", \"Test failed\"\nassert solution(12) == \"12\\n\", \"Test failed\"\nassert solution(24) == \"2 24\\n\", \"Test failed\"\nassert solution(34) == \"3 34\\n\", \"Test failed\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(13) == '12 14'"
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(13) == \"12 14\\n\", \"Test 1 failed\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '12 14\\n', 'Please provide the input value as a string'\n"
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(13) == '12 14'\nassert solution(1111111111) == '1000000000'"
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(13) == \"12 14\"\n"
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"12 14\", \"The solution is incorrect\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"12 14\", \"Sample Output\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(13) == \"12 14\", \"The given integer is not handsome.\"\nassert solution(1) == \"1\", \"The given integer is not handsome.\"\nassert solution(12) == \"13 14\", \"The given integer is not handsome.\"\nassert solution(9) == \"12\", \"The given integer is not handsome.\"\nassert solution(25) == \"24\", \"The given integer is not handsome.\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"12 14\\n\", \"Test case 1 failed\"\nassert solution(input()) == \"21 23\\n\", \"Test case 2 failed\"\nassert solution(input()) == \"32 34\\n\", \"Test case 3 failed\"\nassert solution(input()) == \"43 45\\n\", \"Test case 4 failed\"\nassert solution(input()) == \"54 56\\n\", \"Test case 5 failed\"\nassert solution(input()) == \"65 67\\n\", \"Test case 6 failed\"\nassert solution(input()) == \"76 78\\n\", \"Test case 7 failed\"\nassert solution(input()) == \"87 89\\n\", \"Test case 8 failed\"\nassert solution(input()) == \"98 99\\n\", \"Test case 9 failed\"\nassert solution(input()) == \"109 109\\n\", \"Test case 10 failed\"\nassert solution(input()) == \"111 111\\n\", \"Test case 11 failed\"\nassert solution(input()) == \"121 121\\n\", \"Test case 12 failed\"\nassert solution(input()) == \"132 132\\n\", \"Test case 13 failed\"\nassert solution(input()) == \"143 143\\n\", \"Test case 14 failed\"\nassert solution(input()) == \"154 154\\n\", \"Test case 15 failed\"\nassert solution(input()) == \"165 165\\n\", \"Test case 16 failed\"\nassert solution(input()) == \"176 176\\n\", \"Test case 17 failed\"\nassert solution(input()) == \"187 187\\n\", \"Test case 18 failed\"\nassert solution(input()) == \"198 198\\n\", \"Test case 19 failed\"\nassert solution(input()) == \"209 209\\n\", \"Test case 20 failed\"\nassert solution(input()) == \"211 211\\n\", \"Test case 21 failed\"\nassert solution(input()) == \"221 221\\n\", \"Test case 22 failed\"\nassert solution(input()) == \"232 232\\n\", \"Test case 23 failed\"\nassert solution(input()) == \"243 243\\n\", \"Test case 24 failed\"\nassert solution(input()) == \"254 254\\n\", \"Test case 25 failed\"\nassert solution(input()) == \"265 265\\n\", \"Test case 26 failed\"\nassert solution(input()) == \"276 276\\n\", \"Test case 27 failed\"\nassert solution(input()) == \"287 287\\n\", \"Test case 28 failed\"\nassert solution(input()) == \"298 298\\n\", \"Test case 29 failed\"\nassert solution(input()) == \"309 309\\n\", \"Test case 30 failed\"\nassert solution(input()) == \"311 311\\n\", \"Test case 31 failed\"\nassert solution(input()) == \"321 321\\n\", \"Test case 32 failed\"\nassert solution(input()) == \"332 332\\n\", \"Test case 33 failed\"\nassert solution(input()) == \"343 343\\n\", \"Test case 34 failed\"\nassert solution(input()) == \"354 354\\n\", \"Test case 35 failed\"\nassert solution(input()) == \"365 365\\n\", \"Test case 36 failed\"\nassert solution(input()) == \"376 376\\n\", \"Test case 37 failed\"\nassert solution(input()) == \"387 387\\n\", \"Test case 38 failed\"\nassert solution(input()) == \"398 398\\n\", \"Test case 39 failed\"\nassert solution(input()) == \"409 409\\n\", \"Test case 40 failed\"\nassert solution(input()) == \"411 41"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 0 # expected output: 0"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1') == '0\\n'\nassert solution('6\\n0 1 1\\n2 0 0\\n2 1 0\\n3 0 1\\n3 1 0\\n4 0 0') == '1\\n'\nassert solution('1\\n1 0') == '0\\n'\nassert solution('1\\n1 1') == '1\\n'\nassert solution('100\\n1 1 1 1 1 1') == '0\\n'"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == \"0\\n0\"\n"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == 0\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n\") == 0\nassert solution(\"5\\n1 1 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n\") == 0\nassert solution(\"5\\n1 1 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n2\\n2 1\\n2 2\\n2 3\\n\") == 0\nassert solution(\"5\\n1 0 1\\n1 0 0\\n3 0 1\\n3 0 0\\n3 0 1\\n2\\n2 1\\n2 2\\n2 3\\n\") == 1\nassert solution(\"5\\n1 0 1\\n1 0 0\\n3 0 1\\n3 0 0\\n3 0 1\\n2\\n2 1\\n2 2\\n2 3\\n\") == 1\nassert solution(\"5\\n1 0 1\\n1 0 0\\n3 0 1\\n3 0 0\\n3 0 1\\n2\\n2 1\\n2 2\\n2 3\\n2\\n2 1\\n2 2\\n2 3\\n\") == 1\nassert solution(\"5\\n1 0 1\\n1 0 0\\n3 0 1\\n3 0 0\\n3 0 1\\n2\\n2 1\\n2 2\\n2 3\\n2\\n2 1\\n2 2\\n2 3\\n2\\n2 1\\n2 2\\n2 3\\n2\\n2 1\\n2 2\\n2 3\\n2\\n2 1\\n2 2\\n2 3\\n2\\n2 1\\n2 2\\n2 3\\n\") == 0\nassert solution(\"5\\n1 0 1\\n1 0 0\\n3 0 1\\n3 0 0\\n3 0 1\\n2\\n2 1\\n2 2\\n2 3\\n2\\n2 1\\n2 2\\n2 3\\n2\\n2 1\\n2 2\\n2 3\\n2\\n2 1\\n2 2\\n2 3\\n2\\n2 1\\n2 2\\n2 3\\n2\\n2 1\\n2 2\\n2 3\\n2\\n2 1\\n2 2\\n2 3\\n2\\n2 1\\n2 2\\n2 3\\n2\\n2 1\\n2 2\\n2 3\\n2\\n2 1\\n2 2\\n2 3\\n\") == 1\nassert solution(\"5\\n1 0 1\\n1 0 0\\n3 0 1\\n3 0 0\\n3 0 1\\n2\\n2 1\\n2 2\\n2 3\\n2\\n2 1\\n2 2\\n2 3\\n2\\n2 1\\n2 2\\n2 3\\n2\\n2 1\\n2 2\\n2 3\\n2\\n2 1\\n2 2\\n2 3\\n2\\n2 1\\n2 2\\n2 3\\n2\\n2 1\\n2 2\\n2 3\\n2\\n2 1\\n2 2\\n2 3\\n2\\n2 1\\n2 2\\n2 3\\n2\\n2 1\\n2 2\\n2 3\\n2\\n2 1\\n2 2\\n2 "
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(10) == 0\nassert solution(1) == 0\nassert solution(2) == 0\nassert solution(3) == 0\nassert solution(4) == 0\nassert solution(5) == 0\nassert solution(6) == 0\nassert solution(7) == 0\nassert solution(8) == 0\nassert solution(9) == 0\nassert solution(10) == 0\nassert solution(11) == 0\nassert solution(12) == 0\nassert solution(13) == 0\nassert solution(14) == 0\nassert solution(15) == 0\nassert solution(16) == 0\nassert solution(17) == 0\nassert solution(18) == 0\nassert solution(19) == 0\nassert solution(20) == 0\nassert solution(21) == 0\nassert solution(22) == 0\nassert solution(23) == 0\nassert solution(24) == 0\nassert solution(25) == 0\nassert solution(26) == 0\nassert solution(27) == 0\nassert solution(28) == 0\nassert solution(29) == 0\nassert solution(30) == 0\nassert solution(31) == 0\nassert solution(32) == 0\nassert solution(33) == 0\nassert solution(34) == 0\nassert solution(35) == 0\nassert solution(36) == 0\nassert solution(37) == 0\nassert solution(38) == 0\nassert solution(39) == 0\nassert solution(40) == 0\nassert solution(41) == 0\nassert solution(42) == 0\nassert solution(43) == 0\nassert solution(44) == 0\nassert solution(45) == 0\nassert solution(46) == 0\nassert solution(47) == 0\nassert solution(48) == 0\nassert solution(49) == 0\nassert solution(50) == 0\nassert solution(51) == 0\nassert solution(52) == 0\nassert solution(53) == 0\nassert solution(54) == 0\nassert solution(55) == 0\nassert solution(56) == 0\nassert solution(57) == 0\nassert solution(58) == 0\nassert solution(59) == 0\nassert solution(60) == 0\nassert solution(61) == 0\nassert solution(62) == 0\nassert solution(63) == 0\nassert solution(64) == 0\nassert solution(65) == 0\nassert solution(66) == 0\nassert solution(67) == 0\nassert solution(68) == 0\nassert solution(69) == 0\nassert solution(70) == 0\nassert solution(71) == 0\nassert solution(72) == 0\nassert solution(73) == 0\nassert solution(74) == 0\nassert solution(75) == 0\nassert solution(76) == 0\nassert solution(77) == 0\nassert solution(78) == 0\nassert solution(79) == 0\nassert solution(80) == 0\nassert solution(81) == 0\nassert solution(82) == 0\nassert solution(83) == 0\nassert solution(84) == 0\nassert solution(85) == 0\nassert solution(86) == 0\nassert solution(87) == 0\nassert solution(88) == 0\nassert solution(89) == 0\nassert solution(90) == 0\nassert solution(91) == 0\nassert solution(92) == 0\nassert solution(93) == 0\nassert solution(94) == 0\nassert solution(95) == 0\nassert solution(96) == 0\nassert solution(97) == 0\nassert solution(98) == 0\nassert solution(99) == 0\nassert solution(100) == 0\nassert solution(101) == 0\nassert solution(102) == 0\nassert solution"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == 0\nassert solution(\"5\\n1 1 1\\n3 1 0\\n2 0 1\\n3 1 0\\n2 1 0\") == 0\nassert solution(\"5\\n1 0 1\\n3 0 1\\n2 0 0\\n3 0 1\\n2 1 0\") == 0\nassert solution(\"5\\n1 1 0\\n3 1 1\\n2 0 1\\n3 1 1\\n2 1 1\") == 0\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == 0\nassert solution(\"5\\n1 0 1\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == 0\nassert solution(\"5\\n1 1 1\\n1 1 1\\n3 1 1\\n3 1 1\\n3 1 1\") == 0\nassert solution(\"5\\n1 0 1\\n3 0 1\\n2 0 0\\n3 0 1\\n2 1 0\") == 0\nassert solution(\"5\\n1 1 0\\n3 1 1\\n2 0 1\\n3 1 1\\n2 1 1\") == 0\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == 0\nassert solution(\"5\\n1 0 1\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == 0\nassert solution(\"5\\n1 1 1\\n1 1 1\\n3 1 1\\n3 1 1\\n3 1 1\") == 0\nassert solution(\"5\\n1 0 1\\n3 0 1\\n2 0 0\\n3 0 1\\n2 1 0\") == 0\nassert solution(\"5\\n1 1 0\\n3 1 1\\n2 0 1\\n3 1 1\\n2 1 1\") == 0\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == 0\nassert solution(\"5\\n1 0 1\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == 0\nassert solution(\"5\\n1 1 1\\n1 1 1\\n3 1 1\\n3 1 1\\n3 1 1\") == 0\nassert solution(\"5\\n1 0 1\\n3 0 1\\n2 0 0\\n3 0 1\\n2 1 0\") == 0\nassert solution(\"5\\n1 1 0\\n3 1 1\\n2 0 1\\n3 1 1\\n2 1 1\") == 0\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == 0\nassert solution(\"5\\n1 0 1\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == 0\nassert solution(\"5\\n1 1 1\\n1 1 1\\n3 1 1\\n3 1 1\\n3 1 1\") == 0\nassert solution(\"5\\n1 0 1\\n3 0 1\\n2 0 0\\n3 0 1\\n2 1 0\") == 0\nassert solution(\"5\\n1 1 0\\n3"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == 0\n"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == expected_output, f\"Sample Input: {sample_input}, Expected Output: {expected_output}\""
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == \"0\\n0\\n\"\n"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == 0"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n2 3\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\"\nassert solution(\"3 4\") == \"-1\"\nassert solution(\"5 6\") == \"-1\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\"\nassert solution(\"3 4\\n\") == \"-1\"\nassert solution(\"2 2\\n1 1\\n2 3\\n1 2\\n3 1\\n\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\"\nassert solution(\"3 3\\n1 1\\n2 2\\n3 3\\n1 2\\n2 1\\n1 3\\n3 2\\n\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\"\nassert solution(\"1 2\\n\") == \"-1\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\"\nassert solution(\"1 1\\n\") == \"1 1\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\") == -1, \"Test 1 failed\"\nassert solution(\"2 3\") == -1, \"Test 2 failed\"\nassert solution(\"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\") == [1, 1], \"Test 3 failed\"\nassert solution(\"4 5\\n6 7\\n8 9\\n10 11\\n12 13\") == [1, 2, 3, 4], \"Test 4 failed\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n5 5\") == [1, 2, 3, 4, 5], \"Test 5 failed\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"2 3\n1 1\n2 2\n1 3\n2 1\n1 2\n2 3\"\"\") == \"\"\"1 1\n2 2\n1 3\n2 1\n1 2\n2 3\"\"\"\n\nassert solution(\"\"\"1 2\n1 1\n1 2\n1 1\n1 2\n1 1\"\"\") == \"\"\"1 1\n2 2\n1 2\n2 2\n1 2\n1 2\"\"\"\n\nassert solution(\"\"\"3 3\n1 1\n1 1\n1 1\n1 1\n1 1\"\"\") == \"\"\"1 1\n1 1\n1 1\n1 1\n1 1\"\"\"\n\nassert solution(\"\"\"5 5\n0 0\n0 0\n0 0\n0 0\"\"\") == \"\"\"0 0\n0 0\n0 0\n0 0\n0 0\"\"\"\n\nassert solution(\"\"\"2 1\n1 1\n1 1\n1 1\n1 1\"\"\") == \"\"\"1 1\n1 1\n1 1\n1 1\n1 1\"\"\"\n\nassert solution(\"\"\"1 1\n1 1\n1 1\n1 1\n1 1\n\"\"\") == \"\"\"1 1\n1 1\n1 1\n1 1\n1 1\"\"\"\n\nassert solution(\"\"\"1 1\n1 1\n1 1\n1 1\n1 1\n\"\"\") == \"\"\"1 1\n1 1\n1 1\n1 1\n1 1\"\"\"\n\nassert solution(\"\"\"1 1\n1 1\n1 1\n1 1\n1 1\n\"\"\") == \"\"\"1 1\n1 1\n1 1\n1 1\n1 1\"\"\"\n\nassert solution(\"\"\"3 3\n1 1\n1 1\n1 1\n1 1\n1\"\"\") == \"\"\"1 1\n1 1\n1 1\n1 1\n1 1\"\"\"\n\nassert solution(\"\"\"5 5\n1 1\n1 1\n1 1\n1 1\n1\"\"\") == \"\"\"1 1\n1 1\n1 1\n1 1\n1 1\"\"\"\n\nassert solution(\"\"\"5 5\n0 0\n0 0\n0 0\n0 0\n\"\"\") == \"\"\"0 0\n0 0\n0 0\n0 0\n0 0\"\"\"\n\nassert solution(\"\"\"1 1\n1 1\n1 1\n1 1\n1 1\n\"\"\") == \"\"\"1 1\n1 1\n1 1\n1 1\n1 1\"\"\"\n\nassert solution(\"\"\"3 3\n1 1\n1 1\n1 1\n1 1\n1\"\"\") == \"\"\"1 1\n1 1\n1 1\n1 1\n1 1\"\"\"\n\nassert solution(\"\"\"2 1\n1 1\n1 1\n1 1\n1 1\n\"\"\") == \"\"\"1 1\n1 1\n1 1\n1 1\n1 1\"\"\"\n\nassert solution(\"\"\"1 1\n1 1\n1 1\n1 1\n1 1\n\"\"\") == \"\"\"1 1\n1 1\n1 1\n1 1\n1 1\"\"\"\n\nassert solution(\"\"\"5 5\n1 1\n1 1\n1 1\n1 1\n1\"\"\") == \"\"\"1 1\n1 1\n1 1\n1 1\n1 1\"\"\"\n\nassert solution(\"\"\"3 3\n1 1\n1 1\n1 1\n1 1\n1\"\"\") == \"\"\"1 1\n1 1\n1 1\n1 1\n1 1\"\"\"\n\nassert solution(\"\"\"2 1\n1 1\n1 1\n1 1\n1 1\n\"\"\") == \"\"\"1 1\n1 1\n1 1\n1 1\n1 1\"\"\"\n\nassert solution(\"\"\"1 1\n1 1\n1 1\n1 1\n1 1\n\"\"\") == \"\"\"1 1\n1 1\n1 1\n1 1\n1 1\"\"\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3\\n') == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3'\nassert solution('5 5\\n') == '5 5'\nassert solution('2 5\\n') == '1 1\\n2 2\\n3 3\\n1 4\\n4 4\\n2 4'\nassert solution('1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\\n11 1\\n12 1\\n13 1\\n14 1\\n15 1\\n16 1\\n17 1\\n18 1\\n19 1\\n20 1\\n21 1\\n22 1\\n23 1\\n24 1\\n25 1\\n26 1\\n27 1\\n28 1\\n29 1\\n30 1\\n31 1\\n32 1\\n33 1\\n34 1\\n35 1\\n36 1\\n37 1\\n38 1\\n39 1\\n40 1\\n41 1\\n42 1\\n43 1\\n44 1\\n45 1\\n46 1\\n47 1\\n48 1\\n49 1\\n50 1\\n51 1\\n52 1\\n53 1\\n54 1\\n55 1\\n56 1\\n57 1\\n58 1\\n59 1\\n60 1\\n61 1\\n62 1\\n63 1\\n64 1\\n65 1\\n66 1\\n67 1\\n68 1\\n69 1\\n70 1\\n71 1\\n72 1\\n73 1\\n74 1\\n75 1\\n76 1\\n77 1\\n78 1\\n79 1\\n80 1\\n81 1\\n82 1\\n83 1\\n84 1\\n85 1\\n86 1\\n87 1\\n88 1\\n89 1\\n90 1\\n91 1\\n92 1\\n93 1\\n94 1\\n95 1\\n96 1\\n97 1\\n98 1\\n99 1\\n100 1\\n101 1\\n102 1\\n103 1\\n104 1\\n105 1\\n106 1\\n107 1\\n108 1\\n109 1\\n110 1\\n111 1\\n112 1\\n113 1\\n114 1\\n115 1\\n116 1\\n117 1\\n118 1\\n119 1\\n120 1\\n121 1\\n122 1\\n123 1\\n124 1\\n125 1\\n126 1\\n127 1\\n128 1\\n129 1\\n130 1\\n131 1\\n132 1\\n133 1\\n134 1\\n135 1\\n136 1\\n137 1\\n138 1\\n139 1\\n140 1\\n141 1\\n142 1\\n143 1\\n144 1\\n145 1\\n146 1\\n147 1\\n148 "
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n\") == \"-1\\n\"\nassert solution(\"1 1\\n1 2\\n1 3\\n2 1\\n2 3\\n\") == \"1 1\\n2 2\\n1 3\\n2 1\\n2 3\\n\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n    2 3\n    Sample Output:\n    1 1\n    2 2\n    1 3\n    2 1\n    1 2\n    2 3\n    \"\"\") == \"\"\"\n    1 1\n    2 2\n    1 3\n    2 1\n    1 2\n    2 3\n    \"\"\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3.33333333\\n3.33333333\\n3.33333333\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3.33333333\\n3.33333333\\n3.33333333\\n\"\n"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '3.33333333'"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"3.33333333\\n3.33333333\\n3.33333333\"\n"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\"\nassert solution(\"3 10\\n0 10 1000000000\\n0 10 1000000000\\n0 10 1000000000\") == \"3.33333333\\n3.33333333\\n3.33333333\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '3.33333333\\n3.33333333\\n3.33333333'"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\nfor i in range(n):\n    assert abs(a[i] - b[i]) <= 1e-6\n"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n3 10\n0 10 1\n0 10 1\n0 10 1\n''') == '3.33333333\\n3.33333333\\n3.33333333\\n'\n\nassert solution('''\n3 10\n1 10 10\n1 10 10\n1 10 10\n''') == '0.33333333\\n1.33333333\\n2.33333333\\n'\n\nassert solution('''\n3 10\n0 10 1\n0 10 1\n0 10 1\n''') == '0.00000000\\n0.66666667\\n1.33333333\\n'\n\nassert solution('''\n3 10\n1 10 10\n1 10 10\n1 10 10\n''') == '0.00000000\\n0.00000000\\n0.00000000\\n'"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\\n\"\n"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test failed: {solution(input())}!= {output}\""
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 3 2\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"1\\n3\\n2\\n1\\n2\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected_output"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == \"1\\n\"\n"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, [3, 3, 2]) == \"1\"\nassert solution(3, [3, 2, 2, 3]) == \"2\"\nassert solution(3, [3, 2, 3, 2]) == \"3\""
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 3 2\\n\") == \"1\\n\"\nassert solution(\"5\\n100 100 100 50 50\\n\") == \"2\\n\""
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 3, 2) == 1"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 3 2\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\nabba\") == \"2\"\nassert solution(\"4 2\\naabba\") == \"2\"\nassert solution(\"4 2\\naaaabb\") == \"2\"\nassert solution(\"4 2\\nababab\") == \"3\"\nassert solution(\"4 2\\nababba\") == \"3\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\nabba\") == \"2\"\nassert solution(\"4 2\\nbbbb\") == \"0\"\nassert solution(\"4 2\\naaa\") == \"0\"\nassert solution(\"4 2\\naaa\") == \"0\"\nassert solution(\"4 2\\naaa\") == \"0\"\nassert solution(\"4 2\\naaa\") == \"0\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\nabba\") == 2, \"The solution should return 2\"\nassert solution(\"4 3\\naabb\\nbbbb\") == 1, \"The solution should return 1\"\nassert solution(\"5 3\\naabb\\nbbbb\\nccc\") == 2, \"The solution should return 2\"\nassert solution(\"6 2\\nabb\\nbbb\\nbbb\") == 1, \"The solution should return 1\"\nassert solution(\"7 4\\nabb\\nbbb\\nbbb\\nccc\\nddd\") == 2, \"The solution should return 2\"\nassert solution(\"8 3\\nabb\\nbbb\\nbbb\\nccc\\nddd\\neee\") == 1, \"The solution should return 1\"\nassert solution(\"9 5\\nabb\\nbbb\\nbbb\\nccc\\nddd\\neee\\nfff\") == 2, \"The solution should return 2\"\nassert solution(\"10 5\\nabb\\nbbb\\nbbb\\nccc\\nddd\\neee\\nfff\\nggg\") == 1, \"The solution should return 1\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\nabba\\n3 1\\nbaba\") == \"2\\n\"\nassert solution(\"3 2\\naabb\\n2 1\\nbabb\") == \"2\\n\"\nassert solution(\"4 2\\naabb\\nbbbb\\n1 1\\nbbbb\") == \"2\\n\"\nassert solution(\"4 3\\naabb\\nbbbb\\ncccc\\n2 1\\nbbbb\") == \"2\\n\"\nassert solution(\"4 2\\naaabbbbc\\naaaabbba\\naaaaabba\\n1 1\\n11111111\") == \"1\\n\"\nassert solution(\"4 3\\nbbbb\\ncccc\\n1 1\\ndddd\\n1 1\\n11111111\") == \"1\\n\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\nabba\\n\") == \"2\"\nassert solution(\"5 3\\naaaabbbb\\ncccccccc\\nddddddd\") == \"3\"\nassert solution(\"6 4\\naaaabbbbccc\\nddddddddddd\\neeeeeeeeeee\") == \"4\"\nassert solution(\"7 6\\naaaaaaaabb\\nccccccccccc\\nddddddddddd\\neeeeeeeeee\") == \"5\"\nassert solution(\"8 8\\"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 2\\nabba') == 2"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected {sample_output}, got {solution(sample_input)}\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 2"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"4 2\\nabba\\n\") == \"2\"\nassert solution(stdin=\"4 2\\ncats\\n\") == \"0\"\nassert solution(stdin=\"4 2\\nbouldering\\n\") == \"1\"\nassert solution(stdin=\"4 2\\nbouldering\\nbouldering\\n\") == \"2\"\nassert solution(stdin=\"4 2\\nbouldering\\ncats\\n\") == \"2\"\nassert solution(stdin=\"4 2\\nbouldering\\nbouldering\\nbouldering\\n\") == \"3\"\nassert solution(stdin=\"4 2\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\n\") == \"3\"\nassert solution(stdin=\"4 2\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\n\") == \"3\"\nassert solution(stdin=\"4 2\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\nbouldering\\"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\nabba\") == 2\n"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4 3\n1 2\n2 3\n2 4\n\"\"\") == 3"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 3\\n1 2\\n2 3\\n2 4') == '3'\n"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == 3\nassert solution(\"5 4\\n1 2\\n2 3\\n3 4\\n4 5\") == 12"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 3\\n1 2\\n2 3\\n2 4') == 3, 'Test case 1 failed'\n\nassert solution('4 3\\n1 2\\n2 3\\n2 4\\n1 3\\n1 4\\n2 5\\n3 6\\n3 7\\n3 8\\n3 9\\n4 10\\n5 11\\n5 12\\n5 13\\n5 14\\n6 15\\n6 16\\n7 17\\n7 18\\n7 19\\n7 20') == 16, 'Test case 2 failed'\n\nassert solution('4 3\\n1 2\\n2 3\\n2 4\\n1 3\\n1 4\\n2 5\\n3 6\\n3 7\\n3 8\\n3 9\\n4 10\\n5 11\\n5 12\\n5 13\\n5 14\\n6 15\\n6 16\\n7 17\\n7 18\\n7 19\\n7 20\\n3 10\\n3 11\\n3 12\\n3 13\\n3 14') == 26, 'Test case 3 failed'"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == 3\nassert solution(\"4 3\\n1 2\\n2 3\\n2 4\\n5 6\\n3 4\\n1 2\") == 4\nassert solution(\"4 3\\n1 2\\n2 3\\n2 4\\n5 6\\n3 4\\n1 2\\n3 5\\n2 3\") == 5"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == 3, \"Expected output: 3\""
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == 3, \"Test case 1 failed\"\nassert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == 3, \"Test case 2 failed\"\nassert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == 3, \"Test case 3 failed\""
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Expected output: {}\\nActual output: {}\".format(output(), solution(input()))"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\\n0\\n\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3') == '1\\n0\\n'\nassert solution('4 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3') == '2\\n0\\n'"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"Invalid input.\\n\"\nassert solution(\"3 2\\n\") == \"Invalid input.\\n\"\nassert solution(\"3 1\\n\") == \"Invalid input.\\n\"\nassert solution(\"3 3\\n\") == \"Invalid input.\\n\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"1\\n0\\n\"\nassert solution(\"3 1\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"0\\n1\\n\"\nassert solution(\"3 2\\n1 1\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"0\\n1\\n\"\nassert solution(\"3 1\\n1 1\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"0\\n1\\n\"\nassert solution(\"3 1\\n1 0\\n0 1\\n1000 1\\n1 2\\n2 3\") == \"0\\n1\\n\"\nassert solution(\"3 2\\n1 1\\n0 1\\n1000 1\\n1 2\\n2 3\") == \"0\\n1\\n\"\nassert solution(\"3 1\\n1 1\\n0 1\\n1000 1\\n1 2\\n2 3\") == \"0\\n1\\n\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1\\n0\\n\", \"Test case 1 failed\"\nassert solution() == \"1\\n1\\n\", \"Test case 2 failed\"\nassert solution() == \"2\\n1\\n\", \"Test case 3 failed\"\nassert solution() == \"3\\n2\\n\", \"Test case 4 failed\"\nassert solution() == \"4\\n2\\n\", \"Test case 5 failed\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\nr\"\"\"\n3 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n\"\"\") == \"1\\n0\\n\"\n\nassert solution(\nr\"\"\"\n2 2\n1 1\n1 2\n2 2\n1 3\n3 3\n\"\"\") == \"1\\n0\\n\"\n\nassert solution(\nr\"\"\"\n1 1\n1 1\n1 1\n1 1\n1 1\n\"\"\") == \"1\\n1\\n\"\n\nassert solution(\nr\"\"\"\n1 1\n1 1\n1 1\n1 1\n1 1\n\"\"\") == \"1\\n1\\n\"\n\nassert solution(\nr\"\"\"\n1 1\n1 1\n1 1\n1 1\n1 1\n\"\"\") == \"1\\n1\\n\"\n\nassert solution(\nr\"\"\"\n1 1\n1 1\n1 1\n1 1\n1 1\n\"\"\") == \"1\\n1\\n\"\n\nassert solution(\nr\"\"\"\n1 1\n1 1\n1 1\n1 1\n1 1\n\"\"\") == \"1\\n1\\n\"\n\nassert solution(\nr\"\"\"\n1 1\n1 1\n1 1\n1 1\n1 1\n\"\"\") == \"1\\n1\\n\"\n\nassert solution(\nr\"\"\"\n1 1\n1 1\n1 1\n1 1\n1 1\n\"\"\") == \"1\\n1\\n\"\n\nassert solution(\nr\"\"\"\n1 1\n1 1\n1 1\n1 1\n1 1\n\"\"\") == \"1\\n1\\n\"\n\nassert solution(\nr\"\"\"\n1 1\n1 1\n1 1\n1 1\n1 1\n\"\"\") == \"1\\n1\\n\"\n\nassert solution(\nr\"\"\"\n1 1\n1 1\n1 1\n1 1\n1 1\n\"\"\") == \"1\\n1\\n\"\n\nassert solution(\nr\"\"\"\n1 1\n1 1\n1 1\n1 1\n1 1\n\"\"\") == \"1\\n1\\n\"\n\nassert solution(\nr\"\"\"\n1 1\n1 1\n1 1\n1 1\n1 1\n\"\"\") == \"1\\n1\\n\"\n\nassert solution(\nr\"\"\"\n1 1\n1 1\n1 1\n1 1\n1 1\n\"\"\") == \"1\\n1\\n\"\n\nassert solution(\nr\"\"\"\n1 1\n1 1\n1 1\n1 1\n1 1\n\"\"\") == \"1\\n1\\n\"\n\nassert solution(\nr\"\"\"\n1 1\n1 1\n1 1\n1 1\n1 1\n\"\"\") == \"1\\n1\\n\"\n\nassert solution(\nr\"\"\"\n1 1\n1 1\n1 1\n1 1\n1 1\n\"\"\") == \"1\\n1\\n\"\n\nassert solution(\nr\"\"\"\n1 1\n1 1\n1 1\n1 1\n1 1\n\"\"\") == \"1\\n1\\n\"\n\nassert solution(\nr\"\"\"\n1 1\n1 1\n1 1\n1 1\n1 1\n\"\"\") == \"1\\n1\\n\"\n\nassert solution(\nr\"\"\"\n1 1\n1 1\n1 1\n1 1\n1 1\n\"\"\") == \"1\\n1\\n\"\n\nassert solution(\nr\"\"\"\n1 1\n1 1\n1 1\n1 1\n1 1\n\"\"\") == \"1\\n1\\n\"\n\nassert solution(\nr\"\"\"\n1 1\n1 1\n1 1\n1 1\n1 1\n\"\"\") == \"1\\n1\\n\"\n\nassert solution(\nr\"\"\"\n1 1\n1 1\n1 1\n1 1\n1 1\n\"\"\") == \"1\\n1\\n\"\n\nassert solution(\nr\"\"\"\n1 1\n1 1\n1 1\n1 1\n1 1\n\"\"\") == \"1\\n1\\n\"\n\nassert solution(\nr\"\"\"\n1 1\n1 1\n1 1\n1 1\n1 1\n\"\"\") == \"1\\n1\\n\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 1\nassert solution() == 0"
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 7, \"Expected output: 7, but got: {}\".format(solution())"
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output, \"Sample Input and Output do not match.\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n1 2 3\\n3 2 2\\n5 2 1\\n3 2 1\\n1 2 1\\n1 2 3') == 7, \"Test 1\"\nassert solution('4\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n5 6 7 8\\n6 7 8 9\\n7 8 9 10\\n8 9 10 11\\n9 10 11 12\\n10 11 12 13\\n11 12 13 14\\n12 13 14 15\\n13 14 15 16\\n14 15 16 17\\n15 16 17 18\\n16 17 18 19\\n17 18 19 20\\n18 19 20 21\\n19 20 21 22\\n20 21 22 23\\n21 22 23 24\\n22 23 24 25\\n23 24 25 26\\n24 25 26 27\\n25 26 27 28\\n26 27 28 29\\n27 28 29 30\\n28 29 30 31\\n29 30 31 32\\n30 31 32 33\\n31 32 33 34\\n32 33 34 35\\n33 34 35 36\\n34 35 36 37\\n35 36 37 38\\n36 37 38 39\\n37 38 39 40\\n38 39 40 41\\n39 40 41 42\\n40 41 42 43\\n41 42 43 44\\n42 43 44 45\\n43 44 45 46\\n44 45 46 47\\n45 46 47 48\\n46 47 48 49\\n47 48 49 50\\n48 49 50 51\\n49 50 51 52\\n50 51 52 53\\n51 52 53 54\\n52 53 54 55\\n53 54 55 56\\n54 55 56 57\\n55 56 57 58\\n56 57 58 59\\n57 58 59 60\\n58 59 60 61\\n59 60 61 62\\n60 61 62 63\\n61 62 63 64\\n62 63 64 65\\n63 64 65 66\\n64 65 66 67\\n65 66 67 68\\n66 67 68 69\\n67 68 69 70\\n68 69 70 71\\n69 70 71 72\\n70 71 72 73\\n71 72 73 74\\n72 73 74 75\\n73 74 75 76\\n74 75 76 77\\n75 76 77 78\\n76 77 78 79\\n77 78"
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\\n\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"7\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == \"1\\n1\\n1\\n\\n\"\nassert solution(2) == \"2\\n2\\n2\\n\\n\"\nassert solution(3) == \"3\\n3\\n3\\n\\n\"\nassert solution(4) == \"4\\n4\\n4\\n\\n\"\nassert solution(5) == \"5\\n5\\n5\\n\\n\"\nassert solution(6) == \"6\\n6\\n6\\n\\n\"\nassert solution(7) == \"7\\n7\\n7\\n\\n\"\nassert solution(8) == \"8\\n8\\n8\\n\\n\"\nassert solution(9) == \"9\\n9\\n9\\n\\n\"\nassert solution(10) == \"10\\n10\\n10\\n\\n\"\nassert solution(11) == \"11\\n11\\n11\\n\\n\"\nassert solution(12) == \"12\\n12\\n12\\n\\n\"\nassert solution(13) == \"13\\n13\\n13\\n\\n\"\nassert solution(14) == \"14\\n14\\n14\\n\\n\"\nassert solution(15) == \"15\\n15\\n15\\n\\n\"\nassert solution(16) == \"16\\n16\\n16\\n\\n\"\nassert solution(17) == \"17\\n17\\n17\\n\\n\"\nassert solution(18) == \"18\\n18\\n18\\n\\n\"\nassert solution(19) == \"19\\n19\\n19\\n\\n\"\nassert solution(20) == \"20\\n20\\n20\\n\\n\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\\n3 2 2\\n5 2 1\\n3 2 1\\n1 2 1\\n1 2 3\") == \"7\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"7\" # Change this line to test your solution\n\nfrom typing import List"
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1 2 3\\n3 2 2\\n5 2 1\\n3 2 1\\n1 2 1\\n1 2 3') == '7\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\", \"Test case 1 failed\"\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\", \"Test case 2 failed\"\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\", \"Test case 3 failed\"\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\", \"Test case 4 failed\"\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\", \"Test case 5 failed\"\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\", \"Test case 6 failed\"\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\", \"Test case 7 failed\"\n"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 20, \"Incorrect Solution\""
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\nr'''\n5 2\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100\n'''\n) == '20\\n'"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n1000 5\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100\n''') == '20'\n\nassert solution('''\n1000 6\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100\ncalculus1 20\n''') == '20'\n\nassert solution('''\n1000 7\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100\ncalculus1 20\ncalculus2 20\n''') == '20'\n\nassert solution('''\n1000 8\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100\ncalculus1 20\ncalculus2 20\ncalculus2 30\n''') == '20'\n\nassert solution('''\n1000 9\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100\ncalculus1 20\ncalculus2 20\ncalculus2 30\ncalculus3 30\n''') == '20'\n\nassert solution('''\n1000 10\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100\ncalculus1 20\ncalculus2 20\ncalculus2 30\ncalculus3 30\ncalculus4 40\n''') == '20'\n\nassert solution('''\n1000 11\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100\ncalculus1 20\ncalculus2 20\ncalculus2 30\ncalculus3 30\ncalculus4 40\ncalculus5 50\n''') == '20'\n\nassert solution('''\n1000 12\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100\ncalculus1 20\ncalculus2 20\ncalculus2 30\ncalculus3 30\ncalculus4 40\ncalculus5 50\ncalculus6 60\n''') == '20'\n\nassert solution('''\n1000 13\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100\ncalculus1 20\ncalculus2 20\ncalculus2 30\ncalculus3 30\ncalculus4 40\ncalculus5 50\ncalculus6 60\ncalculus7 70\n''') == '20'\n\nassert solution('''\n1000 14\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100\ncalculus1 20\ncalculus2 20\ncalculus2 30\ncalculus3 30\ncalculus4 40\ncalculus5 50\ncalculus6 60\ncalculus7 70\ncalculus8 80\n''') == '20'\n\nassert solution('''\n1000 15\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100\ncalculus1 20\ncalculus2 20\ncalculus2 30\ncalculus3 30\ncalculus4 40\ncalculus5 50\ncalculus6 60\ncalculus7 70\ncalculus8 80\ncalculus9 90\n''') == '20'\n\nassert solution('''\n1000"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\"\n"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100') == '20'\n"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"20\"\n"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\\n\"\n"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '20'\nassert solution(input()) == '20'\nassert solution(input()) == '20'\nassert solution(input()) == '20'\nassert solution(input()) == '20'"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100') == '20'\nassert solution('5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100') == '20'\nassert solution('5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100') == '20'\nassert solution('5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100') == '20'\nassert solution('5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100') == '20'\nassert solution('5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100') == '20'\nassert solution('5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100') == '20'\nassert solution('5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100') == '20'\nassert solution('5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100') == '20'\nassert solution('5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100') == '20'\nassert solution('5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100') == '20'"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == '''\n20\n'''"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}.\""
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == output, f\"The output '{solution(input)}' is incorrect, expected '{output}'.\""
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\") == 6\n"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 6, \"Expected output: 6, got: {}\".format(solution())"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\") == 6\n"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\\n') == 6\nassert solution('5 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\\n') == 12"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6\n''') == 6"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Incorrect output. Expected: {expected_output}, Actual: {solution(input())}\"\n"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6') == 6, \"The correct output should be 6, but got: \" + str(solution('4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6'))\nassert solution('4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\\n1 4 1') == 3, \"The correct output should be 3, but got: \" + str(solution('4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\\n1 4 1'))"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    4 4\n    1 2 2\n    2 3 4\n    3 4 1\n    4 1 2\n    3\n    \"\"\"\n) == 6"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n\") == \"2\\nimpossible\\n\"\nassert solution(\"4 2\\n3\\n1 2\\n2 3 1\\n1 1\\n\") == \"1\\nimpossible\\n\"\nassert solution(\"3 1 2\\n1 1\\n\") == \"1\\nimpossible\\n\"\nassert solution(\"4 2\\n4\\n1 2\\n2 3 1\\n1 1\\n\") == \"2\\nimpossible\\n\"\nassert solution(\"4 3\\n3\\n1 2\\n2 3 1\\n1 1\\n\") == \"2\\nimpossible\\n\"\nassert solution(\"2 1\\n1 1\\n\") == \"2\\nimpossible\\n\"\nassert solution(\"2 1\\n1 1\\n\") == \"2\\nimpossible\\n\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n\") == \"2\\nimpossible\\n\"\nassert solution(\"3 1 2\\n4\\n5\\n1 2\\n2 3 1\\n3 4\\n6 7\\n\") == \"2\\nimpossible\\n\"\nassert solution(\"5 2 3\\n6\\n7\\n1 2\\n2 3 1\\n3 4\\n5 6\\n8 9\\n\") == \"2\\nimpossible\\n\"\nassert solution(\"7 3 4\\n10\\n11\\n12\\n13\\n14\\n15\\n\") == \"3\\nimpossible\\n\"\nassert solution(\"5 1 1\\n1\\n2\\n2 1\\n1 2\\n\") == \"2\\nimpossible\\n\"\nassert solution(\"4 2 1\\n1\\n3\\n3 1\\n2 3\\n\") == \"3\\nimpossible\\n\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n\") == 2\nassert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n\") == \"impossible\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(3) +'' + str(1) +'' + str(1) + '\\n' + \n              str(2) + '\\n' + \n              str(3) +'' + str(1) +'' + str(1) + '\\n' +\n              str(1) +'' + str(2) + '\\n' +\n              str(2) +'' + str(3) +'' + str(1) + '\\n' +\n              str(1) +'' + str(1)) == '2'"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"2\\n\"\nassert solution(\"3 5 3\\n1 1 1\\n2 2\\n1 1\\n1 2\") == \"impossible\\n\"\n"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"impossible\" # Change this line to test the correctness of your solution"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"2\\n\"\nassert solution(\"1 3 1\\n1 1\\n3 2\\n2 3\\n1 1 2 3 1\") == \"impossible\\n\"\nassert solution(\"3 5 1\\n1\\n3 2\\n2 3\\n1 1 2 3 1 1 2 3\") == \"impossible\\n\"\nassert solution(\"2 5 1\\n2\\n3 2\\n2 3\\n1 1 2 3 1 1 2 3\") == \"impossible\\n\"\nassert solution(\"4 5 1\\n2\\n3 2\\n2 3\\n1 1 2 3 1 1 2 3\") == \"impossible\\n\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '2\\n'\n"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == 2"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n''') == '2\\n'\nassert solution('''\n3 1 1\n1\n1\n2\n1\n1\n''') == 'impossible\\n'"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n250 250\\n250 750\\n\") == 500.00\nassert solution(\"4\\n0 0\\n100 0\\n100 100\\n\") == 400.00\nassert solution(\"2\\n0 0\\n100 0\\n100 100\\n\") == 400.00\nassert solution(\"2\\n0 0\\n0 0\\n100 100\\n\") == 250.00\nassert solution(\"2\\n0 0\\n0 0\\n0 0\\n\") == 0.00"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n250 250\\n250 750\") == 500.00, \"Your code is incorrect.\""
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n250 250\\n250 750\") == 500.00\nassert solution(\"2\\n200 200\\n250 750\") == 250.00\nassert solution(\"2\\n200 500\\n250 750\") == 750.00"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n250 250\\n250 750\") == \"500.00\"\n"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"500.00\", \"Please enter the input correctly.\""
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n250 250\\n250 750\\n\") == \"500.00\""
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n250 250\\n250 750\\n\") == \"500.00\\n\"\nassert solution(\"3\\n1000 500\\n1000 1000\\n\") == \"250.00\\n\""
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n250 250\\n250 750') == '500.00'\n"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n250 250\\n250 750\") == \"500.00\", \"Sample Input: 2\\n250 250\\n250 750\"\nassert solution(\"3\\n250 250\\n250 750\") == \"450.00\", \"Sample Input: 3\\n250 250\\n250 750\"\nassert solution(\"4\\n250 250\\n250 750\") == \"350.00\", \"Sample Input: 4\\n250 250\\n250 750\"\nassert solution(\"5\\n250 250\\n250 750\") == \"250.00\", \"Sample Input: 5\\n250 250\\n250 750\""
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 500.0\nassert round(solution(), 2) == 500.0"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n2 100 10\\n100 1 10\") == \"0\\n\"\nassert solution(\"4 5\\n1 2 3 4\\n5 2 4 3\\n1 3 5 2\") == \"11\\n\"\nassert solution(\"5 4\\n1 2 3 4\\n5 2 4 3\\n1 3 5 2\") == \"13\\n\"\nassert solution(\"5 4\\n1 2 3 4\\n5 2 4 3\\n1 3 5 2\") == \"13\\n\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(b\"2 3\\n2 100 10\\n100 1 10\\n\") == \"0\\n\"\n"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"0\\n\"\nprint(\"All test cases passed successfully!\")"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n2 100 10\\n100 1 10\") == 0\n"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(read_input()) == 0, \"Test Failed\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == output, f\"Test failed for input '{input}'. Expected output '{output}', but got '{solution(input)}'.\" for input, output in zip(input_list, output_list)"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    2 3\n    2 100 10\n    ''') == '0\\n'\n\nassert solution('''\n    5 5\n    100 100 100 100 100\n    ''') == '0\\n'\n\nassert solution('''\n    4 5\n    100 200 300 400\n    ''') == '100\\n'\n\nassert solution('''\n    6 4\n    100 200 300 400\n    200 200 300 400\n    200 200 300 400\n    200 200 300 400\n    200 200 300 400\n    ''') == '100\\n'"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"0\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n2 100 10\\n100 1 10\\n\") == \"0\\n\"\n"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\\n\", \"Expected output: 2\\n\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == \"2\"\nassert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n50 5 25 35\") == \"2\"\nassert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\") == \"2\"\nassert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Output:\\n2\\n\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\", \"Expected output: 2, but got: \" + str(solution(stdin))"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n\"\n) == \"2\\n\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"Output:\\n2\\n\", \"Test case not passing\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == \"2\\n\", \"The solution should output 2.\"\n\nsample_input = '''\n80 50 3 2\n75 5 25 20 50 35\n50 5 25 35\n'''"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == \"2\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output, \"The solution is incorrect\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == 2"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 4\\n2211\\n1112\\n1112') == 'AAAA\\n...A\\n....\\nBB..\\nBBBB\\n...B\\n....\\n...C\\nCCCC\\n'"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\"\nassert solution(\"3 4\\n2211\\n1112\\n1112\\n\") == \"CCCC\"\nassert solution(\"3 4\\n2211\\n1112\\n1112\\n3333\\n\") == \"impossible\"\nassert solution(\"3 4\\n2211\\n1112\\n1112\\n3333\\n2222\\n1111\\n\") == \"CCCC\"\nassert solution(\"3 4\\n2211\\n1112\\n1112\\n3333\\n2222\\n1111\\n1111\\n\") == \"CCCC\"\nassert solution(\"3 4\\n2211\\n1112\\n1112\\n3333\\n2222\\n1111\\n1111\\n1111\\n\") == \"CCCC\"\nassert solution(\"3 4\\n2211\\n1112\\n1112\\n3333\\n2222\\n1111\\n1111\\n1111\\n1111\\n\") == \"CCCC\""
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 'AAAA\\n...A\\n....\\n\\nBB..\\nBBBB\\n...B\\n\\n....\\n...C\\nCCCC\\n'\n"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 4\\n2211\\n1112\\n1112') == 'AAAA\\n...A\\n....\\n...C\\nCCCC\\n'\nassert solution('2 3\\n111\\n111\\n111\\n111') == 'BB..\\nBBBB\\n...B\\nCCCC\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('1 1\\n2222\\n1111\\n1111') == 'impossible'\nassert solution('1 1\\n1111\\n1111\\n1111') == 'impossible'\nassert solution('1 1\\n2222\\n2222\\n2222') == 'impossible'\nassert solution('1 1\\n2222\\n1111\\n2222') == 'impossible'\nassert solution('1 1\\n1111\\n1111\\n1111') == 'impossible'\nassert solution('1 1\\n1111\\n1111\\n1111') == 'impossible'\nassert solution('1 1\\n1111\\n1111\\n1111') == 'impossible'"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 4\\n2211\\n1112\\n1112') == 'AAAA\\n....A\\n....\\n....\\n...C\\nCCCC'\nassert solution('2 3\\n111\\n222\\n333') == 'BB..\\nBB..\\n....\\n...C\\nCCCC'\nassert solution('4 4\\n111\\n111\\n111\\n111') == 'impossible'"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 4\\n2211\\n1112\\n1112') == 'AAAA\\n..A\\n...B\\n....\\n...C\\nCCCC\\n\\n'"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\n...A\\n....\\n\\nBB..\\nBBBB\\n...B\\n\\n....\\n...C\\nCCCC\\nimpossible\\n\"\n"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"3 4\\n2211\\n1112\\n1112\\n\") == \"AAAA\\n..A\\n..B\\n....\\n..C\\nCCCC\"\nassert solution(stdin=\"3 4\\n2211\\n1112\\n1112\\n\") == \"impossible\"\nassert solution(stdin=\"3 4\\n2211\\n1112\\n1112\\n\") == \"BBBB\\n..B\\n..C\\nCCCC\"\nassert solution(stdin=\"3 4\\n2211\\n1112\\n1112\\n\") == \"..A\\n..B\\n..C\\nCCCC\"\nassert solution(stdin=\"3 4\\n2211\\n1112\\n1112\\n\") == \"..B\\n..C\\nCCCC\"\nassert solution(stdin=\"3 4\\n2211\\n1112\\n1112\\n\") == \"..C\\nCCCC\"\nassert solution(stdin=\"3 4\\n2211\\n1112\\n1112\\n\") == \"AAAA\""
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\n...A\\n....\\nBB..\\nBBBB\\n...B\\n....\\n...C\\nCCCC\"\n"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '''\nAAAA\n..A\n..B\n\nBBB\n..B\n..B\n\n...C\n..C\n..C\nCCCC\n'''"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\") == 9"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 9, \"Expected output: 9\""
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 9, \"Expected 9, but got {}\".format(solution())"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\") == 9, \"The output should be 9.\"\nassert solution(\"5 4 2 1\\n3 1 1\\n4 2 2\\n1 3 3\\n1 1 1\") == 4, \"The output should be 4.\"\nassert solution(\"10 10 10 10\\n2 2 2 2\\n2 2 2 2\\n2 2 2 2\\n2 2 2 2\") == 0, \"The output should be 0.\""
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 9"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\\n') == 9"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 9, \"The output should be 9\""
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3') == 9"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\") == 9\nassert solution(\"10 1 1 1 2 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 49 50 50 51 51 52 52 53 53 54 54 55 55 56 56 57 57 58 58 59 59 60 60 61 61 62 62 63 63 64 64 65 65 66 66 67 67 68 68 69 69 70 70 71 71 72 72 73 73 74 74 75 75 76 76 77 77 78 78 79 79 80 80 81 81 82 82 83 83 84 84 85 85 86 86 87 87 88 88 89 89 90 90 91 91 92 92 93 93 94 94 95 95 96 96 97 97 98 98 99 99 100\") == 3600"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    3 1 3 3\n    3 4 1 2 3 2\n    4 3 1 2 1\n    \"\"\"\n) == \"9\""
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == \"20.396078\"\n"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"20.396078\", \"Incorrect output\"\n"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"20.396078\\n\"\n"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == \"20.396078\"\n"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"20.396078\", \"Expected output: 20.396078\""
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == expected, f\"Solution should be {expected}, not {solution}\""
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == 20.396078\n"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5') == '20.396078'"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == 20.396078\n"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 20.396078, \"Incorrect output. Expected 20.396078, got {}\".format(solution())"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\") == \"c\"\nassert solution(\"nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"def\"\n\nfrom typing import List\n"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abca\\nbc\\ncd\\ndd\\nee\\nff\\ngg\\nhh\\nii\\njj\\nkk\\nll\\nmm\\n\\nnn\\noo\\npp\\nqq\\nrr\\nss\\ntt\\nuu\\nvv\\nww\\nxx\\nyy\\nzz\") == \"b\\nc\\ndef\"\nassert solution(\"bc def\\ncd ghi\\ne f jk\\nf l m n\\ng p q r\\nh s t u\\ni v w x\\nj y z\") == \"def\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"c\"\nassert solution(\"abca\") == \"b\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"cdefghijklmnopqrstuvwxyz\"\n"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\") == \"c\"\nassert solution(\"nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"def\"\nassert solution(\"1\") == \"b\"\nassert solution(\"2\") == \"c\"\nassert solution(\"1 8\") == \"d\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\") == \"c\"\nassert solution(\"nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"def\"\nassert solution(\"1\") == \"b\"\nassert solution(\"2\") == \"c\"\nassert solution(\"1 8\") == \"def\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Expected '{expected}', got '{solution(input())}'\"\n"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\") == \"c\"\nassert solution(\"nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"def\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"b\\n\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\\n1\\n2\\n1 8\") == \"b\\nc\\ndef\"\n\nassert solution(\"abcdefghijklmnopqrstuvwxyz\\nabcdefghijklmnopqrstuvwxyz\\nabcdefghijklmnopqrstuvwxyz\\n1234567890\\n1234567890\") == \"b\\nc\\ndef\\nb\\nc\\ndef\\nb\\nc\\ndef\\nb\\nc\\ndef\\nb\\nc\\ndef\""
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"def solution(stdin: str) -> str:\n    pass\\n\"\n"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n    pass\", \"Test case 1 failed\"\n\nassert solution(stdin) == \"12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n    pass\", \"Test case 2 failed\"\n\nassert solution(stdin) == \"12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n    pass\", \"Test case 3 failed\"\n\nassert solution(stdin) == \"12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n    pass\", \"Test case 4 failed\"\n\nassert solution(stdin) == \"12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n    pass\", \"Test case 5 failed\"\n\nsolution(stdin)"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == '4\\n7\\n10\\n12\\n16\\n'\n"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"hobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\n4\\nrobi\\nhobi\\nhobit\\n\") == \"12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == expected_output, f\"Test case {test_case_number} failed\"\nfor test_case_number in range(1, 101):\n    sample_input = \"\"\"\n    5\n    hobotnica\n    robot\n    hobi\n    hobit\n    robi\n    \"\"\"\n    expected_output = \"\"\"\n    12\n    10\n    16\n    7\n    7\n    \"\"\"\n    solution(sample_input)"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt')) == 'abcd', 'Incorrect output'"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Solution is incorrect. Expected: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == \"\"\"12\n10\n16\n7\n"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('hobotnica') == 'hob'\nassert solution('robot') == 'ro'\nassert solution('hobi') == 'ho'\nassert solution('hobit') == 'ho'\nassert solution('robi') == 'ro'"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\nhobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\n4\\nrobi\\nhobi\\nhobit\\nrakija\\n\") == \"12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\"\n"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('14 4\\nJQ IRKEYFG EXQ') == 'THIS IS A TEST'\n"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('14 4\\nJQ IRKEYFG EXQ') == 'THIS IS A TEST'\n"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"THIS IS A TEST\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == \"THIS IS A TEST\", \"The solution is incorrect.\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"THIS IS A TEST\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2.6\") == \"135\\n270\"\nassert solution(\"1.1\") == \"No solution\"\nassert solution
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2.6\") == \"135\\n270\"\nassert solution(\"12.34\") == \"1234\"\nassert solution
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2.6) == '135\\n270\\n135135\\n270270'\n"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2.6\") == \"135\\n270\\n135135\\n270270\\n\""
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1.2) == [135, 270, 135135, 270270]\nassert solution(0.26) == [135, 270, 135135, 270270]\nassert solution(2.6) == [135, 270, 135135, 270270]\nassert solution(2.5) == [135, 270]\nassert solution(2.1) == [135]\nassert solution(2.25) == [270, 135135, 270270]"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2.6\") == \"135\\n270\\n135135\\n270270\"\n"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == output, f\"Expected: {output}\\nGot: {solution(stdin=input())}\"\n\nfrom typing import List"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2.6) == \"135\\n270\\n135135\\n270270\""
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input(\"Enter a number X: \")) == [135, 270, 135135, 270270]"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2.6) == \"135\\n270\\n135135\\n270270\"\n"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"The output does not match the expected output. Received '{solution(input())}' instead of '{expected}'.\"\n"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n') == '4\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output, \"Sample output should be: {}\".format(sample_output)"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"4\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n\") == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"1\\n0 1\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\\n11 1\\n12 1\\n13 1\\n14 1\\n15 1\\n16 1\\n17 1\\n18 1\\n19 1\\n20 1\\n21 1\\n22 1\\n23 1\\n24 1\\n25 1\\n26 1\\n27 1\\n28 1\\n29 1\\n30 1\\n31 1\\n32 1\\n33 1\\n34 1\\n35 1\\n36 1\\n37 1\\n38 1\\n39 1\\n40 1\\n41 1\\n42 1\\n43 1\\n44 1\\n45 1\\n46 1\\n47 1\\n48 1\\n49 1\\n50 1\\n51 1\\n52 1\\n53 1\\n54 1\\n55 1\\n56 1\\n57 1\\n58 1\\n59 1\\n60 1\\n61 1\\n62 1\\n63 1\\n64 1\\n65 1\\n66 1\\n67 1\\n68 1\\n69 1\\n70 1\\n71 1\\n72 1\\n73 1\\n74 1\\n75 1\\n76 1\\n77 1\\n78 1\\n79 1\\n80 1\\n81 1\\n82 1\\n83 1\\n84 1\\n85 1\\n86 1\\n87 1\\n88 1\\n89 1\\n90 1\\n91 1\\n92 1\\n93 1\\n94 1\\n95 1\\n96 1\\n97 1\\n98 1\\n99 1\\n100 1\\n101 1\\n102 1\\n103 1\\n104 1\\n105 1\\n106 1\\n107 1\\n108 1\\n109 1\\n110 1\\n111 1\\n112 1\\n113 1\\n114 1\\n115 1\\n116 1\\n117 1\\n118 1\\n119 1\\n120 1\\n121 1\\n122 1\\n123 1\\n124 1\\n125 1\\n126 1\\n127 1\\n128 1\\n129 1\\n130 1\\n131 1\\n132 1\\n133 1\\n134 1\\n135 1\\n136 1\\n137 1\\n138 1\\n139 1\\n140 1\\n141 1\\n142 1\\n143 1\\n144 1\\n145 1\\n146 1\\n147 1"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3') == '4'\n"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\") == 4\nassert solution(\"1\\n0 0\\n0 0\") == 0\nassert solution(\"4\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"4\", \"The number castles which were in danger should be 4.\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\") == 4, \"The number castles which were in danger should be 4\""
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\nassert solution(\"10\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n3 4\\n3 5\\n3 6\\n3 7\\n3 8\\n3 9\\n4 5\\n4 6\\n4 7\\n4 8\\n4 9\\n5 6\\n5 7\\n5 8\\n5 9\\n6 7\\n6 8\\n6 9\\n7 8\\n7 9\\n8 9\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.000"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == ['0.0000000 0.0000000', '1.0000000 0.0000000', '-1.0000000 0.0000000', '0.0000000 1.0000000', '0.0000000 -1.0000000']\nprint(solution())\n"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\n\nimport math"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution, \"No solution provided\"\n"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2\\n1 3\\n1 4\\n1 5') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\nassert solution('5\\n1 2\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 5') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\\n2 1\\n1 6\\n2 3\\n1 7\\n2 4\\n1 8\\n2 5\\n1 9\\n2 6\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\""
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n\"\nassert solution(\"5\\n2 3\\n3 4\\n4 5\\n1 2\\n1 3\\n1 4\\n1 5\") == \"2.0000000 2.0000000\\n2.0000000 3.0000000\\n2.0000000 4.0000000\\n2.0000000 5.0000000\\n1.0000000 2.0000000\\n1.0000000 3.0000000\\n1.0000000 4.0000000\\n1.0000000 5.0000000\\n\"\nassert solution(\"5\\n2 3\\n3 4\\n4 5\\n5 1\\n2 3\\n3 4\\n4 5\\n1 2\\n1 3\\n1 4\\n1 5\") == \"2.0000000 2.0000000\\n2.0000000 3.0000000\\n2.0000000 4.0000000\\n2.0000000 5.0000000\\n1.0000000 2.0000000\\n1.0000000 3.0000000\\n1.0000000 4.0000000\\n1.0000000 5.0000000\\n\"\n"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r').read().strip()) == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == '''\n0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n'''"
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\\n\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('abc') == '1\\n1\\n1'\nassert solution('aaa') == '2\\n1\\n1'\nassert solution('aba') == '1\\n1\\n1'\nassert solution('*aaa') == '1\\n1\\n1'\nassert solution('kul*to') == '1\\n1\\n1'\nassert solution('ana*') == '1\\n1\\n1'\n"
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\") == \"1\\n\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\"\n2\n1\n1\n"
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output, f\"Your solution is incorrect. Please check the sample input and output.\"\n\nfrom typing import List"
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 1 failed\"\n\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 2 failed\"\n\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 3 failed\"\n\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 4 failed\"\n\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 5 failed\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\naaa\\nbbc\\naba\\naaa*aaa\\n*aaa\\n\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"1 2\\naaa\\nbbb\\nccc\\nddd\\n\") == \"3\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"2 3\\naaa\\nbbb\\nccc\\nddd\\n\") == \"1\\n2\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"3 3\\naaa\\nbbb\\nccc\\nddd\\n\") == \"3\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\nassert solution(\"a*a\\naba\\naaa*\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\nassert solution(\"abc\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\nassert solution(\"abcd*\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\nassert solution(\"**\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\nassert solution(\"***\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\nassert solution(\"**\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"test_input.txt\", \"r\")) == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\""
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n') == '1'\nassert solution('4 2\\nXO\\nOX\\nXO\\nOO\\nXO\\nOO\\n') == '0'\nassert solution('4 2\\nXO\\nOX\\nXO\\nOO\\nXO\\nOO\\n') == '1'"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nXO\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nXO\\nXO\\nXO\\nXO\\nOO\\nXO\\nOO\\n\") == 0\nassert solution(\"4 2\\nXO\\nXO\\nXO\\nXO\\nXO\\nOO\\n\") == 1\n"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected\nfor _ in range(5):\n    solution(input())"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n') == 1, \"Test case 1 failed\"\nassert solution('4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n') == 1, \"Test case 2 failed\"\nassert solution('4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n') == 1, \"Test case 3 failed\"\nassert solution('4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n') == 0, \"Test case 4 failed\"\nassert solution('4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n') == 0, \"Test case 5 failed\""
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''4 2\nXO\nOX\nXO\nOX\nOX\nOO\nXO\nOO\n''') == '1'"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n') == '1'\nassert solution('4 2\\nXO\\nOX\\nOX\\nOX\\nOO\\nXO\\nOO\\n') == '0'\n"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1, \"The code is not correct.\""
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r\"\\n4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(r\"\\n4 2\\nXO\\nXO\\nXO\\nXO\\nXO\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(r\"\\n4 2\\nXO\\nXO\\nXO\\nXO\\nXO\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(r\"\\n4 2\\nXO\\nXO\\nXO\\nXO\\nXO\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(r\"\\n4 2\\nXO\\nXO\\nXO\\nXO\\nXO\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(r\"\\n4 2\\nXO\\nXO\\nXO\\nXO\\nXO\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(r\"\\n4 2\\nXO\\nXO\\nXO\\nXO\\nXO\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(r\"\\n4 2\\nXO\\nXO\\nXO\\nXO\\nXO\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(r\"\\n4 2\\nXO\\nXO\\nXO\\nXO\\nXO\\nOO\\nXO\\nOO\\n\") == 1"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1, \"The first test case is incorrect.\"\nassert solution(\"5 3\\nOO\\nXO\\nXO\\nXO\\nOX\\nOO\\nOO\\n\") == 1, \"The second test case is incorrect.\"\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nXO\\nOX\\nOO\\nXO\\nOO\\n\") == 0, \"The third test case is incorrect.\"\nassert solution(\"4 3\\nOO\\nXO\\nXO\\nXO\\nOX\\nOO\\nOO\\n\") == 0, \"The fourth test case is incorrect.\"\nassert solution(\"5 4\\nOO\\nXO\\nXO\\nXO\\nXO\\nOO\\nOO\\n\") == 0, \"The fifth test case is incorrect.\""
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n2 0\\n0 2\\n-2 0') == '16'\nassert solution('4\\n2 0\\n0 2\\n-2 0') == '16'\nassert solution('4\\n2 0\\n0 2\\n-2 0') == '16'\nassert solution('4\\n2 0\\n0 2\\n-2 0') == '16'"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16'\nassert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16'\nassert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16'\nassert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16'\nassert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16'\nassert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16'\nassert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16'\nassert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16'\nassert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16'\nassert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16'\nassert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16'\nassert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16'\nassert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16'\nassert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16'\nassert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16'\nassert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16'\nassert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16'\nassert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16'\nassert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16'\nassert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16'\nassert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16'\nassert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16'\nassert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16'\nassert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16'\nassert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16'\nassert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16'\nassert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16'\nassert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16'\nassert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16'\nassert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16'\nassert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16'\nassert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16'\nassert solution"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n2 0\\n0 2\\n-2 0') == '16'\nassert solution('4\\n0 2\\n0 -2\\n2 0') == '16'\nassert solution('4\\n0 2\\n0 -2\\n0 0') == '16'\nassert solution('4\\n2 0\\n0 0\\n0 2') == '16'\nassert solution('4\\n-2 0\\n0 2\\n0 -2') == '16'\nassert solution('4\\n0 0\\n0 2\\n0 -2') == '16'"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16'\n"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 16"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\", \"Output should be 16\"\nassert solution(\"2\\n1\\n3\\n4\") == \"10\", \"Output should be 10\"\nassert solution(\"4\\n1 1\\n1 1\\n1 1\\n1 1\") == \"106\", \"Output should be 106\"\nassert solution(\"7\\n1 -1\\n-1 1\\n2 2\\n-2 -2\\n2 -2\\n-2 2\\n-1 -1\\n1 1\\n-1 -1\\n1 1\\n1 1\") == \"150\", \"Output should be 150\"\n\nfrom typing import List"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\\n\"\n"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16', 'Incorrect output'"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n2 0\\n0 2\\n-2 0') == 16\nprint('All tests passed!')\n"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"16\\n\"\n"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 80"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('test_input.txt', 'r')) == '80'\n\nsolution(open('test_input.txt', 'r'))"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"80\"\n"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Expected: {output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 10 50\\n8 8 2 -2\") == \"80\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == expected_output, f\"Expected output: {expected_output}, got: {solution(sample_input)}\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_str) == \"80\\n\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 10 50\\n8 8 2 -2\") == \"80\\n\"\n"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"80\", \"Your solution is incorrect.\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 10 50\\n8 8 2 -2\\n\") == \"80\\n\"\nassert solution(\"4 10 50\\n10 -100 200\\n\") == \"250\\n\"\nassert solution(\"4 10 50\\n-100 200 -100\\n\") == \"50\\n\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\"\n) == \"3.000000000\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '3.000000000\\n'"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3.000000000\\n\"\n"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n') == '3.000000000'\n"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6') == 3.0\nassert solution('1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n1000 1000') == 1000.0\nassert solution('1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n1000 -1000') == 1000.0\nassert solution('1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n1000 1000\\n500 -500') == 500.0\nassert solution('1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n1000 -1000\\n1000 0') == 1000.0\nassert solution('1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n1000 1000\\n500 500') == 500.0"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6''') == '3.000000000'\nassert solution('''2 3\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6''') == '3.000000000'"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n''') == '3.000000000'"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6') == '3.000000000\\n'\n"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\""
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\\n\"\nassert solution(\"2\\n0\\n2\\n3\\n\") == \"1\\n\"\nassert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\\n\""
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4') == '1\\n'\n"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\\n') == 1"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\\n\") == 1\nassert solution(\"4 3\\n0 1 1 1\\n1 2\\n2 3\\n2 4\\n\") == 1\nassert solution(\"5 4\\n0 1 0 0\\n1 2 0 0\\n2 3 0 0\\n3 4 0 0\\n\") == 2\nassert solution(\"5 4\\n0 1 1 1\\n1 2 1 1\\n2 3 1 1\\n3 4 1 1\\n\") == 2\nassert solution(\"6 5\\n0 1 0 0\\n1 2 0 0\\n2 3 0 0\\n3 4 0 0\\n4 5 0 0\\n\") == 3\nassert solution(\"6 5\\n0 1 1 1\\n1 2 1 1\\n2 3 1 1\\n3 4 1 1\\n4 5 1 1\\n\") == 3\nassert solution(\"7 6\\n0 1 0 0\\n1 2 0 0\\n2 3 0 0\\n3 4 0 0\\n4 5 0 0\\n5 6 0 0\\n\") == 4\nassert solution(\"7 6\\n0 1 1 1\\n1 2 1 1\\n2 3 1 1\\n3 4 1 1\\n4 5 1 1\\n5 6 1 1\\n\") == 4\nassert solution(\"8 7\\n0 1 0 0\\n1 2 0 0\\n2 3 0 0\\n3 4 0 0\\n4 5 0 0\\n5 6 0 0\\n6 7 0 0\\n\") == 5\nassert solution(\"8 7\\n0 1 1 1\\n1 2 1 1\\n2 3 1 1\\n3 4 1 1\\n4 5 1 1\\n5 6 1 1\\n6 7 1 1\\n\") == 5\nassert solution(\"9 8\\n0 1 0 0\\n1 2 0 0\\n2 3 0 0\\n3 4 0 0\\n4 5 0 0\\n5 6 0 0\\n6 7 0 0\\n7 8 0 0\\n\") == 6\nassert solution(\"9 8\\n0 1 1 1\\n1 2 1 1\\n2 3 1 1\\n3 4 1 1\\n4 5 1 1\\n5 6 1 1\\n6 7 1 1\\n7 8 1 1\\n\") == 6\nassert solution(\"10 9\\n0 1 0 0\\n1 2 0 0\\n2 3 0 0\\n3 4 0 0\\n4 5 0 0\\n5 6 0 0\\n6 7 0 0\\n7 8 0 0\\n8 9 0 0\\n\") == 7\nassert solution(\"10 9\\n0 1 1 1\\n1 2 1 1\\n2 3 1 1\\n3 4 1 1\\n4 5 1 1\\n5 6 1 1\\n6 7 1 1\\n7 8 1 1\\n8 9 1 1\\n\") == 7\nassert solution(\"11 10\\n0 1 0 0\\n1 2 0 0\\n2 3 0 0\\n3 4 0 0\\n4 5 0 0\\n5 6 0 0\\n6 7 0 0\\n7 8 0 0\\n8 9 0 0\\n9"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == 1\n"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '1'"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == 1\nassert solution(\"2 3\\n1 2\\n0 1\\n3 4\") == 2\nassert solution(\"1 1\\n0 1\\n1 1\") == 1\n\nfrom typing import List\n"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\"\n"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\\n\") == 1\n"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6.283185\""
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n3 3\n0 0\n0 1\n1 0\n0 1\n0 2\n1 2\n''') == '6.283185'"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\") == \"6.283185\""
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 6.283185\n"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == 6.283185\n"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"6.283185\", \"Test case failed\""
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\") == \"6.283185\"\n"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '6.283185'"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2') == '6.283185'\nassert solution('2 4\\n0 0\\n0 2\\n1 0\\n0 2\\n1 1') == '3.141593'\nassert solution('2 3\\n0 0\\n0 1\\n1 0\\n0 1\\n1 1') == '1.570796'"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"6.283185\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1 2 3\"\n"
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(2) == '1 2 3', \"The solution should output the numbers 1 to 2^N - 1 separated by spaces.\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n\") == \"1 2 3\\n\", \"Expected: 1 2 3\\nGot: {} instead.\".format(solution(\"2\\n\"))"
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, but got {solution(stdin)}\"\n"
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"1 2 3\"\nassert solution(\"3\") == \"1 2 3\"\nassert solution(\"4\") == \"1 2 3\"\nassert solution(\"5\") == \"1 2 3\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"1 2 3\\n\"\nassert solution(\"3\") == \"1 2 3\\n\"\nassert solution(\"4\") == \"1 2 3\\n\"\nassert solution(\"5\") == \"1 2 3\\n\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"1 2 3\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1 2 3\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"1 2 3\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"1 2 3\"\nassert solution(4) == \"1 2 4 3\"\nassert solution(5) == \"1 2 4 5 3\"\nassert solution(6) == \"1 2 4 5 6 3\"\nassert solution(7) == \"1 2 4 5 6 7 3\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\\n1 2 3 4\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n2 4\\n3 4\") == \"1\\n1 2 3 4\\n\"\nassert solution(\"4 3\\n1 2\\n2 3\\n3 4\") == \"1\\n2 3\\n\"\nassert solution(\"2 4\\n1 3\\n3 4\\n4 1\") == \"1\\n3 4\\n\"\nassert solution(\"5 5\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\") == \"1\\n5 6\\n7 8\\n9 10\\n\"\nassert solution(\"2 2\\n1 2\\n3 3\\n3 3\") == \"1\\n1 2\\n\"\nassert solution(\"3 3\\n1 1\\n2 2\\n2 2\") == \"1\\n1 2\\n\"\nassert solution(\"4 4\\n1 1\\n2 2\\n3 3\\n4 4\") == \"1\\n1 2\\n1 3\\n1 4\\n\"\nassert solution(\"3 3\\n1 1\\n2 2\\n2 2\\n3 3\") == \"1\\n1 2\\n\"\nassert solution(\"5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\") == \"1\\n1 2\\n1 3\\n1 4\\n\"\nassert solution(\"5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\") == \"1\\n1 2\\n1 3\\n1 4\\n\"\nassert solution(\"5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\") == \"1\\n1 2\\n1 3\\n1 4\\n\"\nassert solution(\"5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\") == \"1\\n1 2\\n1 3\\n1 4\\n\"\nassert solution(\"5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\") == \"1\\n1 2\\n1 3\\n1 4\\n\"\nassert solution(\"5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\") == \"1\\n1 2\\n1 3\\n1 4\\n\"\nassert solution(\"5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\") == \"1\\n1 2\\n1 3\\n1 4\\n\"\nassert solution(\"5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\") == \"1\\n1 2\\n1 3\\n1 4\\n\"\nassert solution(\"5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\") == \"1\\n1 2\\n1 3\\n1 4\\n\"\nassert solution(\"5 5\\n1 1\\n2 2\\"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1\\n1 2 3 4\\n\"\n"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\\n2 3\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 4\\n1 2\\n1 3\\n2 4\\n3 4') == '1\\n1 2 3 4'\nassert solution('4 2\\n2 4\\n3 1\\n3 2\\n4 3') == '1\\n2 4'\nassert solution('5 4\\n1 2\\n2 3\\n3 4\\n4 1\\n4 2\\n4 3\\n4 4\\n4 5\\n5 4') == '1\\n1 2 3 4 5'\nassert solution('4 0') == ''\nassert solution('2 1\\n1 2\\n3 4') == ''"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n') == '1\\n1 2 3 4\\n'"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"4 4\\n1 2\\n1 3\\n2 4\\n3 4\") == \"1\\n1 2 3 4\\n\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 4\\n1 2\\n1 3\\n2 4\\n3 4') == '1\\n1 2 3 4\\n'"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4 4\n1 2\n1 3\n2 4\n3 4\n\"\"\") == \"\"\"1\n1 2 3 4\n\"\"\"\n\nassert solution(\"\"\"\n4 4\n1 2\n1 3\n2 4\n3 4\n\"\"\") == \"\"\"\n2\n1 3 4\n\"\"\"\n\nassert solution(\"\"\"\n4 4\n1 2\n1 3\n2 4\n3 4\n\"\"\") == \"\"\"\n2\n1 3 4\n\"\"\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n\") == \"1\\n1 2 3 4\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r').read()) == 1, \"Expected 1, got {}.\".format(solution(open('input.txt', 'r').read()))"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\\n\"\n"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\\n\"\n"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\\n\""
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n1 2\") == 1\nassert solution(\"5 2\\n1 2\\n2 3\\n3 1\\n3 4\\n4 5\\n\") == 3\n"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 1\nassert solution() == 2\nassert solution() == 3\nassert solution() == 4\nassert solution() == 5\n"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 1\n"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"1\""
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"1\\n\"\nassert solution(\"4 2\\n0 1\\n1 2\\n1 3\\n2 3\\n\") == \"2\\n\"\nassert solution(\"7 4\\n0 1\\n1 2\\n1 3\\n2 4\\n3 5\\n4 6\\n5 6\\n6 7\\n\") == \"7\\n\"\nassert solution(\"8 6\\n0 1\\n1 2\\n1 3\\n2 4\\n3 5\\n4 6\\n5 6\\n6 7\\n7 8\\n\") == \"8\\n\"\nassert solution(\"10 9\\n0 1\\n1 2\\n1 3\\n2 4\\n3 5\\n4 6\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n\") == \"9\\n\""
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2) == 45, \"Incorrect output: 45 expected, but got: \" + str(solution(2))"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(2) == 45, \"The solution should return 45\""
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2) == 45"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2) == \"45\""
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == 45, \"Solution should be 45\"\n"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == \"45\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2) == 45"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2) == 45\n"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2) == 45\n"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2) == 45\n"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"4\\n\"\n"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    5 20 20\n    7 11 9 12 2\n''') == '4'\n\nassert solution('''\n    4 15 10\n    15 15 15\n    20 20 20\n    25 25 25\n''') == '3'\n\nassert solution('''\n    2 10 10\n    5 10 10\n    10 10 10\n    15 15 15\n''') == '3'\n\nassert solution('''\n    1 10 10\n    5 10 10\n    10 10 10\n    15 15 15\n''') == '3'\n\nassert solution('''\n    1 5 5\n    5 5 5\n    10 10 10\n    15 15 15\n''') == '4'"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"4\\n\", \"Please implement the solution.\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"4\", \"Incorrect Output\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Output the maximum number of customers that can be served today.\\n\", \"Incorrect solution\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\\n\"\nassert solution(\"5 20 20\\n7 11 11 12 2\") == \"5\\n\"\nassert solution(\"5 20 20\\n7 11 9 12 1\") == \"6\\n\"\nassert solution(\"5 20 20\\n7 11 11 12 2\") == \"5\\n\"\nassert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\\n\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"5 20 20\\n7 11 9 12 2\\n\") == \"4\\n\"\nassert solution(stdin=\"5 20 20\\n7 11 9 12 3\\n\") == \"0\\n\"\nassert solution(stdin=\"5 20 20\\n7 11 9 12 2\\n\") == \"4\\n\"\nassert solution(stdin=\"5 20 20\\n7 11 9 12 1\\n\") == \"3\\n\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\\n\"\n"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings') == '2\\n'\nassert solution('2 3\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\n') == '3\\n'"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 2, \"Solution is incorrect.\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n\") == \"2\\n\"\nassert solution(\"1 1\\n\") == \"1\\n\"\nassert solution(\"1 2\\n\") == \"1\\n\"\nassert solution(\"2 1\\n\") == \"2\\n\"\nassert solution(\"3 2\\n\") == \"2\\n\"\nassert solution(\"5 3\\n\") == \"3\\n\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n\") == \"2\\n\"\nassert solution(\"3 3\\njohn 1 lovesyou\\nmary 2 hasanevent\\nbob 1 smile\\n\") == \"3\\n\"\nassert solution(\"5 5\\njohn 1 lovejane\\nbob 2 lovebob\\ncharlie 1 lovecharlie\\n\") == \"5\\n\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings') == 2"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n') == '2\\n'\nassert solution('2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n\\n\\n') == '4\\n'"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2, \"The solution is incorrect. Expected 2, but got {}\".format(solution())"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\", \"Incorrect output. Expected 2, got {}\".format(solution(input()))"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == 2, \"Expected 2, got: \" + str(solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\"))\n"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 2, \"Your solution is not correct. Expected output: 2, got: {}\".format(solution)"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n01\") == \"2 1\"\nassert solution(\"1\\n00\") == \"1 1\"\nassert solution(\"1\\n10\") == \"2 1\"\nassert solution(\"1\\n11\") == \"2 1\"\nassert solution(\"1\\n
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '2 1'"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == '2 1'"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n01\") == \"2 1\""
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1\\n01') == '2 1'"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1\\n01') == '2 1\\n'\nassert solution('2\\n000\\n111\\n011\\n011') == '2 1\\n'\nassert solution('3\\n01\\n00\\n01\\n01\\n10\\n') == '2 1\\n'\nassert solution('4\\n10\\n01\\n11\\n10\\n01\\n10\\n') == '2 1\\n'\nassert solution('5\\n10\\n01\\n11\\n10\\n01\\n10\\n') == '2 1\\n'"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n01\") == \"2 1\"\n"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n01\") == \"2 1\"\n"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n01\") == \"2 1\"\nassert solution(\"2\\n01\") == \"1 1\"\nassert solution(\"3\\n11\") == \"3 2\"\nassert solution(\"5\\n1111\") == \"4 3\"\nassert solution(\"10\\n1111111\") == \"5 4\""
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n01\") == \"2 1\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n\"\nassert solution(\"6\\n3 1\\n1234\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n1234\\n2123\\n2123\\n\"\nassert solution(\"8\\n4 1\\n1234\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n1234\\n2123\\n2123\\n2123\\n2123\\n2123\\n2123\\n2123\\n2123\\n2123\\n2123\\n2123\\n2123\\n\"\nassert solution(\"5\\n3 1\\n1234\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n1234\\n2123\\n2123\\n2123\\n2123\\n\"\nassert solution(\"6\\n3 1\\n1234\\n2 2\\n21\\n10\\n2 2\\n23\\n12\\n\") == \"4 3\\n1234\\n2123\\n2123\\n2123\\n2123\\n2123\\n2123\\n2123\\n2123\\n2123\\n2123\\n2123\\n2123\\n2123\\n2123\\n2123\\n2123\\n2123\\n2123\\n2123\\n2123\\n\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n2233\\n2233\\n1111\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\"\nassert solution(\"1\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"2 2\\n21\\n1012\\n23\\n2233\\n2233\\n1111\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected_solution\n"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(None) == ''"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_data) == expected_output, f\"Test case {test_case} failed. Expected: {expected_output}, but got: {solution(input_data)}\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\\n\") == \"4 3\\n2123\\n1012\\n2123\\n2233\\n2233\\n1111\\n\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12') == '4 3\\n2123\\n1012\\n2123\\n'\nassert solution('3\\n4 2\\n1234\\n2 2\\n23\\n10\\n2 2\\n23\\n12') == '4 2\\n1234\\n2312\\n2312\\n'\nassert solution('3\\n4 1\\n2123\\n2 1\\n23\\n10\\n2 1\\n23\\n12') == '4 1\\n2123\\n2321\\n2321\\n'\nassert solution('3\\n4 1\\n2123\\n2 1\\n23\\n10\\n2 1\\n23\\n12\\n4 1\\n3456\\n2 1\\n34\\n12\\n2 1\\n34\\n12\\n') == '4 1\\n2123\\n3434\\n2312\\n2312\\n2312\\n2312\\n2312\\n2312\\n3434\\n2312\\n2312\\n2312\\n2312\\n2312\\n2312\\n2312\\n2312\\n'"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\"\n"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == '''def solution(stdin: str) -> str:\n    N, W, H = map(int, stdin.split())\n    pieces = []\n    for _ in range(N):\n        W_i, H_i = map(int, stdin.split())\n        pieces.extend(W_i * [\"\"] * H_i)\n    reconstructed = [\"\".join(pieces)]\n    for i in range(N - 1):\n        for j in range(len(pieces[i])):\n            for k in range(i + 1, N):\n                if pieces[i][j] == pieces[k][j]:\n                    pieces[i], pieces[k] = pieces[k], pieces[i]\n                    pieces[i].insert(j, pieces[i][j])\n                    break\n        for j in range(len(pieces[i])):\n            for k in range(i + 1, N):\n                if pieces[i][j] == pieces[k][j]:\n                    pieces[i], pieces[k] = pieces[k], pieces[i]\n                    pieces[i].append(pieces[i][j])\n                    break\n        for j in range(len(pieces[i])):\n            for k in range(i + 1, N):\n                if pieces[i][j] == pieces[k][j]:\n                    pieces[i], pieces[k] = pieces[k], pieces[i]\n                    pieces[i] = pieces[i].replace(pieces[i][j], \"\")\n                    pieces[k] = pieces[k].replace(pieces[k][j], \"\")\n    for i in range(N):\n        for j in range(W):\n            for k in range(H):\n                if pieces[i][j] == pieces[i][k] or pieces[i][j] == pieces[k][j]:\n                    return \"-\".join(map(str, range(1, N + 1))) + \"\\n\" + \"\".join(pieces[i][:j + 1] + [pieces[i][j]] + pieces[i][j + 1:])\n\n'''\nassert solution('3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12') == '''4 3\n2123\n1012\n2123\n'''\nassert solution('4\\n1 4\\n321\\n2 1\\n123\\n1 2\\n234\\n3 3') == '''4 3\n321\n1234\n'''"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2\\nvim-X11'\n"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2\\nvim-X11\\n'"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == '''\natk\nfreetype\nglib2\nlibattr\nlibjpeg\npcre\ngrep\nvim-common\nxorg-x11-libs\npango\nzlib\nlibtiff\ngtk2\nvim-X11\n''', solution\n\nsolution = '''\natk\nfreetype\nglib2\nlibattr\nlibjpeg\npcre\ngrep\nvim-common\nxorg-x11-libs\npango\nzlib\nlibtiff\ngtk2\nvim-X11\n'''"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == ['atk', 'freetype', 'glib2', 'libattr', 'libjpeg', 'pcre', 'grep', 'vim-common', 'xorg-x11-libs', 'pango', 'zlib', 'libtiff', 'gtk2', 'vim-X11']\n\nfrom collections import defaultdict"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('libattr vim-X11 vim-common gtk2 libattr vim-common gtk2 libtiff atk pango glib2 libtiff zlib libjpeg atk pango xorg-x11-libs freetype glib2 glib2 zlib libjpeg xorg-x11-libs grep freetype grep pcre pcre freetype glib2 xorg-x11-libs lisp emacs xorg-x11 lisp emacs 0') == ['atk', 'freetype', 'glib2', 'libattr', 'libjpeg', 'pcre', 'grep', 'vim-common', 'xorg-x11-libs', 'pango', 'zlib', 'libtiff', 'gtk2', 'vim-X11']\n\nassert solution('emacs xorg-x11 lisp') == ['lisp', 'emacs']"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin: str) -> str:\n    pass"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2\\nvim-X11\"\n\nfrom typing import List"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2\\nvim-X11\"\n"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r').readlines()) == ['atk', 'freetype', 'glib2', 'libattr', 'libjpeg', 'pcre', 'grep', 'vim-common', 'xorg-x11-libs', 'pango', 'zlib', 'libtiff', 'gtk2', 'vim-X11']"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == [\"atk\", \"freetype\", \"glib2\", \"libattr\", \"libjpeg\", \"pcre\", \"grep\", \"vim-common\", \"xorg-x11-libs\", \"pango\", \"zlib\", \"libtiff\", \"gtk2\", \"vim-X11\"]"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"32 20\") == \"16\""
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"32 20\") == \"16\"\n"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('32 20') == 16\n"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"16\"\nprint(\"Correct!\")\n"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('32 20') == '16\\n'\nassert solution('32 50') == '16\\n'\nassert solution('33 20') == '16\\n'\nassert solution('1000000000 20') == '16\\n'\nassert solution('32 0') == '16\\n'"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"32 20\") == \"16\"\nassert solution(\"200 10\") == \"8\"\nassert solution(\"100 200\") == \"2\"\nassert solution(\"1 100\") == \"1\""
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == output, f\"Test failed for {input()} with output {output}\""
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"32 20\") == \"16\"\nassert solution(\"20 30\") == \"16\"\nassert solution(\"10 50\") == \"2\"\nassert solution(\"5 100\") == \"2\"\nassert solution(\"1 1\") == \"1\""
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('32 20') == '16'\nassert solution('15 10') == '8'\nassert solution('16 10') == '16'\nassert solution('42 40') == '8'\nassert solution('98 90') == '16'"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"32 20\") == \"16\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 4\\n....\\n.#.#\\n....') == '5 13'\nprint(\"Test Passed\")"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Solution: {solution(input())}, Expected Output: {output()}\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"5 13\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 4\\n....\\n.#.#\\n....') == '5 13'"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 4\\n....\\n.#.#\\n....\\n') == '5 13'"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n....\\n.#.#\\n....\") == \"5 13\"\n\nfrom typing import List"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 4) == \"5 13\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 4\\n....\\n.#.#\\n....\\n') == '5 13\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('1 1\\n....\\n.#.#\\n....\\n') == '5 13\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('3 5\\n....\\n.#.#\\n....\\n') == '5 13\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('1 1\\n....\\n.#.#\\n....\\n') == '5 13\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n....\\n.#.#\\n....\") == \"5 13\"\n"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n....\\n.#.#\\n....\") == \"5 13\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\\n\"\nprint(solution(\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\"))"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"5\\n5\\n5\"\n"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"5\\n5\\n5\\n5\\n\"\n"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"\"\"\n5\n\"\"\"\n"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0') == '5\\n'"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"5\\n\"\n"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\\n\"\n"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    3 3\n    1 2 5 1\n    2 3 3 1\n    3 1? 0\n    \"\"\"\n) == \"5\\n\"\n\nassert solution(\n    \"\"\"\n    3 4\n    1 2 5 1\n    2 3 3 1\n    3 1? 0\n    4 2? 0\n    \"\"\"\n) == \"12\\n\"\n\nassert solution(\n    \"\"\"\n    4 5\n    1 2 5 1\n    2 3 3 1\n    3 1? 0\n    4 2? 0\n    5 3? 0\n    \"\"\"\n) == \"18\\n\"\n\nassert solution(\n    \"\"\"\n    6 8\n    1 2 5 1\n    2 3 3 1\n    3 1? 0\n    4 2? 0\n    5 3? 0\n    6 4? 0\n    7 5? 0\n    8 6? 0\n    \"\"\"\n) == \"30\\n\"\n\nassert solution(\n    \"\"\"\n    7 10\n    1 2 5 1\n    2 3 3 1\n    3 1? 0\n    4 2? 0\n    5 3? 0\n    6 4? 0\n    7 5? 0\n    8 6? 0\n    9 7? 0\n    10 8? 0\n    \"\"\"\n) == \"52\\n\""
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\\n\", \"Sample Output: {}\\n\".format(solution(stdin))"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == \"0\""
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == \"0\\n\"\nassert solution(\"1 2\\n-1 3\\n-1 4\\n0 4\\n1 5\\n-1 5\\n-1 6\\n0 6\\n\") == \"6\\n\"\nassert solution(\"5 6\\n-1 0\\n-1 1\\n0 1\\n1 2\\n-1 3\\n-1 4\\n0 4\\n1 5\\n-1 5\\n-1 6\\n0 6\\n\") == \"5\\n\"\n"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3\\n-1 0\\n-1 1\\n0 1') == '0'\n"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3\\n-1 0\\n-1 1\\n0 1') == '0\\n'\nassert solution('5 3\\n-1 0\\n-1 1\\n1 5') == '3\\n'\nassert solution('5 2\\n0 1\\n2 1\\n3 4') == '2\\n'\nassert solution('10 10\\n-1 0\\n-1 1\\n-1 2\\n-1 3\\n-1 4\\n-1 5') == '10\\n'\nassert solution('5 1\\n-1 0\\n-1 1\\n-1 2') == '0\\n'\nassert solution('1 1\\n0 0\\n1 1') == '1\\n'\nassert solution('10 10\\n-1 0\\n-1 1\\n-1 2\\n-1 3\\n-1 4\\n-1 5\\n6 6\\n-1 6\\n-1 7\\n-1 8\\n-1 9') == '10\\n'\nassert solution('1 1\\n0 0\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n-1 0\\n-1 1\\n-1 2\\n-1 3\\n-1 4\\n-1 5\\n-1 6\\n-1 7\\n-1 8\\n-1 9\\n-1 10') == '1\\n'\nassert solution('1 1\\n0 0\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n-1 0\\n-1 1\\n-1 2\\n-1 3\\n-1 4\\n-1 5\\n-1 6\\n-1 7\\n-1 8\\n-1 9\\n-1 10\\n-1 11\\n-1 12\\n-1 13\\n-1 14\\n-1 15\\n-1 16\\n-1 17\\n-1 18\\n-1 19\\n-1 20') == '1\\n'\nassert solution('1 1\\n0 0\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n-1 0\\n-1 1\\n-1 2\\n-1 3\\n-1 4\\n-1 5\\n-1 6\\n-1 7\\n-1 8\\n-1 9\\n-1 10\\n-1 11\\n-1 12\\n-1 13\\n-1 14\\n-1 15\\n-1 16\\n-1 17\\n-1 18\\n-1 19\\n-1 20\\n-1 21\\n-1 22\\n-1 23\\n-1 24\\n-1 25\\n-1 26\\n-1 27\\n-1 28\\n-1 29\\n-1 30\\n-1 31\\n-1 32\\n-1 33\\n-1 34\\n-1 35\\n-1 36\\n-1 37\\n-1 38\\n-1 39\\n-1 40\\n-1 41\\n-1 42\\n-1 43\\n-1 44\\n-1 45\\n-1 46\\n-1 47\\n-1 48\\n"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 3\\n-1 0\\n-1 1\\n0 1') == '0'\n"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == \"0\"\nassert solution(\"3 4\\n-1 2\\n-1 3\\n-1 4\") == \"3\"\nassert solution(\"4 5\\n-1 4\\n-1 5\\n-1 6\") == \"4\"\nassert solution(\"5 6\\n-1 6\\n-1 7\\n-1 8\") == \"5\"\nassert solution(\"6 7\\n-1 8\\n-1 9\\n-1 10\") == \"6\"\nassert solution(\"7 8\\n-1 10\\n-1 11\\n-1 12\") == \"7\"\nassert solution(\"8 9\\n-1 12\\n-1 13\\n-1 14\") == \"8\"\nassert solution(\"9 10\\n-1 14\\n-1 15\\n-1 16\") == \"9\"\nassert solution(\"10 11\\n-1 16\\n-1 17\\n-1 18\") == \"10\"\nassert solution(\"11 12\\n-1 18\\n-1 19\\n-1 20\") == \"11\"\nassert solution(\"12 13\\n-1 20\\n-1 21\\n-1 22\") == \"12\"\nassert solution(\"13 14\\n-1 22\\n-1 23\\n-1 24\") == \"13\"\nassert solution(\"14 15\\n-1 24\\n-1 25\\n-1 26\") == \"14\"\nassert solution(\"15 16\\n-1 26\\n-1 27\\n-1 28\") == \"15\"\nassert solution(\"16 17\\n-1 28\\n-1 29\\n-1 30\") == \"16\"\nassert solution(\"17 18\\n-1 30\\n-1 31\\n-1 32\") == \"17\"\nassert solution(\"18 19\\n-1 32\\n-1 33\\n-1 34\") == \"18\"\nassert solution(\"19 20\\n-1 34\\n-1 35\\n-1 36\") == \"19\"\nassert solution(\"20 21\\n-1 36\\n-1 37\\n-1 38\") == \"20\"\nassert solution(\"21 22\\n-1 38\\n-1 39\\n-1 40\") == \"21\"\nassert solution(\"22 23\\n-1 40\\n-1 41\\n-1 42\") == \"22\"\nassert solution(\"23 24\\n-1 42\\n-1 43\\n-1 44\") == \"23\"\nassert solution(\"24 25\\n-1 44\\n-1 45\\n-1 46\") == \"24\"\nassert solution(\"25 26\\n-1 46\\n-1 47\\n-1 48\") == \"25\"\nassert solution(\"26 27\\n-1 48\\n-1 49\\n-1 50\") == \"26\"\nassert solution(\"27 28\\n-1 50\\n-1 51\\n-1 52\") == \"27\"\nassert solution(\"28 29\\n-1 52\\n-1 53\\n-1 54\") == \"28\"\nassert solution(\"29 30\\n-1 54\\n-1 55\\n-1 56\") == \"29\"\nassert solution(\"30 31\\n-1 56\\n-1 57\\n-1 58\") == \"30\"\nassert solution(\"31 32\\n-1 58\\n-1 "
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"0\""
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(b\"\"\"\n    4\n    9 6 2 4\n    \"\"\") == \"6\\n\"\n\nassert solution(b\"\"\"\n    5\n    1 2 3 4 5\n    \"\"\") == \"12\\n\"\n\nassert solution(b\"\"\"\n    6\n    7 11 13 17 19\n    \"\"\") == \"36\\n\"\n\nassert solution(b\"\"\"\n    7\n    3 4 7 8 10 11\n    \"\"\") == \"26\\n\"\n\nassert solution(b\"\"\"\n    8\n    1 2 4 7 10 15 20\n    \"\"\") == \"45\\n\"\n\nassert solution(b\"\"\"\n    9\n    4 5 10 20 30 50 100\n    \"\"\") == \"200\\n\"\n\nassert solution(b\"\"\"\n    10\n    100 200 500 1000\n    \"\"\") == \"1000\\n\""
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('example.in').read()) == '6\\n'\nassert solution(open('input.txt').read()) == '6\\n'"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n9 6 2 4\") == \"6\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\\n# Test the correctness of solution\""
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_str) == output_str, f\"The solution is '{solution(input_str)}', but expected '{output_str}'.\"\nfor i in range(1, 5):\n    assert solution(input_str) == output_str, f\"The solution is '{solution(input_str)}', but expected '{output_str}'.\""
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '6'\n"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_data) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input_data)}\""
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '6'"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(input())) == '6\\n'"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4 5\") == \"6\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"12\"\n"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"6\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2.000000\\n\"\n"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1 1 3 2\\n2 5 1\") == \"2.000000\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2.000000\\n\"\n"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1 1 3 2\\n2 5 1\") == \"2.000000\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1 1 3 2\\n2 5 1\") == \"2.000000\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1 1 3 2\\n2 5 1\") == \"2.000000\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2.000000\\n\", \"Sample Output\"\n"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1 1 3 2\\n2 5 1\") == 2.0\nprint(\"All tests passed!\")"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 1 1 3 2') == '2.000000'\n\nassert solution('2 5 1') == '2.000000'\n\nfrom typing import List"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1 1 3 2\") == \"2.000000\"\nassert solution(\"2 5 1\") == \"2.000000\"\n"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2\\n2 3\\n4\\n1 2\\n1 3\\n1 4\") == \"96\"\nassert solution(\"3\\n1 2\\n2 3\\n4\\n1 2\\n1 3\\n1 4\") == \"96\"\nassert solution(\"3\\n1 2\\n2 3\\n4\\n1 2\\n1 3\\n1 4\") == \"96\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([3, 1, 2, 2, 3, 4, 1, 2, 1, 3, 1, 4]) == 96\nassert solution([3, 1, 2, 2, 3, 4, 1, 2, 1, 3, 1, 4, 4, 2, 1, 3, 2, 1, 3, 1]) == 224\nassert solution([3, 1, 2, 2, 3, 4, 1, 2, 1, 3, 1, 4]) == 96\nassert solution([3, 1, 2, 2, 3, 4, 1, 2, 1, 3, 1, 4, 4, 2, 1, 3, 2, 1, 3, 1]) == 224"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"96\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"96\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n1 2\\n2 3\\n4\\n1 2\\n1 3\\n1 4') == '96'"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 96, \"Expected 96, but got {}\".format(solution())"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 96\nassert solution(4) == 96\nassert solution(5) == 0"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"96\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"96\"\nprint(\"All tests passed\")\n"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2\\n2 3\\n4\\n1 2\\n1 3\\n1 4') == '96'"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output\nprint(output)"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 3\n"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 3"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Output one line with a single integer: The weight of a Minimum Spanning Tree that spans these N points.\\n\", \"Solution is not correct!\""
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\\n\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"The output is incorrect.\""
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\\n10\\n\""
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('0 0\\n0 1\\n1 0\\n1 1\\n') == '3\\n'"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 8\\n3 1\\n1 4\") == \"10\\n10\\n9\\n\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"10\\n10\\n9\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 8\\n3 1\\n1 4\") == \"10\\n10\\n9\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 8\\n3 1\\n1 4\") == \"10\\n10\\n9\"\n"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"10\\n10\\n9\"\nprint(\"Test passed\")"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n2 8\\n3 1\\n1 4') == '10\\n10\\n9\\n'\nassert solution('3\\n2 9\\n4 7\\n4 6\\n2 6\\n2 5\\n2 8\\n2 3\\n1 1\\n1 2\\n2 2\\n1 3') == '27\\n15\\n24\\n20\\n16\\n14\\n13\\n12\\n11\\n10\\n'\nassert solution('4\\n10\\n6\\n1\\n7\\n9\\n5\\n8\\n3\\n4\\n10\\n6\\n1\\n7\\n9\\n5\\n8\\n3\\n4\\n10\\n6\\n1\\n7\\n9\\n5\\n8\\n3\\n4\\n10\\n6\\n1\\n7\\n9\\n5\\n8\\n3\\n4\\n10\\n6\\n1\\n7\\n9\\n5\\n8\\n3\\n4\\n10\\n6\\n1\\n7\\n9\\n5\\n8\\n3\\n4\\n10\\n6\\n1\\n7\\n9\\n5\\n8\\n3\\n4\\n10\\n6\\n1\\n7\\n9\\n5\\n8\\n3\\n4\\n10\\n6\\n1\\n7\\n9\\n5\\n8\\n3\\n4\\n10\\n6\\n1\\n7\\n9\\n5\\n8\\n3\\n4\\n10\\n6\\n1\\n7\\n9\\n5\\n8\\n3\\n4\\n10\\n6\\n1\\n7\\n9\\n5\\n8\\n3\\n4\\n10\\n6\\n1\\n7\\n9\\n5\\n8\\n3\\n4\\n10\\n6\\n1\\n7\\n9\\n5\\n8\\n3\\n4\\n10\\n6\\n1\\n7\\n9\\n5\\n8\\n3\\n4\\n10\\n6\\n1\\n7\\n9\\n5\\n8\\n3\\n4\\n10\\n6\\n1\\n7\\n9\\n5\\n8\\n3\\n4\\n10\\n6\\n1\\n7\\n9\\n5\\n8\\n3\\n4\\n10\\n6\\n1\\n7\\n9\\n5\\n8\\n3\\n4\\n10\\n6\\n1\\n7\\n9\\n5\\n8\\n3\\n4\\n10\\n6\\n1\\n7\\n9\\n5\\n8\\n3\\n4\\n10\\n6\\n1\\n7\\n9\\n5\\n8\\n3\\n4\\n10\\n6\\n1\\n7\\n9\\n5\\n8\\n3\\n4\\n10\\n6\\n1\\n7\\n9\\n5\\n8\\n3\\n4\\n10\\n6\\n1\\n7\\n9\\n5\\n8\\n3\\n4\\n10\\n6\\n1\\n7\\n9\\n5\\n8\\n3\\n4\\n10\\n6\\n1\\n7\\n9\\n5\\n8\\n3\\n4\\n10\\n6\\n1\\n7\\n9\\n5\\n8\\n3\\n4\\n10\\n6\\n1\\n7\\n9\\n5\\n8\\n3\\n4\\n10\\n6\\n1\\n7\\n9\\n5\\n8\\n3\\n4\\n10\\n6\\n1\\n7\\n9\\n5\\n8\\n3\\n4\\n10\\n6\\n1\\n7\\n"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 8\\n3 1\\n1 4\") == \"10\\n10\\n9\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n2 8\\n3 1\\n1 4\\n') == '10\\n10\\n9\\n'"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2 8\n3 1\n1 4) == 10\nassert solution(1 4\n2 8\n3 1) == 10\nassert solution(1 4\n2 8\n3 1) == 9\n"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n2 8\\n3 1\\n1 4') == '10\\n10\\n9'"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == \"3\\n3\""
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 4\\n####\\n#JF#\\n#..#\\n#..#\\n') == '3'\nassert solution('3 4\\n#..#\\n..#\\n..#\\n#..#\\n#..#\\n') == '3'\nassert solution('4 4\\n####\\n#JF#\\n#..#\\n#..#\\n#JF#\\n#..#\\n') == '3'\nassert solution('5 5\\n####\\n#JF#\\n#..#\\n#..#\\n#JF#\\n#..#\\n#JF#\\n#..#\\n') == '1'\nassert solution('5 5\\n####\\n#JF#\\n#..#\\n#..#\\n#..#\\n#JF#\\n#..#\\n#JF#\\n#..#\\n#JF#\\n#..#\\n') == '1'\n"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == '1'\nassert solution(open('input2.txt', 'r')) == '3'"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 4\\n####\\n#JF#\\n#..#\\n#..#\\n') == '3\\nIMPOSSIBLE\\n'\nassert solution('5 5\\n###\\n###\\n###\\n') == '1\\n30\\n'\nassert solution('3 4\\n####\\n#J#\\n#..#\\n#..#\\n') == '1\\n15\\n'\nassert solution('1 1\\n###\\n###\\n###\\n') == '3\\nIMPOSSIBLE\\n'"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"4 4\n####\n"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"4 4\\n####\\n#..#\\n#JF#\\n#..#\\n\") == \"3\"\nassert solution(\"4 4\\n####\\n#..#\\n#..#\\n#JF#\\n\") == \"3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\""
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\\n\") == 0.3333333333, \"Incorrect output\"\nassert solution(\"1 2 2\\n2\\n1 1\\n\") == 0.3333333333, \"Incorrect output\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '0.3333333333\\n'\n"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 0.3333333333\n"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 2 2\\n2\\n1 1\\n') == 0.3333333333"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 2 2\\n2\\n1 1\\n') == '0.3333333333\\n'\nassert solution('10 4 10\\n3\\n1 1\\n') == '0.75\\n'\nassert solution('1 2 2\\n2\\n1 1\\n') == '0.3333333333\\n'\n"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\") == 0.3333333333\nassert solution(\"1 2 2\\n1\\n2\") == 0.3333333333\nassert solution(\"1 2 2\\n3\\n1 1\") == 0.0\nassert solution(\"1 2 2\\n2\\n1 2\") == 0.0\nassert solution(\"1 2 2\\n2\\n1 1\") == 0.0\nassert solution(\"1 2 2\\n2\\n1 2\") == 0.0\nassert solution(\"1 2 2\\n2\\n1 1\") == 0.0\nassert solution(\"1 2 2\\n2\\n1 2\") == 0.0\nassert solution(\"1 2 2\\n2\\n1 1\") == 0.0\nassert solution(\"1 2 2\\n2\\n1 2\") == 0.0\nassert solution(\"1 2 2\\n2\\n1 1\") == 0.0\nassert solution(\"1 2 2\\n2\\n1 2\") == 0.0\nassert solution(\"1 2 2\\n2\\n1 1\") == 0.0\nassert solution(\"1 2 2\\n2\\n1 2\") == 0.0\nassert solution(\"1 2 2\\n2\\n1 1\") == 0.0\nassert solution(\"1 2 2\\n2\\n1 2\") == 0.0\nassert solution(\"1 2 2\\n2\\n1 1\") == 0.0\nassert solution(\"1 2 2\\n2\\n1 2\") == 0.0\nassert solution(\"1 2 2\\n2\\n1 1\") == 0.0\nassert solution(\"1 2 2\\n2\\n1 2\") == 0.0\nassert solution(\"1 2 2\\n2\\n1 1\") == 0.0\nassert solution(\"1 2 2\\n2\\n1 2\") == 0.0\nassert solution(\"1 2 2\\n2\\n1 1\") == 0.0\nassert solution(\"1 2 2\\n2\\n1 2\") == 0.0\nassert solution(\"1 2 2\\n2\\n1 1\") == 0.0\nassert solution(\"1 2 2\\n2\\n1 2\") == 0.0\nassert solution(\"1 2 2\\n2\\n1 1\") == 0.0\nassert solution(\"1 2 2\\n2\\n1 2\") == 0.0\nassert solution(\"1 2 2\\n2\\n1 1\") == 0.0\nassert solution(\"1 2 2\\n2\\n1 2\") == 0.0\nassert solution(\"1 2 2\\n2\\n1 1\") == 0.0\nassert solution(\"1 2 2\\n2\\n1 2\") == 0.0\nassert solution(\"1 2 2\\n2\\n1 1\") == 0.0\nassert solution(\"1 2 2\\n2\\n1 2\") == 0.0\nassert solution(\"1 2 2\\n2\\n1 1\") == 0.0\nassert solution(\"1 2 2\\n2\\n1 2\") == 0.0\nassert solution(\"1 2 2\\n2\\n1 1\") == 0.0\nassert solution(\"1 2 2\\n2\\n1 2\") == 0.0\nassert solution(\"1 2 2\\n2\\n1 1\") == 0.0\nassert solution(\"1 2 2\\n2\\n1 2\") == 0.0\nassert solution(\"1 2 2\\n2\\n1 1\") == 0.0\nassert solution(\"1 2 2\\n2\\n1 2\") == 0.0\nassert solution(\"1 2 2\\n2\\n1 1\") == 0.0\nassert solution(\"1 2 2\\n2\\n1 2\") == 0."
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\\n\") == \"0.3333333333\"\n"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"0.3333333333\", \"Output should be 0.3333333333\"\n"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"1 2 2\\n2\\n1 1\\n\") == \"0.3333333333\\n\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\") == \"0.3333333333\"\n"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1023\"\n"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1023\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\n1\\n\") == \"1023\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution.__doc__ == \"Print a single integer \u2014 the maximum number of members in the agency, if each is assigned a unique valid ID.\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 1023 # check if the correct solution is provided\n"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '1023'"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"The output is {solution(input())}, but you should return {output()}\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1023\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test failed. Output: {output}, Expected: {output}\"\n"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == \"6\\n\", \"Test failed\"\n"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=None) == \"6\", \"Test 1\"\nassert solution(stdin=\"2 2\") == \"6\", \"Test 2\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '6\\n'\n"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2, 2) == 6, \"Expected 6, got {}\".format(solution(2, 2))"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 2') == 6, \"The output is not the expected value.\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"6\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n\") == \"6\\n\"\n"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"6\\n\"\nassert solution(\"10 10\") == \"100\\n\"\nassert solution(\"0 0\") == \"0\\n\"\nassert solution(\"1 1\") == \"1\\n\"\nassert solution(\"3 5\") == \"17\\n\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '6\\n'\n"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case failed: {sample_input}!= {sample_output}\"\n\nsample_input = [2, 2]\nsample_output = 6"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"2930\\n\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500') == '2930\\n'\nprint(solution(''))"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n') == '2930\\nImpossible\\n'"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n') == '2930\\n'\nassert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n10000\\n14000\\n15000\\n') == 'Impossible\\n'\nassert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n10000\\n14000\\n15000\\n100000\\n140000\\n150000\\n') == 'Impossible\\n'\nassert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n10000\\n14000\\n15000\\n100000\\n140000\\n150000\\n1000000\\n1400000\\n1500000\\n') == 'Impossible\\n'"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"2930\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2930\\n\", \"Expected: 2930\\nActual: {}\".format(solution())"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    1000 2000 7\n    100\n    480\n    500\n    550\n    1000\n    1400\n    1500\n    2000\n    2500\n    2800\n    3000\n    3500\n    4000\n    4500\n    5000\n    5500\n    6000\n    6500\n    7000\n    7500\n    8000\n    8500\n    9000\n    9500\n    10000\n    11000\n    12000\n    13000\n    14000\n    15000\n    16000\n    17000\n    18000\n    19000\n    20000\n    21000\n    22000\n    23000\n    24000\n    25000\n    26000\n    27000\n    28000\n    29000\n    30000\n    31000\n    32000\n    33000\n    34000\n    35000\n    36000\n    37000\n    38000\n    39000\n    40000\n    41000\n    42000\n    43000\n    44000\n    45000\n    46000\n    47000\n    48000\n    49000\n    50000\n    51000\n    52000\n    53000\n    54000\n    55000\n    56000\n    57000\n    58000\n    59000\n    60000\n    61000\n    62000\n    63000\n    64000\n    65000\n    66000\n    67000\n    68000\n    69000\n    70000\n    71000\n    72000\n    73000\n    74000\n    75000\n    76000\n    77000\n    78000\n    79000\n    80000\n    81000\n    82000\n    83000\n    84000\n    85000\n    86000\n    87000\n    88000\n    89000\n    90000\n    91000\n    92000\n    93000\n    94000\n    95000\n    96000\n    97000\n    98000\n    99000\n    100000\n    101000\n    102000\n    103000\n    104000\n    105000\n    106000\n    107000\n    108000\n    109000\n    110000\n    111000\n    112000\n    113000\n    114000\n    115000\n    116000\n    117000\n    118000\n    119000\n    120000\n    121000\n    122000\n    123000\n    124000\n    125000\n    126000\n    127000\n    128000\n    129000\n    130000\n    131000\n    132000\n    133000\n    134000\n    135000\n    136000\n    137000\n    138000\n    139000\n    140000\n    141000\n    142000\n    143000\n    144000\n    145000\n    146000\n    147000\n    148000\n    149000\n    1500"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"2930\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n\") == \"2930\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n\") == \"2930\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"2\"\n"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 2 3\\n0\\n0\\n1\\n') == '2'"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='1 2 3\\n0\\n0\\n1') == '2'"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == \"2\\n\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected_output, f\"Test case {i+1} failed. Expected output: {expected_output}, got: {solution}\"\n"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\") == 2, \"Output: 2\"\nassert solution(\"0\") == 0, \"Output: 0\"\nassert solution(\"0 1 2 3\") == 2, \"Output: 2\"\nassert solution(\"0 1 2 3 4 5 6\") == 5, \"Output: 5\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\", \"The expected output does not match the actual output.\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 2 3\\n0\\n0\\n1\\n') == '2'\nassert solution('1 2 3\\n1\\n0\\n0\\n') == '2'\nassert solution('1 2 3\\n1\\n1\\n1\\n') == '3'"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\") == \"10\"\nassert solution(\"3 5\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\") == \"20\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '10'\n\nsolution = '''def solution(stdin: str) -> str:\n    h, w = map(int, stdin.split())\n    map = [[0] * w for _ in range(h)]\n    \n    for _ in range(h):\n        for _ in range(w):\n            map[_][_] = map[_[0]][_][_] = int(stdin.split()[_])\n    \n    i, j = map.index(map[0]), 0\n    volume = 0\n    while True:\n        volume += sum(map[max(i-1, 0):min(i+2, h)][min(j, w):max(j+2, w)])\n        \n        if i == 0 or i == h-1 or j == 0 or j == w-1:\n            break\n        else:\n            map[i][j] = -1  # Mark the square as visited\n    \n    return str(volume)\n'''\n\nprint(solution())"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\") == \"10\"\nassert solution(\"4 5\\n-2 -2 -3\\n3 4 5\\n-6 -4 -1\") == \"25\"\n"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"10\", \"The given solution is incorrect.\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\") == \"10\"\n"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\") == \"10\\n\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 10, \"Please implement the solution.\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\") == \"10\\n\"\n"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    3 3\n    1 -2 -1\n    5 4 -5\n    2 2\n    ''') == '10\\n'"
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n    5 3\n    1 2 1000\n    2 3 1000\n    4 5 500\n    2\n    \"\"\") == \"3100\\n\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('frida.in', 'r').read()) == '3100'"
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n\") == \"3100\\n\"\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n6 4 1000\") == \"6000\\n\"\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n\") == \"5000\\n\"\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n6 4 1000\") == \"6000\\n\"\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n6 4 1000\\n\") == \"7000\\n\"\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n6 4 1000\\n7 6 7000\") == \"87000\\n\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n') == '3100\\n'"
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n\") == \"3100\\n\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output, \"The solution is incorrect.\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"3100\"\nprint(solution)"
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300') == '3100\\n'\nassert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300') == '3100\\n'"
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300') == '3100\\n'\nassert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n6 7 600') == '2300\\n'\nassert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n6 7 600\\n8 9 500') == '3800\\n'\nassert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n6 7 600\\n8 9 500\\n10 11 400') == '7200\\n'\nassert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n6 7 600\\n8 9 500\\n10 11 400\\n12 13 300') == '10600\\n'\nassert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n6 7 600\\n8 9 500\\n10 11 400\\n12 13 300\\n14 15 200') == '16600\\n'\nassert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n6 7 600\\n8 9 500\\n10 11 400\\n12 13 300\\n14 15 200\\n16 17 1000') == '26000\\n'\nassert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n6 7 600\\n8 9 500\\n10 11 400\\n12 13 300\\n14 15 200\\n16 17 1000\\n18 19 700') == '35000\\n'"
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\"\n"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 1\\n0 1') == '0'\nassert solution('3 2\\n1 2\\n2 0\\n1 1') == '2'\nassert solution('4 3\\n1 2\\n2 0\\n1 1') == '6'"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 1\\n0 1\\nSample Output: 0\\n') == '0'\nassert solution('2 1\\n1 2\\nSample Output: 2\\n') == '2'\nassert solution('2 2\\n2 1\\nSample Output: 1\\n') == '1'\nassert solution('2 1\\n0 2\\nSample Output: 3\\n') == '3'\nassert solution('2 3\\n0 2\\nSample Output: 5\\n') == '5'\nassert solution('2 5\\n0 3\\nSample Output: 7\\n') == '7'\nassert solution('2 7\\n0 4\\nSample Output: 11\\n') == '11'\nassert solution('2 9\\n0 5\\nSample Output: 13\\n') == '13'\nassert solution('2 10\\n0 6\\nSample Output: 19\\n') == '19'\nassert solution('2 12\\n0 7\\nSample Output: 31\\n') == '31'\nassert solution('2 14\\n0 8\\nSample Output: 37\\n') == '37'\nassert solution('2 16\\n0 9\\nSample Output: 37\\n') == '37'\nassert solution('2 18\\n0 10\\nSample Output: 37\\n') == '37'\nassert solution('2 20\\n0 11\\nSample Output: 37\\n') == '37'\nassert solution('2 22\\n0 12\\nSample Output: 37\\n') == '37'\nassert solution('2 24\\n0 13\\nSample Output: 37\\n') == '37'\nassert solution('2 26\\n0 14\\nSample Output: 37\\n') == '37'\nassert solution('2 28\\n0 15\\nSample Output: 37\\n') == '37'\nassert solution('2 30\\n0 16\\nSample Output: 37\\n') == '37'\nassert solution('2 32\\n0 17\\nSample Output: 37\\n') == '37'\nassert solution('2 34\\n0 18\\nSample Output: 37\\n') == '37'\nassert solution('2 36\\n0 19\\nSample Output: 37\\n') == '37'\nassert solution('2 38\\n0 20\\nSample Output: 37\\n') == '37'\nassert solution('2 40\\n0 21\\nSample Output: 37\\n') == '37'\nassert solution('2 42\\n0 22\\nSample Output: 37\\n') == '37'\nassert solution('2 44\\n0 23\\nSample Output: 37\\n') == '37'\nassert solution('2 46\\n0 24\\nSample Output: 37\\n') == '37'\nassert solution('2 48\\n0 25\\nSample Output: 37\\n') == '37'\nassert solution('2 50\\n0 26\\nSample Output: 37\\n') == '37'\nassert solution('2 52\\n0 27\\nSample Output: 37\\n') == '37'\nassert solution('2 54\\n0 28\\nSample Output: 37\\n') == '37'\nassert solution('2 56\\n0 29\\nSample Output: 37\\n') == '37'\nassert solution('2 58\\n0 30\\nSample Output: 37\\n') == '37'\nassert solution('2 60\\n0 31\\nSample Output: 37\\n') == '37'\nassert solution('2 62\\n0 32\\nSample Output: 37\\n') == '37'\nassert solution('2 64\\"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0\""
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(None) == 0\nassert solution(None) == 0\nassert solution(None) == 0\nassert solution(None) == 0\nassert solution(None) == 0"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n0 1\\n\") == \"0\\n\"\nassert solution(\"2 1\\n1 0\\n1 2\\n\") == \"2\\n\"\nassert solution(\"2 2\\n0 1\\n1 0\\n1 2\\n2 1\\n2 3\\n\") == \"4\\n\""
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n0 1\\n0 2\\n1 2\\n2 2\") == \"0\\n2\\n\"\nassert solution(\"2 3\\n0 1\\n0 2\\n1 2\\n2 2\\n3 3\") == \"2\\n3\\n\"\nassert solution(\"1 2\\n0 1\\n1 2\\n2 2\\n3 3\\n4 4\") == \"3\\n4\\n\"\nassert solution(\"1 3\\n0 1\\n1 2\\n2 2\\n3 3\\n4 4\\n5 5\") == \"4\\n5\\n\"\nassert solution(\"5 6\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\") == \"6\\n7\\n\"\nassert solution(\"6 7\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\") == \"8\\n9\\n\"\nassert solution(\"7 8\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\") == \"10\\n11\\n\"\nassert solution(\"8 9\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\") == \"12\\n13\\n\"\nassert solution(\"9 10\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\") == \"14\\n15\\n\"\nassert solution(\"10 11\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\") == \"16\\n17\\n\"\nassert solution(\"11 12\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\") == \"18\\n19\\n\"\nassert solution(\"12 13\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\") == \"20\\n21\\n\"\nassert solution(\"13 14\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\") == \"22\\n23\\n\"\nassert solution(\"14 15\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\") == \"24\\n25\\n\"\nassert solution(\"15 16\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 "
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 1\\n0 1\\n') == '0\\n'"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n0 1\") == \"0\\n\"\nassert solution(\"4 2\\n0 1\\n1 3\\n0 2\\n2 3\\n1 2\") == \"1\\n\""
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"0\"\n"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"0\\n\"\n"
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 10') == '10'"
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 10, \"The correct solution is incorrect\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 10\") == \"10\\n\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"10\\n\"\n"
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 10\") == \"10\"  # sample output"
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 10\") == \"10\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 10\") == \"10\"\nassert solution(\"1 20\") == \"1\"\nassert solution(\"2 10\") == \"2\"\nassert solution(\"3 10\") == \"1\"\nassert solution(\"5 10\") == \"0\"\nassert solution(\"7 10\") == \"3\"\nassert solution(\"13 10\") == \"1\"\nassert solution(\"14 10\") == \"0\"\nassert solution(\"30 10\") == \"1\"\nassert solution(\"31 10\") == \"2\"\nassert solution(\"41 10\") == \"3\"\nassert solution(\"42 10\") == \"2\"\nassert solution(\"50 10\") == \"1\"\nassert solution(\"51 10\") == \"0\"\nassert solution(\"73 10\") == \"1\"\nassert solution(\"74 10\") == \"0\"\nassert solution(\"75 10\") == \"3\"\nassert solution(\"76 10\") == \"2\"\nassert solution(\"77 10\") == \"1\"\nassert solution(\"78 10\") == \"0\"\nassert solution(\"79 10\") == \"3\"\nassert solution(\"80 10\") == \"2\"\nassert solution(\"81 10\") == \"1\"\nassert solution(\"82 10\") == \"0\"\nassert solution(\"83 10\") == \"3\"\nassert solution(\"84 10\") == \"2\"\nassert solution(\"85 10\") == \"1\"\nassert solution(\"86 10\") == \"0\"\nassert solution(\"87 10\") == \"3\"\nassert solution(\"88 10\") == \"2\"\nassert solution(\"89 10\") == \"1\"\nassert solution(\"90 10\") == \"0\"\nassert solution(\"91 10\") == \"3\"\nassert solution(\"92 10\") == \"2\"\nassert solution(\"93 10\") == \"1\"\nassert solution(\"94 10\") == \"0\"\nassert solution(\"95 10\") == \"3\"\nassert solution(\"96 10\") == \"2\"\nassert solution(\"97 10\") == \"1\"\nassert solution(\"98 10\") == \"0\"\nassert solution(\"99 10\") == \"3\"\nassert solution(\"100 10\") == \"2\"\nassert solution(\"101 10\") == \"1\"\nassert solution(\"102 10\") == \"0\"\nassert solution(\"103 10\") == \"3\"\nassert solution(\"104 10\") == \"2\"\nassert solution(\"105 10\") == \"1\"\nassert solution(\"106 10\") == \"0\"\nassert solution(\"107 10\") == \"3\"\nassert solution(\"108 10\") == \"2\"\nassert solution(\"109 10\") == \"1\"\nassert solution(\"110 10\") == \"0\"\nassert solution(\"111 10\") == \"3\"\nassert solution(\"112 10\") == \"2\"\nassert solution(\"113 10\") == \"1\"\nassert solution(\"114 10\") == \"0\"\nassert solution(\"115 10\") == \"3\"\nassert solution(\"116 10\") == \"2\"\nassert solution(\"117 10\") == \"1\"\nassert solution(\"118 10\") == \"0\"\nassert solution(\"119 10\") == \"3\"\nassert solution(\"120 10\") == \"2\"\nassert solution(\"121 10\") == \"1\"\nassert solution(\"122 10\") == \"0\"\nassert solution(\"123 10\") == \"3\"\nassert solution(\"124 10\") == \"2\"\nassert solution(\"125 10\") == \"1\"\nassert solution(\"126 10\") == \"0\"\nassert solution(\"127 10\") == \"3\"\nassert solution(\"128 10\") == \"2\"\nassert solution(\"129 10\") == \"1\"\nassert solution(\"130 "
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 10, \"Your solution is incorrect\"\n"
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 10\") == \"10\"  # expected output: \"10\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '10\\n'"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 0, \"Expected output 0, but got {}\".format(solution())"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case {i+1} failed\" for i, (sample_input, sample_output) in enumerate(tests)"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\") == 0, \"Incorrect solution\""
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n0 0\\n1000 0\\n0 1000\\n1000 1000') == 0, \"Testcase 0 failed\"\nassert solution('5\\n0 0\\n1000 0\\n0 1000\\n1000 1000') == 1, \"Testcase 1 failed\"\nassert solution('6\\n0 0\\n1000 0\\n0 1000\\n1000 1000') == 2, \"Testcase 2 failed\"\nassert solution('7\\n0 0\\n1000 0\\n0 1000\\n1000 1000') == 3, \"Testcase 3 failed\"\nassert solution('8\\n0 0\\n1000 0\\n0 1000\\n1000 1000') == 4, \"Testcase 4 failed\"\nassert solution('9\\n0 0\\n1000 0\\n0 1000\\n1000 1000') == 5, \"Testcase 5 failed\""
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n4\n0 0\n1000 0\n0 1000\n1000 1000\n''') == '0'\n\nsolution('''\n4\n0 0\n1000 0\n0 1000\n1000 1000\n''')"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\") == 0\nassert solution(\"2 3\\n-10000 20000\\n5000 30000\") == 0\nassert solution(\"0 0\\n10000 0\\n0 10000\\n10000 10000\") == 0\nassert solution(\"1 1\\n-50000 -50000\\n50000 50000\") == 1\nassert solution(\"2 2\\n-10000 10000\\n10000 10000\\n-10000 -10000\") == 1\nassert solution(\"10000 50000\\n50000 50000\\n0 50000\\n50000 0\") == 0\nassert solution(\"10000 0\\n0 50000\\n50000 50000\\n0 10000\") == 0\nassert solution(\"0 0\\n10000 0\\n0 10000\\n10000 10000\") == 0"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\\n\") == 0"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 0, \"Please implement the solution\""
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '0', \"Solution should return 0.\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0.500000000 1.000000000\"\n"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n2 1\n0 1 0.5\n''') == '0.500000000 1.000000000\\n'\n\nassert solution('''\n3 2\n0 1 0.5\n1 2 0.5\n''') == '0.500000000 0.250000000\\n0.250000000 0.500000000\\n0.500000000 0.250000000\\n'\n\nassert solution('''\n4 3\n0 1 0.5\n1 2 0.5\n2 3 0.5\n3 0 0.5\n''') == '-1.000000000\\n'\n\nassert solution('''\n5 4\n0 1 0.5\n1 2 0.5\n2 3 0.5\n3 0 0.5\n4 5 0.5\n''') == '-1.000000000\\n-0.750000000\\n-0.500000000\\n-0.250000000\\n-0.000000000\\n'"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n0 1 0.5\") == \"0.500000000 1.000000000\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"0.500000000 1.000000000\"\n"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 1\\n0 1 0.5') == '0.500000000 1.000000000'"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == expected, f\"The given solution {solution} is not correct, please check the expected output.\"\n\nprint(\"Correct\")"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 1\\n0 1 0.5') == '0.500000000 1.000000000\\n'\nassert solution('3 4\\n2 0 0.5\\n0 2 0.3\\n1 3 0.2') == '0.357142857 0.777777778\\n0.500000000 1.000000000\\n'\nassert solution('4 5\\n3 0 0.3\\n1 1 0.4\\n0 2 0.2\\n2 3 0.5') == '0.300000000 0.500000000\\n0.500000000 1.000000000\\n'\nassert solution('1 1\\n0 0 1.0') == '-1.000000000'\nassert solution('0 1 0.5\\n1 1 0.1') == '-1.000000000 0.000000000'\nassert solution('2 0\\n0 2 0.5\\n1 3 0.3\\n2 3 0.2') == '-1.000000000 0.000000000'\nassert solution('3 0\\n2 2 0.5\\n0 1 0.3\\n0 2 0.2') == '0.500000000 0.000000000'\nassert solution('4 0\\n2 0 0.3\\n0 1 0.4\\n1 0 0.2\\n0 2 0.2') == '0.500000000 0.000000000'\nassert solution('5 0\\n3 0 0.3\\n1 0 0.4\\n0 1 0.2\\n1 1 0.5') == '0.500000000 0.000000000'\nassert solution('6 0\\n3 0 0.3\\n1 0 0.4\\n1 1 0.2\\n1 0 0.2\\n0 2 0.2') == '0.500000000 0.000000000'\nassert solution('7 0\\n3 0 0.3\\n1 0 0.4\\n1 0 0.2\\n0 1 0.2\\n0 2 0.2') == '0.500000000 0.000000000'\nassert solution('8 0\\n3 0 0.3\\n1 0 0.4\\n0 1 0.2\\n0 1 0.2\\n1 0 0.2') == '0.500000000 0.000000000'\nassert solution('9 0\\n3 0 0.3\\n1 0 0.4\\n0 0 0.2\\n1 0 0.2\\n1 1 0.2') == '0.500000000 0.000000000'\nassert solution('10 0\\n3 0 0.3\\n1 0 0.4\\n1 0 0.2\\n0 0 0.2\\n1 1 0.2\\n1 0 0.2') == '0.500000000 0.000000000'\nassert solution('11 0\\n3 0 0.3\\n1 0 0.4\\n1 1 0.2\\n1 0 0.2\\n0 0 0."
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '0.500000000 1.000000000', '\\n'.join(map(str, solution()))\n"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n0 1 0.5\") == \"0.5 1.0\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 1\\n0 1 0.5') == '0.500000000 1.000000000\\n'\n"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    6\n    1 1\n    4 1\n    1 5\n    10 10\n    10 8\n    7 10\n    \"\"\"\n) == \"7\\n\""
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1\\n4\\n1\\n10\\n10\\n7\\n10\\n\") == \"7\"\n"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 7\nassert solution(2) == 6\nassert solution(3) == 7\nassert solution(4) == 7\nassert solution(5) == 7\n"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10') == '7\\n'\n"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"7\\n\""
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == \"7\\n\""
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\\n\"\nassert solution(\"11\\n2 2\\n1 5\\n10 10\\n10 12\\n7 10\") == \"10\\n\"\nassert solution(\"7\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\\n\"\nassert solution(\"1\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"0\\n\"\nassert solution(\"2\\n2 2\\n1 5\\n10 10\\n10 12\\n7 10\") == \"1\\n\"\nassert solution(\"11\\n2 2\\n1 5\\n10 10\\n10 12\\n7 10\") == \"10\\n\"\nassert solution(\"1\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"0\\n\"\nassert solution(\"2\\n2 2\\n1 5\\n10 10\\n10 12\\n7 10\") == \"1\\n\"\nassert solution(\"11\\n2 2\\n1 5\\n10 10\\n10 12\\n7 10\") == \"10\\n\"\nassert solution(\"1\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"0\\n\"\nassert solution(\"2\\n2 2\\n1 5\\n10 10\\n10 12\\n7 10\") == \"1\\n\""
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\\n\""
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\\n\"\n"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\""
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    2\n    3-b 5-b\n    6-a 2-b\n    2\naba\nbba\n    0\n''') == '''\n    8-a\n    9-b\n"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n2\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0\n''') == '''\n9-b\n8-a\n"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\") == [9, 8, \"def\", 5, 6, 3, 2]\nprint(solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\"))"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == sample_output, f\"Output mismatch for sample input {sample_input}\""
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 1 failed\"\n\nassert solution(stdin) == \"8-a\\n9-b\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 2 failed\"\n\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 3 failed\"\n\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 4 failed\"\n\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 5 failed\"\n\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 6 failed\"\n\nassert solution(stdin) == \"9-b\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 7 failed\"\n\nassert solution(stdin) == \"8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 8 failed\"\n\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 9 failed\"\n\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 10 failed\"\n\nassert solution(stdin) == \"9-b\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 11 failed\"\n\nassert solution(stdin) == \"8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 12 failed\"\n\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 13 failed\"\n\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 14 failed\"\n\nassert solution(stdin) == \"9-b\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 15 failed\"\n\nassert solution(stdin) == \"8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 16 failed\"\n\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 17 failed\"\n\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 18 failed\"\n\nassert solution(stdin) == \"9-b\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 19 failed\"\n\nassert solution(stdin) == \"8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 20 failed\"\n\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 21 failed\"\n\nassert solution(stdin) == \"9-b\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 22 failed\"\n\nassert solution(stdin) == \"8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 23 failed\"\n\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 24 failed\"\n\nassert solution(stdin) == \"9-b\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 25 failed\"\n\nassert solution(stdin) == \"8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 26 failed\"\n\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 27 failed\"\n\nassert solution(stdin) == \"9-b\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 28 failed\"\n\nassert solution(stdin) == \"8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 29 failed\"\n\nassert solution(stdin"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\") == \"9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\") == \"9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"3\\nabc d e\\n12-b 11-b\\n9-c 4-c\\n15-d 10-d\\n0\") == \"11-b\\n10-d\\n15-c\\n12-b\\n9-c\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"4\\n1 2 3 4\\n1000000-a 999999-a\\n0\") == \"0\\n0\\n0\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"0\") == \"0\\n0\\n0\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nprint(\"All tests pass!\")"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\") == [\"9-b\", \"8-a\"]\nassert solution(\"1\\n1 a\\n2 b\\n3 c\\n4 d\\n5 e\\n6 f\\n7 g\\n8 h\\n9 i\\n10 j\") == [\"10-i\"]\nassert solution(\"0\") == []"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3 * \"ab\") == \"9-b\", \"Expected 9-b, got {}\".format(solution(3 * \"ab\"))\nassert solution(\"a b\") == \"9-b\", \"Expected 9-b, got {}\".format(solution(\"a b\"))\nassert solution(\"abc\") == \"9-c\", \"Expected 9-c, got {}\".format(solution(\"abc\"))\nassert solution(\"a b\") == \"9-b\", \"Expected 9-b, got {}\".format(solution(\"a b\"))\nassert solution(\"a b\") == \"9-b\", \"Expected 9-b, got {}\".format(solution(\"a b\"))\nassert solution(\"abc\") == \"9-c\", \"Expected 9-c, got {}\".format(solution(\"abc\"))\n"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1\\necho\\n1\\nechoecho') == '3246R3246'\n\nfrom typing import List"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\necho\\n1\\nechoecho\\n\") == \"3246R3246\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\necho\\n1\\nechoecho\\n\") == \"3246R3246\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\necho\\n1\\necho\\n\") == \"3246R3246\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1\\n' + 'echo\\n' + '1\\n' + 'echoecho\\n') == '3246R3246\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Test Failed: solution({input()})!= output({output()})\""
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\necho\\n1\\nechoecho\") == \"3246R3246\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\necho\\n1\\nechoecho\") == \"3246R3246\", \"Output must be '3246R3246', but is {}\".format(solution(\"1\\necho\\n1\\nechoecho\"))\nprint(\"All tests passed!\")"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3246R3246\"\nprint(\"OK\")"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"3246R3246\", \"Incorrect output.\"\n"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'YES\\n1 2\\n1 3\\n'"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"YES\\n1 2\\n1 3\""
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\") == \"YES\\n1 2\\n1 3\"\n"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n\") == \"YES\\n1 2\\n1 3\"\n"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\") == \"YES\\n1 2\\n1 3\""
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test case {case_number} failed: {output}\\nInput: {stdin}\\nOutput: {output}\""
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 1) == \"YES\\n1 2\\n1 3\"  # Test case 1\nassert solution(4, 1) == \"YES\\n1 2\\n1 3\"  # Test case 2\nassert solution(3, 3) == \"YES\\n1 2\\n1 3\"  # Test case 3\nassert solution(4, 3) == \"YES\\n1 2\\n1 3\"  # Test case 4\nassert solution(3, 4) == \"YES\\n1 2\\n1 3\"  # Test case 5\nassert solution(4, 4) == \"YES\\n1 2\\n1 3\"  # Test case 6"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"3 1\\n\") == \"YES\\n1 2\\n1 3\\n\"\n"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"YES\\n1 2\\n1 3\\n\""
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 1) == 'YES\\n1 2\\n1 3'"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"176\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == 176\nprint(\"All test cases pass.\")"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333') == '176'"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"176\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"1\\n0\") =="
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333') == '176'"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"176\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n\") == \"176\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == 176\nprint(\"All tests passed!\")"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"176\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Solution does not match the expected output. Please check the provided code and the input.\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == '12'\nassert solution(12) == '600'\nassert solution(100) == '016'\nassert solution(1000000) == '160000000'\nassert solution(10000000) == '160000000'"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == \"12\\n\"\nassert solution(10) == \"012\\n\"\nassert solution(12) == \"016\\n\"\nassert solution(15) == \"012\\n\"\nassert solution(20) == \"001\\n\"\n"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"12\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"12\", \"The solution should return 12.\"\nassert solution(\"10\") == \"016\", \"The solution should return 016.\"\nassert solution(\"20\") == \"016\", \"The solution should return 016.\"\nassert solution(\"100\") == \"016\", \"The solution should return 016.\"\nassert solution(\"10000000\") == \"016\", \"The solution should return 016.\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == \"12\"\nassert solution(123456789) == \"016\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == '12'\nassert solution(479001600) == '016'\nassert solution(10) == '016'\nassert solution(2) == '01'\nassert solution(1) == '0'"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"12\", \"Test failed\"\n"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n\") == \"12\\n\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5) == \"12\""
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 1\\n(())\\n480\\n617\\n-570\\n928\") == 480\nassert solution(\"4 1\\n(())\\n480\\n617\\n-570\\n928\") == \"def solution(stdin: str) -> str: pass\""
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 1\\n((()\\n480\\n617\\n-570\\n928\") == 480, \"Test case 1 failed\")\nassert solution(\"5 3\\n(())\\n()))\\n(())\\n(())\\n(())\\n(())\") == 1020, \"Test case 2 failed\"\nassert solution(\"4 2\\n(())\\n())))\\n(())\\n(())\\n(())\\n(())\") == 1150, \"Test case 3 failed\"\nassert solution(\"3 1\\n(())\\n()))\\n(())\\n(())\\n(())\\n(())\") == 1000, \"Test case 4 failed\"\nassert solution(\"5 1\\n(())\\n()))\\n(())\\n(())\\n(())\\n(())\") == 1000, \"Test case 5 failed\""
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 1\\n(())\\n480\\n617\\n-570\\n928\") == 480"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 1\\n(())\\n480\\n617\\n-570\\n928') == 480\nassert solution('4 1\\n(())\\n480\\n617\\n-570\\n928') == '?'\nassert solution('5 5\\n(())()\\n480\\n617\\n-570\\n928') == 1750\nassert solution('5 5\\n(())()\\n480\\n617\\n-570\\n928') == '?'\n"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4 1\n((()\n480\n617\n-570\n928\n\"\"\") == \"480\")  # correct output\n\nassert solution(\"\"\"\n4 1\n(())\n-360\n\"\"\") == \"?\")  # correct output\n\nassert solution(\"\"\"\n4 2\n((()\n480\n617\n-570\n928\n))\n-120\n\"\"\") == \"480\")  # correct output\n\nassert solution(\"\"\"\n4 1000\n((()\n480\n617\n-570\n928\n))\n-120\n\"\"\") == \"?\")  # correct output\n\nassert solution(\"\"\"\n5 1\n(()\n(())\n(()\n(())\n-360\n))\n-120\n\"\"\") == \"480\")  # correct output"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 480\nassert solution(2) == 617\nassert solution(3) == 928"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n4 1\n((()\n480\n617\n-570\n928\n''') == 480)"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 480, \"The output does not match the expected output.\""
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 1\\n(()\\n480\\n617\\n-570\\n928') == 480, \"Expected 480, got {}\".format(solution('4 1\\n(()\\n480\\n617\\n-570\\n928')))"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 1\\n((()480617-570928\\n') == 480\nassert solution('3 1\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()()"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2 4\\n5 6\\n7 8 9 10 11 12 13\\n\", \"Incorrect output\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\", \"Jay runs a small carnival that has various rides and attractions. Unfortunately, times are tough. A recent roller coaster accident, flooding in the restrooms, and an unfortunate clown incident have given Jay's carnival a bad reputation with the public. With fewer paying customers and reduced revenue, he will need to cut some costs to stay in business.\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\\n\"\nassert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n\") == \"None\"\n"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n13\n2 2 4\n3 1 3 5\n2 2 4\n3 1 3 6\n2 2 6\n2 4 5\n2 8 9\n2 7 9\n2 7 8\n2 11 13\n2 10 12\n2 11 13\n2 10 12\n''') == '''2 4\n5 6\n7 8 9 10 11 12 13'''\n\nassert solution('''\n13\n2 2 4\n3 1 3 5\n2 2 4\n3 1 3 6\n2 2 6\n2 4 5\n2 8 9\n2 7 9\n2 7 8\n2 11 13\n2 10 12\n2 11 13\n2 10 12\n''') == '''None'''\n\nassert solution('''\n13\n2 2 4\n3 1 3 5\n2 2 4\n3 1 3 6\n2 2 6\n2 4 5\n2 8 9\n2 7 9\n2 7 8\n2 11 13\n2 10 12\n2 11 13\n2 10 12\n''') == '''2 4\n5 6\n7 8 9 10 11 12 13'''"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''13\n2 2 4\n3 1 3 5\n2 2 4\n3 1 3 6\n2 2 6\n2 4 5\n2 8 9\n2 7 9\n2 7 8\n2 11 13\n2 10 12\n2 11 13\n2 10 12''') == '2 4\\n5 6\\n7 8 9 10 11 12 13'\n"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2 4\\n5 6\\n7 8 9 10 11 12 13\", \"Invalid output.\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\"\nassert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n2 4 5\\n2 6 7\\n3 1 3 6\\n2 9 8\\n2 9 10\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n2 12 14\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n2 13 15\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n2 14 16\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n2 15 17\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n2 16 18\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n2 17 19\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n2 18 20\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n2 19 21\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n2 20 22\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n2 21 23\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n2 22 24\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n2 23 25\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n2 24 26\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n2 25 27\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n2 26 28\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n2 27 29\\n2 11 13\\n2 10 12\\n"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution) == \"2 4\\n5 6\\n7 8 9 10 11 12 13\"\n"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\\n\"\n"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\\n\"\nassert solution(\"10 10\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"25 29 26 21 23\\n\"\nassert solution(\"20 20\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"15 19 16 11 13\\n\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"35 39 36 27 29\", \"Your solution is incorrect. Please check your code.\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"35 39 36 27 29\", \"Please solve the problem correctly.\"\n\nfrom typing import List"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\\n\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\"\nassert solution(\"5 10\\n1 1 1\\n2 2 2\\n3 3 3\\n4 4 4\\n5 5 5\") == \"161 181 161 141 121\"\nassert solution(\"10 10\\n1 1 1\\n2 2 2\\n3 3 3\\n4 4 4\\n5 5 5\\n6 6 6\\n7 7 7\\n8 8 8\\n9 9 9\\n10 10 10\") == \"0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\\n5 5 5\\n6 6 6\\n7 7 7\\n8 8 8\\n9 9 9\\n10 10 10\\n11 11 11\\n12 12 12\\n13 13 13\\n14 14 14\\n15 15 15\\n16 16 16\\n17 17 17\\n18 18 18\\n19 19 19\\n20 20 20\") == \"125 145 125 105 85 65 45 25 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 "
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2') == '35 39 36 27 29', 'Error in the solution'"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution_input) == solution_output, \"Your solution is incorrect. Please check the provided code and try again.\""
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n3 2 1\") == \"0 672\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == \"0 672\""
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\n3 2 1') == '0 672\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"0 672\"\n"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"0 672\""
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    3 3\n    3 2 1\n    ''') == '0 672'"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '0 672'\n"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 0\nassert solution() == 672"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n3 2 1\") == \"0 672\""
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n3 2 1\") == \"0 672\"\nassert solution(\"4 4\\n2 2 1\") == \"0 1728\"\nassert solution(\"5 4\\n1 2 3 4\") == \"0 672\"\nassert solution(\"5 4\\n1 2 3 4 5\") == \"0 1728\"\nassert solution(\"5 3\\n1 2 3\") == \"0 1728\"\nassert solution(\"100003 100003\\n2 2\") == \"2 2\"\nassert solution(\"100003 100003\\n3 3\") == \"0 1728\"\nassert solution(\"100003 100003\\n4 4\") == \"0 3456\"\nassert solution(\"100003 100003\\n5 5\") == \"0 4192\"\nassert solution(\"100003 100003\\n6 6\") == \"0 10240\"\nassert solution(\"100003 100003\\n7 7\") == \"0 7936\"\nassert solution(\"100003 100003\\n8 8\") == \"0 4096\"\nassert solution(\"100003 100003\\n9 9\") == \"0 2048\"\nassert solution(\"100003 100003\\n10 10\") == \"0 1024\"\nassert solution(\"100003 100003\\n11 11\") == \"0 512\"\nassert solution(\"100003 100003\\n12 12\") == \"0 256\"\nassert solution(\"100003 100003\\n13 13\") == \"0 128\"\nassert solution(\"100003 100003\\n14 14\") == \"0 64\"\nassert solution(\"100003 100003\\n15 15\") == \"0 32\"\nassert solution(\"100003 100003\\n16 16\") == \"0 16\"\nassert solution(\"100003 100003\\n17 17\") == \"0 8\"\nassert solution(\"100003 100003\\n18 18\") == \"0 4\"\nassert solution(\"100003 100003\\n19 19\") == \"0 2\"\nassert solution(\"100003 100003\\n20 20\") == \"0 1\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n\") == 2.500000\nassert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n\\n\") == 2.500000\nassert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n3 1 10\\n\") == \"Impossible\"\nassert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n3 1 10\\n4 1 10\\n\") == 0.000000"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == \"2.500000\\n\"\nassert solution(\"4 5 100\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == \"Impossible\\n\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == \"2.500000\"\nassert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n6 4 10\") == \"Impossible\"\nassert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n3 5 20\") == \"2.500000\"\nassert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n3 5 20\\n4 5 10\") == \"Impossible\"\nassert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n3 5 20\\n4 5 10\\n5 5 10\") == \"Impossible\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n\") == \"2.500000\\n\"\nassert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n\") == \"Impossible\\n\"\nassert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n\") == \"Impossible\\n\"\nassert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n\") == \"Impossible\\n\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == \"2.500000\"\nassert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n0 10 10\") == \"Impossible\"\nassert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n0 10 11\") == \"Impossible\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == \"2.500000\\nImpossible\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n\") == \"2.500000\\n\"\nassert solution(\"4 4 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n\") == \"Impossible\\n\"\n"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == \"2.500000\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n') == '2.500000'\nassert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n\\nImpossible\\n') == 'Impossible'"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == \"2.500000\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"3\\n\""
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(N) == expected_output, f\"Solution: {solution(N)}, Expected Output: {expected_output}\"\n"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3\\n\", \"The output is incorrect\""
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n5 3 4') == '3\\n3\\n2\\n'\nassert solution('4\\n5 3 4') == '4\\n3\\n1\\n'\nassert solution('5\\n5 3 4') == '4\\n2\\n'\nassert solution('10\\n5 3 4') == '4\\n3\\n'\nassert solution('1\\n5 3 4') == '4\\n2\\n'\n"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n5 3 4') == '3\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n5 3 4') == '3\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\n\""
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n5 3 4\") == \"3\"\nassert solution(\"5\\n10 15 20\") == \"5\"\nassert solution(\"10\\n30 40 50\") == \"10\""
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 3, \"Expected output: 3\\nGot: {}\".format(solution(3))\nassert solution(4) == 3, \"Expected output: 3\\nGot: {}\".format(solution(4))\nassert solution(5) == 3, \"Expected output: 3\\nGot: {}\".format(solution(5))\nassert solution(6) == 3, \"Expected output: 3\\nGot: {}\".format(solution(6))\nassert solution(7) == 4, \"Expected output: 4\\nGot: {}\".format(solution(7))\nassert solution(8) == 4, \"Expected output: 4\\nGot: {}\".format(solution(8))\nassert solution(9) == 5, \"Expected output: 5\\nGot: {}\".format(solution(9))\nassert solution(10) == 5, \"Expected output: 5\\nGot: {}\".format(solution(10))\nassert solution(11) == 6, \"Expected output: 6\\nGot: {}\".format(solution(11))\nassert solution(12) == 6, \"Expected output: 6\\nGot: {}\".format(solution(12))\nassert solution(13) == 7, \"Expected output: 7\\nGot: {}\".format(solution(13))\nassert solution(14) == 7, \"Expected output: 7\\nGot: {}\".format(solution(14))\nassert solution(15) == 8, \"Expected output: 8\\nGot: {}\".format(solution(15))\nassert solution(16) == 9, \"Expected output: 9\\nGot: {}\".format(solution(16))\nassert solution(17) == 9, \"Expected output: 9\\nGot: {}\".format(solution(17))\nassert solution(18) == 10, \"Expected output: 10\\nGot: {}\".format(solution(18))\nassert solution(19) == 10, \"Expected output: 10\\nGot: {}\".format(solution(19))\nassert solution(20) == 11, \"Expected output: 11\\nGot: {}\".format(solution(20))\nassert solution(21) == 11, \"Expected output: 11\\nGot: {}\".format(solution(21))\nassert solution(22) == 12, \"Expected output: 12\\nGot: {}\".format(solution(22))\nassert solution(23) == 12, \"Expected output: 12\\nGot: {}\".format(solution(23))\nassert solution(24) == 13, \"Expected output: 13\\nGot: {}\".format(solution(24))\nassert solution(25) == 13, \"Expected output: 13\\nGot: {}\".format(solution(25))\nassert solution(26) == 14, \"Expected output: 14\\nGot: {}\".format(solution(26))\nassert solution(27) == 14, \"Expected output: 14\\nGot: {}\".format(solution(27))\nassert solution(28) == 15, \"Expected output: 15\\nGot: {}\".format(solution(28))\nassert solution(29) == 16, \"Expected output: 16\\nGot: {}\".format(solution(29))\nassert solution(30) == 17, \"Expected output: 17\\nGot: {}\".format(solution(30))\nassert solution(31) == 18, \"Expected output: 18\\nGot: {}\".format(solution(31))\nassert solution(32) == 19, \"Expected output: 19\\nGot: {}\".format(solution(32))\nassert solution(33) == 19, \"Expected output: 19\\nGot: {}\".format(solution(33))\nassert solution(34) == 20, \"Expected output: 20\\nGot: {}\".format(solution(34))\nassert solution(35) == 21, \"Expected output: 21\\nGot: {}\".format(solution(35))\nassert solution(36) == 22, \"Expected output: 22\\nGot: {}\".format(solution(36))\nassert solution(37) == 23, \"Expected output: "
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '2\\n', 'Test failed'\n"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1 1\\n\") == \"2\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1 1\") == \"2\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1 1\") == 2\n"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\\n\", \"Test Failed\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2, 1, 1) == 2\nassert solution(3, 5, 5) == 2\nassert solution(4, 3, 3) == 4\nassert solution(5, 7, 7) == 8\nassert solution(1, 1, 1) == 2\n"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    2 1 1\n    \"\"\"\n) == \"2\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1 1\") == \"2\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2, 1, 1) == 2"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=None) == '2\\n', \"Testcase 1\"\nassert solution(stdin=None) == '1\\n', \"Testcase 2\"\nassert solution(stdin=None) == '1\\n', \"Testcase 3\"\nassert solution(stdin=None) == '1\\n', \"Testcase 4\"\nassert solution(stdin=None) == '1\\n', \"Testcase 5\""
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '7'"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n1 3 5') == '7'\nassert solution('4\\n1 2 3 4 5') == '5'\nassert solution('6\\n10 11 12 13 14 15') == '11'\nassert solution('1\\n2') == '1'\nassert solution('2\\n2 3') == '2'\nassert solution('3\\n1 2 3') == '3'\nassert solution('4\\n2 4') == '4'\nassert solution('5\\n3 5') == '5'"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n1 3 5') == '7\\n'\n\nprint(solution('3\\n1 3 5'))"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '7'\n"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 3 5\") == \"7\\n\""
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 3 5\\n\") == \"7\""
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 3 5\\n\") == \"7\\n\"\nassert solution(\"4\\n1 2 3 4\\n\") == \"20\\n\"\nassert solution(\"1000\\n\") == \"1000\\n\"\nassert solution(\"1000000\\n\") == \"500000000\\n\""
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n1 3 5') == '7'"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '7'\n"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"7\"\nassert solution() == \"9\"\nassert solution() == \"12\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\") == \"fred jetsons\\njohn jets\\nruth rockets\\nImpossible.\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n\") == \"fred jetsons\\njohn jets\\nruth rockets\\nImpossible.\\n\"\nassert solution(\"2\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n\") == \"fred jetsons\\njohn jets\\nruth rockets\\nImpossible.\\n\"\nassert solution(\"4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n2\\n\") == \"fred jetsons\\njohn jets\\nruth rockets\\nImpossible.\\n\"\nassert solution(\"3\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n\") == \"Impossible.\\n\"\nassert solution(\"1\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n\") == \"Impossible.\\n\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"fred jetsons\\njohn jets\\nruth rockets\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"fred jetsons\\njohn jets\\nruth rockets\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\n# Test cases\\nfor tc in range(int(stdin.readline())):\\n    n = int(stdin.readline())\\n    council = []\\n    for _ in range(n):\\n        resident = stdin.readline().strip()\\n        party = stdin.readline().strip()\\n        clubs = int(stdin.readline().strip())\\n        club_members = [int(x) for x in stdin.readline().strip().split()]\\n        council.append(f\"{resident} {party}\")\\n    if len(set(club_members))!= 2:\\n        print(\\\"Impossible.\\\")\\n    elif len(set(club_members)) == 2 and len(set(council)) < len(council) // 2:\\n        print(\\\"Impossible.\\\")\\n    else:\\n        council.sort()\\n        for i in range(len(council)):\\n            if i == len(council) // 2:\\n                council[i] += f\"\\n{council[i]}\"\\n        print(\\\"\\\".join(council))\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output"
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets') == 'fred jetsons\\njohn jets\\nruth rockets\\n'"
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"fred jetsons\\nruth rockets\"\nassert solution(input()) == \"Impossible\"\nassert solution(input()) == \"john jets\\nImpossible\"\nassert solution(input()) == \"fred jets\"\nassert solution(input()) == \"ruth rockets\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, got: {solution(input())}\"\nfor i in range(T):\n    residents = list(map(int, input().split()))\n    n = residents[0]\n    clubs = {}\n    for i in range(n):\n        name, party, clubs_num = input().split()\n        clubs[name] = clubs_num\n    council_members = {}\n    for i in range(n):\n        name = input().split()[0]\n        council_members[name] = True\n    clubs_represented = [club for club, num in clubs.items() if num > 0]\n    num_clubs = len(clubs_represented)\n    for i in range(num_clubs):\n        clubs_represented[i] = clubs_represented[i] // 2\n    clubs_represented = [club for club, num in clubs.items() if num == 0]\n    num_clubs = len(clubs_represented)\n    if num_clubs == 0:\n        print(\"Impossible.\")\n    else:\n        print(\" \".join(clubs_represented))\n"
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"fred jetsons\\njohn jets\\nruth rockets\", \"Test case failed.\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"fred jetsons\\njohn jets\\nruth rockets\"\n"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == \"1 2 1\\n\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '1 2 1'\nassert solution() == '1 2 1'\nassert solution() == '1 2 1'\nassert solution() == '1 2 1'\nassert solution() == '1 2 1'"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n4 3\\n-10 9\\n-2 3\") == \"1 2 1\\n\"\nassert solution(\"5\\n4 6\\n2 5\\n-1 3\\n8 9\") == \"4 1 0\\n3 0 3\\n3 2 1\\n\"\nassert solution(\"6\\n5 6\\n1 5\\n-2 3\\n4 5\\n9 10\") == \"4 3 1\\n1 1 2\\n2 1 2\\n2 1 2\\n3 1 1\\n3 1 1\\n\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Got {solution(input())}, expected {expected_output}\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4 3\\n-10 9\\n-2 3\") == \"1 2 1\\n\"\nassert solution(\"5\\n10 5\\n1 1\\n2 2\\n3 3\") == \"5\\n5\\n1 1\\n1 1\\n1 1\\n\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '1 2 1\\n', 'Test case 1 failed'"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n-10 9\\n-2 3\") == [\"1 2 1\"]\nassert solution(\"5 4\\n2 2\\n5 4\\n6 3\\n3 2\") == [\"1 1 1\", \"1 2 1\"]\nassert solution(\"4 3\\n-10 9\\n-2 3\\n1 2 3\\n4 5 6\") == [\"1 2 1\", \"2 3 1\", \"1 2 1\"]\nassert solution(\"4 3\\n-10 9\\n-2 3\\n1 2 3\\n4 5 6\\n7 8 9\") == [\"1 2 1\", \"2 3 1\", \"1 2 1\"]\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\") == [\"1 2 1\", \"1 2 1\"]"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == [1, 2, 1]"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1 2 1\", \"The output should be: 1 2 1\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, \"Your solution is not correct\""
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2.125\\n\", \"The expected output is incorrect\""
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 2.125, \"Your code does not pass the test case.\""
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2.125\\n\", \"Expected output is incorrect.\"\n"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\") == \"2.125\\n\"\nassert solution(\"3\\n2 2 3\\n5 2 7\") == \"0.625\\n\"\nassert solution(\"5\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\") == \"2.125\\n\"\nassert solution(\"4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\") == \"2.125\\n\"\nassert solution(\"5\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\") == \"2.125\\n\""
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"\n\nfrom typing import List"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\") == \"2.125\""
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '2.125\\n', \"Expected result: 2.125, received: \" + solution(stdin)"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2.125\""
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '2.125\\n', \"The output should be '2.125'.\""
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n4\n1 1 7\n3 2 3\n5 1 4\n6 10 10\n''') == '2.125'"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''*.*''') == ['main.c', 'a.out']\nassert solution('''*.c''') == ['main.c']\nassert solution('''*.c*''') == ['main.c', 'a.out']\nassert solution('''abc.*''') == ['abc.c', 'abc.h']\nassert solution('''abc.c*''') == ['abc.c', 'abc.h']"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == ['main.c', 'a.out']"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"*.c\") == [\"main.c\", \"a.out\"]"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('*.c') == ['main.c', 'a.out']\nassert solution('*') == ['main.c', 'a.out','readme', 'yacc']\nassert solution('test*.c') == []\nassert solution('*.') == ['main.c', 'a.out','readme', 'yacc']\nassert solution('*.c*') == ['main.c', 'a.out']"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=None) == \"\"  # Test case 1\nassert solution(stdin=b\"*.*\\n\") == [\"main.c\", \"a.out\"]  # Test case 2\nassert solution(stdin=b\"*.c\\n\") == [\"main.c\"]  # Test case 3\nassert solution(stdin=b\"*.h\\n\") == []  # Test case 4\nassert solution(stdin=b\"*.a\\n\") == [\"a.out\"]  # Test case 5"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == ['main.c', 'a.out', 'def_solution(stdin: str) -> str:']"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) =='main.c\\na.out\\n'\nassert solution(input()) == 'def\\n'\nassert solution(input()) == 'foo\\nbar\\n'\nassert solution(input()) == 'baz\\n'\nassert solution(input()) == 'abc\\ndef\\nghi\\n'\nassert solution(input()) == 'abc\\n'"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''*.*\n4\nmain.c\na.out\nreadme\nyacc''') == ['main.c', 'a.out']"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='*.*\\n4\\nmain.c\\na.out\\nreadme\\nyacc') == ['main.c', 'a.out', 'def']\n\nsolution = '''\n"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 1\\n0.500000') == '0.500000', 'The answer should be: 0.500000'\n"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 1\\n0.500000') == '0.500000', 'Your solution is incorrect.'"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"0.500000\""
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''1 1\n0.500000\n''') == '0.500000\\n'"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 1') == '0.500000'\nassert solution('1 2') == '0.666667'\nassert solution('1 3') == '0.833333'\nassert solution('1 4') == '0.909091'\nassert solution('1 5') == '0.999999'"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n0.500000\") == \"0.500000\"\nassert solution(\"2 1\\n0.499999\\n0.500001\\n0.500000\") == \"0.500000\"\nassert solution(\"1 2\\n0.500000\\n0.499999\") == \"0.500000\"\nassert solution(\"3 2\\n0.500000\\n0.499999\\n0.500000\\n0.500000\") == \"0.500000\"\nassert solution(\"2 3\\n0.499999\\n0.500001\\n0.500000\") == \"0.500000\"\nassert solution(\"2 2\\n0.500000\\n0.500000\\n0.499999\\n0.500000\") == \"0.500000\"\nassert solution(\"3 1\\n0.499999\\n0.500001\\n0.500000\\n0.500000\") == \"0.500000\"\nassert solution(\"3 2\\n0.500000\\n0.499999\\n0.500000\\n0.500000\") == \"0.500000\"\nassert solution(\"3 3\\n0.500000\\n0.499999\\n0.500000\\n0.500000\") == \"0.500000\""
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, \"The solution provided is not correct.\""
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0.500000\", \"Your code is incorrect.\""
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    1 1\n    0.500000\n    \"\"\"\n) == \"0.500000\\n\"\n\nassert solution(\n    \"\"\"\n    2 2\n    0.666667\n    0.333333\n    \"\"\"\n) == \"0.302692\\n\"\n\nassert solution(\n    \"\"\"\n    3 3\n    0.750000\n    0.250000\n    0.125000\n    \"\"\"\n) == \"0.125000\\n\"\n\nassert solution(\n    \"\"\"\n    5 5\n    0.333333\n    0.333333\n    0.333333\n    0.333333\n    0.333333\n    \"\"\"\n) == \"0.333333\\n\"\n\nassert solution(\n    \"\"\"\n    6 6\n    0.800000\n    0.200000\n    0.100000\n    0.050000\n    0.025000\n    \"\"\"\n) == \"0.025000\\n\"\n\nassert solution(\n    \"\"\"\n    7 7\n    0.500000\n    0.500000\n    0.500000\n    0.500000\n    0.500000\n    0.500000\n    \"\"\"\n) == \"0.500000\\n\"\n\nassert solution(\n    \"\"\"\n    8 8\n    0.250000\n    0.250000\n    0.250000\n    0.250000\n    0.250000\n    0.250000\n    \"\"\"\n) == \"0.250000\\n\"\n\nassert solution(\n    \"\"\"\n    9 9\n    0.125000\n    0.125000\n    0.125000\n    0.125000\n    0.125000\n    0.125000\n    \"\"\"\n) == \"0.125000\\n\"\n\nassert solution(\n    \"\"\"\n    10 10\n    0.062500\n    0.062500\n    0.062500\n    0.062500\n    0.062500\n    0.062500\n    \"\"\"\n) == \"0.062500\\n\"\n\nassert solution(\n    \"\"\"\n    11 11\n    0.031250\n    0.031250\n    0.031250\n    0.031250\n    0.031250\n    0.031250\n    \"\"\"\n) == \"0.031250\\n\"\n\nassert solution(\n    \"\"\"\n    12 12\n    0.015625\n    0.015625\n    0.015625\n    0.015625\n    0.015625\n    0.015625\n    \"\"\"\n) == \"0.015625\\n\"\n\nassert solution(\n    \"\"\"\n    13 13\n    0.007812\n    0.007812\n    0.007812\n    0.007812\n    0.007812\n    0.007812\n    \"\"\"\n) == \"0.007812\\n\"\n\nassert solution(\n    \"\"\"\n    14 14\n    0.003906\n    0.003906\n    0.003906\n    0.003906\n    0.003906\n    0.003906\n    \"\"\"\n) == \"0.003906\\n\"\n\nassert solution(\n    \"\"\"\n    15 15\n    0.001953\n    0.001953\n    0.001953\n    0.001953\n    0.001953\n    0.001953\n    \"\"\"\n) == \"0.001"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"0.500000\\n\"\n"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 49.9\") == \"0.0\"\nassert solution(\"0 49.89\") == \"0.0\"\nassert solution(\"0 49.90\") == \"0.0\"\nassert solution(\"0 49.95\") == \"0.0\"\nassert solution(\"0 49.99\") == \"0.0\"\nassert solution(\"0 50.01\") == \"0.0\"\nassert solution(\"1 49.9\") == \"0.0\"\nassert solution(\"1 49.89\") == \"0.0\"\nassert solution(\"1 49.90\") == \"0.0\"\nassert solution(\"1 49.95\") == \"0.0\"\nassert solution(\"1 49.99\") == \"0.0\"\nassert solution(\"1 50.01\") == \"0.0\"\nassert solution(\"10 49.9\") == \"0.0\"\nassert solution(\"10 49.89\") == \"0.0\"\nassert solution(\"10 49.90\") == \"0.0\"\nassert solution(\"10 49.95\") == \"0.0\"\nassert solution(\"10 49.99\") == \"0.0\"\nassert solution(\"10 50.01\") == \"0.0\"\nassert solution(\"100 49.9\") == \"0.0\"\nassert solution(\"100 49.89\") == \"0.0\"\nassert solution(\"100 49.90\") == \"0.0\"\nassert solution(\"100 49.95\") == \"0.0\"\nassert solution(\"100 49.99\") == \"0.0\"\nassert solution(\"100 50.01\") == \"0.0\"\nassert solution(\"200 49.9\") == \"0.0\"\nassert solution(\"200 49.89\") == \"0.0\"\nassert solution(\"200 49.90\") == \"0.0\"\nassert solution(\"200 49.95\") == \"0.0\"\nassert solution(\"200 49.99\") == \"0.0\"\nassert solution(\"200 50.01\") == \"0.0\"\nassert solution(\"500 49.9\") == \"0.0\"\nassert solution(\"500 49.89\") == \"0.0\"\nassert solution(\"500 49.90\") == \"0.0\"\nassert solution(\"500 49.95\") == \"0.0\"\nassert solution(\"500 49.99\") == \"0.0\"\nassert solution(\"500 50.01\") == \"0.0\"\nassert solution(\"1000 49.9\") == \"0.0\"\nassert solution(\"1000 49.89\") == \"0.0\"\nassert solution(\"1000 49.90\") == \"0.0\"\nassert solution(\"1000 49.95\") == \"0.0\"\nassert solution(\"1000 49.99\") == \"0.0\"\nassert solution(\"1000 50.01\") == \"0.0\"\nassert solution(\"2000 49.9\") == \"0.0\"\nassert solution(\"2000 49.89\") == \"0.0\"\nassert solution(\"2000 49.90\") == \"0.0\"\nassert solution(\"2000 49.95\") == \"0.0\"\nassert solution(\"2000 49.99\") == \"0.0\"\nassert solution(\"2000 50.01\") == \"0.0\"\nassert solution(\"5000 49.9\") == \"0.0\"\nassert solution(\"5000 49.89\") == \"0.0\"\nassert solution(\"5000 49.90\") == \"0.0\"\nassert solution(\"5000 49.95\") == \"0.0\"\nassert solution(\"5000 4"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0.0\"\nassert solution(stdin) == \"0.0\"\nassert solution(stdin) == \"0.0\"\nassert solution(stdin) == \"0.0\"\nassert solution(stdin) == \"0.0\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == \"0.0\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 49.9\") == \"0.0\"\n"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"0 49.9\") == 0.0, \"Your solution is incorrect.\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt').read()) == 0.0, \"Incorrect output\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"0.0\", \"Invalid input\"\n\nimport math"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 49.9\") == 0.0, \"Your code is not correct.\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 49.9\") == \"0.0\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(b\"0 49.9\\n\") == \"0.0\\n\"  # Correct Output\nassert solution(b\"0.01 49.99\\n\") == \"0.0\\n\"  # Correct Output\nassert solution(b\"0.01 49.9\\n\") == \"0.00\\n\"  # Correct Output\nassert solution(b\"0.01 49.8\\n\") == \"0.00\\n\"  # Correct Output\nassert solution(b\"0.01 50.1\\n\") == \"0.00\\n\"  # Correct Output\nassert solution(b\"0.01 50.05\\n\") == \"0.00\\n\"  # Correct Output\nassert solution(b\"0.01 50.11\\n\") == \"0.00\\n\"  # Correct Output\nassert solution(b\"0.01 50.11\\n0.01 50.05\\n\") == \"0.00\\n\"  # Correct Output"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"\"\"\n4 1\n2 1\n3 2\n1 3\n\"\"\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '4 1\\n2 1\\n3 2\\n1 3', 'The solution is incorrect.'"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('example.txt', 'r')) == '''4 1\n2 1\n3 2\n1 3'''"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 2\") == \"4 2\\n2 1\\n3 2\\n1 3\"\nassert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 3\") == \"4 3\\n2 1\\n3 2\\n1 3\"\nassert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 4\") == \"4 4\\n2 1\\n3 2\\n1 3\"\nassert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 5\") == \"4 5\\n2 1\\n3 2\\n1 3\"\nassert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 6\") == \"4 6\\n2 1\\n3 2\\n1 3\"\nassert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 7\") == \"4 7\\n2 1\\n3 2\\n1 3\"\nassert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 8\") == \"4 8\\n2 1\\n3 2\\n1 3\"\nassert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 9\") == \"4 9\\n2 1\\n3 2\\n1 3\"\nassert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 10\") == \"4 10\\n2 1\\n3 2\\n1 3\"\nassert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 11\") == \"4 11\\n2 1\\n3 2\\n1 3\"\nassert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 12\") == \"4 12\\n2 1\\n3 2\\n1 3\"\nassert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 13\") == \"4 13\\n2 1\\n3 2\\n1 3\"\nassert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 14\") == \"4 14\\n2 1\\n3 2\\n1 3\"\nassert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 15\") == \"4 15\\n2 1\\n3 2\\n1 3\"\nassert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 16\") == \"4 16\\n2 1\\n3 2\\n1 3\"\nassert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 17\") == \"4 17\\n2 1\\n3 2\\n1 3\"\nassert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 18\") == \"4 18\\n2 1\\n3 2\\n1 3\"\nassert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 19\") == \"4 19\\n2 1\\n3 2\\n1 3\"\nassert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 20\") == \"4 20\\n2 1\\n3 2\\n1 3\"\nassert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 21\") == \"4 21\\n2 1\\n3 2\\n1 3\"\nassert solution(\"4\\n1 2\\n2 3\\"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, but got: {solution(input())}\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\"\nprint(solution(\"1 2\\n2 3\\n3 1\\n4 1\"))"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"4 1\\n2 1\\n3 2\\n1 3\"\n"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 1\\n4 1') == '\\n4 1\\n2 1\\n3 2\\n1 3\\n'\nassert solution('4\\n3 2\\n2 3\\n1 3\\n4 1') == '\\n4 1\\n2 1\\n3 2\\n1 3\\n'\nassert solution('4\\n3 2\\n1 3\\n4 1\\n2 1') == '\\n4 1\\n2 1\\n3 2\\n1 3\\n'\nassert solution('4\\n1 2\\n2 3\\n3 1\\n4 1\\n2 1\\n3 2\\n1 3') == '\\n4 1\\n2 1\\n3 2\\n1 3\\n'"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n2 3\\n3 1\\n4 1\\n\") == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(\"5 5\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 6\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n\") == \"1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n3 1\\n3 2\\n3 3\\n3 4\\n3 5\\n4 1\\n4 2\\n4 3\\n4 4\\n4 5\\n5 1\\n5 2\\n5 3\\n5 4\\n5 5\\n\""
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\\n\""
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\""
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\treturn \\\"soln\\\"\\n\"\n"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1\\n\"\n"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Input and output do not match\"\n"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output() # Run the test case"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == 1\nassert solution('10 10\\n1 1 2 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1') == 'infinity'"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(None) == \"Infinite\"\nassert solution(\"\") == \"Infinite\"\n\nm = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n\") == \"1\""
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution(solution(stdin: str))) == '1'\nassert solution(solution(solution(stdin: str))) == '1'"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == 3, \"Test case 1 failed\"\nassert solution(\"2 1 10\\n0 1 2 2 6\") == 0, \"Test case 2 failed\"\nassert solution(\"2 1 10\\n0 2 2 2 6\") == 0, \"Test case 3 failed\"\nassert solution(\"2 1 10\\n0 1 1 2 4\") == -1, \"Test case 4 failed\""
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == \"3\\n\"\nassert solution(\"2 1 10\\n1 2 2 3 5\") == \"impossible\\n\"\nassert solution(\"2 2 10\\n0 1 1 2 6\") == \"impossible\\n\"\nassert solution(\"2 2 10\\n0 1 1 2 6\\n3 4 5 6 7\") == \"impossible\\n\"\nassert solution(\"2 2 10\\n0 1 1 2 6\\n0 1 1 2 6\") == \"3\\n\"\n"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 1 10\\n0 1 1 2 6') == '3'\nassert solution('2 1 10\\n0 1 1 2 5') == 'impossible'\nassert solution('2 1 10\\n0 1 1 2 0') == 'impossible'\nassert solution('2 1 10\\n0 1 1 2 10') == 'impossible'\nassert solution('2 1 10\\n0 1 1 2 11') == 'impossible'\nassert solution('2 1 10\\n0 1 1 2 -1') == 'impossible'\nassert solution('2 1 10\\n0 1 1 2 100') == 'impossible'\nassert solution('2 1 10\\n0 1 1 2 200') == 'impossible'\nassert solution('2 1 10\\n0 1 1 2 101') == 'impossible'\nassert solution('2 1 10\\n0 1 1 2 102') == 'impossible'\nassert solution('2 1 10\\n0 1 1 2 103') == 'impossible'\nassert solution('2 1 10\\n0 1 1 2 104') == 'impossible'\nassert solution('2 1 10\\n0 1 1 2 105') == 'impossible'\nassert solution('2 1 10\\n0 1 1 2 106') == 'impossible'\nassert solution('2 1 10\\n0 1 1 2 107') == 'impossible'\nassert solution('2 1 10\\n0 1 1 2 108') == 'impossible'\nassert solution('2 1 10\\n0 1 1 2 109') == 'impossible'\nassert solution('2 1 10\\n0 1 1 2 110') == 'impossible'\nassert solution('2 1 10\\n0 1 1 2 111') == 'impossible'\nassert solution('2 1 10\\n0 1 1 2 112') == 'impossible'\nassert solution('2 1 10\\n0 1 1 2 113') == 'impossible'\nassert solution('2 1 10\\n0 1 1 2 114') == 'impossible'\nassert solution('2 1 10\\n0 1 1 2 115') == 'impossible'\nassert solution('2 1 10\\n0 1 1 2 116') == 'impossible'\nassert solution('2 1 10\\n0 1 1 2 117') == 'impossible'\nassert solution('2 1 10\\n0 1 1 2 118') == 'impossible'\nassert solution('2 1 10\\n0 1 1 2 119') == 'impossible'\nassert solution('2 1 10\\n0 1 1 2 120') == 'impossible'\nassert solution('2 1 10\\n0 1 1 2 121') == 'impossible'\nassert solution('2 1 10\\n0 1 1 2 122') == 'impossible'\nassert solution('2 1 10\\n0 1 1 2 123') == 'impossible'\nassert solution('2 1 10\\n0 1 1 2 124') == 'impossible'\nassert solution('2 1 10\\n0 1 1 2 125') == 'impossible'\nassert solution('2 1 10\\n0 1 1 2 126') == 'impossible'\nassert solution('2 1 10\\n0 1 1 2 127') == 'impossible'\nassert solution('2 1 10\\n0 1 1 2 128"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"2 1 10\n0 1 1 2 6\n\"\"\") == \"3\\n\"\n\nassert solution(\"\"\"2 1 10\n0 1 1 2 7\n\"\"\") == \"impossible\\n\"\n\nassert solution(\"\"\"2 1 10\n0 1 1 2 5\n\"\"\") == \"2\\n\"\n\nassert solution(\"\"\"2 1 10\n0 1 1 2 4\n\"\"\") == \"3\\n\"\n\nassert solution(\"\"\"2 1 10\n0 1 1 2 3\n\"\"\") == \"3\\n\"\n\nassert solution(\"\"\"2 1 10\n0 1 1 2 2\n\"\"\") == \"3\\n\"\n\nassert solution(\"\"\"2 1 10\n0 1 1 2 1\n\"\"\") == \"3\\n\"\n\nassert solution(\"\"\"2 1 10\n0 1 1 2 0\n\"\"\") == \"impossible\\n\""
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == \"3\\n\"\nassert solution(\"10 1000000000\\n1 1 2 3 4 5 6 7 8 9 10\") == \"impossible\\n\""
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == \"3\\n\"\n"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == \"3\""
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == \"3\\n\"\nassert solution(\"3 3 3\\n1 2 3 4 5\") == \"impossible\\n\"\nassert solution(\"2 1 10\\n0 1 2 3 6\") == \"impossible\\n\"\nassert solution(\"3 3 3\\n1 2 3 4 5\") == \"impossible\\n\"\nassert solution(\"5 5 5\\n1 2 3 4 5\") == \"impossible\\n\""
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == \"3\"\nassert solution(\"100 10 10\\n0 1 1 1 1000\") == \"impossible\"\nassert solution(\"2 3 2000\\n0 1 0 0 0\\n1 2 0 0 0\") == \"3\"\nassert solution(\"2 2 0\\n0 1 0\\n1 2 0\") == \"impossible\""
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 1 10\\n0 1 1 2 6') == '3'"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 100\\n99 1\\n1 99\\n') == '2\\n1 2\\n'"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\\n1 2\"\nassert solution(stdin) == \"1\\n2\"\nassert solution(stdin) == \"2\\n1\"\nassert solution(stdin) == \"0\""
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\\n1 2\\n\"\n"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 100\\n99 1\\n1 99\\n\") == \"2\\n1 2\\n\""
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 100\\n99 1\\n1 99') == '2\\n1 2'\nassert solution('2 100\\n1 99\\n99 1') == '2\\n1 2'\nassert solution('2 100\\n99 1\\n1 100') == '2\\n1 2'"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n2 100\n99 1\n1 99\n\"\"\") == \"\"\"\n2\n1 2\n\"\"\""
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 100\\n99 1\\n1 99\\n\") == \"2\\n1 2\\n\"\n"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution(stdin))\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution(stdin))\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution(stdin))\""
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\\n1 2\"\n"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2\\n1 2\\n\""
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('H\\nT\\n0.5') == '0.5'"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('H\\nT\\n0.5') == 0.5"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"H\\nT\\n0.5\") == 0.5"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"H\\nT\\n0.5\") == \"0.5\"\n\nfrom typing import List"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('H\\nT\\n0.5') == '0.5', \"The output should be '0.5'.\""
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"H\\nT\\n0.5\") == \"0.5\"\nprint(\"Correct\")\n\nimport math"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('H\\nT\\n0.5') == '0.5', \"The answer is incorrect.\""
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"H\\nT\\n0.5\") == \"0.5\", \"Incorrect output\""
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"H\\nT\\n0.5\") == \"0.5\\n\"\nassert solution(\"H\\nT\\n0.3\") == \"0.3\\n\"\nassert solution(\"H\\nT\\n1.0\") == \"0.0\\n\"\nassert solution(\"H\\nT\\n0.5\") == \"0.5\\n\"\nassert solution(\"H\\nT\\n0.3\") == \"0.3\\n\"\nassert solution(\"H\\nT\\n1.0\") == \"0.0\\n\""
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('H\\nT\\n0.5') == 0.5, \"The output should be 0.5\"\nassert solution('H\\nT\\n0.4') == 0.4, \"The output should be 0.4\"\nassert solution('H\\nT\\n0.6') == 0.6, \"The output should be 0.6\"\nassert solution('H\\nT\\n1.0') == 1.0, \"The output should be 1.0\"\nassert solution('H\\nT\\n0.9') == 0.9, \"The output should be 0.9\"\nassert solution('H\\nT\\n0.7') == 0.7, \"The output should be 0.7\"\nassert solution('H\\nT\\n0.1') == 0.1, \"The output should be 0.1\"\nassert solution('H\\nT\\n0.0') == 0.0, \"The output should be 0.0\"\nassert solution('H\\nT\\n0.3') == 0.3, \"The output should be 0.3\"\nassert solution('H\\nT\\n0.2') == 0.2, \"The output should be 0.2\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(stdin)}\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"8\\n1 3 5 7 9 11 13 15\"\nprint(\"Success\")"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == expected, f\"Expected {expected}, got {solution()}\"\n\nfrom typing import List"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n\") == \"8\\n1 3 5 7 9 11 13 15\\n\"\nassert solution(\"4\\n\") == \"8\\n1 2 5 7 10 11 12 13\\n\"\nassert solution(\"5\\n\") == \"8\\n1 2 3 4 5 6 7 8\\n\"\nassert solution(\"6\\n\") == \"8\\n1 2 3 4 5 6 7 8\\n\"\nassert solution(\"7\\n\") == \"8\\n1 2 3 4 5 6 7 8\\n\"\nassert solution(\"8\\n\") == \"8\\n1 2 3 4 5 6 7 8\\n\"\nassert solution(\"9\\n\") == \"8\\n1 2 3 4 5 6 7 8\\n\"\nassert solution(\"10\\n\") == \"8\\n1 2 3 4 5 6 7 8\\n\"\nassert solution(\"11\\n\") == \"8\\n1 2 3 4 5 6 7 8\\n\"\nassert solution(\"12\\n\") == \"8\\n1 2 3 4 5 6 7 8\\n\"\nassert solution(\"13\\n\") == \"8\\n1 2 3 4 5 6 7 8\\n\"\nassert solution(\"14\\n\") == \"8\\n1 2 3 4 5 6 7 8\\n\"\nassert solution(\"15\\n\") == \"8\\n1 2 3 4 5 6 7 8\\n\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == '8\\n1 3 5 7 9 11 13 15'\nassert solution(4) == '6\\n1 2 4 5 7 9 11 13 15'"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"8\\n1 3 5 7 9 11 13 15\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '8\\n1 3 5 7 9 11 13 15'"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"8\\n1 3 5 7 9 11 13 15\\n\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 8\nassert solution(4) == 11\nassert solution(6) == 13\nassert solution(7) == 15"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n') == '3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n') == '3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(int(input())) +'' + str(int(input())) +'' + str(int(input())) +'' + str(int(input())) +'' + str(int(input()))) == '3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3\\n1\\n0\\n\"\nassert solution(open(\"input.txt\", \"r\")) == \"3\\n1\\n0\\n\"\nassert solution(open(\"input.txt\", \"r\")) == \"3\\n1\\n0\\n\""
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n') == '3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5') == '3\\n1\\n0\\ndef solution(stdin: str) -> str:\n    pass'\n\nassert solution('4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5') == '3\\n1\\n0\\ndef solution(stdin: str) -> str:\n    pass'\n\nassert solution('4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5') == '3\\n1\\n0\\ndef solution(stdin: str) -> str:\n    pass'"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5') == '3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\n    a_1 = 1\n    a_2 = 3\n    a_3 = 5\n    a_4 = 7\n    n = 4\n    l_1 = 1\n    r_1 = 7\n    l_2 = 3\n    r_2 = 5\n    l_3 = 2\n    r_3 = 5\n    l_4 = 1\n    r_4 = 5\n    \n    while n > 0:\n        x_n = a_1 + a_2 + a_3 + a_4\n        if l_1 <= l_n <= r_1:\n            x_n = x_n + a_1\n        if l_2 <= l_n <= r_2:\n            x_n = x_n + a_2\n        if l_3 <= l_n <= r_3:\n            x_n = x_n + a_3\n        if l_4 <= l_n <= r_4:\n            x_n = x_n + a_4\n        a_1 = a_2\n        a_2 = a_3\n        a_3 = a_4\n        a_4 = x_n\n        n = n - 1\n    return str(x_1) + \" \" + str(x_2) + \" \" + str(x_3) + \" \" + str(x_4)"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(b\"\\n4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\") == \"0\\n0\"\nassert solution(\"3 3\\n1 1 -2 0\\n2 1 -1 -1\\n2 3 1 1\\n2 -1 -2 2\\n3 -3 -1 -1\") == \"1\\n2\\n3\"\nassert solution(\"4 5\\n1 1 -2 0\\n2 1 -1 -1\\n2 3 1 1\\n2 -1 -2 2\\n3 -3 -1 -1\\n3 2 -2 2\") == \"1\\n2\\n3\"\nassert solution(\"6 7\\n1 1 -2 0\\n2 1 -1 -1\\n2 3 1 1\\n2 -1 -2 2\\n3 -3 -1 -1\\n3 2 -2 2\\n4 -2 -1 -1\\n4 4 -1 -1\\n5 -4 0 -2\") == \"2\\n3\\n4\""
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\\n\") == \"0\\n\""
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '0\\n', \"The solution is incorrect\"\n"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 -2 0\\n\") == \"0\\n\"\nassert solution(\"2 1\\n1 1 -2 0\\n2 2 -3 0\\n\") == \"2\\n\"\nassert solution(\"2 3\\n-2 -3 -4 0\\n0 0 0 0\\n\") == \"6\\n\"\nassert solution(\"3 4\\n0 -1 2 3\\n-2 0 -3 4\\n-3 -4 5 6\\n\") == \"10\\n\"\nassert solution(\"4 5\\n-1 0 -2 1\\n-2 1 3 4\\n-3 2 4 5\\n-4 3 5 6\\n\") == \"14\\n\""
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 -2 0\") == \"0\\n\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\") == 0\nassert solution(\"3 2\\n1 1 -2 1\\n2 1 -1 1\\n3 2 -1 0\\n4 0 0 1\") == 1\nassert solution(\"5 3\\n1 1 -2 1\\n2 1 -1 1\\n3 2 -1 0\\n4 0 0 1\\n5 3 -1 1\\n6 1 1 1\\n7 0 1 1\\n8 1 0 1\\n9 1 1 1\\n10 2 1 1\") == 3\nassert solution(\"10 4\\n1 1 -2 1\\n2 1 -1 1\\n3 2 -1 0\\n4 0 0 1\\n5 3 -1 1\\n6 1 1 1\\n7 0 1 1\\n8 1 0 1\\n9 1 1 1\\n10 2 1 1\\n11 1 1 1\\n12 0 1 1\\n13 1 0 1\\n14 1 1 1\\n15 2 1 1\\n16 1 1 1\\n17 2 0 1\\n18 1 1 1\\n19 2 1 0\\n20 1 1 1\\n21 2 1 1\\n22 1 0 1\\n23 1 1 0\\n24 2 1 1\\n25 1 1 1\\n26 2 1 1\\n27 1 0 1\\n28 1 1 0\\n29 2 1 1\\n30 1 1 1\\n31 2 1 1\\n32 1 0 1\\n33 1 1 0\\n34 2 1 1\\n35 1 1 1\\n36 2 1 1\\n37 1 0 1\\n38 1 1 0\\n39 2 1 1\\n40 1 1 1\\n41 2 1 1\\n42 1 0 1\\n43 1 1 0\\n44 2 1 1\\n45 1 1 1\\n46 2 1 1\\n47 1 0 1\\n48 1 1 0\\n49 2 1 1\\n50 1 1 1\\n51 2 1 1\\n52 1 0 1\\n53 1 1 0\\n54 2 1 1\\n55 1 1 1\\n56 2 1 1\\n57 1 0 1\\n58 1 1 0\\n59 2 1 1\\n60 1 1 1\\n61 2 1 1\\n62 1 0 1\\n63 1 1 0\\n64 2 1 1\\n65 1 1 1\\n66 2 1 1\\n67 1 0 1\\n68 1 1 0\\n69 2 1 1\\n70 1 1 1\\n71 2 1 1\\n72 1 0 1\\n73 1 1 0\\n74 2 1 1\\n75 1 1 1\\n76 2 1 1\\n77 1 0 1\\n78 1 1 0\\n79 2 1 1\\n80 1 1 1\\n81 2 1 1\\n82 1 0 1\\n83 1 1 0\\n84 2 1 1\\n85 1 1 1\\n86 2 1 "
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\\n\") == \"0\\n\"\nassert solution(\"2 2\\n1 1 -2 0\\n2 0\\n1 -1\\n\") == \"3\\n\"\nassert solution(\"3 2\\n1 1 -2 0\\n2 0\\n1 -1\\n2 2\\n1 1 -2 0\\n\") == \"0\\n\"\nassert solution(\"4 3\\n1 1 -2 0\\n2 0\\n1 -1\\n2 2\\n1 1 -2 0\\n3 1\\n\") == \"0\\n\"\nassert solution(\"5 4\\n1 1 -2 0\\n2 0\\n1 -1\\n2 2\\n1 1 -2 0\\n3 1\\n4 2\\n1 1 -2 0\\n3 1\\n5 3\\n1 1 -2 0\\n3 1\\n4 2\\n1 1 -2 0\\n3 1\\n\") == \"3\\n\""
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Solution: {solution(input())}, Output: {output}\""
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 1\\n1 1 -2 0') == '0'\nprint('Test Passed')"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == \"0\", solution(sample_input)"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"194\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\\n2019 10 25\\n2020 10 30\\n\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_str) == output_str, f\"Incorrect output: {output_str}\"\nfor i in range(len(expected_output)):\n    assert expected_output[i] == output_str[i], f\"Incorrect output at index {i}: {output_str[i]}\"\n"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\") == \"194\\n2019 10 25\\n2020 10 30\"\nassert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\") == \"194\\n2019 10 25\\n2020 10 30\"\nassert solution(\"1\\n1\\n2018\\n2019\\n2020\\n2021\\n2022\\n2023\\n2024\\n2025\\n2026\\n2027\\n2028\\n2029\\n2030\\n2031\\n2032\\n2033\\n2034\\n2035\\n2036\\n2037\\n2038\\n2039\\n2040\\n2041\\n2042\\n2043\\n2044\\n2045\\n2046\\n2047\\n2048\\n2049\\n2050\\n2051\\n2052\\n2053\\n2054\\n2055\\n2056\\n2057\\n2058\\n2059\\n2060\\n2061\\n2062\\n2063\\n2064\\n2065\\n2066\\n2067\\n2068\\n2069\\n2070\\n2071\\n2072\\n2073\\n2074\\n2075\\n2076\\n2077\\n2078\\n2079\\n2080\\n2081\\n2082\\n2083\\n2084\\n2085\\n2086\\n2087\\n2088\\n2089\\n2090\\n2091\\n2092\\n2093\\n2094\\n2095\\n2096\\n2097\\n2098\\n2099\\n2100\" == \"17\"\nassert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\") == \"194\\n2019 10 25\\n2020 10 30\"\nassert solution(\"1\\n1\\n2018\\n2019\\n2020\\n2021\\n2022\\n2023\\n2024\\n2025\\n2026\\n2027\\n2028\\n2029\\n2030\\n2031\\n2032\\n2033\\n2034\\n2035\\n2036\\n2037\\n2038\\n2039\\n2040\\n2041\\n2042\\n2043\\n2044\\n2045\\n2046\\n2047\\n2048\\n2049\\n2050\\n2051\\n2052"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\") == \"194\\n2019 10 25\\n2020 10 30\"\nassert solution(\"5\\n2019 10 20\\n2019 10 21\\n2019 10 22\\n2019 10 23\\n2019 10 24\\n2020 10 01\\n2020 10 02\\n2020 10 03\\n2020 10 04\\n2020 10 05\\n2020 10 06\\n2020 10 07\\n2020 10 08\\n2020 10 09\\n2020 10 10\\n2020 10 11\\n2020 10 12\\n2020 10 13\\n2020 10 14\\n2020 10 15\\n2020 10 16\\n2020 10 17\\n2020 10 18\\n2020 10 19\\n2020 10 20\\n2020 10 21\\n2020 10 22\\n2020 10 23\\n2020 10 24\\n2020 10 25\\n2020 10 26\\n2020 10 27\\n2020 10 28\\n2020 10 29\\n2020 10 30\" == \"2006\\n2020 10 30\\n2020 11 01\\n2020 11 02\\n2020 11 03\\n2020 11 04\\n2020 11 05\\n2020 11 06\\n2020 11 07\\n2020 11 08\\n2020 11 09\\n2020 11 10\\n2020 11 11\\n2020 11 12\\n2020 11 13\\n2020 11 14\\n2020 11 15\\n2020 11 16\\n2020 11 17\\n2020 11 18\\n2020 11 19\\n2020 11 20\\n2020 11 21\\n2020 11 22\\n2020 11 23\\n2020 11 24\\n2020 11 25\\n2020 11 26\\n2020 11 27\\n2020 11 28\\n2020 11 29\\n2020 11 30\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\") == \"194\\n2019 10 25\\n2020 10 30\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\\n2019 10 25\\n2020 10 30\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    2\n    5\n    \"\"\"\n) == \"\"\"\n194\n2019 10 25\n2020 10 30\n\"\"\"\n\nassert solution(\n    \"\"\"\n    3\n    2019\n    2020\n    2021\n    2400\n    \"\"\"\n) == \"\"\"\n1800\n2019 10 25\n2020 10 25\n2021 10 25\n2400\n\"\"\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\") == \"194\\n2019 10 25\\n2020 10 30\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    '''\n    2\n    5\n    2019 10 18\n    2019 10 19\n    2020 10 02\n    2020 10 16\n    2020 10 23\n    '''\n) == '''\n194\n2019 10 25\n2020 10 30\n'''\n\nassert solution(\n    '''\n    3\n    4\n    2019 1 1\n    2019 1 2\n    2019 2 1\n    2019 2 2\n    2019 3 1\n    2019 3 2\n    2019 3 3\n    2019 3 4\n    2019 4 1\n    2019 4 2\n    2019 5 1\n    2019 5 2\n    2019 6 1\n    2019 6 2\n    2019 7 1\n    2019 7 2\n    2019 8 1\n    2019 8 2\n    2019 9 1\n    2019 9 2\n    2019 10 1\n    2019 10 2\n    2019 11 1\n    2019 11 2\n    2019 12 1\n    2019 12 2\n    2019 13 1\n    2019 13 2\n    2019 14 1\n    2019 14 2\n    2019 15 1\n    2019 15 2\n    2019 16 1\n    2019 16 2\n    2019 17 1\n    2019 17 2\n    2019 18 1\n    2019 18 2\n    2019 19 1\n    2019 19 2\n    2019 20 1\n    2019 20 2\n    2019 21 1\n    2019 21 2\n    2019 22 1\n    2019 22 2\n    2019 23 1\n    2019 23 2\n    2019 24 1\n    2019 24 2\n    2019 25 1\n    2019 25 2\n    2019 26 1\n    2019 26 2\n    2019 27 1\n    2019 27 2\n    2019 28 1\n    2019 28 2\n    2019 29 1\n    2019 29 2\n    2019 30 1\n    2019 30 2\n    2019 31 1\n    2019 31 2\n    2020 1 1\n    2020 1 2\n    2020 2 1\n    2020 2 2\n    2020 3 1\n    2020 3 2\n    2020 3 3\n    2020 3 4\n    2020 4 1\n    2020 4 2\n    2020 5 1\n    2020 5 2\n    2020 6 1\n    2020 6 2\n    2020 7 1\n    2020 7 2\n    2020 8 1\n    2020 8 2\n    2020 9 1\n    2020 9 2\n    2020 10 1\n    2020 10 2\n    2020 11 1\n    2020 11 2\n    2020 12 1\n    2020 12 2\n    2020 13 1\n    2020 13 2\n    2020 14 1\n    2020 14 2\n    2020 15 1\n    2020 1"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected output: {sample_output}\\nActual output: {solution(sample_input)}\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, \"Testcase failed: expected output: {}, got: {}\".format(output, solution(input()))"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([5, 10, 10, 10, 10, 0]) == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\"\nassert solution([6, 10, 10, 10, 10, 0]) == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"negative-infinity 0\\n5 12.5\"\nassert solution() == \"negative-infinity -5\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0') == 'negative-infinity 0\\n5 12.5\\nnegative-infinity -5'\nassert solution('5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0') == '5 12.5\\nnegative-infinity -5'"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\"\n) == \"negative-infinity 0\\n5 12.5\"\n\nassert solution(\n    \"5 10 10 5 10 0\\n6 10 10 10 10 0\\n5 10 10 10 10 0\"\n) == \"negative-infinity -5\\n5 12.5\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"negative-infinity 0\\n5 12.5\"\nassert solution(input()) == \"negative-infinity -5\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"negative-infinity 0\"\nassert solution(stdin) == \"5 12.5\"\nassert solution(stdin) == \"negative-infinity -5\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\"\n"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\").read()) == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\\n\""
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n\") == \"2\"\nassert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n600 40000\\n\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"2\\n\"\nassert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 40000\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r\"\"\"\n4 4\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000\n\"\"\") == \"2\"\n\nassert solution(r\"\"\"\n4 4\n200 10000\n100 30000\n400 0\n50 10000\n75 20000\n400 -40000\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(r\"\"\"\n4 4\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(r\"\"\"\n4 4\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(r\"\"\"\n4 4\n200 10000\n100 30000\n400 0\n50 10000\n75 20000\n400 -40000\n\"\"\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == '''\n"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"2\\n\"\nassert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n10 20\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\""
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"2\\n\\nIMPOSSIBLE\"\nassert solution(\"2 4\\n200 10000\\n300 20000\\n400 30000\\n50 40000\\n60 50000\\n70 60000\\n80 70000\\n90 80000\\n100 90000\\n110 100000\\n120 110000\\n130 120000\\n140 130000\\n150 140000\\n160 150000\\n170 160000\\n180 170000\\n190 180000\\n200 190000\\n210 200000\\n220 210000\\n230 220000\\n240 230000\\n250 240000\\n260 250000\\n270 260000\\n280 270000\\n290 280000\\n300 290000\\n310 300000\\n320 310000\\n330 320000\\n340 330000\\n350 340000\\n360 350000\\n370 360000\\n380 370000\\n390 380000\\n400 390000\\n410 400000\\n420 410000\\n430 420000\\n440 430000\\n450 440000\\n460 450000\\n470 460000\\n480 470000\\n490 480000\\n500 490000\\n510 500000\\n520 510000\\n530 520000\\n540 530000\\n550 540000\\n560 550000\\n570 560000\\n580 570000\\n590 580000\\n600 590000\\n610 600000\\n620 610000\\n630 620000\\n640 630000\\n650 640000\\n660 650000\\n670 660000\\n680 670000\\n690 680000\\n700 690000\\n710 700000\\n720 710000\\n730 720000\\n740 730000\\n750 740000\\n760 750000\\n770 760000\\n780 770000\\n790 780000\\n800 79"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"2\\n\"\nassert solution(\"1 2\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"IMPOSSIBLE\\n\"\nassert solution(\"3 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"IMPOSSIBLE\\n\"\nassert solution(\"5 6\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"IMPOSSIBLE\\n\"\nassert solution(\"8 10\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"IMPOSSIBLE\\n\"\nassert solution(\"9 10\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"IMPOSSIBLE\\n\"\nassert solution(\"10 11\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"IMPOSSIBLE\\n\"\nassert solution(\"12 12\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"IMPOSSIBLE\\n\"\nassert solution(\"13 13\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"IMPOSSIBLE\\n\"\nassert solution(\"14 14\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"IMPOSSIBLE\\n\"\nassert solution(\"15 15\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"IMPOSSIBLE\\n\"\nassert solution(\"16 16\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r').read()) == '2'"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n    4 4\n    100 30000\n    200 20000\n    300 10000\n    400 0\n    50 10000\n    75 20000\n    400 -40000\n    \"\"\") == \"2\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100') == '345 2\\nrotS 2 1\\nnegR 2'\n"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"345 2\\nrotS 2 1\\nnegR 2\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\\n\"\n"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\\n\"\nassert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\\n\"\nassert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\\n\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\\n\") == \"345 2\\nrotS 2 1\\nnegR 2\"\n"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"345 2\\nrotS 2 1\\nnegR 2\"\n"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"345 2\\nrotS 2 1\\nnegR 2\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100') == '345 2\\nrotS 2 1\\nnegR 2'\nassert solution('4 3\\n-1 0 2 300\\n-4 5 -2 600\\n1 -2 3 400') == '4520 2\\nrotS 1 3\\nnegS 3'\nassert solution('5 5\\n1 2 3 400\\n5 6 7 800\\n9 10 11 1200') == '54320 2\\nrotR 3 1\\nnegR 4'\nassert solution('3 4\\n2 -3 4 500\\n7 8 9 1000\\n12 13 14 1500') == '680 2\\nrotS 2 1\\nnegR 3'\nassert solution('3 3\\n1 -2 3 400\\n5 6 7 800\\n9 10 11 1200') == '2432 2\\nrotR 1 3\\nnegR 2'\nassert solution('10 10\\n1 2 3 400\\n5 6 7 800\\n9 10 11 1200') == '20448 2\\nrotR 3 1\\nnegR 4'"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n3 1 1\\n\") == \"0.5\""
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}, Explanation: {explanation}\""
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n3 1 1\\n\") == \"0.5\\n\"\n"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 2\\n3 1 1') == '0.5'"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '0.5', \"The solution should be 0.5.\""
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0.5\\n\", \"Sample Input: 3 2\\nSample Output: 0.5\\n\""
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n3 1 1\") == \"0.5\\n\""
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == '0.5', 'Expected output: 0.5, got: {}.'.format(solution(sample_input))"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 0.5"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '0.5'"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    9 11\n    1 4\n    5 4\n    1 5\n    6 2\n    6 7\n    7 2\n    3 8\n    3 9\n    8 9\n    6 8\n    5 9\n    \"\"\"\n) == \"\"\"\n1 4 5\n2 6 7\n\"\"\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n''') == '''\n1 4 5\n2 6 7\n'''\n\nassert solution('''\n9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n10 10\n''') == '''\nimpossible\n'''\n\nassert solution('''\n9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n1 3\n2 1\n3 6\n4 8\n5 6\n6 4\n7 1\n8 5\n9 2\n10 7\n''') == '''\n1 3 1 2 3 4 5 6 7 8 9\n'''\n\nassert solution('''\n9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n1 3\n2 1\n3 6\n4 8\n5 6\n6 4\n7 1\n8 5\n9 2\n10 7\n''') == '''\n1 3 1 2 3 4 5 6 7 8 9\n'''"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"1 4 5\\n2 6 7\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9') == '1 4 5\\n2 6 7'\nprint('All test cases pass')"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == expected_output, \"The given code is not correct. Please, check the examples and inputs given.\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n\"\"\") == \"\"\"1 4 5\n2 6 7\"\"\"\n"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9''') == '''1 4 5\n2 6 7'''"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"1 4 5\\n2 6 7\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"1 4 5\\n2 6 7\\n\", \"1 4 5\\n2 6 7\\n\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n\") == \"1 4 5\\n2 6 7\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected, f\"Expected: {expected}, Actual: {solution}\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected_solution, f\"Solution is incorrect. Expected: {expected_solution}, Got: {solution}\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"13500\\n\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\") == \"13500\\n\"\nassert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\") == \"13500\\n\"\nassert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\") == \"13500\\n\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 13500, \"Incorrect solution.\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\") == \"13500\\n\", \"Test failed\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"13500\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000') == '13500'"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\") == \"13500\\n\"\nassert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\") == \"13500\\n\"\nassert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\") == \"13500\\n\"\nassert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\") == \"13500\\n\"\nassert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\") == \"13500\\n\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    11 2\n    12000\n    9000\n    4500\n    10000\n    12000\n    11000\n    12000\n    18000\n    10000\n    9000\n    12000\n''') == '13500'"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\n\") == \"Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,______________________________\\n\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4') == 'Hot_cross_buns!_=___Hot_cross_buns!_=One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_def_solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\n') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,__________\\n'"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\"\n) == \"Hot_cross_buns!_=___Hot_cross_buns!_=One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\n\") == \"Hot_cross_buns!_=___Hot_cross_buns!_=____________________Hot_cross_buns!_=One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,def solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\n\") == \"Hot_cross_buns!_=___Hot_cross_buns!_=____________________Hot_cross_buns!_=One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Solution for {stdin} is incorrect, expected {expected}, but got {solution(stdin)}\"\n"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\n\") == \"Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,def solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\") == \"\\nHot_cross_buns!_=___Hot_cross_buns!_=\\\\n____________________Hot_cross_buns!_=\\\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\\\ndef solution(stdin: str) -> str:\\\\n    pass\\n\"\nassert solution(\"2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\nSample Output:\\\\nHot_cross_buns!_=___Hot_cross_buns!_=\\\\n____________________Hot_cross_buns!_=\\\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\\\ndef solution(stdin: str) -> str:\\\\n    pass\\n\") == \"\\nHot_cross_buns!_=___Hot_cross_buns!_=\\\\n____________________Hot_cross_buns!_=\\\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\\\ndef solution(stdin: str) -> str:\\\\n    pass\\n\"\n\nassert solution(\"2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\nSample Output:\\\\nHot_cross_buns!_=___Hot_cross_buns!_=\\\\n____________________Hot_cross_buns!_=\\\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\\\ndef solution(stdin: str) -> str:\\\\n    pass\\n\") == \"\\nHot_cross_buns!_=___Hot_cross_buns!_=\\\\n____________________Hot_cross_buns!_=\\\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\\\ndef solution(stdin: str) -> str:\\\\n    pass\\n\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\n') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\n____________________Hot_cross_buns!_=\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\n'\n\nassert solution('2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\n') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\n____________________Hot_cross_buns!_=\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\n'"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"Solution: {solution(stdin)}\\nExpected Output: {expected_output}\""
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33') == '33\\n'"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33') == 33"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33') == '33\\n'\nassert solution('5 10 2 10\\n1 2 3 10 20\\n1 3 3 2 20\\n1 4 3 1 20\\n1 5 3 2 20\\n2 3 2 1 15\\n2 4 2 2 15\\n2 5 2 3 15\\n2 6 2 4 15\\n3 4 1 1 10\\n3 5 1 2 10\\n3 6 1 3 10\\n3 7 1 4 10\\n4 5 2 1 10\\n4 6 2 2 10\\n4 7 2 3 10\\n5 6 3 1 10\\n5 7 3 2 10\\n5 8 3 3 10\\n6 7 4 1 10\\n6 8 4 2 10\\n6 9 4 3 10\\n7 8 5 1 10\\n7 9 5 2 10\\n7 10 5 3 10\\n8 9 6 1 10\\n8 10 6 2 10\\n8 11 6 3 10\\n9 10 7 1 10\\n9 11 7 2 10\\n9 12 7 3 10\\n10 11 8 1 10\\n10 12 8 2 10\\n10 13 8 3 10\\n11 12 9 1 10\\n11 13 9 2 10\\n11 14 9 3 10\\n12 13 10 1 10\\n12 14 10 2 10\\n12 15 10 3 10\\n13 14 11 1 10\\n13 15 11 2 10\\n13 16 11 3 10\\n14 15 12 1 10\\n14 16 12 2 10\\n14 17 12 3 10\\n15 16 13 1 10\\n15 17 13 2 10\\n15 18 13 3 10\\n16 17 14 1 10\\n16 18 14 2 10\\n16 19 14 3 10\\n17 18 15 1 10\\n17 19 15 2 10\\n17 20 15 3 10\\n18 19 16 1 10\\n18 20 16 2 10\\n18 21 16 3 10\\n19 20 17 1 10\\n19 21 17 2 10\\n19 22 17 3 10\\n20 21 18 1 10\\n20 22 18 2 10\\n20 23 18 3 10\\n21 22 19 1 10\\n21 23 19 2 10\\n21 24 19 3 10\\n22 23 20 1 10\\n22 24 20 2 10\\n22 25 20 3 10\\n23 24 21 1"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 33"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == \"33\"\n"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n    3 2 1\n    1 2 10\n    1 4 6 6\n    1 6 10 5\n    2 10 30 33\n    \"\"\") == \"33\\n\""
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"33\\n\""
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\") == 33\nassert solution(\"4 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\") == 22\nassert solution(\"10 10 10 10\") == 100\n"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == '33'"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '405'"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output, \"Incorrect solution\""
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"405\""
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"405\", \"The output does not match the expected output.\""
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"405\""
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n20 15 10\\n7 7\\n30 0\") == \"405\"\n"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n20 15 10\\n7 7\\n30 0\") == \"405\""
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n20 15 10\\n7 7\\n30 0\") == \"405\""
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''3\n20 15 10\n7 7\n30 0''') == '405'"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n20 15 10\\n7 7\\n30 0\") == \"405\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2 4 7') == '28 4 21 14.0\\n'\n"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n1 2 4 7\\n') == '28 4 21 14.0\\n'\nassert solution('5\\n1 2 3 4\\n') == '60 6 36 24.0\\n'\nassert solution('3\\n1 2 3\\n') == '10 12 24\\n'"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"28 4 21 14.0\\n\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2 4 7\\n\") == \"28 4 21 14.0\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\"\nassert solution(\"5\\n1 2 4 7 8 9\") == \"28 12 21 10.5\"\nassert solution(\"6\\n1 2 3 4 5\") == \"20 20 20 20 20\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"30 24 14 8 6\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8 9 10\") == \"36 28 18 12 10\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\") == \"36 28 18 12 10\"\n"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    4\n    1 2 4 7\n    \"\"\"\n) == \"\"\"\n28\n4\n21\n14.0\n\"\"\"\n"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 2\\n1 2 3 4\\n2 3 4 1\\n') == 'yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3'"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\"\nassert solution(\"4 3\\n1 2 3 4\\n2 3 4 1\") == \"no\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\") == \"no\"\nassert solution(\"4 5\\n1 2 3 4\\n2 3 4 1\") == \"no\"\nassert solution(\"4 6\\n1 2 3 4\\n2 3 4 1\") == \"no\"\nassert solution(\"4 7\\n1 2 3 4\\n2 3 4 1\") == \"no\"\nassert solution(\"4 8\\n1 2 3 4\\n2 3 4 1\") == \"no\"\nassert solution(\"4 9\\n1 2 3 4\\n2 3 4 1\") == \"no\""
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"yes\"\nassert solution() == \"yes\"\nassert solution() == \"no\"\nassert solution() == \"no\"\n"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\\n\", \"Test case 1 failed\"\n\nassert solution() == \"no\\n\", \"Test case 2 failed\"\n\nassert solution() == \"no\\n\", \"Test case 3 failed\"\n\nassert solution() == \"yes\\n4 2 \\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\\n\", \"Test case 4 failed\""
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"\"\"yes\n1 2 3 4 \n2 3 4 1 \n3 4 1 2 \n4 1 2 3\"\"\"\n\nassert solution == \"\"\"no\n1 2 3 4 \n2 3 4 1 \n3 4 1 2 \n4 1 2 3\"\"\"\n\nassert solution == \"\"\"yes\n1 2 3 4 \n2 3 4 1 \n3 4 1 2 \n4 1 2 3\"\"\"\n\nassert solution == \"\"\"yes\n1 2 3 4 \n2 3 4 1 \n3 4 1 2 \n4 1 2 3\"\"\"\n\nassert solution == \"\"\"no\n1 2 3 4 \n2 3 4 1 \n3 4 1 2 \n4 1 2 3\"\"\""
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\"\nassert solution(\"1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\\n5 6 7 8\\n6 7 8 5\\n7 8 5 6\\n8 5 6 7\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\"\nassert solution(\"1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\\n5 6 7 8\\n6 7 8 5\\n7 8 5 6\\n8 5 6 7\\n9 10 11 12\\n10 11 12 9\\n11 12 9 10\\n12 9 10 11\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\"\nassert solution(\"1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\\n5 6 7 8\\n6 7 8 5\\n7 8 5 6\\n8 5 6 7\\n9 10 11 12\\n10 11 12 9\\n11 12 9 10\\n12 9 10 11\\n13 14 15 16\\n14 15 16 13\\n15 16 13 14\\n16 13 14 15\\n17 18 19 20\\n18 19 20 17\\n19 20 17 18\\n20 17 18 19\" == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\""
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 3\\n1 2 3 4\\n2 3 4 1\") == \"no\"\nassert solution(\"6 3\\n1 2 3 4\\n2 3 4 1\") == \"no\"\nassert solution(\"7 3\\n1 2 3 4\\n2 3 4 1\") == \"no\""
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(\"3 4\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(\"5 5\\n1 2 3 4 5\\n2 3 4 1 6\\n3 4 1 2 7\\n4 1 2 3 8\") == \"no\""
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\\n\") == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\\n\") == \"no\\n4 2\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(\"3 3\\n1 2 3\\n2 3 4\\n3 4 5\\n\") == \"yes\\n1 2 3\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9\"\nassert solution(\"3 3\\n1 2 3\\n2 3 4\\n3 4 5\\n\") == \"no\\n3 3\\n1 2 3\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9\"\nassert solution(\"1 1\\n1 1 1\\n1 1 1\\n\") == \"no\\n1 1\\n1 1 1\\n1 1 1\\n1 1 1\""
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 2\\n1 2 3 4\\n2 3 4 1') == 'yes\\n1 2 3 4\\n2 3 4 1'\nassert solution('4 3\\n1 2 3 4\\n2 3 4 1') == 'yes\\n1 2 3 4\\n2 3 4 1'\nassert solution('4 4\\n1 2 3 4\\n2 3 4 1') == 'yes\\n1 2 3 4\\n2 3 4 1'\nassert solution('5 5\\n1 2 3 4\\n2 3 4 1') == 'no'\n"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '10.000000000'\nassert solution(stdin) == '10.000000000'\nassert solution(stdin) == '0.000000000'\nassert solution(stdin) == '0.000000000'\nassert solution(stdin) == '10.000000000'\nassert solution(stdin) == '10.000000000'"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n10 10 -10 -4 10') == '10.000000000'"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n10 10 -10 -4 10\") == \"10.000000000\\n\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n10 10 -10 -4 10\") == \"10.000000000\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"10.000000000\\n\"\n"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n10 10 -10 -4 10\") == \"10.000000000\"\nassert solution(\"1\\n2 3\\n4 5\") == \"0.000000000\"\nassert solution(\"1\\n-5\") == \"0.000000000\"\nassert solution(\"1\\n0\") == \"0.000000000\"\nassert solution(\"5\\n-10 -5 -1 -2 3\") == \"0.000000000\"\nassert solution(\"4\\n1\\n2\\n3\\n4\") == \"10.000000000\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n10 10 -10 -4 10\") == \"10.000000000\"\nassert solution(\"10\\n-10 -4 10\") == \"0.000000000\"\nassert solution(\"5\\n10 10 -10 -4 10\\n10\\n-10 -4 10\") == \"10.000000000\"\nassert solution(\"10\\n-10 -4 10\\n10\\n-10 -4 10\") == \"0.000000000\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"10.000000000\\n\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"10.000000000\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n10 10 -10 -4 10\") == \"10.000000000\\n\""
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(None) == \"Error: Please provide the input for test case 1.\"\nassert solution(\"\") == \"Error: Please provide the input for test case 1.\"\nassert solution(\"Input:\\n4\\n30\\n3\\n2\\n45\\n\") == \"Error: Please provide the input for test case 1.\"\nassert solution(\"Input:\\n4\\n30\\n3\\n2\\n45\\nSample Output:\\n1\\n\") == \"Error: Please provide the input for test case 1.\"\nassert solution(\"Input:\\n2\\n100\\n1\\n3\\n5\\nSample Output:\\nError: The number of students should be at least 2.\""
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 1, \"Incorrect result\""
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 1\n"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n30\\n3\\n2\\n45\") == \"1\\n\", \"Test 1 failed\"\nassert solution(\"5\\n20\\n1\\n10\\n5\") == \"1\\n\", \"Test 2 failed\"\nassert solution(\"7\\n10\\n2\\n4\\n1\\n3\") == \"1\\n\", \"Test 3 failed\""
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n30\\n3\\n2\\n45\") == 1, \"Expected 1, got {}.\".format(solution(\"4\\n30\\n3\\n2\\n45\"))"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(4) == 1\nassert solution(9) == 1\nassert solution(16) == 1\nassert solution(25) == 1\nassert solution(36) == 1"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n30\\n3\\n2\\n45\\n\") == \"1\\n\""
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(300) == 1"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4, 30, 3, 2, 45) == 1\nassert solution(5, 30, 3, 2, 45) == 2\nassert solution(6, 30, 3, 2, 45) == 2\nassert solution(7, 30, 3, 2, 45) == 3\nassert solution(8, 30, 3, 2, 45) == 3\nassert solution(9, 30, 3, 2, 45) == 3\nassert solution(10, 30, 3, 2, 45) == 4\nassert solution(11, 30, 3, 2, 45) == 4\nassert solution(12, 30, 3, 2, 45) == 4\nassert solution(13, 30, 3, 2, 45) == 4\nassert solution(14, 30, 3, 2, 45) == 5\nassert solution(15, 30, 3, 2, 45) == 5\nassert solution(16, 30, 3, 2, 45) == 5\nassert solution(17, 30, 3, 2, 45) == 5\nassert solution(18, 30, 3, 2, 45) == 5\nassert solution(19, 30, 3, 2, 45) == 5\nassert solution(20, 30, 3, 2, 45) == 5\nassert solution(21, 30, 3, 2, 45) == 6\nassert solution(22, 30, 3, 2, 45) == 6\nassert solution(23, 30, 3, 2, 45) == 6\nassert solution(24, 30, 3, 2, 45) == 6\nassert solution(25, 30, 3, 2, 45) == 6\nassert solution(26, 30, 3, 2, 45) == 6\nassert solution(27, 30, 3, 2, 45) == 6\nassert solution(28, 30, 3, 2, 45) == 6\nassert solution(29, 30, 3, 2, 45) == 6\nassert solution(30, 30, 3, 2, 45) == 7\nassert solution(31, 30, 3, 2, 45) == 7\nassert solution(32, 30, 3, 2, 45) == 7\nassert solution(33, 30, 3, 2, 45) == 7\nassert solution(34, 30, 3, 2, 45) == 7\nassert solution(35, 30, 3, 2, 45) == 7\nassert solution(36, 30, 3, 2, 45) == 7\nassert solution(37, 30, 3, 2, 45) == 7\nassert solution(38, 30, 3, 2, 45) == 7\nassert solution(39, 30, 3, 2, 45) == 7\nassert solution(40, 30, 3, 2, 45) == 8\nassert solution(41, 30, 3, 2, 45) == 8\nassert solution(42, 30, 3, 2, 45) == 8\nassert solution(43, 30, 3, 2, 45) == 8\nassert solution(44, 30, 3, 2, 45) == 8\nassert solution(45, 30, 3, 2, 45) == 8\nassert solution(46, 30, 3, 2, 45) == 8\n"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\"\"\") == \"0.000000000 1.360000000\"\nassert solution(\"\"\"6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\"\"\") == \"0.000000000 1.000000000\"\nassert solution(\"\"\"6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\"\"\") == \"0.000000000 -1.000000000\"\nassert solution(\"\"\"6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\"\"\") == \"0.000000000 0.360000000\"\nassert solution(\"\"\"6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\"\"\") == \"0.880000000 0.000000000\"\nassert solution(\"\"\"6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\"\"\") == \"-0.880000000 -0.360000000\"\nassert solution(\"\"\"6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\"\"\") == \"1.02037965897\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3''') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897''\\n', 'incorrect solution')"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == output, f\"Expected '{output}', got '{solution(stdin)}'.\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected, f\"Expected {expected}, but got {solution}\"\n"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\"\"\") == \"\"\"0.000000000 1.360000000\n0.000000000 1.000000000\n0.000000000 -1.000000000\n0.000000000 0.360000000\n0.880000000 0.000000000\n-0.880000000 -0.360000000\n1.02037965897\"\"\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\\n'\n"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"6 6 3.0 0.66\n    2 4 8\n    4 6 1\n    3 6 1\n    4 5 5\n    1 5 7\n    3 5 3\"\"\"\n) == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\"\"\"\n)\n\nassert solution(\n    \"\"\"8 8 3.0 0.66\n    2 4 8\n    4 6 1\n    3 6 1\n    4 5 5\n    1 5 7\n    3 5 3\"\"\"\n) == \"1.000000000 0.000000000\\n1.000000000 -0.000000000\\n-0.000000000 0.000000000\\n-0.000000000 0.000000000\\n0.000000000 0.000000000\\n0.000000000 0.000000000\\n0.000000000 0.000000000\\n0.000000000 0.000000000\"\"\"\n)\n\nassert solution(\n    \"\"\"10 10 3.0 0.66\n    2 4 8\n    4 6 1\n    3 6 1\n    4 5 5\n    1 5 7\n    3 5 3\"\"\"\n) == \"0.000000000 1.000000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\"\n)\n\nassert solution(\n    \"\"\"6 6 3.0 0.66\n    2 4 8\n    4 6 1\n    3 6 1\n    4 5 5\n    1 5 7\n    3 5 3\"\"\"\n) == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\"\n)\n\nassert solution(\n    \"\"\"8 8 3.0 0.66\n    2 4 8\n    4 6 1\n    3 6 1\n    4 5 5\n    1 5 7\n    3 5 3\"\"\"\n) == \"1.000000000 0.00000000"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\"\n"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\") == \"4\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin: str) == '4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2'"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\") == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n\") == \"4\"\nassert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n3\\n0 1\\n2 2\\n\") == \"3\"\nassert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n3\\n0 1\\n2 2\\n4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n3\\n0 1\\n2 2\\n\") == \"2\""
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\") == 4\nassert solution(\"5\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n1 1\") == 5"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\") == 4"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2') == 4\nassert solution('4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n3 2\\n0 3') == 12\nassert solution('5\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n3 2\\n0 3\\n3 4\\n4 4') == 6\nassert solution('5\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n3 2\\n0 3\\n3 4\\n4 4\\n4 5\\n5 5') == 12\nassert solution('5\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n3 2\\n0 3\\n3 4\\n4 4\\n4 5\\n5 5\\n6 5\\n0 6') == 13\nassert solution('5\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n3 2\\n0 3\\n3 4\\n4 4\\n4 5\\n5 5\\n6 5\\n0 6\\n6 6\\n1 6\\n4 5\\n2 6\\n0 6\\n1 5\\n3 4\\n5 4\\n0 5\\n5 5\\n6 6\\n2 6\\n4 5\\n0 5\\n1 5\\n3 4\\n5 4\\n0 5\\n1 5\\n3 4\\n5 4\\n0 5\\n1 5\\n3 4\\n5 4\\n0 5\\n1 5\\n3 4\\n5 4\\n0 5\\n1 5\\n3 4\\n5 4\\n0 5\\n1 5\\n3 4\\n5 4\\n0 5\\n1 5\\n3 4\\n5 4\\n0 5\\n1 5\\n3 4\\n5 4\\n0 5\\n1 5\\n3 4\\n5 4\\n0 5\\n1 5\\n3 4\\n5 4\\n0 5\\n1 5\\n3 4\\n5 4\\n0 5\\n1 5\\n3 4\\n5 4\\n0 5\\n1 5\\n3 4\\n5 4\\n0 5\\n1 5\\n3 4\\n5 4\\n0 5\\n1 5\\n3 4\\n5 4\\n0 5\\n1 5\\n3 4\\n5 4\\n0 5\\n1 5\\n3 4\\n5 4\\n0 5\\n1 5\\n3 4\\n5 4\\n0 5\\n1 5\\n3 4\\n5 4\\n0 5\\n1 5\\n3 4\\n5 4\\n0 5\\n1 5\\n3 4\\n5 4\\n0 5\\n1 5\\n3 4\\n5 4\\n0 5\\n1 5\\n3 4\\n5 4\\n0 5\\n1 5\\n3 4\\n5 4\\n0 5\\n1 5\\n3 4\\n5 4\\n0 5\\n1 5\\n3 4\\n5 4\\n0 5\\n1 5\\n3 4\\n5 4\\n0 5\\n1 5\\n3 4\\n5 4\\n0 5\\n1 5\\"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n4\n0 0\n0 3\n3 3\n3 0\n2\n1 1\n2 2\n\"\"\") == 4\nassert solution(\n\"\"\"\n5\n0 0\n0 0\n2 0\n0 1\n2 1\n1 2\n\"\"\") == 4\nassert solution(\n\"\"\"\n3\n1 1\n2 2\n3 3\n\"\"\") == 3\nassert solution(\n\"\"\"\n3\n0 0\n0 3\n2 2\n\"\"\") == 3\nassert solution(\n\"\"\"\n3\n0 0\n0 3\n2 2\n\"\"\") == 3\nassert solution(\n\"\"\"\n3\n0 0\n0 3\n2 2\n\"\"\") == 3\nassert solution(\n\"\"\"\n3\n0 0\n0 3\n2 2\n\"\"\") == 3"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\") == 4"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\\n3 2\\n3 1\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n\\tpass\\n\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n    4 0\n    0 1\n    0 2\n    0 3\n    \"\"\") == \"2\\n3 2\\n3 1\"\n\nassert solution(\"\"\"\n    1000 0\n    0 1\n    1 2\n    2 3\n    3 4\n    4 5\n    5 6\n    6 7\n    7 8\n    8 9\n    9 10\n    \"\"\") == \"1\\n4 8\\n5 7\\n6 6\\n7 5\\n8 4\\n9 3\\n10 2\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\\n\") == \"2\\n3 2\\n3 1\\n\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == sample_output, f\"Your solution is incorrect. Please check the sample input and sample output.\"\n"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\") == \"2\\n3 2\\n3 1\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\") == \"2\\n3 2\\n3 1\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\") == \"2\\n3 2\\n3 1\"\nassert solution(\"4 0\\n0 1\\n0 2\\n0 3\") == \"2\\n3 2\\n3 1\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"4 0\\n0 1\\n0 2\\n0 3\\n\") == \"2\\n3 2\\n3 1\\n\"\n"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 0\\n0 1\\n0 2\\n0 3\\n') == '2\\n3 2\\n3 1\\n'\nassert solution('5 0\\n0 1\\n0 2\\n0 3\\n0 4\\n') == '2\\n3 2\\n3 1\\n4 0\\n'\nassert solution('5 0\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n') == '2\\n3 2\\n3 1\\n4 0\\n5 0\\n'\nassert solution('5 0\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n0 6\\n') == '2\\n3 2\\n3 1\\n4 0\\n5 0\\n6 0\\n'\nassert solution('5 0\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n0 6\\n0 7\\n') == '2\\n3 2\\n3 1\\n4 0\\n5 0\\n6 0\\n7 0\\n'\nassert solution('5 0\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n0 6\\n0 7\\n0 8\\n') == '2\\n3 2\\n3 1\\n4 0\\n5 0\\n6 0\\n7 0\\n8 0\\n'\n"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == \"ok\", \"Your solution is incorrect.\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0 0\\n0 1.5 0\") == \"ok\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('0 0 0\\n0 1.5 0') == 'ok'"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'ok\\n'\nprint('ok')"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n0 0 0\\n0 1.5 0\") == \"ok\"\nassert solution(\"2\\n0 1.5 0\\n0 0 0\") == \"crash\"\n"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0 0\\n0 1.5 0\") == \"ok\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n0 0 0\\n0 1.5 0\\n0 0 0\\n0 0 0\\n0 1.5 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 1.5 0\\n0 0 0\\n0 1.5 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 1.5 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 1.5 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 1.5 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 1.5 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 1.5 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 1.5 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 1.5 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 1.5 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 1.5 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 1.5 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 1.5 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 1.5 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 1.5 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 1.5 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 1.5 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 1.5 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 1.5 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 1.5 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 1.5 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 1.5 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 1.5 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 1.5 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 1.5 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 1.5 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 1.5 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 1.5 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 1.5 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 1.5 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 1.5 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 1.5 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 1.5 0\\n0 0 0"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n0 0 0\\n0 1.5 0\") == \"ok\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"ok\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n0 0 0\\n0 1.5 0') == 'ok'"
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\"\n"
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\\nR 0\\nG 2\\n\", \"The output is incorrect.\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\\n\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Solution: {solution(input())}, Expected Output: {expected_output}\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\"\n\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\"\n\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\"\n\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\"\n\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\"\n\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\"\n\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\"\n\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\"\n\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\"\n\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\"\n\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\"\n\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\"\n\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\"\n\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\"\n\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\"\n\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\\nR 0\\nG 2\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(str(input())) == \"2\\nR 0\\nG 2\"\n"
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == '2\\nR 0\\nG 2\\n'\nprint('All test cases passed.')"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    7 3 3 3\n    3 A C\n    3 A E G\n    3 A C E\n    3 B D F\n    3 A B\n    3 C B\n    3 D E\n    ''') == '''\n    2\n    def solution(stdin: str) -> str:\n        pass\n'''"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == '''\n"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n\") == 2\nassert solution(\"1 2 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n\") == 0\nassert solution(\"1 2 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n5\") == 5"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == \"2\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F') == '2'\nassert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n4 G H\\n5 I J') == '4'"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n    7 3 3 3\n    1 2 3\n    4 5 6\n    7 8 9\n    A B C\n    D E F\n    \"\"\") == 2\n\nassert solution(\"\"\"\n    7 3 3 3\n    1 2 3\n    4 5 6\n    7 8 9\n    A B C\n    D E F\n    \"\"\") == 2"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\\n\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == 2\nassert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n6 H I J\") == 1"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == \"2\"\nassert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == \"2\"\nassert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == \"2\"\nassert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == \"2\"\nassert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == \"2\"\nassert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == \"2\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\\n\"\nassert solution(input()) == \"4\\n\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\"\n\nassert solution(\"5\\nNYY\\nNYY\\nNYY\\nNYY\") == \"3\\n1 3 2 1 3\"\n\nassert solution(\"2\\nN\\nN\\nN\") == \"0\"\n\nassert solution(\"1\\nN\\nN\\nN\") == \"1\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == '2\\n1 2 3\\n3 1 2'\nassert solution(1) == '0'\nassert solution(2) == '2\\n1 2 3\\n3 1 2'\nassert solution(3) == '1\\n2\\n3'\nassert solution(4) == '0\\n0\\n0'\nassert solution(5) == '1\\n1\\n1'\nassert solution(6) == '1\\n2\\n1'\nassert solution(7) == '2\\n1\\n1'\nassert solution(8) == '1\\n1\\n2'\nassert solution(9) == '2\\n2\\n1'\nassert solution(10) == '1\\n2\\n2'\nassert solution(11) == '1\\n1\\n3'\nassert solution(12) == '2\\n1\\n2'\nassert solution(13) == '1\\n3\\n1'\nassert solution(14) == '1\\n2\\n3'\nassert solution(15) == '2\\n2\\n3'\nassert solution(16) == '3\\n1\\n1'\nassert solution(17) == '3\\n1\\n3'\nassert solution(18) == '1\\n2\\n2'\nassert solution(19) == '2\\n3\\n1'\nassert solution(20) == '1\\n1\\n1'\nassert solution(21) == '1\\n1\\n2'\nassert solution(22) == '2\\n2\\n2'\nassert solution(23) == '1\\n2\\n3'\nassert solution(24) == '1\\n1\\n3'\nassert solution(25) == '2\\n2\\n3'\nassert solution(26) == '1\\n3\\n2'\nassert solution(27) == '1\\n2\\n3'\nassert solution(28) == '2\\n2\\n3'\nassert solution(29) == '1\\n3\\n3'\nassert solution(30) == '1\\n1\\n3'\nassert solution(31) == '2\\n2\\n3'\nassert solution(32) == '1\\n3\\n2'\nassert solution(33) == '1\\n2\\n3'\nassert solution(34) == '2\\n2\\n3'\nassert solution(35) == '3\\n1\\n2'\nassert solution(36) == '3\\n1\\n3'\nassert solution(37) == '1\\n2\\n2'\nassert solution(38) == '2\\n3\\n1'\nassert solution(39) == '1\\n1\\n1'\nassert solution(40) == '1\\n1\\n2'\nassert solution(41) == '2\\n2\\n2'\nassert solution(42) == '1\\n2\\n3'\nassert solution(43) == '1\\n1\\n3'\nassert solution(44) == '2\\n2\\n3'\nassert solution(45) == '3\\n1\\n2'\nassert solution(46) == '3\\n1\\n3'\nassert solution(47) == '1\\n2\\n2'\nassert solution(48) == '2\\n3\\n1'\nassert solution(49) == '1\\n1\\n1'\nassert solution(50) == '1\\n1\\n2'\nassert solution(51) == '2\\n2\\n2'\nassert solution(52) == '1\\n2\\n3'\nassert solution(53) == '1\\n1\\n3'\nassert solution(54) == '2\\n2\\n3'\nassert solution(55) == '3\\n1\\n2'\nassert solution(56) == '3\\n1\\n3'\nassert solution(57) == '1\\n2\\n2'\nassert solution(58) == '2\\n3\\n1'\nassert solution(59) == '1\\n1\\n1'\nassert solution(60)"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\nYYY\\nNYY\\nYNY\\n') == '2\\n1 2 3\\n3 1 2\\n'\nassert solution('4\\nNNN\\nNNS\\nNES\\nNEE\\nNEE\\n') == '0\\n0\\n0\\n0\\n'\nassert solution('5\\nNNN\\nNNS\\nNES\\nNEE\\nNEE\\nNNN\\nNNS\\nNES\\nNEE\\nNEE\\nNNN\\nNNS\\nNES\\nNEE\\nNEE\\n') == '5\\n0 0 0 0 0\\n1 2 3 4 5\\n2 1 3 4 5\\n3 1 4 5 5\\n4 1 5 5 5\\n5 1 5 5 5\\n'\nassert solution('6\\nNNN\\nNNS\\nNES\\nNEE\\nNEE\\nNNN\\nNNS\\nNES\\nNEE\\nNEE\\nNNN\\nNNS\\nNES\\nNEE\\nNEE\\nNNN\\nNNS\\nNES\\nNEE\\nNEE\\nNNN\\nNNS\\nNES\\nNEE\\nNEE\\nNNN\\nNNS\\nNES\\nNEE\\nNEE\\n') == '0\\n0 0 0 0 0 0\\n1 2 3 4 5 6\\n2 1 3 4 5 6\\n3 1 4 5 5 6\\n4 1 5 5 5 6\\n5 1 5 5 5 6\\n6 1 5 5 5 6\\n'"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\nYYY\\nNYY\\nYNY') == '2\\n1 2 3\\n3 1 2'"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\\n1 2 3\\n3 1 2\", \"The solution is not correct.\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"The expected output is: {expected_output}, but the actual output is: {solution(input())}\"\n"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\").read()) == \"2\\n1 2 3\\n3 1 2\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"The provided output is not correct.\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n3\nYYY\nNYY\nYNY\n\"\"\") == \"2\\n1 2 3\\n3 1 2\"\n\nassert solution(\n\"\"\"\n4\nYYYN\nNNYY\nYNYN\nYNYN\n\"\"\") == \"2\\n1 2 3\"\n\nassert solution(\n\"\"\"\n5\nYYNNN\nNYNNN\nYNNNY\nNYYNY\nYNYNY\n\"\"\") == \"2\\n1 2 3\"\n\nassert solution(\n\"\"\"\n6\nYNYNYN\nNYYNYN\nNYYNYN\nNYYNYN\nNYYNYN\nNYYNYN\n\"\"\") == \"3\\n2 1 3\"\n\nassert solution(\n\"\"\"\n7\nNYYNYNYN\nNYYNYNYN\nNYYNYNYN\nNYYNYNYN\nNYYNYNYN\nNYYNYNYN\nNYYNYNYN\n\"\"\") == \"3\\n2 1 3\"\n\nassert solution(\n\"\"\"\n8\nNYYNYNYNYNY\nNYYNYNYNYNY\nNYYNYNYNYNY\nNYYNYNYNYNY\nNYYNYNYNYNY\nNYYNYNYNYNY\nNYYNYNYNYNY\nNYYNYNYNYNY\n\"\"\") == \"3\\n2 1 3\"\n\nassert solution(\n\"\"\"\n9\nNYYNYNYNYNYNYN\nNYYNYNYNYNYNYN\nNYYNYNYNYNYNYN\nNYYNYNYNYNYNYN\nNYYNYNYNYNYNYN\nNYYNYNYNYNYNYN\nNYYNYNYNYNYNYN\nNYYNYNYNYNYNYN\n\"\"\") == \"3\\n2 1 3\"\n\nassert solution(\n\"\"\"\n10\nNYYNYNYNYNYNYNYN\nNYYNYNYNYNYNYNYN\nNYYNYNYNYNYNYNYN\nNYYNYNYNYNYNYNYN\nNYYNYNYNYNYNYNYN\nNYYNYNYNYNYNYNYN\nNYYNYNYNYNYNYNYN\nNYYNYNYNYNYNYNYN\nNYYNYNYNYNYNYNYN\n\"\"\") == \"4\\n1 2 3\"\n\nassert solution(\n\"\"\"\n11\nNYYNYNYNYNYNYNYNYN\nNYYNYNYNYNYNYNYNYN\nNYYNYNYNYNYNYNYNYN\nNYYNYNYNYNYNYNYNYN\nNYYNYNYNYNYNYNYNYN\nNYYNYNYNYNYNYNYNYN\nNYYNYNYNYNYNYNYNYN\nNYYNYNYNYNYNYNYNYN\nNYYNYNYNYNYNYNYNYN\n\"\"\") == \"4\\n1 2 3\"\n\nassert solution(\n\"\"\"\n12\nNYYNYNYNYNYNYNYNYNYN\nNYYNYNYNYNYNYNYNYN\nNYYNYNYNYNYNYNYNYN\nNYYNYNYNYNYNYNYNYN\nNYYNYNYNYNYNYNYNYN\nNYYNYNYNYNYNYNYNYN\nNYYNYNYNYNYNYNYNYN\nNYYNYNYNYNYNYNYNYN\nNYYNYNYNYNYNYNYNYN\nNYYNYNYNYNYNYNYNYN\n\"\"\") == \"4\\n1 2 3\"\n\nassert solution(\n\"\"\"\n13\nNYYNYNYNYNYNYNYNYNYN\nNYYNYNYNYNYNYNYNYN\nNYYNYNYNYNYNYNYNYN\nNYYNYNYNYNYNYNYNYN\nNYYNYNYNYNYNYNYNYN\nNYYNYNYNYNYNYNYNYN\nNYYNYNYNYNYNYNYNYN\nNYYNYNYNYNYNYNYNYN\nNYYNYNYNYNYNYNYNYN\nNYYNYNYNYNYNYNYNYN\n\"\"\") == \"4\\n1 2 3\"\n\nassert solution(\n\"\"\"\n14\nNYYNYNYNYNYNYNYNYNYNYN\nNYYNYNYNYNYNYNYNYNYN\nNYYNYNYNYNYNYNYNYN\nNYYNYNYNYNYNYNYNYN\nNYYNYNYNYNYNYNYNYN\nNYYNYNYNYNYNYNYNYN\nNYYNYNYNYNYNYNYNYN\nNYYNYNYNYNYNYNYNYN\nNYYNYNYNYNYNYNYNYN\nNYYNYNYNYNYNYNY"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\") == \"4\\n0\\n5\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\") == \"4\\n0\\n5\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2') == '4\\n0\\n5'"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\\n') == '4\\n0\\n5\\n'\nprint(\"All test cases pass.\")"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\") == \"4\\n0\\n5\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 3) == \"4\\n0\\n5\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\") == \"4\\n0\\n5\\n\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\") == \"4\\n0\\n5\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 3) == \"4\\n0\\n5\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Output\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"\"\"\n4.114 -2.842\n6.297 -0.784\n5.000 3.000\n\"\"\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n3\n5\n3\n4\n5 3\n\"\"\") == \"\"\"\n4.114 -2.842\n6.297 -0.784\n5.000 3.000\n\"\"\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n5\\n3\\n4\\n5 3\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\"\nassert solution(\"1\\n5\\n3\\n4\\n5 3\") == \"1.000 1.000\\n3.000 3.000\"\nassert solution(\"3\\n4\\n3\\n4\\n5 3\") == \"4.114 -2.842\\n4.114 -2.842\\n4.114 -2.842\"\nassert solution(\"4\\n3\\n3\\n4\\n5 3\") == \"1.000 1.000\\n3.000 3.000\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == '''4.114 -2.842\n6.297 -0.784\n5.000 3.000'''\nassert solution(3) == '''4.114 -2.842\n6.297 -0.784\n5.000 3.000'''\nassert solution(3) == '''4.114 -2.842\n6.297 -0.784\n5.000 3.000'''"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"\"\"\n4.114 -2.842\n6.297 -0.784\n5.000 3.000\n\"\"\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(str(input())) == '4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n', 'Test case 1 failed'"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 5, 3, 4, 5, 3) == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n\") == \"3\\n5\\n8\\n10\\n13\\n\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\"\nassert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\"\nassert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r'''\n3\n2 3 5 7\n2\n3\n5\n6\n8\n''') == '3\\n5\\n8\\n10\\n13'"
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"Your code goes here\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test failed: {solution(input())} should be {output}\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3\\n5\\n8\\n10\\n13\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n') == '3\\n5\\n8\\n10\\n13'"
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8') == '3\\n5\\n8\\n10\\n13'\nassert solution('4 5\\n2 3 5 7\\n1\\n3\\n5\\n6\\n8') == '5\\n8\\n10\\n13'\nassert solution('4 5\\n2 3 5 7\\n1 3\\n5 6\\n8 10') == '5\\n8\\n10\\n13'\nassert solution('4 5\\n2 3 5 7\\n1 3\\n5 6\\n8 10\\n9 11') == '13\\n10\\n13\\n16\\n19'"
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\"\nassert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\"\nassert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\"\nassert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \\n') == 0, \"Incorrect output: 0\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 0"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\") == \"0\\n\"\nassert solution(\"5 4\\n0 1\\n1 2\\n2 3\\n2 4\\n3 4\\n3 5\\n4 5\") == \"0\\n\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == 0 # 0"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([6, 3, 0, 1, 1, 2, 2, 3, 2, 4, 1, 5, 1, 2, 5]) == 0\nassert solution([6, 3, 0, 1, 1, 2, 2, 3, 2, 4, 1, 5, 1, 2, 5]) == 0\nassert solution([6, 3, 0, 1, 1, 2, 2, 3, 2, 4, 1, 5, 1, 2, 5]) == 0\nassert solution([6, 3, 0, 1, 1, 2, 2, 3, 2, 4, 1, 5, 1, 2, 5]) == 0\nassert solution([6, 3, 0, 1, 1, 2, 2, 3, 2, 4, 1, 5, 1, 2, 5]) == 0\nassert solution([6, 3, 0, 1, 1, 2, 2, 3, 2, 4, 1, 5, 1, 2, 5]) == 0"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n1 2 5\n''') == '0'"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 ') == 0\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n6 4\\n4 5') == 2\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n6 4\\n4 5\\n6 5\\n5 6') == 1"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == sample_output, \"Expected: {}, Received: {}\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\") == \"0\\n\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\") == \"0\\n\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\") == \"0\\n\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\") == \"0\\n\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\") == \"0\\n\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\") == \"0\\n\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\") == \"0\\n\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\") == \"0\\n\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\") == \"0\\n\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\") == \"0\\n\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\") == \"0\\n\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\") == \"0\\n\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\") == \"0\\n\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\") == \"0\\n\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\") == \"0\\n\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\") == \"0\\n\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"106\\n107\\n71\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected_output, f\"Solution is incorrect. Expected: {expected_output}, Received: {solution}\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\\n\"\n"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test failed: {solution(input())}\\nOutput: {output}\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_data) == output_data, f\"Test Failed: {input_data}\\nExpected Output: {output_data}\\nGot: {solution(input_data)}\"\nfor input_data, output_data in test_cases:\n    assert solution(input_data) == output_data, f\"Test Failed for input: {input_data}\\nExpected Output: {output_data}\\nGot: {solution(input_data)}\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\\n\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\""
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\nA\") == 51\nassert solution(\"1\\nabc\") == 0\nassert solution(\"1\\ndef\") == 0\nassert solution(\"2\\nZbc\") == 0\nassert solution(\"2\\nxyz\") == 1\nassert solution(\"1\\n\") == 0\nassert solution(\"2\\nA\") == 51\nassert solution(\"1\\nabc\") == 0\nassert solution(\"1\\ndef\") == 0\nassert solution(\"2\\nZbc\") == 0\nassert solution(\"2\\nxyz\") == 1\nassert solution(\"1\\n\") == 0"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\nA\\nA') == '51'\nassert solution('2\\nA\\tB') == '43'\nassert solution('1\\nA') == '2'\nassert solution('1\\nB') == '1'\n"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\nAA\\n') == 51\nassert solution('1\\nA\\n') == 1\nassert solution('3\\nAB\\nCD\\n') == 0\nassert solution('4\\nABC\\nDEF\\nGHI\\n') == 0\nassert solution('5\\nABCD\\nEFGH\\nIJKL\\n') == 0"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\nA\") == 51, \"Incorrect output\""
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 51"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(read_input()) == '51'"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"51\"\n"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"51\"\nprint(\"def solution(stdin: str) -> str:\")\nprint(\"    pass\")"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\nAA\") == \"51\""
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\nAA\\n') == '51'"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\") == \"1 2\", \"Test 1 failed\"\nassert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\") == \"1 2\", \"Test 1 failed\"\nassert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\") == \"1 2\", \"Test 1 failed\"\nassert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\") == \"1 2\", \"Test 1 failed\"\n\nassert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n\") == \"no ties\", \"Test 2 failed\"\nassert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n\") == \"1 2\", \"Test"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    2\n    3 29 45 56 68\n    1 19 43 50 72\n    11 25 40 49 61\n    9 23 31 58 63\n    4 27 42 54 71\n    ''') == 'no ties'"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(['3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n']) == '1 2\\n'\nassert solution(['14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n']) == '1 2\\n'\nassert solution(['3 29 45 56 68\\n2 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n']) == '2 1\\n'\nassert solution(['14 23 39 59 63\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n']) == 'no ties\\n'\nassert solution(['3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n2 29 45 56 68\\n']) == '1 2\\n'\nassert solution(['14 23 39 59 63\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n1"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\") == \"no ties\\n\"\nassert solution(\"4\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n\\n1 2\\n\") == \"1 2\\n\"\nassert solution(\"5\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\") == \"no ties\\n\"\nassert solution(\"6\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n\") == \"1 2\\n\"\nassert solution(\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n\") == \"no ties\\n\"\nassert solution(\"5\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n\") == \"1 2\\n\""
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected {sample_output}, got {solution(sample_input)}\""
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'no ties', 'No ties'"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n') == '1 2'"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    2\n    3 29 45 56 68\n    1 19 43 50 72\n    11 25 40 49 61\n    9 23 31 58 63\n    4 27 42 54 71\n    \"\"\"\n) == \"no ties\"\n\nassert solution(\n    \"\"\"\n    3\n    4 29 45 56 68\n    5 19 43 50 72\n    6 11 25 40 49 61\n    7 9 23 31 58 63\n    8 4 27 42 54 71\n    \"\"\"\n) == \"2 29\"\n\nassert solution(\n    \"\"\"\n    3\n    1 29 45 56 68\n    1 19 43 50 72\n    1 11 25 40 49 61\n    1 9 23 31 58 63\n    1 4 27 42 54 71\n    \"\"\"\n) == \"2 23\"\n\nassert solution(\n    \"\"\"\n    3\n    2 29 45 56 68\n    2 19 43 50 72\n    2 11 25 40 49 61\n    2 9 23 31 58 63\n    2 4 27 42 54 71\n    \"\"\"\n) == \"2 27\"\n\nassert solution(\n    \"\"\"\n    3\n    3 29 45 56 68\n    3 19 43 50 72\n    3 11 25 40 49 61\n    3 9 23 31 58 63\n    3 4 27 42 54 71\n    \"\"\"\n) == \"2 25\"\n\nassert solution(\n    \"\"\"\n    3\n    4 29 45 56 68\n    4 19 43 50 72\n    4 11 25 40 49 61\n    4 9 23 31 58 63\n    4 4 27 42 54 71\n    \"\"\"\n) == \"2 31\"\n\nassert solution(\n    \"\"\"\n    3\n    5 29 45 56 68\n    5 19 43 50 72\n    5 11 25 40 49 61\n    5 9 23 31 58 63\n    5 4 27 42 54 71\n    \"\"\"\n) == \"2 35\"\n\nassert solution(\n    \"\"\"\n    3\n    6 29 45 56 68\n    6 19 43 50 72\n    6 11 25 40 49 61\n    6 9 23 31 58 63\n    6 4 27 42 54 71\n    \"\"\"\n) == \"2 39\"\n\nassert solution(\n    \"\"\"\n    3\n    7 29 45 56 68\n    7 19 43 50 72\n    7 11 25 40 49 61\n    7 9 23 31 58 63\n    7 4 27 42 54 71\n    \"\"\"\n) == \"2 43\"\n\nassert solution(\n    \"\"\"\n    3\n    8 29 45 56 68\n    8 19 43 50 72\n    8 11 25 40 49 61\n    8 9 23 31 58 63\n    8 4 27 42 54 71\n    \"\"\"\n) == \"2 49\"\n\nassert solution(\n    \"\"\"\n    3\n    9 29 45 56 68\n    9 19 43 50 72\n    9 11 25 40 49 61\n    9 9 23 31 "
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"no ties\"\nassert solution(1) == \"no ties\"\nassert solution(2) == \"no ties\"\nassert solution(3) == \"no ties\"\nassert solution(4) == \"no ties\"\nassert solution(5) == \"no ties\"\nassert solution(6) == \"no ties\"\nassert solution(7) == \"no ties\"\nassert solution(8) == \"no ties\"\nassert solution(9) == \"no ties\"\nassert solution(10) == \"no ties\"\nassert solution(11) == \"no ties\"\nassert solution(12) == \"no ties\"\nassert solution(13) == \"no ties\"\nassert solution(14) == \"no ties\"\nassert solution(15) == \"no ties\"\nassert solution(16) == \"no ties\"\nassert solution(17) == \"no ties\"\nassert solution(18) == \"no ties\"\nassert solution(19) == \"no ties\"\nassert solution(20) == \"no ties\"\nassert solution(21) == \"no ties\"\nassert solution(22) == \"no ties\"\nassert solution(23) == \"no ties\"\nassert solution(24) == \"no ties\"\nassert solution(25) == \"no ties\"\nassert solution(26) == \"no ties\"\nassert solution(27) == \"no ties\"\nassert solution(28) == \"no ties\"\nassert solution(29) == \"no ties\"\nassert solution(30) == \"no ties\"\nassert solution(31) == \"no ties\"\nassert solution(32) == \"no ties\"\nassert solution(33) == \"no ties\"\nassert solution(34) == \"no ties\"\nassert solution(35) == \"no ties\"\nassert solution(36) == \"no ties\"\nassert solution(37) == \"no ties\"\nassert solution(38) == \"no ties\"\nassert solution(39) == \"no ties\"\nassert solution(40) == \"no ties\"\nassert solution(41) == \"no ties\"\nassert solution(42) == \"no ties\"\nassert solution(43) == \"no ties\"\nassert solution(44) == \"no ties\"\nassert solution(45) == \"no ties\"\nassert solution(46) == \"no ties\"\nassert solution(47) == \"no ties\"\nassert solution(48) == \"no ties\"\nassert solution(49) == \"no ties\"\nassert solution(50) == \"no ties\"\nassert solution(51) == \"no ties\"\nassert solution(52) == \"no ties\"\nassert solution(53) == \"no ties\"\nassert solution(54) == \"no ties\"\nassert solution(55) == \"no ties\"\nassert solution(56) == \"no ties\"\nassert solution(57) == \"no ties\"\nassert solution(58) == \"no ties\"\nassert solution(59) == \"no ties\"\nassert solution(60) == \"no ties\"\nassert solution(61) == \"no ties\"\nassert solution(62) == \"no ties\"\nassert solution(63) == \"no ties\"\nassert solution(64) == \"no ties\"\nassert solution(65) == \"no ties\"\nassert solution(66) == \"no ties\"\nassert solution(67) == \"no ties\"\nassert solution(68) == \"no ties\"\nassert solution(69) == \"no ties\"\nassert solution(70) == \"no ties\"\nassert solution(71) == \"no ties\"\nassert solution(72) == \"no ties\"\nassert solution(73) == \"no ties\"\nassert solution(74) == \"no ties\"\nassert solution(75) == \"no ties\"\nassert solution(76) == \"no ties\"\nassert solution(77) == \"no ties\"\nassert solution(78) == \"no ties\"\nassert solution(79) == \"no"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([3, 29, 45, 56, 68, 1, 19, 43, 50, 72, 11, 25, 40, 49, 61, 9, 23, 31, 58, 63, 4, 27, 42, 54, 71]) == \"1 2\"\nassert solution([14, 23, 39, 59, 63, 8, 17, 35, 55, 61, 15, 26, 42, 53, 71, 10, 25, 31, 57, 64, 6, 20, 44, 52, 68]) == \"1 2\"\nassert solution([3, 29, 45, 56, 68, 1, 19, 43, 50, 72, 11, 25, 40, 49, 61, 9, 23, 31, 58, 63, 4, 27, 42, 54, 71]) == \"no ties\"\nassert solution([1, 29, 45, 56, 68, 1, 19, 43, 50, 72, 11, 25, 40, 49, 61, 9, 23, 31, 58, 63, 4, 27, 42, 54, 71]) == \"1 2\"\nassert solution([14, 23, 39, 59, 63, 8, 17, 35, 55, 61, 15, 26, 42, 53, 71, 10, 25, 31, 57, 64, 6, 20, 44, 52, 68]) == \"1 2\"\nassert solution([3, 29, 45, 56, 68, 1, 19, 43, 50, 72, 11, 25, 40, 49, 61, 9, 23, 31, 58, 63, 4, 27, 42, 54, 71]) == \"no ties\""
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_string) == expected_output, f\"Test case failed. Input: {input_string}, Expected Output: {expected_output}, Actual Output: {solution(input_string)}\"\n\ninput_string = \"\"\"\n3\n3 2 1\n1 2 3\n1 2 3\n\"\"\"\n\nexpected_output = 0\nprint(expected_output)"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == '0\\n'\nassert solution('3\\n1 2 3\\n3 2 1\\n2 1 3') == '0\\n'\nassert solution('3\\n2 1 3\\n3 2 1\\n1 2 3') == '0\\n'"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 0, \"Test case 1 failed\""
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 2, 1) == 0, \"Solution not working.\""
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r').read()) == \"0\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == \"0\\n\"\n"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == \"0\\n\"\nassert solution(\"4\\n1 2 3\\n1 2 3\\n4 5 6\") == \"2\\n\"\nassert solution(\"1\\n1 1 1\") == \"1\\n\"\nassert solution(\"1\\n1 1\") == \"1\\n\"\nassert solution(\"2\\n2 2 2\") == \"2\\n\"\nassert solution(\"2\\n2 2\") == \"2\\n\"\nassert solution(\"3\\n3 3 3\") == \"3\\n\"\nassert solution(\"4\\n4 4 4\") == \"4\\n\"\nassert solution(\"5\\n5 5 5\") == \"5\\n\""
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == '0'\nassert solution('3\\n3 2 1\\n1 2 3\\n2 3 4') == '1'\nassert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == '0'\nassert solution('3\\n3 2 1\\n1 2 3\\n2 2 3') == '0'\nassert solution('3\\n3 2 1\\n1 2 3\\n3 4 1') == '2'\nassert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == '0'"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == \"0\"\nassert solution(\"6\\n1 2 3 4 5 6\\n2 3 4 5 6 7\\n3 4 5 6 7 8\\n4 5 6 7 8 9\\n5 6 7 8 9 10\") == \"0\"\nassert solution(\"5\\n1 2 3 4 5\\n2 3 4 5 6\\n3 4 5 6 7\\n4 5 6 7 8\\n5 6 7 8 9\") == \"0\"\nassert solution(\"3\\n1 2 3\\n2 3 4\\n3 4 5\") == \"0\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\\n2 3 4 5 6 7 8 9 10 11\\n3 4 5 6 7 8 9 10 11 12\\n4 5 6 7 8 9 10 11 12 13\\n5 6 7 8 9 10 11 12 13 14\\n6 7 8 9 10 11 12 13 14 15\\n7 8 9 10 11 12 13 14 15 16\\n8 9 10 11 12 13 14 15 16 17\\n9 10 11 12 13 14 15 16 17 18\\n10 11 12 13 14 15 16 17 18 19\") == \"3\""
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == '0\\n\\n'"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\") == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\"\n"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Solution doesn't match expected solution.\\nExpected: {expected}\\nGot: {solution(stdin)}\"\n"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\"0.4\n0\n0.2\n0.171428571429\n0.228571428571\"\"\"\n"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n4\n1 2 3\n6 2 3\n10 2 3\n16 3 4\n''') == '0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571'\nassert solution('''\n5\n1 2 3 4 5\n6 2 3 4 5\n7 3 4 5 6\n8 4 5 6 7\n9 5 6 7 8\n10 6 7 8 9\n11 7 8 9 10\n12 8 9 10 11\n13 9 10 11 12\n14 10 11 12 13\n15 11 12 13 14\n16 12 13 14 15\n''') == '0.1\\n0.1\\n0.1\\n0.1\\n0.1'\n"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1\\n2 3\\n6 2 3\\n10 2 3\\n16 3 4') == '0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571'\nassert solution('4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4') == '0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571'\nassert solution('5\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4') == '0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571'"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\""
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('traffic_lights.in', 'r')) == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\""
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=None) == '0.4'\nassert solution(stdin=None) == '0'\nassert solution(stdin=None) == '0.2'\nassert solution(stdin=None) == '0.171428571429'\nassert solution(stdin=None) == '0.228571428571'"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"The output {solution(input())} is incorrect, expected {expected_output}\"\n"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case failed. Expected output: {sample_output}\\nGot: {solution(sample_input)}\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 5\\n3 3\\n4 5\\n-1 -6') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'\nassert solution('4\\n1 5\\n3 3\\n4 5\\n-1 -6') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'\nassert solution('4\\n1 5\\n3 3\\n4 5\\n-1 - 6') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'\nassert solution('4\\n1 5\\n3 3\\n4 5\\n-1 6') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'\nassert solution('4\\n1 5\\n3 3\\n4 5\\n-1 - 6') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'\nassert solution('4\\n1 5\\n3 3\\n4 5\\n-1 - 6') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'\nassert solution('4\\n1 5\\n3 3\\n4 5\\n-1 - 6') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'\nassert solution('4\\n1 5\\n3 3\\n4 5\\n-1 - 6') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'\nassert solution('4\\n1 5\\n3 3\\n4 5\\n-1 - 6') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'\nassert solution('4\\n1 5\\n3 3\\n4 5\\n-1 - 6') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'\nassert solution('4\\n1 5\\n3 3\\n4 5\\n-1 - 6') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'\nassert solution('4\\n1 5\\n3 3\\n4 5\\n-1 - 6') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'\nassert solution('4\\n1 5\\n3 3\\n4 5\\n-1 - 6') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'\nassert solution('4\\n1 5\\n3 3\\n4 5\\n-1 - 6') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\nimpossible\"\nassert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 6\") == \"impossible\"\nassert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 2\") == \"impossible\"\nassert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -2\") == \"impossible\"\nassert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 10\") == \"impossible\"\nassert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -10\") == \"impossible\"\nassert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"impossible\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"\"\"1 + 5 = 6\n3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5\"\"\"\n\nassert solution(\"3\\n-1 5\\n-3 3\\n4 5\") == \"\"\"impossible\"\"\"\n\nassert solution(\"5\\n1 3\\n3 5\\n2 4\") == \"\"\"impossible\"\"\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\"\nassert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 6\") == \"impossible\"\nassert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\"\nassert solution(\"2\\n1 2\\n3 4\") == \"impossible\"\nassert solution(\"3\\n5 5\\n10 10\") == \"impossible\"\nassert solution(\"5\\n1 5\\n-10 -5\\n-5 -10\") == \"impossible\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == \"\"\"1 + 5 = 6\n3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5\"\"\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\nimpossible\"\nassert solution(\"5\\n2 2\\n1 1\") == \"1 + 2 = 3\\n2 - 1 = 1\\nimpossible\"\nassert solution(\"1\\n5 3\\n-3 5\\n-1 2\\n-5 8\") == \"impossible\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\"\nassert solution(\"4\\n1 2\\n3 4\\n-1 5\\n-6 -7\") == \"impossible\"\nassert solution(\"2\\n1 1\\n2 2\\n10 10\\n100 100\") == \"impossible\"\nassert solution(\"5\\n1 5\\n2 2\\n1 2\\n1 1\\n2 1\") == \"impossible\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\nfor _ in range(10):\n    solution(stdin)\n"
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"4\\n1\\n4\\n6\\n0\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"4\\n1\\n4\\n6\\n0\", \"Expected output: 4\\n1\\n4\\n6\\n0, but got: {}\".format(solution())"
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"\"\"\n0\n0\n0\n0\n0\n\"\"\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(r\"\"\"\n    5 3\n    1 8\n    2 3\n    2 8\n    5 8\n    5 9\n    3 6 6\n    1 7 4\n    1 3 1\n    \"\"\") == \"4\\n1\\n4\\n6\\n0\\n\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected: {output}\\nGot: {solution(input())}\"\n"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4\\n4\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5\\n2\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"5\\n1\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"5\\n0\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2 3 4\") == 4\nassert solution(\"5\\n1 2 3 4 5\") == 12"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 4"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 4, \"Solution is incorrect.\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2 3 4\\n\") == 4 # Correct Output"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 4"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 4"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([4, 1, 2, 3, 4]) == 4\n"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 31 2\\n20 60\\n50 90') == '4 3'\n"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, \"Expected output: {}\\nGot: {}\".format(output, solution(input()))"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\\n    # Your code goes here\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"4 3\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 31 2\\n20 60\\n50 90') == '4 3\\n'"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\nassert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\nassert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\nassert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\nassert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\nassert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\nassert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\nassert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\nassert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\nassert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\nassert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\nassert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\nassert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\nassert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\nassert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\nassert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\nassert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\nassert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\nassert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\nassert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\nassert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\nassert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\nassert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\nassert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\nassert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\nassert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\nassert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\nassert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\nassert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\nassert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\nassert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\nassert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\nassert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\nassert solution(\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='2 2 1\\n') == '3'"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution_input) == solution_output, \"Test failed for solution\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"2 2 1\") == \"3\\n\"\nassert solution(stdin=\"1 3 2\") == \"6\\n\"\nassert solution(stdin=\"3 3 1\") == \"0\\n\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 2 1') == '3'"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 1\") == \"3\\n\"\n"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 1\") == \"3\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 1\") == \"3\\n\"\n\nassert solution(\"3 3 1\") == \"1\\n\"\n\nassert solution(\"4 3 1\") == \"6\\n\"\n\nassert solution(\"5 3 1\") == \"1\\n\"\n\nassert solution(\"3 5 1\") == \"1\\n\"\n\nassert solution(\"6 5 1\") == \"1\\n\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 1\") == \"3\"\nassert solution(\"3 4 2\") == \"4\"\nassert solution(\"5 6 3\") == \"6\"\nassert solution(\"7 8 4\") == \"12\"\nassert solution(\"9 10 5\") == \"20\"\nassert solution(\"11 12 6\") == \"24\"\nassert solution(\"13 14 7\") == \"40\"\nassert solution(\"15 16 8\") == \"48\"\nassert solution(\"17 18 9\") == \"56\"\nassert solution(\"19 20 10\") == \"60\"\nassert solution(\"21 22 11\") == \"80\"\nassert solution(\"23 24 12\") == \"100\"\nassert solution(\"25 26 13\") == \"120\"\nassert solution(\"27 28 14\") == \"160\"\nassert solution(\"29 30 15\") == \"200\"\nassert solution(\"31 32 16\") == \"240\"\nassert solution(\"33 34 17\") == \"300\"\nassert solution(\"35 36 18\") == \"360\"\nassert solution(\"37 38 19\") == \"400\"\nassert solution(\"39 40 20\") == \"480\"\nassert solution(\"41 42 21\") == \"560\"\nassert solution(\"43 44 22\") == \"600\"\nassert solution(\"45 46 23\") == \"680\"\nassert solution(\"47 48 24\") == \"720\"\nassert solution(\"49 50 25\") == \"800\"\nassert solution(\"51 52 26\") == \"840\"\nassert solution(\"53 54 27\") == \"900\"\nassert solution(\"55 56 28\") == \"960\"\nassert solution(\"57 58 29\") == \"1000\"\nassert solution(\"59 60 30\") == \"1080\"\nassert solution(\"61 62 31\") == \"1120\"\nassert solution(\"63 64 32\") == \"1200\"\nassert solution(\"65 66 33\") == \"1240\"\nassert solution(\"67 68 34\") == \"1300\"\nassert solution(\"69 70 35\") == \"1360\"\nassert solution(\"71 72 36\") == \"1400\"\nassert solution(\"73 74 37\") == \"1480\"\nassert solution(\"75 76 38\") == \"1520\"\nassert solution(\"77 78 39\") == \"1600\"\nassert solution(\"79 80 40\") == \"1640\"\nassert solution(\"81 82 41\") == \"1720\"\nassert solution(\"83 84 42\") == \"1760\"\nassert solution(\"85 86 43\") == \"1840\"\nassert solution(\"87 88 44\") == \"1900\"\nassert solution(\"89 90 45\") == \"1960\"\nassert solution(\"91 92 46\") == \"2000\"\nassert solution(\"93 94 47\") == \"2080\"\nassert solution(\"95 96 48\") == \"2120\"\nassert solution(\"97 98 49\") == \"2200\"\nassert solution(\"99 100 50\") == \"2240\"\nassert solution(\"101 102 51\") == \"2320\"\nassert solution(\"103 104 52\") == \"2360\"\nassert solution(\"105 106 53\") == \"2440\"\nassert solution(\"107 108 54\") == \"248"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 10\") == \"10\"\nassert solution(\"3 2 1\") == \"3\"\nassert solution(\"3 2 10\") == \"10\"\nassert solution(\"4 2 1\") == \"2\"\nassert solution(\"4 2 10\") == \"5\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 1\") == \"3\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    5\n    1341 2412 1200 3112 2391\n    \"\"\"\n) == \"\"\"\n3\n1\n\"\"\"\n\nassert solution(\n    \"\"\"\n    7\n    25 70 80 90 100 120 150\n    \"\"\"\n) == \"\"\"\n1\n3\n\"\"\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n1341 2412 1200 3112 2391\\n') == '3 1'\n"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\"\nprint(\"All test cases pass.\")"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\"\nassert solution(\"5\\n3112 2412 1200 3112 2391\") == \"1 0\"\nassert solution(\"5\\n1200 3112 2412 3112 2391\") == \"2 2\"\nassert solution(\"5\\n1200 1200 1200 1200 1200\") == \"1 1\"\nassert solution(\"5\\n1200 1200 1200 1200 1200 1200\") == \"1 2\"\nassert solution(\"5\\n1200 1200 1200 1200 1200 1200 1200\") == \"2 1\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\\n1\\n1\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3 1\"\n"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1341 2412 1200 3112 2391\") == \"3 1\"\nassert solution(\"5\") == \"0 2\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1341 2412 1200 3112 2391\\n\") == \"3 1\\n\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, \"Expected output: {}\\nActual output: {}\".format(expected_output, solution(input()))"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4') == 6, \"Incorrect output\"\nassert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4') == 6, \"Incorrect output\"\nassert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4') == 6, \"Incorrect output\"\nassert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4') == 6, \"Incorrect output\"\nassert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4') == 6, \"Incorrect output\"\nassert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4') == 6, \"Incorrect output\"\nassert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4') == 6, \"Incorrect output\"\nassert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4') == 6, \"Incorrect output\"\nassert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4') == 6, \"Incorrect output\"\nassert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4') == 6, \"Incorrect output\""
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\""
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"6\\n\"\n"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\"\n"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4') == 6"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\n"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == 6\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n\") == 6"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\\n\"\n"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '0 1 -1 0'\nassert solution(input()) == '0 2 -1 0'\nassert solution(input()) == '0 3 -1 0'\nassert solution(input()) == '0 4 -1 0'\nassert solution(input()) == '0 5 -1 0'\nassert solution(input()) == '0 6 -1 0'\nassert solution(input()) == '0 7 -1 0'\nassert solution(input()) == '0 8 -1 0'\nassert solution(input()) == '0 9 -1 0'\nassert solution(input()) == '0 10 -1 0'\nassert solution(input()) == '0 11 -1 0'\nassert solution(input()) == '0 12 -1 0'\nassert solution(input()) == '0 13 -1 0'\nassert solution(input()) == '0 14 -1 0'\nassert solution(input()) == '0 15 -1 0'\nassert solution(input()) == '0 16 -1 0'\nassert solution(input()) == '0 17 -1 0'\nassert solution(input()) == '0 18 -1 0'\nassert solution(input()) == '0 19 -1 0'\nassert solution(input()) == '0 20 -1 0'\nassert solution(input()) == '0 21 -1 0'\nassert solution(input()) == '0 22 -1 0'\nassert solution(input()) == '0 23 -1 0'\nassert solution(input()) == '0 24 -1 0'\nassert solution(input()) == '0 25 -1 0'\nassert solution(input()) == '0 26 -1 0'\nassert solution(input()) == '0 27 -1 0'\nassert solution(input()) == '0 28 -1 0'\nassert solution(input()) == '0 29 -1 0'\nassert solution(input()) == '0 30 -1 0'\nassert solution(input()) == '0 31 -1 0'\nassert solution(input()) == '0 32 -1 0'\nassert solution(input()) == '0 33 -1 0'\nassert solution(input()) == '0 34 -1 0'\nassert solution(input()) == '0 35 -1 0'\nassert solution(input()) == '0 36 -1 0'\nassert solution(input()) == '0 37 -1 0'\nassert solution(input()) == '0 38 -1 0'\nassert solution(input()) == '0 39 -1 0'\nassert solution(input()) == '0 40 -1 0'\nassert solution(input()) == '0 41 -1 0'\nassert solution(input()) == '0 42 -1 0'\nassert solution(input()) == '0 43 -1 0'\nassert solution(input()) == '0 44 -1 0'\nassert solution(input()) == '0 45 -1 0'\nassert solution(input()) == '0 46 -1 0'\nassert solution(input()) == '0 47 -1 0'\nassert solution(input()) == '0 48 -1 0'\nassert solution(input()) == '0 49 -1 0'\nassert solution(input()) == '0 50 -1 0'\nassert solution(input()) == '0 51 -1 0'\nassert solution(input()) == '0 52 -1 0'\nassert solution(input()) == '0 53 -1 0'\nassert solution(input()) == '0 54 -1 0'\nassert solution(input()) == '0 55 -1 0'\nassert solution(input()) == '0 56 -1 0'\nassert solution(input()) == '0 57 -1 0'\nassert solution(input()) == '0 58 -1 0'\nassert solution(input()) == '0 59 -1 0'\nassert solution(input()) == '0 60 -1 0'\nassert solution(input()) == '0 61 -1 0"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n2 ab b\\n1 b') == '0 1 \\n-1 0'"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"0 1 -1 0\""
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n2 ab b\\n1 b\") == \"0 1 \\n-1 0\"\nassert solution(\"3\\n1 ab cd e\\n2 b c\") == \"0 2 \\n-1 0\"\nassert solution(\"3\\n2 ab c d\\n2 ab e f\\n1 a\") == \"2 3 \\n-1 0\"\nassert solution(\"3\\n1 ab cd e\\n2 b c\") == \"-1 0\"\nassert solution(\"3\\n2 ab c d\\n2 ab e f\\n1 a\") == \"2 3 \\n-1 0\""
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n2 ab b\\n1 b\") == \"0 1 -1\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"2\\n2 ab b\\n1 c\") == \"0 1 -1\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"2\\n2 ab b\\n1 a\") == \"0 1 -1\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"2\\n2 ab b\\n1 x\") == \"0 1 -1\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"2\\n2 ab b\\n1 2\") == \"0 1 -1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n2 ab b\\n1 b\") == \"0 1 -1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\\treturn\\n\\n\\nprint(solution())\""
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r').read()) == '0 1 -1\\ndef solution(stdin: str) -> str:\\n    pass'\n"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n2 ab b\\n1 b') == '0 1 -1'\nassert solution('5\\nabcdefg\\nhijklmnop\\n123456789\\nabcd\\n') == '1 3 10 -1'"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n2\n2 ab b\n1 b\n''') == '''\n0 1 \n-1 0\n'''"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n2 ab b\\n1 b\") == \"0 1 -1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"3\\nabc def ghi\\n1234\") == \"0 1 -1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"5\\nabcd efg\\nhijkl mno\\npqrstuvwxyz\") == \"0 1 -1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\\n\") == \"1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"2 5\\n1 1 2\\n2\\n1 1 2\\n2\\n\") == \"1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"The output does not match the expected output. \\nExpected Output: {expected_output} \\nActual Output: {solution(input())}\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\\n\") == \"1\\n3\\n\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Incorrect output\\nExpected: {expected_output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1\\n3\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected_output, f\"Test failed. Expected output: {expected_output}, Actual output: {solution}\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '1'\nassert solution() == '3'"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\\n\") == \"1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('0 5 2\\n5 0 4\\n2 4 0') == '7\\n'\nassert solution('0 0 0\\n0 0 0\\n0 0 0') == '7\\n'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 "
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('0 5 2\\n5 0 4\\n2 4 0') == '7\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"7\\n7\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"7\\n\"\nprint(\"All assertions pass!\")"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"7\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"7\""
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"7\", \"The solution should return the minimum total flight duration.\""
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 7, \"The given solution is incorrect.\""
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_data) == expected_output, f\"The solution is incorrect. Expected output: {expected_output}, but got: {solution(input_data)}\"\nprint(\"Test passed\")"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('0 5 2\\n5 0 4\\n2 4 0') == '7\\n'"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"8\"\n"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1099511627776\") == \"8\\n\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(b'1099511627776\\n') == '8\\n'\n"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"8\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1099511627776\") == 8, \"Incorrect output\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1099511627776\") == 8"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1099511627776) == 8, \"Test failed\"\nprint(\"Test passed\")"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1099511627776\") == 8, \"Your solution is incorrect\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"8\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1099511627776) == 8"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\") == \"2\"\nassert solution(\"4 3\\nx.\\n.x\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\") == \"2\"\nassert solution(\"5 3\\nx.\\n.x\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx.x\\nx.\\nx.\\n.x\\nx.\\nx."
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3\\nx..\\n.x.\\nx.x\\n') == '2\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"2\\n\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\") == \"2\"\nassert solution(\"1 1\\nxxx\") == \"1\"\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\") == \"2\"\nassert solution(\"5 3\\nx.x\\nx.x\\nx.x\\nx.x\") == \"5\"\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\") == \"2\"\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\") == \"2\"\nassert solution(\"1 1\\nxxx\") == \"1\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n3 3\nx..\n.x.\nx.x\n''') == '''\n2\n'''"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\nx..\\n.x.\\nx.x\\n') == '2'\nassert solution('4 4\\nx....\\nx.x.\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx....\\nx"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3,3) == '2', \"Testcase 1 failed\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3\\nx..\\n.x.\\nx.x') == 2\nassert solution('4 3\\nx..\\n.x.\\nx.x') == 2\nassert solution('5 3\\nx..\\n.x.\\nx.x') == 2"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\") == \"9\\n-1\\n5\\n6\"\n"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0') == '9\\n-1\\n5\\n6'"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\") == \"9\\n-1\\n5\\n6\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\") == \"9\\n-1\\n5\\n6\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\") == \"9\\n-1\\n5\\n6\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0') == '9\\n-1\\n5\\n6'"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\") == \"9\\n-1\\n5\\n6\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\") == \"9\\n-1\\n5\\n6\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0') == '9\\n-1\\n5\\n6'"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20') == '91'\nassert solution('5\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\\n2 1 50 40 30 20\\n2 1 50 30 20 10') == '210'\nassert solution('6\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\\n2 1 50 40 30 20\\n2 1 50 30 20 10\\n1 1 50 40 30 20\\n1 1 50 30 20 10') == '600'"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution())\""
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == 91\nassert solution(\"5 0 0 0 0 0\") == 0\nassert solution(\"1 0 0 0 0 0\") == 0\nassert solution(\"0 1 0 0 0 0\") == 0\nassert solution(\"1 1 10 10 10 10\") == 0\nassert solution(\"0 0 0 0 0 0\") == 0\nassert solution(\"5 5 5 5 5 5\") == 0\nassert solution(\"1 1 0 0 0 0\") == 0\nassert solution(\"0 1 0 0 0 0\") == 0\nassert solution(\"1 1 10 10 10 10\") == 0\nassert solution(\"0 0 0 0 0 0\") == 0\nassert solution(\"5 5 5 5 5 5\") == 0\nassert solution(\"1 1 0 0 0 0\") == 0\nassert solution(\"0 1 0 0 0 0\") == 0\nassert solution(\"1 1 10 10 10 10\") == 0\nassert solution(\"0 0 0 0 0 0\") == 0\nassert solution(\"5 5 5 5 5 5\") == 0\nassert solution(\"1 1 0 0 0 0\") == 0\nassert solution(\"0 1 0 0 0 0\") == 0\nassert solution(\"1 1 10 10 10 10\") == 0\nassert solution(\"0 0 0 0 0 0\") == 0\nassert solution(\"5 5 5 5 5 5\") == 0\nassert solution(\"1 1 0 0 0 0\") == 0\nassert solution(\"0 1 0 0 0 0\") == 0\nassert solution(\"1 1 10 10 10 10\") == 0\nassert solution(\"0 0 0 0 0 0\") == 0\nassert solution(\"5 5 5 5 5 5\") == 0\nassert solution(\"1 1 0 0 0 0\") == 0\nassert solution(\"0 1 0 0 0 0\") == 0\nassert solution(\"1 1 10 10 10 10\") == 0\nassert solution(\"0 0 0 0 0 0\") == 0\nassert solution(\"5 5 5 5 5 5\") == 0\nassert solution(\"1 1 0 0 0 0\") == 0\nassert solution(\"0 1 0 0 0 0\") == 0\nassert solution(\"1 1 10 10 10 10\") == 0\nassert solution(\"0 0 0 0 0 0\") == 0\nassert solution(\"5 5 5 5 5 5\") == 0\nassert solution(\"1 1 0 0 0 0\") == 0\nassert solution(\"0 1 0 0 0 0\") == 0\nassert solution(\"1 1 10 10 10 10\") == 0\nassert solution(\"0 0 0 0 0 0\") == 0\nassert solution(\"5 5 5 5 5 5\") == 0\nassert solution(\"1 1 0 0 0 0\") == 0\nassert solution(\"0 1 0 0 0 0\") == 0\nassert solution(\"1 1 10 10 10 10\") == 0\nassert solution(\"0 0 0 0 0 0\") == 0\nassert solution(\"5 5 5 5 5 5\") == 0\nassert solution(\"1 1 0 0 0 0\") == 0\nassert solution(\"0 1 0 0 0 0\") == 0\nassert solution(\"1 1 10 10 10 10\") =="
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=str) == '91'\n"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\""
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"91\", \"The minimum time it takes to beat all of the levels in the game is 91.\""
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20') == '91'\n"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"3\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\"\"\"\n) == \"91\""
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('0\\n15\\n0\\n1 1') == '15\\n'\nassert solution('2\\n15 20\\n0\\n1 1') == '15\\n'\nassert solution('1\\n10 20 10 30 10 20 30 20 10') == '10\\n'\nassert solution('4\\n10 20 10 30 10 20 30 20 10\\n2 3 4 5') == '15\\n'\nassert solution('2\\n10 100 20 200\\n0') == '10\\n'\nassert solution('2\\n10 100 20 200\\n1') == '200\\n'\nassert solution('3\\n1000 200 3000\\n1 2 3') == '300\\n'\nassert solution('1\\n1000 200 3000\\n0') == '1000\\n'\nassert solution('2\\n1000 200 3000\\n2') == '200\\n'\nassert solution('3\\n1000 200 3000\\n3') == '3000\\n'"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"15 20\\n0\\n1 1\") == \"15\"\nassert solution(\"15\\n20\\n0\\n1 1\") == \"15\"\nassert solution(\"10\\n10\\n0\\n1 1\") == \"20\"\nassert solution(\"10\\n10\\n10\\n1 1\") == \"0\"\nassert solution(\"10\\n10\\n10\\n1 1\\n10\\n10\\n10\\n1 1\") == \"20\""
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"BAAS Inc. (Build Airplanes As-a-Service) has grand plans to build lots of airplanes. Naturally, the airplane construction process consists of multiple steps, each of which may take some time. Some steps can take more time to complete than others, e.g. attaching a plane wing may take longer than spray-painting the BAAS logo on the tail. Furthermore, some steps must to be completed before others can commence. For instance the hull needs to be assembled before the wings can be attached to it. If there is no dependency between two steps, then the steps can be completed in parallel.\n\nBAAS is trying very hard to become the market leader in airplane construction. Since customers value a speedy delivery, BAAS has decided to invest in their R&D department with the goal to decrease their delivery time. The chief scientist of BAAS is very optimistic and thinks that his department can reduce the time it takes to complete one step to $0$. However, since the money is always tight in the research sector at BAAS, he could only promise to eliminate exactly one of the construction steps. As the CEO of BAAS, your role implies figuring out which step you would like to eliminate to achieve the shortest possible construction time. It goes without saying that as the CEO you have complete access to the BAAS\u2019s secret construction process blueprints.\\n\\n-----Input-----\\nThe first line of the input contains an integer $N$ ($2 \\le N \\le 400$), the number of steps in the build process.\\n\\nThe next line contains the $N$ integers $a_1, a_2, \\dots, a_ N$ ($1 \\le a_ i \\le 10^5$), the number of seconds each of the $N$ steps takes in the build process.\\n\\nThis is followed by $N$ lines. The $i$\u2019th of these lines contains an integer $C_ i$ followed by $C_ i$ integers $A_1, \\dots, A_{C_ i}$ ($1 \\le A_ j < i$). The integers $A_ j$ denote what steps the $i$\u2019th step has a dependency on.\\n\\nIt is guaranteed that there is no step that indirectly depends on itself.\\n\\nFurthermore, each step has a direct or indirect dependency on step $1$ (receiving an order), and step $N$ (delivering the airplane) has a direct or indirect dependency on every other step.\\n\\n-----Output-----\\nOutput a single integer \u2013 the shortest possible time it takes to construct an airplane assuming a single step can be reduced to take no time at all.\\n\\n-----Examples-----\\nSample Input: 2\\n15 20\\n0\\n1 1\\nSample Output: 15\\ndef solution(stdin: str) -> str: pass\\n\") == 15\nassert solution(\"BOB Inc. (Build Oil Bridges As-a-Service) is building great oils for our customers. Their products are being manufactured using BAAS. Their build process involves multiple steps, each of which may take some time. Some steps can take more time to complete than others, e.g. pressing the button and getting the product delivered. Furthermore, some steps must to be completed before others can commence. For instance the wires need to be constructed before the oils can be pressed. If there is no dependency between two steps, then the steps can be completed in parallel.\n\nBOB is looking to expand its operations to build an economically feasible market for oil-based products. They are working on designing a new building infrastructure that will take advantage of the new technology and services offered by BAAS. They have been researching and implementing new products and services for their customers. However, they are facing challenges with the construction process and the knowledge required to efficiently build the new infrastructure.\n\n-----Input-----\nThe first line of the input contains an integer $N$ ($2 \\le N \\le 400$), the number of steps in the build process.\n\nThe next line contains the $N$ integers $a_1, a_2, \\dots, a_ N$ ($1 \\le a_ i \\le 10^5$), the number of seconds each of the $N$ steps takes in the build process.\n\nThis is followed by $N$ lines. The $i$\u2019th of these lines contains an integer $C_ i$ followed by $C_ i$ integers $A_1, \\dots, A_{C_ i}$ ($1"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([15, 20]) == 15, \"The output should be 15\""
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=None) == '15\\n', \"Your solution is incorrect. Please check the code and submit it again.\""
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '15\\n'"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(read_input()) == 15, \"Test case 1 failed\"\nprint(\"Test case 1 passed\")"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0\\n\") == \"15\"\nassert solution(\"1\\n1\\n\") == \"1\"\nassert solution(\"2\\n2\\n\") == \"2\"\nassert solution(\"3\\n1\\n1\\n2\\n\") == \"2\"\nassert solution(\"4\\n3\\n2\\n2\\n\") == \"2\"\nassert solution(\"5\\n3\\n2\\n2\\n3\\n\") == \"3\"\nassert solution(\"6\\n4\\n3\\n3\\n4\\n\") == \"3\"\nassert solution(\"7\\n5\\n4\\n4\\n5\\n\") == \"4\"\nassert solution(\"8\\n6\\n5\\n5\\n6\\n\") == \"4\"\nassert solution(\"9\\n6\\n5\\n5\\n6\\n7\\n\") == \"4\"\nassert solution(\"10\\n7\\n6\\n6\\n7\\n8\\n\") == \"4\"\nassert solution(\"11\\n7\\n6\\n6\\n7\\n8\\n9\\n\") == \"5\"\nassert solution(\"12\\n8\\n7\\n7\\n8\\n9\\n10\\n\") == \"5\"\nassert solution(\"13\\n9\\n8\\n8\\n9\\n10\\n11\\n\") == \"5\"\nassert solution(\"14\\n10\\n9\\n9\\n10\\n11\\n12\\n\") == \"5\"\nassert solution(\"15\\n11\\n10\\n10\\n11\\n12\\n13\\n\") == \"5\"\nassert solution(\"16\\n12\\n11\\n11\\n12\\n13\\n14\\n\") == \"6\"\nassert solution(\"17\\n13\\n12\\n12\\n13\\n14\\n15\\n\") == \"6\"\nassert solution(\"18\\n14\\n13\\n13\\n14\\n15\\n16\\n\") == \"6\"\nassert solution(\"19\\n15\\n14\\n14\\n15\\n16\\n17\\n\") == \"6\"\nassert solution(\"20\\n16\\n15\\n15\\n16\\n17\\n18\\n\") == \"6\"\nassert solution(\"21\\n17\\n16\\n16\\n17\\n18\\n19\\n\") == \"6\"\nassert solution(\"22\\n18\\n17\\n17\\n18\\n19\\n20\\n\") == \"6\"\nassert solution(\"23\\n19\\n18\\n18\\n19\\n20\\n21\\n\") == \"7\"\nassert solution(\"24\\n20\\n19\\n19\\n20\\n21\\n22\\n\") == \"7\"\nassert solution(\"25\\n21\\n20\\n20\\n21\\n22\\n23\\n\") == \"7\"\nassert solution(\"26\\n22\\n21\\n21\\n22\\n23\\n24\\n\") == \"7\"\nassert solution(\"27\\n23\\n22\\n22\\n23\\n24\\n25\\n\") == \"7\"\nassert solution(\"28\\n24\\n23\\n23\\n24\\n25\\n26\\n\") == \"7\"\nassert solution(\"29\\n25\\n24\\n24\\n25\\n26\\n27\\n\") == \"7\"\nassert solution(\"30\\n26\\n25\\n25\\n26\\n27\\n28\\n\") == \"7\"\nassert solution(\"31\\n27\\n26\\n26\\n27\\n28\\n29\\n\") == \"8\"\nassert solution(\"32\\n28\\n27\\n27\\n28\\n29\\n30\\"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n2\n15 20\n0\n1 1\n''') == '15'"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0\\n15\\n0\\n1 1\") == \"15\""
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'impossible'\n"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"impossible\"\n"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"day-04/sample_input.txt\", \"r\").read()) == \"impossible\"\nassert solution(open(\"day-04/sample_output.txt\", \"r\").read()) == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98') == 'impossible'\nassert solution('5 3\\n1 2 500\\n2 3 750\\n3 4 900') == 'definitely possible'"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"impossible\" # correct output\n"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\\n\") == \"impossible\""
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98') == 'impossible'\nassert solution('10 5\\n1 2 100\\n3 4 1000\\n2 5 200') == 'definitely possible'"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"impossible\""
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"impossible\", \"Test failed for solution(stdin)\""
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"impossible\""
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == \"1.000000000\"\n\nfrom typing import List\nimport random"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == \"1.000000000\""
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 1.0\n"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 1"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"1.000000000\""
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4) == \"1.000000000\"\n"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == '1.000000000'"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == '1.000000000'\nassert solution(2) == '0.500000000'\nassert solution(3) == '0.750000000'\nassert solution(4) == '1.000000000'\nassert solution(5) == '1.000000000'"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == '1.000000000'\n\nfrom itertools import combinations\nimport random"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 1.0\nassert solution(5) == 5.0\nassert solution(100) == 100.0\nassert solution(1000) == 1000.0\nassert solution(10000) == 10000.0\nassert solution(100000) == 100000.0\nassert solution(1000000) == 1000000.0\nassert solution(10000000) == 10000000.0\nassert solution(100000000) == 100000000.0\nassert solution(1000000000) == 1000000000.0\nassert solution(10000000000) == 10000000000.0\nassert solution(100000000000) == 100000000000.0\nassert solution(1000000000000) == 1000000000000.0\nassert solution(10000000000000) == 10000000000000.0\nassert solution(100000000000000) == 100000000000000.0\nassert solution(1000000000000000) == 1000000000000000.0\nassert solution(10000000000000000) == 10000000000000000.0\nassert solution(100000000000000000) == 100000000000000000.0\nassert solution(1000000000000000000) == 10000000000000000000.0\nassert solution(100000000000000000000) == 100000000000000000000.0\nassert solution(1000000000000000000000) == 10000000000000000000000.0\nassert solution(10000000000000000000000) == 100000000000000000000000.0\nassert solution(1000000000000000000000000) == 1000000000000000000000000.0\nassert solution(100000000000000000000000000) == 100000000000000000000000000.0\nassert solution(10000000000000000000000000000) == 10000000000000000000000000000.0\nassert solution(1000000000000000000000000000000) == 100000000000000000000000000000.0\nassert solution(10000000000000000000000000000000) == 100000000000000000"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('100 3 10\\n15 99 98\\n40 3 2\\n90 10 9') == '115.000000000\\n'\nassert solution('100 3 10\\n15 99 98\\n40 3 2\\n90 10 10') == '115.000000000\\n'\nassert solution('100 3 10\\n15 99 98\\n40 3 2\\n90 10 8') == '114.000000000\\n'\nassert solution('100 3 10\\n15 99 98\\n40 3 2\\n90 10 7') == '113.000000000\\n'\nassert solution('100 3 10\\n15 99 98\\n40 3 2\\n90 10 6') == '112.000000000\\n'\nassert solution('100 3 10\\n15 99 98\\n40 3 2\\n90 10 5') == '111.000000000\\n'\nassert solution('100 3 10\\n15 99 98\\n40 3 2\\n90 10 4') == '110.000000000\\n'\nassert solution('100 3 10\\n15 99 98\\n40 3 2\\n90 10 3') == '109.000000000\\n'\nassert solution('100 3 10\\n15 99 98\\n40 3 2\\n90 10 2') == '108.000000000\\n'\nassert solution('100 3 10\\n15 99 98\\n40 3 2\\n90 10 1') == '107.000000000\\n'\nassert solution('100 3 10\\n15 99 98\\n40 3 2\\n90 10 0') == '106.000000000\\n'\nassert solution('100 3 10\\n15 99 98\\n40 3 2\\n90 10 -1') == '105.000000000\\n'\nassert solution('100 3 10\\n15 99 98\\n40 3 2\\n90 10 -2') == '104.000000000\\n'\nassert solution('100 3 10\\n15 99 98\\n40 3 2\\n90 10 -3') == '103.000000000\\n'\nassert solution('100 3 10\\n15 99 98\\n40 3 2\\n90 10 -4') == '102.000000000\\n'\nassert solution('100 3 10\\n15 99 98\\n40 3 2\\n90 10 -5') == '101.000000000\\n'\nassert solution('100 3 10\\n15 99 98\\n40 3 2\\n90 10 -6') == '100.000000000\\n'\nassert solution('100 3 10\\n15 99 98\\n40 3 2\\n90 10 -7')"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == 115.0\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 10\") == 115.0\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 1\") == 115.0\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 0\") == 115.0\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 -1\") == 115.0\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 99\") == 115.0\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 100\") == 115.0\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 101\") == 115.0\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 102\") == 115.0\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 103\") == 115.0\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 104\") == 115.0\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 105\") == 115.0\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 106\") == 115.0\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 107\") == 115.0\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 108\") == 115.0\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 109\") == 115.0\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 110\") == 115.0\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 111\") == 115.0\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 112\") == 115.0\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 113\") == 115.0\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 114\") == 115.0\nassert solution(\"100 "
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n\") == \"115.000000000\""
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == 115.0"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n') == 115.000000000\nassert solution('100 3 2\\n15 99 98\\n40 3 2\\n90 10 9\\n') == 105.000000000\nassert solution('100 3 2\\n15 99 98\\n40 3 2\\n90 10 9\\n') == 105.000000000\nassert solution('100 3 2\\n15 99 98\\n40 3 2\\n90 10 9\\n') == 105.000000000\nassert solution('100 3 2\\n15 99 98\\n40 3 2\\n90 10 9\\n') == 105.000000000\nassert solution('100 3 2\\n15 99 98\\n40 3 2\\n90 10 9\\n') == 105.000000000\nassert solution('100 3 2\\n15 99 98\\n40 3 2\\n90 10 9\\n') == 105.000000000\nassert solution('100 3 2\\n15 99 98\\n40 3 2\\n90 10 9\\n') == 105.000000000\nassert solution('100 3 2\\n15 99 98\\n40 3 2\\n90 10 9\\n') == 105.000000000\nassert solution('100 3 2\\n15 99 98\\n40 3 2\\n90 10 9\\n') == 105.000000000\nassert solution('100 3 2\\n15 99 98\\n40 3 2\\n90 10 9\\n') == 105.000000000\nassert solution('100 3 2\\n15 99 98\\n40 3 2\\n90 10 9\\n') == 105.000000000\nassert solution('100 3 2\\n15 99 98\\n40 3 2\\n90 10 9\\n') == 105.000000000\nassert solution('100 3 2\\n15 99 98\\n40 3 2\\n90 10 9\\n') == 105.000000000\nassert solution('100 3 2\\n15 99 98\\n40 3 2\\n90 10 9\\n') == 105.000000000\nassert solution('100 3 2\\n15 99 98\\n40 3 2\\n90 10 9\\n') == 105.000000000\nassert solution('100 3 2\\n15 99 98\\n40 3 2\\n90 10 9\\n') == 105.000000000\nassert solution('100 3 2\\n15 99 98\\n40 3 2\\n90 10 9\\n') == 105.000000000\nassert solution('100 3 2\\n15 99"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n') == '115.000000000'\nprint('All test cases pass')"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n') == '115.000000000\\n'\n"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == 115.0, \"Your code is incorrect. Please provide the correct output.\"\n"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n\") == 115.000000000\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 10\\n\") == 120.000000000\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n\") == 115.000000000\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 8\\n\") == 120.000000000\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n\") == 115.000000000\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 8\\n\") == 115.000000000\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n\") == 115.000000000\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n\") == 115.000000000\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n\") == 115.000000000\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n\") == 115.000000000\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n\") == 115.000000000\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n\") == 115.000000000\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n\") == 115.000000000\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n\") == 115.000000000\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n\") == 115.000000000\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n\") == 115.000000000\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n\") == 115.000000000\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n\") == 115.000000000"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected\nprint(\"All test cases passed\")"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n100 1 1\\n100 1 1.5\") == \"199.500000\"\n"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"199.500000\""
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n100 1 1\\n100 1 1.5\") == \"199.5\""
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n100 1 1\\n100 1 1.5\\n') == '199.500000'"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt')) == '199.500000\\n'\n"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n100 1 1\\n100 1 1.5\") == \"199.500000\"\n"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n100 1 1\\n100 1 1.5\") == \"199.500000\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"199.500000\""
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"199.500000\\n\", \"Incorrect output\"\n"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''2\n100 1 1\n100 1 1.5''') == '199.500000'"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='2 3\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1'\nassert solution(stdin='3 2\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1'\nassert solution(stdin='3 1\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1'\nassert solution(stdin='2 2\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1'\nassert solution(stdin='2 3\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1'"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\nassert solution(\"3 4\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"3\\n\"\nassert solution(\"4 5\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"4\\n\"\nassert solution(\"5 6\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"4\\n\"\nassert solution(\"6 7\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"5\\n\"\nassert solution(\"7 8\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"6\\n\"\nassert solution(\"8 9\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"6\\n\"\nassert solution(\"9 10\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"7\\n\"\nassert solution(\"10 11\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"7\\n\"\nassert solution(\"11 12\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"8\\n\""
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input1) == \"1\\n\", \"Sample Input 1\""
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\n"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '1' # Test case 1"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\""
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\\n\"\n"
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Impossible\\n\", \"The function should return 'Impossible', but it returned: \" + str(solution(stdin))"
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Output: 5\\nImpossible\\n\", \"Test case 1 failed\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"5\\n\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Solution({stdin})!= expected({expected})\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"13\\n3 2 1 1\") == \"5\\n\"\n"
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"13\\n3 2 1 1\") == \"5\\ndef solution(stdin: str) -> str:\\n\\tpass\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"5\\n\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"13\\n3 2 1 1\") == \"5\\nImpossible\\n\"\nassert solution(\"10\\n1000000000\\n5000000000\") == \"5\\n5000000000\\n\"\nassert solution(\"10\\n1000000000\\n5000000000\") == \"5\\n5000000000\\n\"\nassert solution(\"10\\n1000000000\\n5000000000\") == \"5\\n5000000000\\n\"\nassert solution(\"10\\n1000000000\\n5000000000\") == \"5\\n5000000000\\n\"\nassert solution(\"10\\n1000000000\\n5000000000\") == \"5\\n5000000000\\n\"\nassert solution(\"10\\n1000000000\\n5000000000\") == \"5\\n5000000000\\n\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"13\\n3 2 1 1\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"5\\nImpossible\\n\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aabcad\\naba\\nacd\") == \"yes\"\nassert solution(\"abc\") == \"no\"\nassert solution(\"abcd\") == \"no\"\nassert solution(\"\") == \"no\"\nassert solution(\"aaaaaaa\") == \"no\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"no\"\nassert solution(\"acd\") == \"yes\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"no\"\nassert solution(\"acd\") == \"no\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('aabcad') == 'yes'\nassert solution('aba') == 'no'\nassert solution('acd') == 'no'"
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('aabcad') == 'yes'\nassert solution('aba') == 'no'\nassert solution('acd') == 'no'"
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('aabcad\\naba\\nacd') == 'yes'\nassert solution('abc\\nabc\\nxyz') == 'no'"
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"no\"\nassert solution(\"acd\") == \"yes\"\n\nsolution = \"\"\"def solution(stdin: str) -> str:\n    s = stdin.split()\n    s_1 = s[0]\n    s_2 = s[1]\n    merged_string = ''\n    \n    for i in range(len(s_1)):\n        for j in range(i, len(s_1)):\n            if s_1[i] < s_1[j] and s_2[i] < s_2[j]:\n                merged_string += s_1[i]\n                i += 1\n                j -= 1\n                break\n        else:\n            if i == len(s_1):\n                merged_string += s_1[i]\n                i += 1\n            else:\n                break\n    \n    if len(s_1) + len(s_2) == len(merged_string):\n        return \"yes\"\n    else:\n        return \"no\"\"\"\"\n\nsolution = \"\"\"def solution(stdin: str) -> str:\n    s = stdin.split()\n    s_1 = s[0]\n    s_2 = s[1]\n    merged_string = ''\n    \n    for i in range(len(s_1)):\n        for j in range(i, len(s_1)):\n            if s_1[i] < s_1[j] and s_2[i] < s_2[j]:\n                merged_string += s_1[i]\n                i += 1\n                j -= 1\n                break\n        else:\n            if i == len(s_1):\n                merged_string += s_1[i]\n                i += 1\n            else:\n                break\n    \n    if len(s_1) + len(s_2) == len(merged_string):\n        return \"yes\"\n    else:\n        return \"no\"\"\"\"\n\nsolution = \"\"\"def solution(stdin: str) -> str:\n    s = stdin.split()\n    s_1 = s[0]\n    s_2 = s[1]\n    merged_string = ''\n    \n    for i in range(len(s_1)):\n        for j in range(i, len(s_1)):\n            if s_1[i] < s_1[j] and s_2[i] < s_2[j]:\n                merged_string += s_1[i]\n                i += 1\n                j -= 1\n                break\n        else:\n            if i == len(s_1):\n                merged_string += s_1[i]\n                i += 1\n            else:\n                break\n    \n    if len(s_1) + len(s_2) == len(merged_string):\n        return \"yes\"\n    else:\n        return \"no\"\"\"\"\n\nsolution = \"\"\"def solution(stdin: str) -> str:\n    s = stdin.split()\n    s_1 = s[0]\n    s_2 = s[1]\n    merged_string = ''\n    \n    for i in range(len(s_1)):\n        for j in range(i, len(s_1)):\n            if s_1[i] < s_1[j] and s_2[i] < s_2[j]:\n                merged_string += s_1[i]\n                i += 1\n                j -= 1\n                break\n        else:\n            if i == len(s_1):\n                merged_string += s_1[i]\n                i += 1\n            else:\n                break\n    \n    if len(s_1) + len(s_2) == len(merged_string):\n        return \"yes\"\n    else:\n        return \"no\"\"\"\"\n\nsolution = \"\"\"def solution(stdin: str) -> str:\n    s = stdin.split()\n    s_1 = s[0]\n    s_2 = s[1]\n    merged_string = ''\n    \n    for i in range(len(s_1)):\n        for j in range(i, len(s_1)):\n            if s_1[i] < s_1[j] and s_2[i] < s_2[j]:\n                merged_string += s_1[i]\n                i += 1\n                j -= 1\n                break\n        else:\n            if i == len(s_1):\n                merged_string += s_1[i]\n                i += 1\n            else:\n                break\n    \n    if len(s_1) + len(s_2) == len(merged_string):\n        return \"yes\"\n    else:\n        return \"no\"\"\"\"\n\nsolution = \"\"\"def solution(stdin: str) -> str:\n    s = stdin.split()\n    s_"
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"no\"\nassert solution(\"acd\") == \"no\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"no\"\nassert solution(\"acd\") == \"yes\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('aabcad\\naba\\nacd') == 'yes\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\\n\"\n"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == 5, \"Output incorrect\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution_input) == solution_output, f\"Incorrect solution. Expected: '{solution_output}', Received: '{solution(solution_input)}'\"\nfor i in range(5):\n    assert solution(f\"Sample Input\\n{i + 1} {N}\\n{L}\\n\") == f\"Sample Output\\n{i + 1} {N}\\n\", f\"Incorrect solution. Expected: '{f\"Sample Output\\n{i + 1} {N}\\n\"}', Received: '{solution(f\"Sample Input\\n{i + 1} {N}\\n{L}\\n\")}'\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\\n\"\nassert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"10\\n\"\nassert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"15\\n\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('example.txt', 'r').read()) == '5\\n'\n"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"TODO\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '5\\n'\n"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\\n\""
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"4\\n\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 2\\n2 4 same\\n3 5 same') == 4"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\") == \"4\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\") == \"4\\n4\\n1\\n2\\n2\\n2\\n\"\nassert solution(\"5 3\\n2 5 different\\n3 4 different\\n4 1 different\\n5 5 different\") == \"5\\n5\\n4\\n3\\n2\\n1\\n\"\nassert solution(\"5 5\\n1 1 same\\n2 2 different\\n3 3 same\\n4 4 same\\n5 5 same\") == \"5\\n5\\n5\\n5\\n5\\n5\\n\"\nassert solution(\"5 3\\n2 5 different\\n3 4 different\\n4 1 different\\n5 5 different\") == \"5\\n5\\n4\\n3\\n2\\n1\\n\"\nassert solution(\"5 2\\n2 4 same\\n3 5 same\") == \"4\\n4\\n1\\n2\\n2\\n2\\n\""
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 2\\n2 4 same\\n3 5 same\\n') == '4'\nassert solution('5 2\\n2 4 different\\n3 5 same\\n') == '1'\nassert solution('5 2\\n2 4 same\\n3 5 different\\n') == '1'\nassert solution('5 2\\n2 4 same\\n3 5 same\\n') == '0'\nassert solution('5 2\\n2 4 same\\n3 5 same\\n') == '1000001'\n\nfrom typing import List"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\") == \"4\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '4', \"The solution is incorrect.\""
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\") == \"4\"\nassert solution(\"10 5\\n3 7 different\\n4 9 different\\n5 11 different\") == \"5\"\nprint(solution(\"5 2\\n2 4 same\\n3 5 same\\n4 6 different\\n5 8 different\\n6 10 different\\n7 12 different\\n8 14 different\\n9 16 different\\n10 18 different\"))\n"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\") == \"4\""
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\") == 4\n"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\") == \"3\"\n"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([6, 4, 0, 1, 0, 2, 3, 4, 3, 5]) == 3\nassert solution([6, 3, 0, 1, 0, 2, 3, 4, 3, 5]) == 2\nassert solution([6, 4, 0, 1, 0, 2, 3, 4, 3, 5]) == 1"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6 4\\n0 1\\n0 2\\n3 4\\n3 5') == '3'\nprint('All tests passed!')"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\\n\") == \"3\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\") == \"3\"\nassert solution(\"6 4\\n1 2\\n1 3\\n2 3\\n2 4\") == \"4\"\nassert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\\n3 6\\n4 5\\n4 6\\n5 6\") == \"3\"\nassert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\\n3 6\\n4 5\\n4 6\\n5 6\\n6 7\\n7 8\\n8 9\") == \"5\"\nassert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\\n3 6\\n4 5\\n4 6\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n101 102\\n102 103\\n103 104\\n104 105\\n105 106\\n106 107\\n107 108\\n108 109\\n109 110\\n110 111\\n111 112\\n112 113\\n113 114\\n114 115\\n115 116\\"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\") == \"3\"\nassert solution(\"6 4\\n0 1\\n0 2\\n4 3\\n4 2\\n4 5\") == \"6\"\nassert solution(\"6 4\\n0 1\\n0 2\\n4 3\\n4 2\\n4 5\") == \"3\"\nassert solution(\"6 4\\n0 1\\n0 2\\n4 3\\n4 2\\n4 5\") == \"6\"\nassert solution(\"6 4\\n0 1\\n0 2\\n4 3\\n4 2\\n4 5\") == \"3\"\nassert solution(\"6 4\\n0 1\\n0 2\\n4 3\\n4 2\\n4 5\") == \"6\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(str(1000000)) == \"3\"\nassert solution(str(1000000)) == \"3\"\nassert solution(str(1000000)) == \"3\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([6, 4, 0, 1, 0, 2, 3, 4, 3, 5]) == 3, \"Your solution is incorrect.\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin: str) == \"3\\n\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 3\nprint(\"All tests passed!\")"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\") == \"9.0\\n6.5\\n2.5\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR') == '9.0\\n6.5\\n2.5'"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR') == '9.0\\n6.5\\n2.5\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"9.0\\n6.5\\n2.5\"\n"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR') == '9.0\\n6.5\\n2.5'"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\") == \"9.0\\n6.5\\n2.5\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\\n\") == \"9.0\\n6.5\\n2.5\\n\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\") == \"9.0\\n6.5\\n2.5\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"The output is {solution(input())}, but the expected output is {output}\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\") == \"1\"\n"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '1\\n' # solution"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\") == \"1\"\nassert solution(\"3 2 2\\nR 1 2\\nR 2 3\") == \"0\"\nassert solution(\"5 6 3\\nR 1 3\\nB 2 3\\nB 3 4\\nR 4 5\\nR 5 6\") == \"0\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 1, \"Invalid solution\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 1, \"Incorrect solution\"\nassert solution(\"abc\\nabc\\nabc\\nxyz\\nxyz\\nxyz\\nxyz\\n\") == 0, \"Incorrect solution\"\nassert solution(\"abcd\\nabcd\\nabcd\\n\\n\\n\\n\\n\") == 1, \"Incorrect solution\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == output, f\"Input: {input}\\nOutput: {output}\\nSolution: {solution(input)}\"\n"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1\\n\"\n"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"The solution for the given input is incorrect. \\nExpected: {output}\\nActual: {solution(input())}\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\") == \"1\"\nassert solution(\"5 4 1\\nR 1 2\\nB 2 3\\nR 3 4\\nR 4 5\") == \"0\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3 2\\nB 1 2\\nB 2 3\\nR 3 1') == '1\\n1\\n'\nassert solution('4 2 2\\nB 1 2\\nB 3 4\\nR 1 3') == '0\\n0\\n'"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '88\\n5\\n5\\n7'"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7') == '88\\n5\\n5\\n7\\n'"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '88', \"Testcase not passed\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt').read()) == 'Output\\n'"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"88\", \"The code is not correct\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Your solution is incorrect. Please check the sample inputs and examples provided in the problem statement.\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\") == \"88\\n5\\n5\\n7\"\n"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"88\\n5\\n5\\n7\\n\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"The solution is {solution(input())}, but the expected output is {expected_output}.\""
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5, \"Your solution is incorrect.\""
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 5\nprint(\"Correct\")"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == -1\nassert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\\n\") == 5"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt').read()) == 5, 'Expected output is 5, but got {}'.format(solution(open('input.txt').read()))"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Solution for the given input {input()} does not match the expected output. Expected output: {output}, got: {solution(input())}\""
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3') == 5\nassert solution('1 1 1\\n1 1 1\\n1 1 1') == -1\nassert solution('3 3 2 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3') == 5\nassert solution('1 1 1\\n1 1 1\\n1 1 1') == -1\n"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    3 3 1 2\n    2\n    1 2 2\n    1 3 1\n    2 3 3\n''') == 5\n\nassert solution('''\n    3 3 1 2\n    4\n    1 2 2\n    1 3 1\n    2 3 3\n    1 3 2\n    2 4 1\n''') == -1\n\nassert solution('''\n    3 3 1 2\n    4\n    1 2 2\n    1 3 1\n    2 3 3\n    1 3 2\n    2 4 5\n''') == 5\n\nassert solution('''\n    4 3 2 2\n    2\n    1 2 2\n    1 3 1\n    2 3 3\n    1 3 2\n    2 4 1\n''') == 5\n\nassert solution('''\n    5 4 3 2\n    2\n    1 2 2\n    1 3 1\n    2 3 3\n    1 3 2\n    2 4 1\n''') == -1"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 5"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 3, 1, 2) == 5\n\nassert solution(2) == -1"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, but got {solution(input())}.\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\", \"Test case 1 failed\"\n\ninput_str = input()\nexplosion_str = input()\n\nremaining_str = \"\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\"\nassert solution(\"C4\") == \"def solution(stdin: str) -> str:pass\"\n"
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\"\nassert solution(\"abcdg\") == \"FRULA\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\"\n"
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('mirkovC4nizCC44') =='mirkovniz', \"The solution is not correct.\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('mirkovC4nizCC44') =='mirkovniz'"
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\", \"Incorrect output for sample input 1\"\n\nassert solution(\"hello\") == \"hello\", \"Incorrect output for sample input 2\"\n\nassert solution(\"mirkovC4nizCC44\") == \"mirkovniz\", \"Incorrect output for sample input 3\"\n\nassert solution(\"mirkovC4nizCC44\") == \"mirkovniz\", \"Incorrect output for sample input 4\"\n\nassert solution(\"mirkovC4nizCC44\") == \"mirkovniz\", \"Incorrect output for sample input 5\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\"\nassert solution(\"AaAaAaAaAaAaAaAa\") == \"FRULA\"\nassert solution(\"hello\") == \"FRULA\"\nassert solution(\"Codeforces\") == \"FRULA\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 3, 45, 10, 60) == 32"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3,3,65,45,60) == 32, \"The least total amount of tolls must be 32.\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"32\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3,3,65,45,60,45,60) == 32"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 32\nassert solution(4) == 42\nassert solution(5) == 52\nassert solution(6) == 62\nassert solution(7) == 72"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 32"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 32\nassert solution(4) == 150\nassert solution(5) == 135\nassert solution(6) == 90\nassert solution(7) == 45\nassert solution(8) == 25"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 65\\n45 10\\n60 25\") == \"32\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"32\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 65\\n45 10\\n60 25\") == \"32\""
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"5\\n1 2 0 3 1\\n\") == \"3\\n2\\n\""
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"3\", \"Test 1 failed\"\nassert solution(4) == \"2\", \"Test 2 failed\"\nassert solution(5) == \"1\", \"Test 3 failed\"\nassert solution(6) == \"1\", \"Test 4 failed\"\nassert solution(7) == \"2\", \"Test 5 failed\""
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(3)) == '3\\n2'\nassert solution(str(5)) == '3\\n2'\nassert solution(str(7)) == '3\\n2'"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\\n2\", \"The function is not implemented\""
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2 0 3 1\") == \"3\\n2\""
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3\\n2\""
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2 0 3 1\\n\") == \"3\\n2\\n\"\nassert solution(\"4\\n1 2 2 3 4\\n\") == \"3\\n2\\n\"\nassert solution(\"6\\n1 2 1 3 3\\n\") == \"2\\n1\\n\"\nassert solution(\"7\\n1 2 1 3 3\\n\") == \"2\\n1\\n\"\nassert solution(\"8\\n1 2 1 3 3\\n\") == \"2\\n1\\n\"\nassert solution(\"9\\n1 2 1 3 3\\n\") == \"2\\n1\\n\"\nassert solution(\"10\\n1 2 1 3 3\\n\") == \"2\\n1\\n\"\nassert solution(\"11\\n1 2 1 3 3\\n\") == \"2\\n1\\n\"\nassert solution(\"12\\n1 2 1 3 3\\n\") == \"2\\n1\\n\"\nassert solution(\"13\\n1 2 1 3 3\\n\") == \"2\\n1\\n\"\nassert solution(\"14\\n1 2 1 3 3\\n\") == \"2\\n1\\n\"\nassert solution(\"15\\n1 2 1 3 3\\n\") == \"2\\n1\\n\"\nassert solution(\"16\\n1 2 1 3 3\\n\") == \"2\\n1\\n\"\nassert solution(\"17\\n1 2 1 3 3\\n\") == \"2\\n1\\n\"\nassert solution(\"18\\n1 2 1 3 3\\n\") == \"2\\n1\\n\"\nassert solution(\"19\\n1 2 1 3 3\\n\") == \"2\\n1\\n\"\nassert solution(\"20\\n1 2 1 3 3\\n\") == \"2\\n1\\n\"\nassert solution(\"21\\n1 2 1 3 3\\n\") == \"2\\n1\\n\"\nassert solution(\"22\\n1 2 1 3 3\\n\") == \"2\\n1\\n\"\nassert solution(\"23\\n1 2 1 3 3\\n\") == \"2\\n1\\n\"\nassert solution(\"24\\n1 2 1 3 3\\n\") == \"2\\n1\\n\"\nassert solution(\"25\\n1 2 1 3 3\\n\") == \"2\\n1\\n\"\nassert solution(\"26\\n1 2 1 3 3\\n\") == \"2\\n1\\n\"\nassert solution(\"27\\n1 2 1 3 3\\n\") == \"2\\n1\\n\"\nassert solution(\"28\\n1 2 1 3 3\\n\") == \"2\\n1\\n\"\nassert solution(\"29\\n1 2 1 3 3\\n\") == \"2\\n1\\n\"\nassert solution(\"30\\n1 2 1 3 3\\n\") == \"2\\n1\\n\"\nassert solution(\"31\\n1 2 1 3 3\\n\") == \"2\\n1\\n\"\nassert solution(\"32\\n1 2 1 3 3\\n\") == \"2\\n1\\n\"\nassert solution(\"33\\n1 2 1 3 3\\n\") == \"2\\n1\\n\"\nassert solution(\"34\\n1 2 1 3 3\\n\") == \"2\\n1\\n\"\nassert solution(\"35\\n1 2 1 3 3\\n\") == \"2\\n1\\n\"\nassert solution(\"36\\n1 2 1 3 3\\n\") == \"2\\n1\\n\"\nassert solution(\"37\\n1 2 1 3 3\\n\") == \"2\\n1\\n\"\nassert solution(\"38\\n1 2 1 3 3\\n\") == \"2\\n1\\n\"\nassert solution(\"39\\n1 2 1 3 3\\"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2 0 3 1\") == \"3\\n2\"\nassert solution(\"10\\n10 5 1 4 3 2 1\") == \"5\"\nassert solution(\"5\\n1 2 1 3 0\") == \"2\"\nassert solution(\"10\\n10 10 5 1 10 5 10 10\") == \"5\""
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == \"Output\", \"Test failed.\"\n"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 2 0 3 1\") == \"3\\n2\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"2\" # Your solution here"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    2 4 4\n    + 1 1\n    - 1 2\n    + 1 3\n    - 1 4\n    \"\"\"\n) == \"2\"\n\nprint(\"All tests passed successfully\")"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\") == \"2\"\n"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 2\n"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4') == '2'\n\nprint(solution('2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4')) # 2"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4') == '2'\n"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\\n') == '2'"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution\n\nN, M, K = map(int, stdin.readline().split())\nmeasurements = []\n\nfor _ in range(K):\n    spin, y, x = map(str, stdin.readline().split())\n    y, x = map(int, [y, x])\n    measurements.append((spin, (y, x)))"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1000000000 0\\n1000000000 1\\n\") == 500000004\n"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1000000000 0\\n1000000000 1\") == 500000004\n"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\""
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n1000000000 0\\n1000000000 1') == 500000004\nprint('All tests passed!')"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1000000000 0\\n1000000000 1\") == \"500000004\"\n\nHere's the code for the given problem statement:\n\n```python\nimport math"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n1000000000 0\\n1000000000 1\\n') == '500000004\\n'\nassert solution('2\\n1000000000 0\\n1000000000 1\\n') == '500000004\\n'\nassert solution('2\\n1000000000 0\\n1000000000 1\\n') == '500000004\\n'\nassert solution('2\\n1000000000 0\\n1000000000 1\\n') == '500000004\\n'\nassert solution('2\\n1000000000 0\\n1000000000 1\\n') == '500000004\\n'"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\""
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '500000004'\n"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1000000000 0\\n1000000000 1\\n\") == 500000004\nassert solution(\"3\\n1000000000 0\\n1000000000 1\\n1000000000 2\\n\") == 1000000000\nassert solution(\"4\\n1000000000 0\\n1000000000 1\\n1000000000 2\\n1000000000 3\\n\") == 1000000000\nassert solution(\"5\\n1000000000 0\\n1000000000 1\\n1000000000 2\\n1000000000 3\\n1000000000 4\\n\") == 1000000000\nassert solution(\"6\\n1000000000 0\\n1000000000 1\\n1000000000 2\\n1000000000 3\\n1000000000 4\\n1000000000 5\\n\") == 1000000000\nassert solution(\"7\\n1000000000 0\\n1000000000 1\\n1000000000 2\\n1000000000 3\\n1000000000 4\\n1000000000 5\\n1000000000 6\\n\") == 1000000000\nassert solution(\"8\\n1000000000 0\\n1000000000 1\\n1000000000 2\\n1000000000 3\\n1000000000 4\\n1000000000 5\\n1000000000 6\\n1000000000 7\\n\") == 1000000000\nassert solution(\"9\\n1000000000 0\\n1000000000 1\\n1000000000 2\\n1000000000 3\\n1000000000 4\\n1000000000 5\\n1000000000 6\\n1000000000 7\\n1000000000 8\\n\") == 1000000000\nassert solution(\"10\\n1000000000 0\\n1000000000 1\\n1000000000 2\\n1000000000 3\\n1000000000 4\\n1000000000 5\\n1000000000 6\\n1000000000 7\\n1000000000 8\\n1000000000 9\\n\") == 1000000000\nassert solution(\"11\\n1000000000 0\\n1000000000 1\\n1000000000 2\\n1000000000 3\\n1000000000 4\\n1000000000 5\\"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Output: {output}\\nInput: {input()}\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"12\\n\", \"The minimum sum of frustration is not correct.\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '12', \"Test case 1 failed\"\nassert solution(stdin) == '12', \"Test case 2 failed\"\nassert solution(stdin) == '12', \"Test case 3 failed\"\nassert solution(stdin) == '12', \"Test case 4 failed\"\nassert solution(stdin) == '12', \"Test case 5 failed\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\") == \"12\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''5 8\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24''') == '12\\n'\n"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\\n\") == \"12\\n\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\\n\") == \"12\\n\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n5 8\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24\n''') == '12'"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\") == 12\nassert solution(\"1 1 10 20\") == 0\nassert solution(\"1 2 1 10\\n2 2 11 16\\n2 1 9 12\\n2 1 1 10\\n2 2 9 12\\n2 1 10 12\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\\n5 6 7 8\\n6 6 7 8\\n7 7 7 8\\n8 8 8 8\") == 0\nassert solution(\"2 2 1 10\\n2 1 11 16\\n1 1 9 12\\n1 1 10 12\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\\n5 6 7 8\\n6 6 7 8\\n7 7 7 8\\n8 8 8 8\\n9 9 9 9\\n9 9 9 9\\n9 9 9 9\\n9 9 9 9\") == 0\nassert solution(\"1 1 10 20\\n1 2 1 10\\n1 1 10 20\\n1 2 1 10\\n1 1 10 20\\n1 2 1 10\\n1 1 10 20\\n1 2 1 10\\n1 1 10 20\\n1 2 1 10\\n1 1 10 20\\n1 2 1 10\\n1 1 10 20\\n1 2 1 10\\n1 1 10 20\\n1 2 1 10\\n1 1 10 20\\n1 2 1 10\\n1 1 10 20\\n1 2 1 10\\n1 1 10 20\\n1 2 1 10\\n1 1 10 20\\n1 2 1 10\\n1 1 10 20\\n1 2 1 10\\n1 1 10 20\\n1 2 1 10\\n1 1 10 20\\n1 2 1 10\\n1 1 10 20\\n1 2 1 10\\n1 1 10 20\\n1 2 1 10\\n1 1 10 20\\n1 2 1 10\\n1 1 10 20\\n1 2 1 10\\n1 1 10 20\\n1 2 1 10\\n1 1 10 20\\n1 2 1 10\\n1 1 10 20\\n1 2 1 10\\n1 1 10 20\\n1 2 1 10\\n1 1 10 20\\n1 2 1 10\\n1 1 10 20\\n1 2 1 10\\n1 1 10 20\\n1 2 1 10\\n1 1 10 20\\n1 2 1 10\\n1 1 10 20\\n1 2 1 10\\n1 1 10 20\\n1 "
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"12\", \"Test Failed\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"12\", \"Incorrect output\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == \"3\"\nassert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == \"3\"\nassert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == \"3\"\n"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == expected_output, f\"The output is {solution(sample_input)}, but the expected output is {expected_output}.\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n\\tpass\\n\"\n"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == \"3\\n\"\nassert solution(\"1 1\\n5 3\\n4 2\\n5\") == \"2\\n\"\nassert solution(\"1 2\\n3 5\\n2 4\\n3\") == \"1\\n\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected_result, f\"Solution is not correct. Expected: {expected_result}, Received: {solution}\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 19\\n15 5 3\\n12 4 4\\n20 10 5') == '3'"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == \"3\\n\"\nassert solution(\"10 20000000000\\n0 0 0\") == \"22000000000\\n\"\n"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == 3, \"Test case failed\"\nassert solution(\"3 19\\n2 5 3\\n12 4 4\\n20 10 5\") == 3, \"Test case failed\"\nassert solution(\"3 19\\n2 5 3\\n12 4 4\\n5 10 3\") == 3, \"Test case failed\"\nassert solution(\"3 19\\n2 5 3\\n12 4 4\\n5 10 1\") == 2, \"Test case failed\"\nassert solution(\"3 19\\n2 5 3\\n12 4 4\\n5 10 3\") == 3, \"Test case failed\"\nassert solution(\"3 19\\n2 5 3\\n12 4 4\\n5 10 2\") == 3, \"Test case failed\"\nassert solution(\"3 19\\n2 5 3\\n12 4 4\\n5 10 3\") == 3, \"Test case failed\"\nassert solution(\"3 19\\n2 5 3\\n12 4 4\\n5 10 2\") == 3, \"Test case failed\"\nassert solution(\"3 19\\n2 5 3\\n12 4 4\\n5 10 3\") == 3, \"Test case failed\"\nassert solution(\"3 19\\n2 5 3\\n12 4 4\\n5 10 4\") == 3, \"Test case failed\"\nassert solution(\"3 19\\n2 5 3\\n12 4 4\\n5 10 3\") == 3, \"Test case failed\"\nassert solution(\"3 19\\n2 5 3\\n12 4 4\\n5 10 4\") == 3, \"Test case failed\"\nassert solution(\"3 19\\n2 5 3\\n12 4 4\\n5 10 4\") == 3, \"Test case failed\"\nassert solution(\"3 19\\n2 5 3\\n12 4 4\\n5 10 4\") == 3, \"Test case failed\"\nassert solution(\"3 19\\n2 5 3\\n12 4 4\\n5 10 4\") == 3, \"Test case failed\"\nassert solution(\"3 19\\n2 5 3\\n12 4 4\\n5 10 4\") == 3, \"Test case failed\"\nassert solution(\"3 19\\n2 5 3\\n12 4 4\\n5 10 4\") == 3, \"Test case failed\"\nassert solution(\"3 19\\n2 5 3\\n12 4 4\\n5 10 4\") == 3, \"Test case failed\"\nassert solution(\"3 19\\n2 5 3\\n12 4 4\\n5 10 4\") == 3, \"Test case failed\"\nassert solution(\"3 19\\n2 5 3\\n12 4 4\\n5 10 4\") == 3, \"Test case failed\"\nassert solution(\"3 19\\n2 5 3\\n12 4 4\\n5 10 4\") == 3, \"Test case failed\"\nassert solution(\"3 19\\n2 5 3\\n12 4 4\\n5 10 4\") == 3, \"Test case failed\"\nassert solution(\"3 19\\n2 5 3\\n12 4 4\\n5 10 4\") == 3, \"Test case failed\"\nassert solution(\"3 19\\n2 5 3\\n12 4 4\\n5 10 4\") == 3, \"Test case failed\"\nassert solution(\"3 19\\n2 5 3\\n12 4 4\\n5 10 4\") == 3, \"Test case failed"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 19\\n15 5 3\\n12 4 4\\n20 10 5') == '3'\nassert solution('5 5\\n10 15\\n20 30\\n25 25\\n30 50') == '2'"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == \"3\""
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\\n\" + \"1\\n\"\n"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == '1'\nprint(1)\n\nimport math\n"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin: str) == \"1\\n1\""
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 1"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 1"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n1 1\\n') == '1'"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 1"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 1\nassert solution() == 1"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 1\n"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('RGGR\\nGBGB\\nBYBY\\nYRYR') == '3'\nassert solution('GGGB\\nGGGG\\nGGGG\\nGGGG') == '3'\nassert solution('RRRR\\nRRRR\\nRRRR\\nRRRR') == '3'\nassert solution('GGGG\\nGGGG\\nGGGG\\nGGGG') == '4'\nassert solution('RGRG\\nGBGB\\nRBRR\\nGRBR') == '5'\nassert solution('RBBR\\nBRBB\\nBBBR\\nBBBR') == '6'\nassert solution('RGRG\\nGRBR\\nGRBR\\nGRBR') == '6'\nassert solution('GRBR\\nGRBB\\nBRBG\\nBBGR') == '7'\nassert solution('GRGR\\nGGGG\\nGGGG\\nGGGG') == '8'\nassert solution('RGRG\\nGRBR\\nGRBR\\nGRBR') == '8'\nassert solution('RGRG\\nGRBR\\nGRBR\\nGRBR') == '9'\nassert solution('GRBR\\nGRBR\\nGRBB\\nBRBG') == '10'\nassert solution('GRGR\\nGGGG\\nGGGG\\nGGGG') == '11'\nassert solution('RGRG\\nGRBR\\nGRBR\\nGRBR') == '12'\nassert solution('RGRG\\nGRBR\\nGRBR\\nGRBR') == '13'"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == 3, \"The given solution is not correct.\""
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"RGGR\") == \"3\"\nassert solution(\"GBGB\") == \"3\"\nassert solution(\"BYBY\") == \"3\"\nassert solution(\"YRYR\") == \"3\""
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == \"3\"\n"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"RGGR\") == \"3\\n\"\nassert solution(\"GBGB\") == \"3\\n\"\nassert solution(\"BYBY\") == \"3\\n\"\nassert solution(\"YRYR\") == \"3\\n\""
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == \"3\\n\"\n"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('RGGR\\nGBGB\\nBYBY\\nYRYR') == '3\\n'\n"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == \"3\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('RGGR') == '3\\n'\nassert solution('GBGB') == '3\\n'\nassert solution('BYBY') == '3\\n'\nassert solution('YRYR') == '3\\n'"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == \"3\\n\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 'AAAAA\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"AAAAA\\ndef solution(stdin: str) -> str:\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\\n\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'AAAAA'\n"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'AAAAA'"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"AAAAA\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='5\\n-2 -1 0 1 2\\n2 1 0 -1 -2') == 'AAAAA\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == \"ADEFE\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\\n\") == \"IMPOSSIBLE\" # correct solution"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"IMPOSSIBLE\" #Here's the correct solution"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(None) == \"IMPOSSIBLE\", \"Solution should return IMPOSSIBLE\"\nassert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\") == \"IMPOSSIBLE\", \"Solution should return IMPOSSIBLE\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6 3\\n2 3\\n4 0\\n0 2\\n6 1\\n') == 'IMPOSSIBLE'"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"IMPOSSIBLE\" # Your code here\n"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'IMPOSSIBLE'  # Test case 1"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == expected_output, f\"The sample input is incorrect. Expected: {expected_output}, Received: {solution(sample_input)}\"\n\nsample_input = \"\"\"6 3\n2 3\n4 0\n0 2\n6 1\"\"\"\n\nexpected_output = \"\"\"IMPOSSIBLE\"\"\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6 3\\n2 3\\n4 0\\n0 2\\n6 1') == 'IMPOSSIBLE'\n\nimport math"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6 3\\n2 3\\n4 0\\n0 2\\n6 1') == 'IMPOSSIBLE\\n'"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5\\naustria\\nautocorrect\\nprogram\\nprogramming\\ncomputer\\nautocorrelation\\nprogramming\\ncompetition\\nyzx\\naustria\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str: pass\\n\", \"The output is incorrect.\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 5\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria') == '12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass', \"Test case 1 failed\"\nassert solution(input()) == '12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass', \"Test case 2 failed\"\nassert solution(input()) == '12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass', \"Test case 3 failed\"\nassert solution(input()) == '12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass', \"Test case 4 failed\"\nassert solution(input()) == '12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass', \"Test case 5 failed\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"austria\") == \"12\"\nassert solution(\"autocorrect\") == \"12\"\nassert solution(\"program\") == \"4\"\nassert solution(\"programming\") == \"11\"\nassert solution(\"computer\") == \"3\"\nassert solution(\"autocorrelation\") == \"2\"\nassert solution(\"zyx\") == \"2\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 5\\naustria\\nautocorrect\\nprogram\\nprogramming\\ncomputer\\nautocorrelation\\nprogramming\\ncompetition\\nzyx\\naustria\\n') == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\", \"Test 1\"\n\nassert solution('5 5\\naustria\\nautocorrect\\nprogram\\nprogramming\\ncomputer\\nautocorrelation\\nprogramming\\ncompetition\\nzyx\\naustria\\n') == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\", \"Test 2\"\n\nassert solution('5 5\\naustria\\nautocorrect\\nprogram\\nprogramming\\ncomputer\\nautocorrelation\\nprogramming\\ncompetition\\nzyx\\naustria\\n') == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\", \"Test 3\"\n\nassert solution('5 5\\naustria\\nautocorrect\\nprogram\\nprogramming\\ncomputer\\nautocorrelation\\nprogramming\\ncompetition\\nzyx\\naustria\\n') == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\", \"Test 4\"\n\nassert solution('5 5\\naustria\\nautocorrect\\nprogram\\nprogramming\\ncomputer\\nautocorrelation\\nprogramming\\ncompetition\\nzyx\\naustria\\n') == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\", \"Test 5\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"austria\") == \"12\", \"Expected output: 12\"\nassert solution(\"autocorrect\") == \"4\", \"Expected output: 4\"\nassert solution(\"program\") == \"11\", \"Expected output: 11\"\nassert solution(\"computer\") == \"3\", \"Expected output: 3\"\nassert solution(\"autocorrelation\") == \"2\", \"Expected output: 2\"\nassert solution(\"zyx\") == \"2\", \"Expected output: 2\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"12\", \"Your solution is incorrect.\"\n"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"The given code is incorrect.\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"austria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Please provide the correct input.\"\nassert solution(\"austria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Please provide the correct input.\"\nassert solution(\"austria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Please provide the correct input.\"\nassert solution(\"austria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Please provide the correct input.\"\nassert solution(\"austria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Please provide the correct input.\"\nassert solution(\"austria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Please provide the correct input.\"\nassert solution(\"austria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Please provide the correct input.\"\nassert solution(\"austria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Please provide the correct input.\"\nassert solution(\"austria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Please provide the correct input.\"\nassert solution(\"austria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Please provide the correct input.\"\nassert solution(\"austria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Please provide the correct input.\"\nassert solution(\"austria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Please provide the correct input.\"\nassert solution(\"austria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Please provide the correct input.\"\nassert solution(\"austria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"austria\") == \"12\", \"First solution\"\nassert solution(\"autocorrect\") == \"12\", \"Second solution\"\nassert solution(\"program\") == \"4\", \"Third solution\"\nassert solution(\"programming\") == \"11\", \"Fourth solution\"\nassert solution(\"computer\") == \"3\", \"Fifth solution\"\nassert solution(\"autocorrelation\") == \"12\", \"Sixth solution\"\nassert solution(\"competition\") == \"2\", \"Seventh solution\"\nassert solution(\"zyx\") == \"3\", \"Eighth solution\"\nassert solution(\"austria\") == \"12\", \"Ninth solution\""
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 3, \"Incorrect output\""
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 3"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 3\n"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 3\nassert solution(1) == 1\nassert solution(5) == 5\nassert solution(6) == 12\nassert solution(0) == 12\nassert solution(4) == 12\nassert solution(8) == 12\nassert solution(7) == 12\nassert solution(10) == 12\nassert solution(11) == 12\nassert solution(12) == 12\nassert solution(13) == 12\nassert solution(14) == 12\nassert solution(15) == 12\nassert solution(16) == 12\nassert solution(17) == 12\nassert solution(18) == 12\nassert solution(19) == 12\nassert solution(20) == 12\nassert solution(21) == 12\nassert solution(22) == 12\nassert solution(23) == 12\nassert solution(24) == 12\nassert solution(25) == 12\nassert solution(26) == 12\nassert solution(27) == 12\nassert solution(28) == 12\nassert solution(29) == 12\nassert solution(30) == 12\nassert solution(31) == 12\nassert solution(32) == 12\nassert solution(33) == 12\nassert solution(34) == 12\nassert solution(35) == 12\nassert solution(36) == 12\nassert solution(37) == 12\nassert solution(38) == 12\nassert solution(39) == 12\nassert solution(40) == 12\nassert solution(41) == 12\nassert solution(42) == 12\nassert solution(43) == 12\nassert solution(44) == 12\nassert solution(45) == 12\nassert solution(46) == 12\nassert solution(47) == 12\nassert solution(48) == 12\nassert solution(49) == 12\nassert solution(50) == 12\nassert solution(51) == 12\nassert solution(52) == 12\nassert solution(53) == 12\nassert solution(54) == 12\nassert solution(55) == 12\nassert solution(56) == 12\nassert solution(57) == 12\nassert solution(58) == 12\nassert solution(59) == 12\nassert solution(60) == 12\nassert solution(61) == 12\nassert solution(62) == 12\nassert solution(63) == 12\nassert solution(64) == 12\nassert solution(65) == 12\nassert solution(66) == 12\nassert solution(67) == 12\nassert solution(68) == 12\nassert solution(69) == 12\nassert solution(70) == 12\nassert solution(71) == 12\nassert solution(72) == 12\nassert solution(73) == 12\nassert solution(74) == 12\nassert solution(75) == 12\nassert solution(76) == 12\nassert solution(77) == 12\nassert solution(78) == 12\nassert solution(79) == 12\nassert solution(80) == 12\nassert solution(81) == 12\nassert solution(82) == 12\nassert solution(83) == 12\nassert solution(84) == 12\nassert solution(85) == 12\nassert solution(86) == 12\nassert solution(87) == 12\nassert solution(88) == 12\nassert solution(89) == 12\nassert solution(90) == 12\nassert solution(91) == 12\nassert solution(92) == 12\nassert solution(93) == 12\nassert solution(94) == 12\nassert solution(95) == 12\nassert solution("
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(None) == \"impossible\"  # This is not possible"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Expected '{output()}', got '{solution(input())}'\""
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3\\n3\\n12\\n\""
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n0 1 1\") == \"3\"\nassert solution(\"5\\n1 2 3 4 5\") == \"3\"\nassert solution(\"4\\n0 1 0 1\") == \"impossible\"\nassert solution(\"5\\n1 2 3 4 5\") == \"3\"\nassert solution(\"1\\n0\") == \"1\"\nassert solution(\"6\\n0 1 0 1 0 1\") == \"3\"\nassert solution(\"6\\n0 0 0 0 0 0\") == \"impossible\"\nassert solution(\"7\\n0 1 0 1 0 1 0\") == \"3\""
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n0 1 1') == '3\\n'\nassert solution('4\\n0 1 1') == '12\\n'\nassert solution('6\\n0 1 1') == '3\\n'\nassert solution('13\\n0 1 1') == '12\\n'\nassert solution('20\\n0 1 1') == '3\\n'\nassert solution('30\\n0 1 1') == '12\\n'"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"3\\n3\", \"Testcase 1\"\nassert solution(input()) == \"4\\n4\", \"Testcase 2\"\nassert solution(input()) == \"5\\n4\", \"Testcase 3\"\nassert solution(input()) == \"6\\n5\", \"Testcase 4\"\nassert solution(input()) == \"7\\n5\", \"Testcase 5\"\nassert solution(input()) == \"12\\n5\", \"Testcase 6\"\nassert solution(input()) == \"12\\n6\", \"Testcase 7\"\nassert solution(input()) == \"12\\n7\", \"Testcase 8\"\nassert solution(input()) == \"12\\n8\", \"Testcase 9\"\nassert solution(input()) == \"12\\n9\", \"Testcase 10\"\nassert solution(input()) == \"12\\n10\", \"Testcase 11\"\nassert solution(input()) == \"12\\n12\", \"Testcase 12\"\nassert solution(input()) == \"impossible\\n12\", \"Testcase 13\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\", \"Expected Pre Post In Post In Pre, but got {}\"\n\nassert solution(\"BIGEDCJFAH\") == \"In In In In Post\", \"Expected In In In In Post, but got {}\"\n\nassert solution(\"BIGEDCJFAH\") == \"In In In In Post\", \"Expected In In In In Post, but got {}\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\"\nassert solution(stdin=\"BIGEDCJFAH\") == \"IGEDCJBAFH\"\nassert solution(stdin=\"BIGEDCJFAH\") == \"HFBJCDEGIA\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\", \"Incorrect solution\"\nassert solution(\"BIGEDCJFAH\") == \"In Post In Pre Post\", \"Incorrect solution\"\nassert solution(\"BIGEDCJFAH\") == \"In Post In Pre Post\", \"Incorrect solution\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"HFBIGEDCJA\\nBIGEDCJFAH\\nBIGEDCJFAH\\n\") == \"Pre Post In Post In Pre\\nHFBJCDEGIA\\nBIGEDCJFAH\\nIGEDCJBAFH\\n\"\nassert solution(\"Hello, World!\\n\") == \"Hello World Hello World Hello World\\n\"\nassert solution(\"A\\nB\\nC\\n\") == \"A B C A B C A B\\n\"\nassert solution(\"123456789\\n987654321\\n\") == \"123456789 987654321 123456789 987654321 123456789 987654321\\n\"\nassert solution(\"123\\n123\\n123\\n123\\n123\\n\") == \"123 123 123 123 123\\n\"\nassert solution(\"0123456789\\n9876543210\\n\") == \"0123456789 9876543210 0123456789 9876543210 0123456789 9876543210\\n\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\", \"Test case failed\"\nassert solution(\"BIGEDCJFAH\") == \"In Pre Post In In Pre\", \"Test case failed\"\nassert solution(\"BIGEDCJFAH\") == \"In Pre Post In In Pre\", \"Test case failed\"\nassert solution(\"BIGEDCJFAH\") == \"In Pre Post In In Pre\", \"Test case failed\"\nassert solution(\"IGEDCJBAFH\") == \"In Pre Post In In Pre\", \"Test case failed\"\nassert solution(\"IGEDCJBAFH\") == \"In Pre Post In In Pre\", \"Test case failed\"\nassert solution(\"IGEDCJBAFH\") == \"In Pre Post In In Pre\", \"Test case failed\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\", \"The test case failed\"\nassert solution(\"BIGEDCJFAH\") == \"In Pre Post In Pre Post\", \"The test case failed\"\nassert solution(\"BIGEDCJFAH\") == \"In Pre Post In Pre Post\", \"The test case failed\"\n\nsolution = lambda s: \" \".join(sorted(set(s), key=lambda x: (x.count(i), i) for i in \"PrePostInPre\")))\nassert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\", \"The test case failed\"\nassert solution(\"BIGEDCJFAH\") == \"In Pre Post In Pre Post\", \"The test case failed\"\nassert solution(\"BIGEDCJFAH\") == \"In Pre Post In Pre Post\", \"The test case failed\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\", \"Test case 1 failed: Incorrect preorder print.\"\nassert solution(\"BIGEDCJFAH\") == \"Pre Post In Pre Post In Pre\", \"Test case 2 failed: Incorrect inorder print.\"\nassert solution(\"BIGEDCJFAH\") == \"Pre Post In Pre Post In Pre\", \"Test case 3 failed: Incorrect postorder print.\"\nassert solution(\"def solution(stdin: str) -> str:\\n    pass\") == \"Pre Post In Post In Pre\", \"Test case 4 failed: Incorrect preorder print.\"\nassert solution(\"def solution(stdin: str) -> str:\\n    pass\") == \"Pre Post In Post In Pre\", \"Test case 5 failed: Incorrect inorder print.\"\nassert solution(\"def solution(stdin: str) -> str:\\n    pass\") == \"Pre Post In Post In Pre\", \"Test case 6 failed: Incorrect postorder print.\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"HFBJCDEGIA\"\nassert solution(\"BIGEDCJFAH\") == \"IGEDCJBAFH\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('HFBIGEDCJA\\nBIGEDCJFAH\\nBIGEDCJFAH') == 'Pre Post In Post In Pre\\nHFBJCDEGIA\\nBIGEDCJFAH\\nIGEDCJBAFH'\nassert solution('AAPPBBBBB') == 'In Pre Post Pre In In Pre Post'\nassert solution('DCHFBBFGFDCBDFCBAGC') == 'Post In Post In Pre In Post In Pre In Post In Post In Pre Post In Post In Pre Post In Post In Pre'"
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"In In Pre Post Post In In Pre\", \"Test 1\"\nassert solution(\"BIGEDCJFAH\") == \"In In Pre Post In Post In Pre In In In Pre\", \"Test 2\"\nassert solution(\"BIGEDCJFAH\") == \"In In Pre Post In Post In Pre In In In Pre\", \"Test 3\""
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    2\n    2\n    10 0\n    3 1 1\n    1\n    \"\"\"\n) == \"10\\n\""
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"10\\n\"\n"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\") == 10\nassert solution(\"5\\n1\\n0\\n0\\n0\\n1\") == 1\nassert solution(\"5\\n2\\n3\\n4\\n5\\n0\") == 1\nassert solution(\"5\\n1\\n1\\n0\\n1\\n0\") == 1\nassert solution(\"5\\n2\\n2\\n1\\n1\\n0\") == 2\nassert solution(\"5\\n2\\n3\\n2\\n3\\n0\") == 2"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(None) == \"Error: Invalid input\"\nsolution(None)"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"10\\n\""
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"10\", \"The solution is incorrect.\""
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 10\n"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == '''\n"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\") == \"10\\n\\n\"\n"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n\") == \"10\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '10000.00'\n"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    2\n    0 0 100 100\n    30 30 60 60\n''') == '10000.00'\nassert solution('''\n    2\n    10 10 20 20\n    30 30 40 40\n''') == '25000.00'\nassert solution('''\n    2\n    1000 1000 2000 2000\n    3000 3000 4000 4000\n''') == '5000000.00'\nassert solution('''\n    2\n    0 0 100 100\n    30 30 60 60\n    0 0 100 100\n    30 30 60 60\n''') == '10000.00'\nassert solution('''\n    2\n    10 10 20 20\n    30 30 40 40\n    10 10 20 20\n    30 30 40 40\n''') == '25000.00'\nassert solution('''\n    2\n    1000 1000 2000 2000\n    3000 3000 4000 4000\n    1000 1000 2000 2000\n    3000 3000 4000 4000\n''') == '5000000.00'"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"10000.00\""
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '10000.00'"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 10000.00, \"Your solution is incorrect.\""
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n0 0 100 100\\n30 30 60 60') == '10000.00'"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '10000.00'"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0 100 100\\n30 30 60 60\") == \"10000.00\""
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"10000.00\""
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 10000.00"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test failed with input {input()}, expected output {expected_output}\""
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 3\\n1 3\\n4 5\\n2 4\\n') == 5\nassert solution('1 2\\n3 4\\n5 6\\n7 8\\n') == 1"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 3\\n4 5\\n2 4\") == \"5\"\n"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n1 3\\n4 5\\n2 4\") == \"5\"\nprint(\"Test passed.\")"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == expected_output, f\"Test case failed: {input_data}, expected output: {expected_output}\"\n"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 5\n"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 3\\n4 5\\n2 4\") == 5\nprint(solution(\"5 3\\n1 3\\n4 5\\n2 4\"))"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"5 3\\n1 3\\n4 5\\n2 4\\n\") == \"5\\n\"\n\nimport math"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n1 3\\n4 5\\n2 4\") == \"5\\n\"\nassert solution(\"1 1\\n2 3\\n4 5\\n3 4\") == \"2\\n\"\nassert solution(\"5 1\\n1 3\\n2 3\\n3 4\\n4 5\\n5 4\") == \"2\\n\"\nassert solution(\"5 5\\n1 3\\n2 4\\n3 5\\n4 6\\n5 7\\n6 8\\n7 9\\n8 10\\n9 11\\n10 12\\n11 13\\n12 14\\n13 15\\n14 16\\n15 17\\n16 18\\n17 19\\n18 20\\n19 21\\n20 22\\n21 23\\n22 24\\n23 25\\n24 26\\n25 27\\n26 28\\n27 29\\n28 30\\n29 31\\n30 32\\n31 33\\n32 34\\n33 35\\n34 36\\n35 37\\n36 38\\n37 39\\n38 40\\n39 41\\n40 42\\n41 43\\n42 44\\n43 45\\n44 46\\n45 47\\n46 48\\n47 49\\n48 50\\n49 51\\n50 52\\n51 53\\n52 54\\n53 55\\n54 56\\n55 57\\n56 58\\n57 59\\n58 60\\n59 61\\n60 62\\n61 63\\n62 64\\n63 65\\n64 66\\n65 67\\n66 68\\n67 69\\n68 70\\n69 71\\n70 72\\n71 73\\n72 74\\n73 75\\n74 76\\n75 77\\n76 78\\n77 79\\n78 80\\n79 81\\n80 82\\n81 83\\n82 84\\n83 85\\n84 86\\n85 87\\n86 88\\n87 89\\n88 90\\n89 91\\n90 92\\n91 93\\n92 94\\n93 95\\n94 96\\n95 97\\n96 98\\n97 99\\n98 100\\n99 101\\n100 102\\n101 103\\n102 104\\n103 105\\n104 106\\n105 107\\n106 108\\n107 109\\n108 110\\n109 111\\n110 112\\n111 113\\n112 114\\n113 115\\n114 116\\n115 117\\n116 118\\n117 119\\n118 120\\n119 121\\n120 122\\n121 123\\n122 124\\n123 125\\n124 126\\n125 127\\n126 128\\"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n1 3\\n4 5\\n2 4\") == 5"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\""
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == 2095\n"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 2095"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('11 13 17\\n5 2 4\\n0 0 0') == '2095'"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2095\"\n"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2095\", \"Please implement the solution function correctly\"\n"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n11 13 17\n5 2 4\n0 0 0\n''') == '2095'"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\n"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    11 13 17\n    \"\"\"\n) == \"2095\""
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\n\nfrom typing import List"
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str: pass\"\nassert solution(\"print 'Hello, World!';\") == \"Hello, World!\\n\"\nassert solution(\"print 5 * 5;\") == \"25\\n\"\nassert solution(\"print 'Hello, World!';\") == \"Hello, World!\\n\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'My name is Gon\\nMy name is Gon'"
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\n''') == \"\"\"My name is Gon\nMy name is Gon\n"
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('var a = \"Gon\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.') == 'My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str: pass\\n'"
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"print `Hello, World!`;\") == \"Hello, World!\\n\"\nassert solution(\"print true; print false;\") == \"true\\nfalse\\n\"\nassert solution(\"var x = 10; var y = 20; var z = x + y; print z; print x; print y;\") == \"30\\n10\\n20\\n\"\nassert solution(\"print false; print true; print false; print true;\") == \"false\\ntrue\\nfalse\\ntrue\\n\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"var a = 'Gon'; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"print 'Hello, world!'; end.\") == \"Hello, world!\\n\"\nassert solution(\"print 42; end.\") == \"42\\n\"\nassert solution(\"print 42.5; end.\") == \"42.5\\n\"\nassert solution(\"print true; end.\") == \"True\\n\"\nassert solution(\"print false; end.\") == \"False\\n\"\nassert solution(\"print null; end.\") == \"null\\n\"\nassert solution(\"print []; end.\") == \"[]\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") == \"{}\\n\"\nassert solution(\"print {}; end.\") =="
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''var a = \"Gon\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.''') == 'My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\npass\\n'"
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str: pass\\n\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str: pass\\n\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str: pass\\n\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('test_input.txt').read()) == ['fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0', 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill "
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 'impossible'\nassert solution(2) == 'impossible'\nassert solution(3) == 'impossible'\nassert solution(4) == 'impossible'"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case 1\\nassert solution().strip() == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\n\\n# Test case 2\\nassert solution().strip() == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case 3\\nassert solution().strip() == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case 4\\nassert solution().strip() == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case 5\\nassert solution().strip() == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case 6\\nassert solution().strip() == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case 7\\nassert solution().strip() == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case 8\\nassert solution().strip() == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case 9\\nassert solution().strip() == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case 10\\nassert solution().strip() == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case 11\\nassert solution().strip() == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\n"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"transfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\"\n\nfrom typing import List"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"test_input.txt\", \"r\")) == \"impossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n7 8\\n10\\n\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n7 8\\n10\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"3\\n20 50\\n10\") == \"fill 1\\ntransfer 1 1\\ntransfer 1 0\\ndiscard 0\\nfill 1\\ntransfer 1 1\\ntransfer 1 0\\ndiscard 0\\nfill 1\\ntransfer 1 0\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"5\\n10 20\\n30\") == \"fill 0\\ntransfer 0 1\\ntransfer 0 0\\ndiscard 1\\nfill 0\\ntransfer 0 1\\ntransfer 0 0\\ndiscard 1\\nfill 0\\ntransfer 0 0\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"6\\n100000\\n10\") == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n2\n7 8\n10\n\"\"\"\n) == \"\"\"\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\n"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == # Enter your solution here"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 4 3\") == \"27\""
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 27, \"Test case 1 incorrect.\""
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"27\\n\", \"Testcase not passed\"\n"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 4 3\") == \"27\", \"The maximum amount of damage you can cause to the enemy is incorrect.\"\n"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"27\""
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10 4 3') == '27'"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10 4 3') == '27'\nassert solution('10 100 3') == '100'\nassert solution('5 3 2') == '9'\nassert solution('7 5 4') == '19'\nassert solution('9 2 3') == '27'\nassert solution('10 5 1') == '55'"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10 4 3') == '27'\nassert solution('10 10 3') == '150'\nassert solution('5 6 7') == '36'\nassert solution('10 1 5') == '30'"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test failed: {input()} should return {output}, but got {solution(input())}\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n\") == \"3\\n-1\\n4\\n\"\n"
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\"\"\") == \"3\\n-1\\n4\"\nassert solution(\"\"\"4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\"\"\") == \"3\\n-1\\n4\"\nassert solution(\"\"\"4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\"\"\") == \"3\\n-1\\n4\"\nassert solution(\"\"\"4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\"\"\") == \"3\\n-1\\n4\"\nassert solution(\"\"\"4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\"\"\") == \"3\\n-1\\n4\"\nassert solution(\"\"\"4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\"\"\") == \"3\\n-1\\n4\"\nassert solution(\"\"\"4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\"\"\") == \"3\\n-1\\n4\"\nassert solution(\"\"\"4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\"\"\") == \"3\\n-1\\n4\"\nassert solution(\"\"\"4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\"\"\") == \"3\\n-1\\n4\"\nassert solution(\"\"\"4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\"\"\") == \"3\\n-1\\n4\"\nassert solution(\"\"\"4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\"\"\") == \"3\\n-1\\n4\"\nassert solution(\"\"\"4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\"\"\") == \"3\\n-1\\n4\"\nassert solution(\"\"\"4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\"\"\") == \"3\\n-1\\n4\"\nassert solution(\"\"\"4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\"\"\") == \"3\\n-1\\n4\"\nassert solution(\"\"\"4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\"\"\") == \"3\\n-1\\n4\"\nassert solution(\"\"\"4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\"\"\") == \"3\\n-1\\n4\"\nassert solution(\"\"\"4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\"\"\") == \"3\\n-1\\n4\"\nassert solution(\"\"\"4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\"\"\") == \"3\\n-1\\n4\"\nassert solution(\"\"\"4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\"\"\") == \"3\\n-1\\n4\"\nassert solution(\"\"\"4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\"\"\") == \"3\\n-1\\n4\"\nassert solution(\"\"\"4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\"\"\") == \"3\\n-1\\n4\"\nassert solution(\"\"\"4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\"\"\") == \"3\\"
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\\n\"\nassert solution(\"10 5 5\\n1 3 5\\n3 2 4\\n2 1 5\\n2 4 6\\n1 5 3\\n1 4 6\") == \"5\\n-1\\n13\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n\") == \"3\\n-1\\n4\\n\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Hey! I have an awesome task with chameleons, $5$-th task for Saturday's competition.\") == \"3\\n-1\\n4\\n\"\nassert solution(\"Go ahead\u2026\") == \"-1\\n\"\nassert solution(\"That\u2019s too difficult, I have an easier one, they won\u2019t even solve that one.\") == \"-1\\n\"\nassert solution(\"You are given an array of $N$ integers from the interval $[1, K]$ and $M$ queries. The first type of query requires you to change a number in the array to a different value, and the second type of query requires you to determine the length of the shortest contiguous subarray of the current array that contains all numbers from $1$ to $K$.\") == \"3\\n-1\\n4\\n\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n\") == [\"3\", \"-1\", \"4\"]"
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Hey! I have an awesome task with chameleons, $5$-th task for Saturday\u2019s competition.\\nGo ahead...\\nThat\u2019s too difficult, I have an easier one, they won\u2019t even solve that one.\\nYou are given an array of $N$ integers from the interval $[1, K]$. You need to process $M$ queries. The first type of query requires you to change a number in the array to a different value, and the second type of query requires you to determine the length of the shortest contiguous subarray of the current array that contains all numbers from $1$ to $K$.\") == 3\nassert solution(\"Go ahead\u2026\\nThat\u2019s too difficult, I have an easier one, they won\u2019t even solve that one.\\nYou are given an array of $N$ integers from the interval $[1, K]$. You need to process $M$ queries. The first type of query requires you to change a number in the array to a different value, and the second type of query requires you to determine the length of the shortest contiguous subarray of the current array that contains all numbers from $1$ to $K$.\") == -1\nassert solution(\"Hey! I have an awesome task with chameleons, $5$-th task for Saturday\u2019s competition.\\nGo ahead...\\nThat\u2019s too difficult, I have an easier one, they won\u2019t even solve that one.\\nYou are given an array of $N$ integers from the interval $[1, K]$. You need to process $M$ queries. The first type of query requires you to change a number in the array to a different value, and the second type of query requires you to determine the length of the shortest contiguous subarray of the current array that contains all numbers from $1$ to $K$.\\n1 3 5\") == 3\nassert solution(\"1 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n\") == -1\nassert solution(\"1 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n\") == -1\nassert solution(\"1 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n\") == -1\nassert solution(\"1 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n\") == -1\nassert solution(\"1 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n\") == -1\nassert solution(\"1 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n\") == -1\nassert solution(\"1 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n\") == -1\nassert solution(\"1 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n\") == -1\nassert solution(\"1 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n\") == -1\nassert solution(\"1 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n\") == -1\nassert solution(\"1 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n\") == -1\nassert solution(\"1 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n\") == -1\nassert solution(\"1 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n\") == -1\nassert solution(\"1 "
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n\") == \"3\\n-1\\n4\\n\"\nassert solution(\"4 10 5\\n1 1 1\\n2 3 1 2\\n1 1 2\\n1 1 3\\n1 1 4\\n\") == \"4\\n-1\\n5\\n\"\nassert solution(\"10 1 1\\n1\\n2\\n3\\n\") == \"-1\\n\"\nassert solution(\"1 5\\n2 3\\n4 5\\n6 7\\n8 9\\n\") == \"4\\n1\\n2\\n3\\n\"\n"
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\"\nassert solution(\"1 2 3 4 5\\n4 4 4 4 4\") == \"4\\n-1\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '533.3333333333', 'Testcase 1 failed'"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\\n\"\n"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1000 3000 1000') == '533.3333333333'\nassert solution('1000 0 1000') == '0'\nassert solution('1000 1000 1000') == '1000'\nassert solution('0 0 0') == '0'\nassert solution('1000 1000000000') == '1000000000'\nassert solution('1000000000 0 0') == '0'\nassert solution('1000000000 1000 1000') == '1000000000'"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1000 3000 1000') == '533.3333333333\\n', 'The output is incorrect.'\n"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"533.3333333333\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\\n\", \"Test failed\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\\n\"\n"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n1000\\n3000\\n1000\\n\") == \"533.3333333333\"\nassert solution(\"1\\n1000\\n3000\\n1000\\n\") == \"533.3333333333\"\nassert solution(\"1\\n1000\\n3000\\n1000\\n\") == \"533.3333333333\"\nassert solution(\"1\\n1000\\n3000\\n1000\\n\") == \"533.3333333333\"\nassert solution(\"1\\n1000\\n3000\\n1000\\n\") == \"533.3333333333\"\nassert solution(\"1\\n1000\\n3000\\n1000\\n\") == \"533.3333333333\"\nassert solution(\"1\\n1000\\n3000\\n1000\\n\") == \"533.3333333333\"\nassert solution(\"1\\n1000\\n3000\\n1000\\n\") == \"533.3333333333\"\nassert solution(\"1\\n1000\\n3000\\n1000\\n\") == \"533.3333333333\"\nassert solution(\"1\\n1000\\n3000\\n1000\\n\") == \"533.3333333333\"\nassert solution(\"1\\n1000\\n3000\\n1000\\n\") == \"533.3333333333\"\nassert solution(\"1\\n1000\\n3000\\n1000\\n\") == \"533.3333333333\"\nassert solution(\"1\\n1000\\n3000\\n1000\\n\") == \"533.3333333333\"\nassert solution(\"1\\n1000\\n3000\\n1000\\n\") == \"533.3333333333\"\nassert solution(\"1\\n1000\\n3000\\n1000\\n\") == \"533.3333333333\"\nassert solution(\"1\\n1000\\n3000\\n1000\\n\") == \"533.3333333333\"\nassert solution(\"1\\n1000\\n3000\\n1000\\n\") == \"533.3333333333\"\nassert solution(\"1\\n1000\\n3000\\n1000\\n\") == \"533.3333333333\"\nassert solution(\"1\\n1000\\n3000\\n1000\\n\") == \"533.3333333333\"\nassert solution(\"1\\n1000\\n3000\\n1000\\n\") == \"533.3333333333\"\nassert solution(\"1\\n1000\\n3000\\n1000\\n\") == \"533.3333333333\"\nassert solution(\"1\\n1000\\n3000\\n1000\\n\") == \"533.3333333333\"\nassert solution(\"1\\n1000\\n3000\\n1000\\n\") == \"533.3333333333\"\nassert solution(\"1\\n1000\\n3000\\n1000\\n\") == \"533."
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\", \"Test failed\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1000 3000 1000') == '533.3333333333\\n', \"The given solution is incorrect.\"\n"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == \"14.14\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 0\\n10 0\\n10 10') == '14.14'"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '14.14'\n"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\") == \"14.14\"\n"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 14.14, \"Test failed\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\") == 14.14\n"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\") == 14.14\nassert solution(\"2 0\\n10 0\\n10 10\") == 14.14"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"14.14\\n\", \"Your dog Spot is let loose in the park. Well, relatively loose \u2013 he is tied to a post with a leash, limiting his movements. Spread around the park are various squeaky toys and other dog paraphernalia, which Spot happily goes after when he sees them. When he gets to a toy he will chew at it for a while until it has become defunct, at which point he will go after the next toy, which looks much squeakier.\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"The solution is {solution(input())} instead of {expected}\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 0\\n10 0\\n10 10') == 14.14, \"Incorrect output: {}\".format(solution('2 0\\n10 0\\n10 10'))"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457\") == \"123457 0\\n0 2\\n123458 1\""
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"123457 0\\n0 2\\n123458 1\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('taller_enterprises_problem_2.py')) == '123457 0\\n0 2\\n123458 1'\nprint('All test cases passed!')"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_str) == output_str, f\"Input: {input_str}\\nOutput: {output_str}\" for input_str, output_str in zip(example_input, example_output)"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"123457 0\\n0 2\\n123458 1\""
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"1\\n\""
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"123457 0\\n0 2\\n123458 1\"\n\nfrom typing import List"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457\\n') == '123457 0\\n0 2\\n123458 1'"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457') == '123457 0\\n0 2\\n123458 1'"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457\") == \"123457 0\\n0 2\\n123458 1\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"90\", \"Please provide the correct input\""
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n3 5 10 2 5\\n2 4 5 1 3') == '90'"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 90, \"The solution is incorrect.\""
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n3 5 10 2 5\\n2 4 5 1 3') == 90, \"Expected output: 90, but got: {}\".format(solution('5\\n3 5 10 2 5\\n2 4 5 1 3'))"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n3 5 10 2 5\\n2 4 5 1 3\\n') == '90\\n'"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\\n\") == \"90\"\n"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''5\n3 5 10 2 5''') == '90'"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == 90, \"Incorrect output\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == \"90\\n\"\nassert solution(\"10\\n2 2 3 4 5\\n1 1 2 2 1\") == \"90\\n\"\nassert solution(\"5\\n2 2 3 4 5\\n3 3 3 3 2\") == \"120\\n\"\nassert solution(\"3\\n2 2 3 4 5\\n4 4 4 4 4\") == \"120\\n\"\nassert solution(\"6\\n1 1 2 2 1\\n1 1 2 2 1\") == \"60\\n\""
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"90\""
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Test failed for {input()}, expected {output}, got {solution(input())}\""
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 10\\n1 2 6\\n0 4 3\\n0 8 2\") == \"6.000000\\n\""
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '6.000000', \"Incorrect output. Expected '6.000000', but got '{}'\".format(solution())\nprint(\"Test Passed\")"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(samples) == expected, f\"Sample Input: {samples}\\nSample Output: {expected}\""
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''3 10\n1 2 6\n0 4 3\n0 8 2''') == '6.000000\\n'\n\nsolution('''3 10\n1 2 6\n0 4 3\n0 8 2''') # Solution code"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 10\\n1 2 6\\n0 4 3\\n0 8 2\") == \"6.000000\""
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == \"6.000000\"\n"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 10\\n1 2 6\\n0 4 3\\n0 8 2\\n') == '6.000000'\n"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 10\\n1 2 6\\n0 4 3\\n0 8 2\") == \"6.000000\"\n"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 2 6\\n0 4 3\\n0 8 2\\n3') == '6.000000'"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n0 0\\n0 0\\n1. \\n.. \\n0\\n') == '1. \\n.. \\n0\\n'\nassert solution('4\\n0 0\\n0 0\\n1. \\n.. \\n0\\n') == '1. \\n.. \\n0\\n'\nassert solution('10\\n0 0\\n0 0\\n1. \\n.. \\n0\\n') == '1. \\n.. \\n0\\n'\nassert solution('400\\n0 0\\n0 0\\n1. \\n.. \\n0\\n') == '1. \\n.. \\n0\\n'\n"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n0 0\\n0 0\\n1.\\n....\\n0') == '1.\\n....\\n0'\nassert solution('2\\n0 0\\n0 0\\n1.\\n....\\n0') == '1.\\n....\\n0'\nassert solution('2\\n0 0\\n0 0\\n1.\\n....\\n0') == '1.\\n....\\n0'\nassert solution('2\\n0 0\\n0 0\\n1.\\n....\\n0') == '1.\\n....\\n0'\n\nfrom typing import List"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '1\\n..'"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\"\n1.\n..\n0\n\"\"\""
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\nt') == '1.\\n..'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\nt\\nt') == '1.\\n..'"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\") == \"1.\\n..\\n0\\n\", \"The output is incorrect.\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\") == \"1.\\n..\\n0\\n1\\n\", \"The output is incorrect.\"\nassert solution(\"10\\n0 0\\n1 0\\n1 1\\n2 0\\n2 1\\n3 0\\n4 0\\n5 0\\n6 0\\n7 0\\n8 0\\n9 0\\n10 0\") == \"1.1.1.\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n.1.1.\\n..11..\\n."
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n    2\n    0 0\n    0 0\n    1.\n    ..\n    0\n''') == '''\n    1.\n    ..\n"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n..1\\n1..\\n...1\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n..1\\n1..\\n...1\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n..1\\n1..\\n...1\\n\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\\ndef solution(stdin: str) -> str:\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 2\\n2 3\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 2\\n2 4\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(1) == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(2) == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test Case 1 failed\"\n\nassert solution(stdin) == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test Case 2 failed\"\n\nassert solution(stdin) == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test Case 3 failed\"\n\nassert solution(stdin) == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test Case 4 failed\"\n\nassert solution(stdin) == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test Case 5 failed\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\\n') == '1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\\n') == '1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\na\\nbc\\nc\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\\n') == '1\\n1\\ndef'"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\na\\nbc\\nc\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'YES\\n'"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"2 2 2 2\") == \"NO\"\nassert solution(\"1 1 2 1\") == \"YES\"\nassert solution(\"1 1 1 2\") == \"NO\"\nassert solution(\"1 1 1 10\") == \"NO\"\nassert solution(\"3 3 3 1\") == \"NO\"\nassert solution(\"1 2 3 1\") == \"YES\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"YES\", \"Test Failed\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 'YES'"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == \"YES\"\n"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"2 1 1 1\") == \"YES\"\nassert solution(\"1 2 1 1\") == \"NO\"\nassert solution(\"1 1 2 1\") == \"NO\"\nassert solution(\"1 1 1 2\") == \"NO\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('example.in', 'r')) == 'YES\\n'"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 'YES', 'Expected YES, but got {}'.format(solution(input()))"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"YES\"\nassert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"2 1 1 1\") == \"NO\"\nassert solution(\"3 2 1 1\") == \"YES\"\nassert solution(\"1 2 1 1\") == \"YES\"\nassert solution(\"1 1 2 1\") == \"YES\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 1 1 1') == 'YES'"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == 80.5696000000"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 80.57  # your answer\n"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 80.57"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"80.57\""
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(data) == output\n"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n# Write your code here.'"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\") == \"80.5696000000\" # correct output\n"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: {solution(input())}!= {expected_output}\""
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(None) == \"0.0000000000\" # expected output: 0.0000000000\nassert solution('2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == \"80.57\" # expected output: 80.57\n"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\\n\", \"Please fix the problem and write a test case.\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == 2, \"Your solution is incorrect\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 0 0 1 1 1 0 0 1') == '2'\nassert solution('10 0 0 0 0 0 1 0 0') == '3'\nassert solution('5 1 1 1 0 1 0 0 0') == '2'\nassert solution('1 1 0 0 0 0 0 0 0') == '1'"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '2', \"Your implementation is incorrect\"\n"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 0 0 1 1 1 0 0 1') == '2'\n"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 0 0 1 1 1 0 0 1') == '2', 'Test case 1 failed'\n\nassert solution('4 0 0 1 1 1 0 0 0') == '0', 'Test case 2 failed'\n\nassert solution('4 0 0 1 1 1 0 0 -1') == '1', 'Test case 3 failed'\n\nassert solution('4 0 0 1 1 1 0 -1 0') == '1', 'Test case 4 failed'\n\nassert solution('4 0 0 1 1 1 0 0 0') == '0', 'Test case 5 failed'"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\"\n"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\\n\"\nassert solution(\"6 0 0 1 1 1 0 0 1\") == \"3\\n\"\nassert solution(\"2 0 0 1 1 1 0 0 1\") == \"1\\n\"\nassert solution(\"2 0 0 1 1 1 0 0 2\") == \"1\\n\"\nassert solution(\"2 0 0 1 1 1 0 0 3\") == \"2\\n\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\\n\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n\") == 1400\nassert solution(\"1 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n\") == 0\nassert solution(\"2 2 1\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n\") == \"impossible\"\nassert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n400 0 400\\n1400 0 400\\n\") == \"impossible\"\nassert solution(\"2 2 1\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n400 0 400\\n1400 0 400\\n500 0 400\\n\") == \"impossible\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output, f\"Test case failed: {solution(stdin)}!= {expected_output}\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    3 2 3\n    0 0 400\n    1000 0 400\n    2000 0 400\n    300 0 150\n    1300 0 150\n    \"\"\"\n) == \"1400\"\n\nassert solution(\n    \"\"\"\n    2 3 4\n    0 0 200\n    2000 0 200\n    400 0 200\n    400 0 300\n    2000 0 300\n    \"\"\"\n) == \"impossible\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1400\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1400\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1400\\n\"\n"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150') == '1400'\nassert solution('3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n') == 'impossible'\nassert solution('3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n4000 0 400') == 'impossible'\nassert solution('3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n-1 0 150') == 'impossible'"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150') == '1400'"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"1400\"\nassert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"impossible\"\nassert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1000 0 1000\") == \"1400\"\nassert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n1000 0 1000\") == \"impossible\"\nassert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n1000 0 1000\\n1000 0 1000\") == \"1400\"\nassert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n1000 0 1000\\n1000 0 1000\\n1000 0 1000\") == \"impossible\""
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_data) == output_data, f\"Solution failed: expected {output_data}, got {solution(input_data)}\""
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Incorrect output for solution\""
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3907\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbrussels amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbrussels helsinki\\n\") == \"3907\""
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 3907, \"Incorrect solution\""
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"10 15\\nstockholm\\namsterdam\\n\") == \"0\"\nassert solution(\"10 15\\nstockholm\\namsterdam\\n\\n\\n\\n\") == \"0\"\nassert solution(\"10 15\\nstockholm\\namsterdam\\n\\n\\n\\n\") == \"0\""
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbrussels amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbrussels helsinki') == '3907'\n"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3907\""
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbruessls amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbruessls helsinki\") == \"3907\\n\"\nassert solution(\"10 15\\nsaint petersburg\\nvolgograd\\nwolfsburg\\nberlin\\nberlin volgograd 415\\nberlin wolfsburg 275\\nberlin volgograd 1005\\nberlin wolfsburg 275\\nberlin volgograd 1005\\nberlin wolfsburg 275\\nberlin volgograd 1005\\nberlin wolfsburg 275\\nberlin volgograd 1005\\nberlin wolfsburg 275\\nberlin volgograd 1005\\nberlin wolfsburg 275\\nberlin volgograd 1005\\nberlin wolfsburg 275\\nberlin volgograd 1005\\nberlin wolfsburg 275\\nberlin volgograd 1005\\nberlin wolfsburg 275\\nberlin volgograd 1005\\nberlin wolfsburg 275\\nberlin volgograd 1005\\nberlin wolfsburg 275\\nberlin volgograd 1005\\nberlin wolfsburg 275\\nberlin volgograd 1005\\nberlin wolfsburg 275\\nberlin volgograd 1005\\nberlin wolfsburg 275\\nberlin volgograd 1005\\nberlin wolfsburg 275\\nberlin volgograd 1005\\nberlin wolfsburg 275\\nberlin volgograd 1005\\nberlin wolfsburg 275\\nberlin volgograd 1005\\nberlin wolfsburg 275\\nberlin volgograd 1005\\nberlin wolfsburg 275\\nberlin volgograd 1005\\nberlin wolfsburg 275\\nberlin volgograd 1005\\nberlin wolfsburg 275\\nberlin volgograd 1005\\nberlin wolfsburg 275\\nberlin volgograd 1005\\nberlin wolfsburg 275\\nberlin volgograd 1005\\nberlin wolfsburg 275\\nberlin volgograd 1005\\nberlin wolfsburg 275\\nberlin volgograd 1005\\nberlin wolfsburg 275\\nberlin volgograd 1005\\nberlin wolfsburg 275\\nberlin volgograd 1005\\nberlin wolfsburg 275\\nberlin volgograd 1005\\nberlin wolfsburg 275\\nberlin volgograd 1005\\nberlin wolfsburg 275\\nberlin vol"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"stockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbruzsels amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbrussels helsinki\") == \"3907\""
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\"\n"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1') == '2\\n1\\n2\\n1\\n'\nassert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\\n5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1') == '2\\n1\\n2\\n1\\n'\nassert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\\n5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\\n5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\\n5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\\n5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\\n') == '2\\n1\\n2\\n1\\n'"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 'Solution is correct'"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\""
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\""
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1') == '2\\n1\\n2\\n1'"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\"\nassert solution(\"5 5\\n5 5\\n5 5\\n5 5\\n5 5\") == \"5\\n4\\n3\\n2\\n1\"\nassert solution(\"1 5\\n5 10\") == \"1\\n5\\n10\"\nassert solution(\"1 1\\n5 5\") == \"1\\n5\\n5\"\nassert solution(\"1 5\\n5 10\\n5 5\\n5 10\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 "
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\\n\") == \"2\\n1\\n2\\n1\\n\""
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\\n1\\n2\\n1\\n\""
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"00010\\n\"\n\nclass Character:\n    def __init__(self, features):\n        self.features = features\n\n    def get_features(self, player_index):\n        return self.features[player_index]\n\n    def get_total_features(self):\n        return len(self.features)\n\n    def get_subset_features(self):\n        return [feature for feature, value in self.features if value]\n\n    def get_total_subset_features(self):\n        return len(self.get_subset_features())\n\n    def get_total_features_and_subset_features(self):\n        return self.get_total_features() + self.get_total_subset_features()\n\n    def get_similarity(self, other_character):\n        total_features = self.get_total_features() + other_character.get_total_features()\n        total_subset_features = self.get_total_subset_features() + other_character.get_total_subset_features()\n        similarity = 0\n        for i in range(total_features):\n            similarity += self.get_features(i) * other_character.get_features(i)\n        for i in range(total_subset_features):\n            similarity += self.get_subset_features()[i] * other_character.get_subset_features()[i]\n        return similarity"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"00010\\n\""
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '00010'"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5\\n01001\\n11100\\n10111\") == \"00010\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Expected '{expected}', got '{solution(input())}'\"\n"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5\\n01001\\n11100\\n10111\\n\") == \"00010\""
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 5\\n01001\\n11100\\n10111') == '00010\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 5\\n01001\\n11100\\n10111') == '00010\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 5\\n01001\\n11100\\n10111') == '00010'"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='3 5\\n01001\\n11100\\n10111') == '00010\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1\\n6 2\\n0 4\\n6 12\\n') == 'possible'"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 2\\n0 4\\n6 12\") == \"possible\"\nprint(\"Possible\")"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 2\\n0 4\\n6 12\") == \"possible\"\n"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\""
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6 2\\n0 4\\n6 12\\n') == 'possible'"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1\\n6 2\\n0 4\\n6 12') == 'possible'"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"possible\""
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n6 2\\n0 4\\n6 12\") == \"possible\""
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n6 2\\n0 4\\n6 12\") == \"possible\""
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1\\n6 2\\n0 4\\n6 12\\n') == 'possible\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    5\n    5 0 1\n    10 0 1\n    0 5 1\n    0 -5 1\n''') == '2\\n'"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\\n\""
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '2\\ndef solution(stdin: str) -> str:\\n    pass\\n', \"The function should return the correct output.\""
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1') == 2\nassert solution('1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1') == 1\nassert solution('1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 1\nassert solution('1\\n-1 -1 -1\\n-1 -1 -1\\n-1 -1 -1\\n-1 -1 -1\\n-1 -1 -1') == 0\nassert solution('1\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15') == 1"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"The code is not correct.\""
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\\n\"\nassert solution(open(\"input_sample.txt\", \"r\").read()) == \"2\\n\""
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1') == '2\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1') == '2\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\\n\", solution(stdin)"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == \"2\\n\", \"Incorrect output\""
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\" # replace this with your solution\n"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n') == 'Plot Error\\n3 Just A Dream\\nYes\\nPlot Error\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"E business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"Plot Error\\n3 Just A Dream\\nYes\\nPlot Error\\n\"\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n') == \"Plot Error\\n3 Just A Dream\\nYes\\nPlot Error\\n\"\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n') == \"Plot Error\\n3 Just A Dream\\nYes\\nPlot Error\\n\"\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n') == \"Plot Error\\n3 Just A Dream\\nYes\\nPlot Error\\n\"\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n') == \"Plot Error\\n3 Just A Dream\\nYes\\nPlot Error\\n\"\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n') == \"Plot Error\\n3 Just A Dream\\nYes\\nPlot Error\\n\"\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\") == \"Plot Error\\n3 Just A Dream\\nYes\""
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"Yes\\n3 Just A Dream\\nYes\\nPlot Error\\ndef solution(stdin: str) -> str: pass\\n\"\nassert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"Yes\\n3 Just A Dream\\nYes\\nPlot Error\\ndef solution(stdin: str) -> str: pass\\n\"\nassert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"Yes\\n3 Just A Dream\\nYes\\nPlot Error\\ndef solution(stdin: str) -> str: pass\\n\"\nassert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"Yes\\n3 Just A Dream\\nYes\\nPlot Error\\ndef solution(stdin: str) -> str: pass\\n\""
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10\\n'\n'E business_as_usual\\n'\n'E bobby_dies\\n'\n'S 1 bobby_died\\n'\n'E stuff_happens\\n'\n'E jr_does_bad_things\\n'\n'S 2!bobby_dies business_as_usual\\n'\n'E it_goes_on_and_on\\n'\n'D 4\\n'\n'S 1!bobby_dies\\n'\n'S 2!bobby_dies it_goes_on_and_on\\n') == 'Plot Error\\n'\nassert solution('10\\n'\n'E business_as_usual\\n'\n'E bobby_dies\\n'\n'S 1 bobby_died\\n'\n'E stuff_happens\\n'\n'E jr_does_bad_things\\n'\n'S 2!bobby_dies business_as_usual\\n'\n'E it_goes_on_and_on\\n'\n'D 5\\n'\n'S 1!bobby_dies\\n'\n'S 2!bobby_dies it_goes_on_and_on\\n') == 'Plot Error\\n'\nassert solution('10\\n'\n'E business_as_usual\\n'\n'E bobby_dies\\n'\n'S 1 bobby_died\\n'\n'E stuff_happens\\n'\n'E jr_does_bad_things\\n'\n'S 2!bobby_dies business_as_usual\\n'\n'E it_goes_on_and_on\\n'\n'D 5\\n'\n'S 1!bobby_dies\\n'\n'S 2!bobby_dies it_goes_on_and_on\\n'\n'D 1\\n'\n'S 1!bobby_dies\\n'\n'S 2!bobby_dies it_goes_on_and_on\\n'\n'D 2\\n'\n'S 1!bobby_dies\\n'\n'S 2!bobby_dies it_goes_on_and_on\\n') == '3 Just A Dream\\n'\nassert solution('10\\n'\n'E business_as_usual\\n'\n'E bobby_dies\\n'\n'S 1 bobby_died\\n'\n'E stuff_happens\\n'\n'E jr_does_bad_things\\n'\n'S 2!bobby_dies business_as_usual\\n'\n'E it_goes_on_and_on\\n'\n'D 4\\n'\n'S 1!bobby_dies\\n'\n'S 2!bobby_dies it_goes_on_and_on\\n'\n'D 4\\n'\n'S 1!bobby_dies\\n'\n'S 2!bobby_dies it_goes_on_and_on\\n'\n'D 5\\n'\n'S 1!bobby_dies\\n'\n'S 2!bobby_dies it_goes_on_and_on\\n') == '3 Just A Dream\\n'\nassert solution('10\\n'\n'E business_as_usual\\n'\n'E bobby_dies\\n'\n'S 1 bobby_died\\n'\n'E stuff_happens\\n'\n'E jr_does_bad_things\\n'\n'S 2!bobby_dies business_as_usual\\n'\n'E it_goes_on_and_on\\n'\n'D 4\\n'\n'S 1!bobby_dies\\n'\n'S 2!bobby_dies it_goes_on_and_on\\n'\n'D 4\\n'\n'S 1!bobby_dies\\n'\n'S 2!bobby_dies it_goes_on_and_on\\n'\n'D 5\\n'\n'S 1!bobby_d"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\") == \"Plot Error\\n2 Just A Dream\\nYes\""
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n') == 'Plot Error\\n3 Just A Dream\\nYes'\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nD 5\\nE thing_happened\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nS 3!jimmy_died\\nE stuff_happens\\nE john_dies\\nS 4!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nS 5!jimmy_died\\nE stuff_happens\\nE john_dies\\nS 6!jimmy_died it_goes_on_and_on\\nD 1\\nS 7!jimmy_died\\nE stuff_happens\\nE john_dies\\nS 8!jimmy_died it_goes_on_and_on\\nS 9!jimmy_died it_goes_on_and_on\\nD 1\\nS 10!jimmy_died it_goes_on_and_on\\n') == 'Plot Error\\n5 Just A Dream\\nYes'\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nD 5\\nE thing_happened\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nS 3!jimmy_died\\nE stuff_happens\\nE john_dies\\nS 4!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nS 5!jimmy_died\\nE stuff_happens\\nE john_dies\\nS 6!jimmy_died it_goes_on_and_on\\nD 1\\nS 7!jimmy_died\\nE stuff_happens\\nE john_dies\\nS 8!jimmy_died it_goes_on_and_on\\nS 9!jimmy_died it_goes_on_and_on\\nD 1\\nS 10!jimmy_died it_goes_on_and_on\\nD 2\\nS 11!jimmy_died it_goes_on_and_on\\nS 12!jimmy_died it_goes_on_and_on\\nS 13!jimmy_died it_goes_on_and_on\\nS 14!jimmy_died it_goes_on_and_on\\nD 2\\nS 15!jimmy_died it_goes_on_and_on\\nS 16!jimmy_died it_goes_"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n\"\"\") == \"Plot Error\"\n\nassert solution(\"\"\"\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n\"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 3\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n\"\"\") == \"3 Just A Dream\"\n\nassert solution(\"\"\"\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nD 4\nS 2!bobby_dies it_goes_on_and_on\n\"\"\") == \"3 Just A Dream\"\n\nassert solution(\"\"\"\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nD 4\nS 2!bobby_dies it_goes_on_and_on\nD 5\nS 3!bobby_dies it_goes_on_and_on\n\"\"\") == \"5 Just A Dream\"\n\nassert solution(\"\"\"\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nD 4\nS 2!bobby_dies it_goes_on_and_on\nD 5\nS 3!bobby_dies it_goes_on_and_on\nD 6\nS 4!bobby_dies it_goes_on_and_on\n\"\"\") == \"5 Just A Dream\"\n\nassert solution(\"\"\"\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nD 4\nS 2!bobby_dies it_goes_on_and_on\nD 5\nS 3!bobby_dies it_goes_on_and_on\nD 6\nS 4!bobby_dies it_goes_on_and_on\nD "
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"Plot Error\""
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on') == 'Yes\\n3 Just A Dream\\nPlot Error'\n\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE plot_error\\nS 2!bobby_dies\\nE plot_error\\nD 3\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE plot_error\\nD 3\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE plot_error\\nE plot_error\\nD 2\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE plot_error\\nE plot_error\\nD 1\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE plot_error\\nE plot_error\\nD 0\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE plot_error\\nE plot_error\\nD 1\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE plot_error\\nE plot_error\\nD 2\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE plot_error\\nE plot_error\\nD 3\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE plot_error\\nE plot_error\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE plot_error\\nE plot_error\\nD 5\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE plot_error\\nE plot_error\\nD 6\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE plot_error\\nE plot_error\\nD 7\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE plot_error\\nE plot_error\\nD 8\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE plot_error\\nE plot_error\\nD 9\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE plot_error\\nE plot_error\\nD 10\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE plot_error\\nE plot_error\\nD 11\\nS 1!bobby_dies\\nS 2!bobby"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"Plot Error\\n3 Just A Dream\\nYes\\nPlot Error\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do\\neiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam\\nquis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\") == \\\n\"+------------------------+------+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+------+\"\n\nassert solution(\"5 25\\nabcde\") == \"------+\"\n\nassert solution(\"5 10\\n12345678901234567890123456789012345678901234567890\") == \"----+\"\n\nassert solution(\"5 10\\n
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\") == \"exercitation ullamco\\nlaboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\\n\"\n\nassert solution(\"10 3 5 7\\nHello, world!\") == \"ello, worl\\n\"\n\nassert solution(\"10 3 5 7\\nHello, world!\\nAnother line\") == \"ello, worl\\nAnother line\\n\""
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_str) == expected_output, f\"Solution does not match with expected output: {solution(input_str)}!= {expected_output}\""
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod\\ntempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam\\nquis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\\nconsequat Duis aute irure dolor in reprehenderit in voluptate velit esse\\ncillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non\\nproident sunt in culpa qui officia deserunt mollit anim id est laborum\") == \"\\n+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nassert solution(\"1 1 1 1\\nLorem ipsum dolor sit amet\\nconsectetur adipisicing elit\\nsed do eiusmod tempor incididunt\\nut labore et dolore magna aliqua\\nUt enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\") == \"\\n+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Solution does not match expected output. Expected: {expected}, Actual: {solution(input())}\""
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\\n') == 'exercitation ullamco    ^\\nlaboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\\n'\nassert solution('4 1 1\\nSample Text\\nAnother Sample Text\\n') == '(4 1 1)\\nSample Text\\nAnother Sample Text\\n'\nassert solution('10 5 10 5\\n1\\n2\\n3\\n4\\n5\\n') == '1\\n2\\n3\\n4\\n5\\n'\nassert solution('10 10 5 3\\n1\\n2\\n3\\n4\\n5\\n') == '(1 2 3 4)\\n'\nassert solution('10 10 5 5\\n1\\n2\\n3\\n4\\n5\\n') == '(1 2 3 4 5)\\n'\nassert solution('24 10 10 10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '(1 2 3 4 5 6 7 8 9)\\n'"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n\"24 5 8 7\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do\neiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad\nminim veniam quis nostrud exercitation ullamco laboris nisi ut\naliquip ex ea commodo consequat Duis aute irure dolor in\nreprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\npariatur Excepteur sint occaecat cupidatat non proident sunt in\nculpa qui officia deserunt mollit anim id est laborum\"\n) == \"exercitation ullamco    ^\nlaboris nisi ut aliquip    |\nex ea commodo consequat |X\nDuis aute irure dolor in    v\nexercitation ullamco    ^\nlaboris nisi ut aliquip    |\nex ea commodo consequat |X\nDuis aute irure dolor in    v\nexercitation ullamco    ^\nlaboris nisi ut aliquip    |\nex ea commodo consequat |X\nDuis aute irure dolor in    v\nexercitation ullamco    ^\nlaboris nisi ut aliquip    |\nex ea commodo consequat |X\nDuis aute irure dolor in    v\nexercitation ullamco    ^\nlaboris nisi ut aliquip    |\nex ea commodo consequat |X\nDuis aute irure dolor in    v\"\n\nprint(\"All test cases passed\")\n"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Your code is incorrect.\"\n\ninput_lines = input().split()\nassert len(input_lines) == 4\nW, H, F, N = int(input_lines[0]), int(input_lines[1]), int(input_lines[2]), int(input_lines[3])\n\nlines = [int(line) for line in input_lines[4:]]"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n24 5 8 7\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do\neiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad\nminim veniam quis nostrud exercitation ullamco laboris nisi ut\naliquip ex ea commodo consequat Duis aute irure dolor in\nreprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\npariatur Excepteur sint occaecat cupidatat non proident sunt in\nculpa qui officia deserunt mollit anim id est laborum\n''') == '''\n+------------------------+-+\n|exercitation ullamco    |^|\n|laboris nisi ut aliquip | |\n|ex ea commodo consequat |X|\n|Duis aute irure dolor in| |\n|reprehenderit in        |v|\n+------------------------+-+\n"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n4 10\n0 3 2 1\n3 0 1 3\n2 1 0 2\n1 3 2 0\n''') == 'possible'"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(b\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n\") == \"possible\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n4 10\n0 3 2 1\n3 0 1 3\n2 1 0 2\n1 3 2 0\n''') == 'possible'"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\"\n"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0') == 'possible'\nassert solution('4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n0 4 0 2') == 'impossible'"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\\n\"\nassert solution(\"5 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"impossible\\n\"\nassert solution(\"3 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\\n\"\nassert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n5 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"impossible\\n\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"possible\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1 1\\n1\\n2\") == \"1.00000000\""
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 1 1\\n1\\n2\\n') == '1.00000000'"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 1 1\\n1\\n2') == '1.00000000'\n"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1 1\\n1\\n2\\n\") == \"1.00000000\"\nassert solution(\"2 2 2\\n1\\n2\\n\") == \"1.00000000\"\nassert solution(\"2 3 3\\n1\\n2\\n\") == \"0.75000000\"\nassert solution(\"2 4 4\\n1\\n2\\n\") == \"1.00000000\"\nassert solution(\"2 5 5\\n1\\n2\\n\") == \"0.50000000\"\nassert solution(\"2 6 6\\n1\\n2\\n\") == \"1.00000000\"\nassert solution(\"2 7 7\\n1\\n2\\n\") == \"0.25000000\"\nassert solution(\"2 8 8\\n1\\n2\\n\") == \"1.00000000\"\nassert solution(\"2 9 9\\n1\\n2\\n\") == \"0.00000000\"\nassert solution(\"2 10 10\\n1\\n2\\n\") == \"1.00000000\"\nassert solution(\"2 11 11\\n1\\n2\\n\") == \"0.00000000\"\nassert solution(\"2 12 12\\n1\\n2\\n\") == \"1.00000000\"\nassert solution(\"2 13 13\\n1\\n2\\n\") == \"0.00000000\"\nassert solution(\"2 14 14\\n1\\n2\\n\") == \"1.00000000\"\nassert solution(\"2 15 15\\n1\\n2\\n\") == \"0.00000000\"\nassert solution(\"2 16 16\\n1\\n2\\n\") == \"1.00000000\"\nassert solution(\"2 17 17\\n1\\n2\\n\") == \"0.00000000\"\nassert solution(\"2 18 18\\n1\\n2\\n\") == \"1.00000000\"\nassert solution(\"2 19 19\\n1\\n2\\n\") == \"0.00000000\"\nassert solution(\"2 20 20\\n1\\n2\\n\") == \"1.00000000\"\nassert solution(\"2 21 21\\n1\\n2\\n\") == \"0.00000000\"\nassert solution(\"2 22 22\\n1\\n2\\n\") == \"1.00000000\"\nassert solution(\"2 23 23\\n1\\n2\\n\") == \"0.00000000\"\nassert solution(\"2 24 24\\n1\\n2\\n\") == \"1.00000000\"\nassert solution(\"2 25 25\\n1\\n2\\n\") == \"0.00000000\"\nassert solution(\"2 26 26\\n1\\n2\\n\") == \"1.00000000\"\nassert solution(\"2 27 27\\n1\\n2\\n\") == \"0.00000000\"\nassert solution(\"2 28 28\\n1\\n2\\n\") == \"1.00000000\"\nassert solution(\"2 29 29\\n1\\n2\\n\") == \"0.00000000\"\nassert solution(\"2 30 30\\n1\\n2\\n\") == \"1.00000000\"\nassert solution(\"2 31 31\\n1\\n2\\n\") == \"0.00000000\"\nassert solution(\"2 32 32\\n1\\n2\\n\") == \""
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"1.00000000\\n\""
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1.00000000\\n\""
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 1 1\\n1\\n2') == '1.00000000'\nprint(\"Test passed\")"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1.00000000'"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1 1\\n1\\n2\\n\") == \"1.00000000\\n\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1 1\\n1\\n2\") == \"1.00000000\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4') == '2\\n1\\n3\\n'"
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '2\\n1\\n3'"
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == '2\\n1\\n3\\n'"
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4') == '2\\n1\\n3\\n'\nassert solution('5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4') == '2\\n1\\n3\\n'"
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == expected_output"
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\\n') == '2\\n1\\n3\\n'"
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected_solution, f\"Expected solution: {expected_solution}, actual solution: {solution}\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\") == \"2\\n1\\n3\\n\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\\n\") == \"2\\n1\\n3\\n\"\nassert solution(\"10\\n1 2 3 4 5\\n2\\n1 2\\n1 3\\n1 4\\n1 5\\n\") == \"5\\n1\\n3\\n1\\n\"\nassert solution(\"10\\n1 2 3 4 5\\n2\\n1 2\\n1 3\\n1 4\\n1 5\\n\") == \"5\\n1\\n3\\n1\\n\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'Output here', 'Your solution is incorrect'"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == '''\n"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == solution(sample_output), \"The output is incorrect.\""
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 2\\n0 1\\n1 2\\n0 2') == '1\\n'\nassert solution('4 3\\n0 1\\n0 2\\n1 3\\n2 3') == '1\\n'\nassert solution('3 4\\n0 1\\n1 2\\n1 3\\n2 3') == '1\\n'\nassert solution('100 100') == 'never meet\\n'"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 2\\n0 1\\n1 2\\n0 2') == '1'\nassert solution('2 2\\n0 1\\n1 2\\n0 2') == '1'\nassert solution('3 2\\n0 1\\n1 2\\n0 2\\n3 4\\n1 4\\n2 4\\n3 5\\n4 5\\n5 5\\n6 5') == '1'"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    3 2\n    0 1\n    1 2\n    0 2\n    \"\"\"\n) == \"1\""
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_data) == output_data, f\"Test case failed: {input_data} -> {output_data}\""
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\\n\"\nprint(\"All tests pass\")"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\"\n\nfrom collections import deque\nimport random"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\\n3 4\\n1 4\\n2 4\\n3 5\\n4 5\\n5 6\") == \"10\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\\n3 4\\n1 4\\n2 4\\n3 5\\n4 5\\n5 6\\n3 7\\n4 7\\n5 7\\n6 8\\n7 8\") == \"4\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\\n3 4\\n1 4\\n2 4\\n3 5\\n4 5\\n5 6\\n3 7\\n4 7\\n5 7\\n6 8\\n7 8\\n1 9\\n2 9\\n3 9\\n4 9\\n5 9\\n6 9\\n7 9\\n8 9\\n9 10\") == \"10\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\\n3 4\\n1 4\\n2 4\\n3 5\\n4 5\\n5 6\\n3 7\\n4 7\\n5 7\\n6 8\\n7 8\\n1 9\\n2 9\\n3 9\\n4 9\\n5 9\\n6 9\\n7 9\\n8 9\\n9 10\\n3 8\\n4 8\\n5 8\\n6 8\\n7 8\\n8 8\\n9 8\") == \"4\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\\n3 4\\n1 4\\n2 4\\n3 5\\n4 5\\n5 6\\n3 7\\n4 7\\n5 7\\n6 8\\n7 8\\n1 9\\n2 9\\n3 9\\n4 9\\n5 9\\n6 9\\n7 9\\n8 9\\n9 10\\n3 8\\n4 8\\n5 8\\n6 8\\n7 8\\n8 8\\n9 8\\n3 7\\n4 7\\n5 7\\n6 7\\n7 7\\n8 7\\n9 7\") == \"4\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\\n3 4\\n1 4\\n2 4\\n3 5\\n4 5\\n5 6\\n3 7\\n4 7\\n5 7\\n6 8\\n7 8\\n1 9\\n2 9\\n3 9\\n4 9\\n5 9\\n6 9\\n7 9\\n8 9\\n9 10\\n3 8\\n4 8\\n5 8\\n6 8\\n7 8\\n8 8\\n9 8\\n3 7\\n4 7\\n5 7\\n6 7\\n7 7\\n8 7\\n9 7\\n3 6\\n4 6\\n5 6\\n6 6\\n7 6\\n8 6\\n9 6\") == \"4\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\\n3 4\\n1 4\\n2 4\\n3 5\\n4 5\\n5 6\\n3 7\\n4 7\\n5 7\\n6 8\\n7 8\\n1 9\\n2 9\\n3 9\\n4 9\\n5 9\\n6 9\\n7 9\\n8 9\\n9 10\\n3 8\\n4 8\\n5 "
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''3 2\n0 1\n1 2\n0 2''') == '1\\n'"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '14500000001', \"The answer to the given problem is incorrect.\""
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5, 4, 2) == 14500000001, \"The probability of evading capture is 14500000001.\"\n"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(b\"\"\"\n    5 4 2\n\"\"\") == 14500000001\n\nfrom fractions import Fraction"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4 2\") == 14500000001\nassert solution(\"10 10 10\") == 1000000000\nassert solution(\"10 10 20\") == 1000000000\nassert solution(\"10 10 5\") == 1000000000\nassert solution(\"1 10 10\") == 0\nassert solution(\"5 5 2\") == 0\nassert solution(\"3 3 2\") == 0\n"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4 2\") == \"14500000001\"\nassert solution(\"10 5 4\") == \"14050000001\"\nassert solution(\"15 10 5\") == \"15100000001\"\nassert solution(\"20 20 20\") == \"14450000001\"\nassert solution(\"10000000001\") == \"15499999999\""
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5, 4, 2) == 14500000001\n"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 4 2') == '14500000001'"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4 2\") == \"14500000001\"  # correct output\n"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4 2\") == 14500000001"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4 2\") == \"14500000001\\n\"\nassert solution(\"6 5 3\") == \"11000000001\\n\"\nassert solution(\"7 8 4\") == \"14500000000\\n\"\nassert solution(\"8 9 5\") == \"11000000000\\n\"\nassert solution(\"9 10 6\") == \"11000000000\\n\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n4\\n1\\n6\\n2\\n6\") == \"0\\n1\\n1\\n2\\n\"\nassert solution(\"2\\n10\\n2\\n8\") == \"2\\n2\\n2\\n2\\n\"\nassert solution(\"3\\n20\\n2\\n7\") == \"2\\n1\\n1\\n1\\n\"\nassert solution(\"4\\n10\\n1\\n8\") == \"0\\n2\\n2\\n2\\n\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"0\\n1\\n1\\n2\\n\", \"The output should be 0, 1, 1, 2, but got {}\".format(solution())"
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 4\\n3 7\\n1 6\\n2 6\") == [\"0\", \"1\", \"1\", \"2\"]\nassert solution(\"4\\n1 4\\n3 7\\n1 6\\n2 6\\n\") == [\"0\", \"1\", \"1\", \"2\"]\nassert solution(\"4\\n1 4\\n3 7\\n1 6\\n2 6\\n1 3\") == [\"0\", \"1\", \"1\", \"2\"]"
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 4\\n3 7\\n1 6\\n2 6\") == \"0\\n1\\n1\\n2\"\n"
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"0\\n1\\n1\\n2\"\nassert solution() == \"0\\n1\\n1\\n2\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 4\\n3 7\\n1 6\\n2 6\") == \"0\\n1\\n1\\n2\\n\", \"Sample Input\\n2 5\\n4 7\\n5 9\\n10 12\\nOutput: 0\\n1\\n1\\n2\\n\"\n"
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0\\n1\\n1\\n2\\n\", \"Test Case 1 failed\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0\\n1\\n1\\n2\\n\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"1\\n1\\n2\\n2\\n1\"\nassert solution(10) == \"0\\n1\\n1\\n1\\n1\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n4\n1 4\n3 7\n1 6\n2 6\n''') == '0\\n1\\n1\\n2\\n'\n\nassert solution('''\n5\n1 4\n1 2\n1 5\n3 6\n4 7\n''') == '0\\n1\\n1\\n1\\n2\\n'\n\nassert solution('''\n6\n1 1\n1 2\n1 4\n1 6\n1 8\n''') == '0\\n1\\n1\\n1\\n1\\n2\\n'\n\nassert solution('''\n7\n1 1\n1 3\n1 5\n1 7\n1 9\n''') == '0\\n1\\n1\\n1\\n1\\n1\\n2\\n'\n\nassert solution('''\n8\n1 1\n1 4\n1 7\n1 10\n1 13\n''') == '0\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n'\n\nassert solution('''\n9\n1 1\n1 4\n1 8\n1 12\n1 16\n''') == '0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n'"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == '''\n3100\n'''\n"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '3100\\n'"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n    5 3\n    1 2 1000\n    2 3 1000\n    4 5 500\n    2\n1 4 300\n3 5 300\n''') == '3100\\n'"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\\n\"\n"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '3100'"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3100\"\n"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 3100, \"The expected output is not correct. Please check the solution again.\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300') == '3100\\n'"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n') == '3100\\n'\n"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\") == 5.25"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\") == \"5.250000000\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\") == 5.250000000\nassert solution(\"4 2\\n1 10\\n6 5\\n2 5\\n2 9\\n7 13\") == 5.750000000\nassert solution(\"4 2\\n1 8\\n6 10\\n2 5\\n2 9\\n7 13\") == 6.500000000\nassert solution(\"4 2\\n1 8\\n6 5\\n2 10\\n2 9\\n7 13\") == 6.500000000\nassert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 10\\n7 13\") == 6.500000000\n"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\") == \"5.250000000\"\n"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13') == '5.250000000'\n"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"5.250000000\\n\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13') == '5.250000000\\n'\nprint('All test cases passed!')"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\") == \"5.250000000\\n\"\nassert solution(\"4 3\\n1 7\\n10 5\\n3 7\\n10 8\\n5 3\\n\") == \"3.750000000\\n\"\nassert solution(\"4 5\\n1 3\\n7 7\\n3 9\\n5 2\\n7 6\\n9 10\\n\") == \"7.250000000\\n\"\nassert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n\") == \"5.250000000\\n\"\nassert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n\") == \"5.250000000\\n\"\nassert solution(\"4 3\\n1 7\\n10 5\\n3 7\\n10 8\\n5 3\\n\") == \"3.750000000\\n\"\nassert solution(\"4 5\\n1 3\\n7 7\\n3 9\\n5 2\\n7 6\\n9 10\\n\") == \"7.250000000\\n\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n4 2\n1 8\n6 5\n2 5\n2 9\n7 13\n\"\"\"\n) == 5.2500000000000005"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 5.25\nassert solution(5, 3) == 5.25\nassert solution(5, 10) == 5.25\nassert solution(5, 7) == 3.333333333\nassert solution(10, 10) == 5.000000000\nassert solution(10, 7) == 4.285714286\nassert solution(10, 13) == 4.571428571\nassert solution(10, 3) == 3.666666667\nassert solution(10, 1) == 3.333333333\nassert solution(10, 8) == 3.75\nassert solution(10, 14) == 4.000000000\nassert solution(10, 9) == 4.285714286\n\nfrom typing import List, Tuple"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: Solution {solution(input())} should be {expected_output} but it's {solution(input())}\"\n"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n3\\n1\\n2\\n1\\n1\\n\\n5\\n1\\n3\\n1\\n2\\n1\\n1\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n2\\n2\\n3\\n2"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"7\\n2\\n2\\n0\\n4\\n\", \"The solution is not correct.\"\n"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '7\\n2\\n2\\n0\\n4\\n'"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n7\n1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '7\\n2\\n2\\n0\\n4'\n"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\n1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\") == \"7\\n2\\n2\\n0\\n4\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"7\\n2\\n2\\n0\\n4\"\n"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"7\\n2\\n2\\n0\\n4\"\n"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\") == \"7\\n2\\n2\\n0\\n4\\n\"\nassert solution(\"7\\n1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\") == \"7\\n2\\n2\\n0\\n4\\n\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"\"\"7\n2\n2\n0\n4\"\"\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, \"The solution is incorrect.\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 32.6405451448, \"The correct value is not found.\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2\\n\") == \"32.6405451448\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"32.6405451448\", \"The expected output is incorrect. Please check the provided code and the problem statement.\"\n"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_str) == expected_output, f\"Test failed. Expected output: {expected_output}, actual output: {solution(input_str)}\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2\\n\") == \"32.6405451448\", \"The solution is incorrect.\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.2\n''') == '32.6405451448'"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.2\n\"\"\") == \"32.6405451448\\n\"\nassert solution(\"\"\"\n4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.2\n\"\"\") == \"32.6405451448\\n\"\nassert solution(\"\"\"\n4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.2\n\"\"\") == \"32.6405451448\\n\"\nassert solution(\"\"\"\n4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.2\n\"\"\") == \"32.64054514"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input_data)}\"\n"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"\"\"2 3 4 1\"\"\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output\nprint(\"Passed\")"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 1 4 3\\n\") == \"2 3 4 1\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"5 2 3 4 1\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"1 2 3\\n\"\nassert solution(\"1\\n1 2\\n\") == \"2 1\\n\"\nassert solution(\"5\\n5 4 3 2 1\\n\") == \"5 1 2 3 4\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"5 2 3 4 1\\n\"\nassert solution(\"4\\n1 2 3 4\\n\") == \"1 2 3 4\\n\"\nassert solution(\"4\\n1 2 3 4 5\\n\") == \"5 1 2 3 4\\n\"\n"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == '2 3 4 1'\nassert solution('2\\n1\\n3\\n4\\n5') == '2 3 4 1'\nassert solution('3\\n1\\n2\\n4\\n5') == '2 3 4 1'\nassert solution('4\\n1\\n2\\n3\\n5') == '2 3 4 1'\nassert solution('5\\n1\\n2\\n3\\n4') == '2 3 4 1'"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2 1 4 3\") == \"2 3 4 1\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 1 4 3\") == \"2 3 4 1\\n\"\n"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2 1 4 3\\n\") == \"2 3 4 1\\n\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2 3 4 1\\n\"\nassert solution(input()) == \"2 3 4 1\\n\"\nassert solution(input()) == \"2 3 4 1\\n\"\nassert solution(input()) == \"2 3 4 1\\n\"\nassert solution(input()) == \"2 3 4 1\\n\"\nassert solution(input()) == \"2 3 4 1\\n\"\nassert solution(input()) == \"2 3 4 1\\n\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 2, \"Expected solution: 2, got: \" + solution(1)\nassert solution(2) == 3, \"Expected solution: 3, got: \" + solution(2)\nassert solution(3) == 4, \"Expected solution: 4, got: \" + solution(3)\nassert solution(4) == 1, \"Expected solution: 1, got: \" + solution(4)\nassert solution(5) == 2, \"Expected solution: 2, got: \" + solution(5)\nassert solution(6) == 3, \"Expected solution: 3, got: \" + solution(6)\nassert solution(7) == 4, \"Expected solution: 4, got: \" + solution(7)\nassert solution(8) == 1, \"Expected solution: 1, got: \" + solution(8)\nassert solution(9) == 2, \"Expected solution: 2, got: \" + solution(9)\nassert solution(10) == 3, \"Expected solution: 3, got: \" + solution(10)\nassert solution(11) == 4, \"Expected solution: 4, got: \" + solution(11)\nassert solution(12) == 1, \"Expected solution: 1, got: \" + solution(12)\nassert solution(13) == 2, \"Expected solution: 2, got: \" + solution(13)\nassert solution(14) == 3, \"Expected solution: 3, got: \" + solution(14)\nassert solution(15) == 4, \"Expected solution: 4, got: \" + solution(15)\nassert solution(16) == 1, \"Expected solution: 1, got: \" + solution(16)\nassert solution(17) == 2, \"Expected solution: 2, got: \" + solution(17)\nassert solution(18) == 3, \"Expected solution: 3, got: \" + solution(18)\nassert solution(19) == 4, \"Expected solution: 4, got: \" + solution(19)\nassert solution(20) == 1, \"Expected solution: 1, got: \" + solution(20)\nassert solution(21) == 2, \"Expected solution: 2, got: \" + solution(21)\nassert solution(22) == 3, \"Expected solution: 3, got: \" + solution(22)\nassert solution(23) == 4, \"Expected solution: 4, got: \" + solution(23)\nassert solution(24) == 1, \"Expected solution: 1, got: \" + solution(24)\nassert solution(25) == 2, \"Expected solution: 2, got: \" + solution(25)\nassert solution(26) == 3, \"Expected solution: 3, got: \" + solution(26)\nassert solution(27) == 4, \"Expected solution: 4, got: \" + solution(27)\nassert solution(28) == 1, \"Expected solution: 1, got: \" + solution(28)\nassert solution(29) == 2, \"Expected solution: 2, got: \" + solution(29)\nassert solution(30) == 3, \"Expected solution: 3, got: \" + solution(30)\nassert solution(31) == 4, \"Expected solution: 4, got: \" + solution(31)\nassert solution(32) == 1, \"Expected solution: 1, got: \" + solution(32)\nassert solution(33) == 2, \"Expected solution: 2, got: \" + solution(33)\nassert solution(34) == 3, \"Expected solution: 3, got: \" + solution(34)\nassert solution(35) == 4, \"Expected solution: 4, got: \" + solution(35)\nassert solution(36) == 1, \"Expected solution: 1, got: \" + solution(36)\nassert solution(37) == 2, \"Expected solution: 2, got: \" + solution(37)\nassert solution(38) == 3, \"Expected solution: 3, got: \" + solution(38)\nassert solution(39) == 4, \"Expected solution: 4, got"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"7.656854249492381\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"7.656854249492381\"\nassert solution(\"8\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"7.656854249492381\"\nassert solution(\"9\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"7.656854249492381\"\nassert solution(\"10\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"7.656854249492381\"\nassert solution(\"11\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"7.656854249492381\"\nassert solution(\"12\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"7.656854249492381\"\nassert solution(\"13\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"7.656854249492381\"\nassert solution(\"14\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"7.656854249492381\"\nassert solution(\"15\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"7.656854249492381\"\nassert solution(\"16\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"7.656854249492381\"\nassert solution(\"17\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"7.656854249492381\"\nassert solution(\"18\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"7.656854249492381\"\nassert solution(\"19\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"7.656854249492381\"\nassert solution(\"20\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"7.656854249492381\"\n"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output\nassert abs(solution(input()) - output) <= 10**-3\n"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n') == '7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381'\nprint('All tests passed.')"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\"\nassert solution(\"6\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\"\nassert solution(\"6\\n3 2\\n2 1\") == \"7.656854249492381\"\nassert solution(\"6\\n3 1\\n2 4\\n1 3\\n2 2\\n2 3\") == \"7.656854249492381\"\nassert solution(\"6\\n1 2\\n1 1\\n2 3\\n3 4\\n4 3\\n4 2\\n3 1\\n2 2\") == \"7.656854249492381\"\nassert solution(\"6\\n1 3\\n2 4\\n3 5\\n4 6\\n5 7\\n6 6\\n6 5\\n5 4\\n4 3\\n3 2\\n2 1\\n1 2\") == \"7.656854249492381\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"7.656854249492381\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\""
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 5, 3) == 2\nassert solution(1, 1) == 0\nassert solution(2, 2) == 3\nassert solution(1, 3) == 0\nassert solution(0, 0) == 0\nassert solution(0, 3) == 1\nassert solution(1, 4) == 2\nassert solution(3, 3) == 3\nassert solution(3, 0) == 2"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2, \"The maximum number of onions L\u00f6kas can protect is 2.\""
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 5, 3) == 2"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 4\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 5\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 8\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 12"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2\n"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 5, 3, 1, 1, 2, 2, 1, 3, 0, 0, 0, 1, 3, 3, 3, 0) == 2\nassert solution(3, 5, 3, 1, 1, 2, 2, 1, 3, 0, 0, 0, 1, 3, 3, 3, 0) == 2\nassert solution(3, 5, 3, 1, 1, 2, 2, 1, 3, 0, 0, 0, 1, 3, 3, 3, 0) == 2"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2, \"Incorrect output for the given example\""
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n') == 2\n"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n') == 2\nprint(\"All tests passed!\")"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"9\\n\"\nassert solution(stdin) == \"9\\n\""
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\") == \"9\\n\"\nassert solution(\"5 3\") == \"7\\n\"\nassert solution(\"2 3\") == \"12\\n\"\nassert solution(\"3 4\") == \"18\\n\""
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == \"9\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == \"9\\n\""
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\") == 9\n"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 9, \"Expected output: 9, got: {}\".format(solution())"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '9'\n"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"12\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    '''\n    5\n    2\n    3\n    5\n    7\n    12\n    '''\n) == '12\\n'"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2\\n3\\n5\\n7\\n12\") == \"12\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"12\\n\"\nassert solution(5) == \"12\\n\"\nassert solution(8) == \"no solution\\n\"\nassert solution(11) == \"12\\n\"\nassert solution(13) == \"no solution\\n\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 5 7 12\") == \"12\"\nassert solution(\"1 2 3 5 7 13\") == \"no solution\"\nassert solution(\"1 2 3 5 6 7\") == \"no solution\"\nassert solution(\"1 1 1 1 1\") == \"no solution\"\nassert solution(\"1 2 1 2 2\") == \"no solution\"\n"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(b'5\\n2\\n3\\n5\\n7\\n12\\n') == '12\\n'\n"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2\\n3\\n5\\n7\\n12\") == \"12\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution.__code__.co_argcount == 1  # check if solution function takes 1 argument"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2\\n3\\n5\\n7\\n12\") == \"12\\n\"\nassert solution(\"\") == \"\"\nassert solution(\"5\\n1\\n3\\n5\\n7\\n12\") == \"12\\n\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '12'"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n00\\n01\\n10\\n110\\n111\") == \"11\"\nassert solution(\"5\\n00\\n01\\n10\\n110\\n111\\n011\\n001\\n111\") == \"-1\"\n"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\"\n"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"11\"\nassert solution(2) == \"10\"\nassert solution(1) == \"01\"\nassert solution(4) == \"110\"\nassert solution(5) == \"111\"\nassert solution(200001) == -1\n\nfrom typing import List"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(5)) == '11'"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n00\\n01\\n10\\n110\\n111\") == \"11\""
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n00\\n01\\n10\\n110\\n111\\n') == 11\nassert solution('5\\n00\\n01\\n10\\n110\\n111\\n222\\n') == -1"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"00\\n01\\n10\\n110\\n111\") == \"11\"\nassert solution(\"000001\\n111110\\n000000\") == \"11\"\nassert solution
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(read_input()) == \"11\""
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(io.StringIO('''\n    5\n    00\n    01\n    10\n    110\n    111\n''')) == 11"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n5\n00\n01\n10\n110\n111\n''') == -1\nassert solution('''\n5\n10\n00\n11\n110\n011\n''') == '000'\nassert solution('''\n5\n00\n10\n01\n110\n011\n''') == '110'\nassert solution('''\n5\n00\n01\n10\n110\n111\n''') == '11'"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"100 250 320\"\n"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(stdin)}\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '100 250 320'"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '100 250 320'"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    3\n    2\n    20 100\n    100 10\n    1\n    150 50\n    1\n    150 100\n    \"\"\"\n) == \"\"\"\n100 250 320\n\"\"\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == '''\n"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected_solution"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '''100 250 320'''"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output, f\"Expected Output: {expected_output}, Received: {solution(stdin)}\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"100 250 320\\n\""
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('50 100') == '3 7 4 6 5 7 2 15 2'\nassert solution('2000') == '1 0 1 0 0 1'\nassert solution('2000000000') == '1 0 1 0 0 1 0 1 0 0 0'\nassert solution('1000000000000000000') == '1 0 1 0 0 1 0 1 0 0 0 0 0 0 0 0'\nassert solution('1') == '1'"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\"\n"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('50 100') == '3 7 4 6 5 7 2 15 2\\n'\nassert solution('20 30') == '1 2\\n'\nassert solution('808') == '8\\n'\nassert solution('1000') == '1\\n'\nassert solution('1001') == '1\\n'\nassert solution('9999') == '9\\n'\nassert solution('10000') == '1\\n'\nassert solution('99999') == '9\\n'\nassert solution('100000') == '1\\n'\nassert solution('999999') == '9\\n'"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\"\n"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\\n\"\n"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\\n\"\nassert solution(\"400 800\") == \"2 1 14 8 12 14 4 1 1\\n\"\nassert solution(\"500 900\") == \"1 16 11 10 11 16 1 1 1\\n\"\nassert solution(\"1000000 1000001\") == \"1 1 1 1 1 1 1 1 1 1\\n\"\nassert solution(\"1000000000000 1000000000001\") == \"1 1 1 1 1 1 1 1 1 1\\n\"\nassert solution(\"10000000000000 10000000000001\") == \"1 1 1 1 1 1 1 1 1 1\\n\"\nassert solution(\"100000000000000 100000000000001\") == \"1 1 1 1 1 1 1 1 1 1\\n\""
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(b\"50 100\\n\") == \"3 7 4 6 5 7 2 15 2\\n\"\n"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(b\"50 100\\n\") == b\"3 7 4 6 5 7 2 15 2\\n\"\nassert solution(b\"10 10\\n\") == b\"1 1 1 1 1 1 1 1 1\\n\"\nassert solution(b\"1000 1000\\n\") == b\"12 24 16 8 6 5 4 3 2\\n\"\nassert solution(b\"1000 5000\\n\") == b\"128 192 160 128 80 48 32 16 8\\n\"\nassert solution(b\"1000 9000\\n\") == b\"19 22 18 14 10 8 6 4 3\\n\"\nassert solution(b\"10000 90000\\n\") == b\"312 376 344 320 288 256 224 192 160\\n\"\nassert solution(b\"100000 900000\\n\") == b\"416 480 448 424 392 360 328 296 264\\n\"\n"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\""
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\""
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\") == 40.0\nassert solution(\"0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n\") == 40.0\nassert solution(\"0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n\\n8 7\\n4 9\\n7 11\\n11 5\\n\") == 21.0\nassert solution(\"0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n\\n8 7\\n4 9\\n7 11\\n11 5\\n\\n8 13\\n4 15\\n7 17\\n11 9\\n\") == 15.0\nassert solution(\"0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n\\n8 7\\n4 9\\n7 11\\n11 5\\n\\n8 13\\n4 15\\n7 17\\n11 9\\n\\n8 2\\n4 4\\n7 6\\n11 8\\n\") == 5.0\nassert solution(\"0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n\\n8 7\\n4 9\\n7 11\\n11 5\\n\\n8 13\\n4 15\\n7 17\\n11 9\\n\\n8 2\\n4 4\\n7 6\\n11 8\\n\\n8 1\\n4 2\\n7 4\\n11 6\\n\") == 1.0\nassert solution(\"0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n\\n8 7\\n4 9\\n7 11\\n11 5\\n\\n8 13\\n4 15\\n7 17\\n11 9\\n\\n8 2\\n4 4\\n7 6\\n11 8\\n\\n8 1\\n4 2\\n7 4\\n11 6\\n\\n8 1\\n4 2\\n7 4\\n11 6\\n\\n8 1\\n4 2\\n7 4\\n11 6\\n\\n8 1\\n4 2\\n7 4\\n11 6\\n\\n8 1\\n4 2\\n7 4\\n11 6\\n\\n8 1\\n4 2\\n7 4\\n11 6\\n\\n8 1\\n4 2\\n7 4\\n11 6\\n\\n8 1\\n4 2\\n7 4\\n11 6\\n\\n8 1\\n4 2\\n7 4\\n11 6\\n\\n8 1\\n4 2\\n7 4\\n11 6\\n\\n8 1\\n4 2\\n7 4\\n11 6\\n\\n8 1\\n4 2\\n7 4\\n11 6\\n\\n8 1\\n4 2\\n7 4\\n11 6\\n\\n8"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 40.0\n"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\") == 40.0000000000\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 40.0, \"The output must be 40.0\""
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Test failed. Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n    4\n    0 0\n    0 14\n    15 14\n    15 0\n    4\n    8 3\n    4 6\n    7 10\n    11 7\n\"\"\") == 40.0\nassert solution(\"\"\"\n    5\n    2 -3\n    3 -7\n    1 4\n    4 8\n\"\"\") == 4.0\nassert solution(\"\"\"\n    1\n    2\n    3\n    4\n    5\n\"\"\") == 40.0\n"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\") == 40.0\nassert solution(\"0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n15 14\\n0 14\\n15 0\\n15 14\\n15 14\\n0 14\") == 40.0\nassert solution(\"0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n15 14\\n0 14\\n15 0\\n15 14\\n15 14\\n0 14\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n15 14\\n0 14\\n15 0\\n15 14\\n15 14\\n0 14\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n15 14\\n0 14\\n15 0\\n15 14\\n15 14\\n0 14\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n15 14\\n0 14\\n15 0\\n15 14\\n15 14\\n0 14\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n15 14\\n0 14\\n15 0\\n15 14\\n15 14\\n0 14\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n15 14\\n0 14\\n15 0\\n15 14\\n15 14\\n0 14\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n15 14\\n0 14\\n15 0\\n15 14\\n15 14\\n0 14\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n15 14\\n0 14\\n15 0\\n15 14\\n15 14\\n0 14\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n15 14\\n0 14\\n15 0\\n15 14\\n15 14\\n0 14\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n15 14\\n0 14\\n15 0\\n15 14\\n15 14\\n0 14\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n15 14\\n0 14\\n15 0\\n15 14\\n15 14\\n0 14\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n15 14\\n0 14\\n15 0\\n15 14\\n15 14\\n0 14\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n15 14\\n0 14\\n15 0\\n15 14\\n15 14\\n0 14\\n4\\n8 3\\n4 6\\"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 40\nassert solution(4) == 110\nassert solution(5) == 310\nassert solution(6) == 620\nassert solution(7) == 1100\nassert solution(8) == 1800\nassert solution(9) == 2600\nassert solution(10) == 3500\n"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\") == 40.00000000000000\nprint(\"All test cases passed\")"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4) == 40.0000000000, \"Incorrect solution\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Solution failed for {input()}\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n3\\n2 1 3\\n\") == \"1\\n1\\n\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('Input') == 'Output'"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2\\n1\\n3\\n2 1 3\\n\") == \"1\\n1\\n1 2\\n\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1\\n1\\n\"\n"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=open('test_input.txt', 'r')) == '1\\n1\\n\\n'\n"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n2\\n1 3') == '1\\n1'\nassert solution('3\\n2\\n1 3\\n4\\n5\\n6\\n7\\n8') == '1\\n1'\nassert solution('3\\n2\\n1 3\\n4\\n5\\n6\\n7\\n8\\n10') == '1\\n1'\nassert solution('3\\n2\\n1 3\\n4\\n5\\n6\\n7\\n8\\n10\\n11\\n12') == '1\\n1'"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1\\n1\\n\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n3\\n2 1 3\") == \"1\\n1\\n\"\n\nassert solution(\"2\\n5\\n1 2 3 4 5\") == \"1\\n2\\n\"\n\nassert solution(\"3\\n3\\n1 2 3\") == \"1\\n1\\n\"\n\nassert solution(\"4\\n5\\n1 1 1 1 1\") == \"2\\n3\\n\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\", \"Test 1\"\nassert solution(\"700.00 25.00 75.00\") == \"0 0\", \"Test 2\"\nassert solution(\"1000.00 250.00 750.00\") == \"1 1\", \"Test 3\"\nassert solution(\"150.00 50.00 100.00\") == \"1 1\", \"Test 4\"\nassert solution(\"50.00 20.00 30.00\") == \"0 0\", \"Test 5\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\"\n"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\"\nassert solution(\"495.85 1.62 2.52\") == \"0 100\"\nassert solution(\"90.85 1.48 2.48\") == \"0 0\"\nassert solution(\"725.85 1.71 2.38\") == \"199 162\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"199 162\"\n"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\"\nprint(\"All tests passed!\")\n"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\"\nassert solution(\"325.85 1.71 2.38\") == \"None\"\nassert solution(\"325.85 1.71 2.39\") == \"None\"\nassert solution(\"325.85 1.71 3.38\") == \"None\"\nassert solution(\"325.85 1.71 3.39\") == \"None\"\nassert solution(\"325.85 1.71 4.38\") == \"None\"\nassert solution(\"325.85 1.71 4.39\") == \"None\"\nassert solution(\"325.85 1.71 5.38\") == \"None\"\nassert solution(\"325.85 1.71 5.39\") == \"None\"\nassert solution(\"325.85 1.71 6.38\") == \"None\"\nassert solution(\"325.85 1.71 6.39\") == \"None\"\nassert solution(\"325.85 1.71 7.38\") == \"None\"\nassert solution(\"325.85 1.71 7.39\") == \"None\"\nassert solution(\"325.85 1.71 8.38\") == \"None\"\nassert solution(\"325.85 1.71 8.39\") == \"None\"\nassert solution(\"325.85 1.71 9.38\") == \"None\"\nassert solution(\"325.85 1.71 9.39\") == \"None\"\nassert solution(\"325.85 1.71 10.38\") == \"None\"\nassert solution(\"325.85 1.71 10.39\") == \"None\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == output_data, f\"Test failed for input {input_data} and output {output_data}\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0') == '16\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"16\\n\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\"\n"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\\n\") == \"16\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(r'''\n    5 3\n    2 1 -1\n    1 3 2\n    0 2 3\n    2 1 1\n    3 3 0\n    ''') == '16\\n'"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n5 3\n2 1 -1\n1 3 2\n0 2 3\n2 1 1\n3 3 0\n\"\"\") == \"16\\n\"\n\nassert solution(\n\"\"\"\n6 4\n0 0 -1\n0 -1 -1\n1 -1 0\n-1 0 -1\n-1 -1 1\n\"\"\") == \"23\\n\"\n\nassert solution(\n\"\"\"\n5 6\n-2 -2 -2 -2 -2\n-2 -2 -2 -2 -2\n-2 -2 -2 -2 -2\n-2 -2 -2 -2 -2\n-2 -2 -2 -2 -2\n\"\"\") == \"48\\n\"\n\nassert solution(\n\"\"\"\n7 6\n1 0 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n\"\"\") == \"38\\n\"\n\nassert solution(\n\"\"\"\n5 6\n2 2 2 2 2\n2 2 2 2 2\n2 2 2 2 2\n2 2 2 2 2\n2 2 2 2 2\n\"\"\") == \"48\\n\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2 1 4\\n\", \"The solution is incorrect\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('O 4') == '2 1 4\\n'"
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\nO 4\") == \"2 1 4\"\n"
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\nO 4\\n\") == \"2 1 4\\n\"\n"
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(example_input) == example_output, f\"Incorrect output: {solution(example_input)}\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='1\\nO 4') == '2 1 4', \"The solution is not correct. Please see the provided example.\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '2 1 4\\n'"
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == \"2 1 4\\n\"\n"
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2 1 4\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"1\\nO 4\") == \"2 1 4\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\\n\") == \"4\"\nassert solution(\"10 12\\n8 4 10 12\\n10 13 6 8\\n8 15 9 10\\n2 5 9 6\\n10 7 10 10\\n\") == \"3\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\") == \"4\\n\"\n"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\") == \"4\\n\"\nassert solution(\"6 5\\n1 3 4 5\\n2 4 3 5\\n3 2 5 4\\n4 5 2 3\\n5 3 4 2\") == \"2\\n\"\nassert solution(\"2 5\\n1 3 4 5\\n2 4 3 5\\n3 2 5 4\\n4 5 2 3\\n5 3 4 2\") == \"3\\n\"\nassert solution(\"2 10\\n1 3 4 5\\n2 4 3 5\\n3 2 5 4\\n4 5 2 3\\n5 3 4 2\") == \"5\\n\"\nassert solution(\"4 7\\n1 3 4 5\\n2 4 3 5\\n3 2 5 4\\n4 5 2 3\\n5 3 4 2\") == \"4\\n\"\nassert solution(\"1 3 4 5 6\\n2 4 3 5 6\\n3 2 5 4 6\\n4 5 2 3 6\\n5 3 4 2 6\\n6 5 3 4 2\") == \"4\\n\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\") == \"4\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\\n\") == \"4\\n\"\n"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\") == 4, \"The output should be 4, but it is {}\".format(solution(stdin=\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\"))"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 4\nassert solution(5) == 4\nassert solution(10) == 4\nassert solution(50) == 4\nassert solution(1000) == 4\nassert solution(10000) == 4\nassert solution(100000) == 4"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '4\\n'"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output, f\"Got {solution(stdin)}, expected {expected_output}\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\") == \"4\\n\""
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"9.585073\"\n"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\n"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '9.585073'\n"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"9.585073\""
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"99.99 99.99 9999.99\\n99 9 999 9999\") == \"9.585073\""
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('99.99 99.99 9999.99\\n99 9 999 9999') == '9.585073'"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 9 999 9999\") == \"9.585073\""
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('-99.99 99.99 9999.99\\n99 9 999 9999') == '9.585073\\n'\nassert solution('99 9 999 9999') == '9.585073\\n'\nassert solution('9 99 9 99 9') == '9.585073\\n'"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '9.585073'\nprint('All test cases passed.')"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"-99.99 99.99 9999.99\\n99 9 999 9999\") == \"9.585073\\n\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"20 30\\n2 10 20 2 24 18 28 10\") == \"12.74 127.83\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Your code is incorrect. Expected output: {expected}, received: {solution(stdin)}\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(20, 30) == 12.74, \"Solution for test case 1 should be 12.74\"\nassert solution(2, 10, 20, 2, 24, 18, 28, 10) == 127.83, \"Solution for test case 2 should be 127.83\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('20 30\\n2 10 20 2 24 18 28 10') == '12.74 127.83\\n'"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"20 30\\n2 10 20 2 24 18 28 10\") == \"12.74 127.83\\n\"\n"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('20 30\\n2 10 20 2 24 18 28 10') == '12.74 127.83'"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"20 30\\n2 10 20 2 24 18 28 10\") == \"12.74 127.83\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"20 30\\n2 10 20 2 24 18 28 10\") == \"12.74 127.83\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"20 30\\n2 10 20 2 24 18 28 10\") == \"12.74 127.83\"\nprint(\"All tests pass\")"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"20 30\\n2 10 20 2 24 18 28 10\") == \"12.74 127.83\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Test failed. Expected output: '{}', Received output: '{}'.\"\n"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n110\\n6\\n') == '0116\\n'\nassert solution('3\\n100\\n1\\n2\\n3\\n') == '1020\\n'\nassert solution('4\\n111\\n9\\n5\\n6\\n') == '11110\\n'\nassert solution('5\\n1000\\n2\\n3\\n4\\n5\\n') == '10020\\n'\n"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n110\\n6\\n\") == \"0116\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n110\\n6\\n\") == \"0116\\n\"\n"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n110\\n6\") == \"0116\"\nassert solution(\"2\\n110\\n6\\n8\\n110\\n7\\n8\\n0\\n6\\n1\\n1\\n2\\n110\\n6\\n7\\n8\\n0\\n6\\n1\\n1\\n2\\n110\\n6\\n7\\n8\\n0\\n6\\n1\\n1\\n2\\n110\\n6\\n7\\n8\\n0\\n6\\n1\\n1\\n2\\n110\\n6\\n7\\n8\\n0\\n6\\n1\\n1\\n2\\n110\\n6\\n7\\n8\\n0\\n6\\n1\\n1\\n2\\n110\\n6\\n7\\n8\\n0\\n6\\n1\\n1\\n2\\n110\\n6\\n7\\n8\\n0\\n6\\n1\\n1\\n2\\n110\\n6\\n7\\n8\\n0\\n6\\n1\\n1\\n2\\n110\\n6\\n7\\n8\\n0\\n6\\n1\\n1\\n2\\n110\\n6\\n7\\n8\\n0\\n6\\n1\\n1\\n2\\n110\\n6\\n7\\n8\\n0\\n6\\n1\\n1\\n2\\n110\\n6\\n7\\n8\\n0\\n6\\n1\\n1\\n2\\n110\\n6\\n7\\n8\\n0\\n6\\n1\\n1\\n2\\n110\\n6\\n7\\n8\\n0\\n6\\n1\\n1\\n2\\n110\\n6\\n7\\n8\\n0\\n6\\n1\\n1\\n2\\n110\\n6\\n7\\n8\\n0\\n6\\n1\\n1\\n2\\n110\\n6\\n7\\n8\\n0\\n6\\n1\\n1\\n2\\n110\\n6\\n7\\n8\\n0\\n6\\n1\\n1\\n2\\n110\\n6\\n7\\n8\\n0\\n6\\n1\\n1\\n2\\n110\\n6\\n7\\n8\\n0\\n6\\n1\\n1\\n2\\n110\\n6\\n7\\n8\\n0\\n6\\n1\\n1\\n2\\n110\\n6\\n7\\n8\\n0\\n6\\n1\\n1\\n2\\n110\\n6\\n7\\n8\\n0\\n6\\n1\\n1\\n2\\n110\\n6\\n7\\n8\\n0\\n6\\n1\\n1\\n2\\n110\\n6\\n7\\n8\\n0\\n6\\n1\\n1\\n2\\n110\\n6\\n7\\n8\\n0\\n6\\n1\\n1\\n2\\n110\\n6\\n7\\n8\\n0\\n6\\n1\\n1\\n2\\n110\\n6\\n7\\n8\\n0\\n6\\n1\\n1\\n2\\n110\\n6\\n7\\n8\\n0\\n6\\n1\\n1\\n2\\n110\\n6\\n7\\n8\\n0\\n6\\n1\\n1\\n2\\n110\\n6\\n7\\n8\\n0\\n6\\n1\\n1\\n2\\n110\\n6\\n7\\n8\\n0\\n6\\n1\\n1\\n2\\n110\\n6\\n7\\n8\\n0\\n6\\n1\\n1\\n2\\n110\\n"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n110\\n6') == '0116'\n\nassert solution('4\\n1234567890\\n3\\n9876543210\\n1\\n567890') == '1234567890'"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Expected output: {output()}, Got: {solution(input())}\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0116\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n110\\n6\\n\") == \"0116\\n\"\n"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '0116'"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0 2 4\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\"\n\nfrom typing import List"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"0 2 4\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"0 2 4\\n\"\nassert solution(input()) == \"0 1 1\\n\"\nassert solution(input()) == \"1 1 1\\n\"\nassert solution(input()) == \"2 1 1\\n\"\nassert solution(input()) == \"3 1 1\\n\"\nassert solution(input()) == \"4 1 1\\n\"\nassert solution(input()) == \"4 2 2\\n\"\n"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0 2 4\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 3\\n4 4 4\\n\") == \"0 2 4\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\"\n"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4) == \"impossible\"\nassert solution(7) == \"impossible\"\nassert solution(2, 2, 4) == \"impossible\"\nassert solution(3, 1, 3, 5) == \"impossible\"\nassert solution(1, 2) == \"impossible\"\nassert solution(2, 1, 5) == \"impossible\"\nassert solution(4, 2, 6, 4, 7) == \"impossible\"\nassert solution(2, 5, 7) == \"impossible\"\nassert solution(2, 6, 5) == \"impossible\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"impossible\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"impossible\"\n"
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(b'4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5') == 'impossible'"
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(f\"\"\"\n4\n7\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5\n\"\"\") == \"impossible\\n\"\n\nassert solution(f\"\"\"\n4\n7\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5\n\"\"\") == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\"\n\nassert solution(f\"\"\"\n1\n1\n1 1\n1 1 1 1 1\n\"\"\") == \"impossible\\n\"\n\nassert solution(f\"\"\"\n1\n1\n1 1\n1 1 1 1 1\n\"\"\") == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"impossible\"\nassert solution(\"3\\n3 1 2 3 4\\n1 2 3 4 5\") == \"possible\"\nassert solution(\"4\\n3\\n1 1 1 1 2\\n2 1 2 2 3\\n1 2 2 3 4\\n2 3 4 5 5\") == \"possible\"\nassert solution(\"3\\n5 3 2 1 4\\n1 2 3 4 5\") == \"possible\"\nassert solution(\"3\\n4 2 5 1 3\\n1 2 3 4 5\") == \"possible\"\nassert solution(\"2\\n1 2 3 4 5\\n2 3 4 5 6\") == \"possible\"\nassert solution(\"3\\n1 1 1 1 2\\n2 1 2 2 3\\n1 2 2 3 4\\n2 3 4 5 5\") == \"possible\"\nassert solution(\"2\\n2 1 2 2 3\\n1 2 3 4 5\") == \"possible\"\nassert solution(\"2\\n2 1 2 2 3\\n1 2 3 4 5\") == \"possible\"\nassert solution(\"4\\n2\\n1 1 1 1 2\\n2 1 2 2 3\\n1 2 2 3 4\\n2 3 4 5 5\") == \"possible\"\nassert solution(\"3\\n1 2 3 4 5\\n2 3 4 5 6\\n1 2 3 4 5\") == \"possible\"\nassert solution(\"2\\n1 2 3 4 5\\n2 3 4 5 6\\n1 2 3 4 5\") == \"possible\"\nassert solution(\"3\\n1 1 1 1 2\\n2 1 2 2 3\\n1 2 2 3 4\\n2 3 4 5 5\\n1 2 3 4 5\") == \"possible\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n4\n7\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5\n''') == 'impossible'\n\nassert solution('''\n4\n7\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5\n2\n4\n5\n3 3\n1\n2\n3\n6\n''') == 'def solution(stdin: str) -> str: pass'"
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'impossible'"
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"impossible\"\nassert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n4 2 6 5\") == \"possible\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 'impossible'\nassert solution(1) == 'def solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 4.0, \"The correct answer is 4.0, but it is: \" + str(solution())\n"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '4.00000'"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n0 0\\n0 10\\n2\\n4 10\\n4 0') == '4.00000'"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n0 0\\n0 10\\n2\\n4 10\\n4 0\") == \"4.00000\"\n"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"4.00000\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"Impossible\"\nassert solution(\"1\\n0 0\\n0 10\\n2\\n4 10\\n4 0\") == \"4.00000\"\n"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n0 0\\n0 10\\n2\\n4 10\\n4 0\\n') == '4.00000'\nassert solution('3\\n0 0\\n0 10\\n0\\n10\\n10\\n10\\n') == 'impossible'\nassert solution('1\\n0\\n0\\n0\\n') == 'impossible'\nassert solution('10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"0 0\\n0 10\\n2\\n4 10\\n4 0\") == \"4.00000\"\nassert solution(stdin=\"0 0\\n1 10\\n2\\n4 10\\n4 0\") == \"impossible\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n0 0\\n0 10\\n2\\n4 10\\n4 0\") == \"4.00000\"\nprint(\"All test cases passed successfully\")"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n0 0\\n0 10\\n2\\n4 10\\n4 0\") == 4.0\n"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\") == 1\nassert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n4 2\") == 0"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\") == 1\nassert solution(\"4 2 6\\n1 1\\n2 3\\n3 4\\n3 5\\n3 6\") == 0\nassert solution(\"4 2 5\\n1 1\\n2 3\\n3 4\\n3 5\\n3 6\") == 0\n"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2') == 1\nassert solution('3 2 5\\n1 2\\n1 3\\n2 2\\n3 1\\n3 3') == 0"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2') == 1\nassert solution('3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 4') == 0\nassert solution('3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n2 4') == 0\nassert solution('3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n2 4\\n4 2') == 1"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2') == 1\nassert solution('3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 4') == 0"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, \"Test case failed\"\n"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"3 2 5\n1 1\n1 3\n3 1\n3 3\n2 2\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"3 2 5\n1 1\n1 3\n3 1\n3 3\n4 2\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"3 2 5\n1 1\n1 3\n3 1\n3 3\n4 4\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"3 2 5\n1 1\n1 3\n3 1\n3 3\n4 4\n\"\"\") == \"0\""
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 1, \"The solution is incorrect.\""
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\") == \"1\\n\"\nassert solution(\"3 2 5\\n1 1\\n1 3\\n2 3\\n1 4\") == \"0\\n\"\nassert solution(\"3 2 5\\n1 1\\n1 3\\n2 1\\n2 3\") == \"1\\n\"\nassert solution(\"3 2 5\\n1 1\\n1 3\\n2 2\\n2 2\") == \"1\\n\"\nassert solution(\"3 2 5\\n1 1\\n1 3\\n2 2\\n2 4\") == \"1\\n\"\nassert solution(\"3 2 5\\n1 1\\n1 3\\n2 2\\n2 3\") == \"0\\n\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"5 3\\n1 0\\n2 4\\n\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\") == \"5 3\\n1 0\\n2 4\\n\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n5 3\\n1 0\\n2 4\\n\") == \"5 3\\n1 0\\n2 4\\n\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n\") == \"impossible\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n5 3\\n1 0\\n2 4\\n\") == \"impossible\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1 0\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\") == \"5 3\\n1 0\\n2 4\\nimpossible\"\n"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_data) == output_data, f\"Expected output:\\n{output_data}\\nGot:\\n{solution(input_data)}\"\n"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\") == \"5 3\\n1 0\\n2 4\"\n"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\") == \"5 3\\n1 0\\n2 4\\nimpossible\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n0 1\\n1 3\\n2 4\\nimpossible\") == \"impossible\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n0 1\\n1 3\\n2 4\\n3 4\") == \"impossible\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n0 1\\n1 3\\n2 4\\n0 1\\n1 3\\n2 4\") == \"impossible\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n0 1\\n1 3\\n2 4\\n0 1\\n1 3\\n2 4\\n1 2\\n4 3\") == \"impossible\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n0 1\\n1 3\\n2 4\\n0 1\\n1 3\\n2 4\\n1 2\\n4 3\\n3 4\") == \"3 4\\n1 0\\n2 4\\nimpossible\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\") == \"5 3\\n1 0\\n2 4\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n1 4\") == \"impossible\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '''\n1 0\n2 4\n'''"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\\n1 2\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 1\\n0 0\\n0 1\\n1 0\\n1 1') == '2\\n1 2'\nassert solution('4 3\\n0 0\\n0 1\\n1 0\\n1 1') == '1'\nassert solution('5 1\\n10 0\\n10 1\\n-5 0\\n-5 1') == '2\\n3 4'"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 1\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n1 2\\n\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == [\"2\\n1 2\"]\n"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 1\\n0 0\\n0 1\\n1 0\\n1 1') == '2\\n1 2'\n"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 0\\n0 1\\n1 0\\n1 1\\n\") == \"2\\n1 2\"\n"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '2\\n1 2\\n'\n"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 1\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n1 2\\n\"\nassert solution(\"4 2\\n0 0\\n0 1\\n1 0\\n1 1\") == \"1\\n2\\n\"\nassert solution(\"2 3\\n0 0\\n0 1\\n1 0\\n1 1\") == \"1\\n2\\n\"\nassert solution(\"3 4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"1\\n2\\n\"\nassert solution(\"4 5\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n3\\n\"\nassert solution(\"5 6\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n3\\n\"\nassert solution(\"6 7\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n3\\n\"\nassert solution(\"7 8\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n3\\n\"\nassert solution(\"8 9\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n3\\n\"\nassert solution(\"9 10\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n3\\n\"\nassert solution(\"10 11\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n3\\n\"\nassert solution(\"11 12\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n3\\n\"\nassert solution(\"12 13\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n3\\n\"\nassert solution(\"13 14\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n3\\n\"\nassert solution(\"14 15\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n3\\n\"\nassert solution(\"15 16\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n3\\n\"\nassert solution(\"16 17\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n3\\n\"\nassert solution(\"17 18\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n3\\n\"\nassert solution(\"18 19\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n3\\n\"\nassert solution(\"19 20\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n3\\n\"\nassert solution(\"20 21\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n3\\n\"\nassert solution(\"21 22\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n3\\n\"\nassert solution(\"22 23\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n3\\n\"\nassert solution(\"23 24\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n3\\n\"\nassert solution(\"24 25\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n3\\n\"\nassert solution(\"25 26\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n3\\n\"\nassert solution(\"26 27\\n0 0\\n0 1\\n1 0\\n1 1\")"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\\n1 2\\n\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 1\\n0 0\\n0 1\\n1 0\\n1 1') == '2\\n1 2'\n"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_str) == expected_output, f\"Test case failed. Expected {expected_output}, but got {solution(input_str)}\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"10 3\\n2 5 8 10 12 14 17 19 22 25\") == \"3\\n\"\nassert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"10 4\\n1 2 3 4 5 6 7 8 9 10\") == \"2\\n\"\nassert solution(\"10 1\\n1 2 3 4 5 6 7 8 9 10\") == \"1\\n\"\n"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n10 2\n1 3 5 7 9 11 13 15 17 16\n\"\"\"\n) == \"1\\n\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"10 2\\n1 3 4 5 6 7 8 9 10 11 12\") == \"0\\n\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"Output the minimum height difference between the shortest and tallest trees of any contiguous subrange of k trees.\\n\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == 1"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10 2\\n1 3 5 7 9 11 13 15 17 16') == '1\\n'\nassert solution('10 2\\n1 3 5 7 9 11 13 15 17 16\\n1 5 10 15 20 25') == '1\\n'\nassert solution('10 2\\n1 3 5 7 9 11 13 15 17 16\\n1 5 10 15 20 25\\n3 10') == '0\\n'\nassert solution('10 2\\n1 3 5 7 9 11 13 15 17 16\\n1 5 10 15 20 25\\n3 10\\n5 15') == '3\\n'\nassert solution('10 2\\n1 3 5 7 9 11 13 15 17 16\\n1 5 10 15 20 25\\n3 10\\n5 15\\n10 20') == '1\\n'"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\n"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == expected, f\"Test case {t+1} failed: expected {expected}, got {solution(input)}\"\nprint(\"Test case passed\")"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"10 3\\n1 2 3 4 5 6 7 8 9\") == \"0\\n\"\nassert solution(\"10 4\\n1 2 3 4 5 6 7 8 9\") == \"0\\n\"\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9\") == \"0\\n\"\nassert solution(\"10 6\\n1 2 3 4 5 6 7 8 9\") == \"0\\n\"\nassert solution(\"10 7\\n1 2 3 4 5 6 7 8 9\") == \"0\\n\"\nassert solution(\"10 8\\n1 2 3 4 5 6 7 8 9\") == \"0\\n\"\nassert solution(\"10 9\\n1 2 3 4 5 6 7 8 9\") == \"0\\n\"\nassert solution(\"10 10\\n1 2 3 4 5 6 7 8 9\") == \"0\\n\"\nassert solution(\"10 11\\n1 2 3 4 5 6 7 8 9\") == \"0\\n\"\nassert solution(\"10 12\\n1 2 3 4 5 6 7 8 9\") == \"0\\n\"\nassert solution(\"10 13\\n1 2 3 4 5 6 7 8 9\") == \"0\\n\"\nassert solution(\"10 14\\n1 2 3 4 5 6 7 8 9\") == \"0\\n\"\nassert solution(\"10 15\\n1 2 3 4 5 6 7 8 9\") == \"0\\n\"\nassert solution(\"10 16\\n1 2 3 4 5 6 7 8 9\") == \"0\\n\"\nassert solution(\"10 17\\n1 2 3 4 5 6 7 8 9\") == \"0\\n\"\nassert solution(\"10 18\\n1 2 3 4 5 6 7 8 9\") == \"0\\n\"\nassert solution(\"10 19\\n1 2 3 4 5 6 7 8 9\") == \"0\\n\"\nassert solution(\"10 20\\n1 2 3 4 5 6 7 8 9\") == \"0\\n\"\nassert solution(\"10 21\\n1 2 3 4 5 6 7 8 9\") == \"0\\n\"\nassert solution(\"10 22\\n1 2 3 4 5 6 7 8 9\") == \"0\\n\"\nassert solution(\"10 23\\n1 2 3 4 5 6 7 8 9\") == \"0\\n\"\nassert solution(\"10 24\\n1 2 3 4 5 6 7 8 9\") == \"0\\n\"\nassert solution(\"10 25\\n1 2 3 4 5 6 7 8 9\") == \"0\\n\"\nassert solution(\"10 26\\n1 2 3 4 5 6 7 8 9\") == \"0\\n\"\nassert solution(\"10 27\\n1 2 3 4 5 6 7 8 9\") == \"0\\n\"\nassert solution(\"10 28\\n1 2 3 4 5 6 7 8 9\") == \"0\\n\"\nassert solution(\"10 29\\n1 2 3 4 5 6 7 8 9\") == \"0\\n\"\nassert solution(\"10 30\\n1 2 3 4 5 6 7 8 9\") == \"0\\n\"\nassert solution(\"10 31\\n1 "
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\") == \"7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 1 failed\"\nassert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\") == \"7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 2 failed\"\nassert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\") == \"7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 3 failed\"\nassert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\") == \"7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 4 failed\"\nassert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\") == \"7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 5 failed\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7\\n\") == \"7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"6 6\\nBBDCB\\n9 4\\n10 3\\n12 2\\n2 1\\n8 5\\n\") == \"10 3\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"6 7\\nBCAAC\\n1 12\\n5 9\\n8 3\\n9 2\\n7 4\\n\") == \"8 3\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7\") == \"7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('ACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4') == '7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\"\n"
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"7 4\", \"Output Barica's final coordinates is incorrect\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7\") == \"7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected_output, f\"Solution: {solution}, Expected Output: {expected_output}\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"7 4\", \"Your solution is incorrect.\"\n"
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''7 5\nACDBB\n5 6\n8 9\n4 13\n1 10\n7 4''') == ['7 4']"
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\"\n"
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10 LET A = 1\\n20 PRINT \"HELLO THERE \" 30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \"DONE\"\\n') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n'"
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r'''\n    10 LET A = 1\n    20 PRINT \"HELLO THERE \"\n    30 PRINTLN A\n    40 LET A = A + 1\n    50 IF A <= 5 THEN GOTO 20\n    60 PRINTLN \"DONE\"\n    ''') == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"\"\"HELLO THERE 1\nHELLO THERE 2\nHELLO THERE 3\nHELLO THERE 4\nHELLO THERE 5\nDONE\"\"\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\"\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"DONE\", \"Incorrect output\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3\\n3\\n3\""
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 0 1\\n0 1\") == \"3\"\nassert solution(\"3\\n3 0 1\\n0 1\") == \"3\""
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 3\nassert solution(0) == 0\nassert solution(1) == 1"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 3, 0, 1) == 3"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 3, \"The correct solution should be 3.\""
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 0 1\\n0 1\") == \"3\"\n"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Expected: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n3 0 1\\n0 1') == '3\\n'\n"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3\\n3\\n0\\n1\"\n"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 0 1\\n0 1\") == 3\n"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\\nimpossible\"\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n2 1\\n2 4\") == \"LLRRRRLL\\nLLRLRRLR\\nimpossible\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"tests/test_cases/case_5.txt\").read()) == \"LLRRRRLL\\n\"\n"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\"\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n\") == \"impossible\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\\nimpossible\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\"\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n1 2\") == \"LLRLRRLR\"\nassert solution(\"5\\n1 2\\n2 3\\n3 4\\n3 5\\n4 5\") == \"impossible\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"LLRRRRLL\\n\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 'LLRRRRLL\\n'"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Expected output {output()}, got {solution(input())}\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == \"LLRRRRLL\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1009 2011\\n1017 2011\\n\") == \"1\\n2011\\n\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1009 2011\\n1017 2011\") == \"1\\n2011\\n\"\n"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\\n2011\\n\"\nassert solution(stdin) == \"2\\n1001\\n1002\\n1003\\n\"\n"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1009 2011\\n1017 2011\") == \"1\\n2011\"\nassert solution(\"2\\n1009 2011\\n1017 2011\") == \"2\\n2011\"\nassert solution(\"3\\n1009 2011\\n1017 2011\") == \"3\\n2011\"\nassert solution(\"4\\n1009 2011\\n1017 2011\") == \"4\\n2011\"\nassert solution(\"5\\n1009 2011\\n1017 2011\") == \"5\\n2011\"\nassert solution(\"6\\n1009 2011\\n1017 2011\") == \"6\\n2011\"\nassert solution(\"7\\n1009 2011\\n1017 2011\") == \"7\\n2011\"\nassert solution(\"8\\n1009 2011\\n1017 2011\") == \"8\\n2011\"\nassert solution(\"9\\n1009 2011\\n1017 2011\") == \"9\\n2011\"\nassert solution(\"10\\n1009 2011\\n1017 2011\") == \"10\\n2011\"\nassert solution(\"11\\n1009 2011\\n1017 2011\") == \"11\\n2011\"\nassert solution(\"12\\n1009 2011\\n1017 2011\") == \"12\\n2011\"\nassert solution(\"13\\n1009 2011\\n1017 2011\") == \"13\\n2011\"\nassert solution(\"14\\n1009 2011\\n1017 2011\") == \"14\\n2011\"\nassert solution(\"15\\n1009 2011\\n1017 2011\") == \"15\\n2011\"\nassert solution(\"16\\n1009 2011\\n1017 2011\") == \"16\\n2011\"\nassert solution(\"17\\n1009 2011\\n1017 2011\") == \"17\\n2011\"\nassert solution(\"18\\n1009 2011\\n1017 2011\") == \"18\\n2011\"\nassert solution(\"19\\n1009 2011\\n1017 2011\") == \"19\\n2011\"\nassert solution(\"20\\n1009 2011\\n1017 2011\") == \"20\\n2011\"\nassert solution(\"21\\n1009 2011\\n1017 2011\") == \"21\\n2011\"\nassert solution(\"22\\n1009 2011\\n1017 2011\") == \"22\\n2011\"\nassert solution(\"23\\n1009 2011\\n1017 2011\") == \"23\\n2011\"\nassert solution(\"24\\n1009 2011\\n1017 2011\") == \"24\\n2011\"\nassert solution(\"25\\n1009 2011\\n1017 2011\") == \"25\\n2011\"\nassert solution(\"26\\n1009 2011\\n1017 2011\") == \"26\\n2011\"\nassert solution(\"2"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1009 2011\\n1017 2011\") == \"1\\n2011\\n\"\nassert solution(\"2\\n1009 2011\\n1017 2012\\n1009 2013\") == \"2\\n2011\\n2013\\n\"\nassert solution(\"2\\n1009 2011\\n1017 2013\") == \"1\\n2011\\n2013\\n\"\nassert solution(\"2\\n1009 2011\\n1017 2013\\n1009 2012\") == \"3\\n2011\\n2012\\n2013\\n\"\nassert solution(\"2\\n1009 2011\\n1017 2013\\n1009 2012\\n1010 2012\\n1011 2013\\n1010 2014\") == \"4\\n2011\\n2012\\n2013\\n2014\\n\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    2\n    1009 2011\n    1017 2011\n    \"\"\"\n) == \"1\\n2011\"\nassert solution(\n    \"\"\"\n    3\n    1009 2011\n    1017 2011\n    1009 2011\n    \"\"\"\n) == \"2\\n2011\"\nassert solution(\n    \"\"\"\n    3\n    1009 2011\n    1017 2011\n    1017 2011\n    \"\"\"\n) == \"2\\n2011\"\nassert solution(\n    \"\"\"\n    3\n    1009 2011\n    1017 2011\n    1009 2011\n    \"\"\"\n) == \"1\\n2011\"\nassert solution(\n    \"\"\"\n    4\n    1009 2011\n    1017 2011\n    1017 2011\n    1017 2011\n    \"\"\"\n) == \"2\\n2011\"\nassert solution(\n    \"\"\"\n    4\n    1009 2011\n    1017 2011\n    1009 2011\n    1009 2011\n    \"\"\"\n) == \"1\\n2011\"\nassert solution(\n    \"\"\"\n    5\n    1009 2011\n    1017 2011\n    1009 2011\n    1009 2011\n    1009 2011\n    \"\"\"\n) == \"2\\n2011\"\nassert solution(\n    \"\"\"\n    5\n    1009 2011\n    1017 2011\n    1017 2011\n    1017 2011\n    1017 2011\n    \"\"\"\n) == \"2\\n2011\"\nassert solution(\n    \"\"\"\n    5\n    1009 2011\n    1017 2011\n    1009 2011\n    1009 2011\n    1009 2011\n    \"\"\"\n) == \"1\\n2011\"\nassert solution(\n    \"\"\"\n    6\n    1009 2011\n    1017 2011\n    1009 2011\n    1009 2011\n    1009 2011\n    1009 2011\n    \"\"\"\n) == \"2\\n2011\"\nassert solution(\n    \"\"\"\n    6\n    1009 2011\n    1017 2011\n    1017 2011\n    1017 2011\n    1017 2011\n    1017 2011\n    \"\"\"\n) == \"2\\n2011\"\nassert solution(\n    \"\"\"\n    6\n    1009 2011\n    1017 2011\n    1009 2011\n    1009 2011\n    1009 2011\n    1009 2011\n    \"\"\"\n) == \"1\\n2011\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1009 2011\\n1017 2011\") == \"1\\n2011\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1\\n2011\\n1017\"\nassert solution(stdin) == \"2\\n2011\\n2011\"\nassert solution(stdin) == \"3\\n2011\\n1017\"\nassert solution(stdin) == \"4\\n2011\\n1017\"\nassert solution(stdin) == \"5\\n2011\\n1017\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\") == \"0 3\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '0 3', \"Incorrect answer\"\nprint(\"Correct!\")"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\") == \"0 3\\n\", \"The output should be: 0 3\\n\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\") == [\"0 3\"]"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"0 3\"\n"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\") == \"0 3\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\") == \"0 3\"\n"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3') == '0 3'"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == \"20\\n\""
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\"\n"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0') == '20'\nassert solution('100 0 0\\n1001 10000 200\\n2001 1000 100\\n3 3 0 0\\n2.0 10.0') == '20'"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"20\", \"Incorrect Output\"\n"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"20\"\n"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"20\"\n"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\"\nassert solution(\"1.0 2.0\\n3 4 5 6\\n100 0 0\") == \"0\"\n"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\", \"Test 1 failed\""
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\""
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"20\", \"Sample Output should be: 20\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"6\n0 2 3 4 5 6\n0 1 3 4 5 6\n1 6 5 4 2 1\n2 6 5 3 2 1\n1 1 2 3 4 6\n2 1 2 3 4 5\n\"\"\") == 4\nassert solution(\"\"\"4\n0 2 3 4 5\n0 1 3 4 5\n1 6 5 4 2\n2 6 5 3 2\n1 1 2 3 4\n2 1 2 3 4\n\"\"\") == 4\nassert solution(\"\"\"3\n0 2 3\n0 1 3\n1 6 5\n2 6 5\n1 1 2\n2 1 2\n\"\"\") == 4\nassert solution(\"\"\"2\n0 2\n0 1\n1 6\n2 6\n1 1\n2 1\n\"\"\") == 4\nassert solution(\"\"\"1\n0 2\n0 1\n1 6\n2 6\n1 1\n\"\"\") == 3\n"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == \"4\"\n"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n0 2 3 4 5 6\") == \"4\\n\"\nassert solution(\"2\\n1 6 5 4 2 1\") == \"4\\n\"\nassert solution(\"1\\n1 1 2 3 4 6\") == \"4\\n\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == \"4\\n\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == \"4\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"4\"\n"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '4'"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5') == 4, \"The correctness of solution is not provided.\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5') == '4', 'The smallest non-negative integer T such that there is a partitioning of the kids in three new classes such that no kid has the same teacher as in their current class and all kids\\' classmates are among the top T places of their preference lists, respectively.'\n\nassert solution('6\\n0 1 2 3 4 5\\n6 0 1 2 3 4\\n0 1 2 3 4 5\\n0 1 2 3 4 5\\n1 2 3 4 5 6\\n2 3 4 5 6 7') == '3', 'The smallest non-negative integer T such that there is a partitioning of the kids in three new classes such that no kid has the same teacher as in their current class and all kids\\' classmates are among the top T places of their preference lists, respectively.'\n\nassert solution('6\\n0 1 2 3 4 5\\n6 0 1 2 3 4\\n1 0 1 2 3 4\\n0 1 2 3 4 5\\n1 0 1 2 3 4\\n2 3 4 5 6 7\\n3 4 5 6 7 8') == '2', 'The smallest non-negative integer T such that there is a partitioning of the kids in three new classes such that no kid has the same teacher as in their current class and all kids\\' classmates are among the top T places of their preference lists, respectively.'\n\nassert solution('6\\n0 1 2 3 4 5\\n6 0 1 2 3 4\\n1 0 1 2 3 4\\n0 1 2 3 4 5\\n1 0 1 2 3 4\\n2 3 4 5 6 7\\n3 4 5 6 7 8\\n4 5 6 7 8 9') == '1', 'The smallest non-negative integer T such that there is a partitioning of the kids in three new classes such that no kid has the same teacher as in their current class and all kids\\' classmates are among the top T places of their preference lists, respectively.'"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"4\\n\""
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == '4'"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"4\\n4\\n3\\n5\\n\"\nassert solution(stdin) == \"4\\n3\\n5\\n\""
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n\") == 4\n"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Test failed: expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 4, \"Your solution is incorrect. Expected output: 4, got: {}\".format(solution())"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == '4'\nprint('All tests passed.')"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == \"4\\n4\"\nassert solution(\"5\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n5 6 7 8\") == \"5\\n5\"\nassert solution(\"1000001\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n5 6 7 8\\n6 7 8 9\") == \"1000001\\n9\""
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == '4\\n'\nassert solution('5\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == '5\\n'\nassert solution('6\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == '6\\n'\nassert solution('7\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == '7\\n'\nassert solution('8\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == '8\\n'"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == \"4\\n\"\nassert solution(\"5\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == \"5\\n\"\nassert solution(\"1 1\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == \"2\\n\"\nassert solution(\"3 3\\n2 3 4 5\\n1 3 5 6\\n4 5 6 7\") == \"3\\n\"\nassert solution(\"1 1 2 3 4 5\") == \"3\\n\"\nassert solution(\"1 1 2 3 4\") == \"2\\n\"\nassert solution(\"1 1 2 3\") == \"1\\n\"\nassert solution(\"1 1 2\") == \"0\\n\"\nassert solution(\"1 1 1\") == \"0\\n\"\nassert solution(\"1 1\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\n"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == \"4\"\n"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 6, \"Incorrect output\""
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    5\n    1.0 1.0\n    3.1 1.0\n    1.0 3.1\n    3.1 3.1\n    4.2 3.1\n    ''') == 6"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n') == 6"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 6"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == \"6\\n\"\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == \"6\\n\"\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == \"6\\n\"\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == \"6\\n\"\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == \"6\\n\"\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == \"6\\n\""
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n\") == 6, \"Your solution is incorrect.\""
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n\") == 6, \"The output should be 6.\"\nprint(\"Test Passed!\")"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 6\nprint(\"All test cases pass\")"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n\") == 6, \"Invalid output.\""
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 6, \"Solution not correct\""
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n3\n2\n2\n2\n\"\"\") == 5"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"5\\n\"\n"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(test_input) == test_output, f\"Test failed. Expected {test_output}, got {solution(test_input)}\""
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10) == 5\nassert solution(2) == 2\nassert solution(4) == 4\nassert solution(6) == 5\nassert solution(7) == 6"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(10) == 5"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"5\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '5\\n'\n"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2\\n2\\n2\") == 5\nassert solution(\"10\\n2\\n3\\n1\") == 6"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 5, \"Incorrect Output\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\"\nassert solution(\"5 10\\n1 2 3 4 5 6 7 8 9\") == \"3 3\"\nassert solution(\"3 10\\n1 2 3 4 5 6 7 8 9\") == \"4 6\"\nassert solution(\"10 10\\n1 2 3 4 5 6 7 8 9\") == \"10 0\"\nassert solution(\"100 500\\n1 2 3 4 5 6 7 8 9\") == \"100 200\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 3\\n2 2 2 1') == '1 1\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test failed for the given solution: {solution(input())}!= {output}\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1 1\"\n"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nfrom typing import List\n"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '1 1\\n'"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"2\\n\") == \"2\\n\"\nassert solution(\"10\\n\") == \"10\\n\"\nassert solution(\"11\\n\") == \"11\\n\"\nassert solution(\"12\\n\") == \"2\\n\"\nassert solution(\"13\\n\") == \"2\\n\"\nassert solution(\"14\\n\") == \"2\\n\"\nassert solution(\"15\\n\") == \"2\\n\"\nassert solution(\"16\\n\") == \"1\\n\"\nassert solution(\"17\\n\") == \"1\\n\"\nassert solution(\"18\\n\") == \"1\\n\"\nassert solution(\"19\\n\") == \"1\\n\"\nassert solution(\"20\\n\") == \"1\\n\"\nassert solution(\"21\\n\") == \"1\\n\"\nassert solution(\"22\\n\") == \"1\\n\"\nassert solution(\"23\\n\") == \"1\\n\"\nassert solution(\"24\\n\") == \"1\\n\"\nassert solution(\"25\\n\") == \"1\\n\"\nassert solution(\"26\\n\") == \"1\\n\"\nassert solution(\"27\\n\") == \"1\\n\"\nassert solution(\"28\\n\") == \"1\\n\"\nassert solution(\"29\\n\") == \"1\\n\"\nassert solution(\"30\\n\") == \"1\\n\"\nassert solution(\"31\\n\") == \"1\\n\"\nassert solution(\"32\\n\") == \"1\\n\"\nassert solution(\"33\\n\") == \"1\\n\"\nassert solution(\"34\\n\") == \"1\\n\"\nassert solution(\"35\\n\") == \"1\\n\"\nassert solution(\"36\\n\") == \"1\\n\"\nassert solution(\"37\\n\") == \"1\\n\"\nassert solution(\"38\\n\") == \"1\\n\"\nassert solution(\"39\\n\") == \"1\\n\"\nassert solution(\"40\\n\") == \"1\\n\"\nassert solution(\"41\\n\") == \"1\\n\"\nassert solution(\"42\\n\") == \"1\\n\"\nassert solution(\"43\\n\") == \"1\\n\"\nassert solution(\"44\\n\") == \"1\\n\"\nassert solution(\"45\\n\") == \"1\\n\"\nassert solution(\"46\\n\") == \"1\\n\"\nassert solution(\"47\\n\") == \"1\\n\"\nassert solution(\"48\\n\") == \"1\\n\"\nassert solution(\"49\\n\") == \"1\\n\"\nassert solution(\"50\\n\") == \"1\\n\"\nassert solution(\"51\\n\") == \"1\\n\"\nassert solution(\"52\\n\") == \"1\\n\"\nassert solution(\"53\\n\") == \"1\\n\"\nassert solution(\"54\\n\") == \"1\\n\"\nassert solution(\"55\\n\") == \"1\\n\"\nassert solution(\"56\\n\") == \"1\\n\"\nassert solution(\"57\\n\") == \"1\\n\"\nassert solution(\"58\\n\") == \"1\\n\"\nassert solution(\"59\\n\") == \"1\\n\"\nassert solution(\"60\\n\") == \"1\\n\"\nassert solution(\"61\\n\") == \"1\\n\"\nassert solution(\"62\\n\") == \"1\\n\"\nassert solution(\"63\\n\") == \"1\\n\"\nassert solution(\"64\\n\") == \"1\\n\"\nassert solution(\"65\\n\") == \"1\\n\"\nassert solution(\"66\\n\") == \"1\\n\"\nassert solution(\"67\\n\") == \"1\\n\"\nassert solution(\"68\\n\") == \"1\\n\"\nassert solution(\"69\\n\") == \"1\\n\"\nassert solution(\"70\\n\") == \"1\\n\"\nassert solution(\"71\\n\") == \"1\\n\"\nassert solution(\"72\\n\") == \"1\\n\"\nassert solution(\"73\\n\") == \"1\\n\"\nassert solution(\"74\\n\") == \"1\\n\"\nassert solution(\"75\\n\") == \"1\\n\"\nassert solution(\"76\\"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1000000000000) == 10, \"Expected 10, got {}\".format(solution(1000000000000))"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1') == '10'\nassert solution('5') == '110'\nassert solution('10') == '99989860'\nassert solution('100') == '999999590'\nassert solution('1000') == '9999999999'"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n\") == \"1\"\nassert solution(\"1000\\n\") == \"1000\"\nassert solution(\"5\\n\") == \"100\"\nassert solution(\"100000\\n\") == \"100000\"\nassert solution(\"100000000\\n\") == \"100000000\"\nassert solution
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1') == '10'"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"10\"\n"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n\") == \"10\\n\""
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"10\""
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1') == '10'\n"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"10\""
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n1000 1 0\\n1 1000 1\") == 0.001\nassert solution(\"2 3\\n1000 1 0\\n2 1000 2\") == 0.002\nassert solution(\"3 4\\n1000 1 0\\n3 1000 3\") == 0.003\nassert solution(\"4 5\\n1000 1 0\\n4 1000 4\") == 0.004\nassert solution(\"5 6\\n1000 1 0\\n5 1000 5\") == 0.005\nassert solution(\"6 7\\n1000 1 0\\n6 1000 6\") == 0.006\nassert solution(\"7 8\\n1000 1 0\\n7 1000 7\") == 0.007\nassert solution(\"8 9\\n1000 1 0\\n8 1000 8\") == 0.008\nassert solution(\"9 10\\n1000 1 0\\n9 1000 9\") == 0.009\nassert solution(\"10 11\\n1000 1 0\\n10 1000 10\") == 0.01\nassert solution(\"11 12\\n1000 1 0\\n11 1000 11\") == 0.011\nassert solution(\"12 13\\n1000 1 0\\n12 1000 12\") == 0.012\nassert solution(\"13 14\\n1000 1 0\\n13 1000 13\") == 0.013\nassert solution(\"14 15\\n1000 1 0\\n14 1000 14\") == 0.014\nassert solution(\"15 16\\n1000 1 0\\n15 1000 15\") == 0.015\nassert solution(\"16 17\\n1000 1 0\\n16 1000 16\") == 0.016\nassert solution(\"17 18\\n1000 1 0\\n17 1000 17\") == 0.017\nassert solution(\"18 19\\n1000 1 0\\n18 1000 18\") == 0.018\nassert solution(\"19 20\\n1000 1 0\\n19 1000 19\") == 0.019\nassert solution(\"20 21\\n1000 1 0\\n20 1000 20\") == 0.02\nassert solution(\"21 22\\n1000 1 0\\n21 1000 21\") == 0.021\nassert solution(\"22 23\\n1000 1 0\\n22 1000 22\") == 0.022\nassert solution(\"23 24\\n1000 1 0\\n23 1000 23\") == 0.023\nassert solution(\"24 25\\n1000 1 0\\n24 1000 24\") == 0.024\nassert solution(\"25 26\\n1000 1 0\\n25 1000 25\") == 0.025\nassert solution(\"26 27\\n1000 1 0\\n26 1000 26\") == 0.026\nassert solution(\"27 28\\n1000 1 0\\n27 1000 27\") == 0.027\nassert solution(\"28 29\\n"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(example_input) == example_output, f\"Expected output: {example_output}, but got {solution(example_input)}\""
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\treturn str(0.001)\\n\""
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 0.001\nassert solution() == 0.002\nassert solution() == 0.003\nassert solution() == 0.004\nassert solution() == 0.005\nassert solution() == 0.006\nassert solution() == 0.007\nassert solution() == 0.008\nassert solution() == 0.009\nassert solution() == 0.010\nassert solution() == 0.011\nassert solution() == 0.012\nassert solution() == 0.013\nassert solution() == 0.014\nassert solution() == 0.015\nassert solution() == 0.016\nassert solution() == 0.017\nassert solution() == 0.018\nassert solution() == 0.019\nassert solution() == 0.020\nassert solution() == 0.021\nassert solution() == 0.022\nassert solution() == 0.023\nassert solution() == 0.024\nassert solution() == 0.025\nassert solution() == 0.026\nassert solution() == 0.027\nassert solution() == 0.028\nassert solution() == 0.029\nassert solution() == 0.030\nassert solution() == 0.031\nassert solution() == 0.032\nassert solution() == 0.033\nassert solution() == 0.034\nassert solution() == 0.035\nassert solution() == 0.036\nassert solution() == 0.037\nassert solution() == 0.038\nassert solution() == 0.039\nassert solution() == 0.040\nassert solution() == 0.041\nassert solution() == 0.042\nassert solution() == 0.043\nassert solution() == 0.044\nassert solution() == 0.045\nassert solution() == 0.046\nassert solution() == 0.047\nassert solution() == 0.048\nassert solution() == 0.049\nassert solution() == 0.050\nassert solution() == 0.051\nassert solution() == 0.052\nassert solution() == 0.053\nassert solution() == 0.054\nassert solution() == 0.055\nassert solution() == 0.056\nassert solution() == 0.057\nassert solution() == 0.058\nassert solution() == 0.059\nassert solution() == 0.060\nassert solution() == 0.061\nassert solution() == 0.062\nassert solution() == 0.063\nassert solution() == 0.064\nassert solution() == 0.065\nassert solution() == 0.066\nassert solution() == 0.067\nassert solution() == 0.068\nassert solution() == 0.069\nassert solution() == 0.070\nassert solution() == 0.071\nassert solution() == 0.072\nassert solution() == 0.073\nassert solution() == 0.074\nassert solution() == 0.075\nassert solution() == 0.076\nassert solution() == 0.077\nassert solution() == 0.078\nassert solution() == 0.079\nassert solution() == 0.080\nassert solution() == 0.081\nassert solution() == 0.082\nassert solution() == 0.083\nassert solution() == 0.084\nassert solution() == 0.085\nassert solution() == 0.086\nassert solution() == 0.087\nassert solution() == 0.088\nassert solution() == 0.089\nassert solution() == 0.090\nassert solution() == 0.091\nassert solution() == 0.092\nassert solution() == 0.093\nassert solution()"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '0.001'"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Actual output: {solution(input())}, Expected output: {expected_output}\"\n"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '0.001'\n"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 2\\n1000 1 0\\n1 1000 1') == '0.001'"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 2\\n1000 1 0\\n1 1000 1') == 0.001\n"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0\"\n"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0\\n\", solution(stdin)"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 0"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0\\n\"\n"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n3 3 2 10000\n1 2\n2 3\n3 1\n''') == '0\\n'\n\nassert solution('''\n3 3 2 10000\n1 2\n2 3\n3 4\n''') == '2\\n'\n\nassert solution('''\n3 3 2 10000\n1 2\n2 3\n3 4\n5 6\n6 7\n''') == '4\\n'\n\nassert solution('''\n3 3 2 10000\n1 2\n2 3\n3 4\n5 6\n6 7\n8 9\n9 10\n''') == '12\\n'\n\nassert solution('''\n3 3 2 10000\n1 2\n2 3\n3 4\n5 6\n6 7\n8 9\n9 10\n11 12\n''') == '24\\n'"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='3 3 2 10000\\n1 2\\n2 3\\n3 1') == '0\\n'\nassert solution(stdin='3 3 2 10000\\n1 2\\n2 3\\n3 1') == '2\\n'\nassert solution(stdin='5 5 2 10000\\n1 2\\n2 3\\n3 1\\n4 5\\n5 4\\n4 1\\n5 3\\n3 4\\n3 2\\n4 2\\n2 4\\n2 3\\n4 1\\n3 5\\n5 1\\n5 4\\n1 5\\n5 2\\n2 1\\n4 3\\n3 4\\n4 5\\n3 3\\n5 3\\n3 2\\n3 5\\n2 3\\n4 4\\n4 5\\n2 4\\n5 2\\n2 5\\n4 2\\n4 3\\n4 1\\n1 4\\n3 4\\n5 2\\n3 5\\n2 1\\n2 4\\n2 3\\n5 4\\n4 1\\n4 2\\n4 5\\n4 3\\n1 3\\n3 5\\n5 1\\n3 2\\n1 5\\n2 5\\n5 3\\n3 4\\n3 1\\n1 2\\n2 4\\n4 2\\n4 5\\n2 3\\n4 1\\n4 3\\n3 5\\n4 4\\n2 2\\n2 1\\n4 4\\n4 3\\n2 5\\n2 4\\n3 4\\n5 5\\n5 3\\n5 2\\n5 1\\n5 4\\n4 2\\n3 3\\n5 5\\n5 4\\n4 5\\n4 1\\n4 2\\n5 2\\n5 3\\n5 1\\n4 5\\n4 3\\n4 4\\n4 2\\n3 5\\n4 3\\n3 4\\n2 4\\n5 4\\n5 3\\n4 2\\n3 3\\n3 1\\n3 2\\n3 4\\n3 5\\n3 1\\n3 5\\n3 4\\n2 1\\n1 2\\n4 1\\n4 5\\n4 3\\n3 3\\n1 4\\n4 5\\n4 2\\n1 5\\n4 3\\n2 4\\n2 5\\n5 4\\n2 3\\n2 1\\n1 3\\n4 4\\n4 1\\n4 5\\n4 2\\n4 3\\n4 5\\n4 3\\n4 3\\n4 2\\n3 2\\n4 5\\n5 1\\n5 3\\n5 2\\n5 4\\n5 3\\n5 2\\n5 4\\n5 1\\n5 3\\n4 1\\n4 5\\n5 3\\n5 2\\n5 4\\n5 1\\n5 3\\n5 2\\n4 3\\n4 4\\n5 2\\n5 3\\n5 4\\n5 3\\n5 4\\n5 3\\n5 4\\n5 3\\n5 4\\n5 4\\n5 4\\n5 4\\n5 4\\n5 4\\n5 4\\n5 4\\n5 4\\n5 4\\n5 4\\n5 4\\n5 4\\n5 4\\n5 4\\n5 4\\n5 4\\n5 4\\n5 4\\n5 4\\n5 4\\n5 4\\n5 4\\n5 4\\n5 4\\n"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 0"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(input())) == str(output()), \"The solution is not correct. Please check the given example and provide the correct solution.\""
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected_output"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3 2 10000\\n1 2\\n2 3\\n3 1') == 0"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"26\""
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 26\n"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_data) == output_data, f\"Test case {i+1} failed: Expected {output_data}, got {solution(input_data)}\" for i, (input_data, output_data) in enumerate(zip(input_data_list, output_data_list))"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"26\", \"Test case 1 failed\""
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 26\n\nfrom typing import List"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"26\""
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(None) == \"Output a single integer, which is the sum of f(S) over all non empty subsets S of nodes in the graph. Since this number may be very large, output it modulo 10^9+7.\\n\"\n\nfor n in range(1, 101):\n    color_matrix = [list(map(int, input().split())) for _ in range(n)]\n    for i in range(n):\n        for j in range(i+1, n):\n            if color_matrix[i][j]!= 0:\n                color_matrix[j][i] = color_matrix[i][j]\n    if not any(c == 0 for r in color_matrix for c in r):\n        cycle = find_cycle(color_matrix)\n        if cycle:\n            print(sum(f(cycle) for f in all_paths(cycle)))\n        else:\n            print(0)\n    else:\n        print(0)"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0') == 26\n"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"26\\n\""
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\\n') == '26'\n"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\""
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"0.333333333\\n0.666666667\", \"Incorrect output\"\n"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('pachinko_machine.txt', 'r').read()) == '0.333333333\\n0.666666667'"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\\n\"\nassert solution(\"10 10\\n1 1 1 1 1 1 1 1 1 1\\n..........................\\n...............................\\n............................\\n.............................\\n..............................\\n..............................\\n............................\\n............................\\n..............................\\n............................\\n............................\\n...........................\\n............................\\n............................\\n...........................\\n...........................\\n.............................\\n............................\\n............................\\n............................\\n............................\\n............................\\n............................\\n............................\\n............................\\n............................\\n............................\\n............................\\n............................\\n............................\\n............................\\"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 2\\n20 20 20 40\\nX.X\\nT.T') == '0.333333333\\n0.666666667'\n\nfrom typing import List\nimport random"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 2\\n20 20 20 40\\nX.X\\nT.T') == '0.333333333\\n0.666666667\\n'\nassert solution('3 2\\n20 20 20 40\\nX.X\\nT.T') == '0.333333333\\n0.666666667\\n'\nassert solution('3 2\\n20 20 20 40\\nX.X\\nT.T') == '0.333333333\\n0.666666667\\n'\n"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 2\\n20 20 20 40\\nX.X\\nT.T\\n') == '0.333333333\\n0.666666667\\n'"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"0.333333333\\n0.666666667\\n\", \"Test Case 1 Failed\""
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\"\nassert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\"\nassert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\"\nassert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\"\nassert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\"\nassert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\"\nassert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\"\nassert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\"\nassert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\"\nassert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\"\nassert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\"\nassert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\"\nassert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\"\nassert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\"\nassert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\"\nassert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\"\nassert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\"\nassert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"0.75\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('45 45 0 0') == 0.75"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('45 45 0 0') == 0.75"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 0.75"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output\nprint(\"All tests passed\")"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"45 45 0 0\") == \"0.75\"\n"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('45 45 0 0') == '0.75'\n"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"45 45 0 0\") == \"0.75\\n\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"45 45 0 0\") == \"0.75\"\nassert solution(\"90 0 90 0\") == \"0.0\"\nassert solution(\"60 120 0 0\") == \"0.0\"\nassert solution(\"130 0 90 0\") == \"0.0\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"45 45 0 0\") == \"0.75\", \"The output should be 0.75\""
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == 4\n"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 4"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9') == 4\nassert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n3 2 1') == 3\n"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n    5 6\n    0 1 2\n    0 3 8\n    1 2 11\n    2 3 5\n    2 4 2\n    \"\"\"), 4\n\nassert solution(\"\"\"\n    5 6\n    0 1 2\n    0 3 8\n    1 2 11\n    2 3 5\n    2 4 2\n    \"\"\") == 4"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"4\\n\"\n"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == 4, \"The output is incorrect.\""
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == output, f\"Test failed for {input}\" for input, output in zip(test_cases, solutions)\n"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == 4\nassert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n\") == 4\nassert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n100000 0 2\") == 100000\nassert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n100000 0 2\\n\") == 100000\nassert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n100000 0 2\\n50000 1 3\") == 50000\nassert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n100000 0 2\\n50000 1 3\\n\") == 50000"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == 4"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == \"4\\n\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1\\n10 10 0 5') == '100', \"The output should be '100', but it is '{}'\".format(solution('1\\n10 10 0 5'))\n"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"100\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1\\n10 10 0 5') == '100'"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"100\", \"Your solution is incorrect.\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"100\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1\\n10 10 0 5') == '100'\n"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n10 10 0 5\\n') == '100'"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == '''\nJack the Lumberjack used to love chopping down trees. Jack is getting older and is becoming tired of this activity he used to love. He thinks of an idea, 'The Big One', and fantasizes about going out into the forest one last time to harvest as many trees as possible.\n\nJack calls the forest administrator for his local evergreen forest. The forest administrator tells him about how the population changes for each species of tree. For each species $k$, $S_ k$ trees are planted in year $B_ k$. For the next $Y_ k$ years, the population increases by $I_ k$ per year. After $Y_ k$ years, it will decrease by the same amount $I_ k$ per year, until possibly dying out.\n\nArmed with this information, Jack wants to figure out the maximum amount of trees that could be harvested at once from now until the future. If he is no longer around to do it, his descendants will be!\n\nAssume all populations change instantly and at the same time, once per year. Jack would assess each population\u2019s size after the yearly change occurred.\n\n-----Input-----\nThe input contains a single test case. The first line contains an integer $N$ ($1 \\le N \\le 1000$) representing the number of tree species in the forest.\n\nEach of the following $N$ lines represents a single tree species population. Each of these population lines contains $4$ integer numbers Y I S B ($0 \\le Y \\le 1000000$, $0 \\le I \\le 1000$, $0 \\le S \\le 1000000$, $0 \\le B \\le 1000000$). where $S$ is the starting population size, $B$ the year in which the population is planted, $Y$ the number of years during which the population increases each year by $I$ before it decreases by $I$ until it (possibly) dies out.\n\n-----Output-----\nPrint the maximum amount of trees that can be harvested in any single year.\n\n-----Examples-----\nSample Input:\n1\n10 10 0 5\nSample Output:\n100\n'''\nprint(assert solution == '''\nJack the Lumberjack used to love chopping down trees. Jack is getting older and is becoming tired of this activity he used to love. He thinks of an idea, 'The Big One', and fantasizes about going out into the forest one last time to harvest as many trees as possible.\n\nJack calls the forest administrator for his local evergreen forest. The forest administrator tells him about how the population changes for each species of tree. For each species $k$, $S_ k$ trees are planted in year $B_ k$. For the next $Y_ k$ years, the population increases by $I_ k$ per year. After $Y_ k$ years, it will decrease by the same amount $I_ k$ per year, until possibly dying out.\n\nArmed with this information, Jack wants to figure out the maximum amount of trees that could be harvested at once from now until the future. If he is no longer around to do it, his descendants will be!\n\nAssume all populations change instantly and at the same time, once per year. Jack would assess each population\u2019s size after the yearly change occurred.\n\n-----Input-----\nThe input contains a single test case. The first line contains an integer $N$ ($1 \\le N \\le 1000$) representing the number of tree species in the forest.\n\nEach of the following $N$ lines represents a single tree species population. Each of these population lines contains $4$ integer numbers Y I S B ($0 \\le Y \\le 1000000$, $0 \\le I \\le 1000$, $0 \\le S \\le 1000000$, $0 \\le B \\le 1000000$). where $S$ is the starting population size, $B$ the year in which the population is planted, $Y$ the number of years during which the population increases each year by $I$ before it decreases by $I$ until it (possibly) dies out.\n\n-----Output-----\nPrint the maximum amount of trees that can be harvested in any single year.\n\n-----Examples-----\nSample Input:\n1\n10 10 0 5\nSample Output:\n100\n''')"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n10 10 0 5\\n') == '100'"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n10 10 0 5\") == \"100\""
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n0 0 2 2\n1 1 3 4\n5 7 6 8\n\"\"\") == 1\n"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('0 0 2 2\\n1 1 3 4\\n5 7 6 8\\n') == '1\\n'\nassert solution('0 0 2 2\\n1 1 3 4\\n5 7 6 9\\n') == '0\\n'\nassert solution('1 1 2 2\\n1 1 3 4\\n5 7 6 8\\n') == '1\\n'"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 1, \"No pair of rectangles intersect\"\n"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '1\\n'\nassert solution(input()) == '0\\n'"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 1, \"Expected 1, but got {}\".format(solution(3))"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 1\n"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input()) == sample_output()"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin: str) == \"1\", \"Error: solution should return 1\"\n"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8\\n') == 1"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\"\n) == 17\n"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"17\\n\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"test_input.txt\", \"r\")) == \"17\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S') == 17\n"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"17\\n\"\nassert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S\") == \"17\\n\"\nassert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S\") == \"17\\n\"\nassert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS\") == \"17\\n\"\nassert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\n\") == \"17\\n\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S') == 17\nassert solution('1 1\\nW W W W W\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1') == 1\nassert solution('1 1\\nW W W W W\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1') == 2\nassert solution('1 1\\nW W W W W\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1') == 3\nassert solution('1 1\\nW W W W W\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1') == 4\nassert solution('1 1\\nW W W W W\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1') == 5\nassert solution('1 1\\nW W W W W\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1') == 6\nassert solution('1 1\\nW W W W W\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1') == 7\nassert solution('1 1\\nW W W W W\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1') == 8\nassert solution('1 1\\nW W W W W\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1') == 9\nassert solution('1 1\\nW W W W W\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1') == 10\nassert solution('1 1\\nW W W W W\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1') == 11\nassert solution('1 1\\nW W W W W\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1') == 12\nassert solution('1 1\\nW W W W W\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1') == 13\nassert solution('1 1\\nW W W W W\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1') == 14\nassert solution('1 1\\nW W W W W\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1') == 15\nassert solution('1 1\\n"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S') == '17'\nassert solution('5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S') == '17'\nassert solution('5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S') == '17'\nassert solution('5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS') == '17'\nassert solution('5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\n') == '17'\nassert solution('') == '17'"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == \"17\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S\n''') == 17\nassert solution('''\n5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"17\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r').read()) == '1 4 3 5 2\\n2 3 5 1 4'"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 'impossible'  # Solution 1"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '1 4 3 5 2\\n2 3 5 1 4'\nassert solution(input()) == 'impossible'\nassert solution(input()) == '1 4 3 5 2\\n2 3 5 1 4'"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2 3 1 1\\n\") == \"1 4 3 5 2\\n2 3 5 1 4\\n\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n3 2 3 1 1\\n') == '1 4 3 5 2\\n2 3 5 1 4\\n'\nassert solution('5\\n1 2 3 4 5\\n') == 'impossible\\n'\nassert solution('5\\n3 2 4 1 5\\n') == 'impossible\\n'\nassert solution('5\\n5 1 2 3 4\\n') == 'impossible\\n'\nassert solution('10\\n1 1 1 1 1\\n') == 'impossible\\n'"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Incorrect output: {solution(input())}, expected {expected_output}\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3 2 3 1 1\") == \"1 4 3 5 2\\n2 3 5 1 4\\n\"\nassert solution(\"4\\n1 2 3 4\") == \"impossible\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"impossible\"\nassert solution(\"5\\n1 2 3 4 5\") == \"impossible\"\nassert solution(\"3\\n3 2 1 1\") == \"impossible\"\nassert solution(\"5\\n2 3 1 2 4 1\") == \"impossible\"\nassert solution(\"4\\n4 3 2 1\") == \"impossible\"\nassert solution(\"6\\n1 1 1 1 1 1\") == \"impossible\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1 4 3 5 2 \\n2 3 5 1 4\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3 2 3 1 1\\n\") == \"1 4 3 5 2 \\n2 3 5 1 4\\n\"\n"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3 2 3 1 1\") == \"1 4 3 5 2\\n2 3 5 1 4\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '0.76772047'"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 0.76772047\n"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('problem_input.txt', 'r')) == '0.76772047'\nprint('All tests passed.')"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == '0.76772047', \"The expected output is not correct.\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n3 0 1\\n1 4\\n\") == \"0.76772047\\n\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n3 0 1\\n1 4\\n\") == \"0.76772047\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(r'Sample Input:\\n1\\n3 0 1\\n1 4\\n') == 0.76772047\n"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n3 0 1\\n1 4\") == 0.76772047, \"The given output is incorrect. Please check the examples.\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 0.76772047, \"The output is incorrect.\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n3 0 1\\n1 4\") == \"0.76772047\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('hello teams') == '27'"
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"hello teams\") == \"27\"\n\nsample_input = \"hello teams\"\nsample_output = \"27\"\nassert sample_output == solution(sample_input)"
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"hello teams\") == \"27\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"hello teams\") == \"27\", \"Expected output: 27, got: \" + solution(\"hello teams\")"
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"hello teams\") == \"27\"\nassert solution(stdin=\"world hello\") == \"27\"\nassert solution(stdin=\"abba\") == \"27\"\nassert solution(stdin=\"a\") == \"27\"\nassert solution(stdin=\"z\") == \"27\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"hello teams\") == \"27\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"hello teams\") == \"27\", \"Output should be 27\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('hello teams') == '27', 'Sample Output'"
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"27\", \"Test case failed.\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"hello teams\") == \"27\", \"The given solution is incorrect.\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    6 3\n    1 8\n    5 4\n    7 7\n    9 2\n    16 6\n    17 10\n    4 7 2\n    6 3 1\n    12 6 3\n    ''') == 2, 'Test case 1 failed'\n\nassert solution('''\n    2 4\n    4 6\n    8 10\n    12 14\n    16 18\n    20 22\n    24 26\n    28 30\n    32 34\n    ''') == 1, 'Test case 2 failed'\n\nassert solution('''\n    1 2\n    1 3\n    1 4\n    1 5\n    2 3\n    3 5\n    4 5\n    ''') == 0, 'Test case 3 failed'\n\nassert solution('''\n    5 10\n    10 20\n    20 40\n    40 80\n    80 160\n    160 320\n    320 640\n    640 1280\n    1280 2560\n    2560 5120\n    ''') == 1, 'Test case 4 failed'\n\nassert solution('''\n    1 2\n    3 4\n    5 6\n    7 8\n    9 10\n    11 12\n    13 14\n    15 16\n    17 18\n    19 20\n    21 22\n    23 24\n    25 26\n    27 28\n    29 30\n    31 32\n    33 34\n    35 36\n    37 38\n    39 40\n    41 42\n    43 44\n    45 46\n    47 48\n    49 50\n    51 52\n    53 54\n    55 56\n    57 58\n    59 60\n    61 62\n    63 64\n    65 66\n    67 68\n    69 70\n    71 72\n    73 74\n    75 76\n    77 78\n    79 80\n    81 82\n    83 84\n    85 86\n    87 88\n    89 90\n    91 92\n    93 94\n    95 96\n    97 98\n    99 100\n    101 102\n    103 104\n    105 106\n    107 108\n    109 110\n    111 112\n    113 114\n    115 116\n    117 118\n    119 120\n    121 122\n    123 124\n    125 126\n    127 128\n    129 130\n    131 132\n    133 134\n    135 136\n    137 138\n    139 140\n    141 142\n    143 144\n    145 146\n    147 148\n    149 150\n    151 152\n    153 154\n    155 156\n    157 158\n    159 160\n    161 162\n    163 164\n    165 166\n    167 168\n    169 170\n    171 172\n    173 174\n    175 176\n    177 178\n    179 180\n    181 182\n    183 184\n    185 186\n    187 188\n    189 190\n    191 192\n    193 194\n    195 196\n    197 198\n    199 200\n    201 202\n    203 204\n    205 206\n    207 208\n    209 210\n    211 212\n    "
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n\") == 2, \"Expected output: 2\\nActual output: {}\".format(solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n\"))"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 2, \"Expected 2 but got: {}\".format(solution())"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2\nassert solution(\"5 5\\n5 5\\n5 5\\n5 5\\n5 5\") == 0\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == 0\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == 0\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == 0\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == 0"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    6 3\n    1 8\n    5 4\n    7 7\n    9 2\n    16 6\n    17 10\n    4 7 2\n    6 3 1\n    12 6 3''') == 2, \"Test 1 failed\"\n\nassert solution('''\n    6 3\n    1 8\n    5 4\n    7 7\n    9 2\n    16 6\n    17 10\n    4 7 2\n    6 3 1\n    12 6 3''') == 2, \"Test 2 failed\"\n\nassert solution('''\n    6 3\n    1 8\n    5 4\n    7 7\n    9 2\n    16 6\n    17 10\n    4 7 2\n    6 3 1\n    12 6 3''') == 2, \"Test 3 failed\"\n\nassert solution('''\n    6 3\n    1 8\n    5 4\n    7 7\n    9 2\n    16 6\n    17 10\n    4 7 2\n    6 3 1\n    12 6 3''') == 2, \"Test 4 failed\"\n\nassert solution('''\n    6 3\n    1 8\n    5 4\n    7 7\n    9 2\n    16 6\n    17 10\n    4 7 2\n    6 3 1\n    12 6 3''') == 2, \"Test 5 failed\"\n\nassert solution('''\n    6 3\n    1 8\n    5 4\n    7 7\n    9 2\n    16 6\n    17 10\n    4 7 2\n    6 3 1\n    12 6 3''') == 2, \"Test 6 failed\"\n\nassert solution('''\n    6 3\n    1 8\n    5 4\n    7 7\n    9 2\n    16 6\n    17 10\n    4 7 2\n    6 3 1\n    12 6 3''') == 2, \"Test 7 failed\"\n\nassert solution('''\n    6 3\n    1 8\n    5 4\n    7 7\n    9 2\n    16 6\n    17 10\n    4 7 2\n    6 3 1\n    12 6 3''') == 2, \"Test 8 failed\"\n\nassert solution('''\n    6 3\n    1 8\n    5 4\n    7 7\n    9 2\n    16 6\n    17 10\n    4 7 2\n    6 3 1\n    12 6 3''') == 2, \"Test 9 failed\"\n\nassert solution('''\n    6 3\n    1 8\n    5 4\n    7 7\n    9 2\n    16 6\n    17 10\n    4 7 2\n    6 3 1\n    12 6 3''') == 2, \"Test 10 failed\"\n\nassert solution('''\n    6 3\n    1 8\n    5 4\n    7 7\n    9 2\n    16 6\n    17 10\n    4 7 2\n    6 3 1\n    12 6 3''') == 2, \"Test 11 failed\"\n\nassert solution('''\n    6 3\n    1 8\n    5 4\n    7 7\n    9 2\n    16 6\n    17 10\n    4 7 2\n    6 3 1\n    12 6 3''') == 2, \"Test 12 failed\"\n\nassert solution('''\n    6 3\n    1 8\n    5 4\n    7 7\n    9 2\n    16 6\n    17 10\n    4 7 2\n    6 3 1\n    12 6 3''') == 2, \"Test 13 failed\"\n\nassert solution('''\n    6 3\n    1 8\n    5 4\n    7 7\n    9 2\n    16 6\n    17 10\n    4 7 2\n    6 3 1\n    12 6 3''') == 2, \"Test 14 failed\"\n\nassert solution('''\n    6 3\n    1 8\n    5 4\n    7 7\n    9 2\n    16 6\n    17 10\n    4 7 2\n    6 3 1\n    12 6 3''') == 2, \"Test 15 failed\"\n\nassert solution('''\n    6 3\n    1 8\n    5 4"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2\nprint(\"All test cases passed\")"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Test failed: {solution(input())}!= {output()}\"\n"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Error: {input()}!= {output}\""
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3') == 2\n\nassert solution('10 10') == 0"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Output\", \"Test Case 1 failed\""
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\") == \"26\"\nassert solution(\"5 3\\naaa\\nbbbb\\ncccc\\ndddd\\neeee\\ncaf\") == \"26\"\nassert solution(\"5 3\\naaa\\nbbbb\\ncccc\\ndddd\\neeee\\ncaf\") == \"26\"\nassert solution(\"5 3\\naaa\\nbbbb\\ncccc\\ndddd\\neeee\\ncaf\") == \"26\"\nassert solution(\"5 3\\naaa\\nbbbb\\ncccc\\ndddd\\neeee\\ncaf\") == \"26\"\nassert solution(\"5 3\\naaa\\nbbbb\\ncccc\\ndddd\\neeee\\ncaf\") == \"26\""
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == output, f\"Expected output: {output}, Received: {solution(stdin)}\"\n"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncad\") == 26\n"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 3\\na\\nb\\nc\\nd\\ne\\n') == '26'\nassert solution('5 3\\na\\nb\\nc\\nd\\ne\\n') == '26'\nassert solution('5 4\\na\\nb\\nc\\nd\\ne\\n') == '53'\nassert solution('5 5\\na\\nb\\nc\\nd\\ne\\n') == '341'\nassert solution('5 3\\na\\nb\\nc\\nd\\ne\\n') == '26'"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 26\n"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\nca\") == \"26\"\nassert solution(\"10 4\\naa\\nbb\\ncc\\ndd\\nee\\nf\") == \"12\"\n"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 3\\na\\nb\\nc\\nd\\ne\\nca\\n') == '26'\nassert solution('5 3\\na\\nb\\nc\\nd\\ne\\nca\\n\\n') == '26'\nassert solution('5 3\\na\\nb\\nc\\nd\\ne\\nca\\n\\n\\n') == '26'\nassert solution('5 3\\na\\nb\\nc\\nd\\ne\\nca\\n\\n\\n\\n\\n') == '26'\nassert solution('5 3\\na\\nb\\nc\\nd\\ne\\nca\\n\\n\\n\\n\\n\\n\\n') == '26'\nassert solution('5 3\\na\\nb\\nc\\nd\\ne\\nca\\n\\n\\n\\n\\n\\n\\n\\n\\n') == '26'"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5, 3) == 26, \"The output is incorrect.\""
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == 26\n"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\"\nassert solution(\"5 5 20\\n10 5 3 1 3\") == \"impossible\"\nassert solution(\"10 10 50\\n10 5 3 1 3\") == \"impossible\"\nassert solution(\"5 5 20\\n5 5 3 1 3\") == \"impossible\"\nassert solution(\"5 5 20\\n5 5 3 1 2\") == \"impossible\"\nassert solution(\"5 5 20\\n5 5 3 1 1\") == \"impossible\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 10 30\\n10 5 3 1 3') == '3 5 2 1 4'\nassert solution('4 5 3 2 1') == 'impossible'\nassert solution('5 5 3 2 1') == 'impossible'\nassert solution('2 2 3 2 1') == 'impossible'\nassert solution('3 3 3 2 1') == 'impossible'\nassert solution('4 4 3 2 1') == 'impossible'\nassert solution('5 5 5 2 1') == 'impossible'\nassert solution('2 2 2 2 1') == 'impossible'\nassert solution('3 3 3 3 1') == 'impossible'\nassert solution('4 4 4 3 1') == 'impossible'\nassert solution('5 5 5 3 1') == 'impossible'\nassert solution('2 2 2 3 1') == 'impossible'\nassert solution('3 3 3 3 2') == 'impossible'\nassert solution('4 4 4 4 2') == 'impossible'\nassert solution('5 5 5 4 2') == 'impossible'\nassert solution('2 2 2 4 2') == 'impossible'\nassert solution('3 3 3 4 2') == 'impossible'\nassert solution('4 4 4 4 3') == 'impossible'\nassert solution('5 5 5 4 3') == 'impossible'\nassert solution('2 2 2 4 3') == 'impossible'\nassert solution('3 3 3 4 3') == 'impossible'\nassert solution('4 4 4 4 4') == 'impossible'\nassert solution('5 5 5 4 4') == 'impossible'\nassert solution('2 2 2 4 4') == 'impossible'\nassert solution('3 3 3 4 4') == 'impossible'\nassert solution('4 4 4 4 5') == 'impossible'\nassert solution('5 5 5 4 5') == 'impossible'\nassert solution('2 2 2 4 5') == 'impossible'\nassert solution('3 3 3 4 5') == 'impossible'\nassert solution('4 4 4 4 6') == 'impossible'\nassert solution('5 5 5 4 6') == 'impossible'\nassert solution('2 2 2 4 6') == 'impossible'\nassert solution('3 3 3 4 6') == 'impossible'\nassert solution('4 4 4 4 7') == 'impossible'\nassert solution('5 5 5 4 7') == 'impossible'\nassert solution('2 2 2 4 7') == 'impossible'\nassert solution('3 3 3 4 7') == 'impossible'\nassert solution('4 4 4 4 8') == 'impossible'\nassert solution('5 5 5 4 8') == 'impossible'\nassert solution('2 2 2 4 8') == 'impossible'\nassert solution('3 3 3 4 8') == 'impossible'\nassert solution('4 4 4 4 9') == 'impossible'\nassert solution('5 5 5 4 9') == 'impossible'\nassert solution('2 2 2 4 9') == 'impossible'\nassert solution('3 3 3 4 9') == 'impossible'\nassert solution('4 4 4 4 10') == 'impossible'\nassert solution('5 5 5 4 10') == 'impossible'\nassert solution('2 2 2 4 10') == 'impossible'\nassert solution('3 3 3 4 10') == 'impossible'\nassert solution('4 4 4 4 11') == 'impossible'\nassert solution('5 5 5 4 11') == 'impossible'\nassert solution('2 2 2 4 11') == 'impossible'\nassert solution('3 3 3 4 11')"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 10 30\\n10 5 3 1 3') == '3 5 2 1 4'\nassert solution('5 10 30\\n5 3 2 1 4') == 'impossible'\nassert solution('5 10 30\\n10 5 3 4 3') == 'impossible'\nassert solution('5 10 30\\n10 5 3 1 2') == '3 5 2 1 4'\nassert solution('5 10 30\\n10 5 3 1 4') == '3 5 2 1 4'\n"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 10 30\\n10 5 3 1 3') == '3 5 2 1 4'"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3 5 2 1 4\\nimpossible\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 10 30\\n10 5 3 1 3') == '3 5 2 1 4\\n'\nassert solution('5 10 30\\n10 5 1 1 3') == 'impossible\\n'\nassert solution('5 10 30\\n10 5 2 3 3') == '3 5 4 1 2\\n'\nassert solution('5 10 30\\n10 5 3 2 2') == 'impossible\\n'\nassert solution('5 10 30\\n10 5 1 3 3') == 'impossible\\n'\nassert solution('5 10 30\\n10 5 3 1 1') == 'impossible\\n'"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\"\nassert solution(\"5 10 30\\n10 5 2 1 3\") == \"impossible\"\n"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\"\nassert solution(\"5 10 30\\n10 5 3 1 4\") == \"impossible\"\n"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '2'\nprint('All tests passed.')"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1\\n2 3\\n2 3\") == 2"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 2, \"The expected output is 2, but got {}\".format(solution())\n"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1\\n2 3\\n2 3\") == \"2\"\nassert solution(\"5\\n1 1\\n2 3\\n2 3\\n2 3\\n2 3\") == \"3\""
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(INPUT) == OUTPUT, f\"Test failed for {INPUT}, expected {OUTPUT}, got {solution(INPUT)}\""
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 1\\n2 3\\n2 3') == '2'\nassert solution('1 2\\n2 3\\n1 3') == '1'\nassert solution('2 4\\n3 5\\n4 6') == '5'\nassert solution('2 3\\n1 2\\n2 1') == '4'\nassert solution('1 3\\n3 4\\n1 1') =='shovel time!'"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1\\n2 3\\n2 3\\n\") == 2\nassert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == 4\nassert solution(\"5\\n1 1\\n2 2\\n3 3\\n4 4\\n\") == 5"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '2\\n'\nassert solution(input()) == '1\\n'\nassert solution(input()) == '1\\n'\nassert solution(input()) == '2\\n'"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1\\n2 3\\n2 3\") == \"2\\nshovel time!\"\nassert solution(\"2\\n1 1\\n2 3\\n2 2\") == \"1\\nshovel time!\"\nassert solution(\"3\\n1 1\\n2 3\\n2 3\") == \"0\\nshovel time!\"\nassert solution(\"3\\n1 1\\n2 3\\n1 1\") == \"1\\nshovel time!\""
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Test failed: Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"3\"\n"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"3\""
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4, 1, 2, 1, 2) == 3, \"Expected 3, got {}\".format(solution(4, 1, 2, 1, 2))"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '3\\n'\nassert solution(stdin) == '3\\n'\nassert solution(stdin) == '3\\n'"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 3, \"The output should be 3, but it is {}\".format(solution(3))"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"3\"\n"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"3\" # example 1\nassert solution(\"5\\n1 2 3 1\\n1 2 4 5\") == \"3\" # example 2\nassert solution(\"6\\n1 2 3 4\\n1 2 4 5\\n1 2 5 6\") == \"3\" # example 3\nassert solution(\"7\\n1 2 3 4\\n1 2 4 5\\n1 2 5 6\\n1 2 6 7\") == \"3\" # example 4\nassert solution(\"8\\n1 2 3 4\\n1 2 4 5\\n1 2 5 6\\n1 2 6 7\\n1 2 7 8\") == \"3\" # example 5"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2) == 3, \"Test 1 failed\"\nassert solution(4) == 3, \"Test 2 failed\""
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n1 2 1 2') == '3'\nassert solution('5\\n1 2 3 4') == '4'\nassert solution('6\\n1 2 3 4 5') == '5'"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4) == '3'\n\nassert solution(2) == '2'\n\nassert solution(5) == '5'"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Output: {solution(input())}, Expected Output: {expected_output}\""
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4 999999937\") == \"79\\n\"\n"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '79'\n"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"79\\n\", solution(stdin)"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4 999999937\") == \"79\\n\"\n"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 79, \"The function should return 79, but it returned {}\".format(solution())"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4 999999937\") == \"79\"\nassert solution(\"10 10 1000000007\") == \"249\"\nassert solution(\"5 5 7777777777777\") == \"1089\"\n\nfrom typing import List"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4 999999937\") == 79\n"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 79"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '79\\n', 'The function should return the output 79 for the given sample input.'"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n4 +zucchini +mozzarella +mushrooms -artichoke\") == [\"zucchini\", \"mozzarella\", \"mushrooms\", \"artichoke\"]\n\nassert solution(\"1\\n5 +lemon +pineapple -grapes -garlic -mushrooms +spinach\\n3 +pepperoni +mushrooms\\n2 +cheese +olive oil +beef\\n1 +zucchini +olive oil +tomato\\n-spinach -grapes\") == [\"zucchini\", \"lemon\", \"pineapple\", \"pepperoni\", \"spinach\", \"grapes\", \"garlic\", \"mushrooms\", \"olive oil\", \"beef\", \"olive oil\", \"tomato\"]"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"1\\n4 +zucchini +mozzarella +mushrooms -artichoke\") == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\"\n\nfrom typing import List"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n4 +zucchini +mozzarella +mushrooms -artichoke\") == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\"\n\nimport sys\nfrom collections import defaultdict"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'zucchini\\nmozzarella\\nmushrooms\\nartichoke\\n', \"Expected output: zucchini\\nmozzarella\\nmushrooms\\nartichoke\\n, but got: \" + solution(stdin)"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    1\n    4 +zucchini +mozzarella +mushrooms -artichoke\n    ''') == 'zucchini mozzarella mushrooms artichoke'\n\nassert solution('''\n    2\n    4 +zucchini +mozzarella +mushrooms +artichoke +spinach\n    1 +tomato +pepperoni +onion\n    ''') == 'tomato pepperoni onion'\n\nassert solution('''\n    3\n    1 +chicken +fish +rabbit +hippopotamus\n    ''') == 'chicken fish rabbit hippopotamus'\n\nassert solution('''\n    4\n    1 +pizza +burger +beef +pancake\n    ''') == 'pizza burger beef pancake'\n\nassert solution('''\n    5\n    4 +zucchini +mozzarella +mushrooms -artichoke +spinach +tomato +pepperoni +onion +cheese\n    ''') == 'zucchini mozzarella mushrooms artichoke'"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"zucchini\", \"Solution should return 'zucchini'\""
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n4 +zucchini +mozzarella +mushrooms -artichoke\") == [\"zucchini\", \"mozzarella\", \"mushrooms\", \"artichoke\"]"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"zucchini\", \"Your solution is not correct.\"\n\nfrom typing import List"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n4 +zucchini +mozzarella +mushrooms -artichoke\") == \"zucchini mozzarella mushrooms artichoke\\n\"\nassert solution(\"2\\n5 +pineapple +banana +strawberries +oranges\\n1 +mushrooms +onion\\n2 +tomato -pineapple -banana -strawberries -oranges\") == \"pineapple mushrooms onion\\n\"\nassert solution(\"3\\n1 +banana -cherry -apple -orange\\n2 +mushrooms +tomato\\n3 +pineapple -kiwi -grapefruit -banana\") == \"banana cherry apple orange\\n\"\n"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"zucchini mozzarella mushrooms artichoke\", \"Expected output: zucchini mozzarella mushrooms artichoke, got {}\".format(solution(input()))"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"The function should return '{expected_output}', but it returns '{solution(input())}'\"\n"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\nPP\\nRR\\nPS\\nSS\") == \"PS\\nPP\\nRR\\nSS\"\nassert solution(\"4 3\\nPP\\nRR\\nPS\\nSS\") == \"PS\\nPP\\nRR\\nSS\"\nassert solution(\"5 6\\nP\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP\\nS\\nR\\nP"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'PS\\nPP\\nRR\\nSS\\n'"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'PS\\nPP\\nRR\\nSS\\n', 'Your solution should return \"PS\\nPP\\nRR\\nSS\\n\", but it returned \"{}\"'.format(solution(stdin))"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\nPP\\nRR\\nPS\\nSS\") == \"PS\\nPP\\nRR\\nSS\\n\"\nassert solution(\"5 3\\nPPPPPPPPP\\nRRRRRRRRR\\nSSSSSSSSSS\\nSSS\\n\") == \"PPPPPPPPP\\nRRRRRRRRR\\nSSSSSSSSSS\\nSSS\\n\"\nassert solution(\"3 5\\nPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\nPP\\nRR\\nPS\\nSS\") == [\"PS\", \"PP\", \"RR\", \"SS\"]\nassert solution(\"3 4\\nRR\\nPS\\nPP\\nSS\") == [\"PP\", \"RR\", \"PS\", \"SS\"]\nassert solution(\"3 4\\nPS\\nRR\\nPP\\nSS\") == [\"RR\", \"PS\", \"PP\", \"SS\"]\nassert solution(\"3 4\\nSS\\nPP\\nRR\\nPS\") == [\"PP\", \"RR\", \"PS\", \"SS\"]\nassert solution(\"3 4\\nPP\\nSS\\nRR\\nPS\") == [\"SS\", \"RR\", \"PS\", \"PP\"]\nassert solution(\"3 4\\nSS\\nRR\\nPP\\nPP\") == [\"SS\", \"RR\", \"PP\", \"PP\"]\nassert solution(\"3 4\\nPP\\nRR\\nSS\\nPS\") == [\"RR\", \"PS\", \"SS\", \"PP\"]\nassert solution(\"3 4\\nRR\\nSS\\nPP\\nPP\") == [\"SS\", \"PP\", \"SS\", \"RR\"]\nassert solution(\"3 4\\nSS\\nPP\\nRR\\nSS\") == [\"SS\", \"RR\", \"PP\", \"SS\"]\nassert solution(\"3 4\\nPP\\nRR\\nSS\\nSS\") == [\"RR\", \"SS\", \"PP\", \"PP\"]\nassert solution(\"3 4\\nRR\\nSS\\nSS\\nPP\") == [\"SS\", \"SS\", \"PP\", \"SS\"]\nassert solution(\"3 4\\nSS\\nSS\\nPP\\nPP\") == [\"SS\", \"SS\", \"PP\", \"SS\"]\nassert solution(\"3 4\\nPP\\nSS\\nSS\\nSS\") == [\"SS\", \"SS\", \"SS\", \"PP\"]\nassert solution(\"3 4\\nSS\\nSS\\nSS\\nSS\") == [\"SS\", \"SS\", \"SS\", \"SS\"]\nassert solution(\"3 4\\nPP\\nSS\\nSS\\nSS\") == [\"SS\", \"SS\", \"SS\", \"SS\"]\nassert solution(\"3 4\\nSS\\nSS\\nSS\\nSS\") == [\"SS\", \"SS\", \"SS\", \"SS\"]\n"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\nPP\\nRR\\nPS\\nSS\") == \"PS\\nPP\\nRR\\nSS\""
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\nPP\\nRR\\nPS\\nSS\\n\") == \"PS\\nPP\\nRR\\nSS\\n\"\nassert solution(\"3 4\\nPP\\nP\\nRR\\nSS\\n\") == \"PP\\nRR\\nSS\\n\"\nassert solution(\"3 4\\nPP\\nP\\nRR\\nP\\nSS\\n\") == \"PP\\nRR\\nSS\\n\"\nassert solution(\"3 4\\nPP\\nP\\nRR\\nPS\\nP\\nSS\\n\") == \"PP\\nP\\nRR\\nSS\\n\""
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 288, \"Your solution is incorrect.\""
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 288, \"Incorrect solution\""
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(None) == 'wrong input format', 'Input format is not valid'\n\nc, d = map(float, input().split())\nrain = list(map(int, input().split()))\n\nT = int(input())"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0') == '288'\nassert solution('1\\n10 20\\n2 30\\n1 40\\n5 60\\n10 70\\n15 80\\n20 90') == '90'\nassert solution('2\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0') == '0'\n"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5) == 288, \"Output should be 288\""
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0.1 2.0\\n0\\n0\\n0\\n0\") == 288"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\"\n) == \"288\""
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n') == '288'\nassert solution('5\\n0.1 2.0\\n1000\\n1000\\n1000\\n') == '10000'\nassert solution('5\\n0.1 2.0\\n0\\n0\\n0\\n1000\\n') == '4000'\nassert solution('5\\n0.1 2.0\\n1000\\n1000\\n1000\\n1000\\n') == '10000'\nassert solution('5\\n0.1 2.0\\n1000\\n1000\\n1000\\n1000\\n') == '10000'\nassert solution('5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n') == '0'"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"288\\n\", \"Output should be '288'.\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"288\\n\", solution(input())"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('pastimeofwhimsy') == 1\n"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"pastimeofwhimsy\") == 1, \"Expected 1, got {}\".format(solution(\"pastimeofwhimsy\"))"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"pastimeofwhimsy\") == \"1\", \"The meow factor of pastimeofwhimsy should be 1.\""
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('pastimeofwhimsy') == 1"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('pastimeofwhimsy') == 1, \"Test case 1 failed\"\n\nfrom typing import List"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(pastimeofwhimsy) == 1"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('pastimeofwhimsy') == 1, 'Expected output to be 1, but got {} instead'.format(solution('pastimeofwhimsy'))"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"pastimeofwhimsy\") == 1, \"Incorrect output for sample input\"\nassert solution(\"hello\") == 0, \"Incorrect output for sample input\"\nassert solution(\"abcde\") == 4, \"Incorrect output for sample input\"\nassert solution(\"hello world\") == 1, \"Incorrect output for sample input\""
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"pastimeofwhimsy\") == \"1\" # Solution 1"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"pastimeofwhimsy\") == \"1\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 'YES'\n"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 4\\n1 2 2 1 ') == 'YES\\n'\n"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 4\\n1 2 2 1 ') == 'YES'\n\nassert solution('3 4\\n1 1 1 1 ') == 'NO'\n\nassert solution('3 4\\n1 1 1 1\\n2 3 4 5 6\\n7 8 9 10 11\\n') == 'YES'\n\nassert solution('3 4\\n1 1 1 1\\n2 3 4 5 6\\n7 8 9 10 11\\n12 13 14 15 16\\n') == 'NO'"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 4\\n1 2 2 1 ') == 'YES'"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(f\"3 4\\n1 2 2 1\\n\") == \"YES\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \\n\") == \"YES\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\\n\"\nassert solution(\"3 2\\n3 2 \") == \"NO\\n\"\nassert solution(\"3 4\\n1 2 2 1 3\\n\") == \"YES\\n\"\nassert solution(\"3 4\\n1 2 2 1\\n3 2 \") == \"NO\\n\"\nassert solution(\"3 4\\n1 2 2 1 3\\n2 4 4 \") == \"YES\\n\"\nassert solution(\"3 4\\n1 2 2 1\\n3 2\\n2 4 4 \") == \"NO\\n\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \\n\") == \"YES\"\nassert solution(\"3 5\\n1 2 3 4 5 \\n\") == \"NO\"\nassert solution(\"3 4\\n1 2 3 4 \\n\") == \"YES\"\nassert solution(\"3 5\\n1 2 3 4 5 \\n\") == \"NO\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\"\n"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \\n\") == \"YES\", \"Solution should return 'YES' for the given input.\"\nassert solution(\"2 4\\n1 1 2 1 \\n\") == \"NO\", \"Solution should return 'NO' for the given input.\""
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3/1\\n\"\n"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 2\\n3\\n4\") == \"3/1\"\nassert solution(\"5\\n1 2\\n3\\n4\") == \"16/2\"\nassert solution(\"6\\n1 2\\n3\\n4\") == \"16/2\"\nassert solution(\"7\\n1 2\\n3\\n4\") == \"3/1\"\nassert solution(\"8\\n1 2\\n3\\n4\") == \"16/2\"\nassert solution(\"9\\n1 2\\n3\\n4\") == \"16/2\"\nassert solution(\"10\\n1 2\\n3\\n4\") == \"3/1\"\nassert solution(\"11\\n1 2\\n3\\n4\") == \"16/2\"\nassert solution(\"12\\n1 2\\n3\\n4\") == \"3/1\"\nassert solution(\"13\\n1 2\\n3\\n4\") == \"16/2\"\nassert solution(\"14\\n1 2\\n3\\n4\") == \"16/2\"\nassert solution(\"15\\n1 2\\n3\\n4\") == \"16/2\"\nassert solution(\"16\\n1 2\\n3\\n4\") == \"3/1\"\nassert solution(\"17\\n1 2\\n3\\n4\") == \"16/2\"\nassert solution(\"18\\n1 2\\n3\\n4\") == \"16/2\"\nassert solution(\"19\\n1 2\\n3\\n4\") == \"16/2\"\nassert solution(\"20\\n1 2\\n3\\n4\") == \"16/2\"\nassert solution(\"21\\n1 2\\n3\\n4\") == \"16/2\"\nassert solution(\"22\\n1 2\\n3\\n4\") == \"16/2\"\nassert solution(\"23\\n1 2\\n3\\n4\") == \"16/2\"\nassert solution(\"24\\n1 2\\n3\\n4\") == \"16/2\"\nassert solution(\"25\\n1 2\\n3\\n4\") == \"16/2\"\nassert solution(\"26\\n1 2\\n3\\n4\") == \"16/2\"\nassert solution(\"27\\n1 2\\n3\\n4\") == \"16/2\"\nassert solution(\"28\\n1 2\\n3\\n4\") == \"16/2\"\nassert solution(\"29\\n1 2\\n3\\n4\") == \"16/2\"\nassert solution(\"30\\n1 2\\n3\\n4\") == \"16/2\"\nassert solution(\"31\\n1 2\\n3\\n4\") == \"16/2\"\nassert solution(\"32\\n1 2\\n3\\n4\") == \"16/2\"\nassert solution(\"33\\n1 2\\n3\\n4\") == \"16/2\"\nassert solution(\"34\\n1 2\\n3\\n4\") == \"16/2\"\nassert solution(\"35\\n1 2\\n3\\n4\") == \"16/2\"\nassert solution(\"36\\n1 2\\n3\\n4\") == \"16/2\"\nassert solution(\"37\\n1 2\\n3\\n4\") == \"16/2\"\nassert solution(\"38\\n1 2\\n3\\n4\") == \"16/2\"\nassert solution(\"39\\n1 2\\n3\\n4\") == \"16/2\"\nassert solution(\"40\\n1 2\\n3\\n4\") == \"16/2\"\nassert solution(\"41\\n1 2\\n3\\n4\") == \"16/2\"\nassert solution(\"42\\n1 2\\n3\\n4\") == \"16/2\"\nassert solution(\"43\\n1 2\\n3\\n4\") == \"16/2\"\nassert solution(\"44\\n1 2\\n3\\n4\") == \"16/2\"\nassert solution(\"45\\n1 2\\n"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 2\\n3\\n4\\n\") == \"3/1\\n\"\nassert solution(\"4\\n1 2\\n3\\n4\\n\") == \"1/4\\n\"\nassert solution(\"5\\n1 2\\n3\\n4\\n\") == \"1/5\\n\"\nassert solution(\"8\\n1 2\\n3\\n4\\n\") == \"3/2\\n\"\nassert solution(\"9\\n1 2\\n3\\n4\\n\") == \"5/3\\n\""
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == output, f\"Solution is incorrect. Expected: {output}, Received: {solution(stdin)}\""
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Test case {i + 1} failed: {solution(input())}!= {output()}\"\nfor i in range(T):\n    assert solution(input()) == output(), f\"Test case {i + 1} failed: {solution(input())}!= {output()}\""
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 2\\n3\\n4\\n\") == \"3/1\\n7.5\"\n"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 2\\n3\\n4\") == \"3/1\", \"Sample Output not correct.\"\n\nfrom sympy.ntheory import isprime"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 2\\n3\\n4\\n\") == \"3/1\"\nassert solution(\"10\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n\") == \"2/2\"\nassert solution(\"1\\n1 1\\n\") == \"1/1\"\nassert solution(\"1\\n\") == \"1/1\"\nassert solution(\"1\\n2\\n3\\n4\\n\") == \"3/1\""
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n3\\n4\") == \"3/1\""
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test failed. Output: {}\\nExpected output: {}\".format(solution(input()), output())"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1.114672365\", \"Expected 1.114672365, got: {}\".format(solution(stdin))"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n2\n1.2 10.2\n2.2 15.2\n''') == '1.114672365\\n'\n"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == \"1.114672365\\n\"\n"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == \"1.114672365\\n\"\nassert solution(\"5\\n1.1 10.1\\n2.2 15.2\\n3.3 18.3\\n4.4 21.4\") == \"1.289138339\\n\""
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == 1.114672365\nprint(\"All test cases pass\")"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\\n\") == \"1.114672365\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n1.2 10.2\\n2.2 15.2') == '1.114672365\\n'"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1.114672365\", \"The solution is incorrect\""
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Expected: {}, Received: {}\".format(output(), solution(input()))"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == 1.114672365\nassert solution(\"3\\n1.5 12.5\\n3.5 17.5\\n1.5 20.5\") == 2.6555278095\nassert solution(\"100000\\n\") == 0\nassert solution(\"5\\n1.2 10.2\\n2.2 15.2\") == 1.114672365\nassert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == 1.114672365\nassert solution(\"3\\n1.5 12.5\\n3.5 17.5\\n1.5 20.5\") == 2.6555278095\nassert solution(\"100000\\n\") == 0\nassert solution(\"5\\n1.2 10.2\\n2.2 15.2\") == 1.114672365\nassert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == 1.114672365\nassert solution(\"3\\n1.5 12.5\\n3.5 17.5\\n1.5 20.5\") == 2.6555278095\nassert solution(\"100000\\n\") == 0"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3\\n1 2 3 2\", \"Incorrect output\"\n"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 3\\n1 1\\n2 1\\n2 0\") == \"3\\n1 2 3 2\"\n"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\\n1 2 3 2\"\n"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n0 3\\n1 1\\n2 1\\n2 0') == '3\\n1 2 3 2'\nassert solution('5\\n1 0\\n1 2\\n2 3\\n3 2\\n3 1\\n4 1\\n4 0\\n5 1\\n5 0\\n') == '4\\n1 2 3 4 5'\nassert solution('6\\n0 0\\n1 0\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n2 0\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\\n3 0\\n3 1\\n3 2\\n3 3\\n3 4\\n3 5\\n3 6\\n4 0\\n4 1\\n4 2\\n4 3\\n4 4\\n4 5\\n4 6\\n5 0\\n5 1\\n5 2\\n5 3\\n5 4\\n5 5\\n5 6\\n6 0\\n6 1\\n6 2\\n6 3\\n6 4\\n6 5\\n6 6\\n') == '6\\n1 3 4 5 6'"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '3\\n1 2 3 2', 'Test Case 1'"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0 3\\n1 1\\n2 1\\n2 0') == '3\\n1 2 3 2\\n'\nassert solution('4\\n0 3\\n1 1\\n2 1\\n2 0') == '3\\n1 2 3 2\\n'\nassert solution('5\\n0 3\\n1 1\\n2 1\\n2 0') == '4\\n1 2 3 4 2\\n'\nassert solution('6\\n0 3\\n1 1\\n2 1\\n2 0') == '4\\n1 2 3 4 2\\n'\n\nfrom typing import List"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3\\n1 2 3 2\"\n"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"The solution is incorrect. Please check the input and output examples provided.\""
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n0 3\\n1 1\\n2 1\\n2 0\") == \"3\\n1 2 3 2\"\nassert solution(\"4\\n0 3\\n1 1\\n2 2\\n3 1\") == \"3\\n2 2 3 1\"\nassert solution(\"4\\n0 3\\n1 2\\n2 1\\n3 1\") == \"3\\n1 2 3 1\"\nassert solution(\"4\\n0 3\\n1 2\\n2 1\\n2 1\") == \"3\\n1 2 2 1\"\nassert solution(\"4\\n0 3\\n1 2\\n2 1\\n3 2\") == \"3\\n1 2 2 2\"\nassert solution(\"4\\n0 3\\n1 1\\n2 2\\n3 1\") == \"3\\n1 1 2 1\"\nassert solution(\"4\\n0 3\\n1 2\\n2 1\\n3 2\") == \"3\\n1 2 2 2\""
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}\\nGot: {solution(stdin)}\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == [\"1\", \"2\", \"3\"]"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"1\\n2\\n3\\n\"\nassert solution(\"3\\n1 1 2\\n\") == \"none\\n\"\nassert solution(\"4\\n1 2 1 3\\n\") == \"none\\n\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\\n2\\n3\\n\", \"Please provide the sample inputs and output\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test case failed\"\nfor i in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    result = []\n    \n    for num in x:\n        for j in range(1, n+1):\n            left, right = 0, j-1\n            while left <= right:\n                mid = (left + right) // 2\n                if mid * mid <= num * num:\n                    left = mid + 1\n                else:\n                    right = mid - 1\n            result.append(mid)\n    \n    if len(result) == 0:\n        print(\"none\")\n    else:\n        print(sorted(result)[-1])"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n1 2 3') == '1\\n2\\n3\\n', \"Expected output: '1\\n2\\n3\\n'\"\nassert solution('3\\n1 1 2') == 'none\\n', \"Expected output: 'none\\n'\"\nassert solution('4\\n1 2 1 3') == 'none\\n', \"Expected output: 'none\\n'\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\") == \"1\\n2\\n3\\n\", \"First Test\"\nassert solution(\"3\\n1 1 2\") == \"none\\n\", \"Second Test\"\nassert solution(\"4\\n1 2 1 3\") == \"none\\n\", \"Third Test\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"\"\"1\\n2\\n3\"\"\"\nassert solution == \"\"\"none\"\"\"\nassert solution == \"\"\"none\"\"\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    '''\n    3\n    1 2 3\n    '''\n) == '''\n1\n2\n3\n'''\n\nassert solution(\n    '''\n    3\n    1 1 2\n    '''\n) == '''\nnone\n'''\n\nassert solution(\n    '''\n    4\n    1 2 1 3\n    '''\n) == '''\nnone\n'''"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1\\n2\\n3\\nnone\"\nassert solution() == \"none\"\nassert solution() == \"none\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"5\", \"Test case 1 failed\"\nassert solution(4) == \"3\", \"Test case 2 failed\"\nassert solution(5) == \"5\", \"Test case 3 failed\"\nassert solution(6) == \"3\", \"Test case 4 failed\"\nassert solution(7) == \"5\", \"Test case 5 failed\"\nassert solution(8) == \"5\", \"Test case 6 failed\"\nassert solution(9) == \"5\", \"Test case 7 failed\"\nassert solution(10) == \"5\", \"Test case 8 failed\"\nassert solution(11) == \"5\", \"Test case 9 failed\"\nassert solution(12) == \"5\", \"Test case 10 failed\"\nassert solution(13) == \"5\", \"Test case 11 failed\"\nassert solution(14) == \"3\", \"Test case 12 failed\"\nassert solution(15) == \"5\", \"Test case 13 failed\"\nassert solution(16) == \"3\", \"Test case 14 failed\"\nassert solution(17) == \"5\", \"Test case 15 failed\"\nassert solution(18) == \"5\", \"Test case 16 failed\"\nassert solution(19) == \"5\", \"Test case 17 failed\"\nassert solution(20) == \"5\", \"Test case 18 failed\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == \"5\", \"Incorrect output\"\n"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\n2 1 0 1 2 3 3\") == \"5\\n5\" # correct"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"5\\n\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"5\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '5\\n'"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"5\\n\" + \"5\"\nassert solution(stdin) == \"10\\n\" + \"10 5 10 5 10 5 5\"\nassert solution(stdin) == \"15\\n\" + \"20 10 10 10 10 10 10 10 10 10 10 10\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n2 1 0 1 2 3 3\") == \"5\"\n"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 5, \"The output of the solution should be 5, but it is not.\""
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####') == '-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1'\nassert solution('3 3\\n..##\\n#...#\\n#.##\\n####\\n..##') == '-1 -1 -1 -1 -1\\n-1 0 0 0 0\\n-1 1 1 1 1\\n-1 2 2 2 2\\n-1 -1 -1 -1 -1'\nassert solution('5 5\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####') == '-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1'\nassert solution('2 3\\n..##\\n#...#\\n#.##\\n####\\n..##') == '-1 -1 -1 -1 -1\\n-1 0 0 0 0\\n-1 0 0 0 0\\n-1 0 0 0 0\\n-1 -1 -1 -1 -1'\nassert solution('1 1\\n#...\\n###\\n#..\\n###\\n#...\\n###\\n#..\\n###\\n#...\\n###\\n###') == '-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1'\nassert solution('5 3\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####') == '-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1'\nassert solution('5 1\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####') == '-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1'"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n5 6\n#####\n"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####') == '-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1'\nassert solution('10 10\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\n#....#\\"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n') == '-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\\n'\n"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Actual: {solution(input())}\""
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    5 6\n#####\n"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n#####\\n#_###\\n#_M.#\\n#__.#\\n#####\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\"\n\nassert solution(\"5 6\\n#####\\n#..#\\n#_###\\n#__##\\n#####\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\"\n\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\""
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\"\n"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\") == [\"-1\", \"4\", \"5\", \"6\", \"-1\"]"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"\"\"-1 -1 -1 -1 -1\n-1 4 5 6 -1\n-1 4 -1 -1 -1\n-1 1 0 1 -1\n-1 3 1 2 -1\n-1 -1 -1 -1 -1\"\"\"\n"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == 6\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 5\") == 0"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Output mismatch\""
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == \"6\\n\", \"Incorrect solution\"\n\nsample_input = \"\"\"\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n\"\"\"\n\nprint(solution(sample_input))"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == 6, \"The given code is incorrect.\""
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3') == '6'\n"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == 6\nassert solution(\"5 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n4 5 3\\n5 6 4\") == 12\nassert solution(\"5 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n4 5 3\\n5 6 4\\n6 7 5\") == 18"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3') == '6'"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n') == '6\\n'"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n') == 6\nassert solution('4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n1 4 1') == 6\nassert solution('4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n') == 6\nassert solution('4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n1 4 1') == 6"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == \"6\\n\\nImpossible\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"01001\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Your code is incorrect.\"\nelse:\n    print(\"impossible\")\n\nimport itertools"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\"\nassert solution(\"5 3 3 2\") == \"011011\"\nassert solution(\"1 1 1 1\") == \"01000000\"\nassert solution(\"2 2 2 2\") == \"01010101\"\nassert solution(\"10 10 10 10\") == \"0101010101010101\"\nassert solution(\"10 10 10 100\") == \"01010101010101010\"\nassert solution(\"5 3 3 20\") == \"0110110110110110\"\nassert solution(\"3 4 2 10\") == \"0100101010101010\"\nassert solution(\"1 1 1 10\") == \"0100000000000000\"\nassert solution(\"2 2 2 20\") == \"01010101010101010\"\nassert solution(\"10 10 10 1000\") == \"010101010101010100\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\"\nassert solution(\"5 4 2 1\") == \"10110\"\nassert solution(\"3 5 2 1\") == \"11000\"\nassert solution(\"3 5 3 1\") == \"11000\"\nassert solution(\"4 5 2 1\") == \"11000\"\nassert solution(\"5 5 2 1\") == \"11000\"\nassert solution(\"3 4 2 2\") == \"01010\"\nassert solution(\"3 4 2 3\") == \"01010\"\nassert solution(\"5 4 2 2\") == \"10110\"\nassert solution(\"5 4 2 3\") == \"10110\"\nassert solution(\"3 5 2 2\") == \"11000\"\nassert solution(\"3 5 2 3\") == \"11000\"\nassert solution(\"5 5 2 2\") == \"11000\"\nassert solution(\"5 5 2 3\") == \"11000\"\nassert solution(\"3 4 2 4\") == \"01001\"\nassert solution(\"3 4 2 5\") == \"01001\"\nassert solution(\"5 4 2 4\") == \"10110\"\nassert solution(\"5 4 2 5\") == \"10110\"\nassert solution(\"3 5 2 4\") == \"11000\"\nassert solution(\"3 5 2 5\") == \"11000\"\nassert solution(\"5 5 2 4\") == \"11000\"\nassert solution(\"5 5 2 5\") == \"11000\"\nassert solution(\"3 4 2 6\") == \"01001\"\nassert solution(\"3 4 2 7\") == \"01001\"\nassert solution(\"5 4 2 6\") == \"10110\"\nassert solution(\"5 4 2 7\") == \"10110\"\nassert solution(\"3 5 2 6\") == \"11000\"\nassert solution(\"3 5 2 7\") == \"11000\"\nassert solution(\"5 5 2 6\") == \"11000\"\nassert solution(\"5 5 2 7\") == \"11000\"\nassert solution(\"3 4 2 8\") == \"01001\"\nassert solution(\"3 4 2 9\") == \"01001\"\nassert solution(\"5 4 2 8\") == \"10110\"\nassert solution(\"5 4 2 9\") == \"10110\"\nassert solution(\"3 5 2 8\") == \"11000\"\nassert solution(\"3 5 2 9\") == \"11000\"\nassert solution(\"5 5 2 8\") == \"11000\"\nassert solution(\"5 5 2 9\") == \"11000\"\nassert solution(\"3 4 2 10\") == \"01001\"\nassert solution(\"3 4 2 11\") == \"01001\"\nassert solution(\"5 4 2 10\") == \"10110\"\nassert solution(\"5 4 2 11\") == \"10110\"\nassert solution(\"3 5 2 10\") == \"11000\"\nassert solution(\"3 5 2 11\") == \"11000\"\nassert solution(\"5 5 2 10\") == \"11000\"\nassert solution(\"5 5 2 11\") == \"11000\"\nassert solution(\"3 4 2 12\") == \"01001\"\nassert solution(\"3 4 2 13\") == \"01001\"\nassert solution(\"5 4 2 12\") == \"10110\"\nassert solution(\"5 4 2 13\") == \"10110\"\nassert solution(\"3 5 2 12\") == \""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\\n\"\n"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 4, 6) == \"possible\"\nassert solution(1, 1, 1) == \"impossible\"\nassert solution(1, 2, 2) == \"< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\nimpossible\"\n\nfrom typing import List"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 4, 6) == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n\"\n"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('example.in', 'r')) == 'possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3'"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4''') == 'possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3'"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n') == 'possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3'\nassert solution('3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n') == 'possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3'\nassert solution('3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n') == 'possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3'\nassert solution('3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n') == 'possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3'\n"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"possible\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution) == \"possible\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\n"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n\"\"\"\n) == \"possible\"\nassert solution(\n    \"\"\"\n4 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n\"\"\"\n) == \"possible\"\nassert solution(\n    \"\"\"\n3 3 4\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n\"\"\"\n) == \"impossible\"\nassert solution(\n    \"\"\"\n3 3 4\n1 1\n2 2\n3 3\n4 4\n\"\"\"\n) == \"impossible\"\nassert solution(\n    \"\"\"\n3 3 4\n1 1\n1 2\n2 2\n2 3\n3 3\n4 4\n\"\"\"\n) == \"impossible\"\nassert solution(\n    \"\"\"\n3 3 4\n1 1\n1 2\n1 2\n1 2\n1 2\n1 2\n\"\"\"\n) == \"possible\"\nassert solution(\n    \"\"\"\n3 3 4\n1 1\n1 2\n1 2\n1 2\n1 2\n2 2\n\"\"\"\n) == \"possible\"\nassert solution(\n    \"\"\"\n3 3 4\n1 1\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n\"\"\"\n) == \"possible\"\nassert solution(\n    \"\"\"\n3 3 4\n1 1\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n\"\"\"\n) == \"possible\"\nassert solution(\n    \"\"\"\n3 3 4\n1 1\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n\"\"\"\n) == \"possible\"\nassert solution(\n    \"\"\"\n3 3 4\n1 1\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2.0\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == \"2.0\\n\"\nassert solution(\"0 0 1\\n0 1 1\\n1 0 2\\n2 2 4\") == \"2.0\\n\"\nassert solution(\"0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == \"2.0\\n\"\nassert solution(\"0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == \"2.0\\n\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == \"2.0\\n\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=f) == output, f\"Test failed: expected {output}, got {solution(stdin=f)}\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == 2.0"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == 2.0, \"The solution is incorrect\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\") == 0.0, \"The solution is incorrect\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2.0"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == \"2.0\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0 0 1\\n0 1 1\\n2 0 3\\n2 1 3') == '2.0\\n'\n"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2.0\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1\\n4 2 3 1 6 7\\n5 5 1 1 3 4 7') == '4\\n'\nassert solution('7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7') == '4\\n'\nassert solution('3\\n7 1 4 5 6 2\\n5 5 1 1 3 4 7') == '4\\n'\n\nfrom typing import List"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Output should be '{expected}', but got '{solution(input())}'\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == 4, \"Luka can delete the second, fourth, sixth and seventh columns.\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"4\\n\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == \"4\", \"Incorrect output\"\n"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == 4, \"Luka must delete the second, fourth, sixth and seventh columns.\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\\n\") == \"4\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == 4\nassert solution(\"5\\n1 2 3 4 5\\n5 5 3 1 2 4\\n7 3 4 1 5 2\\n6 1 5 2 7 4\\n4 5 7 3 6 2\") == 1\nassert solution(\"10\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == 4\nassert solution(\"8\\n1 2 3 4 5 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == 2\nassert solution(\"5\\n1 2 3 4 5\\n5 5 1 1 3 4 7\\n7 3 4 1 5 2\\n6 1 5 2 7 4\\n4 5 7 3 6 2\") == 4"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2') == '4\\n'\n"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == \"4\\n\"\n"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"Tom the Straight Builder has finally finished building his Great Wall. Being a Straight Builder he has of course built a wall with no bends in it at all. And as far as you can see he has built this wall infinitely long and infinitely thin.\\nOn one side of the wall Tom\u2019s wife Ellen has decided she wants to make a perfect lawn. It is not very important to Ellen (or to Tom for that matter) what shape it has or exactly where it is located, but Ellen requires the lawn to be at least $L$ square meters.\\nTo guard this pristine lawn from annoying trespassers Ellen has brought her dog William. William is a vicious dog and will attack any human being except Ellen upon sight. William can not cross the wall in any way. To reduce his own mutilations Tom has decided to tie William up with a chain to a pole and minimize the area he can cover while still being able to cover the whole lawn. The pole has been placed at location $(0,0)$ and Tom is not able to move it (it is after all the center of the universe).\\nTom needs to know what length of dog chain he needs to buy in the hardware store. Specifically he wants to know the shortest length chain in whole meters he can buy so that the dog is able to cover an area of at least $L$ square meters.\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\\n\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\"\nassert solution(\"4\\n1000 1000\") == \"4\"\nassert solution(\"4\\n100000 100000\") == \"6\"\nassert solution(\"4\\n0 0\\n100000 100000\") == \"2\"\n"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\\n\"\n"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Test case failed: {solution(input())}!= {expected}\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\\n\"\nassert solution(\"5\\n100 100\\n100 0\") == \"2\\n\"\nassert solution(\"2\\n10 10\\n-10 10\") == \"1\\n\"\nassert solution(\"4\\n20 20\\n-20 20\") == \"3\\n\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\"\n"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output\nprint(\"Test Passed\")"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n-10 0\\n-10 10') == '2\\n'\nprint(\"Test passed!\")"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 5') == '0\\n'\nassert solution('10 20') == '1\\n'\nassert solution('100 100') == '1\\n'\nassert solution('1000 1000') == '1\\n'\nassert solution('10000 10000') == '1\\n'\nassert solution('100000 100000') == '1\\n'\nassert solution('1000000 1000000') == '1\\n'\nassert solution('10000000 10000000') == '1\\n'\nassert solution('100000000 100000000') == '1\\n'\nassert solution('1000000000 1000000000') == '1\\n'\nassert solution('10000000000 10000000000') == '1\\n'\nassert solution('100000000000 100000000000') == '1\\n'\nassert solution('1000000000000 1000000000000') == '1\\n'\nassert solution('10000000000000 10000000000000') == '1\\n'\nassert solution('100000000000000 100000000000000') == '1\\n'\nassert solution('1000000000000000 1000000000000000') == '1\\n'\nassert solution('10000000000000000 10000000000000000') == '1\\n'\nassert solution('100000000000000000 100000000000000000') == '1\\n'\nassert solution('1000000000000000000 1000000000000000000') == '1\\n'\nassert solution('10000000000000000000 10000000000000000000') == '1\\n'\nassert solution('1000000000000000000000 1000000000000000000000') == '1\\n'\nassert solution('10000000000000000000000 100000000000000000000000') == '1\\n'\nassert solution('10000000000000000000000000 10000000000000000000000000') == '1\\n'\nassert solution('100000000000000000000000000 100000000000000000000000000') == '1\\n'\nassert solution('10000000000000000000000000000 1000000000000000000000000000') == '1\\n'\nassert solution('1000000000000000000000000000000 10000000000000000"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '0'\n"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0\\n\""
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 5\") == \"0\""
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 0"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Expected '{expected}', but got '{solution(input())}'\""
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"0\\n\", \"The output should be 0.\""
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Error: solution({input()})!= output({output})\"\n"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5\") == \"0\\n\""
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 5') == 0, \"The given input is incorrect.\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\") == \"0 0\\n1 1\\n\"\nassert solution(\"10 10\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1') == '0 0\\n1 1\\n', 'Test case 1'\n\nassert solution('2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1') == '0 0\\n1 1\\n', 'Test case 2'\n\nassert solution('2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1') == '0 0\\n1 1\\n', 'Test case 3'\n\nassert solution('2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1') == '0 0\\n1 1\\n', 'Test case 4'\n\nassert solution('2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1') == '0 0\\n1 1\\n', 'Test case 5'"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_str=\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == output_str=\"0 0\\n1 1\\n\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1\n''') == '''\n0 0\n1 1\n''', 'Expected output: [0, 0]\\nActual output:'+ solution('''\n2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1\n'''))"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == [\"0 0\", \"1 1\"]"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\\n\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Your code is wrong. Please check the example and the constraints.\"\n\nfrom typing import List"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected: {sample_output}\\nActual: {solution(sample_input)}\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, \"Testcase failed. Expected: {}, Received: {}\".format(output, solution(input()))"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    2 2\n    1 0\n    0 1\n    3 3\n    1 0 0\n    0 1 0\n    0 0 1\n    \"\"\"\n) == \"0 0\\n1 1\""
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 44.975"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\\n\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '44.975'"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"1 2 0.950000\\n0.700000 50\\n\") == \"44.975\""
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(b'1 2 0.950000\\n0.700000 50') == '44.975'\nassert solution(b'1 2 0.950000\\n0.500000 50') == '39.950001'\nassert solution(b'1 2 0.950000\\n0.400000 50') == '39.940001'\nassert solution(b'1 2 0.950000\\n0.300000 50') == '39.930001'\nassert solution(b'1 2 0.950000\\n0.200000 50') == '39.920001'\nassert solution(b'1 2 0.950000\\n0.100000 50') == '39.910001'\nassert solution(b'1 2 0.950000\\n0.050000 50') == '39.905001'\nassert solution(b'1 2 0.950000\\n0.020000 50') == '39.902001'\nassert solution(b'1 2 0.950000\\n0.010000 50') == '39.901001'\nassert solution(b'1 2 0.950000\\n0.005000 50') == '39.900501'\nassert solution(b'1 2 0.950000\\n0.002000 50') == '39.900201'\nassert solution(b'1 2 0.950000\\n0.001000 50') == '39.900101'\nassert solution(b'1 2 0.950000\\n0.000500 50') == '39.900051'\nassert solution(b'1 2 0.950000\\n0.000200 50') == '39.900021'\nassert solution(b'1 2 0.950000\\n0.000100 50') == '39.900011'\nassert solution(b'1 2 0.950000\\n0.000050 50') == '39.900006'\nassert solution(b'1 2 0.950000\\n0.000020 50') == '39.900003'\nassert solution(b'1 2 0.950000\\n0.000010 50') == '39.900002'\nassert solution(b'1 2 0.950000\\n0.000005 50') == '39.900001'\nassert solution(b'1 2 0.950000\\n0.000002 50') == '39.900000'\nassert solution(b'1 2 0.950000\\n0.000001 50') == '39.900000'\nassert solution(b'1 2 0.950000\\n0.000000 50') == '39.900000'"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\n"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\""
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 2 0.950000\\n0.700000 50') == '44.975'"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 2 0.950000\\n0.700000 50') == '44.975'"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 2 0.950000\\n0.700000 50') == '44.975'\nassert solution('1 2 0.950000\\n0.850000 40') == '46.225'\nassert solution('1 2 0.950000\\n0.700000 50\\n0.800000 40') == '46.225'\nassert solution('1 2 0.950000\\n0.700000 50\\n0.900000 40') == '46.225'\nassert solution('1 2 0.950000\\n0.700000 50\\n0.700000 40') == '46.225'\nassert solution('1 2 0.950000\\n0.700000 50\\n0.600000 40') == '46.225'\nassert solution('1 2 0.950000\\n0.700000 50\\n0.500000 40') == '46.225'\nassert solution('1 2 0.950000\\n0.700000 50\\n0.400000 40') == '46.225'\nassert solution('1 2 0.950000\\n0.700000 50\\n0.300000 40') == '46.225'\nassert solution('1 2 0.950000\\n0.700000 50\\n0.200000 40') == '46.225'\nassert solution('1 2 0.950000\\n0.700000 50\\n0.100000 40') == '46.225'\nassert solution('1 2 0.950000\\n0.700000 50\\n0.050000 40') == '46.225'\nassert solution('1 2 0.950000\\n0.700000 50\\n0.000000 40') == '46.225'\nassert solution('1 2 0.950000\\n0.700000 50\\n0.000001 40') == '46.225'\nassert solution('1 2 0.950000\\n0.700000 50\\n0.000002 40') == '46.225'\nassert solution('1 2 0.950000\\n0.700000 50\\n0.000003 40') == '46.225'\nassert solution('1 2 0.950000\\n0.700000 50\\n0.000004 40') == '46.225'\nassert solution('1 2 0.950000\\n0.700000 50\\n0.000005 40') == '46.225'\nassert solution('1 2 0.950000\\n0.700000 50\\n0.000006 40') == '46.225'\nassert solution('1 2 0.950000\\n0.700000 50\\n0.000007 40') == '46.225'\nassert solution('1 2 0.950"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1') == 2\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n4') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}\\nGot: {solution(stdin)}\"\n"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\\n\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\\n\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n2\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n').startswith('2')\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n').endswith('2')\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n').startswith('2')\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n').endswith('2')"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1') == '2'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1') == 'IMPOSSIBLE'"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\").read()) == \"2\\n\""
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0') == 4.0, \"The correct output should be 4.0\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == \"4.0\\n\"\nassert solution(\"4 4\\n1.0 2.0\\n3.0 4.0\\n5.0 6.0\\n7.0 8.0\\n9.0 10.0\") == \"18.0\\n\"\nassert solution(\"3 3\\n0.0 10.0\\n5.0 7.0\\n2.0 8.0\\n9.0 3.0\\n8.0 5.0\") == \"12.0\\n\"\nassert solution(\"2 2\\n1.0 2.0\\n2.0 1.0\\n3.0 3.0\\n4.0 4.0\\n5.0 5.0\") == \"9.0\\n\"\nassert solution(\"3 5\\n0.0 1.0\\n1.0 0.0\\n2.0 2.0\\n3.0 3.0\\n4.0 4.0\") == \"22.0\\n\"\n"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '4.0'\n"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0') == '4.0'"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0') == '4.0'"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output, \"Your solution is incorrect.\""
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4.0\", \"The given input is incorrect\"\n"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0') == '4.0'"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == \"4.0\\n\"\nassert solution(\"5 5\\n0.0 0.0\\n1.0 1.0\\n2.0 2.0\\n3.0 3.0\\n4.0 4.0\\n5.0 5.0\") == \"15.0\\n\""
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == '4.0'"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '18000'\nassert solution(open('example1.txt', 'r')) == '18000'\nassert solution(open('example2.txt', 'r')) == '25400'\nassert solution(open('example3.txt', 'r')) == '33000'\nassert solution(open('example4.txt', 'r')) == '43000'\nassert solution(open('example5.txt', 'r')) == '61000'"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\") == \"18000\"\nassert solution(\"5\\n450 100\\n600 50\\n700 30\\n800 20\") == \"11000\"\nassert solution(\"10\\n420 50\\n480 30\\n540 20\\n600 15\\n660 10\\n720 7\\n780 5\\n840 4\\n900 3\\n960 2\\n1020 1\\n1080 1\\n1140 0\\n1200 0\") == \"13000\""
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\") == \"18000\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_string) == output_string, f\"Test failed for {input_string} and {output_string}\" for input_string, output_string in zip(sample_inputs, sample_outputs)"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n220 29\\n195 20\\n200 9\\n180 30\\n') == '18000'\nassert solution('5\\n250 20\\n300 10\\n300 5\\n200 20\\n') == '10000'"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\\n\") == \"18000\"\nassert solution(\"5\\n250 25\\n300 10\\n350 15\\n400 20\\n\") == \"21000\""
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\") == \"18000\"\n"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n220 29\\n195 20\\n200 9\\n180 30') == '18000'"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_example) == output_example, f\"Test case {input_example} failed\"\n\ninput_example = \"4\\n220 29\\n195 20\\n200 9\\n180 30\"\noutput_example = \"18000\""
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\") == \"18000\\n\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"28\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"BUYSTICKERS\") == \"28\\ndef solution(stdin: str) -> str: \\n    pass\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"28\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"28\", \"Incorrect output\"\n"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8') == '28'\n\nfrom typing import List"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\\ndef solution(stdin: str) -> str:\\npass\\n\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == 28, \"Incorrect output.\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\"\nassert solution(\"BUYSTICKERS\\n5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == [\"INDV 1\\n\", \"INDV 2\\n\", \"CORP 1\\n\", \"INDV 4\\n\", \"CORP 2\\n\", \"INDV 3\\n\", \"CORP 3\\n\", \"INDV 5\\n\"]"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\"\nassert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\"\nassert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\"\n\nassert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    5 3 8\n    1 1\n    2 1\n    3 1\n    4 2\n    5 2\n    3 3\n    4 3\n    5 3\n    \"\"\"\n) == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Received: {solution(input())}\"\n"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(None) == \"\"\nassert solution(\"5\\n3\\n8\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\"\n"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 'INDV 1\\nINDV 2\\nINDV 3\\nINDV 4\\nINDV 5\\n'\nassert solution(5) == 'INDV 1\\nINDV 2\\nINDV 3\\nINDV 4\\nINDV 5\\n'\nassert solution(10) == 'INDV 1\\nINDV 2\\nINDV 3\\nINDV 4\\nINDV 5\\nCORP 1\\nCORP 2\\nCORP 3\\n'"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\"\n"
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2.4142135624\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4\n10 1\n1\n0\n10\n10\n\"\"\") == 2.4142135624"
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"2.4142135624\", \"Your solution is incorrect.\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == output, f\"Input: {input}\\nOutput: {output}\\n\" for input, output in [\n    ('4\\n10 1\\n1\\n0\\n10\\n10\\n', '2.4142135624'),\n    ('4\\n10 1\\n1\\n5\\n10\\n10\\n', '0.0000000000'),\n    ('4\\n10 1\\n1\\n0\\n10\\n-1\\n', '-2.4142135624'),\n    ('4\\n10 1\\n1\\n0\\n10\\n10\\n', '0.0000000000'),\n    ('4\\n10 1\\n1\\n0\\n10\\n10\\n', '0.0000000000'),\n    ('4\\n10 1\\n1\\n0\\n10\\n10\\n', '0.0000000000'),\n    ('4\\n10 1\\n1\\n0\\n10\\n10\\n', '0.0000000000'),\n    ('4\\n10 1\\n1\\n0\\n10\\n10\\n', '0.0000000000'),\n    ('4\\n10 1\\n1\\n0\\n10\\n10\\n', '0.0000000000'),\n    ('4\\n10 1\\n1\\n0\\n10\\n10\\n', '0.0000000000'),\n    ('4\\n10 1\\n1\\n0\\n10\\n10\\n', '0.0000000000'),\n    ('4\\n10 1\\n1\\n0\\n10\\n10\\n', '0.0000000000'),\n    ('4\\n10 1\\n1\\n0\\n10\\n10\\n', '0.0000000000'),\n    ('4\\n10 1\\n1\\n0\\n10\\n10\\n', '0.0000000000'),\n    ('4\\n10 1\\n1\\n0\\n10\\n10\\n', '0.0000000000'),\n    ('4\\n10 1\\n1\\n0\\n10\\n10\\n', '0.0000000000'),\n    ('4\\n10 1\\n1\\n0\\n10\\n10\\n', '0.0000000000'),\n    ('4\\n10 1\\n1\\n0\\n10\\n10\\n', '0.0000000000'),\n    ('4\\n10 1\\n1\\n0\\n10\\n10\\n', '0.0000000000'),\n    ('4\\n10 1\\n1\\n0\\n10\\n10\\n', '0.0000000000'),\n    ('4\\n10 1\\n1\\n0\\n10\\n10\\n', '0.0000000000'),\n    ('4\\n10 1\\n1\\n0\\n10\\n10\\n', '0.0000000000'),\n    ('4\\n10 1\\n1\\n0\\n10\\n10\\n', '0.0000000000'),\n    ('4\\n10 1\\n1\\n0\\n10\\n10\\n', '0.0000000000'),\n    ('4\\n10 1\\n1\\n0\\n10\\n10\\n', '0.00000000"
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == \"2.4142135624\", \"Incorrect output\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(input_file)) == \"2.4142135624\\n\"\n"
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_data) == expected_output, f\"Test failed for input {input_data} and expected output {expected_output}\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_file) == expected_output, f\"Solution: {solution(input_file)}!= {expected_output}\""
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"15\"\nassert solution() == \"12\""
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\""
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\n"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\\n\") == \"15\\n\"\n"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\nassert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 1\") == \"0\\n\"\nassert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 4\") == \"75\\n\"\nassert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\nassert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 1\") == \"0\\n\"\nassert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 4\") == \"75\\n\""
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\n"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\n"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3') == 15\nassert solution('5\\n5 5 0\\n3 1') == 30\nassert solution('2\\n1 0\\n0 1') == 30"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == 15"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"15\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"PacMan is cleaning his ice rink! The rink, like everything in PacMan\u2019s universe, wraps! In other words, if you go off the edge of the rectangular rink to the right, you\u2019ll end up in the same row on the left side of the rink. Go off of the left side of the rink, and you\u2019ll end up on the right. Going up off the top of the rink causes you to end up in the same column but on the bottom. Go off of the bottom, and you\u2019ll end up at the top. Going to the left from the left edge of the rink causes you to end up in the same column but on the right. Going off the right edge of the rink causes you to end up in the same row but on the left. Going to the right from the right edge of the rink causes you to end up in the same row but on the bottom. Going up off the top of the rink causes you to end up in the same column but on the bottom. Going down off the bottom edge of the rink causes you to end up in the same row but on the top. Going up off the top of the rink causes you to end up in the same column but on the bottom. Going down off the bottom edge of the rink causes you to end up in the same row but on the top. Going up off the top of the rink causes you to end up in the same column but on the bottom. Going down off the bottom edge of the rink causes you to end up in the same row but on the top. Going up off the top of the rink causes you to end up in the same column but on the bottom. Going down off the bottom edge of the rink causes you to end up in the same row but on the top. Going up off the top of the rink causes you to end up in the same column but on the bottom. Going down off the bottom edge of the rink causes you to end up in the same row but on the top. Going up off the top of the rink causes you to end up in the same column but on the bottom. Going down off the bottom edge of the rink causes you to end up in the same row but on the top. Going up off the top of the rink causes you to end up in the same column but on the bottom. Going down off the bottom edge of the rink causes you to end up in the same row but on the top. Going up off the top of the rink causes you to end up in the same column but on the bottom. Going down off the bottom edge of the rink causes you to end up in the same row but on the top. Going up off the top of the rink causes you to end up in the same column but on the bottom. Going down off the bottom edge of the rink causes you to end up in the same row but on the top. Going up off the top of the rink causes you to end up in the same column but on the bottom. Going down off the bottom edge of the rink causes you to end up in the same row but on the top. Going up off the top of the rink causes you to end up in the same column but on the bottom. Going down off the bottom edge of the rink causes you to end up in the same row but on the top. Going up off the top of the rink causes you to end up in the same column but on the bottom. Going down off the bottom edge of the rink causes you to end up in the same row but on the top. Going up off the top of the rink causes you to end up in the same column but on the bottom. Going down off the bottom edge of the rink causes you to end up in the same row but on the top. Going up off the top of the rink causes you to end up in the same column but on the bottom. Going down off the bottom edge of the rink causes you to end up in the same row but on the top. Going up off the top of the rink causes you to end up in the same column but on the bottom. Going down off the bottom edge of the rink causes you to end up in the same row but on the top. Going up off the top of the rink causes you to end up in the same column but on the bottom. Going down off the bottom edge of the rink causes you to end up in the same row but on the top. Going up off the top of the rink causes you to end up in the same column but on the bottom. Going down off the bottom edge of the rink causes you"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"....C\n@DDDD\""
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 5 3 3 4\") == \".....\\n..BBB\\n..ABC\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution_input) == solution_output, \"Test failed for solution\"\nprint(\"Test passed\")"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n5 5 3 3 4\n''') == '''\n.....\n..BBC\n..A.C\n....C\n@DDDD\n"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 5 3 3 4\") == \".....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5 5 3 3 4\\n\") == \".....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 5 3 3 4\") == \".....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 5 3 3 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Solution doesn't match the expected output. Input: {input()}, Output: {output}\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 3\\n111\\n001\\n000\\n111\\n000') == '001\\n001\\n001\\n111\\n200'"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\"\nassert solution(\"5 3\\n101010\\n000011\\n000101\\n111011\") == \"010110\\n100010\\n011110\\n000110\\n011010\"\nassert solution(\"5 3\\n101010\\n000011\\n000101\\n111011\") == \"010110\\n100010\\n011110\\n000110\\n011010\"\nassert solution(\"5 3\\n101010\\n000011\\n000101\\n111011\") == \"010110\\n100010\\n011110\\n000110\\n011010\"\nassert solution(\"5 3\\n101010\\n000011\\n000101\\n111011\") == \"010110\\n100010\\n011110\\n000110\\n011010\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_str) == expected_output, f\"Expected output: {expected_output}\\nGot: {solution(input_str)}\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\\n\"\nassert solution(\"5 5\\n11111\\n00111\\n00110\\n00101\\n00100\\n11111\\n00111\\n00110\\n00101\\n00100\") == \"00001\\n00011\\n00101\\n01011\\n10111\\n11111\\n00011\\n00101\\n01011\\n10111\\n11111\\n00001\\n\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\"\nassert solution(\"1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\\n21 22\\n23 24\\n25 26\\n27 28\\n29 30\\n31 32\\n33 34\\n35 36\\n37 38\\n39 40\") == \"000\\n000\\n000\\n000\\n000\"\nassert solution(\"10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\") == \"000\\n000\\n000\\n000\\n000\"\nassert solution(\"4 4\\n4 4\\n4 4\\n4 4\\n4 4\\n4 4\\n4 4\\n4 4\\n4 4\\n4 4\\n4 4\\n4 4\\n4 4\") == \"000\\n000\\n000\\n000\\n000\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '19 20\\n17 15 14 13 7 2\\n'\n"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\\n\"\nassert solution(\"15/10\\n15/10\\n10/10\\n15/10\\n15/10\\n15/10\\n10/10\\n15/10\\n15/10\") == \"15 15 10 15 15 15\\n\"\nassert solution(\"19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n2/1\\n\") == \"Impossible\"\nassert solution(\"25/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n3/1\\n\") == \"Impossible\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n25/1\\n\") == \"Impossible\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/14\\n19/13\\n19/12\\n\") == \"Impossible\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/14\\n19/13\\n19/12\\n19/10\\n19/8\\n19/6\\n19/5\\n19/4\\n19/3\\n19/2\\n19/1\\n19/1\\n19/1\\n\") == \"19 20\\n17 15 14 13 7 2\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"21/25\\n25/25\\n17/12\\n15/7\\n11/12\\n6/10\\n6/20\\n15/12\\n17/12\\n11/12\\n15/7\\n6/20\\n6/10\\n25/25\\n21/25\") == \"impossible\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"20/10\\n20/13\\n18/15\\n16/10\\n19/8\\n16/12\\n15/12\\n17/10\\n19/13\\n15/11\\n15/14\\n14/10\") == \"20 19 18 16 15 14 13 12 11 10\"\nassert solution(\"21/16\\n21/15\\n21/14\\n21/13\\n21/12\\n21/11\\n21/10\\n21/9\\n21/8\\n21/7\\n21/6\\n21/5\\n21/4\\n21/3\\n21/2\\n21/1\") == \"21 21 21 21 21 21 21 21 21 21 21\"\nassert solution(\"20/10\\n15/7\\n19/12\\n18/8\\n16/13\\n15/9\\n16/14\\n18/9\\n19/10\\n17/9\\n17/8\\n15/11\\n14/9\\n16/7\\n18/7\\n17/6\\n19/7\\n15/5\\n15/10\\n15/6\\n14/8\\n16/6\\n19/6\\n16/3\\n16/2\\n15/4\\n18/6\\n18/3\\n17/4\\n16/5\\n16/1\\n15/3\\n19/5\\n18/2\\n15/2\\n16/4\\n18/1\\n19/2\\n16/1\\n16/1\\n15/1\\n18/1\\n16/1\\n16/2\\n15/1\\n15/1\\n14/1\\n17/1\\n16/1\\n16/1\\n15/1\\n17/1\\n16/1\\n16/1\\n15/1\\n16/1\\n15/1\\n14/1\\n17/1\\n16/1\\n16/1\\n15/1\\n17/1\\n16/1\\n16/1\\n15/1\\n16/1\\n15/1\\n14/1\\n17/1\\n16/1\\n16/1\\n15/1\\n17/1\\n16/1\\n16/1\\n15/1\\n16/1\\n15/1\\n14/1\\n17/1\\n16/1\\n16/1\\n15/1\\n17/1\\n16/1\\n16/1\\n15/1\\n16/1\\n15/1\\n14/1\\n17/1\\n16/1\\n16/1\\n15/1\\n17/1\\n16/1\\n16/1\\n15/1\\n16/1\\n15/1\\n14/1\\n17/1\\n16/1\\n16/1\\n15/1\\n17/1\\n16/1\\n16/1"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"19 20\\n17 15 14 13 7 2\"\nassert solution() == \"impossible\"\nassert solution() == \"10 7\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\").read()) == \"19 20\\n17 15 14 13 7 2\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n10/7\\n20/17\\n19/2\\n19/17\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"impossible\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n10/7\\n20/17\\n19/2\\n19/17\\n10/7\\n20/17\\n19/2\\n19/17\\n10/7\\n20/17\\n19/2\\n19/17\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n10/7\\n20/17\\n19/2\\n19/17\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n10/7\\n20/17\\n19/2\\n19/17\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n10/7\\n20/17\\n19/2\\n19/17\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n10/7\\n20/17\\n19/2\\n19/17\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n1"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n\") == \"19 20\\n17 15 14 13 7 2\"\n"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\") == \"impossible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n\") == \"impossible\"\n\nassert solution(\"5 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n4 2 2\\n\") == \"possible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n\") == \"impossible\"\nassert solution(\"4 5\\n0 0\\n1 1\\n2 2\\n3 3\\n4 5\\n\") == \"impossible\"\nassert solution(\"4 5\\n0 0\\n1 1\\n2 2\\n3 3\\n4 6\\n\") == \"possible\"\n"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n\") == \"possible\"\nassert solution(\"4 5\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n\") == \"impossible\"\nassert solution(\"6 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n4 0\\n5 0\\n6 2\\n\") == \"possible\"\nassert solution(\"8 7\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n4 0\\n5 0\\n6 2\\n7 1\\n\") == \"impossible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"possible\"\nassert solution(stdin.replace(\"\\n\", \"\")) == \"possible\"\n"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\") == \"possible\"\nassert solution(\"4 4\\n0 0\\n0 4\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n0 4\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n0 4\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n0 4\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\") == \"impossible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3') == 'possible'\nassert solution('5 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n4 0 3\\n4 2 3\\n4 4 3') == 'impossible'\nassert solution('3 1\\n0 0\\n2 0\\n2 0\\n0 0\\n0 0\\n2 2\\n2 2\\n2 2') == 'impossible'\nassert solution('5 1\\n0 0\\n2 0\\n2 0\\n0 0\\n0 0\\n2 2\\n2 2\\n2 2\\n4 0 3\\n4 2 3\\n4 4 3') == 'possible'\nassert solution('3 4\\n0 0\\n2 0\\n2 0\\n0 0\\n0 0\\n2 2\\n2 2\\n2 2\\n4 0 3\\n4 2 3\\n4 4 3\\n4 6 3\\n4 8 3') == 'impossible'"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n\") == \"possible\"\nassert solution(\"1 1\\n0 0\\n1 0\\n2 0\\n3 0\\n4 0\\n5 0\\n6 0\\n7 0\\n8 0\\n9 0\\n10 0\\n\") == \"possible\"\nassert solution(\"1 1\\n0 0\\n1 0\\n2 0\\n3 0\\n4 0\\n5 0\\n6 0\\n7 0\\n8 0\\n9 0\\n10 0\\n1 1 1\\n0 0 1\\n1 0 1\\n2 0 1\\n3 0 1\\n4 0 1\\n5 0 1\\n6 0 1\\n7 0 1\\n8 0 1\\n9 0 1\\n10 0 1\\n1 1 1\\n0 0 1\\n1 0 1\\n2 0 1\\n3 0 1\\n4 0 1\\n5 0 1\\n6 0 1\\n7 0 1\\n8 0 1\\n9 0 1\\n10 0 1\\n1 1 1\\n0 0 1\\n1 0 1\\n2 0 1\\n3 0 1\\n4 0 1\\n5 0 1\\n6 0 1\\n7 0 1\\n8 0 1\\n9 0 1\\n10 0 1\\n1 1 1\\n0 0 1\\n1 0 1\\n2 0 1\\n3 0 1\\n4 0 1\\n5 0 1\\n6 0 1\\n7 0 1\\n8 0 1\\n9 0 1\\n10 0 1\\n1 1 1\\n0 0 1\\n1 0 1\\n2 0 1\\n3 0 1\\n4 0 1\\n5 0 1\\n6 0 1\\n7 0 1\\n8 0 1\\n9 0 1\\n10 0 1\\n1 1 1\\n0 0 1\\n1 0 1\\n2 0 1\\n3 0 1\\n4 0 1\\n5 0 1\\n6 0 1\\n7 0 1\\n8 0 1\\n9 0 1\\n10 0 1\\n1 1 1\\n0 0 1\\n1 0 1\\n2 0 1\\n3 0 1\\n4 0 1\\n5 0 1\\n6 0 1\\n7 0 1\\n8 0 1\\n9 0 1\\n10 0 1\\n1 1 1\\n0 0 1\\n1 0 1\\n2 0 1\\n3 0 1\\n4 0 1\\n5 0 1\\n6 0 1\\n7 0 1\\n8 0 1\\n9 0 1\\n10 0 1\\n1 1 1\\n0 0 1\\n1 0 1\\n2 0 1\\n3 0 1\\n4 0 1\\n5 0 1\\n6 0 1\\n7 0 1\\n8 0 1\\n9 0 1\\n10 0 1\\n1 1 1\\n0 0 1\\n1 0 1\\n2 0 1\\n3 0 1\\n4 0 1\\n5 0 1\\n6 0 1\\n7 0 1\\n8 0 1\\n9 0 1\\n"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\") == \"possible\"\nassert solution(\"4 4\\n1 2 3\\n2 2 2\\n3 0 3\\n4 3 2\") == \"possible\"\nassert solution(\"1 2 3\\n2 2 2\\n3 0 3\\n4 3 2\\n5 4 5\") == \"impossible\"\n"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\").read()) == \"possible\"\n"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 2\\n2\\n2') == 4\nassert solution('4 3\\n1\\n2') == 4\nassert solution('3 3\\n2\\n1') == 4\nassert solution('4 1\\n1\\n2') == 2\nassert solution('4 4\\n2\\n1') == 4\nassert solution('5 2\\n2\\n2') == 1\nassert solution('5 3\\n2\\n2') == 1\nassert solution('5 1\\n1\\n1') == 2\n"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n2\\n2\\n\") == \"4\"\nassert solution(\"4 2\\n3\\n3\\n\") == \"3\"\nassert solution(\"4 2\\n1\\n1\\n\") == \"1\"\nassert solution(\"4 2\\n1\\n2\\n\") == \"2\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"4\\n\"\n"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == \"4\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\"\n"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 4, \"Test failed\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 4, \"The given solution is incorrect. Please check the problem statement and sample inputs.\"\n"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"4\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '4'"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected output: {output}, but got: {solution(input())}\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='3\\n1 1\\n1 2\\n1 3\\n') == 'Mirko\\ndef solution(stdin: str) -> str:\n    pass'"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n1\\n') == 'Mirko'\nassert solution('2\\n1\\n1\\n') == 'Slavko'\nassert solution('3\\n1\\n1\\n') == 'No winner'"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n1 2\\n1 3\\n\") == \"Mirko\"\nassert solution(\"2 3\\n1 2\\n1 1\\n\") == \"Slavko\"\nassert solution(\"1 1\\n2 3\\n3 1\\n\") == \"Mirko\"\nassert solution(\"1 2\\n3 1\\n1 3\\n\") == \"Slavko\"\nassert solution(\"3 2\\n2 1\\n1 3\\n\") == \"Mirko\"\nassert solution(\"1 3\\n3 2\\n2 1\\n\") == \"Slavko\"\nassert solution(\"1 2\\n2 3\\n1 1\\n\") == \"Mirko\"\nassert solution(\"1 3\\n1 2\\n2 3\\n\") == \"Slavko\"\nassert solution(\"2 1\\n1 3\\n3 2\\n\") == \"Mirko\"\nassert solution(\"3 1\\n1 2\\n2 3\\n\") == \"Slavko\"\nassert solution(\"1 3\\n3 1\\n2 2\\n\") == \"Mirko\"\nassert solution(\"1 2\\n2 3\\n3 1\\n\") == \"Slavko\"\nassert solution(\"1 3\\n3 2\\n2 1\\n\") == \"Mirko\"\nassert solution(\"3 1\\n2 2\\n1 3\\n\") == \"Slavko\"\nassert solution(\"3 1\\n2 2\\n1 3\\n\") == \"Mirko\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\\n\") == \"Mirko\"\n"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"Mirko\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1 1\\n1 2\\n1 3\\n') == 'Mirko'"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\") == \"Mirko\"\nassert solution(\"1\\n1 1\\n1 2\\n1 3\") == \"Slavko\"\n\nfrom typing import List"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n1 1\\n1 2\\n1 3') == 'Mirko'\n"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\") == \"Mirko\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"5\\n1 1\\n1 2\\n1 3\\n2 2\\n2 3\") == \"Slavko\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"Mirko\", \"Expected 'Mirko', got: {}\".format(solution(3))\n"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n6\\n34\\n38\\n\") == \"2 4\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == '2 4\\n'\nassert solution(6) == '2 2 4 6\\n'\nassert solution(34) == '2 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32 34\\n'\nassert solution(38) == '2 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38\\n'"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n6\\n34\\n38\\n\") == \"2 4\\n\", \"Test 1 failed.\"\nassert solution(\"5\\n10\\n20\\n30\\n\") == \"10 20\\n\", \"Test 2 failed.\"\nassert solution(\"10\\n15\\n20\\n25\\n\") == \"10 20 25\\n\", \"Test 3 failed.\"\nassert solution(\"5\\n10\\n15\\n20\\n\") == \"10 15 20\\n\", \"Test 4 failed.\"\nassert solution(\"10\\n20\\n30\\n40\\n\") == \"10 20 30 40\\n\", \"Test 5 failed.\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == '2 4'\nassert solution(6) == '2 4 6'\nassert solution(34) == '2 4 6 8 10'\nassert solution(38) == '2 4 6 8 10 12 14'"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2 4\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n3\n6\n34\n38\n''') == '''\n2\n4\n'''"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"2 4\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(10) == \"2 4\\n\", \"Test case 1: Output should be: 2 4\\n\"\nassert solution(10) == \"2 4\\n\", \"Test case 2: Output should be: 2 4\\n\"\nassert solution(10) == \"2 4\\n\", \"Test case 3: Output should be: 2 4\\n\"\nassert solution(10) == \"2 4\\n\", \"Test case 4: Output should be: 2 4\\n\"\nassert solution(10) == \"2 4\\n\", \"Test case 5: Output should be: 2 4\\n\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n6\\n34\\n38\\n') == '2 4'"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n6\\n34\\n38\") == \"2 4\\n\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(read_input()) == \"12\", \"Your code is incorrect. Please check the sample input and output.\"\n"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution.py) == 12, \"Incorrect output. Expected 12, got {}\".format(solution(solution.py))"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == \"12\"\nassert solution(sample_input2) == \"12\"\n\nsample_input1 = \"4\\n10000 400000 500000 900000\"\nsample_input2 = \"5\\n8 10 2 1000000 30556926000\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n10000 400000 500000 900000\") == 12, \"Expected: 12, Got: \" + str(solution(\"4\\n10000 400000 500000 900000\"))"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Test case {i+1} failed. Expected: {expected}, got: {solution(stdin)}\" for i, (stdin, expected) in enumerate(test_cases)"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n8 10 2 1000000 30556926000\") == \"12\", \"Sample Output 2 is not correct.\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n10000 400000 500000 900000\") == 12"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Test failed. Expected: {expected}, got: {solution(stdin)}\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"12\"\nassert solution(stdin) == \"12\"\nassert solution(stdin) == \"12\"\nassert solution(stdin) == \"12\"\nassert solution(stdin) == \"12\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0') == 'YES'"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 'YES', \"Test case 1 failed\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\"\nassert solution(\"8 10\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"NO\"\n"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\"\nassert solution(\"10 10\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\") == \"NO\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0') == 'YES\\n'\nassert solution('8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\\n') == 'NO\\n'"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0') == 'YES'"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\\n') == 'YES'"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\"\nassert solution(\"10 8\\n0\\n2 3 5 0\\n1 2 4 6 0\\n8 7 0\\n4 3 1 5 7 0\\n5 2 8 4 3 1 0\\n1 6 7 3 2 8 4 0\\n7 3 0 2 5 4 1 6 0\\n0 0 0 0 0 0 0 0\") == \"NO\"\n\nfrom typing import List"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"5 6 1 2 3 4\"\nassert solution(input()) == \"5 6 1 2 3 4\"\nassert solution(input()) == \"5 6 1 2 3 4\"\nassert solution(input()) == \"5 6 1 2 3 4\"\nassert solution(input()) == \"Impossible\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\\n\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\\n\"\nassert solution(\"1 2\\n3 4\\n5 6\\n7 8\\n9 10\") == \"Impossible\\n\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == \"Impossible\\n\"\nassert solution(\"3 3\\n3 3\\n3 3\\n3 3\\n3 3\") == \"Impossible\\n\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 5 6 1 2\") == \"5 6 1 2 3 4\\n\"\nassert solution(\"6 2\") == \"Impossible\\n\"\nassert solution(\"7 8\") == \"Impossible\\n\"\nassert solution(\"1 2 3 4 5 6\") == \"1 2 3 4 5 6\\n\"\nassert solution(\"1 1 1 1 1 1\") == \"1 1 1 1 1 1\\n\"\nassert solution(\"1 2 3\") == \"2 3 1\\n\"\nassert solution(\"1 1 1 1\") == \"1 1 1 1\\n\"\nassert solution(\"2 2 2 2 2 2\") == \"1 2 1\\n\"\nassert solution(\"2 2 2 2 2 2 2\") == \"2 2 2 2 2 2\\n\"\nassert solution(\"2 2 2 2 2 2 2 2\") == \"3 2 1\\n\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1\") == \"1 1 1 1 1 1 1 1 1 1\\n\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\\n\"\nassert solution(\"6 3\\n3 4 5 6 1 2\") == \"Impossible\\n\"\nassert solution(\"6 1\\n3 4 5 6 1 2\") == \"Impossible\\n\"\nassert solution(\"6 1\\n3 4 5 6 1 3\") == \"2 3\\n\"\nassert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\\n\"\nassert solution(\"6 2\\n3 4 5 6 1 3\") == \"2 3\\n\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\\n\"\nassert solution(\"5 1 2\\n1 2 3\\n4 5 6\\n7 8 9\\n\") == \"5 6 1 2 3 4\\nImpossible\\n\"\nassert solution(\"4 5\\n2\\n\") == \"Impossible\\n\"\nassert solution(\"1 2\\n1 2\\n\") == \"1\\n\"\nassert solution(\"1 1 2\\n2 2 2\\n3 3 3\\n\") == \"1\\n2\\nImpossible\\n\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6 2\\n3 4 5 6 1 2') == '5 6 1 2 3 4\\n'\n"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\\n\") == \"5 6 1 2 3 4\"\nassert solution(\"6 2\\n3 4 5 6 1 2\\n\") == \"Impossible\"\n"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\\n\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"20512\", \"The output is incorrect.\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\"\n"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"20512\", \"Incorrect output\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\", \"Testcase 1 failed.\"\nassert solution(\"1000000 500000 800000 400000\") == \"12345678901234567890123456789012345678901234567890\", \"Testcase 2 failed.\"\nassert solution(\"1 0 0 0 0\") == \"IMPOSSIBLE\", \"Testcase 3 failed.\"\nassert solution(\"1 1 1 1 1\") == \"IMPOSSIBLE\", \"Testcase 4 failed.\"\nassert solution(\"1 0 0 0 0\") == \"IMPOSSIBLE\", \"Testcase 5 failed.\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"5 2 8 4\\n\") == \"20512\"\nassert solution(stdin=\"10 2 8 4\\n\") == \"20512\"\nassert solution(stdin=\"5 1 8 4\\n\") == \"20512\"\nassert solution(stdin=\"5 2 8 5\\n\") == \"IMPOSSIBLE\"\nassert solution(stdin=\"10 2 8 5\\n\") == \"IMPOSSIBLE\"\nassert solution(stdin=\"5 1 8 5\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\"\nassert solution(\"10 3 6 4\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"5 2 8 4\") == \"20512\"\nassert solution(stdin=\"1 1 1 1\") == \"IMPOSSIBLE\"\nassert solution(stdin=\"5 3 8 1\") == \"20520\"\nassert solution(stdin=\"10 1 1 1\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 2 8 4') == '20512', \"Test case 1 failed.\"\n\nassert solution('5 4 1 3') == 'IMPOSSIBLE', \"Test case 2 failed.\"\n\nassert solution('6 5 7 1') == 'IMPOSSIBLE', \"Test case 3 failed.\"\n\nassert solution('3 6 9 5') == 'IMPOSSIBLE', \"Test case 4 failed.\"\n\nassert solution('10 1 9 8') == '9810', \"Test case 5 failed.\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\", \"Your code is incorrect.\"\nassert solution(\"3 4 1 5\") == \"IMPOSSIBLE\", \"Your code is incorrect.\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\", \"Test case 1 failed\""
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''2 3\nBAC\nABC''') == 2\nassert solution('''3 8\nHGBDFCAE\nADBGHFCE\nHCFGBDAE''') == 3"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == 2, \"The solution should be 2.\"\nassert solution(open('input2.txt', 'r')) == 3, \"The solution should be 3.\""
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\nBAC\\nABC\") == 2\nassert solution(\"3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\") == 3"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r\"2 3\\nBAC\\nABC\") == 2\nassert solution(r\"3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\") == 3\n\nfrom typing import List"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin: str) == \"Output the length of the longest subsequence that appears in all n strings.\\n\"\n\nimport itertools"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Output here\"\n"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == \"2\"\nassert solution(sample_input_2) == \"3\""
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\nBAC\\nABC\\n\") == 2\nassert solution(\"3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\\n\") == 3"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\nBAC\\nABC\\n\") == 2\nassert solution(\"3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\\n\") == 3\n\nfrom typing import List"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\nBAC\\nABC\") == \"2\"\nassert solution(\"3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\") == \"3\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n\") == \"3\\n\"\nassert solution(\"3 4\\n\") == \"14\\n\"\nassert solution(\"4 5\\n\") == \"42\\n\"\nassert solution(\"6 7\\n\") == \"106\\n\"\nassert solution(\"2 2\\n\") == \"1\\n\"\nassert solution(\"3 4\\n\") == \"14\\n\"\nassert solution(\"5 6\\n\") == \"42\\n\"\nassert solution(\"7 8\\n\") == \"106\\n\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"3\\n\"\nassert solution(\"3 4\") == \"3\\n\"\nassert solution(\"5 6\") == \"3\\n\"\nassert solution(\"2 3\") == \"4\\n\"\nassert solution(\"4 5\") == \"4\\n\"\nassert solution(\"6 7\") == \"4\\n\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"3\\n\"\nassert solution(\"4 2\") == \"11\\n\"\nassert solution(\"3 2\") == \"1\\n\"\nassert solution(\"5 3\") == \"12\\n\"\nassert solution(\"2 3\") == \"2\\n\"\nassert solution(\"2 1\") == \"1\\n\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3\\n\"\n"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3\", \"The function should return 3.\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"4 3\") == \"3\"\nassert solution(\"5 4\") == \"3\"\nassert solution(\"6 5\") == \"3\"\nassert solution(\"7 6\") == \"3\"\nassert solution(\"8 7\") == \"3\"\nassert solution(\"9 8\") == \"3\"\nassert solution(\"10 9\") == \"3\"\n"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"3\\n\"\nassert solution(\"2 3\") == \"2\\n\"\nassert solution(\"3 4\") == \"1\\n\"\nassert solution(\"5 5\") == \"0\\n\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 3, \"The solution does not meet the expected output\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '3', 'The correct output is not provided.'"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n\") == \"3\\n\"\nassert solution(\"4 5\\n\") == \"22\\n\"\nassert solution(\"6 7\\n\") == \"55\\n\""
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\\n\"\nassert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"1\\n\"\nassert solution(stdin) == \"4\\n\"\nassert solution(stdin) == \"3\\n\""
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"3\\n\""
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == \"3\\n\"\nassert solution(\"5 1\\n0 1 2\\n0 1 3\\n1 1 4\\n1 0 5\\n0 0 6\") == \"5\\n\""
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == 3, \"Incorrect output\""
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == expected_output, f\"Test case failed: {input_data} -> {expected_output}\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == \"3\""
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\\n\") == 3\nassert solution(\"5 3\\n1 2 3\\n2 0 4\\n3 1 5\\n4 0 6\\n5 2 7\\n\") == 4\nassert solution(\"5 3\\n1 2 3\\n1 0 4\\n2 1 5\\n3 0 6\\n4 2 7\\n5 4 8\\n\") == 5"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Output: {solution(input())}, Expected: {output}\""
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\\n') == '3\\n'"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == \"3\\n\""
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\\n1 1\\n1 2\\n2 1\\n\") == \"YES\"\nassert solution(\"3\\n5\\n1 1\\n1 2\\n2 1\\n2 2\\n2 3\\n3 2\\n3 3\\n3\\n1 1\\n1 2\\n2 1\\n\") == \"NO\""
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3') == 'YES'\nassert solution('2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\\n1 1\\n1 2\\n2 1\\n') == 'NO'\nassert solution('2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\\n1 1\\n1 2\\n2 1\\n3') == 'YES'"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1\\n2\\n2\\n3\\n3\\n3\\n1\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 'YES'"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"YES\""
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\") == \"YES\"\nassert solution(\"6\\n1\\n1 2\\n2 1\\n2 2\\n1 2\\n3\") == \"NO\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\") == \"YES\""
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'YES', \"Test case 1 failed\"\nassert solution() == 'YES', \"Test case 2 failed\"\nassert solution() == 'NO', \"Test case 3 failed\"\nassert solution() == 'NO', \"Test case 4 failed\"\nassert solution() == 'YES', \"Test case 5 failed\""
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'YES'"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\\n1 1\\n1 2\\n2 1') == 'YES'\nassert solution('1 1\\n1 2\\n2 1') == 'NO'"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n\") == \"3.000000000\\n\""
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n\") == \"3.000000000\"  # Explanation: It takes 3 gifts to open the Catmas gifts.\nassert solution(\"3\\n\") == \"6.000000000\"  # Explanation: It takes 6 gifts to open the Catmas gifts.\nassert solution(\"4\\n\") == \"9.000000000\"  # Explanation: It takes 9 gifts to open the Catmas gifts.\nassert solution(\"5\\n\") == \"12.000000000\"  # Explanation: It takes 12 gifts to open the Catmas gifts.\nassert solution(\"6\\n\") == \"15.000000000\"  # Explanation: It takes 15 gifts to open the Catmas gifts.\nassert solution(\"7\\n\") == \"18.000000000\"  # Explanation: It takes 18 gifts to open the Catmas gifts."
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3.000000000\", \"Incorrect output.\""
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(b'2') == \"3.000000000\\n\"\n"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"3.000000000\""
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='3\\n') == '3.000000000'"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3.000000000\", \"Expected: 3.000000000, Actual: \" + str(solution())"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == sample_output, \"Test failed\""
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '3.000000000\\n'"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n\") == \"3.000000000\\n\", \"Please provide a valid input\""
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n3\") == \"1\\n\"\nassert solution(\"5 7\\n3 4 5\") == \"4\\n\"\nassert solution(\"4 10\\n2 5 6 7 8\") == \"4\\n\"\nassert solution(\"10 10\\n1 2 3 4 5 6 7 8 9 10\") == \"1\\n\""
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(r'1 2\\n3\\n') == '1\\n'\nassert solution(r'2 3\\n3\\n') == '2\\n'\nassert solution(r'3 4\\n1\\n3\\n') == '3\\n'\nassert solution(r'1 2\\n2\\n2\\n') == '3\\n'\nassert solution(r'1 3\\n2\\n2\\n3\\n') == '4\\n'\nassert solution(r'2 4\\n2\\n2\\n3\\n') == '4\\n'\nassert solution(r'3 5\\n1\\n2\\n2\\n3\\n') == '4\\n'\nassert solution(r'1 2\\n2\\n1\\n2\\n3\\n') == '5\\n'\nassert solution(r'2 4\\n2\\n2\\n3\\n2\\n') == '5\\n'\nassert solution(r'3 5\\n1\\n2\\n2\\n3\\n2\\n') == '6\\n'\nassert solution(r'1 2\\n2\\n1\\n2\\n1\\n') == '7\\n'\nassert solution(r'2 3\\n3\\n2\\n3\\n2\\n') == '7\\n'\nassert solution(r'1 2\\n1\\n2\\n1\\n3\\n') == '7\\n'\nassert solution(r'1 3\\n1\\n2\\n1\\n3\\n') == '8\\n'\nassert solution(r'2 3\\n2\\n3\\n1\\n2\\n') == '8\\n'\nassert solution(r'1 3\\n1\\n2\\n1\\n3\\n1\\n') == '8\\n'\nassert solution(r'1 2\\n1\\n1\\n2\\n1\\n3\\n') == '9\\n'\nassert solution(r'2 3\\n2\\n3\\n1\\n2\\n1\\n') == '9\\n'\nassert solution(r'1 2\\n1\\n1\\n2\\n1\\n2\\n') == '10\\n'\nassert solution(r'2 3\\n2\\n3\\n1\\n2\\n1\\n2\\n') == '10\\n'\nassert solution(r'1 2\\n1\\n1\\n1\\n1\\n1\\n3\\n') == '11\\n'\nassert solution(r'2 3\\n2\\n3\\n1\\n2\\n1\\n2\\n1\\n') == '11\\n'\nassert solution(r'1 2\\n1\\n1\\n1\\n1\\n1\\n2\\n') == '12\\n'\nassert solution(r'2 3\\n2\\n3\\n1\\n2\\n1\\n2\\n1\\n2\\n') == '12\\n'\nassert solution(r'1 2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n') == '13\\n'\nassert solution(r'2 3\\n2\\n3\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n') == '13\\n'\nassert solution(r'1 2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n') == '14\\n'\nassert solution(r'2 3\\n2\\n3\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n1\\n') == '14\\n'\nassert solution(r'1 2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n') == '15\\n'\nassert solution(r'2 3\\n2\\n3\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n1\\n1\\n') == '15\\n'\nassert solution(r'1"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1\\n\""
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n3\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n3\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\n3\\n\") == \"1\"\nassert solution(\"10 3\\n10 2\\n\") == \"1\"\nassert solution(\"10 2\\n5 1\\n5 2\\n\") == \"3\"\nassert solution(\"10 2\\n10 3\\n10 1\\n\") == \"3\"\nassert solution(\"10 10\\n3\\n\") == \"1\"\n\nfrom typing import List"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n3\") == \"1\"\nassert solution(\"5 8\\n5 10\\n10 5\") == \"2\"\nassert solution(\"4 7\\n1 5\\n2 3\") == \"3\"\nassert solution(\"1 2\\n1 5\\n3 5\") == \"3\""
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == '1' # Should return 1\nassert solution(6) == '2' # Should return 2\nassert solution(11) == '4' # Should return 4\nassert solution(20) == '5' # Should return 5\nassert solution(25) == '6' # Should return 6"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 1\nassert solution() == 2\nassert solution() == 4\nassert solution() == 7\nassert solution() == 10\n"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 2\\n3\\n') == '1\\n'"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '3\\n2\\n3\\n1\\n'\n"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Test failed for input {input()}, expected {expected}\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '3\\n2\\n3\\n1\\n', \"The solution is incorrect.\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    3 4 5\n    \"\"\"\n) == '3\\n'\n\nassert solution(\n    \"\"\"\n    1 3 4\n    \"\"\"\n) == '2\\n'\n\nassert solution(\n    \"\"\"\n    0 2 2 3 2\n    \"\"\"\n) == '2\\n'\n\nassert solution(\n    \"\"\"\n    1 3 2\n    \"\"\"\n) == '2\\n'\n\nassert solution(\n    \"\"\"\n    1 2 4\n    \"\"\"\n) == '1\\n'\n\nassert solution(\n    \"\"\"\n    1 1 4\n    \"\"\"\n) == '1\\n'"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution([3, 4, 5]) == '3'\nassert solution([1, 3, 4]) == '3'\nassert solution([0, 2, 2, 3, 2]) == '3'\nassert solution([1, 3, 2]) == '1'\nassert solution([1, 2, 4]) == '3'\nassert solution([1, 1, 4]) == '3'"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == '3\\n2\\n3\\n1\\n'"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nassert solution(\"2 3 4\\n0 1 2\\n0 1 2\\n1 1 1\\n1 1 1\") == \"2\\n2\\n2\"\nassert solution(\"4 5 6\\n2 3 4\\n3 4 5\\n3 5 6\\n4 5 6\") == \"4\\n5\\n6\"\n"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '3\\n2\\n3\\n1\\n', \"Test case 1 failed\""
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2 HelloWorld.c\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n2 Add.c\\nint Main() {\\n  for (int i=0; i<10; i++)\\n    sum += i;\\n  printf(\\\"SUM %d\\\", sum);\\n}\\n\\nint Main() {\\n  printf(\\\"Hello %d\\\\n\\\", i);\\n  printf(\\\"THE END\\\\n\\\");\\n}\\n\\n\""
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin: str) -> str:\n    pass\n"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r\"\"\"\n2\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n\"\"\") == \"2 HelloWorld.c\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nassert solution(r\"\"\"\n1\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n\"\"\") == \"0\"\n\nassert solution(r\"\"\"\n2\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n3\nWrongFile.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n\"\"\") == \"2 HelloWorld.c\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nassert solution(r\"\"\"\n1\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n3\nWrongFile.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n4\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n5\nWrongFile.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n\"\"\") == \"2 HelloWorld.c\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nassert solution(r\"\"\"\n1\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == 'HelloWorld.c\\nThe END\\n'"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '0'"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(r\"2\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\") == 2\nassert solution(r\"3\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\") == 0\nassert solution(r\"2\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n\") == 2\nassert solution(r\"3\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n\") == 0\nassert solution(r\"2\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n\nimport re"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(r'\n**END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n\nint Main()"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n1\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\n2\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\n3\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n4\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n5\n"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"HelloWorld.c\\nint Main() { printf(\\\"Hello %d\\n\\\",i); }***END***\\nAdd.c\\nint Main() { for (int i=0; i<10; i++) sum += i; printf(\\\"SUM %d\\\", sum); }***END***\\nint Main() { printf(\\\"Hello %d\\\\n\\\",i); printf(\\\"THE END\\\\n\\\"); }***END***\") == \"2 HelloWorld.c\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\\n2 ADD.c\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\\n2 int Main() { printf(\\\"Hello %d\\\\n\\\",i); printf(\\\"THE END\\\\n\\\"); }***END***\""
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('***END***') == 0\nassert solution('int Main() {\\n\\tprintf(\"Hello %d\\n\", i);\\n}') == 2\nassert solution('for (int i = 0; i < 10; i++)\\n\\tsum += i;\\n\\tprintf(\"SUM %d\", sum);') == 2\nassert solution('int Main() {\\n\\tprintf(\"Hello %d\\n\", i);\\n\\tprintf(\"THE END\\n\");\\n}') == 0\nassert solution('int Main() {\\n\\tprintf(\"Hello %d\\n\", i);\\n}') == 2\nassert solution('int Main() {\\n\\tprintf(\"Hello %d\\n\", i);\\n\\tprintf(\"THE END\\n\");\\n}') == 2\nassert solution('int Main() {\\n\\tprintf(\"Hello %d\\n\", i);\\n\\tprintf(\"THE END\\n\");\\n}') == 2"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\\n2\\n2\\n2\"\nassert solution(stdin) == \"1\\n2\\n2\\n2\"\nassert solution(stdin) == \"1\\n2\\n2\\n2\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1\\n2\\n2\\n2\\n'"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\\n2\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\"\nassert solution(\"3 4\\n5 10 20\\n15 5 30\\n10 25 20\") == \"1\\n2\\n2\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\\n2\\n2\\n2\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\\n2\\n2\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\n2 2 2\\n4 2 1\\n4 4 1') == '1\\n2\\n2'"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3\\n2 2 2\\n4 2 1\\n4 4 1') == '1\\n2\\n2\\n2'"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\treturn \\\"\\\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\\n2\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"5\\n\"\nassert solution() == \"5\\n\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 20\") == \"5\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"5\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 20\\n50 70 10\\n100 110 4\\n150 190 16') == '5\\n'\n"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"5\\n\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\"\n"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution\n\nn, C = map(int, stdin.split())\nusers = set()\nfor _ in range(n):\n    p, b, u = map(int, stdin.split())\n    users.add(p)"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '5\\n' + '5\\n'\n"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Solution '{solution(stdin)}' is incorrect. Expected: {expected}\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected: {expected_output}, got: {solution(input())}\""
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"5 5\\n(2 5) (5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\\n\"\n) == \"26\""
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    5 5\n    2 5\n    .....\n        #.\n        #.\n        ....\n        #.##\n    1\n    6\n    4 2\n    4 3\n    3 3\n    2 3\n    1 3\n    1 2\n    ''') == '26'\n\nassert solution('''\n    5 5\n    2 5\n    .....\n        #.\n        #.\n        ....\n        #.##\n    1\n    6\n    4 2\n    4 3\n    3 3\n    2 3\n    1 3\n    1 2\n    ''') == 'IMPOSSIBLE'\n\nassert solution('''\n    6 6\n    2 2\n        #.\n        #.\n        ....\n        #.##\n    1\n    6\n    4 2\n    4 3\n    3 3\n    2 3\n    1 3\n    1 2\n    ''') == 'IMPOSSIBLE'\n\nassert solution('''\n    7 7\n    2 2\n        #.\n        #.\n        ....\n        #.##\n    1\n    6\n    4 2\n    4 3\n    3 3\n    2 3\n    1 3\n    1 2\n    ''') == 'IMPOSSIBLE'\n\nassert solution('''\n    5 5\n    2 5\n    1 2\n    1 3\n    1 4\n    1 5\n    1 6\n    1 7\n    1 8\n    1 9\n    1 10\n    1 11\n    1 12\n    1 13\n    1 14\n    1 15\n    1 16\n    1 17\n    1 18\n    1 19\n    1 20\n    1 21\n    1 22\n    1 23\n    1 24\n    1 25\n    1 26\n    1 27\n    1 28\n    1 29\n    1 30\n    1 31\n    1 32\n    1 33\n    1 34\n    1 35\n    1 36\n    1 37\n    1 38\n    1 39\n    1 40\n    1 41\n    1 42\n    1 43\n    1 44\n    1 45\n    1 46\n    1 47\n    1 48\n    1 49\n    1 50\n    1 51\n    1 52\n    1 53\n    1 54\n    1 55\n    1 56\n    1 57\n    1 58\n    1 59\n    1 60\n    ''') == '26'\n\nassert solution('''\n    5 5\n    2 5\n    1 2\n    1 3\n    1 4\n    1 5\n    1 6\n    1 7\n    1 8\n    1 9\n    1 10\n    1 11\n    1 12\n    1 13\n    1 14\n    1 15\n    1 16\n    1 17\n    1 18\n    1 19\n    1 20\n    1 21\n    1 22\n    1 23\n    1 24\n    1 25\n    1 26\n    1 27\n    1 28\n    1 29\n    1 30\n    1 31\n    1 32\n    1 33\n    1 34\n    1 35\n    1 36\n    1 37\n    1 38\n    1 39\n    1 40\n    1 41\n    1 42\n    1 43\n    1 44\n    1 45\n    1 46\n    1 47\n    1 48\n    1 49\n    1 50\n    1 51\n    1 52\n    1 53\n    1 54\n    1 55\n    1 56\n    1 57\n    1 58\n    1 59\n    1 60\n    ''') == 'IMPOSSIBLE'\n\nassert solution('''\n    6 6\n    2 2\n    1 1\n    1 2\n    1 3\n    1 4\n    1 5\n    1 6\n    1 7\n    1 8\n    1 9\n    1 10\n    1 11\n    1 12\n    1 13\n    1 14\n    1 15\n    1 16\n    1 17\n    1 18\n    1 19\n    1 20\n    1 21\n    1 22\n    1 23\n    1 24\n    1 25\n    1 26\n    1 27\n    1 28\n    1 29\n    "
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r\"5 5\n(2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\") == 26, \"Sample Output: {}\".format(solution(r\"5 5\n(2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\"))\n\nassert solution(r\"5 5\n(2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\") == 26, \"Sample Output: {}\".format(solution(r\"5 5\n(2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\"))"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 5\\n(2 5) (5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\\n\") == \"26\""
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected, f\"Your solution is incorrect. Expected: {expected}, Received: {solution}\""
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n5 5\n(2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\n''') == '26\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 5\\n(2 5) (5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\") == \"26\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    5 5\n    2 5\n    1 5\n    5 2\n    1 2\n    2 3\n    ''') == 26\n\nassert solution('''\n    5 5\n    2 5\n    1 5\n    5 2\n    1 2\n    2 3\n    ''') == 26\n\nassert solution('''\n    5 5\n    2 5\n    1 5\n    5 2\n    1 2\n    2 3\n    ''') == 26\n\nassert solution('''\n    5 5\n    2 5\n    1 5\n    5 2\n    1 2\n    2 3\n    ''') == 26\n\nassert solution('''\n    5 5\n    2 5\n    1 5\n    5 2\n    1 2\n    2 3\n    ''') == 26\n\nassert solution('''\n    5 5\n    2 5\n    1 5\n    5 2\n    1 2\n    2 3\n    ''') == 26\n\nassert solution('''\n    5 5\n    2 5\n    1 5\n    5 2\n    1 2\n    2 3\n    ''') == 26\n\nassert solution('''\n    5 5\n    2 5\n    1 5\n    5 2\n    1 2\n    2 3\n    ''') == 26\n\nassert solution('''\n    5 5\n    2 5\n    1 5\n    5 2\n    1 2\n    2 3\n    ''') == 26\n\nassert solution('''\n    5 5\n    2 5\n    1 5\n    5 2\n    1 2\n    2 3\n    ''') == 26\n\nassert solution('''\n    5 5\n    2 5\n    1 5\n    5 2\n    1 2\n    2 3\n    ''') == 26\n\nassert solution('''\n    5 5\n    2 5\n    1 5\n    5 2\n    1 2\n    2 3\n    ''') == 26\n\nassert solution('''\n    5 5\n    2 5\n    1 5\n    5 2\n    1 2\n    2 3\n    ''') == 26\n\nassert solution('''\n    5 5\n    2 5\n    1 5\n    5 2\n    1 2\n    2 3\n    ''') == 26\n\nassert solution('''\n    5 5\n    2 5\n    1 5\n    5 2\n    1 2\n    2 3\n    ''') == 26\n\nassert solution('''\n    5 5\n    2 5\n    1 5\n    5 2\n    1 2\n    2 3\n    ''') == 26\n\nassert solution('''\n    5 5\n    2 5\n    1 5\n    5 2\n    1 2\n    2 3\n    ''') == 26\n\nassert solution('''\n    5 5\n    2 5\n    1 5\n    5 2\n    1 2\n    2 3\n    ''') == 26\n\nassert solution('''\n    5 5\n    2 5\n    1 5\n    5 2\n    1 2\n    2 3\n    ''') == 26\n\nassert solution('''\n    5 5\n    2 5\n    1 5\n    5 2\n    1 2\n    2 3\n    ''') == 26\n\nassert solution('''\n    5 5\n    2 5\n    1 5\n    5 2\n    1 2\n    2 3\n    ''') == 26\n\nassert solution('''\n    5 5\n    2 5\n    1 5\n    5 2\n    1 2\n    2 3\n    ''') == 26\n\nassert solution('''\n    5 5\n    2 5\n    1 5\n    5 2\n    1 2\n    2 3\n    ''') == 26\n\nassert solution('''\n    5 5\n    2 5\n    1 5\n    5 2\n    1 2\n    2 3\n    ''') == 26\n\nassert solution('''\n    5 5\n    2 5\n    1 5\n    5 2\n    1 2\n    2 3\n    ''') == 26\n\nassert solution('''\n    5 5\n    2 5\n    1 5\n    5 2\n    1 2\n    2 3\n    ''') == 26\n\nassert solution('''\n    5 5\n    2 5\n    1 5\n    5 2\n    1 2\n    2 3\n    ''') == 26\n\nassert solution('''\n    5 5\n    2 5\n    1 5\n    5 2\n    1 2\n    2 3"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n5 5\n(2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\n''') == '26\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 5\\n(2 5) (5 3)\\n.....\\n.#.#\\n.#.#\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)') == 26, \"Test case 1 failed\"\n\nassert solution('5 5\\n(2 5) (5 3)\\n.....\\n.#.#\\n.#.#\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)') == 26, \"Test case 2 failed\"\n\nassert solution('5 5\\n(2 5) (5 3)\\n.....\\n.#.#\\n.#.#\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)') == 26, \"Test case 3 failed\"\n\nassert solution('5 5\\n(2 5) (5 3)\\n.....\\n.#.#\\n.#.#\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)') == 26, \"Test case 4 failed\"\n\nassert solution('5 5\\n(2 5) (5 3)\\n.....\\n.#.#\\n.#.#\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)') == 26, \"Test case 5 failed\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"success\", \"Invalid output. Please see the examples provided.\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(None) == \"failure\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"failure\" # should return \"failure\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"success\"\n"
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"failure\"\nassert solution(input()) == \"success\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"success\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'failure'"
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"failure\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1') == 'failure'\n"
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\\n\") == \"failure\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"possible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n') == 'possible'\nassert solution('1 2\\n2\\n3\\n4\\n5\\n') == 'impossible'"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2') == 'possible'\nassert solution('1 2 2\\n2 2\\n3 3\\n5 2 2\\n5 2 2\\n') == 'impossible'"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"possible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"possible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    2 2 2\n    1 2\n    3 3\n    5 2 2\n    5 2 2\n    ''') == 'possible'\nassert solution('''\n    2 2 2\n    1 2\n    3 3\n    4 2\n    4 2\n    ''') == 'impossible'\nassert solution('''\n    2 2 2\n    1 2\n    3 3\n    4 2\n    4 2\n    ''') == 'impossible'\nassert solution('''\n    2 2 2\n    1 2\n    3 3\n    4 2\n    4 2\n    ''') == 'possible'"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"possible\", \"Incorrect output. Expected 'possible', got '{}'\".format(solution())"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"possible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\") == \"possible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n\") == \"possible\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\") == \"0\\n\"\n"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 2\\n1 1 2\\n1 2 1\\n-1 1 2') == '0'\nassert solution('3 2\\n1 1 2\\n1 2 1\\n2 -1 1') == '2'\nassert solution('3 2\\n1 1 2\\n1 2 1\\n1 1 3') == '0'\nassert solution('3 2\\n1 1 2\\n1 2 1\\n-1 1 2') == '0'"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"0\\n\"\n"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"0\\n\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 2\\n1 1 2\\n1 2 1\\n-1 1 2') == '0'\nassert solution('3 4\\n1 1 2\\n1 2 3\\n1 3 4') == '2'\nassert solution('1 1 1') == '1'\nassert solution('1 1 2') == '2'\nassert solution('3 2\\n1 1 2\\n1 2 1\\n-1 1 2') == '0'\nassert solution('3 4\\n1 1 2\\n1 2 3\\n1 3 4') == '2'\nassert solution('1 1 1') == '1'\nassert solution('1 1 2') == '2'"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n3 2\n1 1 2\n1 2 1\n-1 1 2\n\"\"\") == \"0\\n\"\n\nassert solution(\n\"\"\"\n3 2\n1 3 2\n2 3 1\n-1 1 2\n\"\"\") == \"1\\n\"\n\nassert solution(\n\"\"\"\n3 2\n1 1 2\n1 2 1\n-1 1 2\n\"\"\") == \"0\\n\"\n\nassert solution(\n\"\"\"\n3 3\n1 1 2 3\n2 1 3 1\n3 1 2 3\n-1 1 2 3\n\"\"\") == \"2\\n\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\") == 0\nprint(\"All tests passed!\")"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == '0\\n'\n"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 0, \"The minimum number of vertical moves Peter has to make is 0.\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"0\\n\"\n"
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n353\\n\\n4 2\\n1234\") == \"3\\n353\\n4\\n1313\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"Output\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 2\\n353\\n\\n4 2\\n1234\\n') == '3\\n353\\n\\n4\\n1313'"
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\\n353\\n4\\n1313\\n\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"The solution is incorrect. \\nExpected output: {output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Solution for {stdin} failed. Expected output: {expected}, got: {solution(stdin)}\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(353) == \"3\"\nassert solution(1234) == \"4\"\n"
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n353\\n\") == \"3\\n353\\n\"\nassert solution(\"4 2\\n1234\\n\") == \"4\\n1313\\n\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n353\\n4 2\\n1234\\n\") == \"3\\n353\\n4\\n1313\\n\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\"\n"
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('12 30 45 3 11') == 'NO', 'The code is not correct'\nassert solution('12 0 1 12 1') == 'YES', 'The code is not correct'\nassert solution('3 47 0 4 9') == 'YES', 'The code is not correct'"
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution) == \"3\"\nassert solution(solution2) == \"2\"\nassert solution(solution3) == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 3\n"
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\\n\") == \"3\\n\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\\n\") == \"2\\n\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\\n\") == \"0\\n\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Testcase failed: {solution(input())}!= {expected}\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\nprint(\"OK\")"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 4\nassert solution(3) == 6\nassert solution(3) == 8"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Got '{solution(stdin)}', expected '{expected_output}'\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"6\"\nassert solution(input()) == \"8\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''3\n0 0 1\n2 0 1\n4 0 1''') == 4\nassert solution('''3\n0 0 2\n3 0 2\n6 0 2''') == 6\nassert solution('''3\n0 0 2\n2 0 2\n1 1 2''') == 8"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0 1\\n2 0 1\\n4 0 1\") == \"4\"\nassert solution(\"0 0 2\\n3 0 2\\n6 0 2\") == \"6\"\nassert solution(\"0 0 2\\n2 0 2\\n1 1 2\") == \"8\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 4 # correct solution\n"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == output, f\"Expected: {output}\\nGot: {solution(stdin)}\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0 1\\n2 0 1\\n4 0 1\") == \"4\"\nassert solution(\"0 0 2\\n3 0 2\\n6 0 2\") == \"6\"\nassert solution(\"0 0 2\\n2 0 2\\n1 1 2\") == \"8\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 4\nassert solution() == 6\nassert solution() == 8"
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n0 0 6 0 6 6 0 6\n1 3 3 5 5 3 3 1\n''') == 'YES'\n\nassert solution('''\n0 0 6 0 6 6 0 6\n7 3 9 5 11 3 9 1\n''') == 'NO'\n\nassert solution('''\n6 0 6 6 0 6 0 0\n7 4 4 7 7 10 10 7\n''') == 'YES'"
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\") == \"YES\"\nassert solution(\"1 3 3 5 5 3 3 1\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\") == \"NO\"\nassert solution(\"7 3 9 5 11 3 9 1\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\") == \"YES\"\nassert solution(\"7 4 4 7 7 10 10 7\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('0 0 6 0 6 6 0 6') == 'YES'\nassert solution('1 3 3 5 5 3 3 1') == 'YES'\nassert solution('0 0 6 0 6 6 0 6') == 'NO'\nassert solution('7 3 9 5 11 3 9 1') == 'NO'\nassert solution('6 0 6 6 0 6 0 0') == 'YES'"
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n') == 'YES'\nassert solution('0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\\n') == 'NO'\nassert solution('6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n') == 'YES'"
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n') == \"YES\\n\"\nassert solution('0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\\n') == \"NO\\n\"\nassert solution('6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n') == \"YES\\n\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\") == \"YES\"\nassert solution(\"1 3 3 5 5 3 3 1\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\") == \"NO\"\nassert solution(\"7 3 9 5 11 3 9 1\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\") == \"YES\"\n"
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n0 0 6 0 6 6 0 6\n1 3 3 5 5 3 3 1\n''') == 'YES'\n\nassert solution('''\n0 0 6 0 6 6 0 6\n7 3 9 5 11 3 9 1\n''') == 'NO'\n\nassert solution('''\n6 0 6 6 0 6 0 0\n7 4 4 7 7 10 10 7\n''') == 'YES'"
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\\n\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n\") == \"YES\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1\\n0\\n') == 'cslnb'\nassert solution('2\\n1 0\\n') == 'cslnb'\nassert solution('2\\n2 2\\n') =='sjfnb'\nassert solution('3\\n2 3 1\\n') =='sjfnb'"
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n0\") == \"cslnb\"\nassert solution(\"2\\n1 0\") == \"cslnb\"\nassert solution(\"2\\n2 2\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\") == \"sjfnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"sjfnb\" or solution(input()) == \"cslnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Incorrect output. Expected: '{output}', got: '{solution(input())}'\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n0\") == \"cslnb\"\nassert solution(\"2\\n1 0\") == \"cslnb\"\nassert solution(\"2\\n2 2\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\") == \"sjfnb\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n0\\n') == 'cslnb'\nassert solution('2\\n1 0\\n') == 'cslnb'\nassert solution('2\\n2 2\\n') =='sjfnb'\nassert solution('3\\n2 3 1\\n') =='sjfnb'\nassert solution('4\\n2 3 1\\n') =='sjfnb'\nassert solution('5\\n2 3 1\\n') =='sjfnb'\nassert solution('6\\n2 3 1\\n') =='sjfnb'\nassert solution('7\\n2 3 1\\n') =='sjfnb'\nassert solution('8\\n2 3 1\\n') =='sjfnb'\nassert solution('9\\n2 3 1\\n') =='sjfnb'\nassert solution('10\\n2 3 1\\n') =='sjfnb'\nassert solution('11\\n2 3 1\\n') =='sjfnb'\nassert solution('12\\n2 3 1\\n') =='sjfnb'\nassert solution('13\\n2 3 1\\n') =='sjfnb'\nassert solution('14\\n2 3 1\\n') =='sjfnb'\nassert solution('15\\n2 3 1\\n') =='sjfnb'\nassert solution('16\\n2 3 1\\n') =='sjfnb'\nassert solution('17\\n2 3 1\\n') =='sjfnb'\nassert solution('18\\n2 3 1\\n') =='sjfnb'\nassert solution('19\\n2 3 1\\n') =='sjfnb'\nassert solution('20\\n2 3 1\\n') =='sjfnb'\nassert solution('21\\n2 3 1\\n') =='sjfnb'\nassert solution('22\\n2 3 1\\n') =='sjfnb'\nassert solution('23\\n2 3 1\\n') =='sjfnb'\nassert solution('24\\n2 3 1\\n') =='sjfnb'\nassert solution('25\\n2 3 1\\n') =='sjfnb'\nassert solution('26\\n2 3 1\\n') =='sjfnb'\nassert solution('27\\n2 3 1\\n') =='sjfnb'\nassert solution('28\\n2 3 1\\n') =='sjfnb'\nassert solution('29\\n2 3 1\\n') =='sjfnb'\nassert solution('30\\n2 3 1\\n') =='sjfnb'\nassert solution('31\\n2 3 1\\n') =='sjfnb'\nassert solution('32\\n2 3 1\\n') =='sjfnb'\nassert solution('33\\n2 3 1\\n') =='sjfnb'\nassert solution('34\\n2 3 1\\n') =='sjfnb'\nassert solution('35\\n2 3 1\\n') =='sjfnb'\nassert solution('36\\n2 3 1\\n') =='sjfnb'\nassert solution('37\\n2 3 1\\n') =='sjfnb'\nassert solution('38\\n2 3 1\\n') =='sjfnb'\nassert solution('39\\n2 3 1\\n') =='sjfnb'\nassert solution('40\\n2 3 1\\n') =='sjfnb'\nassert solution('41\\n2 3 1\\n') =='sjfnb'\nassert solution('42\\n2 3 1\\n') =='sjfnb'\nassert solution('43\\n2 3 1\\n') =='sjfnb'\nassert solution('44\\n2 3 1\\n') =='sjfnb'\nassert solution('45\\n2 3 1\\n') =='sjfnb'\nassert solution('46\\n2 3 1\\n') =='sjfnb'\nassert solution('47\\n2 3"
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case} failed. Expected output: '{expected_output}', Received: '{solution(input())}'\"\n\ntest_case = 1\na1 = 0\na2 = 1\na3 = 2\na4 = 3\na5 = 4\na6 = 5\na7 = 6\na8 = 7\na9 = 8\na10 = 9\na11 = 10\na12 = 11\na13 = 12\na14 = 13\na15 = 14\na16 = 15\na17 = 16\na18 = 17\na19 = 18\na20 = 19\na21 = 20\na22 = 21\na23 = 22\na24 = 23\na25 = 24\na26 = 25\na27 = 26\na28 = 27\na29 = 28\na30 = 29\na31 = 30\na32 = 31\na33 = 32\na34 = 33\na35 = 34\na36 = 35\na37 = 36\na38 = 37\na39 = 38\na40 = 39\na41 = 40\na42 = 41\na43 = 42\na44 = 43\na45 = 44\na46 = 45\na47 = 46\na48 = 47\na49 = 48\na50 = 49\na51 = 50\na52 = 51\na53 = 52\na54 = 53\na55 = 54\na56 = 55\na57 = 56\na58 = 57\na59 = 58\na60 = 59\na61 = 60\na62 = 61\na63 = 62\na64 = 63\na65 = 64\na66 = 65\na67 = 66\na68 = 67\na69 = 68\na70 = 69\na71 = 70\na72 = 71\na73 = 72\na74 = 73\na75 = 74\na76 = 75\na77 = 76\na78 = 77\na79 = 78\na80 = 79\na81 = 80\na82 = 81\na83 = 82\na84 = 83\na85 = 84\na86 = 85\na87 = 86\na88 = 87\na89 = 88\na90 = 89\na91 = 90\na92 = 91\na93 = 92\na94 = 93\na95 = 94\na96 = 95\na97 = 96\na98 = 97\na99 = 98\na100 = 99\na101 = 100\na102 = 101\na103 = 102\na104 = 103\na105 = 104\na106 = 105\na107 = 106\na108 = 107\na109 = 108\na110 = 109\na111 = 110\na112 = 111\na113 = 112\na114 = 113\na115 = 114\na116 = 115\na117 = 116\na118 = 117\na119 = 118\na120 = 1"
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(b'Input\\n1\\n0\\nOutput\\ncslnb\\n') == 'cslnb\\n'\nassert solution(b'Input\\n2\\n1 0\\nOutput\\ncslnb\\n') == 'cslnb\\n'\nassert solution(b'Input\\n2\\n2 2\\nOutput\\nsjfnb\\n') =='sjfnb\\n'\nassert solution(b'Input\\n3\\n2 3 1\\nOutput\\nsjfnb\\n') =='sjfnb\\n'"
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\"\n"
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5\\n1 5 3\") == \"2\"\nassert solution(\"1 2\\n1\") == \"1\"\nassert solution(\"1 1\\n1\") == \"0\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == \"2\\n\"\nassert solution(\"1 2\\n1\\n\") == \"1\\n\"\nassert solution(\"1 1\\n1\\n\") == \"0\\n\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5\\n1 5 3\") == \"2\"\nassert solution(\"1 2\\n1\") == \"1\"\nassert solution(\"1 1\\n1\") == \"0\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\\n1 2\\n1\\n\\n1 1\\n1\\n\") == \"2\"\nassert solution(\"1 2\\n1\\n\\n1 1\\n1\\n\") == \"1\"\nassert solution(\"1 1\\n1\\n\\n1 1\\n1\\n\") == \"0\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5\\n1 5 3\") == 2\nassert solution(\"1 2\\n1\") == 1\nassert solution(\"1 1\\n1\") == 0"
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\", \"Test case 1 failed\"\n\nassert solution(stdin) == \"1\", \"Test case 2 failed\"\n\nassert solution(stdin) == \"0\", \"Test case 3 failed\"\n\nassert solution(stdin) == \"2\", \"Test case 4 failed\"\n\nassert solution(stdin) == \"1\", \"Test case 5 failed\"\n\nassert solution(stdin) == \"0\", \"Test case 6 failed\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == 2\nassert solution(\"1 2\\n1\\n\") == 1\nassert solution(\"1 1\\n1\\n\") == 0"
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == \"2\"\nassert solution(\"1 2\\n1\\n\") == \"1\"\nassert solution(\"1 1\\n1\\n\") == \"0\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5 3\") == \"2\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 1\") == \"0\""
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == [0, 1]\nassert solution(2) == [-1, 0, 1]"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 2\nassert solution(4) == 2\nassert solution(5) == 3\nassert solution(6) == 3\nassert solution(7) == 3\nassert solution(8) == 3\nassert solution(9) == 3\nassert solution(10) == 3\nassert solution(11) == 3\nassert solution(12) == 3\nassert solution(13) == 3\nassert solution(14) == 3\nassert solution(15) == -1\nassert solution(16) == -1\nassert solution(17) == 0\nassert solution(18) == 0\nassert solution(19) == 1\nassert solution(20) == 1\nassert solution(21) == 0\nassert solution(22) == 0\nassert solution(23) == 1\nassert solution(24) == 1\nassert solution(25) == 0\nassert solution(26) == 0\nassert solution(27) == 1\nassert solution(28) == 1\nassert solution(29) == 0\nassert solution(30) == 0\nassert solution(31) == 1\nassert solution(32) == 1\nassert solution(33) == 0\nassert solution(34) == 0\nassert solution(35) == 1\nassert solution(36) == 1\nassert solution(37) == 0\nassert solution(38) == 0\nassert solution(39) == 1\nassert solution(40) == 1\nassert solution(41) == 0\nassert solution(42) == 0\nassert solution(43) == 1\nassert solution(44) == 1\nassert solution(45) == 0\nassert solution(46) == 0\nassert solution(47) == 1\nassert solution(48) == 1\nassert solution(49) == 0\nassert solution(50) == 0\nassert solution(51) == 1\nassert solution(52) == 1\nassert solution(53) == 0\nassert solution(54) == 0\nassert solution(55) == 1\nassert solution(56) == 1\nassert solution(57) == 0\nassert solution(58) == 0\nassert solution(59) == 1\nassert solution(60) == 1\nassert solution(61) == 0\nassert solution(62) == 0\nassert solution(63) == 1\nassert solution(64) == 1\nassert solution(65) == 0\nassert solution(66) == 0\nassert solution(67) == 1\nassert solution(68) == 1\nassert solution(69) == 0\nassert solution(70) == 0\nassert solution(71) == 1\nassert solution(72) == 1\nassert solution(73) == 0\nassert solution(74) == 0\nassert solution(75) == 1\nassert solution(76) == 1\nassert solution(77) == 0\nassert solution(78) == 0\nassert solution(79) == 1\nassert solution(80) == 1\nassert solution(81) == 0\nassert solution(82) == 0\nassert solution(83) == 1\nassert solution(84) == 1\nassert solution(85) == 0\nassert solution(86) == 0\nassert solution(87) == 1\nassert solution(88) == 1\nassert solution(89) == 0\nassert solution(90) == 0\nassert solution(91) == 1\nassert solution(92) == 1\nassert solution(93) == 0\nassert solution(94) == 0\nassert solution(95) == 1\nassert solution(96) == 1\nassert solution(97) == 0\nassert solution(98) == 0\nassert solution(99) == 1\nassert solution(100) == 1\nassert solution(101) == 0\nassert solution(102) == 0\nassert solution(103) == 1\n"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == '1\\n0 1\\n0\\n1\\n'\nassert solution(2) == '2\\n-1 0 1\\n1\\n0 1\\n'"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"1\"\n\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"3\"\nassert solution(\"7\") == \"1\"\n\nassert solution(\"10\") == \"5\"\nassert solution(\"11\") == \"6\"\nassert solution(\"12\") == \"1\"\n\nassert solution(\"15\") == \"2\"\nassert solution(\"16\") == \"3\"\nassert solution(\"17\") == \"1\"\n\nassert solution(\"20\") == \"5\"\nassert solution(\"21\") == \"6\"\nassert solution(\"22\") == \"1\"\n\nassert solution(\"25\") == \"2\"\nassert solution(\"26\") == \"3\"\nassert solution(\"27\") == \"1\"\n\nassert solution(\"30\") == \"5\"\nassert solution(\"31\") == \"6\"\nassert solution(\"32\") == \"1\"\n\nassert solution(\"35\") == \"2\"\nassert solution(\"36\") == \"3\"\nassert solution(\"37\") == \"1\"\n\nassert solution(\"40\") == \"5\"\nassert solution(\"41\") == \"6\"\nassert solution(\"42\") == \"1\"\n\nassert solution(\"45\") == \"2\"\nassert solution(\"46\") == \"3\"\nassert solution(\"47\") == \"1\"\n\nassert solution(\"50\") == \"5\"\nassert solution(\"51\") == \"6\"\nassert solution(\"52\") == \"1\"\n\nassert solution(\"55\") == \"2\"\nassert solution(\"56\") == \"3\"\nassert solution(\"57\") == \"1\"\n\nassert solution(\"60\") == \"5\"\nassert solution(\"61\") == \"6\"\nassert solution(\"62\") == \"1\"\n\nassert solution(\"65\") == \"2\"\nassert solution(\"66\") == \"3\"\nassert solution(\"67\") == \"1\"\n\nassert solution(\"70\") == \"5\"\nassert solution(\"71\") == \"6\"\nassert solution(\"72\") == \"1\"\n\nassert solution(\"75\") == \"2\"\nassert solution(\"76\") == \"3\"\nassert solution(\"77\") == \"1\"\n\nassert solution(\"80\") == \"5\"\nassert solution(\"81\") == \"6\"\nassert solution(\"82\") == \"1\"\n\nassert solution(\"85\") == \"2\"\nassert solution(\"86\") == \"3\"\nassert solution(\"87\") == \"1\"\n\nassert solution(\"90\") == \"5\"\nassert solution(\"91\") == \"6\"\nassert solution(\"92\") == \"1\"\n\nassert solution(\"95\") == \"2\"\nassert solution(\"96\") == \"3\"\nassert solution(\"97\") == \"1\"\n\nassert solution(\"100\") == \"5\"\nassert solution(\"101\") == \"6\"\nassert solution(\"102\") == \"1\"\n\nassert solution(\"105\") == \"2\"\nassert solution(\"106\") == \"3\"\nassert solution(\"107\") == \"1\"\n\nassert solution(\"110\") == \"5\"\nassert solution(\"111\") == \"6\"\nassert solution(\"112\") == \"1\"\n\nassert solution(\"115\") == \"2\"\nassert solution(\"116\") == \"3\"\nassert solution(\"117\") == \"1\"\n\nassert solution(\"120\") == \"5\"\nassert solution(\"121\") == \"6\"\nassert solution(\"122\") == \"1\"\n\nassert solution(\"125\") == \"2\"\nassert solution(\"126\") == \"3\"\nassert solution(\"127\") == \"1\"\n\nassert solution(\"130\") == \"5\"\nassert solution(\"131\") == \"6\"\nassert solution(\"132\") == \"1\"\n\nassert solution(\"135\") == \"2\"\nassert solution(\"136\") == \"3\"\nassert solution(\"137\") == \"1\"\n\nassert solution(\"140\") == \"5\"\nassert solution(\"141\") == \"6\"\nassert solution(\"142\") == \"1\"\n\nassert solution(\"145\") == \"2\"\nassert solution(\"146\")"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1') == 1\nassert solution('2') == 2\nassert solution('3') == -1"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == '1\\n0 1\\n0'\nassert solution(2) == '2\\n-1 0 1\\n1'\nassert solution(3) == '-1\\n0 1\\n0'\nassert solution(4) == '-1\\n0 1\\n0'\nassert solution(5) == '-1\\n0 1\\n0'\nassert solution(6) == '-1\\n0 1\\n0'\nassert solution(7) == '-1\\n0 1\\n0'\nassert solution(8) == '-1\\n0 1\\n0'\nassert solution(9) == '-1\\n0 1\\n0'\nassert solution(10) == '-1\\n0 1\\n0'\nassert solution(11) == '-1\\n0 1\\n0'\nassert solution(12) == '-1\\n0 1\\n0'\nassert solution(13) == '-1\\n0 1\\n0'\nassert solution(14) == '-1\\n0 1\\n0'\nassert solution(15) == '-1\\n0 1\\n0'\nassert solution(16) == '-1\\n0 1\\n0'\nassert solution(17) == '-1\\n0 1\\n0'\nassert solution(18) == '-1\\n0 1\\n0'\nassert solution(19) == '-1\\n0 1\\n0'\nassert solution(20) == '-1\\n0 1\\n0'\nassert solution(21) == '-1\\n0 1\\n0'\nassert solution(22) == '-1\\n0 1\\n0'\nassert solution(23) == '-1\\n0 1\\n0'\nassert solution(24) == '-1\\n0 1\\n0'\nassert solution(25) == '-1\\n0 1\\n0'\nassert solution(26) == '-1\\n0 1\\n0'\nassert solution(27) == '-1\\n0 1\\n0'\nassert solution(28) == '-1\\n0 1\\n0'\nassert solution(29) == '-1\\n0 1\\n0'\nassert solution(30) == '-1\\n0 1\\n0'\nassert solution(31) == '-1\\n0 1\\n0'\nassert solution(32) == '-1\\n0 1\\n0'\nassert solution(33) == '-1\\n0 1\\n0'\nassert solution(34) == '-1\\n0 1\\n0'\nassert solution(35) == '-1\\n0 1\\n0'\nassert solution(36) == '-1\\n0 1\\n0'\nassert solution(37) == '-1\\n0 1\\n0'\nassert solution(38) == '-1\\n0 1\\n0'\nassert solution(39) == '-1\\n0 1\\n0'\nassert solution(40) == '-1\\n0 1\\n0'\nassert solution(41) == '-1\\n0 1\\n0'\nassert solution(42) == '-1\\n0 1\\n0'\nassert solution(43) == '-1\\n0 1\\n0'\nassert solution(44) == '-1\\n0 1\\n0'\nassert solution(45) == '-1\\n0 1\\n0'\nassert solution(46) == '-1\\n0 1\\n0'\nassert solution(47) == '-1\\n0 1\\n0'\nassert solution(48) == '-1\\n0 1\\n0'\nassert solution(49) == '-1\\n0 1\\n0'\nassert solution(50) == '-1\\n0 1\\n0'\nassert solution(51) == '-1\\n0 1\\n0'\nassert solution(52) == '-1\\n0 1\\n0'\nassert solution(53) == '-1\\n0 1\\n0'\nassert solution(54) == '-1\\n0 1\\n0'\nassert solution(55)"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == [1]\nassert solution(2) == [1, 0, 1]\nassert solution(3) == [-1, 0, 1]\nassert solution(4) == [-1, -2, 1]\nassert solution(5) == [-1, -3, -1, 1]\nassert solution(6) == [-1, -3, -2, -1, 1]\nassert solution(7) == [-1, -3, -3, -1, -1, 1]\nassert solution(8) == [-1, -3, -3, -2, -1, -1, 1]\nassert solution(9) == [-1, -3, -3, -3, -1, -1, -1, 1]\nassert solution(10) == [-1, -3, -3, -3, -2, -1, -1, -1, 1]\nassert solution(11) == [-1, -3, -3, -3, -3, -1, -1, -1, -1, 1]\nassert solution(12) == [-1, -3, -3, -3, -3, -2, -1, -1, -1, -1, 1]\nassert solution(13) == [-1, -3, -3, -3, -3, -3, -1, -1, -1, -1, -1, 1]\nassert solution(14) == [-1, -3, -3, -3, -3, -3, -2, -1, -1, -1, -1, -1, 1]\nassert solution(15) == [-1, -3, -3, -3, -3, -3, -3, -1, -1, -1, -1, -1, -1, 1]\nassert solution(16) == [-1, -3, -3, -3, -3, -3, -3, -2, -1, -1, -1, -1, -1, -1, 1]\nassert solution(17) == [-1, -3, -3, -3, -3, -3, -3, -3, -1, -1, -1, -1, -1, -1, -1, 1]\nassert solution(18) == [-1, -3, -3, -3, -3, -3, -3, -3, -2, -1, -1, -1, -1, -1, -1, -1, 1]\nassert solution(19) == [-1, -3, -3, -3, -3, -3, -3, -3, -3, -1, -1, -1, -1, -1, -1, -1, -1, 1]\nassert solution(20) == [-1, -3, -3, -3, -3, -3, -3, -3, -3, -2, -1, -1, -1, -1, -1, -1, -1, -1, 1]\nassert solution(21) == [-1, -3, -3, -3, -3, -3, -3, -3, -3, -3, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1]\nassert solution(22) == [-1, -3, -3, -3, -3, -3, -3, -3, -3, -3, -2, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1]\nassert solution(23) == [-1, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1]\nassert solution(24) == [-1, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1]\nassert solution("
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\\n0 1\\n0\"\nassert solution(\"2\") == \"2\\n-1 0 1\\n1\"\nassert solution(\"3\") == \"-1\"\nassert solution(\"15\") == \"-1\"\nassert solution(\"50\") == \"2\\n-1 0 1\\n1\""
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n') == '1\\n0 1\\n0\\n1\\n'\nassert solution('2\\n') == '2\\n-1 0 1\\n1\\n0 1\\n'"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n\") == \"1\\n0 1\\n0\\n1\\n\"\nassert solution(\"2\\n\") == \"2\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(\"16\\n\") == \"16\\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3 3\\n2 3 2 2\\n\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Test failed: Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1 3 3 \\n2 3 2 \\n1 2 2\", \"Test case 1 failed.\"\nassert solution() == \"1 3 3 \\n2 3 2 \\n1 2 2\", \"Test case 2 failed.\"\nassert solution() == \"1 3 3 \\n2 3 2 \\n1 2 2\", \"Test case 3 failed.\"\nassert solution() == \"1 2 2 \\n2 3 2 \\n1 3 3\", \"Test case 4 failed.\"\nassert solution() == \"1 3 3 \\n2 3 2 \\n1 2 2\", \"Test case 5 failed.\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3 \"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"2 3 2 \"\nassert solution(\"3 2 5 3\\n1 3 1\\n\") == \"1 2 2\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '1 3 3 ', \"Expected output 1 3 3\"\n"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == []\nassert solution(\"1\\n\") == [1]\nassert solution(\"1\\n1\\n\") == [1, 1]\nassert solution(\"1\\n2\\n1\\n\") == [1, 2, 1]\nassert solution(\"1\\n3\\n2\\n1\\n\") == [1, 3, 2, 1]\nassert solution(\"1\\n4\\n3\\n2\\n1\\n\") == [1, 4, 3, 2, 1]\nassert solution(\"1\\n5\\n4\\n3\\n2\\n1\\n\") == [1, 5, 4, 3, 2, 1]\n\nn = int(input())\nk = int(input())\nm = int(input())\na = int(input())\n\ng = list(map(int, input().split()))\nvotes = [0] * n\nlast_vote = [0] * n\n\nfor i in range(a):\n    vote = g[i]\n    if vote <= k:\n        votes[vote - 1] += 1\n        last_vote[vote - 1] = i + 1\n\nfor i in range(a, m):\n    if votes[i - a] == k:\n        votes[i - a] += 1\n        last_vote[i - a] = i + 1\n\nfor i in range(m - a):\n    if votes[i] == k and last_vote[i] > last_vote[i + a]:\n        votes[i] += 1\n        last_vote[i] = i + 1\n\nresult = [0] * n\nfor i in range(n):\n    if votes[i] == k:\n        result[i] = 1\n    elif votes[i] + 1 == k:\n        result[i] = 2\n    else:\n        result[i] = 3\n\nfor i in range(n):\n    print(result[i])"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 1 5 4\\n1 2 1 3\\n') == '1 3 3\\n'\nassert solution('3 1 5 3\\n1 3 1\\n') == '2 3 2\\n'\nassert solution('3 2 5 3\\n1 3 1\\n') == '1 2 2\\n'"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3 1 3 3 2 3\"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"1 3 3 1\"\nassert solution(\"3 2 5 3\\n1 3 1\\n\") == \"1 2 3 1\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Input: {input()}, Expected Output: {expected_output}\"\n"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1 3 3\\n2 3 2\\n1 2 2\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('110\\n2\\n') == '3'\nassert solution('111111011\\n2\\n') == '169'\n\nfrom typing import List"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('110\\n2\\n') == '3\\n'\nassert solution('111111011\\n2\\n') == '169\\n'"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\"\nassert solution(\"111111011\\n2\\n\") == \"169\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\"\nassert solution(\"111111011\\n2\\n\") == \"169\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\\n\"\nassert solution(\"111111011\\n2\\n\") == \"169\\n\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\"\nassert solution(\"111111011\\n2\\n\") == \"169\"\n"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\\n\"\nassert solution(\"111111011\\n2\\n\") == \"169\\n\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output\nprint(\"OK\")"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\\n\", \"The output should be 3.\"\nassert solution(\"111111011\\n2\\n\") == \"169\\n\", \"The output should be 169.\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\"\nassert solution(\"111111011\\n2\\n\") == \"169\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 1 2 0 0\\n3\\n1 1\\n2 1\\n2 3\") == \"11.084259940083\"\nassert solution(\"5 0 4 2 2 0\\n5\\n5 2\\n3 0\\n5 5\\n3 5\\n3 3\") == \"33.121375178000\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == expected_output, f\"Test failed: {input} should return {expected_output}, but returned {solution(input)}\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1 1 2 0 0\\n3\\n1 1\\n2 1\\n2 3\\n\") == \"11.084259940083\"\nassert solution(\"5 0 4 2 2 0\\n5\\n5 2\\n3 0\\n5 5\\n3 5\\n3 3\\n\") == \"33.121375178000\"\n"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Test failed: Expected {output()}, got {solution(input())}\"\n"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 1 2 0 0\\n3\\n1 1\\n2 1\\n2 3\\n\") == \"11.084259940083\"\nassert solution(\"5 0 4 2 2 0\\n5\\n5 2\\n3 0\\n5 5\\n3 5\\n3 3\\n\") == \"33.121375178000\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"The solution is {solution(stdin)}, but expected {expected_output}.\"\nfor i, (a, b) in enumerate(zip(solution(stdin).split(), expected_output.split())):\n    print(f\"Case {i+1}:\")\n    print(f\"Input: {stdin}\")\n    print(f\"Output: {a:.10f}\")\n"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"3 1 1 2 0 0\\n3\\n1 1\\n2 1\\n2 3\\n\"\n) == \"11.084259940083\\n\"\n\nassert solution(\n    \"5 0 4 2 2 0\\n5\\n5 2\\n3 0\\n5 5\\n3 5\\n3 3\\n\"\n) == \"33.121375178000\\n\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 1 2 0 0\\n3\\n1 1\\n2 1\\n2 3\\n\") == \"11.084259940083\\n\"\nassert solution(\"5 0 4 2 2 0\\n5\\n5 2\\n3 0\\n5 5\\n3 5\\n3 3\\n\") == \"33.121375178000\\n\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == output, f\"The solution for the problem is incorrect. Please check the solution and input.\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 5\") == \"2\"\nassert solution(\"8 15\") == \"1\"\nassert solution(\"7 20\") == \"0\"\nassert solution(\"1000000000000 1000000000001\") == \"500000000000\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0\", \"Expected '0', got: '{}'\".format(solution(stdin))\nassert solution(stdin) == \"2\", \"Expected '2', got: '{}'\".format(solution(stdin))\nassert solution(stdin) == \"1\", \"Expected '1', got: '{}'\".format(solution(stdin))\nassert solution(stdin) == \"0\", \"Expected '0', got: '{}'\".format(solution(stdin))"
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('8 5\\n8 15\\n7 20\\n1000000000000 1000000000001\\n') == '2\\n1\\n0\\n500000000000\\n'"
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 5\") == \"2\"\nassert solution(\"8 15\") == \"1\"\nassert solution(\"7 20\") == \"0\"\nassert solution(\"1000000000000 1000000000001\") == \"500000000000\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\nprint(solution(input()))"
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 5\") == \"2\"\nassert solution(\"8 15\") == \"1\"\nassert solution(\"7 20\") == \"0\"\nassert solution(\"1000000000000 1000000000001\") == \"500000000000\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('8 5') == '2'\nassert solution('8 15') == '1'\nassert solution('7 20') == '0'\nassert solution('1000000000000 1000000000001') == '500000000000'"
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 5\") == \"2\"\nassert solution(\"8 15\") == \"1\"\nassert solution(\"7 20\") == \"0\"\nassert solution(\"1000000000000 1000000000001\") == \"500000000000\"\nassert solution(\"5000000000000\") == \"5000000000000\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('8 5\\n') == '2\\n'\nassert solution('8 15\\n') == '1\\n'\nassert solution('7 20\\n') == '0\\n'\nassert solution('1000000000000 1000000000001\\n') == '500000000000\\n'"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Test failed: {solution(input())}!= {output()}\"\n"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 1 10\\n01000\\n\") == \"11\"\nassert solution(\"5 10 1\\n01000\\n\") == \"2\"\nassert solution(\"7 2 3\\n1111111\\n\") == \"0\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 1 10\\n01000\") == \"11\"\nassert solution(\"5 10 1\\n01000\") == \"2\"\nassert solution(\"7 2 3\\n1111111\") == \"0\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 1 10\\n01000\\n\") == \"11\"\nassert solution(\"5 10 1\\n01000\\n\") == \"2\"\nassert solution(\"7 2 3\\n1111111\\n\") == \"0\"\n"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 1 10\\n01000\") == \"11\"\nassert solution(\"5 10 1\\n01000\") == \"2\"\nassert solution(\"7 2 3\\n1111111\") == \"0\"\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Incorrect output\\nInput: {input()}\\nOutput: {output()}\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(str(int(input()) + 1)) == str(int(input()) + 1)\nassert solution(str(int(input()) + 10)) == str(int(input()) + 10)\nassert solution(str(int(input()) + 1)) == str(int(input()) + 1)"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 1 10\\n01000\") == \"11\", \"The solution is incorrect\"\nassert solution(\"5 10 1\\n01000\") == \"2\", \"The solution is incorrect\"\nassert solution(\"7 2 3\\n1111111\") == \"0\", \"The solution is incorrect\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 1 10\\n01000\") == \"11\", \"Expected result: 11, actual result: {}\".format(solution(\"5 1 10\\n01000\"))\nassert solution(\"5 10 1\\n01000\") == \"2\", \"Expected result: 2, actual result: {}\".format(solution(\"5 10 1\\n01000\"))\nassert solution(\"7 2 3\\n1111111\") == \"0\", \"Expected result: 0, actual result: {}\".format(solution(\"7 2 3\\n1111111\"))"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected output: {output}, but got: {solution(input())}\"\n"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\\n3 1 1\\n\") == \"2 1\"\nassert solution(\"Input\\n5 1 2\\n\") == \"19 5\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Test failed: {solution(input())}!= {output()}\"\n"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1 1\\n5 1 2\\n\") == \"2 1\\n19 5\\n\"\nassert solution(\"3 2 2\\n5 2 3\\n\") == \"-1\\n\"\nassert solution(\"3 2 1\\n5 3 2\\n\") == \"19 5\\n\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1 1\") == \"2 1\"\nassert solution(\"5 1 2\") == \"19 5\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output() for input, output in zip(input_data, output_data)\n\ninput_data = [(\"3 1 1\", \"2 1\"), (\"5 1 2\", \"19 5\")]\noutput_data = [(\"2 1\",), (\"19 5\",)]"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 1 1') == '2 1'\nassert solution('5 1 2') == '19 5'"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1 1\\n\") == \"2 1\\n\"\nassert solution(\"5 1 2\\n\") == \"19 5\\n\"\nassert solution(\"3 1 1\\n2 1\\n\") == \"-1\\n\"\nassert solution(\"5 1 2\\n2 1\\n\") == \"19 5\\n\"\nassert solution(\"3 1 1\\n2 1\\n3 2\\n\") == \"-1\\n\"\nassert solution(\"5 1 2\\n2 1\\n3 2\\n\") == \"19 5\\n\"\nassert solution(\"5 1 2\\n2 1\\n3 2\\n4 3\\n\") == \"30 5\\n\"\nassert solution(\"3 1 1\\n2 1\\n3 2\\n4 3\\n\") == \"-1\\n\"\nassert solution(\"5 1 2\\n2 1\\n3 2\\n4 3\\n\") == \"30 5\\n\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Test failed: solution({input()}) == '{output()}'\\n\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 1, 1) == \"2 1\"\nassert solution(5, 1, 2) == \"19 5\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 1, 1) == \"2 1\"\nassert solution(5, 1, 2) == \"19 5\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 1\") == \"6\\n\"\nassert solution(\"10 2\") == \"4\\n\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 1\") == \"6\"\nassert solution(\"10 2\") == \"4\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 1\") == \"6\"\nassert solution(\"10 2\") == \"4\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 1\") == \"6\\n\"\nassert solution(\"10 2\") == \"4\\n\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 1\\n\") == \"6\\n\"\nassert solution(\"10 2\\n\") == \"4\\n\"\n"
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 1\\n\") == \"6\\n\"\nassert solution(\"10 2\\n\") == \"4\\n\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 1\") == \"6\"\nassert solution(\"10 2\") == \"4\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 1\\n\") == \"6\\n\"\nassert solution(\"10 2\\n\") == \"4\\n\"\n"
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 1\") == \"6\"\nassert solution(\"10 2\") == \"4\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 1\") == \"6\"\nassert solution(\"10 2\") == \"4\"\n"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n1\n-149.154.167.99\n''') == '''\n1\n0.0.0.0/0\n'''\n\nassert solution('''\n4\n-149.154.167.99\n+149.154.167.100/30\n+149.154.167.128/25\n-149.154.167.120/29\n''') == '''\n2\n149.154.167.99\n149.154.167.120/29\n'''\n\nassert solution('''\n5\n-127.0.0.4/31\n+127.0.0.8\n+127.0.0.0/30\n-195.82.146.208/29\n-127.0.0.6/31\n''') == '''\n2\n195.0.0.0/8\n127.0.0.4/30\n'''\n\nassert solution('''\n2\n+127.0.0.1/32\n-127.0.0.1\n''') == '''\n-1\n'''"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\nassert solution('2') == '-1'\nassert solution('1\\n-149.154.167.99') == '1\\n0.0.0.0/0'\nassert solution('4\\n-149.154.167.99\\n+149.154.167.100/30\\n+149.154.167.128/25\\n-149.154.167.120/29') == '2\\n149.154.167.99\\n149.154.167.120/29'\nassert solution('5\\n-127.0.0.4/31\\n+127.0.0.8\\n+127.0.0.0/30\\n-195.82.146.208/29\\n-127.0.0.6/31') == '2\\n195.0.0.0/8\\n127.0.0.4/30'\nassert solution('2\\n+127.0.0.1/32\\n-127.0.0.1') == '-1'"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('-149.154.167.99') == '1'\nassert solution('+149.154.167.100/30') == '1'\nassert solution('+149.154.167.128/25') == '1'\nassert solution('-149.154.167.120/29') == '1'"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'Output\\n2\\n149.154.167.99\\n149.154.167.120/29\\n195.0.0.0/8\\n127.0.0.4/30\\n'\n"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\") == -1\nassert solution(\"1\\n-149.154.167.99\\n\") == 1\nassert solution(\"4\\n-149.154.167.99\\n+149.154.167.100/30\\n+149.154.167.128/25\\n-149.154.167.120/29\\n\") == 2\nassert solution(\"5\\n-127.0.0.4/31\\n+127.0.0.8\\n+127.0.0.0/30\\n-195.82.146.208/29\\n-127.0.0.6/31\\n\") == 2\nassert solution(\"2\\n+127.0.0.1/32\\n-127.0.0.1\\n\") == -1"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(read_input()) == expected_output()"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Input\") == \"Output\""
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Test case {tc} failed\"\n"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == expected, f\"Expected {expected}, but got {solution(input)}\""
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1\\n-149.154.167.99\\n') == '1\\n0.0.0.0/0\\n'\nassert solution('4\\n-149.154.167.99\\n+149.154.167.100/30\\n+149.154.167.128/25\\n-149.154.167.120/29\\n') == '2\\n149.154.167.99\\n149.154.167.120/29\\n'\nassert solution('5\\n-127.0.0.4/31\\n+127.0.0.8\\n+127.0.0.0/30\\n-195.82.146.208/29\\n-127.0.0.6/31\\n') == '2\\n195.0.0.0/8\\n127.0.0.4/30\\n'\nassert solution('2\\n+127.0.0.1/32\\n-127.0.0.1\\n') == '-1\\n'"
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11\\n00000000008\") == \"1\"\nassert solution(\"22\\n0011223344556677889988\") == \"2\"\nassert solution(\"11\\n31415926535\") == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    11\n    00000000008\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n    22\n    0011223344556677889988\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    11\n    31415926535\n    \"\"\"\n) == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11\\n00000000008\\n\") == \"1\"\nassert solution(\"22\\n0011223344556677889988\\n\") == \"2\"\nassert solution(\"11\\n31415926535\\n\") == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11\\n00000000008\") == \"1\"\nassert solution(\"22\\n0011223344556677889988\") == \"2\"\nassert solution(\"11\\n31415926535\") == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11\\n00000000008\") == \"1\\n\"\nassert solution(\"22\\n0011223344556677889988\") == \"2\\n\"\nassert solution(\"11\\n31415926535\") == \"0\\n\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11\\n00000000008\") == \"1\\n\"\nassert solution(\"22\\n0011223344556677889988\") == \"2\\n\"\nassert solution(\"11\\n31415926535\") == \"0\\n\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('11\\n00000000008') == '1'\nassert solution('22\\n0011223344556677889988') == '2'\nassert solution('11\\n31415926535') == '0'"
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11\") == \"1\"\nassert solution(\"22\") == \"2\"\nassert solution(\"11\") == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11\\n00000000008\") == \"1\"\nassert solution(\"22\\n0011223344556677889988\") == \"2\"\nassert solution(\"11\\n31415926535\") == \"0\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\\n3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\\nOutput\\n4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\\nInput\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\nOutput\\n-1\\n\\nInput\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\nOutput\\n3\\nrow 1\\nrow 2\\nrow 3\\n\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\"\nassert solution(\"Input\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\nOutput\\n3\\nrow 1\\nrow 2\\nrow 3\\n\") == \"3\\nrow 1\\nrow 2\\nrow 3\\n\"\nassert solution(\"Input\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\nOutput\\n-1\\n\\nInput\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\nOutput\\n1\\nrow 1\\nrow 2\\nrow 3\\n\") == \"-1\\nrow 1\\nrow 2\\nrow 3\\n\"\nassert solution(\"Input\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\nOutput\\n1\\nrow 1\\nrow 2\\nrow 3\\n\") == \"1\\nrow 1\\nrow 2\\nrow 3\\n\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Test case {test_case} failed. Expected: {expected}, Actual: {solution(stdin)}\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\"\nassert solution(\"3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\") == \"-1\\n\"\nassert solution(\"3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"3\\nrow 1\\nrow 2\\nrow 3\\n\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\"\nassert solution(\"3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\") == \"-1\\n\"\nassert solution(\"3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"3\\nrow 1\\nrow 2\\nrow 3\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 'output'"
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1') == '4\\nrow 1\\nrow 1\\ncol 4\\nrow 3'\nassert solution('3 3\\n0 0 0\\n0 1 0\\n0 0 0') == '-1'\nassert solution('3 3\\n1 1 1\\n1 1 1\\n1 1 1') == '3\\nrow 1\\nrow 2\\nrow 3'"
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\"\nassert solution(\"3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\") == \"-1\\n\"\nassert solution(\"3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"3\\nrow 1\\nrow 2\\nrow 3\\n\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\"\nassert solution(\"3 3\\n0 0 0\\n0 1 0\\n0 0 0\") == \"-1\"\nassert solution(\"3 3\\n1 1 1\\n1 1 1\\n1 1 1\") == \"3\\nrow 1\\nrow 2\\nrow 3\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == output, f\"Error: {input}!= {output}\"\nfor i in range(1, 5):\n    assert solution(input) == f\"{i}\\nrow {i}\", f\"Error: {input}!= {i}\\nrow {i}\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed: expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"The output is {solution(input())}, which is not the expected output {expected_output}\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\\n\"\nassert solution(\"8 6 4 6\") == \"NO\\n\"\nassert solution(\"10 3 11 4\") == \"NO\\n\"\nassert solution(\"4 2 1 4\") == \"YES\\n\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('8 6 4 5') == 'YES'\nassert solution('8 6 4 6') == 'NO'\nassert solution('10 3 11 4') == 'NO'\nassert solution('4 2 1 4') == 'YES'"
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n1 3\\n1 4\\n\") == \"6\"\nassert solution(\"7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\") == \"12\"\nassert solution(\"2 2\\n1 2\\n2 1\\n\") == \"-1\"\n\nassert solution(\"4 5\\n1 2\\n2 2\\n3 3\\n\") == \"1\"\nassert solution(\"1 1\\n1 1\\n1 1\\n\") == \"1\"\nassert solution(\"2 2\\n1 2\\n2 2\\n\") == \"1\""
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n1 3\\n1 4\\n\\n7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\\n2 2\\n1 2\\n2 1\\n\\n\") == \"6\\n\"\nassert solution(\"7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\\n2 2\\n1 2\\n2 1\\n\\n\") == \"12\\n\"\nassert solution(\"2 2\\n1 2\\n2 1\\n\\n\") == \"-1\\n\"\n"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n1 3\\n1 4\\n\") == \"6\"\nassert solution(\"7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\") == \"12\"\nassert solution(\"2 2\\n1 2\\n2 1\\n\") == \"-1\""
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4 2\n1 3\n1 4\n\"\"\") == \"6\\n\"\n\nassert solution(\"\"\"\n7 8\n1 6\n2 6\n3 5\n3 6\n4 3\n5 1\n5 2\n5 3\n\"\"\") == \"12\\n\"\n\nassert solution(\"\"\"\n2 2\n1 2\n2 1\n\"\"\") == \"-1\\n\""
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n1 3\\n1 4\\n\\n7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\\n2 2\\n1 2\\n2 1\\n\\n\") == 6\nassert solution(\"7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\\n2 2\\n1 2\\n2 1\\n\") == 12\nassert solution(\"2 2\\n1 2\\n2 1\\n\\n\") == -1\n"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 2\\n1 3\\n1 4\\n') == '6\\n'\nassert solution('7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n') == '12\\n'\nassert solution('2 2\\n1 2\\n2 1\\n') == '-1\\n'"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n1 3\\n1 4\\n\") == \"6\\n\"\nassert solution(\"7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\") == \"12\\n\"\nassert solution(\"2 2\\n1 2\\n2 1\\n\") == \"-1\\n\""
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 2\\n1 3\\n1 4\\n\\n7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\\n2 2\\n1 2\\n2 1\\n\\n') == '6\\n'\nassert solution('7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\\n2 2\\n1 2\\n2 1\\n\\n') == '12\\n'\nassert solution('2 2\\n1 2\\n2 1\\n\\n') == '-1\\n'\n"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 2\\n1 3\\n1 4\\n\\n7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\\n2 2\\n1 2\\n2 1\\n\\n2 2\\n1 2\\n2 1\\n\\n2 2\\n1 2\\n2 1') == '6'\nassert solution('7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\\n2 2\\n1 2\\n2 1\\n\\n2 2\\n1 2\\n2 1\\n\\n2 2\\n1 2\\n2 1') == '12'\nassert solution('2 2\\n1 2\\n2 1\\n\\n2 2\\n1 2\\n2 1\\n\\n2 2\\n1 2\\n2 1') == '-1'\n"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n1 3\\n1 4\") == \"6\"\nassert solution(\"7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\") == \"12\"\nassert solution(\"2 2\\n1 2\\n2 1\") == \"-1\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"YES\", \"Input not correct\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\", \"Incorrect output\"\n"
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Input\\n5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\\n\\nOutput\\nNO\\n\\nInput\\n3 2\\n1 0\\n1 1\\n0 1\\n\\nOutput\\nYES\") == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'YES'"
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\"\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\") == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"NO\"\n\nsolution = '''\n"
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test failed with input {input()} and expected output {expected_output}\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"NO\", \"Please implement the solution\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"YES\" or solution(input()) == \"NO\"\n"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\") == \"Yes\"\nassert solution(\"Input\") == \"No\"\n"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 5\\n2 3 5 12\\n') == 'Yes\\n'\nassert solution('2 7\\n2 3\\n') == 'No\\n'"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == expected_output, f\"Sample input {sample_input} does not produce expected output {expected_output}\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\n"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 5\\n2 3 5 12') == 'Yes'\nassert solution('2 7\\n2 3') == 'No'"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\n2 3 5 12\\n\") == \"Yes\"\nassert solution(\"2 7\\n2 3\\n\") == \"No\"\n"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"Yes\", \"Solution is incorrect\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\n2 3 5 12\\n\") == \"Yes\"\nassert solution(\"2 7\\n2 3\\n\") == \"No\"\n\nfrom typing import List"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\n2 3 5 12\\n\") == \"Yes\"\nassert solution(\"2 7\\n2 3\\n\") == \"No\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\n2 3 5 12\\n\") == \"Yes\\n\"\nassert solution(\"2 7\\n2 3\\n\") == \"No\\n\"\n"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 1\") == \"6\"\nassert solution(\"6 4 2\") == \"8\"\nassert solution(\"2 3 4\") == \"-1\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4 1\") == \"6\"\nassert solution(\"6 4 2\") == \"8\"\nassert solution(\"2 3 4\") == \"-1\"\n"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 4, 1) == 6\nassert solution(6, 4, 2) == 8\nassert solution(2, 3, 4) == -1"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4 1\") == \"6\"\nassert solution(\"6 4 2\") == \"8\"\nassert solution(\"2 3 4\") == \"-1\""
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '6', \"Expected output '6', got '{}'\".format(solution())\nassert solution() == '8', \"Expected output '8', got '{}'\".format(solution())\nassert solution() == '-1', \"Expected output '-1', got '{}'\".format(solution())"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 1\") == \"6\"\nassert solution(\"6 4 2\") == \"8\"\nassert solution(\"2 3 4\") == \"-1\""
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 4, 1) == 6\nassert solution(6, 4, 2) == 8\nassert solution(2, 3, 4) == -1\nprint(\"All test cases passed\")"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3,4,1) == 6\nassert solution(6,4,2) == 8\nassert solution(2,3,4) == -1"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4 1\") == \"6\"\nassert solution(\"6 4 2\") == \"8\"\nassert solution(\"2 3 4\") == \"-1\""
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '6', \"Test case 1 failed\"\nassert solution(stdin) == '8', \"Test case 2 failed\"\nassert solution(stdin) == '-1', \"Test case 3 failed\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5) == '2'\nassert solution(3) == '2'\nassert solution(4) == '0'"
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 2 4 3\\n\") == \"2\"\nassert solution(\"3\\n4 1 1\\n\") == \"2\"\nassert solution(\"4\\n0 3 0 4\\n\") == \"0\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\"\n\ninput_n = int(stdin.readline().strip())\na_1 = int(stdin.readline().strip())\na_2 = int(stdin.readline().strip())\na_3 = int(stdin.readline().strip())\na_4 = int(stdin.readline().strip())"
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Incorrect output. Expected: {expected_output}, got: {solution(input())}\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2 2 4 3\\n\\n3\\n4 1 1\\n\\n4\\n0 3 0 4\") == \"2\"\nassert solution(\"5\\n1 2 2 4 3\\n\\n3\\n4 1 1\\n\\n4\\n0 3 0 4\") == \"2\"\nassert solution(\"5\\n1 2 2 4 3\\n\\n3\\n4 1 1\\n\\n4\\n0 3 0 4\") == \"2\"\nassert solution(\"5\\n1 2 2 4 3\\n\\n3\\n4 1 1\\n\\n4\\n0 3 0 4\") == \"0\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"0\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2 2 4 3\\n\") == \"2\"\nassert solution(\"3\\n4 1 1\\n\") == \"2\"\nassert solution(\"4\\n0 3 0 4\\n\") == \"0\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '2\\n'\nassert solution(stdin) == '2\\n'\nassert solution(stdin) == '2\\n'\nassert solution(stdin) == '0\\n'"
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 2 2 4 3\\n\") == \"2\\n\"\nassert solution(\"3\\n4 1 1\\n\") == \"2\\n\"\nassert solution(\"4\\n0 3 0 4\\n\") == \"0\\n\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8\\n10000011\") == \"5\"\nassert solution(\"2\\n01\") == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8\\n10000011\") == \"5\"\nassert solution(\"2\\n01\") == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('8\\n10000011') == 5\nassert solution('2\\n01') == 2\n"
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8\\n10000011\") == \"5\"\nassert solution(\"2\\n01\") == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8\\n10000011\") == \"5\"\nassert solution(\"2\\n01\") == \"2\"\n"
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8\\n10000011\\n\") == \"5\\n\"\nassert solution(\"2\\n01\\n\") == \"2\\n\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8\\n10000011\") == \"5\"\nassert solution(\"2\\n01\") == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"5\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8\\n10000011\") == \"5\"\nassert solution(\"2\\n01\") == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8\\n10000011\") == \"5\"\nassert solution(\"2\\n01\") == \"2\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '3'\nassert solution() == '1'\nassert solution() == '-1'\nassert solution() == '2'"
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 3"
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 3 1 4\") == \"3\"\nassert solution(\"4\\n4 4 4 4\") == \"-1\"\nassert solution(\"4\\n2 1 4 3\") == \"1\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 3 1 4\") == \"3\"\nassert solution(\"4\\n4 4 4 4\") == \"-1\"\nassert solution(\"4\\n2 1 4 3\") == \"1\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2 3 1 4\\n\") == \"3\"\nassert solution(\"4\\n4 4 4 4\\n\") == \"-1\"\nassert solution(\"4\\n2 1 4 3\\n\") == \"1\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4) == 3\nassert solution(4) == -1\nassert solution(4) == 1"
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 3 1 4\") == \"3\"\nassert solution(\"4\\n4 4 4 4\") == \"-1\"\nassert solution(\"4\\n2 1 4 3\") == \"1\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n2 3 1 4\\n') == '3\\n'\nassert solution('4\\n4 4 4 4\\n') == '-1\\n'\nassert solution('4\\n2 1 4 3\\n') == '1\\n'"
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 3 1 4\\n\") == \"3\"\nassert solution(\"4\\n4 4 4 4\\n\") == \"-1\"\nassert solution(\"4\\n2 1 4 3\\n\") == \"1\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2 3 1 4\") == \"3\"\nassert solution(\"4\\n4 4 4 4\") == \"-1\"\nassert solution(\"4\\n2 1 4 3\") == \"1\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 3 2 0\\n2\\n1 3 3 2 1 2 3\\n1\\n\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n1\\n\") == \"0\"\nassert solution(\"2\\n2 2\\n1\\n\") == \"1\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\\n\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\\n\"\nassert solution(\"2\\n2 2\\n\") == \"1\\n\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\\n\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\\n\"\nassert solution(\"2\\n2 2\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 3 2 0\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\") == \"0\"\nassert solution(\"2\\n2 2\") == \"1\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\\n\"\nassert solution(\"4\\n1 3 2 0\\n\") == \"2\\n\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\\n\"\nassert solution(\"2\\n2 2\\n\") == \"1\\n\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Input\\n4\\n1 3 2 0\\nOutput\\n2\\nInput\\n7\\n1 3 3 2 1 2 3\\nOutput\\n0\\nInput\\n2\\n2 2\\nOutput\\n1\") == \"2\\n\"\n\nassert solution(\"Input\\n7\\n1 3 3 2 1 2 3\\nOutput\\n0\\nInput\\n2\\n2 2\\nOutput\\n1\") == \"0\\n\"\n\nassert solution(\"Input\\n2\\n2 2\\nOutput\\n1\") == \"1\\n\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\"\nassert solution(\"2\\n2 2\\n\") == \"1\"\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n1 3 2 0\\n2\\n1 3 3 2 1 2 3\\n0\\n2\\n2 2\\n1') == '2'\nassert solution('7\\n1 3 3 2 1 2 3\\n2\\n1 3\\n3\\n2 1\\n3') == '0'\nassert solution('2\\n2 2\\n2') == '1'"
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n1 3 2 0\\n') == '2\\n'\nassert solution('7\\n1 3 3 2 1 2 3\\n') == '0\\n'\nassert solution('2\\n2 2\\n') == '1\\n'"
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Error: expected {output}, got {solution(input())}\"\n"
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Output\", \"Your code is incorrect\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(9) == \"504\", \"Expected: 504, Actual: \" + solution(9)\nassert solution(7) == \"210\", \"Expected: 210, Actual: \" + solution(7)"
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9\") == \"504\"\nassert solution(\"7\") == \"210\"\n\nfrom typing import List"
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('7\\n') == '210\\n'\nassert solution('6\\n') == '14\\n'\nassert solution('5\\n') == '20\\n'\nassert solution('9\\n') == '504\\n'\nassert solution('10\\n') == '504\\n'"
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Output\", \"Test failed.\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9\") == \"504\", \"Expected output: 504\"\nassert solution(\"7\") == \"210\", \"Expected output: 210\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('9') == '504', \"Expected '504', got '{}' instead.\".format(solution('9'))\nassert solution('7') == '210', \"Expected '210', got '{}' instead.\".format(solution('7'))"
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test failed with input {input()} and expected output {output}.\"\n"
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9\") == \"504\"\nassert solution(\"7\") == \"210\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9\") == \"504\", \"Incorrect output\"\nassert solution(\"7\") == \"210\", \"Incorrect output\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n') == '1 1\\n'\nassert solution('3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n') == '1 1\\n'\nassert solution('4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n') == '1 1\\n'\nassert solution('5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n') == '3 4\\n'"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n') == '1 1'\nassert solution('3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n') == '1 1'\nassert solution('4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n') == '1 1'\nassert solution('5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n') == '3 4'"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n\\n1 1\\n\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n\") == \"1 1\"\nassert solution(\"0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n\\n1 1\\n\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n\") == \"1 1\"\nassert solution(\"0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n\\n1 1\\n\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n\") == \"1 1\"\nassert solution(\"0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n\\n1 1\\n\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n\") == \"1 1\"\nassert solution(\"0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n\\n1 1\\n\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n\") == \"1 1\"\nassert solution(\"0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n\\n1 1\\n\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n\") == \"1 1\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n\") == \"1 1\\n\"\nassert solution(\"3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\") == \"1 1\\n\"\nassert solution(\"4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n\") == \"1 1\\n\"\nassert solution(\"5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n\") == \"3 4\\n\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1 1\"\n"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n0 0 1 1\\n1 1 2 2\\n3 0 4 1\") == \"1 1\"\nassert solution(\"3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\") == \"1 1\"\nassert solution(\"4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\") == \"1 1\"\nassert solution(\"5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\") == \"3 4\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"example_input.txt\", \"r\").read()) == \"1 1\\n1 1\\n1 1\\n1 1\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1 1\", \"Your solution is incorrect.\"\nassert solution() == \"1 1\", \"Your solution is incorrect.\"\nassert solution() == \"1 1\", \"Your solution is incorrect.\"\nassert solution() == \"1 1\", \"Your solution is incorrect.\"\nassert solution() == \"1 1\", \"Your solution is incorrect.\"\nassert solution() == \"1 1\", \"Your solution is incorrect.\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n').strip() == '1 1'\nassert solution('0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n').strip() == '1 1'\nassert solution('0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n').strip() == '1 1'\nassert solution('0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n').strip() == '3 4'"
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"YES\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n18 55 16 17\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\") == \"YES\"\n"
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n18 55 16 17\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\") == \"YES\"\nassert solution(\"\") == \"NO\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n18 55 16 17\\n\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\\n\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\\n\") == \"YES\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n18 55 16 17\\n\\n6\\n40 41 43 44 44 44\\n\\n8\\n5 972 3 4 1 4 970 971\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\\n\\n8\\n5 972 3 4 1 4 970 971\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\\n\") == \"YES\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"YES\", \"Test case 1 failed\"\nassert solution() == \"NO\", \"Test case 2 failed\"\nassert solution() == \"YES\", \"Test case 3 failed\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n18 55 16 17\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\") == \"YES\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n18 55 16 17\\n\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\\n\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\\n\") == \"YES\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n18 55 16 17\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\") == \"YES\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Input\\n4\\n18 55 16 17\\n\\nOutput\\nYES\\n\\nInput\\n6\\n40 41 43 44 44 44\\n\\nOutput\\nNO\\n\\nInput\\n8\\n5 972 3 4 1 4 970 971\\n\\nOutput\\nYES') == 'YES'\nassert solution('Input\\n6\\n40 41 43 44 44 44\\n\\nOutput\\nNO\\n\\nInput\\n8\\n5 972 3 4 1 4 970 971\\n\\nOutput\\nYES') == 'NO'"
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '9'\nassert solution() == '10'"
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\") == 9\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == 10"
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 9"
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\") == \"9\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == \"10\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''3 9\n1 2 3\n1 2 3 7 8 9 11 12 13\n''') == '9'\nassert solution('''5 5\n1 2 3 4 5\n1 2 3 4 5\n''') == '10'\n"
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 9) == 9\nassert solution(5, 5) == 10"
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\") == \"9\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == \"10\\n\"\n"
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\") == \"9\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == \"10\\n\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 'Vasya'\nassert solution(2) == 'Petya'\nassert solution(8) == 'Petya'"
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n\") == \"Vasya\"\nassert solution(\"2\\n\") == \"Petya\"\nassert solution(\"8\\n\") == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"Vasya\"\nassert solution(\"2\") == \"Petya\"\nassert solution(\"8\") == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"Vasya\"\nassert solution(\"2\") == \"Petya\"\nassert solution(\"8\") == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 'Vasya'\nassert solution(2) == 'Petya'\nassert solution(8) == 'Petya'"
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == \"Vasya\"\nassert solution(2) == \"Petya\"\nassert solution(8) == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Vasya\"\nassert solution(input()) == \"Petya\"\nassert solution(input()) == \"Vasya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 'Vasya'\nassert solution(2) == 'Petya'\nassert solution(8) == 'Petya'\n"
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == \"Vasya\"\nassert solution(2) == \"Petya\"\nassert solution(8) == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n\") == \"Vasya\"\nassert solution(\"2\\n\") == \"Petya\"\nassert solution(\"8\\n\") == \"Petya\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test {test_case_number} failed\"\n\nfor test_case_number in range(1, 10):\n    expected_output = [str(x) for x in [0] * n * m]\n    \n    solution(input())"
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 3\\n1 2\\n2 2\\n2 1\\n\") == \"0\"\nassert solution(\"1 5 3\\n1 3\\n1 1\\n1 5\\n\") == \"2\"\nassert solution(\"4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\\n\") == \"1\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == '0'\nassert solution(open('input2.txt', 'r')) == '2'\nassert solution(open('input3.txt', 'r')) == '1'"
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 3\\n1 2\\n2 2\\n2 1\\n\") == \"0\\n\"\nassert solution(\"1 5 3\\n1 3\\n1 1\\n1 5\\n\") == \"2\\n\"\nassert solution(\"4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\\n\") == \"1\\n\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test {test_case_number} failed. Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 3\\n1 2\\n2 2\\n2 1\\n\") == \"0\\n\"\nassert solution(\"1 5 3\\n1 3\\n1 1\\n1 5\\n\") == \"2\\n\"\nassert solution(\"4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\\n\") == \"1\\n\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 3\\n1 2\\n2 2\\n2 1\\n\") == \"0\\n\"\nassert solution(\"1 5 3\\n1 3\\n1 1\\n1 5\\n\") == \"2\\n\"\nassert solution(\"4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\\n\") == \"1\\n\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"0\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"5\\nA\\nB\\nC\\nC\\nD\") == \"3\"\nassert solution(\"10\\nA\\nB\\nC\\nD\\nE\\nF\\nG\\nH\\nI\\nJ\\nK\\nL\\nM\\nN\\nO\\nP\\nQ\\nR\\nS\\nT\\nU\\nV\\nW\\nX\\nY\\nZ\") == \"79\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"5\\nA\\nB\\nB\\nA\\nB\") == \"3\"\nassert solution(\"6\\nA\\nB\\nB\\nA\\nB\\nA\") == \"4\"\nassert solution(\"7\\nA\\nB\\nB\\xA\\xB\\xC\\xD\\xE\") == \"5\"\nassert solution(\"8\\nA\\nB\\nB\\xA\\xB\\xC\\xD\\xE\\xF\") == \"6\"\nassert solution(\"9\\nA\\nB\\nB\\xA\\xB\\xC\\xD\\xE\\xF\\xF\") == \"7\"\nassert solution(\"10\\xA\\xB\\xC\\xD\\xE\\xF\\xF\\xF\\xF\\xF\") == \"8\"\n"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\nfor i in range(0, len(input()), 3):\n    assert solution(input()[i:i+3]) == output()[i:i+3]"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\\n\") == \"2\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\n"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\\n\", \"Incorrect output\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"3\\nA\\nB\\nA\\nB\") == \"1\"\nassert solution(\"6\\nA\\nB\\nB\\nA\\nA\") == \"0\"\nassert solution(\"1\\nA\\nA\\nA\\nA\") == \"0\"\nassert solution(\"2\\nA\\nA\\xA\\xA\") == \"1\"\nassert solution(\"3\\xA\\xA\\xA\\xA\\xA\") == \"0\"\nassert solution(\"4\\xA\\xA\\xA\\xA\\xA\") == \"2\"\nassert solution(\"5\\xA\\xA\\xA\\xA\\xA\") == \"0\"\nassert solution(\"6\\xA\\xA\\xA\\xA\\xA\") == \"0\"\nassert solution(\"7\\xA\\xA\\xA\\xA\\xA\") == \"0\"\nassert solution(\"8\\xA\\xA\\xA\\xA\\xA\") == \"0\"\nassert solution(\"9\\xA\\xA\\xA\\xA\\xA\") == \"0\"\nassert solution(\"10\\xA\\xA\\xA\\xA\\xA\") == \"1\"\nassert solution(\"11\\xA\\xA\\xA\\xA\\xA\") == \"0\"\nassert solution(\"12\\xA\\xA\\xA\\xA\\xA\") == \"0\"\nassert solution(\"13\\xA\\xA\\xA\\xA\\xA\") == \"0\"\nassert solution(\"14\\xA\\xA\\xA\\xA\\xA\") == \"0\"\nassert solution(\"15\\xA\\xA\\xA\\xA\\xA\") == \"0\"\nassert solution(\"16\\xA\\xA\\xA\\xA\\xA\") == \"0\"\nassert solution(\"17\\xA\\xA\\xA\\xA\\xA\") == \"1\"\nassert solution(\"18\\xA\\xA\\xA\\xA\\xA\") == \"0\"\nassert solution(\"19\\xA\\xA\\xA\\xA\\xA\") == \"0\"\nassert solution(\"20\\xA\\xA\\xA\\xA\\xA\") == \"0\"\nassert solution(\"21\\xA\\xA\\xA\\xA\\xA\") == \"0\"\nassert solution(\"22\\xA\\xA\\xA\\xA\\xA\") == \"0\"\nassert solution(\"23\\xA\\xA\\xA\\xA\\xA\") == \"0\"\nassert solution(\"24\\xA\\xA\\xA\\xA\\xA\") == \"0\"\nassert solution(\"25\\xA\\xA\\xA\\xA\\xA\") == \"0\"\nassert solution(\"26\\xA\\xA\\xA\\xA\\xA\") == \"0\"\nassert solution(\"27\\xA\\xA\\xA\\xA\\xA\") == \"0\"\nassert solution(\"28\\xA\\xA\\xA\\xA\\xA\") == \"0\"\nassert solution(\"29\\xA\\xA\\xA\\xA\\xA\") == \"0\"\nassert solution(\"30\\xA\\xA\\xA\\xA\\xA\") == \"1\"\nassert solution(\"31\\xA\\xA\\xA\\xA\\xA\") == \"0\"\nassert solution(\"32\\xA\\xA\\xA\\xA\\xA\") == \"0\"\nassert solution(\"33\\xA\\xA\\xA\\xA\\xA\") == \"0\"\nassert solution(\"34\\xA\\xA\\xA\\xA\\xA\") == \"0\"\nassert solution(\"35\\xA\\xA\\xA\\xA\\xA\") == \"0\"\nassert solution(\"36\\xA\\xA\\xA\\xA\\xA\") == \"0\"\nassert solution(\"37\\xA\\xA\\xA\\xA\\xA\") == \"0\"\nassert solution(\"38\\xA\\xA\\xA\\xA\\xA\") == \"0\"\nassert solution(\"39\\xA\\xA\\xA\\xA\\xA\") == \"0\"\nassert solution(\"40\\xA\\xA\\xA\\xA\\xA\") == \"0\"\nassert solution(\"41\\xA\\xA\\xA\\xA\\xA\") == \"0\"\nassert solution(\"42\\xA\\xA\\xA\\xA\\xA\") == \"0\"\nassert solution(\"43\\xA\\xA\\xA\\xA\\xA\") == \"0\"\nassert solution(\"44\\xA\\xA\\xA\\xA\\xA\") == \"0\"\nassert solution(\"45\\xA\\xA\\xA\\xA\\xA\") == \"0\"\nassert solution(\"46\\xA\\xA\\xA\\xA\\xA\") == \"0\"\nassert solution(\"47\\xA\\xA\\xA\\xA\\xA\") =="
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"5\\nA\\nA\\nB\\nB\\nA\") == \"1\"\nassert solution(\"6\\nA\\nA\\A\\A\\A\") == \"3\"\nassert solution(\"7\\nA\\A\\A\\A\\A\\A\") == \"0\"\nassert solution(\"8\\nA\\A\\A\\A\\A\\A\\A\") == \"0\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\nA\\nB\\nB\\nA') == '2'\nassert solution('2\\nA\\nB\\nA\\nB') == '2'\nassert solution('3\\nA\\nB\\A\\B\\B') == '2'\nassert solution('4\\nA\\nB\\B\\A\\A') == '2'\nassert solution('2\\nA\\nB\\A\\B\\B') == '1'\nassert solution('3\\nA\\nB\\A\\B\\A\\A\\A') == '2'\nassert solution('3\\nA\\B\\A\\A\\B\\A\\B\\B') == '1'\nassert solution('4\\nA\\A\\A\\A\\B\\B\\B\\B') == '1'"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Output', \"Expected Output, got: {}\".format(solution(input()))"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 3 4\") == \"2\"\nassert solution(\"5\\n2 3 4 6 7\") == \"3\"\n"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"3\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 3 4\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 6 7\") == \"3\\n\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 2\nassert solution() == 3\n\nfrom math import gcd\n"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 3 4\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 6 7\") == \"3\\n\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 2\nassert solution(5) == 3"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output() for input_, output in zip(sample_input, sample_output):\n    assert solution(input_) == output, f\"Test {i+1} failed\"\n\nsample_input = [3, 2, 4]\nsample_output = [2]\n\nsample_input = [5, 2, 3, 6, 7]\nsample_output = [3]"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\", \"Incorrect output\"\n"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Input\\n3\\n2 3 4\\n\") == \"Output\\n2\\n\"\nassert solution(\"Input\\n5\\n2 3 4 6 7\\n\") == \"Output\\n3\\n\""
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\nA\\n\") == \"11\""
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\n\ninput_ = input().strip()\noutput = solution(input_)\nprint(output)"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\nA\\nB\\nC\\nA\\nB\\nC\") == \"11\""
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=r\"\"\"\n5\nABAAC\n\"\"\") == '11\\n'\n\nassert solution(stdin=r\"\"\"\n6\nABCAB\n\"\"\") == '11\\n'\n\nassert solution(stdin=r\"\"\"\n7\nABCBCA\n\"\"\") == '11\\n'\n\nassert solution(stdin=r\"\"\"\n8\nACBABCD\n\"\"\") == '11\\n'\n\nassert solution(stdin=r\"\"\"\n9\nABCABBCABCAB\n\"\"\") == '11\\n'"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\\n\", \"Test failed\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\\n\", \"The output of solution(stdin) must be '11\\n'.\"\nprint(\"All test cases pass.\")"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\", \"Test failed\"\nassert solution(\"10\\nABACAD\") == \"107\", \"Test failed\"\nassert solution(\"3\\nABAB\") == \"5\", \"Test failed\"\nassert solution(\"1\\nAB\") == \"1\", \"Test failed\"\nassert solution(\"2\\nBA\") == \"2\", \"Test failed\""
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\"\n"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '3\\n'\n\nassert solution() == '-1\\n'\n\nassert solution() == '3\\n'\n\nassert solution() == '-1\\n'\n\nassert solution() == '3\\n'\n\nassert solution() == '-1\\n'"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r').read()) == '3'\n"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n4 2\\n1 1\\n0 1\\n2 3\\n\") == 3, \"Test failed\"\nassert solution(\"1023\\n1 2\\n1 0\\n1 2\\n1 1\\n\") == -1, \"Test failed\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1023) == -1, \"Input Error\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    5\n    4 2\n    1 1\n    0 1\n    2 3\n    1 2\n    1 0\n    1 2\n    1 1\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n    1023\n    1 2\n    1 0\n    1 2\n    1 1\n    \"\"\"\n) == \"-1\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '3\\n', \"Test case 1 incorrect\"\nassert solution() == '3\\n', \"Test case 2 incorrect\"\nassert solution() == '3\\n', \"Test case 3 incorrect\"\nassert solution() == '3\\n', \"Test case 4 incorrect\"\nassert solution() == '-1\\n', \"Test case 5 incorrect\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '3\\n', 'Incorrect output'"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n4 2\\n1 1\\n0 1\\n2 3\\n\") == \"3\"\nassert solution(\"1023\\n1 2\\n1 0\\n1 2\\n1 1\\n\") == \"-1\"\n"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3\\n\"\nassert solution(stdin) == \"3\\n\"\nassert solution(stdin) == \"-1\\n\"\nassert solution(stdin) == \"-1\\n\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution()) == -1, \"Test failed: solution(solution()) should return -1\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n4 5\") == \"2\\n\"\n"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n4 5\") == \"2\\n\", \"Incorrect output\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\"\n\nThis code checks if the input matches the expected output."
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n4 5\") == \"2\\n\"\nassert solution(\"3\\n1 2\") == \"3\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\\n\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"1\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"0\\n\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n4 5\") == \"2\\n\", \"Input: 2\\n4 5\\nOutput: 2\\n\"\nassert solution(\"3\\n4 5\\n6 7 8\") == \"3\\n\", \"Input: 3\\n4 5\\n6 7 8\\nOutput: 3\\n\"\nassert solution(\"3\\n4 5\\n6 7 8\\n9 10 11\") == \"4\\n\", \"Input: 3\\n4 5\\n6 7 8\\n9 10 11\\nOutput: 4\\n\"\nassert solution(\"4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n1"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n4 5\") == \"2\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n4 5') == '2\\n', 'Expected Output: 2\\n, Actual Output:'+ solution('2\\n4 5') + '\\n'\n"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n4 5\") == \"2\", \"Test Case 1 failed\"\nassert solution(\"3\\n4 5\") == \"2\", \"Test Case 2 failed\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n4 5\") == \"2\\n\", \"Test case 1 failed\"\nassert solution(\"3\\n4 5\") == \"2\\n\", \"Test case 2 failed\"\nassert solution(\"1\\n2 3\") == \"2\\n\", \"Test case 3 failed\"\nassert solution(\"2\\n3 4\") == \"2\\n\", \"Test case 4 failed\"\nassert solution(\"3\\n4 5\") == \"2\\n\", \"Test case 5 failed\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n4 5\\n\") == \"2\\n\"\nassert solution(\"1\\n\\n\") == \"1\\n\"\nassert solution(\"1\\n2\\n3\\n\") == \"0\\n\"\nassert solution(\"5\\n6\\n7\\n8\\n9\\n10\\n\") == \"10\\n\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution) == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(solution) == \"NO\\n\"\nassert solution(solution) == \"NO\\n0 1 0 1 2 3 2\"\nassert solution(solution) == \"NO\\n0 1 0 1 2 3 2\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"input: {input()}, output: {output()}\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('Input\\n2 2 2 1\\n\\nOutput\\nYES\\n0 1 0 1 2 3 2\\n\\nInput\\n1 2 3 4\\n\\nOutput\\nNO\\n\\nInput\\n2 2 2 3\\n\\nOutput\\nNO') == 'YES\\n0 1 0 1 2 3 2\\nNO\\nNO'\n"
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Test failed: got '{solution(input())}', expected '{expected}'\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'YES\\n0 1 0 1 2 3 2'\nassert solution(input()) == 'YES\\n0 1 0 1 2 3 2'\nassert solution(input()) == 'NO'\nassert solution(input()) == 'NO'"
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n2 4\n1 3 2 4\n1 3 4 2\n''') == 'YES'\n\nassert solution('''\n4 4\n1 2 3 4\n2 3 4 1\n3 4 1 2\n4 1 2 3\n''') == 'NO'\n\nassert solution('''\n3 6\n2 1 3 4 5 6\n1 2 4 3 5 6\n1 2 3 4 6 5\n''') == 'YES'"
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 4\\n1 3 2 4\\n1 3 4 2') == 'YES'\nassert solution('4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3') == 'NO'\nassert solution('3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5') == 'YES'\nassert solution('5 5\\n1 2 3 4 5\\n2 3 4 5 1\\n3 4 5 1 2\\n4 5 1 2 3') == 'NO'"
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == \"YES\" # Expected output: \"YES\"\nassert solution(sample_input_2) == \"NO\" # Expected output: \"NO\"\nassert solution(sample_input_3) == \"YES\" # Expected output: \"YES\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Input\\n2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\\n\"\nassert solution(\"Input\\n4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\\n\"\nassert solution(\"Input\\n3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\\n\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test failed for solution: {solution(input())}, expected: {output}\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\\n2 4\\n1 3 2 4\\n1 3 4 2\\n\\nInput\\n4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\\n\\nInput\\n3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\\n\\nInput\\n2 4\\n1 3 2 4\") == \"YES\"\nassert solution(\"Input\\n4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\\n\\nInput\\n3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\\n\\nInput\\n2 4\\n1 3 2 4\") == \"NO\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 4\\n1 3 2 4\\n1 3 4 2') == 'YES'\nassert solution('4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3') == 'NO'\nassert solution('3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5') == 'YES'"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 2 1\") == \"666666672\""
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 2 1\") == \"666666672\""
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1\\n\") == \"0\"\nassert solution(\"1 2 1\\n\") == \"666666672\""
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1\\n\") == \"0\\n\"\nassert solution(\"1 2 1\\n\") == \"666666672\\n\""
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 1 1') == '0'\nassert solution('1 2 1') == '666666672'"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"666666672\\n\""
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '0\\n'"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\"\nassert solution(\"7\\n1 2 3 4 5 6\") == \"6\"\nassert solution(\"8\\n1 2 3 4 5 6 7\") == \"7\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8\") == \"8\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"9\"\nassert solution(\"11\\n1 2 3 4 5 6 7 8 9 10\") == \"10\"\nassert solution(\"12\\n1 2 3 4 5 6 7 8 9 10 11\") == \"11\"\nassert solution(\"13\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"12\"\nassert solution(\"14\\n1 2 3 4 5 6 7 8 9 10 11 12 13\") == \"13\"\nassert solution(\"15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\") == \"14\"\nassert solution(\"16\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\") == \"15\"\nassert solution(\"17\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\") == \"16\"\nassert solution(\"18\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\") == \"17\"\nassert solution(\"19\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\") == \"18\"\nassert solution(\"20\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\") == \"19\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"5\"\nprint(5)"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"5\"\nassert solution(\"6\\n7 2 3 1 5 6\") == \"5\"\nassert solution(\"5\") == \"5\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"11\"\nassert solution(\"3\\n1 2 3\") == \"0\"\nassert solution(\"5\\n5\") == \"0\"\nassert solution(\"7\\n1 2 3 4 5\") == \"2\"\nassert solution(\"1\\n1\") == \"0\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"6\\n3 4 5 1 2 6 7 8 9\") == \"5\"\nassert solution(\"1\\n1\\n1\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\"\nassert solution(\"7\\n2 3 1 5 6\") == \"3\"\nassert solution(\"6\\n2 3 1 5 7\") == \"4\"\nassert solution(\"7\\n5 6 3 1 2\") == \"3\"\nassert solution(\"6\\n5 6 3 1 7\") == \"4\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == 5\n"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '5\\n', \"Test failed\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\"\nassert solution(\"6\\n7 2 3 1 5 4\") == \"5\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1 8\") == \"2\"\nassert solution(\"4 2 2 6\") == \"3\"\nassert solution(\"3 7 4 6\") == \"1\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == '2\\n3\\n1\\n'\n\nassert solution(open('input.txt', 'r').readline()) == '2\\n'\n\nassert solution(open('input.txt', 'r').readline()) == '3\\n'\n\nassert solution(open('input.txt', 'r').readline()) == '1\\n'"
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1 8\") == \"2\"\nassert solution(\"4 2 2 6\") == \"3\"\nassert solution(\"3 7 4 6\") == \"1\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 1 1 8') == '2'\nassert solution('4 2 2 6') == '3'\nassert solution('3 7 4 6') == '1'"
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 8\") == \"2\\n\", \"Case 1\"\nassert solution(\"4 2 2 6\") == \"3\\n\", \"Case 2\"\nassert solution(\"3 7 4 6\") == \"1\\n\", \"Case 3\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1 8\") == \"2\"\nassert solution(\"4 2 2 6\") == \"3\"\nassert solution(\"3 7 4 6\") == \"1\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1 8\") == \"2\", \"Test 1 failed\"\nassert solution(\"4 2 2 6\") == \"3\", \"Test 2 failed\"\nassert solution(\"3 7 4 6\") == \"1\", \"Test 3 failed\"\n"
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1 8\") == \"2\", \"Test 1\"\nassert solution(\"4 2 2 6\") == \"3\", \"Test 2\"\nassert solution(\"3 7 4 6\") == \"1\", \"Test 3\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Test failed: {input()}\\nExpected output: {output()}\\nGot: {solution(input())}\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test cases do not match.\"\n"
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\"\nassert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1000000000 1000000000 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\") == \"2\\n\"\nassert solution(\"6 2\\n2 1 2 3 4 3\") == \"0\\n\"\nassert solution(\"6 1\\n1 1 2 2 3 3\") == \"2\\n\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\") == \"2\"\nassert solution(\"6 2\\n2 1 2 3 4 3\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\") == \"2\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\") == \"2\\n\"\nassert solution(\"6 2\\n2 1 2 3 4 3\") == \"0\\n\"\nassert solution(\"6 1\\n1 1 2 2 3 3\") == \"2\\n\"\n"
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\\n\") == \"2\"\nassert solution(\"6 2\\n2 1 2 3 4 3\\n\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\\n\") == \"2\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == expected"
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6 1\\n2 1 2 3 4 3\\n') == '2'\nassert solution('6 2\\n2 1 2 3 4 3\\n') == '0'\nassert solution('6 1\\n1 1 2 2 3 3\\n') == '2'"
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\") == \"2\"\nassert solution(\"6 2\\n2 1 2 3 4 3\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\") == \"2\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\\n\") == \"2\\n\"\nassert solution(\"6 2\\n2 1 2 3 4 3\\n\") == \"0\\n\"\nassert solution(\"6 1\\n1 1 2 2 3 3\\n\") == \"2\\n\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\") == \"2\"\nassert solution(\"6 2\\n2 1 2 3 4 3\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\") == \"2\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"NO\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"monday\") == \"YES\"\nassert solution(\"tuesday\") == \"YES\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\"\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"NO\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('monday') == 'NO'\nassert solution('tuesday') == 'NO'\nassert solution('sunday') == 'NO'\nassert solution('saturday') == 'YES'\nassert solution('tuesday') == 'YES'\nassert solution('sunday') == 'YES'\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"NO\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"NO\"\nassert solution(\"wednesday\") == \"NO\"\nassert solution(\"thursday\") == \"NO\"\nassert solution(\"friday\") == \"NO\"\nassert solution(\"saturday\") == \"NO\"\nassert solution(\"sunday\") == \"NO\"\nassert solution(\"saturday\") == \"YES\"\nassert solution(\"tuesday\") == \"YES\"\nassert solution(\"wednesday\") == \"YES\"\nassert solution(\"thursday\") == \"YES\"\nassert solution(\"friday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\"\nassert solution(\"sunday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"sunday\") == \"NO\"\nassert solution(\"saturday\") == \"YES\"\n\nassert solution(\"tuesday\") == \"YES\"\nassert solution(\"wednesday\") == \"YES\"\nassert solution(\"thursday\") == \"YES\"\n\nassert solution(\"friday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\"\nassert solution(\"sunday\") == \"YES\"\n\nassert solution(\"january\") == \"NO\"\nassert solution(\"february\") == \"NO\"\nassert solution(\"march\") == \"NO\"\n\nassert solution(\"july\") == \"YES\"\nassert solution(\"august\") == \"YES\"\nassert solution(\"september\") == \"YES\"\n\nassert solution(\"october\") == \"YES\"\nassert solution(\"november\") == \"YES\"\nassert solution(\"december\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"NO\"\nassert solution(\"wednesday\") == \"YES\"\nassert solution(\"thursday\") == \"YES\"\nassert solution(\"friday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\"\nassert solution(\"sunday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"YES\"\nassert solution(\"sunday\") == \"NO\"\nassert solution(\"saturday\") == \"YES\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(35) == '17'\nassert solution(10000000000) == '91'"
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(35) == '17'\nassert solution(10000000000) == '91'"
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='35') == '17'\nassert solution(stdin='10000000000') == '91'\n"
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"35\") == \"17\"\nassert solution(\"10000000000\") == \"91\"\n"
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"35\") == \"17\"\nassert solution(\"10000000000\") == \"91\"\n\nassert solution(\"1\") == \"1\"\nassert solution(\"123\") == \"6\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1000000000\") == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"35\") == \"17\"\nassert solution(\"10000000000\") == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"35\") == \"17\"\nassert solution(\"10000000000\") == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"35\") == \"17\"\nassert solution(\"10000000000\") == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output() for input, output in zip(stdin, stdout)"
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"35\") == \"17\"\nassert solution(\"10000000000\") == \"91\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\"\n"
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('AHA') == 'YES'\nassert solution('Z') == 'NO'\nassert solution('XO') == 'NO'"
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('AHA') == 'YES', 'Test 1 failed'\nassert solution('Z') == 'NO', 'Test 2 failed'\nassert solution('XO') == 'NO', 'Test 3 failed'"
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"AHA\") == \"YES\", \"Test failed: Incorrect output for the first example\"\nassert solution(\"Z\") == \"NO\", \"Test failed: Incorrect output for the second example\"\nassert solution(\"XO\") == \"NO\", \"Test failed: Incorrect output for the third example\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('AHA') == 'YES'\nassert solution('Z') == 'NO'\nassert solution('XO') == 'NO'"
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"AHA\") == \"YES\", \"Invalid input for AHA\"\nassert solution(\"Z\") == \"NO\", \"Invalid input for Z\"\nassert solution(\"XO\") == \"NO\", \"Invalid input for XO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('AHA') == 'YES', 'Test case 1 failed'\nassert solution('Z') == 'NO', 'Test case 2 failed'\nassert solution('XO') == 'NO', 'Test case 3 failed'\n\nsolution = lambda x: 'YES' if x == x[::-1] else 'NO'\n\nprint(solution('AHA'))  # Output: YES\nprint(solution('Z'))   # Output: NO\nprint(solution('XO'))  # Output: NO"
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 5\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\") == \"1\\n\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\\n\"\nassert solution(\"1\\n3\\n\") == \"0\\n\"\nassert solution(\"1\\n2\\n\") == \"1\\n\"\nassert solution(\"1\\n5\\n\") == \"0\\n\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 5\\n\") == 0\nassert solution(\"3\\n1 2 5\\n\") == 1"
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\"\n"
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\\n\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\\n\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 5\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\") == \"1\\n\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\\n\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\\n\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 2\\nRU') == 'Yes'\nassert solution('1 2\\nRU') == 'No'\nassert solution('-1 1000000000\\nLRRLU') == 'Yes'\nassert solution('0 0\\nD') == 'Yes'"
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 2\\nRU') == 'Yes'\nassert solution('1 2\\nRU') == 'No'\nassert solution('-1 1000000000\\nLRRLU') == 'Yes'\nassert solution('0 0\\nD') == 'Yes'"
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\nRU\\n\") == \"Yes\"\nassert solution(\"1 2\\nRU\\n\") == \"No\"\nassert solution(\"-1 1000000000\\nLRRLU\\n\") == \"Yes\"\nassert solution(\"0 0\\nD\\n\") == \"Yes\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 2\\nRU\\n') == 'Yes\\n'\nassert solution('1 2\\nRU\\n') == 'No\\n'\nassert solution('-1 1000000000\\nLRRLU\\n') == 'Yes\\n'\nassert solution('0 0\\nD\\n') == 'Yes\\n'\n\nfrom typing import List"
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\\n\"\nassert solution(\"1 2\\nRU\") == \"No\\n\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\\n\"\nassert solution(\"0 0\\nD\") == \"Yes\\n\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\"\nassert solution(\"1 2\\nRU\") == \"No\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\"\nassert solution(\"0 0\\nD\") == \"Yes\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\\n\", \"Test case 1 failed\"\nassert solution(\"1 2\\nRU\") == \"No\\n\", \"Test case 2 failed\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\\n\", \"Test case 3 failed\"\nassert solution(\"0 0\\nD\") == \"Yes\\n\", \"Test case 4 failed\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\\n\", \"Expected 'Yes', got {}\".format(solution(\"2 2\\nRU\"))\nassert solution(\"1 2\\nRU\") == \"No\\n\", \"Expected 'No', got {}\".format(solution(\"1 2\\nRU\"))\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\\n\", \"Expected 'Yes', got {}\".format(solution(\"-1 1000000000\\nLRRLU\"))\nassert solution(\"0 0\\nD\") == \"Yes\\n\", \"Expected 'Yes', got {}\".format(solution(\"0 0\\nD\"))"
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 2\\nRU') == 'Yes', 'Test 1'\nassert solution('1 2\\nRU') == 'No', 'Test 2'\nassert solution('-1 1000000000\\nLRRLU') == 'Yes', 'Test 3'\nassert solution('0 0\\nD') == 'Yes', 'Test 4'"
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\"\nassert solution(\"1 2\\nRU\") == \"No\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\"\nassert solution(\"0 0\\nD\") == \"Yes\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\"   60\\n29\\n\\n\\t31\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t"
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 3 7\") == \"1\", \"Test case 1 failed\"\nassert solution(\"10   3   7\") == \"1\", \"Test case 2 failed\"\nassert solution(\"314\") == \"0\", \"Test case 3 failed\"\nassert solution(\"22 19 3\") == \"1\", \"Test case 4 failed\"\nassert solution(\"   60\\n29\\n       31\\n               35\\n\") == \"1\", \"Test case 5 failed\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, \"The expected output is incorrect. Please check the function implementation and the test cases.\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0\", \"Please implement the solution function correctly.\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10 3 7') == '1', 'Output 1'\nassert solution('10   3   7') == '1', 'Output 2'\nassert solution('314') == '0', 'Output 3'\nassert solution('22 19 3') == '1', 'Output 4'\nassert solution('60\\n29\\n   31\\n    \\n    \\n    \\n') == '1', 'Output 5'"
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\"   60\\n29\\n   31\\n   31\\n   31\") == \"1\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"0\"\n\nfor line in [\n    \"10 3 7\",\n    \"10   3   7\",\n    \"314\",\n    \"22 19 3\",\n    \"   60\\n  29\\n  31\\n  35\\n\"\n]:\n    assert solution(line) == \"1\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 3 7\") == \"1\", \"Expected 1, got {}\".format(solution(\"10 3 7\"))\nassert solution(\"10   3   7\") == \"1\", \"Expected 1, got {}\".format(solution(\"10   3   7\"))\nassert solution(\"314\") == \"0\", \"Expected 0, got {}\".format(solution(\"314\"))\nassert solution(\"22 19 3\") == \"1\", \"Expected 1, got {}\".format(solution(\"22 19 3\"))\nassert solution(\"   60\\n  29\\n\\n\\n   31\\n    \\n    \\n    \\n    \\n\\n\\n\\n\") == \"1\", \"Expected 1, got {}\".format(solution(\"   60\\n  29\\n\\n\\n   31\\n    \\n    \\n    \\n    \\n\\n\\n\\n\"))"
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\"   60\\n29\\n      31\\n           \\n           \\n           \\n\") == \"1\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n\") == \"9\\n\"\nassert solution(\"10\\n\") == \"18\\n\"\nassert solution(\"100\\n\") == \"268\\n\"\nassert solution(\"1000000000\\n\") == \"3745908782\\n\"\nassert solution(\"10000000000000000000\\n\") == \"47108698416496062465805625\\n\"\nassert solution(\"1000000000000000000000000\\n\") == \"5866052036167581485830895016681926985625\\n\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"9\"\nprint(\"9\")"
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"9\\n\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"9\"\n"
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"9\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"9\", \"Test failed.\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"9\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == '9'\nassert solution(2) == '4'\nassert solution(3) == '3'\nassert solution(4) == '2'\nassert solution(5) == '1'"
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"9\"\nassert solution(\"5\") == \"12\"\nassert solution(\"10\") == \"18\"\nassert solution(\"100\") == \"19\"\nassert solution(\"1000\") == \"22\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n\") == \"9\", \"Test 1\"\nassert solution(\"2\\n\") == \"18\", \"Test 2\"\nassert solution(\"10\\n\") == \"41\", \"Test 3\"\nassert solution(\"100\\n\") == \"757\", \"Test 4\"\nassert solution(\"1000\\n\") == \"218675\", \"Test 5\"\nassert solution(\"10000\\n\") == \"3545900\", \"Test 6\"\nassert solution(\"100000\\n\") == \"44562794\", \"Test 7\"\nassert solution(\"1000000\\n\") == \"502436533\", \"Test 8\"\nassert solution(\"10000000\\n\") == \"5819733066\", \"Test 9\"\nassert solution(\"100000000\\n\") == \"63488244369\", \"Test 10\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n3 6 28 9\") == 4\nassert solution(\"5\\n5 12 9 16 48\") == 3\nassert solution(\"4\\n1 2 4 8\") == -1\n"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n3 6 28 9\\n\\n\\n5\\n5 12 9 16 48\\n\\n\\n4\\n1 2 4 8\\n\\n-1\") == \"4\\n4\\n3\\n-1\"\nassert solution(\"4\\n1 2 4 8\\n\\n-1\") == \"-1\"\nassert solution(\"5\\n5 12 9 16 48\\n\\n\\n4\\n1 2 4 8\\n\\n-1\") == \"-1\"\nassert solution(\"5\\n5 12 9 16 48\\n\\n\\n4\\n1 2 4 8\\n\\n-1\") == \"-1\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Input\\n4\\n3 6 28 9\\n\") == \"4\\nInput\\n5\\n5 12 9 16 48\\nOutput\\n3\\n\"\nassert solution(\"Input\\n4\\n1 2 4 8\\n\") == \"-1\\nInput\\n5\\n5 12 9 16 48\\nOutput\\n3\\n\"\nassert solution(\"Input\\n5\\n5 12 9 16 48\\nOutput\\n3\\n\") == \"-1\\n\"\nassert solution(\"Input\\n4\\n1 2 4 8\\n\") == \"-1\\n\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n3 6 28 9\\n5\\n5 12 9 16 48\\n4\\n1 2 4 8\\n-1\") == \"4\\n-1\"\nassert solution(\"5\\n5 12 9 16 48\\n4\\n1 2 4 8\\n3\\n3 6 28 9\\n-1\") == \"3\\n-1\"\nassert solution(\"4\\n1 2 4 8\\n3\\n3 6 28 9\\n-1\") == \"4\\n-1\"\nassert solution(\"4\\n1 2 4 8\\n-1\") == \"4\\n-1\"\nassert solution(\"5\\n1 2 4 8\\n3\\n3 6 28 9\\n-1\") == \"3\\n-1\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}, Received: {solution(input())}\"\n"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n3 6 28 9\") == \"4\\n4\"\nassert solution(\"5\\n5 12 9 16 48\") == \"3\\n-1\"\nassert solution(\"4\\n1 2 4 8\") == \"-1\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3\"\nassert solution() == \"-1\"\nassert solution() == \"4\"\nassert solution() == \"3\"\nassert solution() == \"4\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 6 28 9\") == \"4\"\nassert solution(\"5 12 9 16 48\") == \"3\"\nassert solution(\"4 1 2 4 8\") == \"-1\"\nassert solution(\"4 1 2 4 8 9 7 3 5 6\") == \"6\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n3 6 28 9\") == \"4\\n4\"\nassert solution(\"5\\n5 12 9 16 48\") == \"3\\n3\"\nassert solution(\"4\\n1 2 4 8\") == \"-1\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n0 5 0 2 3\") == \"2\"\nassert solution(\"7\\n1 0 0 5 0 0 2\") == \"1\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n0 5 0 2 3\\n') == '2\\n'\nassert solution('7\\n1 0 0 5 0 0 2\\n') == '1\\n'"
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed: solution(stdin)!= expected_output\\nexpected: {expected_output}\\nactual: {solution(stdin)}\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected, f\"Test failed: expected {expected}, but got {solution}\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n0 5 0 2 3') == '2\\n'\nassert solution('7\\n1 0 0 5 0 0 2') == '1\\n'"
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"The provided output is incorrect. Please check the examples and constraints mentioned in the problem statement.\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n0 5 0 2 3\") == \"2\\n\", \"Incorrect output for the first example.\"\n\nassert solution(\"7\\n1 0 0 5 0 0 2\") == \"1\\n\", \"Incorrect output for the second example.\"\n\nassert solution(\"5\\n1 2 3 4 5\") == \"0\\n\", \"Incorrect output for the third example.\"\n\nassert solution(\"100\\n10 20 30 40 50\") == \"0\\n\", \"Incorrect output for the fourth example.\"\n\nassert solution(\"5\\n1 2 3 4 5\") == \"0\\n\", \"Incorrect output for the fifth example.\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'Output', \"Output expected\"\nassert solution(input()) == '1', \"1 expected\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n0 5 0 2 3\") == \"2\"\nassert solution(\"7\\n1 0 0 5 0 0 2\") == \"1\""
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"5\""
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4) == 2\nassert solution(5) == 5"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\") == 2\nassert solution(\"5\") == 5"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"5\""
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4) == 2, \"Expected 2 but got {}\".format(solution(4))\nassert solution(5) == 5, \"Expected 5 but got {}\".format(solution(5))"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4) == 2, \"Expected 2 but got {}\".format(solution(4))\nassert solution(5) == 5, \"Expected 5 but got {}\".format(solution(5))"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == \"5\"\nassert solution(4) == \"2\"\nassert solution(5) == \"5\""
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4) == 2\nassert solution(5) == 5"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(4) == 2\nassert solution(5) == 5"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n\") == \"2\\n\"\nassert solution(\"5\\n\") == \"5\\n\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\") == \"18\\n3 4\\n1 5\\n\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\") == \"31\\n1 2\\n3 4\\n\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\") == \"23\\n1 3 5\\n4\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n') == '18\\n3 4 \\n1 5 \\n'\nassert solution('4 2 2\\n10 8 8 3\\n10 7 9 4\\n') == '31\\n1 2 \\n3 4 \\n'\nassert solution('5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n') == '23\\n1 3 5 \\n4\\n'"
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5, 2, 2) == '18'\nassert solution(4, 2, 2) == '31'\nassert solution(5, 3, 1) == '23'"
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\") == \"18\\n3 4 \\n1 5 \\n\", \"The correct output should be: '18\\n3 4 \\n1 5 \\n'\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\") == \"31\\n1 2 \\n3 4 \\n\", \"The correct output should be: '31\\n1 2 \\n3 4 \\n'\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\") == \"23\\n1 3 5 \\n4\\n\", \"The correct output should be: '23\\n1 3 5 \\n4\\n'\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"3 4\", \"The output is incorrect.\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n\") == \"18\\n3 4\\n1 5\\n\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\\n\") == \"31\\n1 2\\n3 4\\n\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n\") == \"23\\n1 3 5\\n4\\n\"\n"
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n\") == \"18\\n3 4\\n1 5\\n\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\\n\") == \"31\\n1 2\\n3 4\\n\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n\") == \"23\\n1 3 5\\n4\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\") == \"18\\n3 4 \\n1 5 \\n\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\") == \"31\\n1 2 \\n3 4 \\n\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\") == \"23\\n1 3 5 \\n4\\n\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n\") == \"18\\n3 4\\n1 5\\n\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\\n\") == \"31\\n1 2\\n3 4\\n\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n\") == \"23\\n1 3 5\\n4\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n\") == \"18\\n3 4 \\n1 5 \\n\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\\n\") == \"31\\n1 2 \\n3 4 \\n\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n\") == \"23\\n1 3 5 \\n4\\n\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 1\\n1 2\\n') == 'Yes\\na'\nassert solution('4 3\\n1 2\\n1 3\\n1 4\\n') == 'No'"
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Output: {solution(input())}, Expected: {output()}\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Input\\n2 1\\n1 2\\n\\nInput\\n4 3\\n1 2\\n1 3\\n1 4\\n\\nOutput\\nNo\\n\\nInput\\n2 1\\n1 2\\n\\nOutput\\nYes\\naa\\n\\nInput\\n4 3\\n1 2\\n1 3\\n1 4\\n\\nOutput\\nNo\") == \"Yes\\naa\\n\\nNo\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Input\") == \"Yes\"\nassert solution(\"Input\") == \"No\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('Input\\n2 1\\n1 2\\n\\nInput\\n4 3\\n1 2\\n1 3\\n1 4\\n\\nOutput\\nYes\\naa\\n\\nInput\\n5 2\\n1 2\\n1 3\\n1 4\\n1 5\\n\\nOutput\\nNo\\n') == 'Yes\\naa\\nNo\\n'\n\nassert solution('Input\\n2 2\\n1 2\\n\\nInput\\n5 3\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n\\nOutput\\nNo\\n') == 'No\\n'\n\nassert solution('Input\\n4 4\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n1 17\\n1 18\\n1 19\\n1 20\\n1 21\\n1 22\\n1 23\\n1 24\\n1 25\\n1 26\\n1 27\\n1 28\\n1 29\\n1 30\\n1 31\\n1 32\\n1 33\\n1 34\\n1 35\\n1 36\\n1 37\\n1 38\\n1 39\\n1 40\\n1 41\\n1 42\\n1 43\\n1 44\\n1 45\\n1 46\\n1 47\\n1 48\\n1 49\\n1 50\\n1 51\\n1 52\\n1 53\\n1 54\\n1 55\\n1 56\\n1 57\\n1 58\\n1 59\\n1 60\\n1 61\\n1 62\\n1 63\\n1 64\\n1 65\\n1 66\\n1 67\\n1 68\\n1 69\\n1 70\\n1 71\\n1 72\\n1 73\\n1 74\\n1 75\\n1 76\\n1 77\\n1 78\\n1 79\\n1 80\\n1 81\\n1 82\\n1 83\\n1 84\\n1 85\\n1 86\\n1 87\\n1 88\\n1 89\\n1 90\\n1 91\\n1 92\\n1 93\\n1 94\\n1 95\\n1 96\\n1 97\\n1 98\\n1 99\\n1 100\\n1 101\\n1 102\\n1 103\\n1 104\\n1 105\\n1 106\\n1 107\\n1 108\\n1 109\\n1 110\\n1 111\\n1 112\\n1 113\\n1 114\\n1 115\\n1 116\\n1 117\\n1 118\\n1 119\\n1 120\\n1 121\\n1 122\\n1 123\\n1 124\\n1 125\\n1 126\\n1 127\\n1 128\\n1 129\\n1 130\\n1 131\\n1 132\\n1 133\\n1 134\\n1 135\\n1 136\\n1 1"
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 1\\n1 2') == 'Yes\\naa'\nassert solution('4 3\\n1 2\\n1 3\\n1 4') == 'No'"
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"Yes\", \"The solution is incorrect\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"Yes\\naa\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"No\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"Yes\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"Yes\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 1 1\\n1 0 1\\n1 1 0\\n3\") == 7\nassert solution(\"0 2 2\\n1 0 100\\n1 2 0\\n3\") == 19\nassert solution(\"0 2 1\\n1 0 100\\n1 2 0\\n5\") == 87"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 1 1\\n1 0 1\\n1 1 0\\n3\\n\") == \"7\\n\"\nassert solution(\"0 2 2\\n1 0 100\\n1 2 0\\n3\\n\") == \"19\\n\"\nassert solution(\"0 2 1\\n1 0 100\\n1 2 0\\n5\\n\") == \"87\\n\"\nassert solution(\"\") == \"0\\n\"\n"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"7\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('0 1 1\\n1 0 1\\n1 1 0\\n3\\n') == '7'\nassert solution('0 2 2\\n1 0 100\\n1 2 0\\n3\\n') == '19'\nassert solution('0 2 1\\n1 0 100\\n1 2 0\\n5\\n') == '87'"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 1 1\\n1 0 1\\n1 1 0\\n3\") == \"7\"\nassert solution(\"0 2 2\\n1 0 100\\n1 2 0\\n3\") == \"19\"\nassert solution(\"0 2 1\\n1 0 100\\n1 2 0\\n5\") == \"87\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 1 1\\n1 0 1\\n1 1 0\\n3\\n\") == \"7\\n\"\nassert solution(\"0 2 2\\n1 0 100\\n1 2 0\\n3\\n\") == \"19\\n\"\nassert solution(\"0 2 1\\n1 0 100\\n1 2 0\\n5\\n\") == \"87\\n\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 1 1\\n1 0 1\\n1 1 0\\n3\\n\") == \"7\"\nassert solution(\"0 2 2\\n1 0 100\\n1 2 0\\n3\\n\") == \"19\"\nassert solution(\"0 2 1\\n1 0 100\\n1 2 0\\n5\\n\") == \"87\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 1 1\\n1 0 1\\n1 1 0\\n3\") == \"7\\n\"\nassert solution(\"0 2 2\\n1 0 100\\n1 2 0\\n3\") == \"19\\n\"\nassert solution(\"0 2 1\\n1 0 100\\n1 2 0\\n5\") == \"87\\n\"\n"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 1 1\\n1 0 1\\n1 1 0\\n3\\n\") == \"7\\n\"\nassert solution(\"0 2 2\\n1 0 100\\n1 2 0\\n3\\n\") == \"19\\n\"\nassert solution(\"0 2 1\\n1 0 100\\n1 2 0\\n5\\n\") == \"87\\n\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Your solution is incorrect. Expected '{expected}', got '{solution(stdin)}'.\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Bulbbasaur\") == 1\nassert solution(\"F\") == 0\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == 2"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\", \"Output should be '1', not '{}'\".format(solution(\"Bulbbasaur\"))\nassert solution(\"F\") == \"0\", \"Output should be '0', not '{}'\".format(solution(\"F\"))\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\", \"Output should be '2', not '{}'\".format(solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\"))"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\narc\\nrac\\n\") == \"YES\"\nassert solution(\"3 2\\nbab\\ncba\\n\") == \"NO\"\nassert solution(\"2 3\\nbab\\ncba\\n\") == \"YES\"\nassert solution(\"2 3\\nbab\\ncba\\n\") == \"YES\"\nassert solution(\"2 3\\nbab\\ncba\\n\") == \"YES\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\narc\\nrac\\n\") == \"YES\"\nassert solution(\"3 2\\nabc\\nxyz\\n\") == \"NO\"\nassert solution(\"1 1\\nabc\\ndef\\n\") == \"NO\"\nassert solution(\"1 2\\nabc\\nxyz\\n\") == \"YES\"\nassert solution(\"3 3\\nabc\\nxyz\\n\") == \"YES\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\narc\\nrac\") == \"YES\"\nassert solution(\"2 3\\nba\\ncb\") == \"NO\"\nassert solution(\"2 3\\naa\\nbb\") == \"YES\"\nassert solution(\"2 3\\naa\\nbc\") == \"NO\"\nassert solution(\"2 3\\nba\\naa\") == \"NO\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\narc\\nrac\\n\") == \"YES\"\nassert solution(\"2 3\\nabc\\ndef\\nghi\\n\") == \"NO\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 3\\narc\\nrac') == 'YES'\nassert solution('2 3\\nbaz\\ncab') == 'NO'\nassert solution('5 4\\nabc\\nxyz\\n') == 'YES'"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"YES\"\n"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\narc\\nrac\") == \"YES\"\nassert solution(\"2 3\\nabc\") == \"NO\"\n\nfrom typing import List"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\narc\\nrac\") == \"YES\"\nassert solution(\"2 3\\nabc\") == \"NO\"\nassert solution(\"5 6\\nabcde\") == \"NO\"\n"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\narc\\nrac\\n\") == \"YES\"\nassert solution(\"2 3\\nhello\\nworld\\n\") == \"NO\"\nassert solution(\"2 3\\nabc\\ndef\\nghi\\n\") == \"NO\"\nassert solution(\"2 3\\nabc\\ndef\\nghi\\n\") == \"YES\"\n"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 3\\narc\\nrac') == 'YES'\nassert solution('2 3\\nabc\\ndef\\nghi') == 'NO'\nassert solution('2 2\\nabc\\ndef\\nghi') == 'YES'\n"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\\n\") == \"4\\n\"\nassert solution(\"6 111\\n1111\\n10111\\n10010\\n\") == \"3\\n\"\nassert solution(\"4 111\\n1111\\n10111\\n10010\\n\") == \"4\\n\"\nassert solution(\"5 111\\n1111\\n10111\\n10010\\n\") == \"3\\n\"\nassert solution(\"9 111\\n1111\\n10111\\n10010\\n\") == \"2\\n\""
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 111\\n1111\\n10111\\n10010\\n') == '4'"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\""
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\nassert solution
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n\"\nassert solution(\"1 222\\n333\\n444\") == \"0\\n\"\nassert solution(\"1 222\\n333\\n444\") == \"0\\n\"\nassert solution(\"1 111\\n1111\\n1111\") == \"2\\n\""
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\nassert solution(\"1 1\\n\") == \"1\""
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\\n\") == \"4\""
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\nassert solution(\"2 11\\n1111\\n10111\\n10010\") == \"4\"\nassert solution(\"3 111\\n1111\\n1111\\n10010\") == \"5\"\nassert solution(\"4 111\\n1111\\n1111\\n10010\") == \"4\"\n"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\\n\") == \"4\\n\"\nassert solution(\"2 111\\n1111\\n10111\\n10010\\n\") == \"3\\n\"\nassert solution(\"1 111\\n1111\\n10111\\n10010\\n\") == \"4\\n\"\nassert solution(\"4 111\\n1111\\n10111\\n10010\\n\") == \"4\\n\""
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\\n\") == \"4\\n\"\nassert solution(\"4 100\\n0100\\n0110\\n0010\\n\") == \"5\\n\"\nassert solution(\"5 001\\n1010\\n1100\\n0110\\n\") == \"7\\n\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11 11 5\") == \"1\\n\"\nassert solution(\"11 2 3\") == \"-1\\n\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11 11 5\") == \"1\\n\"\nassert solution(\"11 2 3\") == \"-1\\n\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('11 11 5') == '1'\nassert solution('11 2 3') == '-1'\nassert solution('11 3 4') == '-1'\nassert solution('11 20 10') == '-1'\nassert solution('11 1 1') == '1'"
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Solution is incorrect. Expected {expected_output}, got {solution(input())}.\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11 11 5\\n11 2 3\") == \"1\"\nassert solution(\"11 2 3\\n11 11 5\") == \"-1\"\nassert solution(\"1 1 1\\n1 1 1\") == \"1\"\nassert solution(\"1 1 1\\n2 2 2\") == \"-1\"\n"
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11 11 5\\n\") == \"1\\n\"\nassert solution(\"11 2 3\\n\") == \"-1\\n\"\n"
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('abacaba') == 'YES'\nassert solution('jinotega') == 'NO'"
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('abacaba') == 'YES'\nassert solution('jinotega') == 'NO'"
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('abacaba') == 'YES'\nassert solution('jinotega') == 'NO'\n"
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\"\n"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 2, 6) == 6.5\nassert solution(4, 2, 20) == 20.0"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4, 2, 20) == 20.0\nassert solution(3, 2, 6) == 6.5\n"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"6.5\"\nassert solution(stdin) == \"20.0\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 2, 6) == 6.5\nassert solution(4, 2, 20) == 20.0\n\nfrom typing import List"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\"\n"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\"\n"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 2, 6) == 6.5\nassert solution(4, 2, 20) == 20.0\nassert solution(3, 2, 2) == 3.5\nassert solution(1, 2, 2) == 1.0"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 20.0\n"
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 2\\n..\\n..\\n') == '2\\n'\nassert solution('4 4\\n....\\n#.#.\\n....\\n.#..\\n') == '1\\n'\nassert solution('3 4\\n....\\n.##.\\n....\\n') == '2\\n'\n"
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\") == \"2\"\nassert solution(\"4 4\\n....\\n#.#.\\n....\\n.#..\\n\") == \"1\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2\\n..\\n..\\n\\n4 4\\n....\\n#.#.\\n....\\n.#..\\n\\n3 4\\n....\\n.##.\\n....\\n\\n') == '2'\nassert solution('4 4\\n....\\n#.#.\\n....\\n.#..\\n\\n3 4\\n....\\n.##.\\n....\\n\\n') == '1'\nassert solution('3 4\\n....\\n.##.\\n....\\n\\n') == '2'"
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\\n4 4\\n....\\n#.#.\\n....\\n.#..\\n\") == \"2\"\nassert solution(\"4 4\\n....\\n.##.\\n....\\n\\n3 4\\n....\\n.##.\\n....\") == \"1\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 2\\n..\\n..\\n') == '2'\nassert solution('4 4\\n....\\n#.#.\\n....\\n.#..\\n') == '1'\nassert solution('3 4\\n....\\n.##.\\n....\\n') == '2'"
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\\n4 4\\n....\\n#.#.\\n....\\n.#..\") == \"2\\n\"\nassert solution(\"4 4\\n....\\n.##.\\n....\\n\\n3 4\\n....\\n.##.\\n....\\n\\n\") == \"1\\n\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\\n\") == \"2\\n\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\\n4 4\\n....\\n#.#.\\n....\\n.#..\") == \"2\\n\"\nassert solution(\"4 4\\n....\\n.##.\\n....\\n\\n3 4\\n....\\n.##.\\n....\") == \"1\\n\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\\n\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\") == \"2\"\nassert solution(\"4 4\\n....\\n#.#.\\n....\\n.#..\") == \"1\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"2\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"2\"\nassert solution == \"2\"\nassert solution == \"2\"\nassert solution == \"1\"\nassert solution == \"2\"\nassert solution == \"1\"\n"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"6\"\nprint(\"All Puzzles Solved\")"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1 3\\n\") == \"6\"\n\nimport math"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 1 3\\n\") == \"6\\n\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"6\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\\n\"\nassert solution(\"4\\n1 1 1\\n1 1 2\") == \"7\\n\"\nassert solution(\"5\\n1 1 1\\n1 1 2\\n1 1 3\\n1 1 4\") == \"14\\n\"\nassert solution(\"6\\n1 1 1\\n1 1 2\\n1 1 3\\n1 1 4\\n1 1 5\") == \"17\\n\"\nassert solution(\"7\\n1 1 1\\n1 1 2\\n1 1 3\\n1 1 4\\n1 1 5\\n1 1 6\") == \"20\\n\"\n"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1 1 3') == '6\\n'\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\\n\"\n"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\\n\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"6\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input(\"N\\n\")) == \"6\"\n"
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == output, f\"Test case failed: {stdin}\\nExpected output: {output}\\nActual output: {solution(stdin)}\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n1 4 3 7 5') == '11\\n3\\n1\\n4\\n2\\n'\nassert solution('5\\n1 4 3 7 4\\n') == '11\\n3\\n1\\n4\\n2\\n'\nassert solution('5\\n1 4 3 7 5\\n1 2 3 5 4') == '11\\n3\\n1\\n4\\n2\\n'\nassert solution('5\\n1 4 3 7 5\\n1 2 3 5 4\\n1 2 3 4 5') == '11\\n3\\n1\\n4\\n2\\n'\nassert solution('5\\n1 4 3 7 5\\n1 2 3 5 4\\n1 2 3 4 5\\n1 2 3 3 4') == '11\\n3\\n1\\n4\\n2\\n'"
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\"\nassert solution(\"2\\n1 1\\n1\") == \"2\"\nassert solution(\"4\\n1 2 3 4\\n3\") == \"6\"\nassert solution(\"3\\n1 2 3\\n2\") == \"3\"\nassert solution(\"1\\n1\\n1\") == \"1\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '11\\n3\\n1\\n4\\n2\\n'\n"
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\\n\"\nassert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\\n\"\nassert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\\n\"\nassert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\\n\"\nassert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\\n\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 4 3 7 5\\n\") == \"11\\n3\\n1\\n4\\n2\\n\"\nassert solution(\"5\\n\") == \"0\\n\"\nassert solution(\"10 20 30 40 50\\n\") == \"50\\n4\\n3\\n2\\n1\\n\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"11\\n3\\n1\\n4\\n2\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\na_1 a_2... a_N\") == \"11\\n3\\n1\\n4\\n2\\n\"\nassert solution(\"5\\na_1 a_2... a_N\") == \"11\\n3\\n1\\n4\\n2\\n\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 1\\n10.245\\n\") == \"10.25\\n\"\nassert solution(\"6 2\\n10.245\\n\") == \"10.3\\n\"\nassert solution(\"3 100\\n9.2\\n\") == \"9.2\\n\"\nassert solution(\"6 1\\n10.245\\n\") == \"10.25\\n\"\nassert solution(\"6 2\\n10.245\\n\") == \"10.3\\n\"\nassert solution(\"3 100\\n9.2\\n\") == \"9.2\\n\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 1\\n10.245\") == \"10.25\\n\"\nassert solution(\"6 2\\n10.245\") == \"10.3\\n\"\nassert solution(\"3 100\\n9.2\") == \"9.2\\n\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"10.25\"\nassert solution(input()) == \"10.3\"\nassert solution(input()) == \"9.2\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 1\\n10.245\") == \"10.25\"\nassert solution(\"6 2\\n10.245\") == \"10.3\"\nassert solution(\"3 100\\n9.2\") == \"9.2\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6 1\\n10.245\\n') == '10.25\\n'\nassert solution('6 2\\n10.245\\n') == '10.3\\n'\nassert solution('3 100\\n9.2\\n') == '9.2\\n'"
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 1\\n10.245\\n\") == \"10.25\\n\"\nassert solution(\"6 2\\n10.245\\n\") == \"10.3\\n\"\nassert solution(\"3 100\\n9.2\\n\") == \"9.2\\n\"\n\nfor i in range(1, 101):\n    assert solution(str(i) + \" 1\\n\" + str(i) + \".245\\n\") == str(i) + \".25\\n\"\n    assert solution(str(i) + \" 2\\n\" + str(i) + \".245\\n\") == str(i) + \".3\\n\"\n    assert solution(str(i) + \" 100\\n\" + str(i) + \".2\\n\") == str(i) + \".2\\n\"\n    assert solution(str(i) + \" 1\\n\" + str(i) + \".245\\n\") == str(i) + \".25\\n\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, \"Test case failed. Expected: {}, Actual: {}\".format(expected, solution(input()))"
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 1\\n10.245\") == \"10.25\\n\"\nassert solution(\"6 2\\n10.245\") == \"10.3\\n\"\nassert solution(\"3 100\\n9.2\") == \"9.2\\n\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 1\\n10.245\\n\") == \"10.25\\n\"\nassert solution(\"6 2\\n10.245\\n\") == \"10.3\\n\"\nassert solution(\"3 100\\n9.2\\n\") == \"9.2\\n\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6 1\\n10.245') == '10.25'\nassert solution('6 2\\n10.245') == '10.3'\nassert solution('3 100\\n9.2') == '9.2'\n"
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(b\"1 2 3 4\") == \"Impossible\"\nassert solution(b\"1 2 2 1\") == \"0110\"\nassert solution(b\"1 1 1 1\") == \"1111\"\nassert solution(b\"0 0 0 0\") == \"0000\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'Impossible'"
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"  # Should return \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\"  # Should return \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"  # Correct\nassert solution(\"1 2 2 1\") == \"0110\"  # Correct\nassert solution(\"1 2 2 1000000\") == \"Impossible\"  # Correct"
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4') == 'Impossible'\nassert solution('1 2 2 1') == '0110'\n"
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"1\\n*..P*P*\") == \"3\\n\"\nassert solution(stdin=\"10\\n.**PP.*P.*\") == \"2\\n\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Input {input()} should output {output}, but got {solution(input())}.\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\n*..P*P*\") == \"3\\n\"\nassert solution(\"10\\n.**PP.*P.*\") == \"2\\n\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\n*..P*P*\\n\") == \"3\\n\"\nassert solution(\"10\\n.**PP.*P.*\\n\") == \"2\\n\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"3\", \"Expected 3, but got {} instead\".format(solution())"
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\n*..P*P*\") == \"3\\n\"\nassert solution(\"10\\n.**PP.*P.*\") == \"2\\n\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Test failed: {solution(input())}!= {output()}\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('7\\n*..P*P*\\n') == '3'\nassert solution('10\\n.**PP.*P.*\\n') == '2'"
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\\n\"\nassert solution(\"10\\n.**PP.*P.*\") == \"2\\n\"\nassert solution(\"7\\n*..P*P*\") == \"3\\n\"\nassert solution(\"10\\n*..P*P*\") == \"2\\n\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''7\n*..P*P*''') == '3'\nassert solution('''10\n.**PP.*P.*''') == '2'\n"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"8\"\nassert solution(\"3\") == \"16\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 16, \"Your solution is incorrect.\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\") == 4, \"Test case 1 failed\"\nassert solution(\"3\") == 16, \"Test case 2 failed\"\nassert solution(\"4\") == 32, \"Test case 3 failed\"\nassert solution(\"5\") == 64, \"Test case 4 failed\"\nassert solution(\"6\") == 128, \"Test case 5 failed\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n\") == \"4\\n\"\nassert solution(\"2\\n\") == \"8\\n\"\nassert solution(\"3\\n\") == \"16\\n\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 4\nassert solution(2) == 8\nassert solution(3) == 16"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 4\nassert solution(2) == 8\nassert solution(1) == 16\n"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '8'\nassert solution('3') == '16'"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"4\"\nassert solution(4) == \"4\"\nassert solution(6) == \"4\"\nassert solution(8) == \"8\"\nassert solution(10) == \"16\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 4\nassert solution(2) == 8\nassert solution(3) == 16"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"4\"\nassert solution(stdin) == \"8\"\nassert solution(stdin) == \"16\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1 3 9 7\\n17 8 86 92\"\n\nfrom typing import List"
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    9 9 5 5 2 1\n    \"\"\"\n) == \"1 3 9 7\"\n\nassert solution(\n    \"\"\"\n    100 100 52 50 46 56\n    \"\"\"\n) == \"17 8 86 92\"\n\nfrom typing import List"
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1 3 9 7\\n17 8 86 92\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == '1 3 9 7'\nassert solution(100) == '17 8 86 92'\nassert solution(10) == '1 3 9 7'\nassert solution(2) == '1 1 1 1'\nassert solution(3) == '1 1 3 3'\nassert solution(5) == '1 1 4 4'\nassert solution(8) == '2 2 7 7'\nassert solution(9) == '2 2 9 9'"
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1 3 9 7\\n17 8 86 92'\n"
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\\n\", \"Test 1 failed.\"\nassert solution(\"FTTTFFFT\") == \"No\\n\", \"Test 2 failed.\"\nassert solution(\"FTFFTTTT\") == \"Yes\\n\", \"Test 3 failed.\"\nassert solution(\"TFFFTFFT\") == \"No\\n\", \"Test 4 failed.\"\nassert solution(\"FTHFTFFT\") == \"No\\n\", \"Test 5 failed.\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('FTFFTFFF\\n4 2') == 'Yes'\n"
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('FTFFTFFF\\n4 2\\n') == 'Yes'"
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"FTFFTFFF\\n4 2\") == \"Yes\\n\", \"Test failed\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\", \"Solution 1 is incorrect.\"\nassert solution(\"FTHFTFF\") == \"No\", \"Solution 2 is incorrect.\"\nassert solution(\"FTFFTHT\") == \"Yes\", \"Solution 3 is incorrect.\"\nassert solution(\"FTFFTTH\") == \"No\", \"Solution 4 is incorrect.\"\nassert solution(\"FTFTHFT\") == \"No\", \"Solution 5 is incorrect.\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"FTFFTFFF\\n4 2\") == \"Yes\"\nassert solution(\"TFFTFFF\\n4 2\") == \"No\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('FTFFTFFF') == 'Yes', \"The solution is incorrect\"\n"
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\"\nassert solution(\"TFTF\") == \"No\"\nassert solution(\"TFFT\") == \"No\"\nassert solution(\"TFFTT\") == \"No\"\nassert solution(\"TTFFTT\") == \"No\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('FTFFTFFF') == 'Yes', \"The objective can be achieved by, for example, turning counterclockwise in the first T and turning clockwise in the second T.\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"FTFFTFFF\\n4 2\") == \"Yes\"\nassert solution(\"TFTFFTT\\n2 3\") == \"No\"\nassert solution(\"FFTFTFF\\n3 4\") == \"No\"\nassert solution(\"TFFTTFF\\n2 4\") == \"No\"\nassert solution(\"FFFTTTF\\n3 2\") == \"No\"\nassert solution(\"TFTFFTF\\n1 4\") == \"Yes\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Test case failed\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n\") == \"2\\n\"\nassert solution(\"2\\n\") == \"3\\n\"\nassert solution(\"3\\n\") == \"5\\n\"\nassert solution(\"4\\n\") == \"6\\n\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('3') == '5'\nassert solution('4') == '6'\nassert solution('1000') == '1000000000'\nassert solution('10000') == '1000000007'\nassert solution('100000') == '10000000000'"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('3') == '5'\nassert solution('4') == '6'"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1') == 2\nassert solution('2') == 3\nassert solution('3') == 5\nassert solution('4') == 6"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"6\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 2\nassert solution(2) == 3\nassert solution(3) == 5\nassert solution(4) == 6"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 2\nassert solution(2) == 3\nassert solution(3) == 5\nassert solution(4) == 6\n"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\"\n\nassert solution(input()) == \"3\"\n\nassert solution(input()) == \"5\"\n\nassert solution(input()) == \"6\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 2\nassert solution(2) == 3\nassert solution(3) == 5\nassert solution(4) == 6"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\\n3\") == \"1.3333333333\"\nassert solution(\"5\\n2 3 4 5\\n2\") == \"1.0\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\na_1 a_2 a_3\\n3\\na_1 a_3 a_2\\na_1 a_2 a_3\\n3') == '1.3333333333'"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n\") == \"1.3333333333\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Output: {solution(input())}, Expected Output: {expected_output}\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n\") == \"1.3333333333\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\\n3\\n\") == \"1.3333333333\"\nassert solution(\"1 2 3\\n2\\n\") == \"2.0\"\nassert solution(\"1 2 3\\n4\\n\") == \"0.0\"\nassert solution(\"1 2 3\\n1 2 3\\n\") == \"0.0\"\nassert solution(\"1 2 3\\n3 4 5\\n\") == \"0.0\"\nassert solution(\"1 2 3\\n3 4 5 6\\n\") == \"0.0\"\nassert solution(\"1 2 3\\n3 4 5 6 7\\n\") == \"0.0\"\nassert solution(\"1 2 3\\n3 4 5 6 7 8\\n\") == \"0.0\"\nassert solution(\"1 2 3\\n3 4 5 6 7 8 9\\n\") == \"0.0\"\nassert solution(\"1 2 3\\n3 4 5 6 7 8 9 10\\n\") == \"0.0\"\nassert solution(\"1 2 3\\n3 4 5 6 7 8 9 10 11\\n\") == \"0.0\"\nassert solution(\"1 2 3\\n3 4 5 6 7 8 9 10 11 12\\n\") == \"0.0\"\nassert solution(\"1 2 3\\n3 4 5 6 7 8 9 10 11 12 13\\n\") == \"0.0\"\nassert solution(\"1 2 3\\n3 4 5 6 7 8 9 10 11 12 13 14\\n\") == \"0.0\"\nassert solution(\"1 2 3\\n3 4 5 6 7 8 9 10 11 12 13 14 15\\n\") == \"0.0\"\nassert solution(\"1 2 3\\n3 4 5 6 7 8 9 10 11 12 13 14 15 16\\n\") == \"0.0\"\nassert solution(\"1 2 3\\n3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\\n\") == \"0.0\"\nassert solution(\"1 2 3\\n3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\\n\") == \"0.0\"\nassert solution(\"1 2 3\\n3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\\n\") == \"0.0\"\nassert solution(\"1 2 3\\n3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\n\") == \"0.0\"\nassert solution(\"1 2 3\\n3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21\\n\") == \"0.0\"\nassert solution(\"1 2 3\\n3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22\\n\") == \"0.0\"\nassert solution(\"1 2 3\\n3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23\\n\") == \"0.0\"\nassert solution(\"1 2 "
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n\") == 1.3333333333"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\\n3\") == \"1.3333333333\\n\", \"The output should be 1.3333333333.\"\nassert solution(\"1\\n1 1 1\\n1\") == \"1.0000000000\\n\", \"The output should be 1.0000000000.\"\nassert solution(\"5\\n2 3 4 5 6\\n2\") == \"3.0000000000\\n\", \"The output should be 3.0000000000.\"\nassert solution(\"1\\n1 1 1\\n2\") == \"1.5000000000\\n\", \"The output should be 1.5000000000.\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\\n3\") == \"1.3333333333\" # Correct"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\\n3\") == \"1.3333333333\"\nassert solution(\"10\\n1 2 3\\n2\") == \"2.0000000000\"\nassert solution(\"3\\n1 2 3\\n4\") == \"1.0000000000\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == [\"13 7\", \"986 605\"]\n"
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == [13, 7]\nassert solution() == [986, 605]"
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"13 7\\n986 605\", \"The output is not as expected.\"\n"
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 1, 2) == [13, 7]\nassert solution(3, 100000, 569) == [986, 605]"
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == output, f\"Test failed for the given example. Please check the solution and input.\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '''13 7\n605 986'''\n"
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n\") == \"13 7\\n\"\nassert solution(\"2 100000 569\\n605 986\\n\") == \"986 605\\n\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_data) == expected_output, f\"Testcase failed: {input_data}\\nOutput: {solution(input_data)}, Expected: {expected_output}\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n\") == \"13 7\"\nassert solution(\"2 100000 569\\n605 986\\n\") == \"986 605\""
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3 2 4 4\\n2 5 4 10\\n') == '1\\n'\nassert solution('3 3 3 3 5\\n2 3 5 4 2\\n') == '0\\n'\nassert solution('5 5 1 2 3\\n2 2 3\\n') == '-1\\n'\nassert solution('3 4 1 1 3\\n2 3 2\\n') == '3\\n'"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\\n\") == \"1\"\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\\n\") == \"0\"\nassert solution(\"5 5 1 2 3\\n2 2 3\\n\") == \"-1\"\nassert solution(\"3 4 1 1 3\\n2 3 2\\n\") == \"3\"\n"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"For input {input()}, expected output {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3 2 4 4\\n2 5 4 10\\n') == '1\\n'\nassert solution('3 3 3 3 5\\n2 3 5 4 2\\n') == '0\\n'\nassert solution('5 5 1 2 3\\n2 2 3\\n') == '-1\\n'\nassert solution('3 4 1 1 3\\n2 3 2\\n') == '3\\n'"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test {test_case_num} failed. Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_string) == expected_output, \"Test failed for input: {}\\nExpected output: {}\\nActual output: {}\".format(input_string, expected_output, solution(input_string))"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\") == \"1\"\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\") == \"0\"\nassert solution(\"5 5 1 2 3\\n2 2 3\") == \"-1\"\nassert solution(\"3 4 1 1 3\\n2 3 2\") == \"3\""
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3 2 4 4\\n2 5 4 10') == '1'\nassert solution('3 3 3 3 5\\n2 3 5 4 2') == '0'\nassert solution('5 5 1 2 3\\n2 2 3') == '-1'\nassert solution('3 4 1 1 3\\n2 3 2') == '3'"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\") == \"1\"\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\") == \"0\"\nassert solution(\"5 5 1 2 3\\n2 2 3\") == \"-1\"\nassert solution(\"3 4 1 1 3\\n2 3 2\") == \"3\""
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\\n\") == \"1\\n\"\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\\n\") == \"0\\n\"\nassert solution(\"5 5 1 2 3\\n2 2 3\\n\") == \"-1\\n\"\nassert solution(\"3 4 1 1 3\\n2 3 2\\n\") == \"3\\n\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\nG3 G3\\n\") == \"0\\n\"\nassert solution(\"4\\nG4 R4 R3 B3\\n\") == \"2\\n\"\nassert solution(\"5\\nB1 Y1 W1 G1 R1\\n\") == \"4\\n\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input(\"Enter the number of Borya's cards: \")) == '0' # output: 0\n\nassert solution(input(\"Enter the number of Borya's cards: \")) == '2' # output: 0\n\nassert solution(input(\"Enter the number of Borya's cards: \")) == '4' # output: 2\n\nassert solution(input(\"Enter the number of Borya's cards: \")) == '5' # output: 4"
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\nG3 G3\\n\") == \"0\\n\"\nassert solution(\"4\\nG4 R4 R3 B3\\n\") == \"2\\n\"\nassert solution(\"5\\nB1 Y1 W1 G1 R1\\n\") == \"4\\n\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 0, \"Solution should return 0\"\nassert solution() == 2, \"Solution should return 2\"\nassert solution() == 4, \"Solution should return 4\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\nG3 G3\\n\\n4\\nG4 R4 R3 B3\\n\\n5\\nB1 Y1 W1 G1 R1\\n') == '0\\n'\nassert solution('4\\nG4 R4 R3 B3\\n\\n5\\nB1 Y1 W1 G1 R1\\n') == '2\\n'\nassert solution('5\\nB1 Y1 W1 G1 R1\\n') == '4\\n'"
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\nG3 G3\\n') == '0\\n'\nassert solution('4\\nG4 R4 R3 B3\\n') == '2\\n'\nassert solution('5\\nB1 Y1 W1 G1 R1\\n') == '4\\n'"
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == output, f\"Test failed for {stdin} and expected {output}\"\nfor s, o in zip(stdin.split('\\n'), output.split('\\n')):\n    assert s == o, f\"Test failed for {s} and expected {o}\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"G3 G3\") == \"0\", \"Sample Case 1 failed\"\nassert solution(\"G4 R4 R3 B3\") == \"2\", \"Sample Case 2 failed\"\nassert solution(\"B1 Y1 W1 G1 R1\") == \"4\", \"Sample Case 3 failed\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == output_data, f\"Your solution is incorrect. Please check the example cases and check the problem statement.\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n\\n2\\n1 1\\n100 100\\n\\n5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"2 6\"\nassert solution(\"2\\n1 1\\n100 100\\n\\n5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"1 1\"\nassert solution(\"5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"3 11\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n2 1 1\\n100 100\\n5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"2 6\\n\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n\") == \"2 6\"\nassert solution(\"2\\n1 1\\n100 100\\n\") == \"1 1\"\nassert solution(\"5\\n10 30 5 6 24\\n10 41 7 8 24\\n\") == \"3 11\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n3 3 4 3\\n4 7 6 5\\n2\\n1 1\\n100 100\\n5\\n10 30 5 6 24\\n10 41 7 8 24') == '2 6\\n1 1\\n3 11'"
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2 6\\n1 1\\n3 11\"\n"
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n3 3 4 3\\n4 7 6 5\\n\\n2\\n1 1\\n100 100\\n\\n5\\n10 30 5 6 24\\n10 41 7 8 24\\n') == '2 6\\n1 1\\n'"
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n3 3 4 3\\n4 7 6 5\\n') == '2 6'\nassert solution('2\\n1 1\\n100 100\\n') == '1 1'\nassert solution('5\\n10 30 5 6 24\\n10 41 7 8 24\\n') == '3 11'"
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n\") == \"2 6\\n\"\nassert solution(\"2\\n1 1\\n100 100\\n\") == \"1 1\\n\"\nassert solution(\"5\\n10 30 5 6 24\\n10 41 7 8 24\\n\") == \"3 11\\n\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(example_input1) == example_output1\nassert solution(example_input2) == example_output2\nassert solution(example_input3) == example_output3\nassert solution(example_input4) == example_output4\nassert solution(example_input5) == example_output5"
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n\") == \"2 6\"\nassert solution(\"2\\n1 1\\n100 100\\n\") == \"1 1\"\nassert solution(\"5\\n10 30 5 6 24\\n10 41 7 8 24\\n\") == \"3 11\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\"\n"
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Test failed for the given input.\\nExpected output: '{expected}', but got '{solution(input())}'.\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 4\") == \"3B\", \"Solution for first sample should be '3B'.\"\nassert solution(\"2 2\") == \"Impossible\", \"Solution for second sample should be 'Impossible'.\"\nassert solution(\"3 2\") == \"1A1B\", \"Solution for third sample should be '1A1B'.\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 4\\n\") == \"3B\\n\"\nassert solution(\"2 2\\n\") == \"Impossible\\n\"\nassert solution(\"3 2\\n\") == \"1A1B\\n\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 4\\n\") == \"3B\\n\"\nassert solution(\"2 2\\n\") == \"Impossible\\n\"\nassert solution(\"3 2\\n\") == \"1A1B\\n\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '3B'\nassert solution(input()) == 'Impossible'\nassert solution(input()) == '1A1B'"
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 4') == '3B'\nassert solution('2 2') == 'Impossible'\nassert solution('3 2') == '1A1B'"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"3 2\\n5 4\\n\") == \"3\\n\"\nassert solution(stdin=\"5 4\\n\") == \"25\\n\"\nassert solution(stdin=\"1 1\\n\") == \"1\\n\"\nassert solution(stdin=\"2 3\\n\") == \"1\\n\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"3\\n\"\nassert solution(\"5 4\") == \"25\\n\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"3\\n\"\nassert solution(\"5 4\") == \"25\\n\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '3'\nassert solution(input()) == '25'"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 2') == '3'\nassert solution('5 4') == '25'"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '3', \"Output should be '3'\"\nassert solution(stdin) == '25', \"Output should be '25'\"\n"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 2') == '3\\n'\nassert solution('5 4') == '25\\n'"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"5 4\") == \"25\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"3\\n\"\nassert solution(\"5 4\") == \"25\\n\"\nassert solution(\"6 8\") == \"0\\n\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"3\\n\"\nassert solution(\"5 4\") == \"25\\n\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\\n\"\nassert solution(stdin) == \"1\\n\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2') == '1'\nassert solution('4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2') == '1'\nassert solution('4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2') == '1'\nassert solution('4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2') == '1'\nassert solution('4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2') == '1'\nassert solution('4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2') == '1'"
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 1\nassert solution() == 1\nassert solution() == 0\nassert solution() == 1\nassert solution() == 0\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() =="
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4 4\n4 1 2 3\n0 2 -3 1\n1 2\n2 3\n3 4\n4 2\n\"\"\") == \"1\\n\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 1"
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\\n\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1\\n\", \"The maximum possible profit Snuke can gain is 1.\\n\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '1'"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\nS.o\\n.o.o\\no.T\") == \"2\\nRemove the upper-right and lower-left leaves.\"\n"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3\\nS.o\\n.o.o.T\\n') == '2'\nassert solution('3 3\\nS.o\\n.o.o.o.T\\n') == '-1'\n"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\ns.o\\no.o.o\\no.o.o\\no.o.T\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\\n\""
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\nS.o\\n.o.o\\no.T\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\"\n"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\nS.o\\no.o.T') == '2\\nRemove the upper-right and lower-left leaves.'\nassert solution('2 3\\n.o.o.o.T') == '-1\\n'\nassert solution('2 3\\n.o.o.o.T') == '-1\\n'\nassert solution('2 3\\n.o.o.o.T') == '-1\\n'\nassert solution('2 3\\n.o.o.o.T') == '-1\\n'\nassert solution('2 3\\n.o.o.o.T') == '-1\\n'\n"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n3 3\nS.o\n.o.\no.T\n''') == '2'\n\nassert solution('''\n2 3\nS.o\n.o.\no.T\n''') == '1'\n\nassert solution('''\n3 3\nS.o\n.o.\no.T\n''') == '0'\n\nassert solution('''\n3 3\nS.o\n.o.\no.T\n''') == '0'\n\nassert solution('''\n3 3\nS.o\n.o.\no.T\n''') == '0'"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\nS.o\\n.o.o.T\\n') == '2\\nRemove the upper-right and lower-left leaves.'\n"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\ns.o\\no.o.o\\nT.T\") == \"2\\nRemove the upper-right and lower-left leaves.\"\n"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3\\nS.o\\n.o.o\\no.T\\n') == '2'\nassert solution('3 3\\nS.o\\n.o.o\\no.T\\n') == '2'\nassert solution('3 3\\nS.o\\n.o.o\\no.T\\n') == '2'\nassert solution('3 3\\nS.o\\n.o.o\\no.T\\n') == '2'"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\ns.o\\no.o.o\\no.T\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\\n\""
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3 2) == 3\nassert solution(199 200) == 200\nassert solution(1 1) == 1"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 3, \"Expected: 3, but got: \" + str(solution(3))\nassert solution(199) == 200, \"Expected: 200, but got: \" + str(solution(199))\nassert solution(1) == 1, \"Expected: 1, but got: \" + str(solution(1))\nassert solution(100) == 101, \"Expected: 101, but got: \" + str(solution(100))\n"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"1\\n\", \"Expected output: 1\\nGot: \" + solution(\"1 1\")\nassert solution(\"3 2\") == \"3\\n\", \"Expected output: 3\\nGot: \" + solution(\"3 2\")\nassert solution(\"199 200\") == \"200\\n\", \"Expected output: 200\\nGot: \" + solution(\"199 200\")"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == '1', '1'\nassert solution(3) == '3', '3'\nassert solution(199) == '200', '200'"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test failed\"\n"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 1\\n') == '1\\n', '1'\nassert solution('3 2\\n') == '3\\n', '3'\nassert solution('199 200\\n') == '200\\n', '200'"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 1') == '1\\n', \"Error in the solution: '1 1' should return '1\\n', but it returns '{}'\\n\".format(solution('1 1'))\nassert solution('3 2') == '3\\n', \"Error in the solution: '3 2' should return '3\\n', but it returns '{}'\\n\".format(solution('3 2'))\nassert solution('199 200') == '200\\n', \"Error in the solution: '199 200' should return '200\\n', but it returns '{}'\\n\".format(solution('199 200'))\n"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"1\\n\"\nassert solution(\"3 2\") == \"3\\n\"\nassert solution(\"199 200\") == \"200\\n\""
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1\"\nassert solution(open(\"input2.txt\", \"r\")) == \"3\"\nassert solution(open(\"input3.txt\", \"r\")) == \"200\""
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"1\\n\", \"Error in solution 1\"\nassert solution(\"3 2\") == \"3\\n\", \"Error in solution 2\"\nassert solution(\"199 200\") == \"200\\n\", \"Error in solution 3\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n5 2\\n3 3\\n\") == \"Aoki\"\nassert solution(\"1\\n2 3\\n\") == \"Takahashi\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\"\nassert solution(\"3\\n7 3\\n4 2\") == \"Takahashi\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\"\nassert solution(\"3\\n5 3\\n3 2\") == \"Takahashi\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n5 2\\n3 3\\n\") == \"Aoki\\n\"\nassert solution(\"5\\n5 1\\n3 3\\n\") == \"Takahashi\\n\"\nassert solution(\"5\\n2 3\\n3 2\\n\") == \"Aoki\\n\"\nassert solution(\"1\\n1 1\\n1 1\\n\") == \"Takahashi\\n\"\nassert solution(\"1\\n1 1\\n2 2\\n\") == \"Aoki\\n\"\nassert solution(\"1\\n2 2\\n2 1\\n\") == \"Takahashi\\n\"\nassert solution(\"1\\n2 2\\n1 1\\n\") == \"Aoki\\n\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'Aoki\\n'"
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\\n\"\nassert solution(\"5\\n5 5\\n5 5\") == \"Takahashi\\n\"\nassert solution(\"5\\n5 2\\n3 3\\n1 1\\n1 1\") == \"Aoki\\n\"\nassert solution(\"5\\n5 2\\n3 3\\n1 1\\n1 1\\n2 2\\n2 2\") == \"Takahashi\\n\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"3 3\") == \"8\"\nassert solution(\"5 3\") == \"21\"\nassert solution(\"6 5\") == \"150\"\nassert solution(\"3 3\") == \"8\"\nassert solution(\"4 3\") == \"32\"\nassert solution(\"2 2\") == \"0\"\n"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"0\\n\"\nassert solution(\"3 3\") == \"8\\n\"\n"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    2 2\n    \"\"\"\n) == \"0\"\nassert solution(\n    \"\"\"\n    3 3\n    \"\"\"\n) == \"8\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"3 3\") == \"8\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0\\n\"\nassert solution(\"2 2\") == \"0\\n\"\nassert solution(\"3 3\") == \"8\\n\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"3 3\") == \"8\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 2') == '0'\nassert solution('3 3') == '8'"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"3 3\") == \"8\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 0, \"Test failed!\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\\n\") == \"1\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\\n\") == \"0\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\\n\") == \"-1\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\") == \"1\\n\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\") == \"0\\n\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"-1\\n\"\nprint(\"All test cases pass!\")"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2\\n1 2 3 4\\n1 5 3 4') == '1\\n'\nassert solution('2 2\\n1 2 3 4\\n1 5 6 4') == '0\\n'\nassert solution('2 3\\n1 2 4 5\\n1 2 1 3 2 3') == '-1\\n'"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"-1\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '1', 'Incorrect output'\nassert solution(input()) == '0', 'Incorrect output'\nassert solution(input()) == '-1', 'Incorrect output'"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\\n\") == \"1\\n\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\\n\") == \"0\\n\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\\n\") == \"-1\\n\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\") == \"1\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\") == \"0\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"-1\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 4\") == \"0\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"0\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 4\") == \"1\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 5\") == \"0\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 6\") == \"0\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 5\") == \"1\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"1\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 6\") == \"0\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 5\") == \"1\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"1\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 6\") == \"0\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 5\") == \"1\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"1\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 6\") == \"0\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 5\") == \"1\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"1\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 6\") == \"0\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 5\") == \"1\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"1\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 6\") == \"0\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 5\") == \"1\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"1\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 6\") == \"0\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 5\") == \"1\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"1\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 6\") == \"0\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 5\") == \"1\"\nassert solution(\"2 3\\n1 2 4 "
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\") == \"1\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\") == \"0\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"-1\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1\"\nassert solution() == \"0\"\nassert solution() == \"-1\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\\n\") == \"1\\n\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\\n\") == \"0\\n\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\\n\") == \"-1\\n\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('24') == '17:30'\nassert solution('12') == '07:30'\nassert solution('24') == '09:09'"
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"24\") == \"17:30\"\nassert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('12') == '07:30'\nassert solution('24') == '09:09'"
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('24') == '17:30'\nassert solution('12') == '07:30'\nassert solution('24') == '09:09'"
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"24\") == \"17:30\", \"Test 1\"\nassert solution(\"12\") == \"07:30\", \"Test 2\"\nassert solution(\"24\") == \"09:09\", \"Test 3\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(12) == '07:30'\nassert solution(24) == '17:30'\nassert solution(12) == '07:30'\nassert solution(24) == '09:09'"
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"24\") == \"17:30\"\nassert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"24\") == \"17:30\"\nassert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"24\") == \"17:30\"\nassert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\"\n\nfrom typing import List"
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"6\"\n"
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() == \"6\\n\", \"Test failed\"\nassert solution() =="
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '6\\n', \"Your solution is incorrect\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"6\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\\n\") == \"6\"\nassert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\\n4 2 1\\n\") == \"10\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1') == '6'"
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"6\\n\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Incorrect output. Expected: {expected}, Received: {solution(stdin)}\"\n"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n2 0 3 0 1 1\\n\") == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\\n\"\nassert solution(\"1\\n0\\n\") == \"0\\n\"\nassert solution(\"6\\n3 2 2 2 1 1\\n\") == \"-1\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '''2 1\n2 5\n3 3\n3 6\n5 6'''"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n2 0 3 0 1 1\") == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\\n\"\nassert solution(\"1\\n0\") == \"0\\n\"\nassert solution(\"6\\n3 2 2 2 1 1\") == \"-1\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=stdin) == expected, f\"Expected {expected}, but got {solution(stdin=stdin)}\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Test case failed: expected '{expected}', got '{solution(stdin)}'.\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2 1\\n2 5\\n3 3\\n3 6\\n5 6\\n\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\"5\n2 1\n2 5\n3 3\n3 6\n5 6\n\"\"\"\n\nassert solution(stdin) == \"\"\"0\n\"\"\"\n\nassert solution(stdin) == \"\"\"-1\n\"\"\"\n\nassert solution(stdin) == \"\"\"5\n2 1\n2 5\n3 3\n3 6\n5 6\n\"\"\"\n\nassert solution(stdin) == \"\"\"0\n\"\"\"\n\nassert solution(stdin) == \"\"\"-1\n\"\"\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test {i+1} failed. Expected {output}, but got {solution(input())}\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n6\n2 0 3 0 1 1\n''') == '5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6'\n\nassert solution('''\n1\n0\n''') == '0'\n\nassert solution('''\n6\n3 2 2 2 1 1\n''') == '-1'\n\nprint('All test cases passed!')"
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 8\\n12 20\\n3 10\\n10 20 30\") == \"2\\n0 4 0\"\nassert solution(\"5 10\\n15 20 30\") == \"1\\n0\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution) == \"2\"\nassert solution(solution(solution)) == \"1\"\nassert solution(solution(solution(solution)))) == \"0 4 0\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, \"Expected output not found.\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 8\\n12 20\\n\") == \"2\\n0 4 \"\nassert solution(\"3 10\\n10 20 30\\n\") == \"1\\n0 \"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 8\\n12 20\\n\\n3 10\\n10 20 30\") == \"2\\n0 4 0 0 0 0\\n\"\nassert solution(\"3 10\\n10 20 30\") == \"1\\n0 0 0 0 0 0 0 0 0 0 0 0 0\\n\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 8\\n12 20\") == \"2\\n0 4\\n\"\nassert solution(\"3 10\\n10 20 30\") == \"1\\n0\"\nassert solution(\"4 16\\n16 32 64 128\") == \"4\\n0\"\nassert solution(\"5 100\\n100 200 400 800 1600\") == \"5\\n0\"\nassert solution(\"10 300\\n300 600 1200 2400 5000\") == \"10\\n0\"\nassert solution(\"20 800\\n800 1600 3200 6400 12800\") == \"20\\n0\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 8\\n12 20\\n\") == \"2\\n0 4\\n\"\nassert solution(\"3 10\\n10 20 30\\n\") == \"1\\n0\"\nassert solution(\"5 5\\n10 20 30 40\\n\") == \"2\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 8\\n12 20\\n3 10\\n10 20 30\") == \"2\\n0 4 0\\n1\\n0\"\nassert solution(\"4 16\\n10 20 30\\n6 10 15\") == \"4\\n0 0 0 4\\n0\"\nassert solution(\"100 2000000000\") == \"1\"\n"
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('0 0 5 5\\n3 2\\n-1 -1\\n-1 0') == '3.729935587093555327'\nassert solution('0 0 0 1000\\n100 1000\\n-50 0\\n50 0') == '11.547005383792516398'"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0 5 5\\n3 2\\n-1 -1\\n-1 0\") == \"3.729935587093555327\"\nassert solution(\"0 0 0 1000\\n100 1000\\n-50 0\\n50 0\") == \"11.547005383792516398\""
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('0 0 5 5\\n3 2\\n-1 -1\\n-1 0') == 3.729935587093555327\nassert solution('0 0 0 1000\\n100 1000\\n-50 0\\n50 0') == 11.547005383792516398\n"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('0 0 5 5\\n3 2\\n-1 -1\\n-1 0') == 3.729935587093555327\nassert solution('0 0 0 1000\\n100 1000\\n-50 0\\n50 0') == 11.547005383792516398\n"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 3.729935587093555327\n"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0 0 5 5\\n3 2\\n-1 -1\\n-1 0') == 3.729935587093555327\nassert solution('0 0 0 1000\\n100 1000\\n-50 0\\n50 0') == 11.547005383792516398"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('0 0 5 5\\n3 2\\n-1 -1\\n-1 0') == 3.73\nassert solution('0 0 0 1000\\n100 1000\\n-50 0\\n50 0') == 11.54"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('0 0 5 5\\n3 2\\n-1 -1\\n-1 0') == 3.729935587093555327\nassert solution('0 0 0 1000\\n100 1000\\n-50 0\\n50 0') == 11.547005383792516398"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0 5 5\\n3 2\\n-1 -1\\n-1 0\") == \"3.729935587093555327\"\nassert solution(\"0 0 0 1000\\n100 1000\\n-50 0\\n50 0\") == \"11.547005383792516398\"\nassert solution(\"0 0 1 1\\n-1 0\\n0 1\") == \"1.0\"\nassert solution(\"0 0 1 1\\n0 1\\n0 1\") == \"1.0\"\nassert solution(\"0 0 1 1\\n0 1\\n1 0\") == \"0.0\""
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('0 0 5 5\\n3 2\\n-1 -1\\n-1 0') == '3.729935587093555327'\nassert solution('0 0 0 1000\\n100 1000\\n-50 0\\n50 0') == '11.547005383792516398'\n\nfrom typing import List"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n\") == \"Second\\nFirst\\nSecond\""
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n\") == \"Second\\nFirst\"\nassert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n\") == \"Second\""
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\") == \"Second\\nFirst\\nSecond\""
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'Second\\nFirst\\nSecond', 'Test case 1 failed'\n\nassert solution(stdin) == 'Second\\nFirst\\nSecond', 'Test case 2 failed'\n\nassert solution(stdin) == 'Second\\nFirst\\nSecond', 'Test case 3 failed'\n\nassert solution(stdin) == 'Second\\nFirst\\nSecond', 'Test case 4 failed'\n\nassert solution(stdin) == 'Second\\nFirst\\nSecond', 'Test case 5 failed'"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"test_input.txt\", \"r\").read()) == \"Second\\nFirst\\nSecond\""
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'Second\\nFirst\\nSecond', \"Test case 1 failed\"\n\nassert solution(input()) == 'Second\\nFirst\\nSecond', \"Test case 2 failed\"\n\nassert solution(input()) == 'First\\nSecond\\nSecond', \"Test case 3 failed\"\n\nassert solution(input()) == 'Second\\nSecond\\nSecond', \"Test case 4 failed\"\n\nassert solution(input()) == 'First\\nFirst\\nFirst', \"Test case 5 failed\"\n\nprint(\"All test cases passed\")\n"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\") == \"Second\\nFirst\\nSecond\"\nassert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n2\\n3\\n4\\n5\") == \"Second\\nSecond\\nSecond\"\nassert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n7"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == 'Second\\nFirst'\nassert solution(open('input2.txt', 'r')) == 'Second\\nFirst'\nassert solution(open('input3.txt', 'r')) == 'First\\nSecond'"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_data) == expected_output, f\"Test case {t} failed: expected output '{expected_output}', got '{solution(input_data)}'\""
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"Second\\nFirst\\nSecond\\n\", \"Test case 1 failed\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 3 2\\n4 3 1 5 2') == '1\\n'\nassert solution('5 3 1\\n4 3 1 5 2') == '1\\n'\nassert solution('5 3 1\\n4 3 1 5 3') == '2\\n'\nassert solution('5 3 1\\n4 3 1 5 2 3') == '1\\n'\nassert solution('5 3 1\\n4 3 1 5 2 4') == '1\\n'"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\\n\"\n"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    5 3 2\n    4 3 1 5 2\n\"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    10 10 10\n    5 5 5 5 5 5\n\"\"\"\n) == \"5\\n\"\n\nassert solution(\n    \"\"\"\n    10 10 10\n    10 10 10 10 10 10 10\n\"\"\"\n) == \"10\\n\"\n\nassert solution(\n    \"\"\"\n    10 10 10\n    10 10 10 10 10 10 10\n\"\"\"\n) == \"10\\n\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\"\nassert solution(\"5 3 2\\n4 3 1 4 2\") == \"1\"\nassert solution(\"5 3 2\\n4 3 1 5 3\") == \"1\"\nassert solution(\"5 3 2\\n4 3 1 5 4\") == \"1\"\nassert solution(\"5 3 2\\n4 3 1 5 5\") == \"1\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == '1'\n"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 3 2\\n4 3 1 5 2') == '1\\n'\nassert solution('5 3 2\\n4 3 1 5 3\\n4 3 2 5 3\\n4 3 2 5 4\\n4 3 2 5 5') == '1\\n'\nassert solution('5 3 2\\n4 3 1 5 4\\n4 3 2 5 4\\n4 3 2 5 5\\n4 3 2 5 6') == '1\\n'"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5, 3, 2) == \"1\"\n\nassert solution(5, 3, 2) == \"1\"\n\nassert solution(5, 3, 2) == \"1\"\n\nassert solution(5, 3, 2) == \"1\"\n\nassert solution(5, 3, 2) == \"1\"\n\nassert solution(5, 3, 2) == \"1\"\n\nassert solution(5, 3, 2) == \"1\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\\n\") == \"1\\n\"\nassert solution(\"5 3 1\\n4 3 1 5 2\\n\") == \"1\\n\"\nassert solution(\"5 3 1\\n4 3 1 5 1\\n\") == \"1\\n\"\nassert solution(\"5 3 1\\n4 3 1 5 2\\n\") == \"1\\n\"\nassert solution(\"5 3 1\\n4 3 1 5 3\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'Output\\n24\\n'\n"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Output\\n24\\n\", \"Incorrect output.\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"24\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n\") == \"1\\n\"\nassert solution(\"3 2\\n\") == \"24\\n\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"1\\n\"\nassert solution(\"3 2\") == \"24\\n\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"24\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Incorrect output for {input()} \\nExpected: {expected_output} \\nReceived: {solution(input())}\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"24\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"24\\n\"\nassert solution(open(\"input2.txt\", \"r\")) == \"1\\n\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"6\"\nassert solution() == \"3\"\nassert solution() == \"1196\"\nassert solution() == \"64921457\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '6'\nassert solution() == '3'\nassert solution() == '1196'\nassert solution() == '64921457'"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n\") == \"6\"\nassert solution(\"4 4\\n\") == \"3\"\nassert solution(\"7 3\\n\") == \"1196\"\nassert solution(\"31 8\\n\") == \"64921457\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 2) == 6\nassert solution(4, 4) == 3\nassert solution(7, 3) == 1196\nassert solution(31, 8) == 64921457"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 2) == \"6\"\nassert solution(4, 4) == \"3\"\nassert solution(7, 3) == \"1196\"\nassert solution(31, 8) == \"64921457\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"6\", \"Incorrect output\"\n"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 2) == 6\nassert solution(4, 4) == 3\nassert solution(7, 3) == 1196\nassert solution(31, 8) == 64921457\nassert solution(3, 5) == 0"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == '''6\n3\n1196\n3\n64921457'''"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 6, \"Expected 6, but got {} instead\".format(solution())"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\"\nassert solution(\"3 2"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 4 2') == '#X#\\nX#X\\n#...'\nassert solution('5 4 5') == '#XXX\\n#X#.\\nX#..\\n...#\\n.#.#'"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n3 4 2\n"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4 2\\n#..#\\n..#.\\n#...\") == \"#XXX\\n#X#.\\nX#..\\n...#\\n.#.#\"\nassert solution(\"5 4 5\\n#...\\n#.#.\\n.#..\\n...#\") == \"#XXX\\n#X#.\\nX#..\\n...#\\n.#.#\""
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''3 4 2\n"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"3 4 2\n"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 4 2\\n#..#\\n..#.\\n#...\\n') == '#XXX\\n#X#.\\nX#..\\n...#\\n.#.#\\n'\nassert solution('5 4 5\\n#...\\n#.#.\\n.#..\\n...#\\n.#.#\\n') == '#XXX\\n#X#.\\nX#..\\n...#\\n.#.#\\n'"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 4 2\\n#..#\\n..#.\\n#...\\n\\n5 4 5\\n#...\\n#.#.\\n.#..\\n...#\\n.#.#\\n') == '''\n"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4 2\\n#..#\\n..#.\\n#...\") == \".X#\"\nassert solution(\"5 4 5\\n#...\\n#.#.\\n.#..\\n...#\\n.#.#\") == \"#XXX\\n#X#.X\\nX#..#\\n...#X\\n.#.##\""
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 2\\n#..#\\n..#.\\n#...\") == \"#XXX\\n#X#.\\nX#..\\n...#\\n.#.#\"\nassert solution(\"5 4 5\\n#...\\n#.#.\\n.#..\\n...#\") == \"#XXX\\n#X#.\\nX#..\\n...#\\n.#.#\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''3\n1 1''') == '1'\nassert solution('''5\n1 2 2 2''') == '3'\nassert solution('''18\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4''') == '4'"
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3), \"The first example is incorrect.\"\nassert solution(5), \"The second example is incorrect.\"\nassert solution(18), \"The third example is incorrect.\"\n\nclass ApplesAndInflorescences:\n    def __init__(self, inflorescences: List[int]):\n        self.inflorescences = inflorescences\n        self.count = 0\n\n    def count_apples(self):\n        for i in range(1, len(self.inflorescences)):\n            if self.inflorescences[i] == self.inflorescences[i-1] + 1:\n                self.count += 1\n        return self.count"
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '1\\n'\nassert solution(stdin) == '3\\n'\nassert solution(stdin) == '4\\n'"
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Test failed for the given inputs: {input()}, {output()}\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Solution: {solution(input())}, Expected: {expected}\"\n"
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"3\"\nassert solution(\"18\") == \"4\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 1\\n\") == \"1\\n\"\nassert solution(\"5\\n1 2 2 2\\n\") == \"3\\n\"\nassert solution(\"18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\\n\") == \"4\\n\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1\") == \"1\\n\"\nassert solution(\"5\\n1 2 2 2\") == \"3\\n\"\nassert solution(\"18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\") == \"4\\n\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Output\", \"The provided code is not correct. Please provide the correct code and test the given examples.\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\nassert solution(\"7 4 2\") == \"-1\"\nassert solution(\"1 2 3\") == \"1 2 3\"\nassert solution(\"1 3 2\") == \"-1\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\nassert solution(\"1 2 3\") == \"-1\"\nassert solution(\"4 1 5 3 2\") == \"2 4 1 5 3\"\nassert solution(\"3 2 1\") == \"2 4 1 5 3\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '2 4 1 5 3', \"Expected output: '2 4 1 5 3', but got '{}'.\".format(solution(input()))"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 3 2') == '2 4 1 5 3'"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5, 3, 2) == [-1, 2, 4, 1, 5, 3]\nprint(\"All test cases passed successfully!\")"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\nassert solution(\"2 4 1 5 3\") == \"2 4 1 5 3\"\nassert solution(\"1 2 3 4 5\") == \"1 2 3 4 5\"\nassert solution(\"6 3 5 1 2\") == \"-1\"\nassert solution(\"5 4 3 2 1\") == \"-1\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '2 4 1 5 3\\n'"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == \"2 4 1 5 3\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n3 6 9 18 36 108\") == \"Yes\"\nassert solution(\"2\\n7 17\") == \"No\"\nassert solution(\"9\\n4 8 10 12 15 18 33 44 81\") == \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6\\n3 6 9 18 36 108') == 'Yes'\nassert solution('2\\n7 17') == 'No'\nassert solution('9\\n4 8 10 12 15 18 33 44 81') == 'Yes'"
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('Input') == 'Yes'\nassert solution('Input') == 'Yes'\nassert solution('Input') == 'Yes'\nassert solution('Input') == 'Yes'\nassert solution('Input') == 'Yes'\nassert solution('Input') == 'No'\nassert solution('Input') == 'No'\nassert solution('Input') == 'No'\nassert solution('Input') == 'No'\nassert solution('Input') == 'No'\nassert solution('Input') == 'No'\nassert solution('Input') == 'No'"
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n3 6 9 18 36 108\") == \"Yes\"\nassert solution(\"2\\n7 17\") == \"No\"\nassert solution(\"9\\n4 8 10 12 15 18 33 44 81\") == \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n6\n3 6 9 18 36 108\n\"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n2\n7 17\n\"\"\") == \"No\"\n\nassert solution(\"\"\"\n9\n4 8 10 12 15 18 33 44 81\n\"\"\") == \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n3 6 9 18 36 108\") == \"Yes\\n\"\nassert solution(\"2\\n7 17\") == \"No\\n\"\nassert solution(\"9\\n4 8 10 12 15 18 33 44 81\") == \"Yes\\n\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n3 6 9 18 36 108\\n\") == \"Yes\\n\"\nassert solution(\"2\\n7 17\\n\") == \"No\\n\"\nassert solution(\"9\\n4 8 10 12 15 18 33 44 81\\n\") == \"Yes\\n\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\\n6\\n3 6 9 18 36 108\\n\\nOutput\\nYes\\n\\nInput\\n2\\n7 17\\n\\nOutput\\nNo\\n\\nInput\\n9\\n4 8 10 12 15 18 33 44 81\\n\\nOutput\\nYes\\n\") == \"Yes\"\nassert solution(\"Input\\n2\\n7 17\\n\\nOutput\\nNo\\n\\nInput\\n9\\n4 8 10 12 15 18 33 44 81\\n\\nOutput\\nYes\\n\") == \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n3 6 9 18 36 108\") == \"Yes\"\nassert solution(\"2\\n7 17\") == \"No\"\nassert solution(\"9\\n4 8 10 12 15 18 33 44 81\") == \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 6 9 18 36 108\") == \"Yes\"\nassert solution(\"2 7 17\") == \"No\"\nassert solution(\"9 4 8 10 12 15 18 33 44 81\") == \"Yes\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"12\"\n"
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\\n\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == '12', 'Test failed'"
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == \"12\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"12\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\"\n"
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\\n\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"12\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\na_1 a_2... a_N\") == \"12\"\n"
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 3\\n3 1 4 2\\n') == '5'\n"
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n3 1 4 2\\n\") == \"5\\n\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n3 1 4 2\") == \"5\\n\"\nassert solution(\"4 5\\n2 1 4 2 5 3\") == \"9\\n\"\nassert solution(\"4 5\\n4 2 2 2 3\") == \"9\\n\"\nassert solution(\"4 3\\n1 3 4 2\") == \"4\\n\"\nassert solution(\"4 5\\n2 1 4 2 5 3\") == \"9\\n\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n3 1 4 2\\n\") == \"5\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n3 1 4 2\\n\") == \"5\", \"The length of a sought sequence should be 5.\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"5\", \"The correct answer is 5, but it is not equal to the actual output.\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 3\\n3 1 4 2') == '5'\nassert solution('4 5\\n5 4 3 2 1') == '7'\nassert solution('4 7\\n7 6 5 4 3 2 1') == '11'\nassert solution('4 10\\n10 9 8 7 6 5 4 3 2 1') == '15'"
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n3 1 4 2\\n\") == \"5\\n\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '5', 'Please provide the correct input.'"
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n3 1 4 2\\n\") == \"5\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Test failed: {solution(input())}!= {expected}\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_string) == output_string, f\"Your solution is incorrect. Please see the example cases and the provided test cases.\" for input_string, output_string in [\n    ('\\n'.join(['3\\n1 2 3\\n']), '\\n'.join(['0 0\\n']))\n]\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"Please provide the code to solve this problem\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_string) == output_string, f\"Solution incorrect. Expected: {output_string}, Received: {solution(input_string)}\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2 3 1\\n3\\n3 2 1\") == \"0 0\\n0 1\"\nassert solution(\"3\\n2 3 1\\n3\\n3 2 1\") == \"0 1\"\nassert solution(\"3\\n3 2 1\\n3\\n3 2 1\") == \"2 1\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2 3\\n3\\n2 3 1\\n3\\n3 2 1') == '0 0\\n0 1\\n2 1'\nassert solution('3\\n2 3 1\\n3\\n3 2 1\\n3\\n3 3 3') == '2 1'\nassert solution('3\\n3 2 1\\n3\\n3 2 1\\n3\\n3 3 3') == '2 1'"
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\\n3 2 1\\n3 3 2 1\") == \"0 0\\n0 1\\n2 1\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2 3 1\\n3\\n3 2 1\") == \"0 0\\n0 1\\n2 1\"\n\nassert solution(\"3\\n2 3 1\\n3\\n3 2 1\") == \"0 1\\n2 1\"\n\nassert solution(\"3\\n3 2 1\\n3\\n3 2 1\") == \"2 1\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2 3 1\") == \"0 0\"\nassert solution(\"3\\n2 3 1\\n3\\n3 2 1\") == \"0 1\"\nassert solution(\"3\\n3 2 1\\n3\\n2 1 3\") == \"2 1\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2 3 1\\n3\\n3 2 1\") == \"0 0\\n0 1\\n2 1\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2 4\naa\nbb\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\n3 3\naba\nbba\n\"\"\") == \"8\"\n\nassert solution(\"\"\"\n4 5\nabbb\nbaaa\n\"\"\") == \"8\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4\\naa\\nbb\\n\") == \"6\\n\"\nassert solution(\"3 3\\naba\\nbba\\n\") == \"8\\n\"\nassert solution(\"4 5\\nabbb\\nbaaa\\n\") == \"8\\n\"\n"
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4\\na\\nb\\n\") == \"6\"\nassert solution(\"3 3\\nab\\nba\\n\") == \"8\"\nassert solution(\"4 5\\nabbb\\nbaaa\\n\") == \"8\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"6\\n\"\nassert solution() == \"8\\n\"\nassert solution() == \"8\\n\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4\\na\\nb\\n\") == \"6\\n\"\nassert solution(\"3 3\\nab\\nba\\n\") == \"8\\n\"\nassert solution(\"4 5\\nabbb\\nbaaa\\n\") == \"8\\n\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4\\na\\nb\\n\") == \"6\"\nassert solution(\"3 3\\na\\nb\\n\") == \"8\"\nassert solution(\"4 5\\nabbb\\nbaaa\\n\") == \"8\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4\\naab\\nbb\") == \"6\"\nassert solution(\"3 3\\naba\\nbba\") == \"8\"\nassert solution(\"4 5\\nabbb\\nbaaa\") == \"8\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Wrong output! Expected {expected_output}, got {solution(input())} instead.\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 4\\naa\\nbb\") == \"6\"\nassert solution(\"3 3\\naba\\nbba\") == \"8\"\nassert solution(\"4 5\\nabbb\\nbaaa\") == \"8\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4\\na\\nb\\n\") == \"6\"\nassert solution(\"3 3\\naba\\nbba\\n\") == \"8\"\nassert solution(\"4 5\\nabbb\\nbaaa\\n\") == \"8\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"NO\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"NO\"\n"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''0 0 0\n0 0 1\n0 0 1\n0 0 1\n0 1 1\n0 1 1\n0 1 1\n1 1 1\n''') == 'YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1'\nassert solution('''0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n''') == 'NO'"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\\n\"\n\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"NO\\ndef solution(stdin: str) -> str:\n    pass\n\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"NO\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\\n\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'NO'"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"NO\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'NO'\n"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'NO'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'NO'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'NO'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'NO'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'NO'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1"
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n2 3 6 7\\n') == 'YES\\n2 2 1 1'\nassert solution('5\\n6 15 35 77 22\\n') == 'YES\\n2 1 2 1 1'\nassert solution('5\\n6 10 15 1000 75\\n') == 'NO'"
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(6) == \"NO\"\nassert solution(7) == \"NO\"\n\nfrom typing import List"
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"NO\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4) == 'YES'\nassert solution(5) == 'YES'\nassert solution(6) == 'YES'\nassert solution(7) == 'YES'\nassert solution(8) == 'YES'\nassert solution(9) == 'YES'\nassert solution(10) == 'YES'\nassert solution(11) == 'YES'\nassert solution(12) == 'YES'\nassert solution(13) == 'YES'\nassert solution(14) == 'YES'\nassert solution(15) == 'YES'\nassert solution(16) == 'YES'\nassert solution(17) == 'YES'\nassert solution(18) == 'YES'\nassert solution(19) == 'YES'\nassert solution(20) == 'YES'\nassert solution(21) == 'YES'\nassert solution(22) == 'YES'\nassert solution(23) == 'YES'\nassert solution(24) == 'YES'\nassert solution(25) == 'YES'\nassert solution(26) == 'YES'\nassert solution(27) == 'YES'\nassert solution(28) == 'YES'\nassert solution(29) == 'YES'\nassert solution(30) == 'YES'\nassert solution(31) == 'YES'\nassert solution(32) == 'YES'\nassert solution(33) == 'YES'\nassert solution(34) == 'YES'\nassert solution(35) == 'YES'\nassert solution(36) == 'YES'\nassert solution(37) == 'YES'\nassert solution(38) == 'YES'\nassert solution(39) == 'YES'\nassert solution(40) == 'YES'\nassert solution(41) == 'YES'\nassert solution(42) == 'YES'\nassert solution(43) == 'YES'\nassert solution(44) == 'YES'\nassert solution(45) == 'YES'\nassert solution(46) == 'YES'\nassert solution(47) == 'YES'\nassert solution(48) == 'YES'\nassert solution(49) == 'YES'\nassert solution(50) == 'YES'\nassert solution(51) == 'YES'\nassert solution(52) == 'YES'\nassert solution(53) == 'YES'\nassert solution(54) == 'YES'\nassert solution(55) == 'YES'\nassert solution(56) == 'YES'\nassert solution(57) == 'YES'\nassert solution(58) == 'YES'\nassert solution(59) == 'YES'\nassert solution(60) == 'YES'\nassert solution(61) == 'YES'\nassert solution(62) == 'YES'\nassert solution(63) == 'YES'\nassert solution(64) == 'YES'\nassert solution(65) == 'YES'\nassert solution(66) == 'YES'\nassert solution(67) == 'YES'\nassert solution(68) == 'YES'\nassert solution(69) == 'YES'\nassert solution(70) == 'YES'\nassert solution(71) == 'YES'\nassert solution(72) == 'YES'\nassert solution(73) == 'YES'\nassert solution(74) == 'YES'\nassert solution(75) == 'YES'\nassert solution(76) == 'YES'\nassert solution(77) == 'YES'\nassert solution(78) == 'YES'\nassert solution(79) == 'YES'\nassert solution(80) == 'YES'\nassert solution(81) == 'YES'\nassert solution(82) == 'YES'\nassert solution(83) == 'YES'\nassert solution(84) == 'YES'\nassert solution(85) == 'YES'\nassert solution(86) == 'YES'\nassert solution(87) == 'YES'\nassert solution(88) == 'YES'\nassert solution(89) == 'YES'\nassert solution(90) == 'YES'\nassert solution(91) == 'YES'\nassert solution(92) == 'YES'\nassert solution(93) == 'YES'\nassert solution(94) == 'YES'\nassert solution(95) == 'YES'\nassert solution(96) == 'YES'\nassert solution(97) == 'YES"
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"YES\\n2 2 1 1\\nYES\\n2 1 2 1 1\\nNO\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Example usage:\\n# solution('4\\n2 3 6 7\\n')\\n# solution('5\\n6 15 35 77 22\\n')\\n# solution('5\\n6 10 15 1000 75\\n')\\n\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4) == 'YES\\n2 2 1 1'\nassert solution(5) == 'YES\\n2 1 2 1 1'\nassert solution(5) == 'NO\\n2 1 2 1 1'"
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 3 6 7\") == \"YES\\n2 2 1 1\"\nassert solution(\"5\\n6 15 35 77 22\") == \"YES\\n2 1 2 1 1\"\nassert solution(\"5\\n6 10 15 1000 75\") == \"NO\"\n"
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5) == \"YES\\n2 2 1 1\"\nassert solution(10) == \"YES\\n2 2 1 1\"\nassert solution(100) == \"YES\\n2 1 2 1 1\"\nassert solution(1000) == \"YES\\n2 1 2 1 1\"\nassert solution(10000) == \"NO\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 3 6 7\\n\") == \"YES\\n2 2 1 1\"\nassert solution(\"5\\n6 15 35 77 22\\n\") == \"YES\\n2 1 2 1 1\"\nassert solution(\"5\\n6 10 15 1000 75\\n\") == \"NO\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3 6 7\") == \"YES\"\nassert solution(\"5 6 15 35 77 22\") == \"YES\"\nassert solution(\"5 6 10 15 1000 75\") == \"NO\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\"\n\nfrom typing import List"
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('100\\n60\\n70') == '40'\nassert solution('410\\n55\\n70') == '5'\nassert solution('600\\n60\\n70') == '0'"
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"100\\n60\\n70\") == \"40\"\nassert solution(\"410\\n55\\n70\") == \"5\"\nassert solution(\"600\\n60\\n70\") == \"0\"\nassert solution(\"100\\n100\\n100\") == \"0\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"100\\n60\\n70\") == \"40\"\nassert solution(\"410\\n55\\n70\") == \"5\"\nassert solution(\"600\\n60\\n70\") == \"0\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100\\n60\\n70\") == \"40\"\nassert solution(\"410\\n55\\n70\") == \"5\"\nassert solution(\"600\\n60\\n70\") == \"0\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"100\\n60\\n70\\n\") == \"40\\n\"\nassert solution(\"410\\n55\\n70\\n\") == \"5\\n\"\nassert solution(\"600\\n60\\n70\\n\") == \"0\\n\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"100\\n60\\n70\") == \"40\\n\"\nassert solution(\"410\\n55\\n70\") == \"5\\n\"\nassert solution(\"600\\n60\\n70\") == \"0\\n\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100\\n60\\n70\") == \"40\"\nassert solution(\"410\\n55\\n70\") == \"5\"\nassert solution(\"600\\n60\\n70\") == \"0\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"100\\n60\\n70\") == \"40\"\nassert solution(\"410\\n55\\n70\") == \"5\"\nassert solution(\"600\\n60\\n70\") == \"0\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(input())) == '''12\n3 4\n1 2 3 5\n3 1 5 4\n5 6 8 9'''"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\\n12\\n3 1 4 1 5 9 2 6 5 3 5 8\\n\\nOutput\\n12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\\n\\nInput\\n5\\n1 1 1 1 1\\n\\nOutput\\n1\\n1 1\\n1\") == \"Output\\n1\\n1 1\\n1\\n\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"12\\n3 1 4 1 5 9 2 6 5 3 5 8\") == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\\n1 1\"\nassert solution(\"1\\n1 1\") == \"1\"\nassert solution(\"1\\n2 2\") == \"2\"\nassert solution(\"1\\n1 2 2\") == \"2\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"12\\n3 1 4 1 5 9 2 6 5 3 5 8\\n\") == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\\n\"\nassert solution(\"5\\n1 1 1 1 1\\n\") == \"1\\n1 1\\n1\\n1\\n\"\n"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'Output', '\\n'.join(['AssertionError: The given input is invalid'])\n"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"12\\n3 1 4 1 5 9 2 6 5 3 5 8\") == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\\n1 1\"\n"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"12\\n3 1 4 1 5 9 2 6 5 3 5 8\") == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\"\n\nassert solution(\"5\\n1 1 1 1 1\") == \"1\\n1 1 1 1 1\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('12\\n3 1 4 1 5 9 2 6 5 3 5 8') == '12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9'\nassert solution('5\\n1 1 1 1 1') == '1\\n1 1 1'"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Received: {solution(input())}\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Output\"\nassert solution(stdin) == \"Output\"\nassert solution(stdin) == \"Output\"\nassert solution(stdin) == \"Output\"\nassert solution(stdin) == \"Output\""
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\"\n"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 1\n1 3 3\n\"\"\") == \"6\""
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n1 3 3\") == \"6\\n\"\nassert solution(\"3 2\\n1 4 2\") == \"12\\n\"\nassert solution(\"5 3\\n1 3 3\\n3 2 2\") == \"1088\\n\"\nassert solution(\"3 2\\n1 2 3\") == \"12\\n\"\nassert solution(\"5 2\\n1 3 2\\n2 4 1\") == \"1088\\n\""
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\\n\"\nassert solution(\"3 2\\n1 3 3\\n2 3 2\") == \"6\\n\"\nassert solution(\"3 4\\n1 3 3\\n2 3 2\\n3 3 1\") == \"18\\n\"\nassert solution(\"3 10\\n1 3 3\\n2 3 2\\n3 3 1\\n4 3 2\\n5 3 1\\n6 3 2\\n7 3 1\\n8 3 2\\n9 3 1\\n10 3 2\") == \"6728\\n\""
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\"\nassert solution(\"6 3\\n2 4 2\\n1 5 5\\n\") == \"6\"\nassert solution(\"7 3\\n2 4 2\\n2 5 6\\n\") == \"6\"\nassert solution(\"8 3\\n1 5 1\\n2 4 2\\n2 5 6\\n\") == \"6\"\nassert solution(\"9 3\\n1 4 1\\n2 4 2\\n2 5 6\\n\") == \"6\"\n\nfrom itertools import combinations\nimport math"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '6'\n"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\"\nassert solution(\"2 2\\n2 3\\n\") == \"4\"\nassert solution(\"4 4\\n2 2\\n2 2\\n\") == \"12\"\nassert solution(\"1 1\\n1 1\\n\") == \"1\"\nassert solution(\"1 1\\n2 2\\n2 2\\n\") == \"1\""
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\\n\""
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\\n\"\nassert solution(\"5 3\\n1 2 3\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9\\n8 9 10\\n9 10 11\\n10 11 12\\n11 12 13\\n12 13 14\\n13 14 15\\n14 15 16\\n15 16 17\\n16 17 18\\n17 18 19\\n18 19 20\\n19 20 21\\n20 21 22\\n21 22 23\\n22 23 24\\n23 24 25\\n24 25 26\\n25 26 27\\n26 27 28\\n27 28 29\\n28 29 30\\n29 30 31\\n30 31 32\\n31 32 33\\n32 33 34\\n33 34 35\\n34 35 36\\n35 36 37\\n36 37 38\\n37 38 39\\n38 39 40\\n39 40 41\\n40 41 42\\n41 42 43\\n42 43 44\\n43 44 45\\n44 45 46\\n45 46 47\\n46 47 48\\n47 48 49\\n48 49 50\\n49 50 51\\n50 51 52\\n51 52 53\\n52 53 54\\n53 54 55\\n54 55 56\\n55 56 57\\n56 57 58\\n57 58 59\\n58 59 60\\n59 60 61\\n60 61 62\\n61 62 63\\n62 63 64\\n63 64 65\\n64 65 66\\n65 66 67\\n66 67 68\\n67 68 69\\n68 69 70\\n69 70 71\\n70 71 72\\n71 72 73\\n72 73 74\\n73 74 75\\n74 75 76\\n75 76 77\\n76 77 78\\n77 78 79\\n78 79 80\\n79 80 81\\n80 81 82\\n81 82 83\\n82 83 84\\n83 84 85\\n84 85 86\\n85 86 87\\n86 87 88\\n87 88 89\\n88 89 90\\n89 90 91\\n90 91 92\\n91 92 93\\n92 93 94\\n93 94 95\\n94 95 96\\n95 96 97\\n96 97 98\\n97 98 99\\n98 99 100\\n99 100 101\\n100 101 102\\n101 102 103\\n"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '6\\n'\n"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"87654\\n30\") == \"10\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"87654\\n30\") == \"10\"\nassert solution(\"1000000\\n1000000\") == \"-1\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"87654 30\") == \"10\"\nassert solution(\"100 87654\") == \"138\"\nassert solution
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '10'\nassert solution(input()) == '-1'\n"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"87654 30\") == \"10\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"87654\") == \"10\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"87654\\n30\\n\") == \"10\"\nassert solution(\"12345\\n67890\\n\") == \"-1\"\nassert solution(\"0\\n0\\n\") == \"-1\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"87654\\n30\") == \"10\"\nassert solution(\"90000\\n100000\") == \"-1\"\nassert solution(\"10\\n30\") == \"10\"\nassert solution(\"10\\n20\") == \"-1\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"87654\\n30\") == \"10\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"87654\\n30\") == \"10\"\nprint(solution(\"100\\n87654\"))"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('aba') == 'Second'\nprint('First')\n"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aba\") == \"First\"\nassert solution(\"abb\") == \"First\"\nassert solution(\"aba\") == \"Second\"\nassert solution(\"aab\") == \"Second\"\nassert solution(\"acab\") == \"Second\"\n"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aba\") == \"Second\"\nassert solution(\"abc\") == \"First\"\nassert solution(\"abcd\") == \"First\"\nassert solution(\"aaaaa\") == \"Second\"\nassert solution(\"bbbbb\") == \"Second\"\nassert solution(\"aaaaa\") == \"Second\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aba\") == \"Second\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aba\") == \"Second\", \"Expected output: 'Second'\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aba\") == \"Second\", \"Takahashi, who goes first, cannot perform the operation, since removal of the b, which is the only character not at either ends of s, would result in s becoming aa, with two as neighboring.\"\nprint(\"First\")"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('aba') == 'Second', \"The output should be 'Second'\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aba\") == \"Second\\n\"\nassert solution(\"abc\") == \"First\\n\"\nassert solution(\"def\") == \"First\\n\"\nassert solution(\"gfd\") == \"Second\\n\"\nassert solution(\"hijkl\") == \"Second\\n\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aba\") == \"Second\"\nassert solution(\"aaa\") == \"First\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('aba') == 'Second'"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10\\n12345') == '6', \"The output should be 6\"\nassert solution('16\\n439873893693495623498263984765') == '40', \"The output should be 40\""
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\n12345\\n\") == \"6\\n\"\nassert solution(\"16\\n439873893693495623498263984765\\n\") == \"40\\n\""
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'Output', \"The output is incorrect. Please check the solution.\""
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 6\nassert solution(1000) == 40"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(10) == 6\nassert solution(16) == 40"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10) == 6, \"Invalid output: expected 6, but got {0}\"\nassert solution(16) == 40, \"Invalid output: expected 40, but got {0}\""
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\n12345\") == \"6\"\nassert solution(\"16\\n439873893693495623498263984765\") == \"40\"\n\nfrom typing import List"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 'Output', \"Test case 1 failed\"\nassert solution(input()) == 'Output', \"Test case 2 failed\"\nassert solution(input()) == 'Output', \"Test case 3 failed\"\nassert solution(input()) == 'Output', \"Test case 4 failed\"\nassert solution(input()) == 'Output', \"Test case 5 failed\""
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(10) == 6, \"Incorrect result\"\nassert solution(16) == 40, \"Incorrect result\""
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == \"Output\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed for solution: {solution(stdin)}, Expected Output: {expected_output}\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 1) == 332748119, \"Expected: 332748119, Actual: \" + solution(3, 1)\nassert solution(2, 1) == 332748119, \"Expected: 332748119, Actual: \" + solution(2, 1)\nassert solution(1, 1) == 332748119, \"Expected: 332748119, Actual: \" + solution(1, 1)"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"332748119\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"The output is '{output}', but it should be '{solution(input())}'.\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 1\\n0 1\\n2 1\\n') == '332748119\\n332748119\\n'\nassert solution('1 2\\n1\\n1\\n') == '3\\n'\nassert solution('3 3\\n0 1 1\\n4 3 5\\n') == '160955686\\n185138929\\n974061117\\n'\n"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 1\\n0 1\\n2 1') == '332748119'\nassert solution('1 2\\n1') == '3'\nassert solution('3 3\\n0 1 1\\n4 3 5') == '160955686'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == '1'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == '1'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == '1'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == '1'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == '1'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == '1'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == '1'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == '1'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == '1'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == '1'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == '1'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == '1'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == '1'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == '1'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == '1'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == '1'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == '1'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == '1'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == '1'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == '1'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == '1'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == '1'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == '1'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == '1'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == '1'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == '1'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == '1'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == '1'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == '1'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == '1'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == '1'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == '1'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == '1'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == '1'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == '1'\nassert solution"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\" \"OVGURWZLWVLUXTH\" \"OZ\") == \"ORZ\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\", \"Output should be ORZ\"\nassert solution(\"AA\") == 0, \"Output should be 0\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\\nOVGURWZLWVLUXTH\\nOZ\") == \"ORZ\"\n\nassert solution(\"AA\\nA\\nA\") == \"0\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\", \"Your solution is incorrect.\"\nassert solution(\"AA\") == 0, \"Your solution is incorrect.\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\" \"OVGURWZLWVLUXTH\" \"OZ\") == \"ORZ\", \"Test case 1 failed\"\nassert solution(\"AA\" \"A\" \"A\") == 0, \"Test case 2 failed\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\"\nassert solution(\"AA\") == \"0\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"AJKEQSLOBSROFGZ\\nOVGURWZLWVLUXTH\\nOZ\") == \"ORZ\"\nassert solution(stdin=\"AA\\nA\\nA\") == \"0\"\n\nfrom typing import List"
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\", \"Expected: ORZ, but got: \" + solution(\"AJKEQSLOBSROFGZ\")\nassert solution(\"OVGURWZLWVLUXTH\") == \"ORZ\", \"Expected: ORZ, but got: \" + solution(\"OVGURWZLWVLUXTH\")\nassert solution(\"AA\") == \"0\", \"Expected: 0, but got: \" + solution(\"AA\")\n"
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"AJKEQSLOBSROFGZ\\nOVGURWZLWVLUXTH\\nOZ\\n\") == \"ORZ\"\nassert solution(stdin=\"AA\\nA\\nA\\n\") == \"0\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\\nOVGURWZLWVLUXTH\\nOZ\") == \"ORZ\", \"Test case 1 failed\"\n\nassert solution(\"AA\\nA\\nA\") == \"0\", \"Test case 2 failed\"\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_data) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input_data)}\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\\n\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\\n\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test case failed\"\n"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 2 1') == '99'\nassert solution('100 100 100') == '0'\nassert solution('1 1 1') == '0'"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 2 1\\n1 100 1\\n1 100 100') == 99\nassert solution('100 100 100\\n1 1 1\\n1 1 1') == 0\n"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\"\n"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '99'\n\nprint('Example 1')\nassert solution('1 2 1\\n1 100 1\\n1 100 100') == '99'\n\nprint('Example 2')\nassert solution('100 100 100\\n1 1 1\\n1 1 1') == '0'"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\\n\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\\n\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 99, \"Expected output: 99, got: {}\".format(solution())"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"1000000000000 1048576\") == \"118606527258\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"1000000000000 1048576\") == \"118606527258\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"1000000000000 1048576\") == \"118606527258\"\n"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"1\\n\", \"Test 1\"\nassert solution(\"3 2\") == \"1\\n\", \"Test 2\"\nassert solution(\"3 3\") == \"0\\n\", \"Test 3\"\nassert solution(\"1000000000000 1048576\") == \"118606527258\\n\", \"Test 4\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"1000000000000 1048576\") == \"118606527258\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 1') == 1\nassert solution('3 2') == 1\nassert solution('3 3') == 0\nassert solution('1000000000000 1048576') == 118606527258"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1, 1) == 1\nassert solution(3, 2) == 1\nassert solution(3, 3) == 0\nassert solution(1000000000000, 1048576) == 118606527258\n"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 2) == 1\nassert solution(3, 3) == 0\nassert solution(1000000000000, 1048576) == 118606527258\n"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1, 1) == 1, \"Maxim loves to fill in a matrix in a special manner.\"\nassert solution(3, 2) == 1, \"Maxim loves to fill in a matrix in a special manner.\"\nassert solution(3, 3) == 0, \"Maxim loves to fill in a matrix in a special manner.\"\nassert solution(1000000000000, 1048576) == 118606527258, \"Maxim loves to fill in a matrix in a special manner.\"\n\nprint(1)"
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"-++-\") == \"Yes\"\nassert solution(\"+-\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"++\") == \"Yes\"\nassert solution(\"-+-\") == \"No\"\nassert solution(\"+++\") == \"Yes\"\nassert solution(\"-\") == \"No\"\n\nsolution = '''\n"
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"+-\") == \"Yes\"\nassert solution(\"+-\") == \"No\"\nassert solution(\"+-\") == \"Yes\"\nassert solution(\"+-\") == \"No\"\nassert solution(\"+-\") == \"Yes\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"-++-\") == \"Yes\"\nassert solution(\"+-\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"-++-\") == \"Yes\"\nassert solution(\"+-\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\"\n\nfrom typing import List"
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"-++-\") == \"Yes\"\nassert solution(\"+\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('++') == 'Yes', \"Expected output: 'Yes', but got: '{}'\".format(solution('++'))\nassert solution('-') == 'No', \"Expected output: 'No', but got: '{}'\".format(solution('-'))\nassert solution('+-') == 'Yes', \"Expected output: 'Yes', but got: '{}'\".format(solution('+-'))\nassert solution('++') == 'Yes', \"Expected output: 'Yes', but got: '{}'\".format(solution('++'))\nassert solution('-') == 'No', \"Expected output: 'No', but got: '{}'\".format(solution('-'))"
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"-++-\") == \"Yes\", \"Input\"\nassert solution(\"+-\") == \"No\", \"Input\"\nassert solution(\"++\") == \"Yes\", \"Input\"\nassert solution(\"-\") == \"No\", \"Input\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"-++-\") == \"Yes\"\nassert solution(\"+-\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"+-\") == \"Yes\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\"\nassert solution(\"++--\") == \"Yes\""
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 0, 0) == 12.566370614359172464\nassert solution(4, 1, -1) == 21.991148575128551812\n\nfrom functools import reduce"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"12.566370614359172464\""
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"12.566370614359172464\"\nassert solution(stdin) == \"21.991148575128551812\"\n"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 0 0\\n0 1\\n-1 2\\n1 2\") == \"12.566370614359172464\"\nassert solution(\"4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\") == \"21.991148575128551812\""
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == output, f\"Test case {i + 1} failed. Input: {input}, Output: {output}\" for i, (input, output) in enumerate(zip(inputs, outputs))"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"The answer is {output}, but the function returned {solution(input())} instead.\""
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '12.566370614359172464'"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '12.566370614359172464', '12.566370614359172464'"
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"48\") == \"9 42\\n\", \"Test 1 failed\"\nassert solution(\"6\") == \"6 6\\n\", \"Test 2 failed\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"9 42\\n6 6\", \"Your code is incorrect.\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"9 42\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == \"9 42\\n6 6\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"9 42\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"48\") == \"9 42\"\nassert solution(\"6\") == \"6 6\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(48) == \"9 42\", \"Test case 1 incorrect\"\nassert solution(6) == \"6 6\", \"Test case 2 incorrect\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"48\") == \"9 42\"\nassert solution(\"6\") == \"6 6\"\nassert solution(\"10\") == \"Invalid input\"\nassert solution(\"7\") == \"Invalid input\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"48\\n\") == \"9 42\\n\", \"Test 1 failed\"\nassert solution(\"6\\n\") == \"6 6\\n\", \"Test 2 failed\"\nassert solution(\"\") == \"0 0\\n\", \"Test 3 failed\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"48\") == \"9 42\"\nassert solution(\"6\") == \"6 6\"\n"
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n(\") == \"Yes\\n\"\nassert solution(\"3\\n(()\") == \"No\\n\"\nassert solution(\"2\\n()\") == \"Yes\\n\"\nassert solution(\"10\\n())))(((((\") == \"No\\n\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n(()\\n\") == \"Yes\", \"Petya can move first bracket to the end, thus turning the sequence into '()', which is correct bracket sequence.\")\nassert solution(\"3\\n(()\\n\") == \"No\", \"There is no way to move at most one bracket so that the sequence becomes correct.\")\nassert solution(\"2\\n()\") == \"Yes\", \"The sequence is already correct and there's no need to move brackets.\")\nassert solution(\"10\\n((((\\n\") == \"No\", \"The sequence is already correct and there's no need to move brackets.\")"
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"Yes\"\nassert solution(\"3\") == \"No\"\nassert solution(\"2\") == \"Yes\"\nassert solution(\"10\") == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"2\n)(\"\"\") == \"Yes\"\nassert solution(\"\"\"3\n(()\"\"\") == \"No\"\nassert solution(\"\"\"2\n()\"\"\") == \"Yes\"\nassert solution(\"\"\"10\n)))(((\"\"\") == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n( \\n\") == \"Yes\"\nassert solution(\"3\\n(()\\n\") == \"No\"\nassert solution(\"2\\n()\\n\") == \"Yes\"\nassert solution(\"10\\n)))(((((\\n\") == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n())\") == \"Yes\"\nassert solution(\"3\\n(()\") == \"No\"\nassert solution(\"2\\n()\") == \"Yes\"\nassert solution(\"10\\n())()\\n())())()\\n())())()\\n())())\\n())())\\n())())\") == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n())\") == \"Yes\"\nassert solution(\"3\\n(()\") == \"No\"\nassert solution(\"2\\n()\") == \"Yes\"\nassert solution(\"10\\n())(((\") == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"Yes\"\nassert solution(\"3\") == \"No\"\nassert solution(\"2\") == \"Yes\"\nassert solution(\"10\") == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Test failed for input\\nInput: {}, Output: {}\\n\".format(input(), output())"
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Yes\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 50\\n50\") == \"1\"\nassert solution(\"3 100\\n50 50 100\") == \"5\"\nassert solution(\"2 50\\n50 50\") == \"-1\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '1\\n1\\n'"
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 50\\n50\\n') == '1\\n1\\n'\nassert solution('3 100\\n50 50 100\\n') == '5\\n2\\n'\nassert solution('2 50\\n50 50\\n') == '-1\\n0\\n'"
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 50\\n50\") == \"1\\n1\"\nassert solution(\"3 100\\n50 50 100\") == \"5\\n2\"\nassert solution(\"2 50\\n50 50\") == \"-1\\n0\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 50\") == \"1\\n1\\n\"\nassert solution(\"3 100\") == \"5\\n2\\n\"\nassert solution(\"2 50\") == \"-1\\n0\\n\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 50\\n50\") == \"1\\n1\\n\"\nassert solution(\"3 100\\n50 50 100\") == \"5\\n2\\n\"\nassert solution(\"2 50\\n50 50\") == \"-1\\n0\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 50\\n50\") == \"1\\n1\"\nassert solution(\"3 100\\n50 50 100\") == \"5\\n2\"\nassert solution(\"2 50\\n50 50\") == \"-1\\n0\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Solution({input()})!= expected_output({expected_output})\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 50\\n50') == '1\\n1\\n'\nassert solution('3 100\\n50 50 100\\n50') == '5\\n2\\n'\nassert solution('2 50\\n50 50\\n50') == '-1\\n0\\n'\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 50\\n50\\n') == '1\\n1\\n'\nassert solution('3 100\\n50 50 100\\n') == '5\\n2\\n'\nassert solution('2 50\\n50 50\\n') == '-1\\n0\\n'"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n2 6 8') == '2\\n'\nassert solution('5\\n2 3 4 9 12') == '4\\n'\nassert solution('4\\n5 7 2 9') == '1\\n'"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 6 8\\n\") == \"2\"\nassert solution(\"5\\n2 3 4 9 12\\n\") == \"4\"\nassert solution(\"4\\n5 7 2 9\\n\") == \"1\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 6 8\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 9 12\") == \"4\\n\"\nassert solution(\"4\\n5 7 2 9\") == \"1\\n\"\nassert solution(\"5\\n2 6 7 10 11\") == \"2\\n\"\nassert solution(\"6\\n2 3 4 5 6\") == \"4\\n\"\nassert solution(\"3\\n3 2 1\") == \"3\\n\"\nassert solution(\"2\\n1 4 5\") == \"4\\n\"\nassert solution(\"4\\n1 2 3\") == \"4\\n\"\nassert solution(\"6\\n2 3 4 5 6\") == \"4\\n\"\nassert solution(\"5\\n2 3 4 5 6\") == \"4\\n\"\nassert solution(\"5\\n2 3 4 5 6\") == \"4\\n\"\nassert solution(\"5\\n2 3 4 5 6\") == \"4\\n\"\nassert solution(\"5\\n2 3 4 5 6\") == \"4\\n\"\nassert solution(\"5\\n2 3 4 5 6\") == \"4\\n\"\nassert solution(\"5\\n2 3 4 5 6\") == \"4\\n\"\nassert solution(\"5\\n2 3 4 5 6\") == \"4\\n\"\nassert solution(\"5\\n2 3 4 5 6\") == \"4\\n\"\nassert solution(\"5\\n2 3 4 5 6\") == \"4\\n\"\nassert solution(\"5\\n2 3 4 5 6\") == \"4\\n\"\nassert solution(\"5\\n2 3 4 5 6\") == \"4\\n\"\nassert solution(\"5\\n2 3 4 5 6\") == \"4\\n\"\nassert solution(\"5\\n2 3 4 5 6\") == \"4\\n\"\nassert solution(\"5\\n2 3 4 5 6\") == \"4\\n\"\nassert solution(\"5\\n2 3 4 5 6\") == \"4\\n\"\nassert solution(\"5\\n2 3 4 5 6\") == \"4\\n\"\nassert solution(\"5\\n2 3 4 5 6\") == \"4\\n\"\nassert solution(\"5\\n2 3 4 5 6\") == \"4\\n\"\nassert solution(\"5\\n2 3 4 5 6\") == \"4\\n\"\nassert solution(\"5\\n2 3 4 5 6\") == \"4\\n\"\nassert solution(\"5\\n2 3 4 5 6\") == \"4\\n\"\nassert solution(\"5\\n2 3 4 5 6\") == \"4\\n\"\nassert solution(\"5\\n2 3 4 5 6\") == \"4\\n\"\nassert solution(\"5\\n2 3 4 5 6\") == \"4\\n\"\nassert solution(\"5\\n2 3 4 5 6\") == \"4\\n\"\nassert solution(\"5\\n2 3 4 5 6\") == \"4\\n\"\nassert solution(\"5\\n2 3 4 5 6\") == \"4\\n\"\nassert solution(\"5\\n2 3 4 5 6\") == \"4\\n\"\nassert solution(\"5\\n2 3 4 5 6\") == \"4\\n\"\nassert solution(\"5\\n2 3 4 5 6\") == \"4\\n\"\nassert solution(\"5\\n2 3 4 5 6\") == \"4\\n\"\nassert solution(\"5\\n2 3 4 5 6\") == \"4\\n\"\nassert solution(\"5\\n2 3 4 5 6\") == \"4\\n\"\nassert solution(\"5\\n2 3 4 5 6\") == \"4\\n\"\nassert solution(\"5\\n2 3 4 5 6\") == \"4\\n\"\nassert solution(\"5\\n2 3 4 5 6\") == \"4\\n\"\nassert solution(\"5\\n"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 6 8\") == \"2\"\nassert solution(\"5\\n2 3 4 9 12\") == \"4\"\nassert solution(\"4\\n5 7 2 9\") == \"1\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n2 6 8\\n') == '2\\n'\nassert solution('5\\n2 3 4 9 12\\n') == '4\\n'\nassert solution('4\\n5 7 2 9\\n') == '1\\n'\n"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 6 8\\n\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 9 12\\n\") == \"4\\n\"\nassert solution(\"4\\n5 7 2 9\\n\") == \"1\\n\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 6 8\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 9 12\") == \"4\\n\"\nassert solution(\"4\\n5 7 2 9\") == \"1\\n\"\n"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == '2'\nassert solution(open('input2.txt', 'r')) == '4'\nassert solution(open('input3.txt', 'r')) == '1'"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 2\nassert solution(5) == 4\nassert solution(4) == 1"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 6 8\\n\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 9 12\\n\") == \"4\\n\"\nassert solution(\"4\\n5 7 2 9\\n\") == \"1\\n\""
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution) == solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution("
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 6\nassert solution(2) == -1\nassert solution(5) == 5"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n    3\n    17 18\n    15 24\n    12 15\n    \"\"\").strip() == \"6\"\n\nassert solution(\"\"\"\n    2\n    10 16\n    7 17\n    \"\"\").strip() == \"-1\"\n\nassert solution(\"\"\"\n    5\n    90 108\n    45 105\n    75 40\n    165 175\n    33 30\n    \"\"\").strip() == \"5\""
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n17 18\\n15 24\\n12 15\") == 6\nassert solution(\"2\\n10 16\\n7 17\") == -1\nassert solution(\"5\\n90 108\\n45 105\\n75 40\\n165 175\\n33 30\") == 5\n"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"6\\n\"\nassert solution() == \"6\\n\"\nassert solution() == \"-1\\n\"\nassert solution() == \"-1\\n\"\nassert solution() == \"5\\n\"\n"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Solution is incorrect. Expected: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == solution  # test case for auto-grader\n"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n17 18\\n15 24\\n12 15\") == \"6\"\nassert solution(\"2\\n10 16\\n7 17\") == \"-1\"\nassert solution(\"5\\n90 108\\n45 105\\n75 40\\n165 175\\n33 30\") == \"5\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"1\\n1 0\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"bab\") == \"1 0\\n1 3\"\nassert solution(\"bb\") == \"1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\"\n\nfrom typing import List"
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"bab\") == \"1 0\\n1 3\"\nassert solution(\"bb\") == \"1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\"\nassert solution(\"aaa\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('bab') == '1 0\\n1 3'\nassert solution('bb') == '1 0\\n1 3'\nassert solution('bbbb') == '0'"
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"1\\n0\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('bab') == '1 0\\n1 3'\nassert solution('bb') == '1 0\\n1 3'\nassert solution('bbbb') == '0'\n"
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 4\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 1\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 5\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 6\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 7\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 8\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 9\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 10\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 11\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 12\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 13\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 14\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 15\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 16\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 17\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 18\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 19\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 20\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 21\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 22\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 23\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 24\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 25\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 26\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 27\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 28\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 29\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 30\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 31\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 32\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 33\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 34\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 35\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 36\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 37\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 38\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 39\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 40\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 41\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 42\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1"
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"6\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\") == \"POSSIBLE\"\nassert solution(\"10\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\") == \"POSSIBLE\"\nassert solution(\"15\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\") == \"POSSIBLE\"\nassert solution(\"16\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n16 16\") == \"POSSIBLE\"\nassert solution(\"20\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n16 16\\n17 17\\n18 18\\n19 19\\n20 20\") == \"POSSIBLE\"\nassert solution(\"25\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n16 16\\n17 17\\n18 18\\n19 19\\n20 20\\n21 21\\n22 22\\n23 23\\n24 24\\n25 25\") == \"POSSIBLE\"\nassert solution(\"26\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n16 16\\n17 17\\n18 18\\n19 19\\n20 20\\n21 21\\n22 22\\n23 23\\n24 24\\n25 25\\n26 26\") == \"POSSIBLE\"\nassert solution(\"30\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n16 16\\n17 17\\n18 18\\n19 19\\n20 20\\n21 21\\n22 22\\n23 23\\n24 24\\n25 25\\n26 26\\n27 27\\n28 28\\n29 29\\n30 30\") == \"POSSIBLE\"\nassert solution(\"35\\"
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\\n\"\nassert solution(\"5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\") == \"POSSIBLE\\n\"\nassert solution(\"1\\n1 1\") == \"IMPOSSIBLE\\n\"\nassert solution(\"2\\n1 1\") == \"IMPOSSIBLE\\n\"\nassert solution(\"3\\n1 1\") == \"IMPOSSIBLE\\n\"\nassert solution(\"4\\n1 1\") == \"IMPOSSIBLE\\n\"\nassert solution(\"5\\n1 1\") == \"IMPOSSIBLE\\n\"\nassert solution(\"6\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input(\"Enter the number of vertices: \")) == \"POSSIBLE\"\nassert solution(input(\"Enter the number of vertices: \")) == \"POSSIBLE\"\nassert solution(input(\"Enter the number of vertices: \")) == \"POSSIBLE\"\nassert solution(input(\"Enter the number of vertices: \")) == \"POSSIBLE\"\nassert solution(input(\"Enter the number of vertices: \")) == \"IMPOSSIBLE\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"2\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"5\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"1\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 2\\n4 3 2\") == \"POSSIBLE\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"2\\n1 2\\n3 3\") == \"POSSIBLE\"\nassert solution(\"4\\n1 1\\n2 3\\n1 2\") == \"POSSIBLE\"\nassert solution(\"5\\n1 2\\n3 4\\n2 4\\n1 3\") == \"POSSIBLE\"\nassert solution(\"6\\n1 1\\n2 3\\n3 4\\n2 4\\n3 5\\n1 2\") == \"POSSIBLE\"\nassert solution(\"7\\n1 1\\n2 3\\n3 4\\n2 4\\n3 5\\n1 2\\n4 5\") == \"POSSIBLE\"\nassert solution(\"8\\n1 1\\n2 3\\n3 4\\n2 4\\n3 5\\n1 2\\n4 5\\n1 3\") == \"POSSIBLE\"\nassert solution(\"9\\n1 1\\n2 3\\n3 4\\n2 4\\n3 5\\n1 2\\n4 5\\n1 3\\n5 6\") == \"POSSIBLE\"\nassert solution(\"10\\n1 1\\n2 3\\n3 4\\n2 4\\n3 5\\n1 2\\n4 5\\n1 3\\n5 6\\n3 5\") == \"POSSIBLE\"\nassert solution(\"11\\n1 1\\n2 3\\n3 4\\n2 4\\n3 5\\n1 2\\n4 5\\n1 3\\n5 6\\n3 5\\n5 7\") == \"POSSIBLE\"\nassert solution(\"12\\n1 1\\n2 3\\n3 4\\n2 4\\n3 5\\n1 2\\n4 5\\n1 3\\n5 6\\n3 5\\n5 7\\n5 8\") == \"POSSIBLE\"\nassert solution(\"13\\n1 1\\n2 3\\n3 4\\n2 4\\n3 5\\n1 2\\n4 5\\n1 3\\n5 6\\n3 5\\n5 7\\n5 8\\n1 4\") == \"POSSIBLE\"\nassert solution(\"14\\n1 1\\n2 3\\n3 4\\n2 4\\n3 5\\n1 2\\n4 5\\n1 3\\n5 6\\n3 5\\n5 7\\n5 8\\n1 4\\n1 5\") == \"POSSIBLE\"\nassert solution(\"15\\n1 1\\n2 3\\n3 4\\n2 4\\n3 5\\n1 2\\n4 5\\n1 3\\n5 6\\n3 5\\n5 7\\n5 8\\n1 4\\n1 5\\n5 9\") == \"POSSIBLE\"\nassert solution(\"16\\n1 1\\n2 3\\n3 4\\n2 4\\n3 5\\n1 2\\n4 5\\n1 3\\n5 6\\n3 5\\n5 7\\n5 8\\n1 4\\n1 5\\n5 9\\n5 10\") == \"POSSIBLE\"\nassert solution(\"17\\n1 1\\n2 3\\n3 4\\n2 4\\n3 5\\n1 2\\n4 5\\n1 3\\n5 6\\n3 5\\n5 7\\n5 8\\n1 4\\n1 5\\n5 9\\n5 10\\n3 6\") == \"POSSIBLE\"\nassert solution(\"18\\n1 1\\n2 3\\n3 4\\n2 4\\n3 5\\n1 2\\n4 5\\n1 3\\n5 6\\n3 5\\n5 7\\n5 8\\n1 4\\n1 5\\n"
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\\n\") == \"POSSIBLE\"\nassert solution(\"2\\n1 2\\n4 5\\n\") == \"IMPOSSIBLE\"\nassert solution(\"5\\n1 2\\n4 3 1 2\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1 1\\n4 3 2') == 'POSSIBLE'\nassert solution('2\\n1 1\\n4 3 2') == 'POSSIBLE'\nassert solution('4\\n1 1\\n4 3 2') == 'POSSIBLE'\nassert solution('3\\n1 1\\n4 2 2') == 'POSSIBLE'\nassert solution('1\\n1 1\\n4 3 2') == 'POSSIBLE'"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 1000000007') == '2\\n'"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1000000007\") == \"2\"\n"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 1000000007') == '2'\nassert solution('3 1000000003') == '4'\nassert solution('1 1000000011') == '2'\nassert solution('1 1000000007') == '2'\nassert solution('2 1000000009') == '1'\nassert solution('3 1000000005') == '2'"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 1000000007') == '2', \"Test case 1 failed\"\nassert solution('10 1000000007') == '2', \"Test case 2 failed\"\nassert solution('5 1000000007') == '2', \"Test case 3 failed\"\nassert solution('50 1000000007') == '2', \"Test case 4 failed\"\nassert solution('3 1000000007') == '4', \"Test case 5 failed\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1000000007\") == \"2\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1000000007\") == \"2\"\n"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1000000007\") == \"2\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\\n\", \"Test case 1 failed: The output should be 2.\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1000000007\") == \"2\", \"Test Case 1\"\nassert solution(\"3 1000000007\") == \"2\", \"Test Case 2\"\nassert solution(\"4 1000000007\") == \"3\", \"Test Case 3\"\nassert solution(\"5 1000000007\") == \"5\", \"Test Case 4\"\nassert solution(\"6 1000000007\") == \"6\", \"Test Case 5\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 7"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Output: 7\\n\"\nassert solution(input()) == \"Output: 999999228\\n\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2 3 3\\n+-+\\n') == '7'\nassert solution('4 1 5 1\\n-') == '999999228'"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 3 3\\n+-+\") == \"7\"\nassert solution(\"4 1 5 1\\n-\") == \"999999228\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Solution: {solution(input())}, Expected Output: {expected_output}\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 999999228  # Correct implementation"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 3 3\\n+-+\") == 7\nassert solution(\"4 1 5 1\\n-\") == 999999228\n"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 3 3\\n+-+\") == \"7\\n\"\nassert solution(\"4 1 5 1\\n-\") == \"999999228\\n\"\n"
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1 2\") == 4\nassert solution(\"1 2 3 1\") == 2\nassert solution(\"10 2 1 7\") == 0"
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test case {case} failed. Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 1 1 2') == '4'\nassert solution('1 2 3 1') == '2'\nassert solution('10 2 1 7') == '0'"
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1 2\") == \"4\\n\"\nassert solution(\"1 2 3 1\") == \"2\\n\"\nassert solution(\"10 2 1 7\") == \"0\\n\""
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n\") == \"6\"\n"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"6\"\n"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"6\", \"Your solution is not correct\"\nprint(solution(input()))"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"6\\n\"\nassert solution() == \"3\\n\"\nassert solution() == \"1000000009\\n\""
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"6\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"6\"\nassert solution(\"1 2 3 4 5\") == \"1\"\nassert solution(\"0 1 1 2 2 2 3 3 3\") == \"1\"\nassert solution(\"1 1 1 1 1 1 1 1 1\") == \"0\"\nassert solution(\"1 2 2 3 3 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4\") == \"1\"\nassert solution(\"1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 2) == '6'\nprint(\"All tests passed!\")"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 2\\n') == '6'"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"6\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"6\\n\", \"Test case 1 failed\"\nassert solution(\"5 3\") == \"4\\n\", \"Test case 2 failed\"\nassert solution(\"1 0\") == \"1\\n\", \"Test case 3 failed\"\nassert solution(\"5 5\") == \"16\\n\", \"Test case 4 failed\"\nassert solution(\"0 0\") == \"1\\n\", \"Test case 5 failed\""
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '2\\n'"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\""
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 2\") == \"2\\n\"\nassert solution(\"2\\n1 1\\n2 2\") == \"2\\n\"\nassert solution(\"2\\n2 1\\n1 1\") == \"2\\n\"\nassert solution(\"2\\n1 1\\n2 1\\n2 2\") == \"2\\n\"\nassert solution(\"2\\n1 1\\n2 2\\n1 1\") == \"2\\n\"\nassert solution(\"2\\n1 1\\n2 1\\n1 1\\n2 2\") == \"2\\n\"\nassert solution(\"2\\n1 1\\n2 1\\n1 2\\n1 1\") == \"2\\n\"\nassert solution(\"2\\n1 1\\n2 1\\n2 2\\n1 1\\n1 1\") == \"2\\n\"\nassert solution(\"2\\n1 1\\n2 2\\n2 1\\n2 1\\n2 1\") == \"2\\n\"\nassert solution(\"2\\n1 1\\n2 1\\n2 2\\n2 2\\n2 2\\n1 1\\n2 1\\n1 2\\n1 1\") == \"2\\n\"\nassert solution(\"2\\n1 1\\n2 1\\n1 2\\n2 2\\n1 1\\n1 1\\n1 2\\n1 1\\n2 1\\n2 2\\n2 2\\n1 1\\n1 2\\n2 2\\n2 2\\n2 2\\n2 2\\n1 1\\n2 2\\n2 2\\n2 2\\n2 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2\\n1 3\\n\") == \"3\\n\"\nassert solution(\"4\\n1 2\\n1 3\\n1 4\\n\") == \"4\\n\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\\n\") == \"5\\n\"\nassert solution(\"6\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n\") == \"6\\n\"\nassert solution(\"7\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n\") == \"7\\n\"\nassert solution(\"8\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n\") == \"8\\n\"\nassert solution(\"9\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n\") == \"9\\n\"\nassert solution(\"10\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n\") == \"9\\n\"\nassert solution(\"11\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n\") == \"10\\n\"\nassert solution(\"12\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n\") == \"10\\n\"\nassert solution(\"13\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n\") == \"11\\n\"\nassert solution(\"14\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n\") == \"11\\n\"\nassert solution(\"15\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n\") == \"12\\n\"\nassert solution(\"16\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n\") == \"12\\n\"\nassert solution(\"17\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n1 17\\n\") == \"13\\n\"\nassert solution(\"18\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '2\\n'"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '2\\n', \"Expected output is '2\\n', but got: {}\".format(solution())"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n1 2\\n') == '2\\n\\n'\n"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 2, \"Test failed\""
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"2\\n1 2\\n\") == \"2\\n\""
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == \"2\\n\", solution(sample_input)"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n0 2 0\\n3 0 1\\n\") == \"2\\n\"\nassert solution(\"3\\n0 2 0\\n1 0 3\\n\") == \"4\\n\"\nassert solution(\"11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\\n\") == \"18\\n\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n0 2 0\\n3 0 1\") == \"2\"\nassert solution(\"3\\n0 2 0\\n1 0 3\") == \"4\"\nassert solution(\"11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\") == \"18\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"2\\n\", \"The correct output for example 1 is not obtained.\"\n\nassert solution(3) == \"2\\n\", \"The correct output for example 2 is not obtained.\"\n\nassert solution(11) == \"18\\n\", \"The correct output for example 3 is not obtained.\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(11) == \"18\" # 3 operations\nassert solution(3) == \"2\" # 2 operations\nassert solution(0) == \"0\" # 0 operations\nassert solution(3, 0, 1) == \"2\" # 2 operations\nassert solution(3, 1, 0) == \"2\" # 2 operations\nassert solution(3, 2, 0) == \"4\" # 4 operations\n"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n0 2 0\\n3 0 1\") == \"2\"\nassert solution(\"3\\n0 2 0\\n1 0 3\") == \"4\"\nassert solution(\"11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\") == \"18\"\nassert solution(\"3\\n0 2 0\\n2\") == \"1\"\nassert solution(\"0 2 0\") == \"2\"\nassert solution(\"1 0 3\") == \"4\"\nassert solution(\"1 0 3\") == \"4\"\nassert solution(\"0 0 0 0 0 0 0 0 0 0 0\") == \"1\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n0 2 0\\n3 0 1\\n') == '2\\n'\nassert solution('11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\\n') == '18\\n'\nassert solution('3\\n0 2 0\\n3 0 1\\n') == '2\\n'\nassert solution('3\\n0 2 0\\n1 0 3\\n') == '4\\n'\nassert solution('11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\\n') == '18\\n'\nassert solution('11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\\n') == '18\\n'"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n0 2 0\\n3 0 1\\n\") == \"2\"\nassert solution(\"3\\n0 2 0\\n1 0 3\\n\") == \"4\"\nassert solution(\"11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\\n\") == \"18\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n0 2 0\\n3 0 1\\n\") == \"2\\n\"\nassert solution(\"3\\n0 2 0\\n1 0 3\\n\") == \"4\\n\"\nassert solution(\"11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\\n\") == \"18\\n\"\n"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n0 2 0\\n3 0 1') == '2'\nassert solution('3\\n0 2 0\\n1 0 3') == '4'\nassert solution('11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10') == '18'\nassert solution('Example 1') == '2'\nassert solution('Example 2') == '18'"
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"code*s\") == \"YES\"\nassert solution(\"codeforces\") == \"YES\"\nassert solution(\"vk*cup\") == \"YES\"\nassert solution(\"v\") == \"NO\"\nassert solution(\"k\") == \"NO\"\nassert solution(\"gfgf*gfgf\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"code*s\") == \"YES\"\nassert solution(\"codeforces\") == \"YES\"\nassert solution(\"vk*cup\") == \"YES\"\nassert solution(\"v\") == \"NO\"\nassert solution(\"k\") == \"NO\"\nassert solution(\"gfgf*gfgf\") == \"NO\"\nassert solution(\"gfgfgf\") == \"NO\"\n\nprint(\"YES\" if \"YES\" in solution(\"code*s\") else \"NO\")\nprint(\"YES\" if \"YES\" in solution(\"codeforces\") else \"NO\")\nprint(\"YES\" if \"YES\" in solution(\"vk*cup\") else \"NO\")\nprint(\"NO\" if \"YES\" in solution(\"v\") else \"YES\")\nprint(\"NO\" if \"YES\" in solution(\"k\") else \"YES\")\nprint(\"NO\" if \"YES\" in solution(\"gfgf*gfgf\") else \"YES\")\nprint(\"NO\" if \"YES\" in solution(\"gfgfgf\") else \"YES\")"
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"code*s\") == \"YES\"\nassert solution(\"codeforces\") == \"YES\"\nassert solution(\"vk*cup\") == \"YES\"\nassert solution(\"v\") == \"NO\"\nassert solution(\"k\") == \"NO\"\nassert solution(\"gfgf*gfgf\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"code*s\") == \"YES\"\nassert solution(\"codeforces\") == \"YES\"\nassert solution(\"vk*cup\") == \"YES\"\nassert solution(\"v\") == \"NO\"\nassert solution(\"k\") == \"NO\"\nassert solution(\"gfgf*gfgf\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"code*s\") == \"YES\"\nassert solution(\"codeforces\") == \"YES\"\nassert solution(\"vk*cup\") == \"YES\"\nassert solution(\"v\") == \"NO\"\nassert solution(\"k\") == \"NO\"\nassert solution(\"gfgf*gfgf\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"code*s\") == \"YES\"\nassert solution(\"codeforces\") == \"YES\"\nassert solution(\"vk*cup\") == \"YES\"\nassert solution(\"v\") == \"NO\"\nassert solution(\"k\") == \"NO\"\nassert solution(\"gfgf*gfgf\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 10\\ncode*s\\ncodeforces\") == \"YES\"\nassert solution(\"6 5\\nvk*cup\\nvkcup\") == \"YES\"\nassert solution(\"1 1\\nv\\nk\") == \"NO\"\nassert solution(\"9 6\\ngfgf*gfgf\\ngfgfgf\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6 10\\ncode*s\\ncodeforces\\n') == 'YES'\nassert solution('6 5\\nvk*cup\\nvkcup\\n') == 'YES'\nassert solution('1 1\\nv\\nk\\n') == 'NO'\nassert solution('9 6\\ngfgf*gfgf\\ngfgfgf\\n') == 'NO'"
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"code*s\") == \"YES\"\nassert solution(\"codeforces\") == \"YES\"\nassert solution(\"vk*cup\") == \"YES\"\nassert solution(\"v\") == \"NO\"\nassert solution(\"k\") == \"NO\"\nassert solution(\"gfgf*gfgf\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6 10\\ncode*s\\ncodeforces\\n') == 'YES'\nassert solution('6 5\\nvk*cup\\nvkcup\\n') == 'YES'\nassert solution('1 1\\nv\\nk\\n') == 'NO'\nassert solution('9 6\\ngfgf*gfgf\\n gfgfgf\\n') == 'NO'"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"0.260000000000\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(b'4\\n0.1 0.2 0.3 0.8\\n') == '0.800000000000\\n'\nassert solution(b'2\\n0.1 0.2\\n') == '0.260000000000\\n'\n"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0.260000000000\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('Input\\n4\\n0.1 0.2 0.3 0.8\\n') == '0.8\\n'\nassert solution('Input\\n2\\n0.1 0.2\\n') == '0.26\\n'"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n0.1 0.2 0.3 0.8\") == 0.8\nassert solution(\"2\\n0.1 0.2\") == 0.26\n"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 0.8"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n0.1 0.2 0.3 0.8\\n\") == \"0.800000000000\"\nassert solution(\"2\\n0.1 0.2\\n\") == \"0.260000000000\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n0.1 0.2 0.3 0.8\") == \"0.800000000000\"\nassert solution(\"2\\n0.1 0.2\") == \"0.260000000000\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    4\n    0.1 0.2 0.3 0.8\n    \"\"\"\n) == \"0.800000000000\"\n\nassert solution(\n    \"\"\"\n    2\n    0.1 0.2\n    \"\"\"\n) == \"0.260000000000\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0.1 0.2 0.3 0.8\\n\") == \"0.800000000000\\n\"\nassert solution(\"2\\n0.1 0.2\\n\") == \"0.260000000000\\n\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '5.0000000000'\nprint('Correct')"
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"5.0000000000\", \"Test failed: solution(input()) == '5.0000000000', expected output: 5.0000000000\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 10 1 2 5\") == 5.0000000000\nassert solution(\"3 6 1 2 1\") == 4.7142857143"
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    5 10 1 2 5\n    \"\"\"\n) == \"5.0000000000\\n\"\n\nassert solution(\n    \"\"\"\n    3 6 1 2 1\n    \"\"\"\n) == \"4.7142857143\\n\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 5.0000000000\nassert solution() == 4.7142857143"
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5.0000000000\"\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 10 1 2 5\\n') == '5.0000000000\\n'\nassert solution('3 6 1 2 1\\n') == '4.7142857143\\n'\nassert solution('2 10 1 3 2\\n') == '4.1666666667\\n'"
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 10 1 2 5\") == 5.0\nassert solution(\"3 6 1 2 1\") == 4.7142857143\n"
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 10 1 2 5\") == 5.0\nassert solution(\"3 6 1 2 1\") == 4.71"
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5.0000000000\"\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\\n3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.250\"\nassert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\\n3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n0.000 0.500 0.750 1.000 2.000 3.000') == '0.250\\n'\nassert solution('3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896') == '0.279\\n'\n"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\\n\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\\n\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\\n3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.250\\n\", \"The first test case should have returned '0.250', not '{}'\".format(solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\\n3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\"))\n\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\\n3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.279\\n\", \"The second test case should have returned '0.279', not '{}'\".format(solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\\n3\\n0.000 0.500 0.750 1.000 2.000 3.000\"))"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\\n3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.250\\n\", \"Test case 1 failed.\"\n\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\\n3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.279\\n\", \"Test case 2 failed.\"\n\nassert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\\n3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\\n\", \"Test case 3 failed.\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\\n\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\\n\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 5\\n5 2\\n\") == \"18\"\nassert solution(\"0 1\\n0 0\\n\") == \"8\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 5\\n5 2\") == \"18\"\nassert solution(\"0 1\\n0 0\") == \"8\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 5\\n5 2\") == \"18\\n\", \"Test 1\"\nassert solution(\"0 1\\n0 0\") == \"8\\n\", \"Test 2\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 5\\n5 2\\n\") == \"18\"\nassert solution(\"0 1\\n0 0\\n\") == \"8\"\n"
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 5\\n5 2') == '18', \"Test 1 failed.\"\nassert solution('0 1\\n0 0') == '8', \"Test 2 failed.\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5\\n5 2\\n\") == \"18\\n\"\nassert solution(\"0 1\\n0 0\\n\") == \"8\\n\"\n"
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 5\\n5 2\") == \"18\"\nassert solution(\"0 1\\n0 0\") == \"8\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 5\\n5 2\\n') == '18\\n', 'Test 1 failed'\nassert solution('0 1\\n0 0\\n') == '8\\n', 'Test 2 failed'"
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5\\n5 2\\n\") == \"18\"\nassert solution(\"0 1\\n0 0\\n\") == \"8\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5\\n5 2\\n\") == \"18\", \"The minimal length of the quadcopter path should be 18.\""
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244\n"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"10\"\nassert solution(\"10\") == \"244\""
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == '4'\nassert solution(2) == '10'\nassert solution(10) == '244'"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == '4'\nassert solution(2) == '10'\nassert solution(10) == '244'\nassert solution(11) == '244'\nassert solution(51) == '405'\nassert solution(55) == '505'\nassert solution(60) == '606'\nassert solution(100) == '244'"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2) == \"100\"\nassert solution(10) == \"244\""
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == \"4\"\nassert solution(2) == \"10\"\nassert solution(10) == \"244\""
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == \"4\"\nassert solution(2) == \"10\"\nassert solution(10) == \"244\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\") == \"0\\n\"\nassert solution(\"4\\n1 1 2 2\") == \"2\\n\"\nassert solution(\"5\\n1 4 1 4 9\") == \"2\\n\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('Input\\n3\\n1 2 3\\nOutput\\n0\\nInput\\n4\\n1 1 2 2\\nOutput\\n2\\nInput\\n5\\n1 4 1 4 9\\nOutput\\n2\\n') == '0\\n2\\n2\\n'"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Input\\n3\\n1 2 3\\n\\nOutput\\n0\\n\\nInput\\n4\\n1 1 2 2\\n\\nOutput\\n2\\n\\nInput\\n5\\n1 4 1 4 9\\n\\nOutput\\n2\") == \"Output\\n2\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"The expected output is: {output}, but got: {solution(input())}\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\") == \"0\"\nassert solution(\"4 1 1 2 2\") == \"2\"\nassert solution(\"5 1 4 1 4 9\") == \"2\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\") == \"0\\n\"\nassert solution(\"4\\n1 1 2 2\") == \"2\\n\"\nassert solution(\"5\\n1 4 1 4 9\") == \"2\\n\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\\n4 1 2 2\\n5 1 4 1 4 9\\n\") == \"0\\n2\\n2\\n\"\n\nassert solution(\"1 1 2 2\\n4 1 1 2 2\\n5 1 4 1 4 9\\n\") == \"2\\n\"\n\nassert solution(\"1 4 1 4 9\\n4 1 1 2 2\\n5 1 4 1 4 9\\n\") == \"2\\n\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\"\n"
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('aaabccc') == 'YES'\nassert solution('bbacc') == 'NO'\nassert solution('aabc') == 'YES'"
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aaabccc\") == \"YES\", \"The first example is incorrect.\"\nassert solution(\"bbacc\") == \"NO\", \"The second example is incorrect.\"\nassert solution(\"aabc\") == \"YES\", \"The third example is incorrect.\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('aaabccc') == 'YES'\nassert solution('bbacc') == 'NO'\nassert solution('aabc') == 'YES'"
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('aaabccc') == 'YES'\nassert solution('bbacc') == 'NO'\nassert solution('aabc') == 'YES'"
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1\\n2\\n5\\n3\\n\") == \"2\"\nassert solution(\"4\\n1\\n3\\n2\\n\") == \"2\"\n\nsolution(\"4\\n1\\n3\\n2\\n\")"
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n4 1 2 5 3\") == \"2\"\nassert solution(\"4\\n4 1 3 2\") == \"2\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n4 1 2 5 3\") == \"2\"\nassert solution(\"4\\n4 1 3 2\") == \"2\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n4 1 2 5 3\") == \"2\"\nassert solution(\"4\\n4 1 3 2\") == \"2\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('Input\\n5\\n4 1 2 5 3\\n') == 'Output\\n2\\n'\nassert solution('Input\\n4\\n4 1 3 2\\n') == 'Output\\n2\\n'\n"
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\", \"Expected output is 2, but got: {}\".format(solution(input()))"
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\", \"The output should be 2, not {}\".format(solution(input()))"
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n4 1 2 5 3\\n4 1 3 2\\n\") == \"2\"\nassert solution(\"4\\n4 1 3 2\\n\") == \"2\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 1\") == \"3.5\"\nassert solution(\"6 3\") == \"4.96\"\nassert solution(\"2 2\") == \"1.75\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution( \"\"\"\n6 1\n\"\"\") == \"3.500000000000\"\n\nassert solution( \"\"\"\n6 3\n\"\"\") == \"4.958333333333\"\n\nassert solution( \"\"\"\n2 2\n\"\"\") == \"1.750000000000\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test case failed!\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == output, f\"Test failed for input: {stdin}\\nExpected output: {output}\\nGot: {solution(stdin)}\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 1\") == \"3.500000000000\\n\"\nassert solution(\"6 3\") == \"4.958333333333\\n\"\nassert solution(\"2 2\") == \"1.750000000000\\n\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 1\") == \"3.5\"\nassert solution(\"6 3\") == \"4.96\"\nassert solution(\"2 2\") == \"1.75\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(6, 1) == 3.5\nassert solution(6, 3) == 4.96\nassert solution(2, 2) == 1.75"
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 1\") == \"3.500000000000\"\nassert solution(\"6 3\") == \"4.958333333333\"\nassert solution(\"2 2\") == \"1.750000000000\"\n"
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 1\") == \"3.5\"\nassert solution(\"6 3\") == \"4.96\"\nassert solution(\"2 2\") == \"1.75\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6 1') == '3.5', \"Expected output: '3.5'\"\nassert solution('6 3') == '4.96', \"Expected output: '4.96'\"\nassert solution('2 2') == '1.76', \"Expected output: '1.76'\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''4\n-><-\n5\n>>>>>\n3\n<--\n2\n<>''') == '3\\n5\\n3\\n0'\nassert solution('''4\n<-->\n5\n>>>>\n3\n<<--\n2\n<>''') == '5\\n3\\n0'\nassert solution('''4\n---\n5\n>>>>\n3\n<<<<\n2\n<>''') == '3\\n5\\n0'\nassert solution('''4\n<<->\n5\n>>>>>\n3\n<<--\n2\n<>''') == '5\\n3\\n0'\nassert solution('''4\n->---\n5\n>>>>\n3\n<<<<\n2\n<>''') == '3\\n5\\n0'\nassert solution('''4\n->--\n5\n>>>>\n3\n<<<<\n2\n<>''') == '5\\n3\\n0'\nassert solution('''4\n<---\n5\n>>>>\n3\n<<<<\n2\n<>''') == '5\\n3\\n0'\nassert solution('''4\n--->\n5\n>>>>\n3\n<<<<\n2\n<>''') == '3\\n5\\n0'\nassert solution('''4\n<---\n-\n>>>>\n3\n<<<<\n2\n<>''') == '5\\n3\\n0'\nassert solution('''4\n<----\n-\n>>>>\n3\n<<<<\n2\n<>''') == '5\\n3\\n0'\nassert solution('''4\n------\n-\n>>>>\n3\n<<<<\n2\n<>''') == '3\\n5\\n0'\nassert solution('''4\n------\n-\n>>>>\n3\n>>-\n2\n<>''') == '3\\n5\\n0'\nassert solution('''4\n----->\n-\n>>>>\n3\n>>-\n2\n<>''') == '5\\n3\\n0'\nassert solution('''4\n------\n-\n>>>>\n3\n>>-\n2\n<>''') == '3\\n5\\n0'\nassert solution('''4\n------\n-\n>>>>\n3\n>>>\n2\n<>''') == '5\\n3\\n0'\nassert solution('''4\n------\n-\n>>>>\n3\n>>>\n2\n<>''') == '3\\n5\\n0'\nassert solution('''4\n------\n-\n>>>>\n3\n>>\n2\n<>''') == '5\\n3\\n0'\nassert solution('''4\n------\n-\n>>>>\n3\n>>\n2\n<>''') == '3\\n5\\n0'\nassert solution('''4\n------\n-\n>>>>\n3\n>>\n2\n<>''') == '5\\n3\\n0'\nassert solution('''4\n------\n-\n>>>>\n3\n>>\n2\n<>''') == '3\\n5\\n0'\nassert solution('''4\n------\n-\n>>>>\n3\n>>\n2\n<>''') == '5\\n3\\n0'\nassert solution('''4\n------\n-\n>>>>\n3\n>>\n2\n<>''') == '3\\n5\\n0'\nassert solution('''4\n------\n-\n>>>>\n3\n>>\n2\n<>''') == '5\\n3\\n0'\nassert solution('''4\n------\n-\n>>>>\n3\n>>\n2\n<>''') == '3\\n5\\n0'\nassert solution('''4\n------\n-\n>>>>\n3\n>>\n2\n<>''') == '5\\n3\\n0'\nassert solution('''4\n------\n-\n>>>>\n3\n>>\n2\n<>''') == '3\\n5\\n0'\nassert solution('''4\n------\n-\n>>>>\n3\n>>\n2\n<>''') == '5\\n3\\n0'\nassert solution('''4\n------\n-\n>>>>\n3\n>>\n2\n<>''') == '3\\n5\\n0'\nassert solution('''4\n------\n-\n>>>>\n3\n>>\n2\n<>''') == '5\\n3\\n0'\nassert solution('''4\n------\n-\n>>>>\n3\n>>\n2\n<>''') == '3\\n5\\n0'\nassert solution('''4\n------\n-\n>>>>\n3\n>>\n2\n<>''') == '5\\n3\\n0'\nassert solution('''4\n------\n-\n>>>>\n3\n>>\n2\n<>''') == '3\\n5\\n0'\nassert solution('''4\n------\n-\n>>>>\n3\n"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3\\n5\\n3\\n0\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\nassert solution(\"4\\n4\\n-><-\\n2\\n<>\") == \"3\"\n\nsolution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\nsolution(\"4\\n4\\n-><-\\n2\\n<>\") == \"3\"\n\nsolution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\nsolution(\"4\\n4\\n-><-\\n2\\n<>\") == \"3\"\n\nsolution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\nsolution(\"4\\n4\\n-><-\\n2\\n<>\") == \"3\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\\n\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''4\n4\n-><-\n5\n>>>>>\n3\n<--\n2\n<>''') == '3\\n5\\n3\\n0\\n'"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n4\\n-><-\\n5\\n>>>>>') == '3\\n5\\n3\\n0'\nassert solution('4\\n4\\n<-<-\\n5\\n>>>>>') == '0'\nassert solution('4\\n4\\n->>>>\\n5\\n>>>>>') == '5\\n3\\n0'\nassert solution('4\\n4\\n-><>\\n5\\n>>>>>') == '3\\n0'\nassert solution('4\\n4\\n-><-\\n5\\n>>>>>') == '0'\nassert solution('4\\n4\\n-><-\\n5\\n>>>>>') == '5\\n3\\n0'\n\nassert solution('4\\n4\\n<-<-\\n5\\n>>>>>') == '0'\nassert solution('4\\n4\\n->>>>\\n5\\n>>>>>') == '5\\n3\\n0'\nassert solution('4\\n4\\n-><>\\n5\\n>>>>>') == '3\\n0'\nassert solution('4\\n4\\n-><-\\n5\\n>>>>>') == '0'\nassert solution('4\\n4\\n-><-\\n5\\n>>>>>') == '5\\n3\\n0'"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\n\nassert solution(\"4\\n4\\n<-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\n\nassert solution(\"4\\n4\\n->\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\n\nassert solution(\"4\\n4\\n<-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\n\nassert solution(\"4\\n4\\n<-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\n\nassert solution(\"4\\n4\\n<-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\\n\"\nassert solution(\"4\\n3\\n<--\\n2\\n<>\") == \"3\\n5\\n3\\n0\\n\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\nassert solution(\"4\\n4\\n<-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\nassert solution(\"4\\n4\\n<-\\n5\\n<<\") == \"5\\n3\\n3\\n0\"\nassert solution(\"4\\n4\\n<-\\n5\\n>>\\n3\\n<--\\n2\\n<>\") == \"3\\n5\\n3\\n0\"\n\nprint(\"All test cases pass!\")"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n4 5\\n4 5\\n4 10\\n\") == \"16\\n9 9 10 \\n\"\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\\n\") == \"202\\n101 101 101 101 \\n\"\nassert solution(\"3\\n1 1\\n100 100\\n1 1\\n\") == \"-1\\n\""
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: got {solution(input())}, expected {expected_output}\""
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n4 5\\n4 5\\n4 10\\n\") == \"16\\n9 9 10\\n\"\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\\n\") == \"202\\n101 101 101 101\\n\"\nassert solution(\"3\\n1 1\\n100 100\\n1 1\\n\") == \"-1\\n\""
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n4 5\\n4 5\\n4 10\\n\") == \"16\\n9 9 10\"\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\\n\") == \"202\\n101 101 101 101\"\nassert solution(\"3\\n1 1\\n100 100\\n1 1\\n\") == \"-1\""
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\n4 5\\n4 10\") == \"16\"\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\") == \"202\"\nassert solution(\"3\\n1 1\\n100 100\\n1 1\") == \"-1\"\nassert solution(\"1 1 1 1\\n2 2 2 2\\n3 3 3 3\\n4 4 4 4\") == \"2\"\nassert solution(\"2 2 2 2\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n2 2 2 2\") == \"2\"\nassert solution(\"1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\") == \"3\"\nassert solution(\"1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n4 5\\n4 5\\n4 10\\n\") == \"16\\n9 9 10 \\n202\\n101 101 101 101 \"\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\\n\") == \"202\\n101 101 101 101 \"\nassert solution(\"3\\n1 1\\n100 100\\n1 1\\n\") == \"-1\""
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n4 5\\n4 5\\n4 10\\n\") == \"16\\n9 9 10\\n\"\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\\n\") == \"202\\n101 101 101 101\\n\"\nassert solution(\"3\\n1 1\\n100 100\\n1 1\\n\") == \"-1\\n\"\n"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n4 5\\n4 5\\n4 10') == '16\\n9 9 10\\n'\nassert solution('4\\n1 100\\n100 1\\n1 100\\n100 1') == '202\\n101 101 101 101\\n'\nassert solution('3\\n1 1\\n100 100\\n1 1\\n') == '-1\\n'\nassert solution('4\\n1 100\\n100 1\\n1 100\\n100 1') == '202\\n101 101 101 101\\n'\n"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n4 5\\n4 5\\n4 10\") == \"16\\n9 9 10\"\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\") == \"202\\n101 101 101 101\"\nassert solution(\"3\\n1 1\\n100 100\\n1 1\") == \"-1\"\n"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n3\n4 5\n4 5\n4 10\n''') == '''\n16\n9 9 10 \n'''\nassert solution('''\n4\n1 100\n100 1\n1 100\n100 1\n''') == '''\n202\n101 101 101 101 \n'''\nassert solution('''\n3\n1 1\n100 100\n1 1\n''') == '''\n-1\n'''"
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 1 1 1 1\") == \"1 2 2\\n\", \"Welcome to Innopolis city. Throughout the whole year, Innopolis citizens suffer from everlasting city construction.\"\nassert solution(\"3\\n1 2 3\") == \"0 2\\n\", \"From the window in your room, you see the sequence of n hills, where i-th of them has height a_{i}. The Innopolis administration wants to build some houses on the hills. However, for the sake of city appearance, a house can be only built on the hill, which is strictly higher than neighbouring hills (if they are present). For example, if the sequence of heights is 5, 4, 6, 2, then houses could be built on hills with heights 5 and 6 only.\"\nassert solution(\"5\\n1 2 3 2 2\") == \"0 1 3\\n\", \"The Innopolis administration has an excavator, that can decrease the height of an arbitrary hill by one in one hour. The excavator can only work on one hill at a time. It is allowed to decrease hills up to zero height, or even to negative values. Increasing height of any hill is impossible. The city administration wants to build k houses, so there must be at least k hills that satisfy the condition above. What is the minimum time required to adjust the hills to achieve the administration's plan? However, the exact value of k is not yet determined, so could you please calculate answers for all k in range $1 \\leq k \\leq \\lceil \\frac{n}{2} \\rceil$? Here $\\lceil \\frac{n}{2} \\rceil$ denotes n divided by two, rounded up.\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test failed\"\nprint(f\"Input:\\n{stdin}\\n\")\nprint(f\"Output:\\n{output()}\\n\")"
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1 1 1 1 1\\n\") == \"1 2 2 \\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"0 2 \\n\"\nassert solution(\"5\\n1 2 3 2 2\\n\") == \"0 1 3 \\n\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 1 1 1 1\\n\\n3\\n1 2 3\\n\\n5\\n1 2 3 2 2\\n\") == \"1 2 2\\n0 2 \\n0 1 3 \\n\"\nassert solution(\"3\\n1 2 3\\n\\n5\\n1 2 3 2 2\\n\") == \"0 2 \\n\"\nassert solution(\"5\\n1 2 3 2 2\\n\\n5\\n1 2 3 2 2\\n\") == \"0 1 3 \\n\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 1 1 1 1\") == \"1 2 2\", \"Solution is not correct.\"\nassert solution(\"3\\n1 2 3\") == \"0 2 \", \"Solution is not correct.\"\nassert solution(\"5\\n1 2 3 2 2\") == \"0 1 3 \", \"Solution is not correct.\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == \"1 2 2\"\nassert solution(3) == \"0 2\"\nassert solution(5) == \"0 1 3\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 1 1 1 1\") == \"1 2 2\"\nassert solution(\"3\\n1 2 3\") == \"0 2 \"\nassert solution(\"5\\n1 2 3 2 2\") == \"0 1 3\"\n"
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '1 2 2', \"Please complete the function to test the correctness of solution.\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 1 1 1 1\\n\") == \"1 2 2\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"0 2\\n\"\nassert solution(\"5\\n1 2 3 2 2\\n\") == \"0 1 3\\n\"\n\nfrom functools import lru_cache"
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"101101\\n110\\n\") == \"110110\\n\"\nassert solution(\"10010110\\n100011\\n\") == \"01100011\\n\"\nassert solution(\"10\\n11100\\n\") == \"01\\n\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"101101\\n110\\n\") == \"110110\\n\"\nassert solution(\"10010110\\n100011\\n\") == \"01100011\\n\"\nassert solution(\"10\\n11100\\n\") == \"01\\n\"\n"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"101101\\n110\\n\") == \"110110\"\nassert solution(\"10010110\\n100011\\n\") == \"01100011\"\nassert solution(\"10\\n11100\\n\") == \"01\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"101101\") == \"110110\"\nassert solution(\"10010110\") == \"01100011\"\nassert solution(\"10\") == \"01\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"101101\\n110\\n\") == \"110110\\n\"\nassert solution(\"10010110\\n100011\\n\") == \"01100011\\n\"\nassert solution(\"10\\n11100\\n\") == \"01\\n\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '01100011'\nassert solution('101101') == '110110'\nassert solution('10010110') == '01100011'\nassert solution('10') == '01'\n"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"101101\") == \"110110\"\nassert solution(\"10010110\") == \"01100011\"\nassert solution(\"10\") == \"01\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('101101') == '110110'\nassert solution('10010110') == '01100011'\nassert solution('10') == '01'"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('101101\\n110\\n') == '110110\\n'\nassert solution('10010110\\n100011\\n') == '01100011\\n'\nassert solution('10\\n11100\\n') == '01\\n'"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"101101\", \"110\") == \"110110\"\nassert solution(\"10010110\", \"100011\") == \"01100011\"\nassert solution(\"10\", \"11100\") == \"01\""
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n\\n3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1\\n1 0 0 1\\n') == -1\nassert solution('3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1\\n1 0 0 1\\n') == 0"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\") == 1\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 0 0 1\") == -1\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1\") == 0"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n\") == 1\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 1 0 1\\n\") == -1\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 1 0 1\\n\") == 0"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n\") == \"1\"\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n\") == \"-1\"\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1\\n\") == \"0\""
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\\n\", \"Expected output: 1\\n\"\nassert solution(stdin) == \"-1\\n\", \"Expected output: -1\\n\"\nassert solution(stdin) == \"0\\n\", \"Expected output: 0\\n\""
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n\") == \"1\"\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 0 0 1\\n\") == \"-1\"\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1\\n1 0 0 1\\n\") == \"0\""
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"5 5 2\n1 1 1 1 1\n1 1 1 1 1\n1 1 0 1 1\n1 1 1 1 1\n1 1 1 1 1\"\"\") == 1\n\nassert solution(\"\"\"3 4 1\n1 0 0 1\n0 1 1 0\n1 0 0 1\n\"\"\") == -1\n\nassert solution(\"\"\"3 4 1\n1 0 0 1\n0 1 1 0\n1 0 0 1\n\"\"\") == 0"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\") == 1\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 0 0 1\") == -1\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1\\n1 0 0 1\") == 0"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n\") == \"1\"\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n\") == \"-1\"\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n\") == \"0\""
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == '1'\nassert solution(open('input2.txt', 'r')) == '-1'\nassert solution(open('input3.txt', 'r')) == '0'"
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2 2 3 1 2\"\nassert solution() == \"9999 10000 9998\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\") == \"2 2 3 1 2  \""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\\n\") == \"2 2 3 1 2  \\n\"\nassert solution(\"3\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\\n\") == \"9999 10000 9998\\n\"\n"
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\") == \"2 2 3 1 2 0\"\nassert solution(\"0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\") == \"9999 10000 9998\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '2 2 3 1 2 2 2'\n"
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"The output is {output()}, but you provided {solution(input())}\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2 2 3 1 2 1 2\", \"Expected output: 2 2 3 1 2 1 2, but got: \" + solution()"
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\\n\") == \"2 2 3 1 2 10000 10000 10000\\n\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\") == \"2 2 3 1 2 2 2 2 2 2\\n\", \"Your code is not correct.\""
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Input\\n6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\\n\\nInput\\n5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\\n\\nInput\\n6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n\\nInput\\n3\\n00 5000\\n00 5000\\n00 5000\\n\\nOutput\\n22\\n\\nInput\\n5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\\n\\nInput\\n6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n\\nInput\\n3\\n00 5000\\n00 5000\\n00 5000\\n\\nOutput\\n103\\n\\nInput\\n6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n\\nInput\\n3\\n00 5000\\n00 5000\\n00 5000\\n\\nOutput\\n105\\n\\nInput\\n3\\n00 5000\\n00 5000\\n00 5000\\n\\nOutput\\n0\\n') == 'Output\\n22\\n\\nInput\\n5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\\n\\nInput\\n6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n\\nInput\\n3\\n00 5000\\n00 5000\\n00 5000\\n\\nOutput\\n103\\n\\nInput\\n6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n\\nInput\\n3\\n00 5000\\n00 5000\\n00 5000\\n\\nOutput\\n105\\n\\nInput\\n3\\n00 5000\\n00 5000\\n00 5000\\n\\nOutput\\n0\\n'"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\") == \"22\"\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\") == \"103\"\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\") == \"105\"\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\") == \"0\""
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\") == 22\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\") == 103\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\") == 105\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\") == 0\n\nfrom typing import List\n"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"22\", \"Expected output: 22, but got: \" + solution(stdin)"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\\n\") == 22\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\\n\") == 103\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n\") == 105\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\\n\") == 0"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9') == 22\nassert solution('5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1') == 103\nassert solution('6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28') == 105\nassert solution('3\\n00 5000\\n00 5000\\n00 5000') == 0"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9') == '22'\nassert solution('5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1') == '103'\nassert solution('6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28') == '105'\nassert solution('3\\n00 5000\\n00 5000\\n00 5000') == '0'"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\") == \"22\"\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\") == \"103\"\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\") == \"105\"\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\") == \"0\""
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}\\nActual output: {solution(input())}\""
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Solution is incorrect: {solution(input())}!= {expected}\"\nfor _ in range(10):\n    print(solution(input()))"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n2 3 2 3\\n\"\nassert solution(\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n1 3 1 3\\n\"\nassert solution(\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n3 3 2 3\\n\"\nassert solution(\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\\n\") == \"NO\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Solution does not match expected output. Received: {solution(input())}, Expected: {expected_output}\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n2 3 2 3\\n\"\nassert solution(\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n1 3 1 3\\n\"\nassert solution(\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n3 3 2 3\\n\"\nassert solution(\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\\n\") == \"NO\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n2 3 2 3\\n\"\nassert solution(\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n1 3 1 3\\n\"\nassert solution(\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n3 3 2 3\\n\"\nassert solution(\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\\n\") == \"NO\\n\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\\n') == 'YES\\n2 3 2 3\\n'\nassert solution('3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\\n') == 'YES\\n1 3 1 3\\n'\nassert solution('3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\\n') == 'YES\\n3 3 2 3\\n'\nassert solution('3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\\n') == 'NO\\n'"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\\n') == 'YES\\n2 3 2 3\\n'\nassert solution('3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\\n') == 'YES\\n1 3 1 3\\n'\nassert solution('3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\\n') == 'YES\\n3 3 2 3\\n'\nassert solution('3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\\n') == 'NO\\n'"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Test case {i+1} failed: expected '{expected}', got '{solution(input())}'\"\nfor i in range(1, 6):\n    input() # ignore the test case input\n"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n2 3 2 3\\n\"\nassert solution(\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n1 3 1 3\\n\"\nassert solution(\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n3 3 2 3\\n\"\nassert solution(\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\") == \"NO\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\\n') == 'YES\\n2 3 2 3\\nYES\\n1 3 1 3\\nYES\\n3 3 2 3\\nNO'"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\\n\\n3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\\n\\n3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\\n\\n3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\\n\\n\") == \"YES\\n2 3 2 3\\nYES\\n1 3 1 3\\nYES\\n3 3 2 3\\nNO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"NO\\n\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\\n\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\\n\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\\n\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\\n\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Input\\n4 1\\n2 3 4 1\\n1 2 3 4\") == \"YES\"\nassert solution(\"Input\\n4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"Input\\n4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"Input\\n4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"Input\\n4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\"\nassert solution(\"Input\\n4 1\\n4 3 1 2\\n1 2 3 4\") == \"NO\"\n"
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r'''\n4 1\n2 3 4 1\n1 2 3 4\n''') == \"NO\"\n\nassert solution(r'''\n4 1\n4 3 1 2\n3 4 2 1\n''') == \"YES\"\n\nassert solution(r'''\n4 3\n4 3 1 2\n3 4 2 1\n''') == \"YES\"\n\nassert solution(r'''\n4 2\n4 3 1 2\n2 1 4 3\n''') == \"YES\"\n\nassert solution(r'''\n4 1\n4 3 1 2\n2 1 4 3\n''') == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Input\\n4 1\\n2 3 4 1\\n1 2 3 4\\n\") == \"NO\\n\"\nassert solution(\"Input\\n4 1\\n4 3 1 2\\n3 4 2 1\\n\") == \"YES\\n\"\nassert solution(\"Input\\n4 3\\n4 3 1 2\\n3 4 2 1\\n\") == \"YES\\n\"\nassert solution(\"Input\\n4 2\\n4 3 1 2\\n2 1 4 3\\n\") == \"YES\\n\"\nassert solution(\"Input\\n4 1\\n4 3 1 2\\n2 1 4 3\\n\") == \"NO\\n\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\\n\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\\n\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\\n\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\\n\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\\n\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 1\\n2 3 4 1\\n1 2 3 4\\n\\n4 1\\n4 3 1 2\\n3 4 2 1\\n\\n4 3\\n4 3 1 2\\n3 4 2 1\\n\\n4 2\\n4 3 1 2\\n2 1 4 3\\n\\n4 1\\n4 3 1 2\\n2 1 4 3\\n\\n4 1\\n4 3 1 2\\n2 1 4 3\\n\\n4 3\\n4 3 1 2\\n3 4 2 1\\n\\n4 2\\n4 3 1 2\\n2 1 4 3\\n\\n4 1\\n4 3 1 2\\n2 1 4 3\\n\\n4 1\\n4 3 1 2\\n2 1 4 3\\n\\n4 3\\n4 3 1 2\\n3 4 2 1\\n\\n4 2\\n4 3 1 2\\n2 1 4 3\\n\\n4 1\\n4 3 1 2\\n2 1 4 3\\n\\n4 1\\n4 3 1 2\\n2 1 4 3\\n\\n4 3\\n4 3 1 2\\n3 4 2 1\\n\\n4 2\\n4 3 1 2\\n2 1 4 3\\n\\n4 1\\n4 3 1 2\\n2 1 4 3\\n\\n4 1\\n4 3 1 2\\n2 1 4 3\\n\\n4 3\\n4 3 1 2\\n3 4 2 1\\n\\n4 2\\n4 3 1 2\\n2 1 4 3\\n\\n4 1\\n4 3 1 2\\n2 1 4 3\\n\\n4 1\\n4 3 1 2\\n2 1 4 3\\n\\n4 3\\n4 3 1 2\\n3 4 2 1\\n\\n4 2\\n4 3 1 2\\n2 1 4 3\\n\\n4 1\\n4 3 1 2\\n2 1 4 3\\n\\n4 1\\n4 3 1 2\\n2 1 4 3\\n\\n4 3\\n4 3 1 2\\n3 4 2 1\\n\\n4 2\\n4 3 1 2\\n2 1 4 3\\n\\n4 1\\n4 3 1 2\\n2 1 4 3\\n\\n4 1\\n4 3 1 2\\n2 1 4 3\\n\\n4 3\\n4 3 1 2\\n3 4 2 1\\n\\n4 2\\n4 3 1 2\\n2 1 4 3\\n\\n4 1\\n4 3 1 2\\n2 1 4 3\\n\\n4 1\\n4 3 1 2\\n2 1 4 3\\n\\n4 3\\n4 3 1 2\\n3 4 2 1\\n\\n4 2\\n4 3 1 2\\n2 1 4 3\\n\\n4 1\\n4 3 1 2\\n2 1 4 3\\n\\n4 1\\n4 3 1 2\\n2 1 4 3\\n\\n4 3\\n4 3 1 2\\n3 4 2 1\\n\\n4 2\\n4 3 1 2\\n2 1 4 3\\n\\n4 1\\n4 3 1 2\\n2 1 4 3\\n"
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 1\\n2 3 4 1\\n1 2 3 4') == 'YES'\nassert solution('4 1\\n4 3 1 2\\n3 4 2 1') == 'YES'\nassert solution('4 3\\n4 3 1 2\\n3 4 2 1') == 'YES'\nassert solution('4 2\\n4 3 1 2\\n2 1 4 3') == 'YES'\nassert solution('4 1\\n4 3 1 2\\n2 1 4 3') == 'NO'"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n\") == \"1 1\\n3 1\\n1 5\\n4 4\"\nassert solution(\"7\\n\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\"\n"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n\") == \"1 1\\n3 1\\n1 5\\n4 4\\n\"\nassert solution(\"7\\n\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n\") == \"1 1\\n3 1\\n1 5\\n4 4\\n\"\nassert solution(\"7\\n\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"1 1\\n3 1\\n1 5\\n4 4\\n\"\nassert solution(\"7\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n\") == \"1 1\\n3 1\\n1 5\\n4 4\\n\", \"Test 1\"\nassert solution(\"7\\n\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\", \"Test 2\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n\") == '1 1\\n3 1\\n1 5\\n4 4\\n'\nassert solution(\"7\\n\") == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n'"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4') == '1 1\\n3 1\\n1 5\\n4 4\\n'\n\nassert solution('7') == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n'"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case} failed. Expected output:\\n{expected_output}\\nActual output:\\n{solution(input())}\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"1 1\\n3 1\\n1 5\\n4 4\\n\\n\"\nassert solution(\"7\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\\n\""
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n') == '-1'\nassert solution('3\\n1 2 3\\n') == '3'"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 3, \"Test case 1 failed\"\nassert solution(2) == 1, \"Test case 2 failed\"\nassert solution(20) == 1, \"Test case 3 failed\"\nassert solution(10) == -1, \"Test case 4 failed\""
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1\\n\") == \"0\"  # Polycarpus won\nassert solution(\"3\\n1 2 3\\n\") == \"3\"  # Vasily won\nassert solution(\"1\\n1\\n\") == \"-1\"  # No moves can finish the game\n"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\\n\") == -1\nassert solution(\"3\\n1 2 3\\n\") == 3"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1\\n\") == \"-1\"\nassert solution(\"3\\n1 2 3\\n\") == \"3\"\n"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case} failed. Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\\n\") == -1\nassert solution(\"3\\n1 2 3\\n\") == 3\n\nsolution(\"1\\n1\\n\")"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1\\n\") == -1\nassert solution(\"3\\n1 2 3\\n\") == 3"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"-1\", \"Test Case 1 failed.\"\n\nsolution(stdin)"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\\n\") == -1\nassert solution(\"3\\n1 2 3\\n\") == 3\n"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"46 2\\n\") == \"7\\n0 1 0 0 1 1 1\\n\"\nassert solution(\"2018 214\\n\") == \"3\\n92 205 1\\n\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test case {i + 1} failed. Expected output: {output}, but got {solution(input())}.\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, got {solution(stdin)}\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"46 2\") == \"7\\n0 1 0 0 1 1 1\"\nassert solution(\"2018 214\") == \"3\\n92 205 1\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"46 2\") == \"7\\n0 1 0 0 1 1 1\"\nassert solution(\"2018 214\") == \"3\\n92 205 1\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"46 2\") == \"7\\n0 1 0 0 1 1 1\"\nassert solution(\"2018 214\") == \"3\\n92 205 1\"\nassert solution(\"46 5\") == \"-1\"\nassert solution(\"5 10\") == \"1\"\nassert solution(\"3 6\") == \"0\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"46 2\\n2018 214\\n\") == \"3\\n92 205 1\\n\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"46 2\") == \"7\\n0 1 0 0 1 1 1\"\nassert solution(\"2018 214\") == \"3\\n92 205 1\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Test case {i+1} failed: expected output {expected}, got {solution(input())}\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"46 2\") == \"7\\n0 1 0 0 1 1 1\"\nassert solution(\"2018 214\") == \"3\\n92 205 1\""
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"5.000000000000000\""
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == expected, f\"Test case {test_case} failed\""
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 20 20\\n6 2\\n1 3\\n2 6\") == \"5.000000000000000\"\nassert solution(\"4 1 1\\n2 3\\n3 2\\n2 3\\n3 2\") == \"0.400000000000000\""
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 20 20\\n6 2\\n1 3\\n2 6\\n\\n4 1 1\\n2 3\\n3 2\\n2 3\\n3 2\\n') == 5.0\nassert solution('4 1 1\\n2 3\\n3 2\\n2 3\\n3 2\\n') == 0.4\n"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '5.000000000000000'"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 20 20\\n6 2\\n1 3\\n2 6\\n\") == \"5.000000000000000\"\nassert solution(\"4 1 1\\n2 3\\n3 2\\n2 3\\n3 2\\n\") == \"0.400000000000000\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 20 20\\n6 2\\n1 3\\n2 6\") == 5.0\nassert solution(\"4 1 1\\n2 3\\n3 2\\n2 3\\n3 2\") == 0.4\n\nsolution(\"3 20 20\\n6 2\\n1 3\\n2 6\") == 5.0\nsolution(\"4 1 1\\n2 3\\n3 2\\n2 3\\n3 2\") == 0.4"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 20 20\\n6 2\\n1 3\\n2 6\\n\") == \"5.000000000000000\\n\""
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"The output {solution(input())} is incorrect. Expected {expected_output}.\""
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"5.000000000000000\"\n"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"4\", \"Test 1 Failed\"\nassert solution(stdin) == \"5\", \"Test 2 Failed\"\nassert solution(stdin) == \"4\", \"Test 3 Failed\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 3') == 4, \"Input: 2 3\\nOutput: 4\"\nassert solution('8 2') == 5, \"Input: 8 2\\nOutput: 5\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"Conan\"\nassert solution() == \"Agasa\"\nassert solution() == \"Conan\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n4 5 7\") == \"Conan\"\nassert solution(\"2\\n1 1\") == \"Agasa\"\n"
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n4 5 7') == 'Conan'\nassert solution('2\\n1 1') == 'Agasa'"
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n4 5 7\\n\") == \"Conan\"\nassert solution(\"2\\n1 1\\n\") == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Conan\"\nassert solution(input()) == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n4 5 7\") == \"Conan\"\nassert solution(\"2\\n1 1\") == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Conan\"\nassert solution(input()) == \"Agasa\"\n"
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n4 5 7') == 'Conan'\nassert solution('2\\n1 1') == 'Agasa'"
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n3\n4 5 7\n''') == 'Conan'\n\nassert solution('''\n2\n1 1\n''') == 'Agasa'"
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Agasa\""
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"\"\"\n3 3\n##.\n..#\n"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='2 3\\n') == '3 3\\n##.\\n..#\\n#.#\\n'"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\"\n3 3\n##.\n..#\n"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '3 3\\n..#\\n#.#\\n'\n"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"3 3\\n3 3\\n3 3\\n\""
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"3 3\\n##\\n..#\\n#.#\""
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3\\n') == '3 3\\n3..#\\n#.#\\n'\nassert solution('4 6\\n2 2\\n3 3\\n') == '4 6\\n2..#\\n3..#\\n#..#\\n'\nassert solution('5 5\\n1 1\\n1 1\\n2 2\\n2 2\\n') == '5 5\\n1#1\\n1#1\\n2#2\\n2#2\\n'\nassert solution('6 5\\n3 3\\n3 3\\n3 3\\n4 4\\n4 4\\n') == '6 5\\n3#3\\n3#3\\n3#3\\n4#4\\n4#4\\n'"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3 3\\n3 3\\n..#\\n#.#\""
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 3') == '3 3\\n2.##\\n..##\\n#.##\\n'\nassert solution('1 5') == '2 1\\n1.#\\n.#.\\n..#\\n#..\\n'\nassert solution('10 10') == '10 10\\n..##...\\n....#...\\n......#\\n....##...\\n.....#...\\n......#\\n..####...\\n.##.#...\\n.####.#\\n#...##\\n#...##\\n'\nassert solution('5 5') == '1 1\\n.#\\n..#\\n#.\\n'\nassert solution('1 10') == '1 10\\n..##\\n...#\\n#.#\\n'\nassert solution('10 5') == '1 5\\n...#\\n#.#\\n..##\\n'"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n\") == \"3 3\\n3 3\\n#.#\\n#.#\\n#.#\\n\"\nassert solution(\"1 5\\n\") == \"5 5\\n#.#\\n#.#\\n#.#\\n#.#\\n\"\nassert solution(\"3 3\\n\") == \"3 3\\n#.#\\n#.#\\n#.#\\n#.#\\n\"\nassert solution(\"4 5\\n\") == \"4 5\\n#.#\\n#.#\\n#.#\\n#.#\\n\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\") == \"4\\n1 3 4 5 \\n\"\nassert solution(\"3 2\\n+ 1\\n- 2\\n\") == \"1\\n3  \\n\"\nassert solution(\"2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\") == \"0\\n\\n\"\nassert solution(\"5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\") == \"3\\n2 3 5 \\n\"\nassert solution(\"2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\") == \"0\\n\\n\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('Input\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\nOutput\\n4\\n1 3 4 5 \\n\\nInput\\n3 2\\n+ 1\\n- 2\\n\\nOutput\\n1\\n3\\n\\nInput\\n2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\nOutput\\n0\\n\\nInput\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\nOutput\\n3\\n2 3 5 ') == 'Output\\n4\\n1 3 4 5 \\n\\nInput\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\nOutput\\n0\\n\\nInput\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\nOutput\\n3\\n2 3 5 '"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Test failed. Expected {expected}, got {solution(input())}\"\n"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\") == \"4\\n1 3 4 5 \"\nassert solution(\"3 2\\n+ 1\\n- 2\\n\") == \"1\\n3 \"\nassert solution(\"2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\") == \"0\\n\"\nassert solution(\"5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\") == \"3\\n2 3 5 \"\nassert solution(\"2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\") == \"0\\n\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test failed: {solution(input())}!= {output}\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\\n0\\n\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\nOutput\\n4\\n1 3 4 5 \\nInput\\n3 2\\n+ 1\\n- 2\\n\\nOutput\\n1\\n3 \\nInput\\n2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\nOutput\\n0\\n\\nInput\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\nOutput\\n3\\n2 3 5 \\nInput\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\nOutput\\n0\\n\") == \"Output\\n4\\n1 3 4 5 \\nInput\\n3 2\\n+ 1\\n- 2\\n\\nOutput\\n1\\n3 \\nInput\\n2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\nOutput\\n0\\n\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('+ 1') == '1\\n', \"Expected: '1\\n', but got: '{}'\\n\".format(solution('+ 1'))\nassert solution('+ 2') == '2\\n', \"Expected: '2\\n', but got: '{}'\\n\".format(solution('+ 2'))\nassert solution('- 2') == '1\\n', \"Expected: '1\\n', but got: '{}'\\n\".format(solution('- 2'))\nassert solution('- 1') == '3\\n', \"Expected: '3\\n', but got: '{}'\\n\".format(solution('- 1'))"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\") == \"4\\n1 3 4 5 \"\nassert solution(\"3 2\\n+ 1\\n- 2\\n\") == \"1\\n3 \nassert solution(\"2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\") == \"0\\n\"\nassert solution(\"5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\") == \"3\\n2 3 5 \nassert solution(\"2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\") == \"0\\n\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"4\"\nassert solution() == \"1\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\\n3 3\\n1 2 3\\n1 2 3\\n9\\n\\nInput\\n5 1\\n5 4 2 4 5\\n2\\n5\\n\\nOutput\\n4\\n\\nInput\\n5 1\\n5 4 2 4 5\\n2\\n5\\n\\nOutput\\n1\\n\\n\") == \"4\\n\\n1\\n\"\nassert solution(\"Input\\n3 3\\n1 2 3\\n1 2 3\\n9\\n\\nInput\\n5 1\\n5 4 2 4 5\\n2\\n5\\n\\nOutput\\n4\\n\\nInput\\n5 1\\n5 4 2 4 5\\n2\\n5\\n\\nOutput\\n1\\n\\n\") == \"4\\n\\n1\\n\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'Output', 'Output:'+ solution(stdin)"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3\\n1 2 3\\n1 2 3\\n9') == '4'\nassert solution('5 1\\n5 4 2 4 5\\n2\\n5') == '1'\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n1 2 3\\n1 2 3\\n9\\n\\n5 1\\n5 4 2 4 5\\n2\\n5\\n\\n5 1\\n5 4 2 4 5\\n2\\n5\\n\") == \"4\\n\"\nassert solution(\"5 1\\n5 4 2 4 5\\n2\\n5\\n\") == \"1\\n\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n1 2 3\\n1 2 3\\n9\\n\") == \"4\\n\"\nassert solution(\"5 1\\n5 4 2 4 5\\n2\\n5\\n\") == \"1\\n\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\n1 2 3\\n1 2 3\\n9\\n') == '4\\n'\nassert solution('5 1\\n5 4 2 4 5\\n2\\n5\\n') == '1\\n'"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''3 3\n1 2 3\n1 2 3\n9''') == '4'\nassert solution('''5 1\n5 4 2 4 5\n2''') == '1'"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Output\\n1\"\nassert solution(input()) == \"Output\\n4\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\ncba\") == \"NO\"\nassert solution(\"3 4\\ncba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\ncab\") == \"NO\"\nassert solution(\"3 4\\ncab\") == \"cbd\"\nassert solution(\"4 4\\nabdc\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\ncab\\n\") == \"NO\"\nassert solution(\"3 4\\ncab\\n\") == \"cbd\"\nassert solution(\"4 4\\nabcd\\n\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\ncba\") == \"NO\"\nassert solution(\"3 4\\ncba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\ncba\\n') == 'NO'\nassert solution('3 4\\ncba\\n') == 'cbd'\nassert solution('4 4\\nabcd\\n') == 'abda'"
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\ncba\") == \"NO\"\nassert solution(\"3 4\\ncba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\ncab\") == \"NO\"\nassert solution(\"3 4\\ncab\") == \"cbd\"\nassert solution(\"4 4\\nabd\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"For input {input()}, expected output {expected_output}, but got {solution(input())}\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\ncba\") == \"NO\"\nassert solution(\"3 4\\ncba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\ncba\\n\") == \"NO\"\nassert solution(\"3 4\\ncba\\n\") == \"cbd\"\nassert solution(\"4 4\\nabcd\\n\") == \"abda\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\") == \"quailty\"\nassert solution(\"6 1\") == \"once again\"\nassert solution(\"6 5\") == \"tokitsukaze\"\nassert solution(\"4 1\") == \"once again\"\n\nassert solution(\"4 2\") == \"quailty\"\nassert solution(\"6 1\") == \"once again\"\nassert solution(\"6 5\") == \"tokitsukaze\"\nassert solution(\"4 1\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Duel!\") == \"quailty\"\nassert solution(\"Betting on the lovely princess Claris, the duel between Tokitsukaze and Quailty has started.\") == \"quailty\"\nassert solution(\"There are $n$ cards in a row. Each card has two sides, one of which has color. At first, some of these cards are with color sides facing up and others are with color sides facing down. Then they take turns flipping cards, in which Tokitsukaze moves first. In each move, one should choose exactly $k$ consecutive cards and flip them to the same side, which means to make their color sides all face up or all face down. If all the color sides of these $n$ cards face the same direction after one's move, the one who takes this move will win.\") == \"quailty\"\nassert solution(\"Princess Claris wants to know who will win the game if Tokitsukaze and Quailty are so clever that they won't make mistakes.\") == \"tokitsukaze\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n0101\\n\") == \"quailty\"\nassert solution(\"6 1\\n010101\\n\") == \"once again\"\nassert solution(\"6 5\\n010101\\n\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\\n\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"50\"\nprint(\"All test cases passed successfully\")"
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_data) == expected_output, f\"Expected {expected_output}, got {solution(input_data)}\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Output\\n50\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\"\n\nassert solution(\"1 2 10\\n11\") == \"7\"\n\nfrom typing import List"
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\\n\\n1 2 10\\n11\\n15 7\\n\\n\") == \"50\"\nassert solution(\"1 2 10\\n11\\n15 7\\n\") == \"7\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\\n\"\n\nassert solution(\"1 2 10\\n11\") == \"7\\n\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '50'\nassert solution(input()) == '7'\n"
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 4 50\\n20 100\\n60 10 40 80') == '50'\nassert solution('1 2 10\\n11') == '7'"
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"50\", \"The solution should return 50 for the given input.\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\"\nassert solution(\"1 2 10\\n11\") == \"7\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3\\n1 1\\n') == '1 6\\n'\nassert solution('3 2\\n0 0\\n') == '1 3\\n'\nassert solution('1 10\\n5 3\\n') == '5 5\\n'"
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n1 1\\n\") == \"1 6\"\nassert solution(\"3 2\\n0 0\\n\") == \"1 3\"\nassert solution(\"1 10\\n5 3\\n\") == \"5 5\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n1 1\\n\") == \"1 6\\n\"\nassert solution(\"3 2\\n0 0\\n\") == \"1 3\\n\"\nassert solution(\"1 10\\n5 3\\n\") == \"5 5\\n\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n1 1\\n\\n3 2\\n0 0\\n\\n1 10\\n5 3\") == \"1 6\\n5 5\"\nassert solution(\"3 2\\n0 0\\n\\n1 10\\n5 3\") == \"1 3\\n5 5\"\nassert solution(\"1 10\\n5 3\") == \"5 5\\n5 5\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '1 6'"
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3\\n1 1\\n') == '1 6'\nassert solution('3 2\\n0 0\\n') == '1 3'\nassert solution('1 10\\n5 3\\n') == '5 5'"
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3\\n1 1\\n') == '1 6\\n'\nassert solution('3 2\\n0 0\\n') == '1 3\\n'\nassert solution('1 10\\n5 3\\n') == '5 5\\n'\nassert solution('5 3\\n5 5\\n') == '5 5\\n'"
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 3\\n1 1\\n') == '1 6\\n'\nassert solution('3 2\\n0 0\\n') == '1 3\\n'\nassert solution('1 10\\n5 3\\n') == '5 5\\n'\nassert solution('1 1\\n4 3\\n') == '1 4\\n'\nassert solution('2 1\\n6 7\\n') == '1 5\\n'\nassert solution('1 1\\n1 1\\n') == '0 0\\n'\n"
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == output, f\"Expected {output}, got {solution(input)}\"\n"
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''2 3\n1 1''') == '''1 6'''\nassert solution('''3 2\n0 0''') == '''1 3'''\nassert solution('''1 10\n5 3''') == '''5 5'''"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n-2 5 -1\") == \"2\\n2 3\\n3 3\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n-2 5 -1\") == \"2\\n2 3\\n3 3\\n\"\nassert solution(\"5\\n-3 4 2 -5\\n1 1 0 0 1\") == \"2\\n2 1\\n3 3\\n\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n-2 5 -1\") == \"2\\n2 3\\n3 3\\n\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input(\"Enter the number of operations: \")) == \"2\\n2 3\\n3 3\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '2\\n2 3\\n3 3\\n'\n"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n-2 5 -1\") == \"2\\n2 3\\n3 3\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"3\\n3 5\\n5 5\\n\"\nassert solution(\"3\\n1 1 2 2 3\") == \"2\\n2 2\\n2 3\\n3 2\\n\"\nassert solution(\"2\\n1 1 1 1 1\") == \"1\\n1 1\\n1 1\\n1 1\\n\"\nassert solution(\"5\\n1 2 3 4 5 6\") == \"4\\n4 5 6\\n5 6 6\\n6 6 6\\n\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''3\n-2 5 -1''') == '''2\n2 3\n3 3'''\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"-2 5 -1\") == \"2\\n2 3\\n3 3\"\n\nassert solution(\"3\") == \"0\\n3\"\n\nassert solution(\"2\") == \"0\\n1\\n2\"\n\nassert solution(\"5\") == \"0\\n1\\n2\\n3\\n4\"\n\nassert solution(\"1\") == \"0\\n1\"\n\nassert solution(\"6\") == \"0\\n1\\n2\\n3\\n4\\n5\\n6\"\n\nassert solution(\"100\") == \"0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n-2 5 -1') == '2\\n2 3\\n3 3\\n'\nassert solution('1\\n1') == '1\\n1\\n'\nassert solution('2\\n-5 -10') == '0\\n-2\\n2\\n'"
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n0 3\\n1 5\\n\") == \"3\\n\"\nassert solution(\"1\\n0 4\\n\") == \"1\\n\"\nassert solution(\"2\\n1 10\\n2 2\\n\") == \"3\\n\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 3\n"
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n0 3\\n1 5\\n') == '3\\n'\nassert solution('1\\n0 4\\n') == '1\\n'\nassert solution('2\\n1 10\\n2 2\\n') == '3\\n'"
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n0 3\\n1 5\\n\") == \"3\\n\"\nassert solution(\"1\\n0 4\\n\") == \"1\\n\"\nassert solution(\"2\\n1 10\\n2 2\\n\") == \"3\\n\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'Output\\n3\\n'\n"
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n0 3\\n1 5\\n') == '3\\n'\nassert solution('1\\n0 4\\n') == '1\\n'\nassert solution('2\\n1 10\\n2 2\\n') == '3\\n'"
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_data) == output_data, f\"Test {i+1} failed: expected {output_data}, got {solution(input_data)}\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0 3\\n1 5\\n') == '3'\nassert solution('1\\n0 4\\n') == '1'\nassert solution('2\\n1 10\\n2 2\\n') == '3'\nassert solution('3\\n4 8\\n6 4\\n10 6\\n14 4\\n18 2\\n22 8\\n26 12\\n30 10\\n34 8\\n38 6\\n42 4\\n46 2\\n50 1\\n') == '3'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n') == '1'\nassert solution('0\\n0\\n0\\n0\\n') == '1'"
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n0 3\\n1 5\\n') == '3'\nassert solution('1\\n0 4\\n') == '1'\nassert solution('2\\n1 10\\n2 2\\n') == '3'\n"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18 \"\n"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 18\\n5 6 1 10 12 2\\n\") == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\\n\", \"First line of the output must contain a single integer q.\"\n\nassert solution(\"3 50\\n25 25 50\\n\") == \"3\\n0 25 50\\n\", \"First line of the output must contain a single integer q.\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6 18\\n5 6 1 10 12 2\\n') == '16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\\n'"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 50\\n25 25 50') == '3\\n0 25 50'"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6 1 10 12 2\") == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\\n\"\nassert solution(\"3 50\") == \"3\\n0 25 50\\n\"\n"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6 18\\n5 6 1 10 12 2') == '16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18'\nassert solution('3 50\\n25 25 50') == '3\\n0 25 50'"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 18\\n5 6 1 10 12 2\\n\") == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\\n\"\nassert solution(\"3 50\\n25 25 50\\n\") == \"3\\n0 25 50\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6 18\\n5 6 1 10 12 2\\n') == '16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18 \\n'\nassert solution('3 50\\n25 25 50\\n') == '3\\n0 25 50\\n'"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6 18\\n5 6 1 10 12 2\\n') == '16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\\n'\nassert solution('3 50\\n25 25 50\\n') == '3\\n0 25 50\\n'"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 'Output\\n3'"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 3\nassert solution(2) == 2"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(6) == 3\nassert solution(2) == 2"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2) == 2\nassert solution(6) == 3\nassert solution(10) == 5\n\nfrom typing import List\n"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(6) == 3\nassert solution(2) == 2"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"2\") == \"2\""
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(6) == 3\nassert solution(2) == 2"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"2\") == \"2\""
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6') == '3'\nassert solution('2') == '2'"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 10, 20, 30) == 180, \"The correct output should be 180.\"\nassert solution(3, 3, 2, 4) == 21, \"The correct output should be 21.\"\nassert solution(1, 5, 10) == 50, \"The correct output should be 50.\"\n\nfrom typing import List"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n10 1\\n20 2\\n30 3\") == \"180\"\nassert solution(\"3\\n3 1\\n2 2\\n4 3\") == \"21\"\nassert solution(\"1\\n5 10\") == \"50\""
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 180, \"Test case 1 failed\"\nassert solution() == 21, \"Test case 2 failed\"\nassert solution() == 50, \"Test case 3 failed\"\n\nfrom typing import List"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n10 1\\n20 2\\n30 3\") == \"180\"\nassert solution(\"3\\n3 1\\n2 2\\n4 3\") == \"21\"\nassert solution(\"1\\n5 10\") == \"50\"\n"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n10 1\\n20 2\\n30 3\\n\") == \"180\\n\"\nassert solution(\"3\\n3 1\\n2 2\\n4 3\\n\") == \"21\\n\"\nassert solution(\"1\\n5 10\\n\") == \"50\\n\""
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n10 1\\n20 2\\n30 3\\n') == '180'\nassert solution('3\\n3 1\\n2 2\\n4 3\\n') == '21'\nassert solution('1\\n5 10\\n') == '50'"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n10 1\\n20 2\\n30 3\\n') == '180\\n'\nassert solution('3\\n3 1\\n2 2\\n4 3\\n') == '21\\n'\nassert solution('1\\n5 10\\n') == '50\\n'"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"180\\n\""
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n10 1\\n20 2\\n30 3\") == \"180\"\nassert solution(\"3\\n3 1\\n2 2\\n4 3\") == \"21\"\nassert solution(\"1\\n5 10\") == \"50\""
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n10 1\\n20 2\\n30 3') == 180\nassert solution('3\\n3 1\\n2 2\\n4 3') == 21\nassert solution('1\\n5 10') == 50\nassert solution('') == 50"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == output(), \"The function should return the expected output.\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('Input\\n3\\n0 0 10\\n') == 'Output\\n2\\n'\n\nassert solution('Input\\n5\\n0 1 2 3 4\\n') == 'Output\\n1\\n'\n\nassert solution('Input\\n4\\n0 0 0 0\\n') == 'Output\\n4\\n'\n\nassert solution('Input\\n9\\n0 1 0 2 0 1 1 2 10\\n') == 'Output\\n3\\n'"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0 10\\n\") == \"2\\n\"\nassert solution(\"5\\n0 1 2 3 4\\n\") == \"1\\n\"\nassert solution(\"4\\n0 0 0 0\\n\") == \"4\\n\"\nassert solution(\"9\\n0 1 0 2 0 1 1 2 10\\n\") == \"3\\n\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n0 0 10\\n') == '2\\n'\nassert solution('5\\n0 1 2 3 4\\n') == '1\\n'\nassert solution('4\\n0 0 0 0\\n') == '4\\n'\nassert solution('9\\n0 1 0 2 0 1 1 2 10\\n') == '3\\n'"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n0 1 2 3 4\") == \"1\\n\"\nassert solution(\"3\\n0 0 10\") == \"2\\n\"\nassert solution(\"4\\n0 0 0 0\") == \"4\\n\"\nassert solution(\"9\\n0 1 0 2 0 1 1 2 10\") == \"3\\n\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt').read()) == '2'\nassert solution(open('input2.txt').read()) == '1'\nassert solution(open('input3.txt').read()) == '4'\nassert solution(open('input4.txt').read()) == '4'\nassert solution(open('input5.txt').read()) == '1'\nassert solution(open('input6.txt').read()) == '3'\nassert solution(open('input7.txt').read()) == '2'"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\", \"Test Case 1 Failed\"\n\nassert solution() == \"1\", \"Test Case 2 Failed\"\n\nassert solution() == \"4\", \"Test Case 3 Failed\"\n\nassert solution() == \"3\", \"Test Case 4 Failed\"\n\nassert solution() == \"3\", \"Test Case 5 Failed\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n0 0 10\\n') == '2\\n'\nassert solution('5\\n0 1 2 3 4\\n') == '1\\n'\nassert solution('4\\n0 0 0 0\\n') == '4\\n'\nassert solution('9\\n0 1 0 2 0 1 1 2 10\\n') == '3\\n'\n"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n0 0 10\") == \"2\\n\"\nassert solution(\"5\\n0 1 2 3 4\") == \"1\\n\"\nassert solution(\"4\\n0 0 0 0\") == \"4\\n\"\nassert solution(\"9\\n0 1 0 2 0 1 1 2 10\") == \"3\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n0 0 10') == '2'\nassert solution('5\\n0 1 2 3 4') == '1'\nassert solution('4\\n0 0 0 0') == '4'\nassert solution('9\\n0 1 0 2 0 1 1 2 10') == '3'"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\\n\") == \"5\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"5\\n\"\n"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 5"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"5\"\n"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"5\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\\n\") == \"5\"\n"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\\n\") == \"5\""
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n4\n0 0\n0 1\n1 0\n1 1\n''') == '5\\n'\n\nsum_scores = sum(2**i for i in range(1, len(set(get_points()))+1)) % 998244353\nprint(sum_scores)"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '5'\nprint(5)"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n0 0\\n0 1\\n1 0\\n1 1\\n') == '5\\n'\nassert solution('5\\n1\\n2\\n3\\n4\\n') == '11\\n'\nassert solution('7\\n0\\n0\\n1\\n0\\n0\\n0\\n') == '24\\n'\nassert solution('10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n') == '213\\n'\nassert solution('10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n') == '213\\n'\nassert solution('10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n') == '213\\n'"
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3\nB 1\nW 2\nB 3\nW 1\nW 3\nB 2\"\"\") == 4, \"Test failed.\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\\n\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\"\nassert solution(\"1\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"1\"\nassert solution(\"2\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\"\nassert solution(\"1\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"1\"\nassert solution(\"1\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"1\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\\n\"\nassert solution(\"4\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\") == \"3\\n\"\nassert solution(\"1\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\\n\"\nassert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\\n\"\nassert solution(\"5\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\nB 4\\nB 5\\nB 6\\nB 7\\nB 8\\nB 9\\nB 10\\nW 11\\nB 12\\nB 13\\nB 14\\nB 15\\nB 16\\nB 17\\nB 18\\nB 19\\nB 20\\nB 21\\nB 22\\nB 23\\nB 24\\nB 25\\nB 26\\nB 27\\nB 28\\nB 29\\nB 30\\nB 31\\nB 32\\nB 33\\nB 34\\nB 35\\nB 36\\nB 37\\nB 38\\nB 39\\nB 40\\nB 41\\nB 42\\nB 43\\nB 44\\nB 45\\nB 46\\nB 47\\nB 48\\nB 49\\nB 50\\nB 51\\nB 52\\nB 53\\nB 54\\nB 55\\nB 56\\nB 57\\nB 58\\nB 59\\nB 60\\nB 61\\nB 62\\nB 63\\nB 64\\nB 65\\nB 66\\nB 67\\nB 68\\nB 69\\nB 70\\nB 71\\nB 72\\nB 73\\nB 74\\nB 75\\nB 76\\nB 77\\nB 78\\nB 79\\nB 80\\nB 81\\nB 82\\nB 83\\nB 84\\nB 85\\nB 86\\nB 87\\nB 88\\nB 89\\nB 90\\nB 91\\nB 92\\nB 93\\nB 94\\nB 95\\nB 96\\nB 97\\nB 98\\nB 99\\nB 100\\nW 11\\nB 12\\nB 13\\nB 14\\nB 15\\nB 16\\nB 17\\nB 18\\nB 19\\nB 20\\nB 21\\nB 22\\nB 23\\nB 24\\nB 25\\nB 26\\nB 27\\nB 28\\nB 29\\nB 30\\nB 31\\nB 32\\nB 33\\nB 34\\nB 35\\nB 36\\nB 37\\nB 38\\nB 39\\nB 40\\nB 41\\nB 42\\nB 43\\nB 44\\nB 45\\nB 46\\nB 47\\nB 48\\nB 49\\nB 50\\nB 51\\nB 52\\nB 53\\nB 54\\nB 55\\nB 56\\nB 57\\nB 58\\nB 59\\nB 60\\nB 61\\nB 62\\nB 63\\nB 64\\nB 65\\nB 66\\nB 67\\nB 68\\nB 69\\nB 70\\nB 71\\nB 72\\nB 73\\nB 74\\nB 75\\nB 76\\nB 77\\nB 78\\nB 79\\nB 80\\nB 81\\nB 82\\"
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"4\\n\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"4\", \"The solution is incorrect\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3\nB 1\nW 2\nB 3\nW 1\nW 3\nB 2\n\"\"\") == \"4\\n\"\n\nassert solution(\"\"\"\n1\nB 1\nW 2\nB 3\nW 1\nW 3\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n2\nB 1\nW 2\nB 3\nW 1\nW 3\n\"\"\") == \"2\\n\"\n\nassert solution(\"\"\"\n1\nB 1\nW 2\nB 3\nW 1\nW 3\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n2\nB 1\nW 2\nB 3\nW 1\nW 3\n\"\"\") == \"2\\n\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"4\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\\n\"\nassert solution(\"1\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\\n\"\nassert solution(\"2\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\\n\"\nassert solution(\"4\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\\n\"\nassert solution(\"2\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\\n\"\nassert solution(\"1\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\\n\"\nassert solution(\"5\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"5\\n\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output() for input, output in [\n    (r\"5\\n6\\n3\\n\", r\"4\\n\"),\n    (r\"5\\n3\\n5\\n\", r\"4\\n\")\n]"
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"The output is incorrect. Expected '{output}', got '{solution(input())}'.\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5) == 4, \"Expected 4 decks, got: \" + solution(5)"
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5) == 4, \"Incorrect output\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test case failed\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"The output is incorrect.\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n6\\n3\\n') == '4\\n'\nassert solution('5\\n3\\n5\\n') == '4\\n'"
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 4\n"
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=open('input.txt', 'r')) == '2\\n'\nassert solution(stdin=open('input.txt', 'r')) == '32\\n'"
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n4 2\") == \"2\\n\"\nassert solution(\"8\\n1 2 4 8 16 32 64 576\") == \"32\\n\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n4 2\\n\") == \"2\\n\"\nassert solution(\"8\\n1 2 4 8 16 32 64 576\\n\") == \"32\\n\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"2\", \"Input 1\"\nassert solution(\"8\") == \"32\", \"Input 2\"\n\nprint(\"Success\")"
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n4 2\\n\") == \"2\\n\"\nassert solution(\"8\\n1 2 4 8 16 32 64 576\\n\") == \"32\\n\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n4 2\\n\") == \"2\\n\"\nassert solution(\"8\\n1 2 4 8 16 32 64 576\\n\") == \"32\\n\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n4 2\\n\\n8\\n1 2 4 8 16 32 64 576\\n\\n32\") == \"2\"\nassert solution(\"8\\n1 2 4 8 16 32 64 576\\n\\n4\") == \"2\"\nassert solution(\"2\\n4 2\\n\\n8\\n1 2 4 8 16 32 64 576\\n\\n32\") == \"2\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n4 2\") == \"2\\n\"\nassert solution(\"8\\n1 2 4 8 16 32 64 576\") == \"32\\n\"\n"
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Output\\n2\\n\\n\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Output\\n32\"\nassert solution(input()) == \"Output\\n2\"\nassert solution(input()) == \"Output\\n\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"400 4\\n100 300 450 500\") == \"2\"\nassert solution(\"50 2\\n100 25\") == \"3\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected_output"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, got: {solution(input())}\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2'\nassert solution(stdin) == '3'"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"400 4\\n100 300 450 500\\n\") == \"2\"\nassert solution(\"50 2\\n100 25\\n\") == \"3\"\n"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"400 4\\n100 300 450 500\") == \"2\"\nassert solution(\"50 2\\n100 25\") == \"3\"\nassert solution(\"400 300\\n100 300\") == \"1\"\nassert solution(\"500 1000\\n500 1000\") == \"0\"\nassert solution(\"1000000 1000000\") == \"-1\"\n"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"400 4\\n100 300 450 500\\n\") == \"2\\n\"\nassert solution(\"50 2\\n100 25\\n\") == \"3\\n\"\n"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"400 4\\n100 300 450 500\") == \"2\"\nassert solution(\"50 2\\n100 25\") == \"3\"\n"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 2') == '6'\nassert solution('5 3') == '24'\nassert solution('6 4') == '58'\nassert solution('7 6') == '130'\nassert solution('8 5') == '218'"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\") == \"6\\n\", \"The expected output is not obtained.\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\") == \"6\\n\"\n"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n\") == \"6\\n\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 2') == '6'\nprint('All test cases passed!')"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\") == \"6\\n\"\nassert solution(\"7 1\") == \"1\\n\"\nassert solution(\"1 10\") == \"13\\n\"\nassert solution(\"10 1\") == \"11\\n\"\nassert solution(\"10 10\") == \"5\\n\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\") == \"6\\n\"\nassert solution(\"1 1 1 1\") == \"1\\n\"\nassert solution(\"1 1 2 2\") == \"2\\n\"\nassert solution(\"2 2 1 1\") == \"2\\n\"\nassert solution(\"2 1 1 2\") == \"1\\n\"\nassert solution(\"2 2 2 2\") == \"4\\n\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"6\\n\", \"The output is incorrect.\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n\") == \"6\\n\"\n"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"6\\n\", \"Incorrect output\""
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3') == '499122178\\n499122178\\n499122178'\n"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"499122178\\n499122178\\n499122178\"\n"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '499122178\\n499122178\\n499122178'\n"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"499122178\\n499122178\\n499122178\\n\", \"Invalid Test Case\"\n"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '499122178\\n499122178\\n499122178\\n'\nassert solution() == '499122178\\n499122178\\n499122178\\n'\nassert solution() == '499122178\\n499122178\\n499122178\\n'\nassert solution() == '499122178\\n499122178\\n499122178\\n'\nassert solution() == '499122178\\n499122178\\n499122178\\n'"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(b\"3\") == \"499122178\"\nassert solution(b\"4\") == \"499122178\"\nassert solution(b\"5\") == \"499122178\"\nassert solution(b\"6\") == \"499122178\"\nassert solution(b\"7\") == \"499122178\"\nassert solution(b\"8\") == \"499122178\"\n\nfrom typing import List"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"499122178\"\nassert solution() == \"499122178\"\nassert solution() == \"499122178\""
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"499122178\\n499122178\\n499122178\"\n"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n\") == \"499122178\\n499122178\\n499122178\\n\"\nassert solution(\"4\\n\") == \"244091025\\n244091025\\n244091025\\n\"\nassert solution(\"5\\n\") == \"111060269\\n111060269\\n111060269\\n\"\nassert solution(\"6\\n\") == \"678150117\\n678150117\\n678150117\\n\"\nassert solution(\"7\\n\") == \"445225033\\n445225033\\n445225033\\n\"\nassert solution(\"8\\n\") == \"301696761\\n301696761\\n301696761\\n\"\nassert solution(\"9\\n\") == \"156796454\\n156796454\\n156796454\\n\"\nassert solution(\"10\\n\") == \"113770229\\n113770229\\n113770229\\n\"\nassert solution(\"11\\n\") == \"90496272\\n90496272\\n90496272\\n\"\nassert solution(\"12\\n\") == \"66311701\\n66311701\\n66311701\\n\"\nassert solution(\"13\\n\") == \"42217800\\n42217800\\n42217800\\n\"\nassert solution(\"14\\n\") == \"28213189\\n28213189\\n28213189\\n\"\nassert solution(\"15\\n\") == \"14193568\\n14193568\\n14193568\\n\"\nassert solution(\"16\\n\") == \"10104597\\n10104597\\n10104597\\n\"\nassert solution(\"17\\n\") == \"7906733\\n7906733\\n7906733\\n\"\nassert solution(\"18\\n\") == \"5694120\\n5694120\\n5694120\\n\"\nassert solution(\"19\\n\") == \"3482736\\n3482736\\n3482736\\n\"\nassert solution(\"20\\n\") == \"1781250\\n1781250\\n1781250\\n\"\nassert solution(\"21\\n\") == \"1372271\\n1372271\\n1372271\\n\"\nassert solution(\"22\\n\") == \"1062384\\n1062384\\n1062384\\n\"\nassert solution(\"23\\n\") == \"752444\\n752444\\n752444\\n\"\nassert solution(\"24\\n\") == \"542574\\n542574\\n542574\\n\"\nassert solution(\"25\\n\") == \"332670\\n332670\\n332670\\n\"\nassert solution(\"26\\n\") == \"172820\\n172820\\n172820\\n\"\nassert solution(\"27\\n\") == \"131930\\n131930\\n131930\\n\"\nassert solution(\"28\\n"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"499122178\\n499122178\\n499122178\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"6\"\nassert solution(\"3\") == \"6669\"\nassert solution(\"10\") == \"-1\""
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(2) == '6'\nassert solution(3) == '6669'\nassert solution(10) == '-1'"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"6\"\nassert solution(\"3\") == \"6669\"\nassert solution(\"10\") == \"-1\""
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"6\"\nassert solution(\"3\") == \"6669\"\nassert solution(\"10\") == \"-1\""
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == 6\nassert solution(3) == 6669\nassert solution(10) == -1"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == \"6\"\nassert solution(3) == \"6669\"\nassert solution(10) == \"-1\"\nassert solution(10**5+1) == \"-1\"\n"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2) == 6\nassert solution(3) == 6669\nassert solution(10) == -1"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2) == 6\nassert solution(3) == 6669\nassert solution(10) == -1"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 6669\nassert solution(10) == -1\nassert solution(4) == -1\nassert solution(100000000000000000000) == -1\nassert solution(100000000000000000001) == 6\nassert solution(100000000000000000005) == 6669\n"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(10) == 6669\nassert solution(3) == 6669\nassert solution(2) == 6\nassert solution(1) == -1\n"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test Case {case+1} failed\"\n"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected_solution"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == '''1 4 3 2 0\n1 0 2 4 3\n2 4 0 1 3'''\n\nassert solution(2) == '-1'\n\nprint('''1 4 3 2 0\n1 0 2 4 3\n2 4 0 1 3''')"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected_output, f\"Expected output: {expected_output}, but got {solution}\"\n"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\"\nassert solution(2) == \"-1\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n\") == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\\n-1\"\nassert solution(\"2\\n\") == \"-1\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\\n\") == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\"\nassert solution(\"2\\n\") == \"-1\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5) == '1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3'\nassert solution(2) == '-1'"
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\\n4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\\n\") == \"Yes\\n\", \"Test 1 failed\"\nassert solution(\"Input\\n4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\\n\") == \"No\\n\", \"Test 2 failed\"\nassert solution(\"Input\\n4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\\n\") == \"Yes\\n\", \"Test 3 failed\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\") == \"Yes\\n\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\") == \"No\\n\"\n"
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Input\") == \"Yes\\n\", \"Input\"\nassert solution(\"Input\") == \"No\\n\", \"Input\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"Yes\", \"Please implement the solution\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\\n\") == \"Yes\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\\n\") == \"No\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n1\\n1\\n\\n2\\n4\\n3\\n2\\n2\\n\\n') == 'Yes'\nassert solution('1\\n2\\n1\\n1\\n\\n2\\n4\\n3\\n2\\n2\\n\\n') == 'No'"
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(4) == \"Yes\\n\", \"Solution 1 incorrect\"\nassert solution(1) == \"No\\n\", \"Solution 2 incorrect\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n1 3\\n2 4\\n1 2 3 4\\n\") == \"Yes\"\nassert solution(\"1 2\\n1 3\\n2 4\\n1 2 4 3\\n\") == \"No\"\n\nSolution:\n```python\n"
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\"\n) == \"Yes\\n\"\n\nassert solution(\n\"4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\"\n) == \"No\\n\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n4\n1 2\n1 3\n2 4\n1 2 3 4\n''') == 'Yes'\n\nassert solution('''\n4\n1 2\n1 3\n2 4\n1 2 4 3\n''') == 'No'"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\\n\") == \"24500\"\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\\n\") == \"-1\"\n"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n2 6 5\n1 1 0 5000\n3 2 0 5500\n2 2 0 6000\n15 0 2 9000\n9 0 1 7000\n8 0 2 6500\n''') == 24500\nassert solution('''\n2 4 5\n1 2 0 5000\n2 1 0 4500\n2 1 0 3000\n8 0 1 6000\n''') == -1\n"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\\n\") == 24500\n\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\\n\") == -1"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\") == \"24500\\n\"\n\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\") == \"-1\\n\""
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\\n\") == \"24500\"\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\\n\") == \"-1\""
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\") == 24500\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\") == -1"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\") == 24500\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\") == -1"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\") == 24500\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\") == -1"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 24500\nprint(\"All tests passed!\")"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 24500\nassert solution() == 24500\nassert solution() == 24500\nassert solution() == -1"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\"\nassert solution(\"6 4 30\") == \"19.668384925\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\"\nassert solution(\"6 4 30\") == \"19.668384925\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    1 1 45\n    \"\"\"\n) == \"0.828427125\"\n\nassert solution(\n    \"\"\"\n    6 4 30\n    \"\"\"\n) == \"19.668384925\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 45\") == 0.828427125\nassert solution(\"6 4 30\") == 19.668384925"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 1 45') == 0.828427125\nassert solution('6 4 30') == 19.668384925\n\nassert abs(solution('1 1 45') - 0.828427125) <= 1e-6\nassert abs(solution('6 4 30') - 19.668384925) <= 1e-6\n\nprint(\"Correct!\")"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\", \"Test case 1\"\nassert solution(\"6 4 30\") == \"19.668384925\", \"Test case 2\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 45\") == 0.828427125\nassert solution(\"6 4 30\") == 19.668384925"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 45\") == 0.828427125\nassert solution(\"6 4 30\") == 19.668384925"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\"\nassert solution(\"6 4 30\") == \"19.668384925\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 45\") == 0.828427125\nassert solution(\"6 4 30\") == 19.668384925\n"
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\\n\") == \"3000\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\\n\") == \"992\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\") == \"1\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3000\\n\", \"Solution is incorrect. Expected 3000, got {}\".format(solution())"
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n2 3\nATK 2000\nDEF 1700\n2500\n2500\n2500\n\"\"\") == \"3000\"\n\nassert solution(\"\"\"\n3 4\nATK 10\nATK 100\nATK 1000\n1\n11\n101\n1001\n\"\"\") == \"992\"\n\nassert solution(\"\"\"\n2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\"\"\") == \"1\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == \"3000\\n\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\") == \"992\\n\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\") == \"1\\n\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input1) == \"3000\", \"Solution not correct\"\nassert solution(input2) == \"992\", \"Solution not correct\"\nassert solution(input3) == \"1\", \"Solution not correct\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\\n\") == \"3000\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\\n\") == \"992\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\") == \"1\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == \"3000\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\\n\") == \"992\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\") == \"1\"\n"
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == \"3000\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\") == \"992\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\") == \"1\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 3000, \"Test case 1 failed\"\nassert solution() == 992, \"Test case 2 failed\"\nassert solution() == 1, \"Test case 3 failed\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == \"3000\\n\", \"Fox Ciel is playing a card game with her friend Jiro. The given input is incorrect. Please check your input.\"\n\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\") == \"992\\n\", \"Fox Ciel is playing a card game with her friend Jiro. The given input is incorrect. Please check your input.\"\n\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\") == \"1\\n\", \"Fox Ciel is playing a card game with her friend Jiro. The given input is incorrect. Please check your input.\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"6\"\n\nassert solution() == \"2\"\n\nassert solution() == \"62\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected\npass"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 3 4 5 6 7 8 9\\n2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\") == \"6\\n\"\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n\") == \"2\\n\"\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\") == \"62\\n\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 6, \"Output should be 6\"\nassert solution() == 2, \"Output should be 2\"\nassert solution() == 62, \"Output should be 62\"\n"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\n    pass\"\n"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n\") == \"6\\n\"\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n\") == \"2\\n\"\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\") == \"62\\n\"\nassert solution(\"\") == \"0\\n\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n\") == \"6\"\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n\") == \"2\"\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\") == \"62\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\") == 62\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n\") == 2\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\") == 62"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n\") == \"6\"\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n\") == \"2\"\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\") == \"62\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    5 4\n    4 3 1 2 1\n    1 2 1 2 1\n    1 2 3 4 5 6 7 8 9\n    ''') == '6'\n\nassert solution('''\n    2 2\n    1 2\n    0 0\n    2 1 -100 -100\n    ''') == '2'\n\nassert solution('''\n    5 4\n    4 3 2 1 1\n    0 2 6 7 4\n    12 12 12 6 -3 -5 3 10 -4\n    ''') == '62'"
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"YES\"\nassert solution(\"aabb\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"aabb\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"aabb\") == \"NO\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"YES\"\nassert solution(\"aabb\") == \"NO\"\nassert solution(\"abab\") == \"NO\"\nassert solution(\"\") == \"YES\"\nassert solution(\"a\") == \"YES\"\nassert solution(\"aa\") == \"YES\"\nassert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"NO\"\nassert solution(\"aabb\") == \"NO\"\nassert solution(\"abab\") == \"YES\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('aaba') == 'YES'\nassert solution('abaa') == 'YES'\nassert solution('aabb') == 'NO'"
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('aaba') == 'YES'\nassert solution('abaa') == 'YES'\nassert solution('aabb') == 'NO'"
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"NO\"\nassert solution(\"aabb\") == \"YES\"\nassert solution(\"abab\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aabb\") == \"YES\"\nassert solution(\"abaa\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"YES\"\nassert solution(\"aabb\") == \"NO\"\n"
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"NO\"\nassert solution(\"aabb\") == \"YES\"\n\nassert solution(\"aabb\") == \"YES\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'NO'"
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"YES\\n1\\n1\\n\", \"Test case 1\"\n\nassert solution(stdin) == \"NO\\n0\\n0\\n\", \"Test case 2\"\n\nassert solution(stdin) == \"YES\\n1\\n2\\n\", \"Test case 3\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == \"YES\"\nassert solution(3) == \"NO\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"NO\"\nassert solution(1) == \"YES\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"NO\"\nassert solution(1) == \"YES\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"NO\"\nassert solution(1) == \"YES\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"NO\"\nassert solution(1) == \"YES\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"NO\"\nassert solution(1) == \"YES\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"YES\\n2\"\n"
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Test case {i+1} failed: Expected '{expected}', got '{solution(stdin)}'\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ab\") == \"Yes\\na\"\nassert solution(\"ac\") == \"Yes\\na\"\nassert solution(\"cd\") == \"Yes\\na\"\nassert solution(\"1 2\") == \"Yes\\na\"\nassert solution(\"test\") == \"No\"\nassert solution(\"tezt\") == \"Yes\\na\"\nassert solution(\"test.est\") == \"Yes\\na\"\nassert solution(\"tes.\") == \"Yes\\na\"\nassert solution(\"1 4 5\") == \"No\"\nassert solution(\"a\") == \"No\"\nassert solution(\"b\") == \"No\"\nassert solution(\"c\") == \"No\"\nassert solution(\"dd\") == \"No\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"...svn\") == \"No\"\nassert solution(\"..git\") == \"Yes\\n..\"\nassert solution(\"....est\") == \"No\"\nassert solution(\"....est\") == \"No\"\nassert solution(\"def solution(stdin: str) -> str:\") == \"No\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Expected output: '{expected}', Received output: '{solution(input())}'\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'Yes'\nassert solution(input()) == 'Yes'\nassert solution(input()) == 'Yes'\nassert solution(input()) == 'No'\nassert solution(input()) == 'No'"
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ab\") == \"Yes\\na?\"\nassert solution(\"ac\") == \"Yes\\na?\"\nassert solution(\"cd\") == \"Yes\\na?\"\nassert solution(\"1 2\") == \"Yes\\na?\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ab\") == \"Yes\\na?\"\nassert solution(\"ac\") == \"Yes\\na?\"\nassert solution(\"cd\") == \"Yes\\na?\"\nassert solution(\"1 2\") == \"Yes\\na?\"\nassert solution(\"1 2 3\") == \"No\"\nassert solution(\"a b c\") == \"No\"\nassert solution(\".svn\") == \"Yes\\n.svn\"\nassert solution(\".git\") == \"Yes\\n.git\"\nassert solution(\"....\") == \"Yes\\n.???\"\nassert solution(\"... \") == \"Yes\\n.???\"\nassert solution(\"..\") == \"Yes\\n.???\"\nassert solution(\". \") == \"Yes\\n.???\"\nassert solution(\".est\") == \"Yes\\n.???\"\nassert solution(\"tes.\") == \"Yes\\n.???\"\nassert solution(\"tes..t\") == \"Yes\\n.???\"\nassert solution(\".svn..git\") == \"Yes\\n.svn.???\"\nassert solution(\".???.est\") == \"Yes\\n.???.est\"\nassert solution(\"a 2 b c 3 d e\") == \"No\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"No\"\n"
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ab\") == \"Yes\\na?\"\nassert solution(\"ac\") == \"Yes\\na?\"\nassert solution(\"cd\") == \"Yes\\na?\"\nassert solution(\"test\") == \"Yes\\na?\"\nassert solution(\"tezt\") == \"Yes\\na?\"\nassert solution(\"test.est\") == \"Yes\\na?\"\nassert solution(\"tes.\") == \"Yes\\na?\"\nassert solution(\"a\") == \"No\"\nassert solution(\"abc\") == \"No\"\nassert solution(\"a1b2c3d4e5\") == \"No\"\nassert solution(\".svn\") == \"Yes\\n.svn\"\nassert solution(\".git\") == \"Yes\\n.git\"\nassert solution(\"....\") == \"Yes\\n....\"\nassert solution(\"...\") == \"Yes\\n... \"\nassert solution(\"..\") == \"Yes\\n.. \"\nassert solution(\".\") == \"Yes\\n.\"\nassert solution(\"abc123\") == \"No\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('ab') == 'Yes\\na?'\nassert solution('ac') == 'Yes\\na?'\nassert solution('cd') == 'Yes\\na?'\nassert solution('test') == 'Yes\\na?\\nNo'\nassert solution('tezt') == 'Yes\\na?\\nNo'\nassert solution('test.est') == 'Yes\\na?\\nNo'\nassert solution('tes.') == 'Yes\\na?\\nNo'\nassert solution('a') == 'Yes\\na?'\nassert solution('b') == 'Yes\\na?'\nassert solution('c') == 'Yes\\na?'\nassert solution('dd') == 'Yes\\na?\\nNo'\nassert solution('def solution(stdin: str) -> str:') == 'No'\nassert solution('svn') == 'Yes\\na?\\nNo'\nassert solution('git') == 'Yes\\na?\\nNo'\nassert solution('....') == 'Yes\\na?\\nNo'\nassert solution('... ') == 'Yes\\na?\\nNo'\nassert solution('.. ') == 'Yes\\na?\\nNo'\nassert solution('.') == 'Yes\\na?\\nNo'\nassert solution('1 2 3') == 'Yes\\na?\\nNo'"
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\n"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\"\nassert solution(\"2\\n1 1 1\") == \"1\"\nassert solution(\"3\\n1 2 3\") == \"2\"\nassert solution(\"3\\n1 2 3\") == \"2\"\nassert solution(\"2\\n1 1 1\") == \"1\"\nassert solution(\"3\\n1 2 3\") == \"2\"\nassert solution(\"3\\n1 2 3\") == \"2\"\nassert solution(\"2\\n1 1 1\") == \"1\"\nassert solution(\"3\\n1 2 3\") == \"2\"\nassert solution(\"3\\n1 2 3\") == \"2\"\nassert solution(\"2\\n1 1 1\") == \"1\"\nassert solution(\"3\\n1 2 3\") == \"2\"\nassert solution(\"3\\n1 2 3\") == \"2\"\nassert solution(\"2\\n1 1 1\") == \"1\""
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"2\"\nassert solution(\"2\\n1 2 3\\n1 2 3\\n1 2 2\\n1 2 1\\n\") == \"2\"\nassert solution(\"3\\n1 2 3\\n1 2 2\\n1 2 1\\n\") == \"2\"\nassert solution(\"3\\n1 2 3\\n1 2 2\\n1 2 1\\n\") == \"2\"\nassert solution(\"3\\n1 2 3\\n1 2 2\\n1 2 1\\n\") == \"2\""
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\", \"Expected output: 2\""
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\\n\"\n"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '''\n2\n'''\nassert solution('''\n5\n1 2 3 4 5\n''') == '''\n2\n'''\nassert solution('''\n10\n1 2 3 4 5 6 7 8 9 10\n''') == '''\n1\n'''"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n\""
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\"\nassert solution(\"3\\n1 2\\n2 3\\n3 4\\n\") == \"3\""
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\\n\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\\n\"\nassert solution(\"5\\n1 2\\n3 4\\n5 6\\n\") == \"3\\n\"\nassert solution(\"7\\n1 3\\n2 5\\n4 6\\n7 8\\n\") == \"4\\n\""
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '2'\n"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\""
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4') == '2'\nassert solution('5\\n1 2\\n2 3\\n3 4\\n5 6') == '3'"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4\\n') == '2'\nassert solution('5\\n1 2\\n2 3\\n3 4\\n5 6\\n') == '4'"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\"\n"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\"\n\nprint(1)"
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 2 5\") == \"4\\n\"\nassert solution(\"10 3 10\") == \"5\\n\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Test failed for input {input()}, expected output {expected}, got {solution(input())}\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 2 5\") == \"4\\n\"\nassert solution(\"10 3 10\") == \"5\\n\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 2 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\"\n\nSolution:\n\n```python\n"
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 2 5\") == \"4\\n\"\nassert solution(\"10 3 10\") == \"5\\n\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 3 10\") == \"5\\n\"\nassert solution(\"7 2 5\") == \"4\\n\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('7 2 5') == '4'\nassert solution('10 3 10') == '5'\n\nSolution:"
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 2 5\") == \"4\\n\"\nassert solution(\"10 3 10\") == \"5\\n\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 2 5\") == \"4\\n\"\nassert solution(\"10 3 10\") == \"5\\n\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '2'\nassert solution() == '2 3'\nassert solution() == '1'"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\\n\") == \"2\"\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\") == \"1\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\\n\") == \"2\"\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\") == \"1\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    5 6\n    1 2\n    1 3\n    2 3\n    2 5\n    3 4\n    4 5\n    ''') == '2\\n2 3 \\n'\n\nassert solution('''\n    4 4\n    1 2\n    1 3\n    1 4\n    3 4\n    ''') == '1\\n1 '"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('Input\\n5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\\n\\n\\nInput\\n4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\\n\\nOutput\\n2\\n2 3 \\n\\n\\nOutput\\n1\\n1 \\n\\n\\n') == '2\\n2 3 \\n\\n\\n'\nassert solution('Input\\n4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\\n\\nOutput\\n1\\n1 \\n\\n\\n') == '1\\n1 \\n'\n"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\\n\") == \"2\"\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\") == \"1\"\n"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\nassert solution() == \"2 3 \"\nassert solution() == \"1\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\") == \"2\"\n\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\") == \"1\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '2\\n2 3\\n'"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\") == \"2\\n2 3\\n\"\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\") == \"1\\n1 \""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\"\nassert solution(\"3\\n100 150 250\") == \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\\n\"\nassert solution(\"3\\n100 150 250\") == \"No\\n\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\\n\"\nassert solution(\"3\\n100 150 250\") == \"No\\n\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\\n\"\nassert solution(\"3\\n100 150 250\") == \"No\\n\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n75 150 75 50\\n\\n3\\n100 150 250') == 'Yes\\n'\nassert solution('3\\n100 150 250\\n\\n\\n\\n\\n\\n\\n\\n') == 'No\\n'\n"
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n75 150 75 50\\n\\n3\\n100 150 250\\n\") == \"Yes\\n\"\nassert solution(\"3\\n100 150 250\\n\\n4\\n75 150 75 50\\n\\n5\\n50 50 100 250\\n\\n6\\n100 50 50 50\\n\") == \"No\\n\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\"\nassert solution(\"3\\n100 150 250\") == \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\\n\"\nassert solution(\"3\\n100 150 250\") == \"No\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n75 150 75 50') == 'Yes\\n'\nassert solution('3\\n100 150 250') == 'No\\n'\nassert solution('4\\n75 150 75 50\\n75 150 75 50') == 'Yes\\n'\nassert solution('3\\n100 150 250\\n100 150 250') == 'No\\n'"
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n50 50 50\") == \"150\\n\"\n\nassert solution(\"2\\n-1 -100 -1\") == \"100\\n\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n50 50 50\") == \"150\\n\", \"The first sample is not correct.\"\nassert solution(\"2\\n-1 -100 -1\") == \"100\\n\", \"The second sample is not correct.\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n50 50 50\") == \"150\\n\"\nassert solution(\"2\\n-1 -100 -1\") == \"100\\n\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test cases are not matching\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n50 50 50\") == \"150\\n\", \"Input1 failed\"\nassert solution(\"2\\n-1 -100 -1\") == \"100\\n\", \"Input2 failed\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n50 50 50\\n\") == \"150\\n\"\n\nassert solution(\"2\\n-1 -100 -1\\n\") == \"100\\n\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"150\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n50 50 50\\n\") == \"150\\n\"\n\nassert solution(\"2\\n-1 -100 -1\\n\") == \"100\\n\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '150'\nassert solution(input()) == '100'\n"
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n50 50 50\") == \"150\\n\", \"Test 1 failed\"\nassert solution(\"2\\n-1 -100 -1\") == \"100\\n\", \"Test 2 failed\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5\\na ab\\nc cc\\na ca\\ne ee\\nd ff\") == \"4\"\nassert solution(\"2 8\\na ef\\ndc dd\\nc cf\\nbcb\\ndab\\neba\\nbbb\\ncff\") == \"1\"\nassert solution(\"6 2\\nbba\\naba\\n\") == \"0\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed. Expected output: {expected_output}, Received output: {solution(stdin)}\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5\\nab a\\ncc c\\nca a\\nee c\\nff d\\n\") == \"4\\n\"\n\nassert solution(\"2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\\n\") == \"1\\n\"\n\nassert solution(\"6 2\\nbb a\\nba a\\n\") == \"0\\n\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test Failed\"\nfor i in range(1, 10):\n    assert solution(f\"Input{i}\") == f\"Output{i}\", f\"Test Failed for Input{i}\"\nprint(\"Test Passed\")\n"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5\\nab a\\ncc c\\nca a\\nee c\\nff d\\n\") == \"4\"\nassert solution(\"2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\\n\") == \"1\"\nassert solution(\"6 2\\nbb a\\nba a\\n\") == \"0\"\n"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 5\\nab a\\ncc c\\nca a\\nee c\\nff d\\n') == 4, \"Testcase 1 failed\"\nassert solution('2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\\n') == 1, \"Testcase 2 failed\"\nassert solution('6 2\\nbb a\\nba a\\n') == 0, \"Testcase 3 failed\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 5\\nab a\\ncc c\\nca a\\nee c\\nff d\\n') == '4\\n'\nassert solution('2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\\n') == '1\\n'\nassert solution('6 2\\nbb a\\nba a\\n') == '0\\n'"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('test_inputs/test_case_1.txt', 'r')) == '4\\n'\nassert solution(open('test_inputs/test_case_2.txt', 'r')) == '1\\n'\nassert solution(open('test_inputs/test_case_3.txt', 'r')) == '0\\n'"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5\\nab a\\ncc c\\nca a\\nee c\\nff d\\n\") == 4\nassert solution(\"2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\\n\") == 1\nassert solution(\"6 2\\nbb a\\nba a\\n\") == 0"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == '1'\nassert solution(2) == '3'\nassert solution(3) == '10'"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '1', 'Incorrect solution'\nassert solution(input()) == '3', 'Incorrect solution'\nassert solution(input()) == '10', 'Incorrect solution'\nprint(1)"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == '1'\nassert solution(2) == '3'\nassert solution(3) == '10'"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 1\nassert solution(2) == 3\nassert solution(3) == 10"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '1\\n'\nassert solution(stdin) == '3\\n'\nassert solution(stdin) == '10\\n'"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == \"1\"\nassert solution(2) == \"3\"\nassert solution(3) == \"10\"\n\nimport math"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == \"1\"\nassert solution(2) == \"3\"\nassert solution(3) == \"10\""
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"2\\n\") == \"3\\n\"\nassert solution(\"3\\n\") == \"10\\n\""
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 1\nassert solution(2) == 3\nassert solution(3) == 10"
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n1 3\\n4 1\\n\") == \"1.000000000000\\n1.250000000000\\n\"\nassert solution(\"1 3\\n4 1\\n\") == \"-1\\n\"\nassert solution(\"4 1\\n\") == \"1.250000000000\\n\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\"\nassert solution(\"1 3\") == \"-1\"\nassert solution(\"4 1\") == \"1.250000000000\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n1 3\\n4 1\\n\") == \"1.000000000000\\n\"\nassert solution(\"1 3\\n4 1\\n\") == \"-1\\n\"\nassert solution(\"4 1\\n\") == \"1.250000000000\\n\"\n"
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n1 3\\n4 1\\n\") == \"1.000000000000\\n\"\nassert solution(\"1 3\\n\") == \"-1\\n\"\nassert solution(\"4 1\\n\") == \"1.250000000000\\n\"\n"
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\n1 3\\n4 1\\n\") == \"1.000000000000\\n\"\nassert solution(\"1 3\\n\") == \"-1\\n\"\nassert solution(\"4 1\\n\") == \"1.250000000000\\n\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\"\nassert solution(\"1 3\") == \"-1\"\nassert solution(\"4 1\") == \"1.250000000000\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\n1 3\\n4 1\\n\") == \"1.000000000000\\n\"\nassert solution(\"1 3\\n4 1\\n\") == \"-1\\n\"\nassert solution(\"4 1\\n\") == \"1.250000000000\\n\"\nassert solution(\"5 1\\n\") == \"-1\\n\"\n"
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n1 3\\n4 1\\n\") == \"1.000000000000\\n\"\nassert solution(\"1 3\\n\") == \"-1\\n\"\nassert solution(\"4 1\\n\") == \"1.250000000000\\n\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\"\nassert solution(\"1 3\") == \"-1\"\nassert solution(\"4 1\") == \"1.250000000000\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\"\nassert solution(\"1 3\") == \"-1\"\nassert solution(\"4 1\") == \"1.250000000000\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '10.0000000000', solution(stdin)"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"10.0000000000\", \"Incorrect output.\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000000000\"\nassert solution(stdin) == \"10.0000"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n12\\n11 8\\n7 5') == '10.0000000000\\n'\nassert solution('3\\n1\\n1 4 1\\n2 5 3') == '-1\\n'\nassert solution('6\\n2\\n4 6 3 3 5 6\\n2 6 3 6 5 3') == '85.4800000000\\n'"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"12\\n11 8\\n7 5\") == \"10.0000000000\\n\"\nassert solution(\"3\\n1\\n1 4 1\\n2 5 3\") == \"-1\\n\"\nassert solution(\"6\\n2\\n4 6 3 3 5 6\\n2 6 3 6 5 3\") == \"85.4800000000\\n\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Expected {expected_output}, but got {solution(stdin)}\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n12\\n11 8\\n7 5\\n\") == \"10.0000000000\"\nassert solution(\"3\\n1\\n1 4 1\\n2 5 3\\n\") == \"-1\"\nassert solution(\"6\\n2\\n4 6 3 3 5 6\\n2 6 3 6 5 3\\n\") == \"85.4800000000\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n12\\n11 8\\n7 5\\n\") == \"10.0000000000\"\nassert solution(\"3\\n1\\n1 4 1\\n2 5 3\\n\") == \"-1\"\nassert solution(\"6\\n2\\n4 6 3 3 5 6\\n2 6 3 6 5 3\\n\") == \"85.4800000000\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '10.0000000000'\nassert solution() == '-1'\nassert solution() == '85.4800000000'"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('5') == '0'\nassert solution('6') == '0'\nassert solution('7') == '0'\nassert solution('8') == '0'\nassert solution('9') == '0'\nassert solution('10') == '4'"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"0\" # correct output"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 0\nassert solution(2) == 0\nassert solution(10) == 4"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\") == \"0\\n\"\nassert solution(\"1\") == \"0\\n\"\nassert solution(\"2\") == \"0\\n\"\nassert solution(\"3\") == \"0\\n\"\nassert solution(\"4\") == \"0\\n\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"10\") == \"4\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"10\") == \"4\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n\") == \"0\\n\"\nassert solution(\"2\\n\") == \"0\\n\"\nassert solution(\"10\\n\") == \"4\\n\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n\") == \"0\\n\"\nassert solution(\"2\\n\") == \"0\\n\"\nassert solution(\"10\\n\") == \"4\\n\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"10\") == \"4\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == ['Wh.', 'abdef', 'Areyoubusy']"
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\\n3\\n1 1\\n1 2\\n1 111111111111\\n\\nOutput\\nWh.\\nInput\\n5\\n0 69\\n1 194\\n1 139\\n0 47\\n1 66\\n\\nOutput\\nabdef\\nInput\\n10\\n4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\\n\\nOutput\\nAreyoubusy\\n\\n\") == \"Wh.\\nAreyoubusy\\n\"\nassert solution(\"Input\\n3\\n1 1\\n1 2\\n1 111111111111\\n\\nOutput\\nWh.\\nInput\\n5\\n0 69\\n1 194\\n1 139\\n0 47\\n1 66\\n\\nOutput\\nabdef\\nInput\\n10\\n4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\\n\\nOutput\\nAreyoubusy\\n\\n\") == \"Wh.\\nAreyoubusy\\n\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Input\") == \"Wh.\"\nassert solution(\"Input\") == \"Areyoubusy\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('Input') == 'Wh.\\n', \"Incorrect output for f_0\"\nassert solution('Input') == 'Wh.\\n', \"Incorrect output for f_1\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"What are you doing at the end of the world? Are you busy? Will you save us?\\nWhat are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\\nWhat are you doing at the end of the world? Are you busy? Will you save us?\\nWhat are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\\nWhat are you doing at the end of the world? Are you busy? Will you save us?\") == \"Wh.\", \"Test 1 failed\"\n\nassert solution(\"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\\nWhat are you doing at the end of the world? Are you busy? Will you save us?\\nWhat are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\\nWhat are you doing at the end of the world? Are you busy? Will you save us?\\nWhat are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\\nWhat are you doing at the end of the world? Are you busy? Will you save us?\") == \"abdef\", \"Test 2 failed\"\n\nassert solution(\"0 69\\n1 194\\n1 139\\n0 47\\n1 66\\n\") == \"abdef\", \"Test 3 failed\"\n\nassert solution(\"4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\\n\") == \"Areyoubusy\", \"Test 4 failed\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0 69 1 194 1 139 0 47 1 66\") == \"abdef\"\nassert solution(\"4 1825 3 75 3 530 4 1829 4 1651 3 187 4 584 4 255 4 774 2 474\") == \"Areyoubusy\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n1 2\\n1 111111111111\") == \"Wh.\\n\"\nassert solution(\"0 69\\n1 194\\n1 139\\n0 47\\n1 66\") == \"abdef\\n\"\nassert solution(\"4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\") == \"Areyoubusy\\n\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('Input') == 'Wh.\\n', 'Expected output: Wh.\\nActual output:'+ solution('Input')\nassert solution('Input') == 'Areyoubusy\\n', 'Expected output: Areyoubusy\\nActual output:'+ solution('Input')"
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"Wh.\"\nassert solution(\"1 2\") == \"Wh.\"\nassert solution(\"1 111111111111\") == \"Wh.\"\n\nassert solution(\"0 69\") == \"abdef\"\nassert solution(\"1 194\") == \"abdef\"\nassert solution(\"1 139\") == \"abdef\"\n\nassert solution(\"0 47\") == \"Areyoubusy\"\nassert solution(\"1 66\") == \"Areyoubusy\"\n\nassert solution(\"4 1825\") == \"Areyoubusy\"\nassert solution(\"3 75\") == \"Areyoubusy\"\nassert solution(\"3 530\") == \"Areyoubusy\"\n\nassert solution(\"4 1829\") == \"Areyoubusy\"\nassert solution(\"4 1651\") == \"Areyoubusy\"\nassert solution(\"3 187\") == \"Areyoubusy\"\n\nassert solution(\"4 584\") == \"Areyoubusy\"\nassert solution(\"4 255\") == \"Areyoubusy\"\nassert solution(\"4 774\") == \"Areyoubusy\"\n\nassert solution(\"2 474\") == \"Areyoubusy\"\n\nassert solution(\"4 1825\") == \"Areyoubusy\"\nassert solution(\"3 75\") == \"Areyoubusy\"\nassert solution(\"3 530\") == \"Areyoubusy\"\n\nassert solution(\"4 1829\") == \"Areyoubusy\"\nassert solution(\"4 1651\") == \"Areyoubusy\"\nassert solution(\"3 187\") == \"Areyoubusy\"\n\nassert solution(\"4 584\") == \"Areyoubusy\"\nassert solution(\"4 255\") == \"Areyoubusy\"\nassert solution(\"4 774\") == \"Areyoubusy\"\n\nassert solution(\"2 474\") == \"Areyoubusy\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n1 2\\n1 111111111111\") == \"Wh.\"\nassert solution(\"0 69\\n1 194\\n1 139\\n0 47\\n1 66\") == \"abdef\"\nassert solution(\"4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\") == \"Areyoubusy\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"? +? -? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"? +? -? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"? +? -? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('? +? -? +? +? = 42') == 'Possible\\n9 + 13 - 39 + 28 + 31 = 42\\n'\nassert solution('? -? = 1') == 'Impossible\\n'\nassert solution('? = 1000000') == 'Possible\\n1000000 = 1000000\\n'"
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"? +? -? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"? +? -? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"? +? -? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"7 4 5\", \"Test case 1 failed\"\n\nprint(\"Test case 1 passed\")"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n1 2 0 2\\n0\\n0\\n0\\n\\n\\n\\n\\n\\n') == '7 4 5\\n'"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\"\n"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\\n\"\nassert solution(\"8\\n1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\\n7 4 5\\n7 4 5\\n\"\nassert solution(\"1\\n1 0\\n0\\n0\\n0\\n\") == \"1\\n1 0\\n1 0\\n\"\nassert solution(\"1\\n2 0\\n0\\n0\\n0\\n\") == \"0 1\\n0 1\\n0 1\\n\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input(\"Enter the dimensions of the matrix: \")) == \"7 4 5\", \"Test 1 Failed\"\nassert solution(input(\"Enter the dimensions of the matrix: \")) == \"7 4 5\", \"Test 2 Failed\"\nassert solution(input(\"Enter the dimensions of the matrix: \")) == \"7 4 5\", \"Test 3 Failed\"\nassert solution(input(\"Enter the dimensions of the matrix: \")) == \"7 4 5\", \"Test 4 Failed\"\nassert solution(input(\"Enter the dimensions of the matrix: \")) == \"7 4 5\", \"Test 5 Failed\"\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"7 4 5\", \"Test Case 1 failed\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\\n\", \"The solution is not as expected.\"\nassert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\\n\", \"The solution is not as expected.\"\nassert solution(\"3\\n1 2 0 2\\n0\\n0\\n0\\n\") == \"2 4 2\\n\", \"The solution is not as expected.\"\nassert solution(\"5\\n1 2 0 2\\n0\\n0\\n0\\n\") == \"5 5 5\\n\", \"The solution is not as expected.\"\nassert solution(\"1\\n0 1 1 1\\n1\\n1\\n0\\n\") == \"1 2 3 4\\n\", \"The solution is not as expected.\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(b'4\\n1 2 0 2\\n0\\n0\\n0\\n') == '7 4 5\\n', \"Test failed\"\n"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n1 2 0 2\\n0\\n0\\n0\\n') == '7 4 5'"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"7 4 5\\n\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\naabddc\") == \"Yes\"\nassert solution(\"3\\nabc\") == \"No\"\nassert solution(\"3\\njjj\") == \"Yes\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('aabddc') == 'Yes'\nassert solution('3abc') == 'No'\nassert solution('3jjj') == 'Yes'"
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aabddc\") == \"Yes\"\nassert solution(\"3abc\") == \"No\"\nassert solution(\"3jjj\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aabddc\") == \"Yes\", \"Test 1 failed\"\nassert solution(\"3abc\") == \"No\", \"Test 2 failed\"\nassert solution(\"3jjj\") == \"Yes\", \"Test 3 failed\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('abc') == 'No'\nassert solution('aabddc') == 'Yes'\nassert solution('jjj') == 'Yes'"
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aabddc\") == \"Yes\"\nassert solution(\"3abc\") == \"No\"\nassert solution(\"3jjj\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aabddc\") == \"Yes\"\nassert solution(\"3abc\") == \"No\"\nassert solution(\"3jjj\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\naabddc\\n\") == \"Yes\"\nassert solution(\"3\\nabc\\n\") == \"No\"\nassert solution(\"3\\njjj\\n\") == \"Yes\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aabddc\") == \"Yes\"\nassert solution(\"3abc\") == \"No\"\nassert solution(\"3jjj\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('aabddc') == 'Yes'\nassert solution('3abc') == 'No'\nassert solution('3jjj') == 'Yes'"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2\") == \"54\"\nassert solution(\"7 4\") == \"1728\"\n"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1728\", \"The output is incorrect.\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\") == \"54\"\nassert solution(\"7 4\") == \"1728\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n\") == \"54\"\nassert solution(\"7 4\\n\") == \"1728\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Solution does not match the expected output. Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\") == \"54\\n\"\nassert solution(\"7 4\") == \"1728\\n\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 2') == '54'\nassert solution('7 4') == '1728'"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\") == \"54\"\nassert solution(\"7 4\") == \"1728\"\n"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"The solution is incorrect. Expected: {expected}, but got: {solution(input())}\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\") == \"54\"\nassert solution(\"7 4\") == \"1728\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Test case failed. Output: \" + output()"
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\\n\", \"Expected output is not correct\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\\n\", \"Expected output is not correct\"\n\nfrom typing import List"
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''5 6\nWWBBBW\nWWBBBW\nWWBBBW\nWWWWWW\nWWWWWW\n''') == '2 4'\n\nassert solution('''3 3\nWWW\nBWW\nWWW\n''') == '2 1'"
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\\n\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\\n\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4\") == \"4 4\"\nassert solution(\"1 2 3 4 5\") == \"1 2\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"1 2\"\nassert solution(\"1 W 2 W B 3 B W 4 W B 5 W W W\") == \"2 4\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW') == '2 4'\nassert solution('3 3\\nWWW\\nBWW\\nWWW') == '2 1'"
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\\n\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\\n\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n5 6\nWWBBBW\nWWBBBW\nWWBBBW\nWWWWWW\nWWWWWW\n''') == '''\n2 4\n'''\n\nassert solution('''\n3 3\nWWW\nBWW\nWWW\n''') == '''\n2 1\n'''"
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n\") == \"10 9 10 10 9\\n\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\\n\") == \"5 6\\n\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n\") == \"2 2 2\\n\"\nassert solution(\"1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n\") == \"3 3 3 3\\n\"\nassert solution(\"1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n\") == \"4 4 4 4 4\\n\"\nassert solution(\"1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n\") == \"5 5 5 5 5 5\\n\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n\") == \"10 9 10 10 9\\n\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\\n\") == \"5 6\\n\"\n"
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '''10 9 10 10 9\n5 6'''"
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n\") == \"10 9 10 10 9\\n\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\\n\") == \"5 6\\n\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n\") == \"10 9 10 10 9\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\\n\") == \"5 6\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n\") == \"10 9 10 10 9\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\\n\") == \"5 6\"\nassert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n\") == \"10 9 10 10 9\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\\n\") == \"5 6\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"10 9 10 10 9\"\nassert solution() == \"5 6\"\nassert solution() == \"10 9 10 10 9\"\nassert solution() == \"5 6\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n\") == \"10 9 10 10 9\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\\n\") == \"5 6\"\n"
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\") == \"10 9 10 10 9\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\") == \"5 6\"\n"
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n\") == \"10 9 10 10 9\\n\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\\n\") == \"5 6\\n\"\nassert solution(\"5 7\\n3 4\\n1 2\\n\") == \"10 9\\n\"\nassert solution(\"5 7\\n2 3\\n\") == \"10 9\\n\"\nassert solution(\"5 7\\n3 4\\n1 2\\n\") == \"10 9\\n\"\nassert solution(\"5 7\\n2 3\\n\") == \"10 9\\n\"\nassert solution(\"5 7\\n3 4\\n1 2\\n\") == \"10 9\\n\"\nassert solution(\"5 7\\n2 3\\n\") == \"10 9\\n\"\nassert solution(\"5 7\\n3 4\\n1 2\\n\") == \"10 9\\n\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n') == '2\\n'\nassert solution('1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n') == '2\\n'\nassert solution('1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n2 0 0\\n1 1 0\\n') == '0\\n'\nassert solution('1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n2 0 0\\n2 0 0\\n') == '0\\n'\nassert solution('1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n') == '0\\n'\nassert solution('1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 0 0\\n2 "
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"No solution found\", \"The solution should be an empty string\"\nassert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n\") == \"2\", \"The output should be '2'\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n\") == \"2\", \"The output should be '2'\"\n"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n') == '2'\nassert solution('1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n') == '2'\nassert solution('1 1\\n-1 -1\\n1\\n0 0 0\\n0 0 0\\n0 0 0\\n') == '0'"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\") == \"2\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\") == \"2\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3') == 2\nassert solution('1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n') == 2\nassert solution('1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\\n') == 2\nassert solution('1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n') == 2"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case {case} failed: expected {expected_output}, got {solution(input())}.\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\\n\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n\") == \"2\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\") == \"2\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n3 4\\n\") == \"Kevin\"\nassert solution(\"1 2\\n3\\n\") == \"Nicky\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\"\nassert solution(\"1 2\\n3\") == \"Nicky\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n3 4\\n\") == \"Kevin\"\nassert solution(\"1 2\\n3\\n\") == \"Nicky\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 1\\n3 4\\n') == 'Kevin'\nassert solution('1 2\\n3\\n') == 'Nicky'"
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 1\\n3 4\\n') == 'Kevin\\n'\nassert solution('1 2\\n3\\n') == 'Nicky\\n'"
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\\n\"\nassert solution(\"1 2\\n3\") == \"Nicky\\n\"\n"
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 1\\n3 4\\n') == 'Kevin\\n'\nassert solution('1 2\\n3\\n') == 'Nicky\\n'"
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 1\\n3 4\\n') == 'Kevin'\nassert solution('1 2\\n3\\n') == 'Nicky'\n"
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\"\nassert solution(\"1 2\\n3\") == \"Nicky\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\"\nassert solution(\"1 2\\n3\") == \"Nicky\""
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed: \\nExpected output: {expected_output}\\nActual output: {solution(stdin)}\""
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"For input {input()}, expected output {expected_output}, but got {solution(input())} instead.\"\n"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"3\"\nassert solution(2) == \"1\\n1 1 1\"\nassert solution(2) == \"-1\"\n"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'Output\\n3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 3\\n2\\n1 2 3\\n2\") == \"3\\n1 2 3\\n1 2 3\\n2\"\nassert solution(\"3\\n2 2 2\\n1\\n2 2 2\\n2\") == \"1\\n1 1 1\\n2\\n1 1 1\"\nassert solution(\"2\\n2 1\\n1\\n2 1\\n2\") == \"-1\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2 3\\n') == '3\\n1 2 3\\n'\nassert solution('3\\n2 2 2\\n') == '1\\n1 1 1\\n2\\n'\nassert solution('2\\n2 1\\n') == '-1\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"3\\n1 2 3\\n1 2 3\"\nassert solution(3) == \"3\\n1 2 3\\n1 2 3\"\nassert solution(3) == \"3\\n1 2 3\\n1 2 3\"\nassert solution(2) == \"1\\n1 1 1\\n2\"\nassert solution(2) == \"1\\n1 1 1\\n2\"\nassert solution(2) == \"1\\n1 1 1\\n2\"\nassert solution(2) == \"-1\\ndef solution(stdin: str) -> str: pass\""
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3\\n1 2 3\\n1 2 3\\n2\\n1\\n1 1 1\\n\"\nassert solution() == \"1\\n1 1 1\\n2\\n\"\nassert solution() == \"-1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"3\\n1 2 3\") == \"3\\n1 2 3\\n1 2 3\\n\"\nassert solution(stdin=\"3\\n2 2 2\") == \"1\\n1 1 1\\n2\\n\"\nassert solution(stdin=\"2\\n2 1\") == \"-1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\\n2\\n2 2 2\\n2\\n2 1\") == \"3\\n1 2 3\\n2\\n1 1 1\\n1\\n2\\n-1\"\nassert solution(\"3\\n2 2 2\\n2\\n2 1\") == \"1\\n1 1 1\\n2\\n1\\n1\\n2\"\nassert solution(\"2\\n2 1\") == \"-1\"\nassert solution(\"2\\n2 2\") == \"2\"\nassert solution(\"1\\n2 1\") == \"2\"\nassert solution(\"1\\n2 2\") == \"1\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(11) == 6\nassert solution(01) == 2\nassert solution(1) == 1"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11\") == 6, \"Expected 6, got {}\".format(solution(\"11\"))\nassert solution(\"01\") == 2, \"Expected 2, got {}\".format(solution(\"01\"))\nassert solution(\"1\") == 1, \"Expected 1, got {}\".format(solution(\"1\"))"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(11) == 6\nassert solution(01) == 2\nassert solution(1) == 1\n"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('11') == '6', '11'\nassert solution('01') == '2', '01'\nassert solution('1') == '1', '1'"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('11') == '6', \"Case 1\"\nassert solution('01') == '2', \"Case 2\"\nassert solution('1') == '1', \"Case 3\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(11) == 6, \"11 should be 6\"\nassert solution(01) == 2, \"01 should be 2\"\nassert solution(1) == 1, \"1 should be 1\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11\") == \"6\", \"The given code is incorrect. Expected '6', but got '{}'\".format(solution(\"11\"))\nassert solution(\"01\") == \"2\", \"The given code is incorrect. Expected '2', but got '{}'\".format(solution(\"01\"))\nassert solution(\"1\") == \"1\", \"The given code is incorrect. Expected '1', but got '{}'\".format(solution(\"1\"))"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11\") == \"6\", \"11\"\nassert solution(\"01\") == \"2\", \"01\"\nassert solution(\"1\") == \"1\", \"1\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(input())) == str(1)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(4)\n"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n15\\n\") == \"1\\n\"\nassert solution(\"3\\n1 1 2\\n\") == \"3\\n\"\nassert solution(\"2\\n5 7\\n\") == \"4\\n\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n15\") == \"1\\n\"\nassert solution(\"3\\n1 1 2\") == \"3\\n\"\nassert solution(\"2\\n5 7\") == \"4\\n\"\n\nfrom itertools import combinations"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n15\\n\") == \"1\\n\"\nassert solution(\"3\\n1 1 2\\n\") == \"3\\n\"\nassert solution(\"2\\n5 7\\n\") == \"4\\n\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n15\\n\") == \"1\\n\"\nassert solution(\"3\\n1 1 2\\n\") == \"3\\n\"\nassert solution(\"2\\n5 7\\n\") == \"4\\n\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"3\"\nassert solution(1) == \"1\"\nassert solution(2) == \"2\"\nassert solution(5) == \"4\"\nassert solution(10) == \"6\"\nassert solution(15) == \"1\"\nassert solution(30) == \"3\"\nassert solution(1000000007) == \"1\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n15\\n\") == \"1\\n\"\nassert solution(\"3\\n1 1 2\\n\") == \"3\\n\"\nassert solution(\"2\\n5 7\\n\") == \"4\\n\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '1\\n'\n"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n15\\n') == '1\\n'\nassert solution('3\\n1 1 2\\n') == '3\\n'\nassert solution('2\\n5 7\\n') == '4\\n'"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n15\") == \"1\\n\"\nassert solution(\"3\\n1 1 2\") == \"3\\n\"\nassert solution(\"2\\n5 7\") == \"4\\n\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\"\n"
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\"\n"
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n1 0 2\\n2 0 1\\n') == 'YES'\nassert solution('2\\n1 0\\n0 1\\n') == 'YES'\nassert solution('4\\n1 2 3 0\\n0 3 2 1\\n') == 'NO'\n"
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\") == \"NO\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\\n3\\n1 0 2\\n2 0 1\\n\") == \"YES\"\nassert solution(\"Input\\n2\\n1 0\\n0 1\\n\") == \"YES\"\nassert solution(\"Input\\n4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n4\\n1 2 3 0\\n0 3 2 1\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\\n4\\n1 2 3 0\\n0 3 2 1\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\") == \"NO\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n8 10 9 9 8 10\\n1 1 1 1 1 1\\n\") == \"9000\\n\"\nassert solution(\"6\\n8 10 9 9 8 10\\n1 10 5 5 1 10\\n\") == \"1160\\n\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n8 10 9 9 8 10\\n1 1 1 1 1 1\\n\") == \"9000\\n\"\nassert solution(\"6\\n8 10 9 9 8 10\\n1 10 5 5 1 10\\n\") == \"1160\\n\"\n"
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 9000, \"Expected result 9000, but got {}\".format(solution())\n\nassert solution() == 1160, \"Expected result 1160, but got {}\".format(solution())"
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"9000\"\nassert solution(input()) == \"1160\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '9000', 'Incorrect output'\nassert solution(input()) == '1160', 'Incorrect output'"
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6\\n8 10 9 9 8 10\\n1 1 1 1 1 1\\n') == '9000'\nassert solution('6\\n8 10 9 9 8 10\\n1 10 5 5 1 10\\n') == '1160'"
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 9000\nassert solution(4) == 1160"
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(6) == 9000, \"Expected 9000, got {0}\".format(solution(6))\nassert solution(6) == 1160, \"Expected 1160, got {0}\".format(solution(6))"
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n8 10 9 9 8 10\\n1 1 1 1 1 1\\n\") == \"9000\"\nassert solution(\"6\\n8 10 9 9 8 10\\n1 10 5 5 1 10\\n\") == \"1160\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n8 10 9 9 8 10\\n1 1 1 1 1 1\") == \"9000\"\nassert solution(\"6\\n8 10 9 9 8 10\\n1 10 5 5 1 10\") == \"1160\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '6'"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n2 3\\n1 4\\n1 4\\n2 1\") == \"6\\n\"\nassert solution(\"8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4\") == \"1\\n\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n2 3\\n1 4\\n1 4\\n2 1\") == 6\nassert solution(\"8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4\") == 1"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n2 3\\n1 4\\n1 4\\n2 1\") == 6\nassert solution(\"8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4\") == 1"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '6'"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n2 3\\n1 4\\n1 4\\n2 1\") == \"6\\n\"\nassert solution(\"8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4\") == \"1\\n\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 1"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n2 3\\n1 4\\n1 4\\n2 1\") == 6\nassert solution(\"8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4\") == 1"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"6\\n\", \"Output incorrect\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"1\\n\"\n"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 2 3 4 6\\n\\n4\\n2 4 6 8\\n\\n3\\n2 6 9\\n\") == \"-1\"\nassert solution(\"4\\n2 4 6 8\\n\\n3\\n2 6 9\\n\") == \"4\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n2 2 3 4 6\\n\\n4\\n2 4 6 8\\n\\n3\\n2 6 9\\n') == '-1\\n\\n4\\n2 4 4 4\\n\\n2\\n2 6 6\\n'\nprint('All tests passed.')"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 5, \"Solution should return 5\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 2 3 4 6\\n4\\n2 4 6 8\\n3\\n2 6 9\\n\") == \"-1\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 2 3 4 6\\n\\n4\\n2 4 6 8\\n\\n3\\n2 6 9\\n\") == \"5\\n\"\nassert solution(\"4\\n2 4 6 8\\n\\n3\\n2 6 9\\n\") == \"-1\\n\"\nassert solution(\"3\\n2 6 9\\n\\n2 6 9\\n\") == \"4\\n\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 2 3 4 6\\n\") == \"5\\n\"\nassert solution(\"4\\n2 4 6 8\\n\") == \"-1\\n\"\nassert solution(\"3\\n2 6 9\\n\") == \"4\\n\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed. Expected output: {expected_output}, Actual output: {solution(stdin)}\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 2 3 4 6\\n4\\n2 4 6 8\\n3\\n2 6 9\\n\") == \"5\\n\"\nassert solution(\"4\\n2 4 6 8\\n3\\n2 6 9\\n\") == \"-1\\n\"\nassert solution(\"3\\n2 6 9\\n\") == \"4\\n\"\nassert solution(\"1\\n2 1 1 1 1\\n\") == \"-1\\n\"\nassert solution(\"2\\n2 2 2 2\\n\") == \"5\\n\"\nassert solution(\"5\\n2 1 1 1 1\\n3\\n2 2 2 2\\n\") == \"-1\\n\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 2 3 4 6\\n\") == \"5\\n\"\nassert solution(\"4\\n2 4 6 8\\n\") == \"-1\\n\"\nassert solution(\"3\\n2 6 9\\n\") == \"4\\n\"\nassert solution(\"5\\n2 2 3 4 6\\n\") == \"5\\n\"\nassert solution(\"4\\n2 4 6 8\\n\") == \"-1\\n\"\nassert solution(\"3\\n2 6 9\\n\") == \"4\\n\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abacabaca\") == 3\nassert solution(\"abaca\") == 0"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('abacabaca') == 'aca'\nassert solution('abaca') == 0"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\"\n\nprint(\"Example 1:\")\nassert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nprint(\"Example 2:\")\nassert solution(\"abaca\") == \"0\"\nprint(\"Example 3:\")\nassert solution(\"abacac\") == \"0\"\nprint(\"Example 4:\")\nassert solution(\"abab\") == \"0\"\nprint(\"Example 5:\")\nassert solution(\"acacac\") == \"0\"\n"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('abacabaca') == 3\nassert solution('abaca') == 0"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abacabaca\") == \"aca\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abacabaca\") == 3\nassert solution(\"abaca\") == 0\n"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Solution is incorrect. Expected output: {expected_output}, but got {solution(input())}\""
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\\n4 5\\n11..2\\n#..22\\n#.323\\n.#333\\nOutput\\n2\\nInput\\n1 5\\n1#2#3\\n\") == 2\nassert solution(\"Input\\n1 5\\n1#2#3\\n\") == -1"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 5\\n11..2\\n#..22\\n#.323\\n.#333\\nOutput') == 2\nassert solution('1 5\\n1#2#3\\n') == -1"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\\nOutput\") == 2\nassert solution(\"1 5\\n1#2#3\\n\") == -1\nassert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\\nOutput\") == 2\nassert solution(\"1 5\\n1#2#3\\n\") == -1\nassert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\\nOutput\") == 2\nassert solution(\"1 5\\n1#2#3\\n\") == -1\nassert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\\nOutput\") == 2\nassert solution(\"1 5\\n1#2#3\\n\") == -1\nassert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\\nOutput\") == 2\nassert solution(\"1 5\\n1#2#3\\n\") == -1\nassert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\\nOutput\") == 2\nassert solution(\"1 5\\n1#2#3\\n\") == -1\nassert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\\nOutput\") == 2\nassert solution(\"1 5\\n1#2#3\\n\") == -1\nassert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\\nOutput\") == 2\nassert solution(\"1 5\\n1#2#3\\n\") == -1\nassert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\\nOutput\") == 2\nassert solution(\"1 5\\n1#2#3\\n\") == -1\nassert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\\nOutput\") == 2\nassert solution(\"1 5\\n1#2#3\\n\") == -1\nassert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\\nOutput\") == 2\nassert solution(\"1 5\\n1#2#3\\n\") == -1\nassert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\\nOutput\") == 2\nassert solution(\"1 5\\n1#2#3\\n\") == -1\nassert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\\nOutput\") == 2\nassert solution(\"1 5\\n1#2#3\\n\") == -1\nassert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\\nOutput\") == 2\nassert solution(\"1 5\\n1#2#3\\n\") == -1\nassert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\\nOutput\") == 2\nassert solution(\"1 5\\n1#2#3\\n\") == -1\nassert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\\nOutput\") == 2\nassert solution(\"1 5\\n1#2#3\\n\") == -1\nassert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\\nOutput\") == 2\nassert solution(\"1 5\\n1#2#3\\n\") == -1\nassert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\\nOutput\") == 2\nassert solution"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 5\\n11..2\\n#..22\\n#.323\\n.#333') == 2\nassert solution('1 5\\n1#2#3') == -1"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''4 5\n11..2\n"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == -1"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Got '{solution(input())}' expected '{expected}'\""
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 2\nassert solution() == 2\nassert solution() == 1\nassert solution() == -1"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 5\\n11..2\\n#..22\\n#.323\\n.#333') == 2\nassert solution('1 5\\n1#2#3\\n') == -1"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 2\nassert solution() == -1\n"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8)())(()\") == 6\nassert solution(\"3(()\") == -1"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"(())()\") == \"()()()\"\nassert solution(\"())()\") == \"()()()\"\nassert solution(\"(())()())\") == \"()()()\"\nassert solution(\"(()\")) == \"-1\"\nassert solution(\"(()))(\") == \"-1\"\nassert solution(\"(()))(\") == \"-1\"\nassert solution(\"(()(()))\") == \"()()\"\nassert solution(\"(())\") == \"-1\"\nassert solution(\"()\") == \"-1\"\nassert solution(\"(())()()()()\") == \"-1\"\n\nsolution = \"\"\"\nfrom typing import List"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('8\\n())((())(\\n') == 6, 'Test Case 1 failed')\nassert solution('3\\n(()\\n') == -1, 'Test Case 2 failed')\nassert solution('8\\n()()\\n()\\n()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n()()\\n"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8)\\n(()()\\n\") == \"6\"\nassert solution(\"3)\\n(()\") == \"-1\""
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"The output is '{solution(input())}' instead of '{expected_output}'.\""
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(8) == 6\nassert solution(3) == -1\n"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('8') == 6\nassert solution('3') == -1"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''8\n())((())(''') == 6,'should return 6')\nassert solution('''3\n(()''') == -1,'should return -1')"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('8') == '6'\nassert solution('3') == '-1'\nassert solution('5') == '6'\nassert solution('10') == '6'\nassert solution('2') == '3'\nassert solution('8') == '6'\n"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8\\n))((())(\") == 6\nassert solution(\"3\\n(()\") == -1"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_string) == expected_output, \"Expected output: {}\\nGot: {}\".format(expected_output, solution(input_string))"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '1\\n3'\nassert solution() == '4\\n1 2 3 4'"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 5\\n4 4 0\\n1 3\\n3 2\\n3 1\\n\") == \"1\\n3\\n3\\n\"\nassert solution(\"4 5 4\\n2 1 0 3\\n4 3\\n3 2\\n1 2\\n1 4\\n1 3\\n\") == \"4\\n1 2 3 4\\n\""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_string) == output_string"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\\n3\\n\"\nassert solution(input()) == \"4\\n1 2 3 4\\n\"\n"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1\\n3 4\" # expected output"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\\n3 3\\n3 2\\n3 1\""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3') == '8'"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n\") == \"8\\n\""
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"The solution is incorrect. Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3\\n') == '8\\n'"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"8\\n\", \"Incorrect output\"\n"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"8\""
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"8\" # Correct"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n\") == \"8\\n\""
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"8\"\nassert solution(\"2 4\") == \"37\"\nassert solution(\"3 3\") == \"3\"\nassert solution(\"4 4\") == \"793\"\nassert solution(\"5 5\") == \"20216\""
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '8'"
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '4', \"The solution is incorrect.\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(r'5 2\\n1 2\\n2 3\\n') == '5\\n'\nassert solution(r'100 3\\n1 2\\n2 1\\n3 1\\n') == '4\\n'\nassert solution(r'1 2\\n1 1\\n2 100\\n') == '100\\n'"
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 2\\n1 2\\n2 3\\n') == '5\\n'\nassert solution('100 3\\n1 2\\n2 1\\n3 1\\n') == '4\\n'\nassert solution('1 2\\n1 1\\n2 100\\n') == '100\\n'"
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '100'"
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n2 3\\n\") == \"5\\n\"\nassert solution(\"1 2\\n2 1\\n3 1\\n\") == \"4\\n\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\\n\"\nassert solution(\"1 2\\n1 1\\n2 100\\n3 2\\n4 3\\n5 4\\n\") == \"125\\n\"\n"
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n1 2\\n2 3\\n\") == \"5\\n\"\nassert solution(\"100 3\\n1 2\\n2 1\\n3 1\\n\") == \"4\\n\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\\n\"\n"
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test {i+1} failed: {output}!= {solution(input())}\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '5'\nassert solution() == '5'\nassert solution() == '4'\nassert solution() == '100'\nassert solution() == '100'\nassert solution() == '100'"
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 2\\n1 2\\n2 3\\n') == '5\\n'\nassert solution('100 3\\n1 2\\n2 1\\n3 1\\n') == '4\\n'\nassert solution('1 2\\n1 1\\n2 100\\n') == '100\\n'"
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test case {index + 1} failed\"\nprint(f\"Test case {index + 1} passed\")\n"
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('aaabb') == '6'\nassert solution('usaco') == '1'\nassert solution('lol') == '2'"
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aaabb\") == 6\nassert solution(\"usaco\") == 1\nassert solution(\"lol\") == 2"
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aaabb\") == 6, \"Incorrect output for the first example\"\nassert solution(\"usaco\") == 1, \"Incorrect output for the second example\"\nassert solution(\"lol\") == 2, \"Incorrect output for the third example\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('aaabb') == 6, \"Output: %s, expected: %s\" % (solution('aaabb'), 6)\nassert solution('usaco') == 1, \"Output: %s, expected: %s\" % (solution('usaco'), 1)\nassert solution('lol') == 2, \"Output: %s, expected: %s\" % (solution('lol'), 2)"
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aaabb\") == 6, \"Incorrect solution: 'aaabb' should have 6 occurrences\"\nassert solution(\"usaco\") == 1, \"Incorrect solution: 'usaco' should have 1 occurrence\"\nassert solution(\"lol\") == 2, \"Incorrect solution: 'lol' should have 2 occurrences\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aaabb\") == \"6\"\nassert solution(\"usaco\") == \"1\"\nassert solution(\"lol\") == \"2\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aaabb\") == 6, \"Expected output: 6, actual output: {}\".format(solution(\"aaabb\"))\nassert solution(\"usaco\") == 1, \"Expected output: 1, actual output: {}\".format(solution(\"usaco\"))\nassert solution(\"lol\") == 2, \"Expected output: 2, actual output: {}\".format(solution(\"lol\"))"
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aaabb\") == 6, \"Incorrect solution\"\nassert solution(\"usaco\") == 1, \"Incorrect solution\"\nassert solution(\"lol\") == 2, \"Incorrect solution\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aaabb\") == 6\nassert solution(\"usaco\") == 1\nassert solution(\"lol\") == 2"
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aaabb\") == 6, \"The solution should return 6, but it returns {}\".format(solution(\"aaabb\"))\nassert solution(\"usaco\") == 1, \"The solution should return 1, but it returns {}\".format(solution(\"usaco\"))\nassert solution(\"lol\") == 2, \"The solution should return 2, but it returns {}\".format(solution(\"lol\"))"
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Output'"
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 1\nassert solution() == 2"
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"4\\n\") == \"2\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"2\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1') == '1\\n'\nassert solution('4') == '2\\n'"
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"4\\n\") == \"2\\n\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == \"1\"\nassert solution(4) == \"2\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"2\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 4\\n2 5\\n3 6\") == \"1 2\\n2 1\\n1 2\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\") == \"1 1\\n2 2\\n3 3\\n4 4\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\") == \"1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\"\nassert solution(\"1 2\\n2 1\\n1 2\") == \"-1\"\nassert solution(\"1 1\\n1 2\\n1 3\\n2 2\\n2 3\\n3 2\\n3 3\\n4 2\\n4 3\") == \"1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 4\\n2 5\\n3 6\\n\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"4\\n1 4\\n2 5\\n3 6\\n\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"2\\n1 4\\n2 5\\n3 6\\n\") == \"2 1\\n1 2\\n2 1\\n\"\nassert solution(\"3\\n1 4\\n2 5\\n3 6\\n\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"5\\n1 4\\n2 5\\n3 6\\n\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"3\\n1 4\\n1 5\\n3 6\\n\") == \"2 1\\n1 2\\n2 1\\n\"\nassert solution(\"4\\n1 4\\n2 5\\n2 6\\n\") == \"1 2\\n1 2\\n2 1\\n1 2\\n\"\nassert solution(\"4\\n1 4\\n2 5\\n2 6\\n\") == \"1 2\\n1 2\\n2 1\\n1 2\\n\"\nassert solution(\"5\\n1 4\\n2 5\\n2 6\\n\") == \"1 2\\n1 2\\n2 1\\n1 2\\n\"\nassert solution(\"3\\n1 4\\n1 5\\n1 6\\n\") == \"1 2\\n1 2\\n2 1\\n1 2\\n\"\nassert solution(\"4\\n1 4\\n2 5\\n2 6\\n\") == \"1 2\\n1 2\\n2 1\\n1 2\\n\"\nassert solution(\"5\\n1 4\\n2 5\\n2 6\\n\") == \"1 2\\n1 2\\n2 1\\n1 2\\n\"\nassert solution(\"3\\n1 4\\n1 5\\n1 6\\n\") == \"1 2\\n1 2\\n2 1\\n1 2\\n\"\nassert solution(\"4\\n1 4\\n2 5\\n2 6\\n\") == \"1 2\\n1 2\\n2 1\\n1 2\\n\"\nassert solution(\"5\\n1 4\\n2 5\\n2 6\\n\") == \"1 2\\n1 2\\n2 1\\n1 2\\n\"\nassert solution(\"2\\n1 4\\n2 5\\n2 6\\n\") == \"2 1\\n1 2\\n2 1\\n\"\nassert solution(\"4\\n1 4\\n2 5\\n2 6\\n\") == \"1 2\\n1 2\\n2 1\\n1 2\\n\"\nassert solution(\"5\\n1 4\\n2 5\\n2 6\\n\") == \"1 2\\n1 2\\n2 1\\n1 2\\n\"\nassert solution(\"3\\n1 4\\n1 5\\n1 6\\n\") == \"1 2\\n1 2\\n2 1\\n1 2\\n\"\nassert solution(\"4\\n1 4\\n2 5\\n2 6\\n\") == \"1 2\\n1 2\\n2 1\\n1 2\\n\"\nassert solution(\"5\\n1 4\\n2 5\\n2 6\\n\") == \"1 2\\n1 2\\n2 1\\n1 2\\n\"\nassert solution(\"2\\n1 4\\n2 5\\n2 6\\n\") == \"2 1\\n1 2\\n2 1\\n\"\nassert solution(\"4\\n1 4\\n2 5\\n2 6\\n\") == \"1 2\\n1 2\\n2 1\\n1 2\\n\"\nassert solution(\"5\\n1 "
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n1 4\\n2 5\\n3 6') == '1 2\\n2 1\\n1 2'\nassert solution('4\\n1 3\\n2 4\\n3 5\\n') == '-1'\nassert solution('4\\n1 1\\n2 2\\n3 3\\n') == '-1'\nassert solution('4\\n1 2\\n2 3\\n3 4\\n') == '-1'\nassert solution('4\\n1 3\\n2 4\\n3 5\\n') == '-1'"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"3\n1 4\n2 5\n3 6\"\"\") == \"\"\"1 2\n2 1\n1 2\"\"\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''3\n1 4\n2 5\n3 6''') == '''1 2\n2 1\n1 2\n'''"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('example.txt')) == 1\nassert solution(open('input.txt')) == 1\nassert solution(open('input.txt')) == 2\nassert solution(open('input.txt')) == 1\nassert solution(open('input.txt')) == -1\nassert solution(open('input.txt')) == 1\nassert solution(open('input.txt')) == 2\nassert solution(open('input.txt')) == 1\nassert solution(open('input.txt')) == -1\nassert solution(open('input.txt')) == 1\nassert solution(open('input.txt')) == 2\nassert solution(open('input.txt')) == 1\nassert solution(open('input.txt')) == -1"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 4\\n2 5\\n3 6\\n\") == \"1 2\\n2 1\\n1 2\\n\"\nprint(\"All tests pass!\")"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\n\nn = int(stdin.readline())\na = list(map(int, stdin.readline().split()))\nb = list(map(int, stdin.readline().split()))"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"1 2\\n2 1\"\nassert solution(5) == \"1 1\\n2 2\\n1 2\"\nassert solution(1) == -1\nassert solution(4) == -1\nassert solution(6) == -1"
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\\n\"\nassert solution(\"2\") == \"2\\n\"\nassert solution(\"3\") == \"2 1\\n\"\nassert solution(\"8\") == \"4\\n\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"2 1\\n\"\nassert solution(8) == \"4\\n\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 2\nassert solution(8) == 4\n"
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == \"1\"\nassert solution(2) == \"2\"\nassert solution(3) == \"2 1\"\nassert solution(8) == \"4\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == [1]\nassert solution(2) == [2]\nassert solution(3) == [2, 1]\nassert solution(8) == [4]\n"
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"2\\n1\"\nassert solution(6) == \"2\\n2\\n1\"\nassert solution(10) == \"2\\n2\\n2\\n1\\n2\\n2\\n1\\n3\\n3\\n1\\n3\\n3\\n2\\n4\"\nassert solution(15) == \"4\\n3\\n2\\n1\\n3\\n3\\n2\\n2\\n3\\n3\\n2\\n3\\n4\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"2\\n1\\n2\\n1\"\nassert solution(8) == \"4\\n1\\n2\\n1\\n2\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n3\\n1\\n4\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"2 1\"\nassert solution(8) == \"4\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2 1'\nassert solution('8') == '4'"
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\\n1\\n2\\n2\\n2\\n2\\n1\\n2\\n2\\n2\\n1\\n3\\n2\\n3\\n2\\n1\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\n2\\n3\\n2\\n1\\n2\\n4\\"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0rTrT022\") == \"02TrrT20\"\nassert solution(\"aA\") == \"a A\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0rTrT022\") == \"02TrrT20\", \"0rTrT022\"\nassert solution(\"aA\") == \"a A\", \"aA\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aabaac\") == \"2\\naba aca\"\nassert solution(\"0rTrT022\") == \"1\\n02TrrT20\"\nassert solution(\"aA\") == \"2\\nA A\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('aabaac') == ['aba aca']\nassert solution('0rTrT022') == ['02TrrT20']\nassert solution('aA') == ['a A']\n"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test {i+1} failed. Expected output: {expected_output}, got: {solution(input())}\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('abc') == 'abc'\nassert solution('Hello') == 'Helo'\nassert solution('aabaac') == 'aba aca'\nassert solution('0rTrT022') == '02TrrT20'\nassert solution('aA') == 'a A'"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\naabaac\") == \"2\\naba aca\"\nassert solution(\"8\\n0rTrT022\") == \"1\\n02TrrT20\"\nassert solution(\"2\\naA\") == \"2\\nA\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'aba aca\\n02TrrT20'"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"aba aca \"\nassert solution() == \"02TrrT20\"\nassert solution() == \"a A\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output\n"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '2'\nassert solution() == '0'\nassert solution() == '1'"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\", \"Expected output: 2\"\nassert solution(input()) == \"0\", \"Expected output: 0\"\nassert solution(input()) == \"1\", \"Expected output: 1\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\na**d\\n2\\nabcd\\nacbd\\n') == 2\nassert solution('5\\nlo*er\\n2\\nlover\\nloser\\n') == 0\nassert solution('3\\na*a\\n2\\naaa\\aba\\n') == 1"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\na**d\\n2\\abcd\\nacbd\") == \"2\"\nassert solution(\"5\\nlo*er\\n2\\lover\\nloser\") == \"0\"\nassert solution(\"3\\na*a\\n2\\aaa\\aba\") == \"1\"\nassert solution(\"4\\na**d\\n2\\abcd\\nacbd\") == \"2\"\nassert solution(\"5\\nlo*er\\n2\\lover\\nloser\") == \"0\"\nassert solution(\"3\\na*a\\n2\\aaa\\aba\") == \"1\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\na**d\\n2\\abcd\\nacbd\\n\") == \"2\"\nassert solution(\"5\\nlo*er\\n2\\lover\\nloser\\n\") == \"0\"\nassert solution(\"3\\na*a\\n2\\aaa\\aba\\n\") == \"1\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"a**d\") == 2\nassert solution(\"abcd\") == 2\nassert solution(\"acbd\") == 0\nassert solution(\"lo*er\") == 0\nassert solution(\"a*a\") == 1"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"a**d\") == \"2\", \"Example 1\"\nassert solution(\"lo*er\") == \"0\", \"Example 2\"\nassert solution(\"a*a\") == \"1\", \"Example 3\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\na**d\\n2\\abcd\\nacbd\\n\") == \"2\", \"Expected output: '2', but got: '{}'.\".format(solution(\"4\\na**d\\n2\\abcd\\nacbd\\n\"))\nassert solution(\"5\\nlo*er\\n2\\lover\\nloser\\n\") == \"0\", \"Expected output: '0', but got: '{}'.\".format(solution(\"5\\nlo*er\\n2\\lover\\nloser\\n\"))\nassert solution(\"3\\na*a\\n2\\aaa\\aba\\n\") == \"1\", \"Expected output: '1', but got: '{}'.\".format(solution(\"3\\na*a\\n2\\aaa\\aba\\n\"))"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    4\n    a**d\n    2\n    acbd\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    5\n    lo*er\n    2\n    lover\n    loser\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n    3\n    a*a\n    2\n    aaa\n    aba\n    \"\"\"\n) == \"1\\n\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 1 1\\n1 0 0 0 4\\n') == '1\\n'\nassert solution('6 1 2\\n3 8 0 1 0 0\\n') == '2\\n'"
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '1'"
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\\n\") == \"1\\n\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\\n\") == \"2\\n\"\nassert solution(\"5 1 2\\n3 8 0 1 0 0\\n\") == \"1\\n\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\") == \"1\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\") == \"2\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == output, f\"Test failed. Expected output: {output}, but got: {solution(input)}\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\") == \"1\\n\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\") == \"2\\n\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\\n\") == \"1\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\\n\") == \"2\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 1 1\\n1 0 0 0 4') == '1\\n'\nassert solution('6 1 2\\n3 8 0 1 0 0') == '2\\n'"
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\\n\") == \"1\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\\n\") == \"2\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\\n\") == \"1\\n\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\\n\") == \"2\\n\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(10) == \"172\"\nassert solution(100) == \"1\"\nassert solution(101) == \"1\"\nassert solution(102) == \"40\"\nassert solution(103) == \"Palindromic tree is better than splay tree\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1, 1) == 40\nassert solution(1, 42) == 1\nassert solution(6, 4) == 172"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin: str) == \"Palindromic tree is better than splay tree\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Palindromic tree is better than splay tree\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 1') == '40', \"The given input is incorrect\"\nassert solution('1 42') == '1', \"The given input is incorrect\"\nassert solution('6 4') == '172', \"The given input is incorrect\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '172', \"The maximum number of primes is 172, but it is not 172.\"\n"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"Got '{solution(stdin)}', expected '{expected_output}'\"\n"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"40\"\nassert solution(\"1 42\") == \"1\"\nassert solution(\"6 4\") == \"172\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Palindromic tree is better than splay tree\"\nassert solution(stdin) == \"Palindromic tree is better than splay tree\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"Palindromic tree is better than splay tree\"\n"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 1 4\\n\") == \"5\\n\"\nassert solution(\"4\\n3 1 4 4\\n\") == \"6\\n\"\nassert solution(\"4\\n3 1 4 1\\n\") == \"6\\n\"\nassert solution(\"5\\n3 1 4 1 5\\n\") == \"11\\n\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 1 4\\n4\\n3 1 4 4\\n4\\n3 1 4 1\\n5\\n3 1 4 1 5\\n\") == 5, \"The output should be 5.\"\nassert solution(\"4\\n3 1 4 4\\n4\\n3 1 4 1\\n\") == 6, \"The output should be 6.\"\nassert solution(\"4\\n3 1 4 1\\n\") == 6, \"The output should be 6.\"\nassert solution(\"5\\n3 1 4 1 5\\n\") == 11, \"The output should be 11.\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n2 1 4') == '5\\n'\nassert solution('4\\n3 1 4 4') == '6\\n'\nassert solution('4\\n3 1 4 1') == '6\\n'\nassert solution('5\\n3 1 4 1 5') == '11\\n'"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '5', 'Test case 1 failed'\n\nassert solution() == '6', 'Test case 2 failed'\n\nassert solution() == '6', 'Test case 3 failed'\n\nassert solution() == '11', 'Test case 4 failed'"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6') == '6\\n', \"Invalid output: {}\".format(solution('6')) # Wrong output\nassert solution('5') == '11\\n', \"Invalid output: {}\".format(solution('5')) # Wrong output\nassert solution('4') == '14\\n', \"Invalid output: {}\".format(solution('4')) # Wrong output\nassert solution('3') == '19\\n', \"Invalid output: {}\".format(solution('3')) # Wrong output\nassert solution('2') == '26\\n', \"Invalid output: {}\".format(solution('2')) # Wrong output\nassert solution('1') == '36\\n', \"Invalid output: {}\".format(solution('1')) # Wrong output\n\nassert solution('24') == '376\\n', \"Invalid output: {}\".format(solution('24')) # Wrong output\n\nassert solution('33') == '1168\\n', \"Invalid output: {}\".format(solution('33')) # Wrong output\n\nassert solution('5000') == '500000\\n', \"Invalid output: {}\".format(solution('5000')) # Wrong output\n\nfor _ in range(10):\n    n = int(input())\n    k = list(map(int, input().split()))\n    P = None\n    distance = 0\n    total_length = 0\n    for k_i in k:\n        factorials = []\n        for i in range(2, int(k_i**0.5)+1):\n            factorials.append(i)\n        for i in range(len(factorials)):\n            if k_i % factorials[i] == 0:\n                factorials.pop(i)\n                break\n        if len(factorials) == 1:\n            distance += 1\n            total_length += k_i * factorials[0]\n        else:\n            distance += len(factorials) * len(k_i)\n            total_length += 1\n    print(distance, total_length)"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(24) == 5\nassert solution(4) == 6\nassert solution(4) == 6\nassert solution(5) == 11"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '5\\n6'\n"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"5\\n6\\n11\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n2 1 4') == '5'\nassert solution('4\\n3 1 4 4') == '6'\nassert solution('4\\n3 1 4 1') == '6'\nassert solution('5\\n3 1 4 1 5') == '11'"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2) == 5, \"First example\"\nassert solution(4) == 6, \"Second example\"\nassert solution(4) == 6, \"Third example\"\nassert solution(5) == 11, \"Fourth example\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='''\n4\n1 0 0 -1\n''') == '1'\n\nassert solution(stdin='''\n2\n1 -1\n''') == '2'"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 0 0 -1\\n\") == \"1\"\nassert solution(\"2\\n1 -1\\n\") == \"2\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 0 0 -1\\n2\\n1 -1\\n\") == \"1\"\nassert solution(\"2\\n1 -1\\n\") == \"2\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 1\n"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 1, \"Expected output: 1\"\n"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1\\n\", \"Expected 1, but got {}\".format(solution(stdin))"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '1', \"Expected 1, got {}\".format(solution(stdin))"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\", \"Test case 1 failed\"\nassert solution(input()) == \"2\", \"Test case 2 failed\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed. Expected output: {output}, but got: {solution(input())}\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Input\\n4\\n1 0 0 -1\\n') == 'Output\\n1\\n'\nassert solution('Input\\n2\\n1 -1\\n') == 'Output\\n2\\n'"
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\") == \"1\\n\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\\n\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\\n\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\\n\") == \"1\\n\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"example.in\").read()) == \"2\\n0\\n0\\n\\n2\\n0\\n0\"\n"
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\") == \"2\"\nassert solution(\"2 1 0\\n1 2\\n2 2\") == \"0\"\nassert solution(\"2 5 7\\n3 4\\n14 4\") == \"1\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n        2 0 0\n        1 2\n        2 3\n        \"\"\") == \"2\\n\"\n\nassert solution(\"\"\"\n        2 1 0\n        1 2\n        2 2\n        \"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n        2 5 7\n        3 4\n        14 4\n        \"\"\") == \"1\\n\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\\n\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\\n\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\\n\") == \"1\\n\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\\n\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\\n\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\\n\") == \"1\\n\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\\n\") == \"2\"\nassert solution(\"2 1 0\\n1 2\\n2 2\\n\") == \"0\"\nassert solution(\"2 5 7\\n3 4\\n14 4\\n\") == \"1\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\\n\") == \"6\\n\"\nassert solution(\"5 2\\n01000\\n2 4\\n3 5\\n\") == \"7\\n\"\nassert solution(\"5 2\\n01000\\n2 4\\n3 5\\n\") == \"7\\n\"\n"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\\n5 3\\n1 3\\n5 1\\n1 1\") == \"6\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 3\\n0110\\n1 3\\n2 4\\n3 5\") == \"11\"\n"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"6\", \"Incorrect solution.\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\\n\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\\n\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\\n\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"6\", \"The output is incorrect.\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\n"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\n"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 2\\n01001\\n2 4\\n3 5\\n') == '6\\n'\nassert solution('5 2\\n00101\\n2 4\\n3 5\\n') == '6\\n'\nassert solution('5 2\\n01100\\n2 4\\n3 5\\n') == '6\\n'\nassert solution('5 2\\n01010\\n2 4\\n3 5\\n') == '6\\n'\nassert solution('5 2\\n00011\\n2 4\\n3 5\\n') == '6\\n'\nassert solution('5 2\\n00101\\n2 4\\n3 5\\n') == '6\\n'\nassert solution('5 2\\n01001\\n2 4\\n3 5\\n') == '6\\n'"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\\n\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\\n\") == \"6\\n\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\\n6\") == \"6\\n\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\\n1 2\") == \"1\\n\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\\n1 2\\n7\") == \"7\\n\""
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1 1 1 1\") == \"6\"\nassert solution(\"1 2 1 2 1 2\") == \"13\""
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 1 1 1 1 1') == 6\nassert solution('1 2 1 2 1 2') == 13"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '6\\n', \"Incorrect output\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1 1 1 1\") == 6\nassert solution(\"1 2 1 2 1 2\") == 13"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1 1 1 1\") == \"6\"\nassert solution(\"1 2 1 2 1 2\") == \"13\""
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 1 1 1\") == \"6\", \"The expected result is 6, but got: {}\".format(solution(\"1 1 1 1 1 1\"))\nassert solution(\"1 2 1 2 1 2\") == \"13\", \"The expected result is 13, but got: {}\".format(solution(\"1 2 1 2 1 2\"))"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"6\\n\", \"Incorrect output for example 1\"\nassert solution(input()) == \"13\\n\", \"Incorrect output for example 2\""
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 1 1 1 1 1') == 6\nassert solution('1 2 1 2 1 2') == 13\n"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1 1 1 1\") == 6, \"Incorrect output\"\nassert solution(\"1 2 1 2 1 2\") == 13, \"Incorrect output\""
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 1 1 1 1 1') == '6'\nassert solution('1 2 1 2 1 2') == '13'\n\nHere's the code for the solution:\n\n```python\n"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n2 3 4 6 9') == '4'\nassert solution('9\\n1 2 3 5 6 7 8 9 10') == '4'\n"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 3 4 6 9\\n\") == \"4\\n\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\\n\") == \"4\\n\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\\n\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\\n\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n2 3 4 6 9') == '4\\n'\nassert solution('9\\n1 2 3 5 6 7 8 9 10') == '4\\n'"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n2 3 4 6 9') == '4\\n'\nassert solution('9\\n1 2 3 5 6 7 8 9 10') == '4\\n'"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input(\"Enter the length of the longest good sequence: \")) == \"4\"\nassert solution(input(\"Enter the length of the longest good sequence: \")) == \"4\"\nassert solution(input(\"Enter the length of the longest good sequence: \")) == \"4\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\\n\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\\n\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'SURGERY COMPLETE'"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == output, f\"Test failed: {solution(input)}!= {output}\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\\nIR\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\nIR\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\nIR\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\\nDONE\") == \"SURGERY COMPLETE\\nIR\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\\nDONE\") == \"SURGERY COMPLETE\\nIR\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\\nDONE\") == \"SURGERY COMPLETE\\nIR\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3') == 'SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED'\n\nassert solution('2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3') == 'SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED'\n\nassert solution('2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3') == 'SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED'"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n') == 'SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED'"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''2\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11''') == 'SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED'"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n') == 'SURGERY COMPLETE\\n'\nassert solution('2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n') == 'SURGERY COMPLETE\\n'"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution(stdin)) == \"SURGERY COMPLETE\"\nassert solution(solution(stdin)) == \"SURGERY FAILED\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"SURGERY COMPLETE\"\nassert solution(input()) == \"SURGERY FAILED\"\n"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\"\nassert solution(\"3 2 1\") == \"1 2 3\"\n"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\"\nassert solution(\"3 2 1\") == \"1 2 3 \"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('9 2 5') == '6 5 8 3 4 1 9 2 7'\nassert solution('3 2 1') == '1 2 3 '\nassert solution('') == '-1'"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('9 2 5') == '6 5 8 3 4 1 9 2 7'\nassert solution('3 2 1') == '1 2 3'\nprint('All tests passed!')"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('9 2 5') == '6 5 8 3 4 1 9 2 7', 'Output should be 6 5 8 3 4 1 9 2 7'\nassert solution('3 2 1') == '1 2 3', 'Output should be 1 2 3'"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 2, 1) == [1, 2, 3]\nassert solution(9, 2, 5) == [6, 5, 8, 3, 4, 1, 9, 2, 7]\nassert solution(1, 1, 1) == [-1]\nassert solution(1, 1, 2) == [-1]\nassert solution(1, 1, 3) == [-1]\nassert solution(1, 1, 4) == [-1]\nassert solution(1, 1, 5) == [-1]"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('9 2 5\\n') == '6 5 8 3 4 1 9 2 7\\n'\nassert solution('3 2 1\\n') == '1 2 3 \\n'"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\", \"The given input is invalid\"\nassert solution(\"3 2 1\") == \"1 2 3\", \"The given input is invalid\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Solution '{solution(input())}' is not correct. Expected output: '{output}'.\"\n"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\", \"Test 1 failed\"\nassert solution(\"3 2 1\") == \"1 2 3\", \"Test 2 failed\"\nassert solution(\"2 3 1\") == \"-1\", \"Test 3 failed\"\n"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 2\\n3 2 1\\n') == '3\\n'\nassert solution('5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n') == '5000000000\\n'\nassert solution('3 2\\n1 0 1\\n') == '2\\n'\nassert solution('4 4\\n2 8 4 1\\n') == '4\\n'"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n3 2 1\\n\") == \"3\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n\") == \"5000000000\"\nassert solution(\"3 2\\n1 0 1\\n\") == \"2\"\nassert solution(\"4 4\\n2 8 4 1\\n\") == \"4\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 2) == 3\nassert solution(5, 1) == 5000000000\nassert solution(3, 2) == 2\nassert solution(4, 4) == 4"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n3 2 1\\n\") == \"3\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n\") == \"5000000000\"\nassert solution(\"3 2\\n1 0 1\\n\") == \"2\"\nassert solution(\"4 4\\n2 8 4 1\\n\") == \"4\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n3 2 1\\n\") == \"3\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n\") == \"5000000000\"\nassert solution(\"3 2\\n1 0 1\\n\") == \"2\"\nassert solution(\"4 4\\n2 8 4 1\\n\") == \"4\"\n"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 2\\n3 2 1\\n') == '3\\n'\nassert solution('5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n') == '5000000000\\n'\nassert solution('3 2\\n1 0 1\\n') == '2\\n'\nassert solution('4 4\\n2 8 4 1\\n') == '4\\n'"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n3 2 1\") == \"3\\n\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\") == \"5000000000\\n\"\nassert solution(\"3 2\\n1 0 1\") == \"2\\n\"\nassert solution(\"4 4\\n2 8 4 1\") == \"4\\n\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n3 2 1\") == \"3\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\") == \"5000000000\"\nassert solution(\"3 2\\n1 0 1\") == \"2\"\nassert solution(\"4 4\\n2 8 4 1\") == \"4\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 2\\n3 2 1') == '3\\n'\nassert solution('5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000') == '5000000000\\n'\nassert solution('3 2\\n1 0 1') == '2\\n'\nassert solution('4 4\\n2 8 4 1') == '4\\n'"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"bwwwbwwbw\") == 5\nassert solution(\"bwwbwwb\") == 3"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\"\nassert solution(\"bwwbwwb\") == \"3\""
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\"\nassert solution(\"bwwbwwb\") == \"3\""
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('bwwwbwwbw') == 5, \"The correct solution is not present.\""
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"bwwwbwwbw\") == 5\nassert solution(\"bwwbwwb\") == 3"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\"\nassert solution(\"bwwbwwb\") == \"3\""
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"bwwwbwwbw\") == 5\nassert solution(\"bwwbwwb\") == 3"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\"\nassert solution(\"bwwbwwb\") == \"3\""
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"bwwwbwwbw\") == 5, \"The solution is incorrect\"\nassert solution(\"bwwbwwb\") == 3, \"The solution is incorrect\"\n\nprint(5)  # Output: 5"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('bwwwbwwbw') == 5, \"Incorrect result for 'bwwwbwwbw'.\"\nassert solution('bwwbwwb') == 3, \"Incorrect result for 'bwwbwwb'.\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 5\\n3 2\\n1 2\\n.....\\n.***. \\n...**\\n*....\\n\\n4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\\n') == '10'\nassert solution('4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\\n') == '7'"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 5\\n3 2\\n1 2\\n.....\\n.***. \\n...**\\n*....\\n') == '10\\n'\nassert solution('4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n') == '7\\n'"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\n3 2\\n1 2\\n.....\\n.***. \\n...**\\n*....\\n\") == \"10\"\nassert solution(\"4 4\\n2 2\\n0 1\\n....\\n..*. \\n....\\n....\\n\") == \"7\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Input\\n4 5\\n3 2\\n1 2\\n.....\\n.***.\\n...**\\n*....\\n\") == \"10\"\nassert solution(\"Input\\n4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\") == \"7\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"TODO\"\n"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Test {test_case} failed. Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\n3 2\\n1 2\\n.....\\n.***. \\n...**\\n*....\\n\") == \"10\"\nassert solution(\"4 4\\n2 2\\n0 1\\n....\\n..*. \\n....\\n....\\n\") == \"7\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(example1) == \"10\"\nassert solution(example2) == \"7\"\nassert solution(example3) == \"1\"\nassert solution(example4) == \"13\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"10\"\nassert solution() == \"7\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\n3 2\\n1 2\\n.....\\n.***. \\n...**\\n*....\\n\") == \"10\"\nassert solution(\"4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\") == \"7\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 4 2 2\") == \"2\"\nassert solution(\"6\\n1 2 4 4 4 9\") == \"2\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\\n\", \"Test case 1 incorrect\"\n\nassert solution() == \"2\\n\", \"Test case 2 incorrect\"\n\nassert solution() == \"2\\n\", \"Test case 3 incorrect\"\n\nassert solution() == \"2\\n\", \"Test case 4 incorrect\"\n\nassert solution() == \"2\\n\", \"Test case 5 incorrect\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 4 2 2\\n\") == \"2\"\nassert solution(\"6\\n1 2 4 4 4 9\\n\") == \"2\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n1 4 2 2\\n') == '2'\nassert solution('6\\n1 2 4 4 4 9\\n') == '2'"
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 4 2 2\\n\\n6\\n1 2 4 4 4 9\\n\") == \"2\"\nassert solution(\"6\\n1 2 4 4 4 9\\n\") == \"2\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 4 2 2\\n\") == \"2\"\nassert solution(\"6\\n1 2 4 4 4 9\\n\") == \"2\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Output\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 4 2 2\\n\") == \"2\"\nassert solution(\"6\\n1 2 4 4 4 9\\n\") == \"2\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('aba') == '7'\nassert solution('abcd') == '4'\nassert solution('aaaa') == '12'"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aba\") == 7\nassert solution(\"abcd\") == 4\nassert solution(\"aaaa\") == 12"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aba\") == 7\nassert solution(\"abcd\") == 4\nassert solution(\"aaaa\") == 12"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aba\") == \"7\"\nassert solution(\"abcd\") == \"4\"\nassert solution(\"aaaa\") == \"12\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3 1\\naba\") == \"7\"\nassert solution(\"4 1 1\\nabcd\") == \"4\"\nassert solution(\"4 10 1\\naaaa\") == \"12\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 1 aba\") == \"7\"\nassert solution(\"4 1 1 abcd\") == \"4\"\nassert solution(\"4 10 1 aaaa\") == \"12\"\n"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3 1\\naba') == '7'\nassert solution('4 1 1\\nabcd') == '4'\nassert solution('4 10 1\\naaaa') == '12'"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 1\\naba\") == \"7\"\nassert solution(\"4 1 1\\nabcd\") == \"4\"\nassert solution(\"4 10 1\\naaaa\") == \"12\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aba\") == \"7\"\nassert solution(\"abcd\") == \"4\"\nassert solution(\"aaaa\") == \"12\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 1') == '1', \"Expected output: 1\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\\n\", \"Output should be 1.\"\n"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == \"1\\n\", \"Expected 1\"\n\nassert solution(\"3 1\") == \"1\\n\", \"Expected 1\"\n\nassert solution(\"2 3\") == \"1\\n2\\n\", \"Expected 1 and 2\"\n\nassert solution(\"2 2\") == \"1\\n\", \"Expected 1\"\n\nassert solution(\"2 4\") == \"1\\n2\\n\", \"Expected 1 and 2\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1\"\nprint(1)"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\") == \"1\\n\", \"Expected output: 1\\nActual output: {}\".format(solution(\"2 1\"))\n\nassert solution(\"3 2\") == \"2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\") == \"1\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 1') == '1\\n'"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\") == \"1\\n\", \"The expected output is '1'\\n\"\nassert solution(\"2 3\") == \"1\\n1\\n\", \"The expected output is '1\\n1'\\n\"\nassert solution(\"2 5\") == \"2\\n2\\n\", \"The expected output is '2\\n2'\\n\"\nassert solution(\"3 5\") == \"3\\n2\\n1\\n\", \"The expected output is '3\\n2\\n1'\\n\"\nassert solution(\"4 10\") == \"1\\n1\\n2\\n2\\n3\\n3\\n4\\n4\\n5\\n5\\n6\\n6\\n7\\n7\\n8\\n8\\n9\\n9\\n10\\n10\\n\", \"The expected output is as per the problem statement.\\n\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '1'"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '1\\n'\n\nimport collections"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n2 2 2 2\") == \"8\"\nassert solution(\"4 -3\\n3 -6 -3 12\") == \"3\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Test failed: expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == expected\n"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n2 2 2 2\") == \"8\"\nassert solution(\"4 -3\\n3 -6 -3 12\") == \"3\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Input\\n4 2\\n2 2 2 2\\n\\nOutput\\n8\\n\\nInput\\n4 -3\\n3 -6 -3 12\\n\\nOutput\\n3\\n\") == \"Output\\n8\\n\\nOutput\\n3\\n\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'Output\\n8'"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"8\", \"Incorrect output for the given input.\"\n"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"8\"\n"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n2 2 2 2\\n\") == \"8\"\nassert solution(\"4 -3\\n3 -6 -3 12\\n\") == \"3\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Input\\n4 2\\n2 2 2 2\\n\\nOutput\\n8\\n\\nInput\\n4 -3\\n3 -6 -3 12\\n\\nOutput\\n3') == '8\\n3'\nassert solution('Input\\n4 2\\n2 2 2 2\\n\\nOutput\\n8\\n\\nInput\\n4 -3\\n3 -6 -3 12\\n\\nOutput\\n3') == '8\\n3'"
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\"\n) == \"11\"\n\nassert solution(\n    \"4 2 1 300 1000\\nA A\\nA aa\\naa AA\\nA a\"\n) == \"5\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test failed\"\nprint(\"Test passed\")"
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\\n') == '11\\n'\nassert solution('4 2 1 300 1000\\na A\\nA aa\\naA aa\\nA a\\nA\\n') == '5\\n'"
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 'TODO: Write the solution here'\n"
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '11'\nassert solution(stdin) == '5'"
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"11\\n\"\nassert solution() == \"5\\n\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\") == \"11\"\nassert solution(\"4 2 1 300 1000\\na A\\nA aa\\naA aa\\nA aa\") == \"5\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank') == '11'\nassert solution('4 2 1 300 1000\\nA A\\nA aa\\naa AA\\nAA a') == '5'"
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Testcase failed\"\n"
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\") == \"11\"\n\nassert solution(\"4 2 1 300 1000\\nA A\\nA aa\\naa AA\\nAA a\") == \"5\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 1 1 4\\n\") == \"YES\"\nassert solution(\"5\\n1 1 5 2 1\\n\") == \"NO\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\\n4\\n1 1 1 4\") == \"YES\"\nassert solution(\"Input\\n5\\n1 1 5 2 1\") == \"NO\"\n"
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 1 1 4\\n\") == \"YES\"\nassert solution(\"5\\n1 1 5 2 1\\n\") == \"NO\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 1 1 4\") == \"YES\"\nassert solution(\"5\\n1 1 5 2 1\") == \"NO\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"YES\"\n"
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Input') == 'YES\\n'\nassert solution('5\\n1 1 1 4') == 'NO\\n'"
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 1 1 4\") == \"YES\"\nassert solution(\"5\\n1 1 5 2 1\") == \"NO\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 1 1 4\\n\") == \"YES\"\nassert solution(\"5\\n1 1 5 2 1\\n\") == \"NO\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 1 1 4\") == \"YES\", \"First example\"\nassert solution(\"5\\n1 1 5 2 1\") == \"NO\", \"Second example\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 1 1 4\\n\") == \"YES\"\nassert solution(\"5\\n1 1 5 2 1\\n\") == \"NO\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\") == \"-15\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"3\\n5 1 -5\") == \"-5\\n\"\nassert solution(\"2\\n900 1000\") == \"1100\\n\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\\n\") == \"-15\\n\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"1\\n\"\nassert solution(\"3\\n5 1 -5\\n\") == \"-5\\n\"\nassert solution(\"2\\n900 1000\\n\") == \"1100\\n\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n10 5 0 -5 -10\\n4\\n1 1 1 1\\n3\\n5 1 -5\\n2\\n900 1000\\n') == '-15'\nassert solution('4\\n1 1 1 1\\n3\\n5 1 -5\\n2\\n900 1000\\n') == '1'\nassert solution('3\\n5 1 -5\\n2\\n900 1000\\n') == '-5'\nassert solution('2\\n900 1000\\n') == '1100'"
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\\n\\n4\\n1 1 1 1\\n\\n3\\n5 1 -5\\n\\n2\\n900 1000\") == \"-15\\n\\n1100\"\nassert solution(\"4\\n1 1 1 1\\n\\n3\\n5 1 -5\\n\\n2\\n900 1000\") == \"1\\n\\n1100\"\nassert solution(\"3\\n5 1 -5\\n\\n2\\n900 1000\") == \"-5\\n\\n1100\"\nassert solution(\"2\\n900 1000\") == \"1100\\n\\n1100\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\") == \"-15\"\nassert solution(\"4\\n1 1 1 1\") == \"1\"\nassert solution(\"3\\n5 1 -5\") == \"-5\"\nassert solution(\"2\\n900 1000\") == \"1100\"\n"
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\\n\") == \"-15\\n\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"1\\n\"\nassert solution(\"3\\n5 1 -5\\n\") == \"-5\\n\"\nassert solution(\"2\\n900 1000\\n\") == \"1100\\n\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\\n\\n4\\n1 1 1 1\\n\\n3\\n5 1 -5\\n\\n2\\n900 1000\\n\") == \"-15\\n\"\nassert solution(\"4\\n1 1 1 1\\n\\n3\\n5 1 -5\\n\\n2\\n900 1000\\n\") == \"1\\n\"\nassert solution(\"3\\n5 1 -5\\n\\n2\\n900 1000\\n\") == \"-5\\n\"\nassert solution(\"2\\n900 1000\\n\") == \"1100\\n\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\") == \"-15\"\nassert solution(\"4\\n1 1 1 1\") == \"1\"\nassert solution(\"3\\n5 1 -5\") == \"-5\"\nassert solution(\"2\\n900 1000\") == \"1100\"\nassert solution(\"5\\n10 5 0 -5 -10\\n4\\n1 1 1 1\\n3\\n5 1 -5\\n2\\n900 1000\\n5\\n10 5 0 -5 -10\\n4\\n1 1 1 1\\n3\\n5 1 -5\\n2\\n900 1000\") == \"-15\\n1\\n-5\\n-5\\n-15\\n-15\\n1100\\n1000\\n1100\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n10 5 0 -5 -10\\n\\n4\\n1 1 1 1\\n\\n3\\n5 1 -5\\n\\n2\\n900 1000\\n') == '-15\\n'\nassert solution('4\\n1 1 1 1\\n\\n3\\n5 1 -5\\n\\n2\\n900 1000\\n') == '1\\n'\nassert solution('3\\n5 1 -5\\n\\n2\\n900 1000\\n') == '-5\\n'\nassert solution('2\\n900 1000\\n') == '1100\\n'\n\nprint('All test cases passed')"
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\\n4\\n1 1 1 1\\n3\\n5 1 -5\\n2\\n900 1000\\n\") == \"-15\\n\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\\n3\\n1 2\\n2 3\\n\") == \"YES\\n\"\nassert solution(\"Input\\n5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"NO\\n\"\nassert solution(\"Input\\n6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"YES\\n\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, Received: {solution(stdin)}\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Solution for {input()} is '{solution(input())}', but expected '{expected}'\"\n"
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 'YES', \"Expected 'YES', got: '{}'\".format(solution())"
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"YES\"\nassert solution(\"3\\n1 2\\n2 3\\n\") == \"NO\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"NO\"\nassert solution(\"6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"YES\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"YES\" # Replace this line with your solution"
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"YES\\n\"\nassert solution(\"3\\n1 2\\n2 3\\n\") == \"NO\\n\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"NO\\n\"\nassert solution(\"6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"YES\\n\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"YES\", \"No solution found\"\n"
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\\n2\\n1 2\\n\") == \"YES\"\nassert solution(\"Input\\n3\\n1 2\\n2 3\\n\") == \"NO\"\nassert solution(\"Input\\n5\\n1 2\\n1 3\\n1 4\\n2 5\\n\") == \"NO\"\nassert solution(\"Input\\n6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"YES\"\n"
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"YES\"\nassert solution(\"3\\n1 2\\n2 3\\n\") == \"NO\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"NO\"\nassert solution(\"6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"YES\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\\n\"\n"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\\n2 6\"\nassert solution() == \"0\"\n"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 1, \"Your solution is incorrect.\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 1\nassert solution(2) == 0"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\\n2\\n2 6\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2 6\") == \"1\\n2\"\nassert solution(\"2\\n2 6\") == \"0\"\nassert solution(\"3\\n1 2 3\") == \"1\"\nassert solution(\"4\\n2 3 4\") == \"0\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Your solution is incorrect. Please check the provided examples and the provided code for the correctness of the solution.\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"\"\"\n1\n2 \n\"\"\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected_solution, f\"Your solution is incorrect. \\nExpected: {expected_solution} \\nReceived: {solution}\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\\n2\\n2 6\\n\") == \"1\\n2\\n2 6\\n\"\nassert solution(\"2\\n2 6\\n\") == \"0\\n2\\n2 6\\n\"\nassert solution(\"4\\n1 2 3 4\\n5\\n6 7 8 9 10\\n6\\n6 7 8 9 10\\n\") == \"0\\n2 3 4\\n5\\n6 7 8 9 10\\n\""
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\naab\\nccb') == '6'\nassert solution('4\\nbbb\\ncde') == '3'\nassert solution('5\\naab\\nabb') == '5'\nassert solution('6\\naab\\nccb') == '6'\nassert solution('7\\naab\\nabb\\ncde') == '2'\nassert solution('8\\naab\\nabb\\ncde\\ndfd') == '3'\nassert solution('9\\naab\\nabb\\ncde\\ndfd\\neef') == '4'\nassert solution('10\\naab\\nabb\\ncde\\ndfd\\neef\\nfgh') == '5'"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"6\\n\", \"Test Failed\""
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aab\\nccb\\n\") == \"6\", \"Expected output: 6\"\nassert solution(\"aab\\nbcd\\n\") == \"12\", \"Expected output: 12\"\nassert solution(\"aab\\ncdc\\n\") == \"18\", \"Expected output: 18\"\nassert solution(\"aab\\ncdb\\n\") == \"10\", \"Expected output: 10\"\nassert solution(\"aab\\ncba\\n\") == \"24\", \"Expected output: 24\"\n\nfrom typing import List"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\naab\\nccb\") == \"6\\n\""
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\naab\\nccb\") == \"6\"\nassert solution(\"4\\nabab\\nbbbb\") == \"10\"\nassert solution(\"5\\nbbb\\naaa\") == \"1\"\nassert solution(\"5\\naaa\\nbbb\") == \"0\""
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"6\\n\", \"The solution is not correct\""
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\naab\\nccb') == '6'\nassert solution('5\\nabc\\ndef\\nghi') == '10'\nassert solution('7\\naabbc\\nccbde\\nfghij\\nklnmno\\nopqrst\\nuvwxyz') == '18179876230329388300'"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"6\\n\"\n"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\naab\\ncab\\n\") == \"6\\n\", \"Test failed\"\nassert solution(\"4\\nabc\\ndef\\nghi\\n\") == \"15\\n\", \"Test failed\""
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\naab\\nccb') == '6'\nprint('All tests passed.')"
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\") == \"NO\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('100 100 5\\n5 2 1 2 1\\n') == 'YES'\nassert solution('100 8 5\\n5 2 1 2 1\\n') == 'NO'\nassert solution('100 100 7\\n1 2 3 4 5 6 7\\n') == 'NO'"
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('Input\\n100 100 5\\n5 2 1 2 1\\n\\nOutput\\nYES\\n\\nInput\\n100 8 5\\n5 2 1 2 1\\n\\nOutput\\nNO\\n\\nInput\\n100 100 7\\n1 2 3 4 5 6 7\\n\\nOutput\\nNO\\n\\n') == 'YES'"
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('100 100 5\\n5 2 1 2 1\\n') == 'YES'\nassert solution('100 8 5\\n5 2 1 2 1\\n') == 'NO'\nassert solution('100 100 7\\n1 2 3 4 5 6 7\\n') == 'NO'"
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\") == \"YES\\n\"\nassert solution(\"100 8 5\\n5 2 1 2 1\") == \"NO\\n\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\") == \"NO\\n\"\n"
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\") == \"NO\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\") == \"NO\"\n"
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('100 100 5\\n5 2 1 2 1\\n') == 'YES\\n'\nassert solution('100 8 5\\n5 2 1 2 1\\n') == 'NO\\n'\nassert solution('100 100 7\\n1 2 3 4 5 6 7\\n') == 'NO\\n'"
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\\n\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\\n\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\\n\") == \"NO\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"YES\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(input())) == 'Output\\n3'\nassert solution(str(input())) == 'Output\\n4'"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\\n\") == \"4\\n\"\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\\n\") == \"3\\n\"\nassert solution(\"1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n\") == \"1\\n\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"4\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10, 2, 4, 1, 4, 10, 5) == 4\nassert solution(7, 6, 2, 1, 2, 1, 4, 2, 4, 3, 2, 5, 2, 5, 1, 2, 3, 5, 3) == 3"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\\n\") == \"4\"\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\\n\") == \"3\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\") == 4\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\") == 3"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Input\") == \"Output\"\n\nfrom typing import List\n"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\\n\") == \"4\\n\"\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\\n\") == \"3\\n\""
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10\") == \"no\\nyes\\nyes\\nno\\nyes\""
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"yes\""
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'yes'"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Test failed: Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'yes\\nno\\nno\\nno'"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'no'\nassert solution(stdin) == 'no'\nassert solution(stdin) == 'no'\nassert solution(stdin) == 'no'\nassert solution(stdin) == 'yes'"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'yes', \"Expected output 'yes', but got '{}'\".format(solution(stdin))"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10') == 'no\\nyes\\nyes\\nno\\nyes'"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Solution does not match the expected output. Expected: {expected}, Received: {solution(stdin)}\""
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10\\n') == 'no\\nno\\nyes\\nno\\nno\\n'\nassert solution('1\\n') == 'no\\n'\nassert solution('1\\n2\\n') == 'no\\n'\nassert solution('1\\n1 2\\n') == 'no\\n'\nassert solution('1\\n1 2 3\\n') == 'no\\n'\nassert solution('1\\n1 2 3 4 5 6 7 8 9 10\\n') == 'no\\nno\\nno\\nno\\nno\\n'\n"
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\") == \"2\\n1 0 2 1 0\\n\"\nassert solution(\"4 2\\n1 4\\n2 4\") == \"3\\n5 2 0 1\\n\"\nassert solution(\"10 3\\n1 4\\n2 4\\n5 5\") == \"4\\n0 1 2 3\\n\"\nassert solution(\"5 10\\n1 2\\n3 4\\n5 5\") == \"3\\n5 5 2 4\\n\"\nassert solution(\"10 20\\n1 3\\n2 4\\n5 5\\n6 7\\n8 9\\n\") == \"3\\n5 5 2 4\\n\"\n"
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\\n\") == \"2\\n1 0 2 1 0\\n\\n3\\n5 2 0 1\"\nassert solution(\"4 2\\n1 4\\n2 4\\n\") == \"3\\n5 2 0 1\"\n"
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\") == \"2\\n1 0 2 1 0\\n\"\nassert solution(\"4 2\\n1 4\\n2 4\\n\") == \"3\\n5 2 0 1\\n\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\\n\") == \"2\\n1 0 2 1 0\\n\"\nassert solution(\"4 2\\n1 4\\n2 4\\n\") == \"3\\n5 2 0 1\\n\"\n\nprint(\"All test cases passed successfully\")"
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\\n\") == \"2\"\nassert solution(\"4 2\\n1 4\\n2 4\\n\") == \"3\"\nassert solution(\"1 3\\n2 2\\n4 3\\n5 4\\n\") == \"1\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Test failed: solution({input()}) == {output()}, expected output: {output()}\"\n"
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\") == \"2\\n1 0 2 1 0\\n\"\n\nassert solution(\"4 2\\n1 4\\n2 4\\n\") == \"3\\n5 2 0 1\\n\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"Output\\n2\\n1 0 2 1 0\\n3\\n5 2 0 1\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\").read()) == \"2\\n1 0 2 1 0\\n3\\n5 2 0 1\"\nassert solution(open(\"input.txt\").read()) == \"3\\n5 2 0 1\"\nassert solution(open(\"input.txt\").read()) == \"2\\n1 0 2 1 0\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '2' # The minimum mex among the subarrays chosen by Alyona is equal to 2.\n\nassert solution() == '1 0 2 1 0' # The array a is [1, 0, 2, 1, 0].\n\nassert solution() == '5 2 0 1' # The array a is [5, 2, 0, 1]."
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"YES\"\n\nfrom typing import List"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\") == \"NO\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\") == \"YES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\") == \"NO\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Input\\n3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\\n\") == \"NO\"  # Solution for input 1\nassert solution(\"Input\\n3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"YES\"  # Solution for input 2\nassert solution(\"Input\\n3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n\") == \"NO\"  # Solution for input 3"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\") == \"YES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"NO\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\") == \"NO\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"YES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n\") == \"NO\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test failed\"\n\ninput_data = [int(x) for x in input().split()]\nn, m = input_data[:2]\nr = [int(x) for x in input().split()]\nx = list(map(int, input().split()))"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\") == \"NO\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"YES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n\") == \"NO\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\") == \"NO\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"YES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n\") == \"NO\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\") == \"YES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"NO\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n\") == \"NO\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\") == \"YES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\") == \"NO\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\") == \"YES\""
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('(((#)((#)')) == 1)\nassert solution('()((#((#(#()')) == 2)\nassert solution('#') == -1\nassert solution('(#)') == -1"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"(((#)((#)\")) == \"1\\n2\\n\"\nassert solution(\"()((#((#(#()\")) == \"2\\n2\\n1\\n\"\nassert solution(\"#\") == \"-1\\n\"\nassert solution(\"(#)\") == \"-1\\n\"\nassert solution(\"()\") == \"-1\\n\""
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"(((#)((#)\")) == \"1\\n2\\n\"\nassert solution(\"()((#((#(#()\")) == \"2\\n2\\n1\\n\"\nassert solution(\"#\") == \"-1\\n\"\nassert solution(\"(#)\") == \"-1\\n\"\nassert solution(\"()\") == \"-1\\n\""
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('') == 1, \"Input should not be empty\"\n\nfor i, char in enumerate(stdin):\n    if char == '#':\n        count = 0\n        for j in range(i+1, len(stdin)):\n            if stdin[j] == '#':\n                count += 1\n                if count == len(stdin) - i - 1:\n                    return count\n\nreturn -1"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"#\") == \"-1\", \"# should return -1\"\nassert solution(\"()\") == \"1\", \"() should return 1\"\nassert solution(\"()#()\") == \"2\", \"()#() should return 2\"\nassert solution(\"(())((#())\") == \"2\", \"(())((#()) should return 2\"\nassert solution(\"(()#()())\") == \"2\", \"(()#()()) should return 2\"\nassert solution(\"(()(()()))\") == \"2\", \"(()(()())) should return 2\"\nassert solution(\"(())((#()#)())\") == \"2\", \"(())((#()#)()) should return 2\"\nassert solution(\"(())((#)()))\") == \"2\", \"(())((#)())) should return 2\"\nassert solution(\"(()#())()())\") == \"2\", \"(()#())()() should return 2\"\nassert solution(\"(())()#())()())\") == \"2\", \"(())()#())()() should return 2\"\nassert solution(\"(())()#()()())()\") == \"2\", \"(())()#()()())() should return 2\"\nassert solution(\"(()(())()))\") == \"2\", \"(()(())())) should return 2\"\nassert solution(\"(())(()(#())\") == \"2\", \"(())(()(#()) should return 2\"\nassert solution(\"(()(()())#)())\") == \"2\", \"(()(()())#)()) should return 2\"\nassert solution(\"(())(())()#()()()()()())\") == \"2\", \"(())(())()#()()()()()()()()() should return 2\"\nassert solution(\"(())(())()#())()()()()()()()()\") == \"2\", \"(())(())()#())()()()()()()()() should return 2\"\nassert solution(\"(()(()())()))\") == \"2\", \"(()(()())())) should return 2\"\nassert solution(\"(())(()(#()))\") == \"2\", \"(())(()(#())) should return 2\"\nassert solution(\"(()(()())#()))\") == \"2\", \"(()(()())#())) should return 2\"\nassert solution
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"(((#)((#)\")) == \"122\\n\"\nassert solution(\"(())((#((#(#()\")) == \"222\\n221\\n\"\nassert solution(\"#\") == \"-1\\n\"\nassert solution(\"(#)\") == \"-1\\n\""
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"(((#)((#)\")) == \"1\\n2\\n\"\nassert solution(\"()((#((#(#()\")) == \"2\\n2\\n1\\n\"\nassert solution(\"#\") == \"-1\\n\"\nassert solution(\"(#)\") == \"-1\\n\"\nassert solution(\"(#)1\") == \"-1\\n1\\n\"\nassert solution(\"((#((#(#()\")) == \"2\\n2\\n1\\n\""
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('(((#)((#)')) == '1\\n2\\n')\nassert solution('()((#((#(#()')) == '2\\n2\\n1\\n')\nassert solution('#') == '-1\\n'\nassert solution('(#)') == '-1\\n'"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"(((#)((#)\")) == 1\nassert solution(\"()((#((#(#()\")) == 2\nassert solution(\"#\") == -1\nassert solution(\"(#)\") == -1"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('(((#)((#)')) == 1)\nassert solution('()((#((#(#()')) == 2)\nassert solution('#') == -1\nassert solution('(#)') == -1"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3') == '-1\\nxoxox\\n'\nassert solution('4 0') == '16\\noo\\n'\nassert solution('0 4') == '-16\\no\\n'"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n\") == -1, \"Test 1 failed\"\nassert solution(\"4 0\\n\") == 16, \"Test 2 failed\"\nassert solution(\"0 4\\n\") == -16, \"Test 3 failed\""
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == -1\nassert solution(\"4 0\") == 16\nassert solution(\"0 4\") == -16"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(b'2 3') == -1\nassert solution(b'4 0') == 16\nassert solution(b'0 4') == -16\n"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"-1\"\nassert solution(\"4 0\") == \"16\"\nassert solution(\"0 4\") == \"-16\""
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"The output does not match the expected output: {solution(input())}, but {expected}\""
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 3') == '-1\\nxoxox'\nassert solution('4 0') == '16\\no'\nassert solution('0 4') == '-16\\no'"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == -1\nassert solution(\"4 0\") == 16\nassert solution(\"0 4\") == -16"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n4 0\\n0 4\") == \"-1\\nxoxox\\n16\\noo\\n0\\nx\\n0\"\nassert solution(\"4 0\\n0 4\") == \"16\\no\"\nassert solution(\"0 4\") == \"-16\\nx\\n0\"\nassert solution(\"4 3 1\") == \"-1\"\nassert solution(\"4 2 1\") == \"1\"\nassert solution(\"4 0\") == \"16\""
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1\") == \"17\", \"Incorrect answer\""
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1\") == \"17\", \"Expected answer: 17, but got: \" + solution(\"1 1 1\")"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 1 1') == '17'\n"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 1 1') == '17'\nprint(\"All tests passed!\")"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1\") == \"17\""
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"17\", \"Test Case 1 Failed\"\nassert solution() == \"18\", \"Test Case 2 Failed\"\nassert solution() == \"19\", \"Test Case 3 Failed\"\nassert solution() == \"20\", \"Test Case 4 Failed\"\nassert solution() == \"21\", \"Test Case 5 Failed\"\nassert solution() == \"10000000007\", \"Test Case 6 Failed\"\n"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '17\\n', \"Test case failed\""
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 1 1') == '17\\n'\n"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1\") == \"17\"\n"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1\") == \"17\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2 2 2\\n2 2 2\\n\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '''2 2 2 \n'''"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n1 2 1\\n2 1 2\\n\") == \"2 2 2\\n2 2 2\\n\"\nassert solution(\"2 2\\n1 2\\n3 4\\n\") == \"2 3\\n3 2\\n\"\nassert solution(\"2 2\\n1 2\\n3 4\\n\") == \"2 3\\n3 2\\n\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n2 3\n1 2 1\n2 1 2\n''') == '''\n2 2 2 \n2 2 2 \n'''\n\nassert solution('''\n2 2\n1 2\n3 4\n''') == '''\n2 3 \n3 2 \n'''"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '2 2 2\\n2 2 2\\n'"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n1 2 1\\n2 1 2\") == \"2 2 2\\n2 2 2\\n\"\nassert solution(\"2 2\\n1 2\\n3 4\") == \"2 3\\n3 2 \\n\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n1 2 1\\n2 1 2\") == \"2 2 2 \\n2 2 2 \\n\"\nassert solution(\"2 2\\n1 2\\n3 4\") == \"2 3 \\n3 2 \\n\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"The answers are as follows:\\n2 2 2\\n2 2 2\\n\\n2 3\\n3 2\\n\\n2 3\\n3 2\\n\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(example) == expected, f\"The solution is incorrect. Expected: {expected}, Received: {solution(example)}\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"\"\"2 2 2 \n2 2 2 \n\n\"\"\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"\n"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 1\\n0 1\\n2 1\\n') == '332748119\\n332748119\\n'\nassert solution('1 2\\n1\\n1\\n') == '3\\n'\nassert solution('3 3\\n0 1 1\\n4 3 5\\n') == '160955686\\n185138929\\n974061117\\n'"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Expected: {output()}, Received: {solution(input())}\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"332748119\\n332748119\\n\"\nassert solution(stdin) == \"3\\n160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt').read()) == '332748119\\n332748119\\n'\nassert solution(open('input_2.txt').read()) == '3\\n160955686\\n185138929\\n974061117\\n'\nassert solution(open('input_3.txt').read()) == '3\\n160955686\\n185138929\\n974061117\\n'"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"332748119\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\n\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\n\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\") == \"160955686\\n185138929\\n974061117\\n\"\n"
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4 5\") == \"6\"\nassert solution(\"1 100 101 100 1\") == \"102\"\n"
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Your solution is incorrect. Please check the function signature and examples.\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == \"11\"\nassert solution(5) == \"6\"\nassert solution(5) == \"102\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n3 1 5 2 6\") == \"11\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"6\\n\"\nassert solution(\"5\\n1 100 101 100 1\") == \"102\\n\"\n"
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n3 1 5 2 6') == '11\\n'\nassert solution('5\\n1 2 3 4 5') == '6\\n'\nassert solution('5\\n1 100 101 100 1') == '102\\n'\n"
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"11\\n\"\nassert solution(input()) == \"6\\n\"\nassert solution(input()) == \"102\\n\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n3 1 5 2 6\") == \"11\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"6\\n\"\nassert solution(\"5\\n1 100 101 100 1\") == \"102\\n\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3 1 5 2 6\") == \"11\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"6\\n\"\nassert solution(\"5\\n1 100 101 100 1\") == \"102\\n\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"Incorrect output. Expected: {expected_output}, Received: {solution(stdin)}\"\n"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\") == \"Yes\\n\"\nassert solution(\"3 1\\n1 3\\n2 3\") == \"No\\n\"\n"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\") == \"Yes\"\nassert solution(\"3 1\\n1 3\\n2 3\") == \"No\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\\n\") == \"Yes\"\nassert solution(\"3 1\\n1 3\\n2 3\\n\") == \"No\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\\n\") == \"Yes\"\nassert solution(\"3 1\\n1 3\\n2 3\\n\") == \"No\"\nassert solution(\"1 4\\n2 4\\n\") == \"No\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 'Yes\\n', \"Your solution is incorrect. Please check the given examples and problem statement.\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"Yes\", \"Your code is incorrect.\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'Yes', 'Expected \"Yes\" but got:'+ solution()\n"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Test failed. Expected: '{expected}', Received: '{solution(input())}'\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\\n\") == \"Yes\"\nassert solution(\"3 1\\n1 3\\n2 3\\n\") == \"No\""
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 3, \"\"\"#.#\"\"\") == \"1\"\nassert solution(4, 2, \"\"\"##\n.#\"\"\") == \"-1\"\nassert solution(4, 5, \"\"\"....#\n####.\n.###.\n.#...\"\"\") == \"2\"\nassert solution(2, 1, \"\"\".\n"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n3 3\n.#.\n###\n##.\n''') == '1'\nassert solution('''\n4 2\n##\n.#\n.#\n##\n''') == '-1'\nassert solution('''\n4 5\n....#\n####.\n.###.\n.#...\n''') == '2'\nassert solution('''\n2 1\n.\n"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r'3 3\\n###\\n##.\\n\\n4 2\\n##\\n.#\\n.#\\n##\\n\\n4 5\\n....#\\n####. #\\n.###. \\n.#...') == '1\\n'\nassert solution(r'4 2\\n##\\n.#\\n.#\\n##\\n\\n3 5\\n.....\\n.....\\n.....\\n') == '-1\\n'\nassert solution(r'2 1\\n.\\n# \\n') == '-1\\n'\nassert solution(r'3 5\\n.....\\n.....\\n.....\\n') == '0\\n'"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n###\\n##.\\n\") == \"1\"\nassert solution(\"4 2\\n##\\n.#\\n.#\\n##\\n\") == \"-1\"\nassert solution(\"4 5\\n....#\\n####. \\n.###. \\n.#... \\n\") == \"2\"\nassert solution(\"2 1\\n. \\n# \\n\") == \"-1\"\nassert solution(\"3 5\\n.....\\n.....\\n.....\\n\") == \"0\"\n"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n.#.\\n###\\n##.\\n\\n4 2\\n##\\n.#\\n.#\\n##\\n\\n4 5\\n....#\\n####.#\\n.###.#\\n.#...#\\n\\n2 1\\n.\\n#.\\n\\n3 5\\n.....\\n.....\\n.....\\n\\n5 0\") == \"1\\n\"\nassert solution(\"4 2\\n##\\n.#\\n.#\\n##\\n\\n4 5\\n....#\\n####.#\\n.###.#\\n.#...#\\n\\n2 1\\n.\\n#.\\n\\n3 5\\n.....\\n.....\\n.....\\n\\n5 0\") == \"-1\\n\"\nassert solution(\"2 1\\n. \\n#.\\n\\n3 5\\n.....\\n.....\\n.....\\n\\n5 0\") == \"-1\\n\"\nassert solution(\"3 5\\n.....\\n.....\\n.....\\n\\n5 0\") == \"0\\n\""
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n.#.\\n###\\n##.\\n\\n4 2\\n##\\n.#\\n.#\\n##\\n\\n4 5\\n....#\\n####.\\n.###.\\n.#...\\n\\n2 1\\n.\\n#\") == \"1\\n\"\nassert solution(\"4 2\\n##\\n.#\\n.#\\n##\\n\\n4 5\\n....#\\n####.\\n.###.\\n.#...\\n\\n2 1\\n.\\n#\") == \"1\\n\"\nassert solution(\"4 5\\n....#\\n####.\\n.###.\\n.#...\\n\\n2 1\\n.\\n#\") == \"-1\\n\"\nassert solution(\"2 1\\n.\\n#\") == \"-1\\n\"\nassert solution(\"3 5\\n.....\\n.....\\n.....\\n\\n0\\n.....\\n.....\\n.....\\n\") == \"0\\n\""
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n#.##\\n###.##\\n##.###\\n##.###\\n\") == \"1\\n\"\nassert solution(\"4 2\\n##\\n.#\\n.#\\n##\\n\") == \"-1\\n\"\nassert solution(\"4 5\\n....#\\n####.##\\n.###.##\\n.#...##\\n\") == \"2\\n\"\nassert solution(\"2 1\\n.\\n#\\n\") == \"-1\\n\"\nassert solution(\"3 5\\n.....\\n.....\\n.....\\n\") == \"0\\n\"\n"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n.#\\n##. \\n\\n4 2\\n##\\n.#\\n.#\\n##\\n\\n4 5\\n....#\\n####. \\n.###. \\n.#... \\n\\n2 1\\n.\\n# \\n\\n3 5\\n.....\\n.....\\n.....\\n\") == \"1\\n\"\nassert solution(\"4 2\\n##\\n.#\\n.#\\n##\\n\\n4 5\\n....#\\n####. \\n.###. \\n.#... \\n\\n2 1\\n.\\n# \\n\\n3 5\\n.....\\n.....\\n.....\\n\") == \"-1\\n\"\nassert solution(\"4 5\\n....#\\n####. \\n.###. \\n.#... \\n\\n2 1\\n.\\n# \\n\\n3 5\\n.....\\n.....\\n.....\\n\") == \"2\\n\"\nassert solution(\"2 1\\n.\\n# \\n\\n3 5\\n.....\\n.....\\n.....\\n\") == \"-1\\n\"\nassert solution(\"3 5\\n.....\\n.....\\n.....\\n\") == \"0\\n\"\n"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Expected: {output()}, Received: {solution(input())}\"\n\ninput_ = \"\"\"3 3\n.#.\n###\n##.\n\"\"\"\n\noutput_ = \"1\"\n\nassert solution(input_) == output_, f\"Expected: {output_}, Received: {solution(input_)} ({input_})\"\n\ninput_ = \"\"\"4 2\n##\n.#\n.#\n##\n\"\"\"\n\noutput_ = \"-1\"\n\nassert solution(input_) == output_, f\"Expected: {output_}, Received: {solution(input_)} ({input_})\"\n\ninput_ = \"\"\"4 5\n....#\n####.\n.###.\n.#...\n\"\"\"\n\noutput_ = \"2\"\n\nassert solution(input_) == output_, f\"Expected: {output_}, Received: {solution(input_)} ({input_})\"\n\ninput_ = \"\"\"2 1\n.\n"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\\n4 3\\n1 0 2 3\\n\\nOutput\\nYES\\n1 2 2 3\\n\\nInput\\n3 10\\n10 10 10\\n\\nOutput\\nYES\\n10 10 10 \\n\\nInput\\n5 6\\n6 5 6 2 2\\n\\nOutput\\nNO\\n\\nInput\\n3 5\\n0 0 0\\n\\nOutput\\nYES\\n5 4 2\") == \"YES\\n1 2 2 3\\nNO\\n\\nYES\\n5 4 2\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n4 3\n1 0 2 3\n''') == 'YES\\n1 2 2 3'\n\nassert solution('''\n3 10\n10 10 10\n''') == 'YES\\n10 10 10'\n\nassert solution('''\n5 6\n6 5 6 2 2\n''') == 'NO'\n\nassert solution('''\n3 5\n0 0 0\n''') == 'YES\\n5 4 2'"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"YES\\n1 2 2 3\\nYES\\n10 10 10 \\nYES\\n5 4 2\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"YES\\n1 2 2 3\\nYES\\n10 10 10\\nYES\\n5 4 2\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n1 0 2 3\\n\") == \"YES\\n1 2 2 3\\n\"\nassert solution(\"3 10\\n10 10 10\\n\") == \"YES\\n10 10 10\\n\"\nassert solution(\"5 6\\n6 5 6 2 2\\n\") == \"NO\\n\"\nassert solution(\"3 5\\n0 0 0\\n\") == \"YES\\n5 4 2\\n\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"YES\\n1 2 2 3\"\nassert solution() == \"YES\\n10 10 10\"\nassert solution() == \"NO\\n5 4 2\"\nassert solution() == \"YES\\n5 4 2\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n4 3\n1 0 2 3\n''') == 'YES\\n1 2 2 3'\n\nassert solution('''\n3 10\n10 10 10\n''') == 'YES\\n10 10 10'\n\nassert solution('''\n5 6\n6 5 6 2 2\n''') == 'NO'\n\nassert solution('''\n3 5\n0 0 0\n''') == 'YES\\n5 4 2'"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n1 0 2 3\\n\") == \"YES\\n1 2 2 3\"\nassert solution(\"3 10\\n10 10 10\\n\") == \"YES\\n10 10 10 \"\nassert solution(\"5 6\\n6 5 6 2 2\\n\") == \"NO\"\nassert solution(\"3 5\\n0 0 0\\n\") == \"YES\\n5 4 2\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"YES\\n1 2 2 3\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\") == \"4 3 6 2\", \"Your solution is incorrect.\"\nassert solution(\"1\\n42\") == \"42  \", \"Your solution is incorrect.\"\nassert solution(\"2\\n1 1 1 1\") == \"1 1\", \"Your solution is incorrect.\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\") == \"4 3 6 2\\n1 1\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=open(\"input.txt\", \"r\")) == \"4 3 6 2\\n42\\n1 1\\n\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\") == \"4 3 6 2\", \"Test case 1\"\nassert solution(\"1\\n42\") == \"42\", \"Test case 2\"\nassert solution(\"2\\n1 1 1 1\") == \"1 1\", \"Test case 3\"\n\nfrom typing import List"
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\") == \"4 3 6 2\", \"Incorrect output for case 1\"\nassert solution(\"1\\n42\") == \"42\", \"Incorrect output for case 2\"\nassert solution(\"2\\n1 1 1 1\") == \"1 1\", \"Incorrect output for case 3\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '4 3 6 2\\n42'"
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\") == \"4 3 6 2\"\nassert solution(\"1\\n42\") == \"42\"\nassert solution(\"2\\n1 1 1 1\") == \"1 1\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\\n1\\n42\\n2\\n1 1 1 1\\n\") == \"4 3 6 2\\n1 1\\n42\\n1 1 1 1\\n\"\nassert solution(\"1\\n42\\n\") == \"42\\n\"\nassert solution(\"2\\n1 1 1 1\\n\") == \"1 1\\n\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\") == \"4 3 6 2\"\nassert solution(\"1\\n42\") == \"42  \"\nassert solution(\"2\\n1 1 1 1\") == \"1 1\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\") == \"4 3 6 2\"\nassert solution(\"1\\n42\") == \"42  \"\nassert solution(\"2\\n1 1 1 1\") == \"1 1\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected_output, f\"Test failed. Expected output: {expected_output}, Actual output: {solution}\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\") == \"3\\n\", \"Example 1\"\nassert solution(\"3\\n1 1\\n2 1\\n3 1\") == \"6\\n\", \"Example 2\"\nassert solution(\"4\\n2 1\\n2 2\\n3 1\\n3 2\") == \"6\\n\", \"Example 3\"\n\nfrom typing import List"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\") == \"3\"\nassert solution(\"3\\n1 1\\n2 1\\n3 1\") == \"6\"\nassert solution(\"4\\n2 1\\n2 2\\n3 1\\n3 2\") == \"6\"\nassert solution(\"6\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\") == \"6\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\\n\") == \"3\\n\"\nassert solution(\"3\\n1 1\\n2 1\\n3 1\\n\") == \"6\\n\"\nassert solution(\"4\\n2 1\\n2 2\\n3 1\\n3 2\\n\") == \"6\\n\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 3, \"Expected output 3, got {}\".format(solution(3))\nassert solution(4) == 6, \"Expected output 6, got {}\".format(solution(4))\nassert solution(1) == 3, \"Expected output 3, got {}\".format(solution(1))\nassert solution(2) == 6, \"Expected output 6, got {}\".format(solution(2))"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input())}\"\n\nfrom typing import List"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1\\n1\\n\") == \"3\"\nassert solution(\"1\\n2\\n1\\n\") == \"6\"\nassert solution(\"1\\n2\\n3\\n\") == \"6\"\nassert solution(\"4\\n2\\n2\\n3\\n3\\n\") == \"6\"\nassert solution(\"1\\n1\\n1\\n\") == \"3\"\nassert solution(\"1\\n2\\n1\\n\") == \"6\"\nassert solution(\"1\\n2\\n3\\n\") == \"6\"\nassert solution(\"4\\n2\\n2\\n3\\n3\\n\") == \"6\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1\\n1\\n\") == \"3\"\nassert solution(\"1\\n2\\n1\\n\") == \"6\"\nassert solution(\"1\\n1\\n1\\n\") == \"3\"\nassert solution(\"2\\n1\\n1\\n\") == \"6\"\nassert solution(\"2\\n1\\n2\\n\") == \"6\"\nassert solution(\"3\\n1\\n1\\n\") == \"6\"\nassert solution(\"3\\n1\\n2\\n\") == \"6\"\nassert solution(\"4\\n2\\n1\\n2\\n\") == \"6\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected, f\"Solution is incorrect. Expected: {expected}, Received: {solution}\"\n"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n.E.\\nE.E\\n.E.\") == \"1 1\\n2 2\\n3 3\"\nassert solution(\"3\\nEEE\\nE..\\nE.E\") == \"-1\"\nassert solution(\"5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n\") == \"3 3\\n1 3\\n2 2\\n4 4\\n5 3\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n.E.\\nE.E.\\n.E.\\n\") == [\"1 1\", \"2 2\", \"3 3\"]\nassert solution(\"3\\nEEE\\nE..\\nE.E\\n\") == [-1]\nassert solution(\"5\\nEE.EE\\nE.EE.\\nE...E\\n.EE.E\\nEE.EE\\n\") == [\"3 3\", \"1 3\", \"2 2\", \"4 4\", \"5 3\"]"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n.E.\\nE.E\\n.E.') == '1 1\\n2 2\\n3 3'\nassert solution('3\\nEEE\\nE..\\nE.E') == '-1'\nassert solution('5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE') == '3 3\\n1 3\\n2 2\\n4 4\\n5 3'"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n3\n.E.\nE.E\n.E.\n''') == '''\n1 1\n2 2\n3 3\n'''\n\nassert solution('''\n3\nEEE\nE..\nE.E\n''') == '''\n-1\n'''\n\nassert solution('''\n5\nEE.EE\nE.EE.\nE...E\n.EE.E\nEE.EE\n''') == '''\n3 3\n1 3\n2 2\n4 4\n5 3\n'''\n\nfrom typing import List"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '1 1\\n2 2\\n3 3'\nassert solution() == '-1'\nassert solution() == '3 3\\n1 3\\n2 2\\n4 4\\n5 3'\n\nfrom typing import List"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n.E.\\nE.E.\\n.E.\\n\") == [\"1 1\", \"2 2\", \"3 3\"]\nassert solution(\"3\\nEEE\\nE..\\nE.E\\n\") == [\"-1\"]\nassert solution(\"5\\nEE.EE\\nE.EE.\\nE...E\\n.EE.E\\nEE.EE\\n\") == [\"3 3\", \"1 3\", \"2 2\", \"4 4\", \"5 3\"]"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n.E.\\nE.E\\n.E.\\n') == ['1 1', '2 2', '3 3']\nassert solution('3\\nEEE\\nE..\\nE.E\\n') == [-1]\nassert solution('5\\nEE.EE\\nE.EE.\\nE...E\\n.EE.E\\nEE.EE\\n') == ['3 3', '1 3', '2 2', '4 4', '5 3']"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n.E.\\nE.E\\n.E.\\n') == '1 1\\n2 2\\n3 3'\nassert solution('3\\nEEE\\nE..\\nE.E\\n') == '-1'\nassert solution('5\\nEE.EE\\nE.EE.\\nE...E\\n.EE.E\\nEE.EE\\n') == '3 3\\n1 3\\n2 2\\n4 4\\n5 3'"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''3\n.E.\nE.E\n.E.''') == '''1 1\n2 2\n3 3'''\n\nassert solution('''3\nEEE\nE..\nE.E\n''') == '''-1'''\n\nassert solution('''5\nEE.EE\nE.EE.\nE...E\n.EE.E\nEE.EE\n''') == '''3 3\n1 3\n2 2\n4 4\n5 3'''"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n.E.\\nE.E\\n.E.\\n') == '1 1\\n2 2\\n3 3\\n'\nassert solution('3\\nEEE\\nE..\\nE.E\\n') == '-1\\n'\nassert solution('5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n') == '3 3\\n1 3\\n2 2\\n4 4\\n5 3\\n'"
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution(stdin)) == \"32\"\nassert solution(solution(stdin)) == \"32\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10 2\\n10 -1 2 2 2 2 2 2 -1 10') == '32'\nassert solution('5 10\\n-1 -1 -1 -1 -1') == '-1'"
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '32'"
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"32\", \"Incorrect output\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"32\\n\", \"Test case 1 failed\"  # Test case 1\nassert solution(stdin) == \"32\\n\", \"Test case 2 failed\"  # Test case 2\nassert solution(stdin) == \"-1\\n\", \"Test case 3 failed\"  # Test case 3"
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '32', 'Output is incorrect'"
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 2\\n10 -1 2 2 2 2 2 2 -1 10\\n5 10\\n-1 -1 -1 -1 -1\") == \"32\\n\"\n\nassert solution(\"5 10\\n-1 -1 -1 -1 -1\") == \"-1\\n\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 2\\n10 -1 2 2 2 2 2 2 -1 10\") == \"32\\n\"\nassert solution(\"5 10\\n-1 -1 -1 -1 -1\") == \"-1\\n\"\n"
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 2\\n10 -1 2 2 2 2 2 2 -1 10\") == \"32\\n\"\nassert solution(\"5 10\\n-1 -1 -1 -1 -1\") == \"-1\\n\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"32\", \"The expected output is: 32\\nThe actual output is: \" + str(solution(stdin)) + \"\\n\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 1 2\\n1 1 1\\n') == '3\\n'\nassert solution('4 2 3\\n1 2 4 8\\n') == '79\\n'"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected_output, f\"Expected output: {expected_output}, but got {solution}\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1 2\\n1 1 1\\n\") == \"3\"\nassert solution(\"4 2 3\\n1 2 4 8\\n\") == \"79\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2 3\\n1 2 4 8\") == \"79\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1 2\\n1 1 1\\n\") == \"3\"\nassert solution(\"4 2 3\\n1 2 4 8\\n\") == \"79\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 1 2\\n1 1 1\\n') == '3\\n'\nassert solution('4 2 3\\n1 2 4 8\\n') == '79\\n'"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1 2\\n1 1 1\\n\") == \"3\\n\"\nassert solution(\"4 2 3\\n1 2 4 8\\n\") == \"79\\n\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"Output: 79\\n\", \"Test case 1 failed!\"\nassert solution() == \"Output: 3\\n\", \"Test case 2 failed!\"\nassert solution() == \"Output: 79\\n\", \"Test case 3 failed!\"\nassert solution() == \"Output: 79\\n\", \"Test case 4 failed!\"\nassert solution() == \"Output: 79\\n\", \"Test case 5 failed!\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 2\\n1 1 1\") == \"3\"\nassert solution(\"4 2 3\\n1 2 4 8\") == \"79\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"7\\n7\\n4\\n7\\n7\\n\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"5 5\") == \"10\\n10\\n10\\n10\\n10\"\nassert solution(\"10 10\") == \"20\\n20\\n20\\n20\\n20\"\nassert solution(\"10 5\") == \"20\\n20\\n20\\n20\\n10\"\nassert solution(\"2 10\") == \"2\\n2\\n2\\n2\\n2\"\n"
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"5 5\") == \"25\\n25\\n12\\n25\\n25\"\nassert solution(\"10 10\") == \"105\\n105\\n54\\n105\\n105\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\") == \"7\"\nassert solution(\"5 3\") == \"7\"\nassert solution(\"3 6\") == \"23\"\nassert solution(\"3 10\") == \"18\"\nassert solution(\"2 2\") == \"7\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3') == '7'\nassert solution('4 4') == '4'\nassert solution('5 6') == '13'\nassert solution('10 10') == '220'\nassert solution('20 20') == '440'\nassert solution('100 100') == '30301603085662205043339738099011054624345958833093197357495735938476521264640429164555569252834701966313526293757345604133057135681520004059969906084211224970402180060155736852838475424140845940563862270194622633999340503884721049415124559947663266387004268919966217752157824477313870377016740623093463816353579367525015608056647424261324678088588612214582825610491905397437476175928366896915340318319376867040060868209201313564444609775575399521079869711990037994539039257034709826250476391118996646936425497563452411766013777806869155669576271052474569858116747101106412159992983052978515077291340209566715134406248149261340374001016443535540412659772972371561058590079282651537358025398994116164970871617594306499561278001629252227337662682540291076271460906531533159625160629150933549800443521702687595488892952812024714882107720359473346139319784940481157242818183946398605520463784049673138170630967048458967122137365273511795547136167413"
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"5 3\") == \"1\\n2\\n4\\n8\\n16\"\nassert solution(\"2 3\") == \"3\\n6\\n9\\n18\\n36\"\nassert solution(\"3 4\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"2 5\") == \"4\\n8\\n12\\n16\\n24\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"4 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"2 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"2 4\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"5 5\") == \"7\\n7\\n4\\n7\\n7\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\\n\"\nassert solution(\"5 5\") == \"20\\n20\\n10\\n20\\n20\\n\"\nassert solution(\"2 2\") == \"5\\n5\\n2\\n5\\n5\\n\"\nassert solution(\"10 5\") == \"125\\n125\\n625\\n125\\n125\\n\"\nassert solution(\"3 5\") == \"18\\n18\\n9\\n18\\n18\\n\"\nassert solution(\"3 4\") == \"7\\n7\\n4\\n7\\n7\\n\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"4 3\") == \"4\\n7\\n7\"\nassert solution(\"5 3\") == \"5\\n6\\n7\"\nassert solution(\"6 3\") == \"6\\n7\\n7\"\nassert solution(\"7 3\") == \"7\\n7\\n7\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"TODO\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"6\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''7 2\n1 5 6 2\n1 3\n3 2\n4 5\n3 7\n4 3\n4 6''') == '6'\nassert solution('''9 3\n3 2 1 6 5 9\n8 9\n3 2\n2 7\n3 4\n7 6\n4 5\n2 1\n2 8''') == '9'"
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\\n\") == \"6\\n\"\nassert solution(\"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\\n\") == \"9\\n\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"6\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6') == '6\\n'\nassert solution('9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8') == '9\\n'"
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\\n\") == \"6\"\nassert solution(\"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\\n\") == \"9\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"6\", \"Your solution is incorrect\"\n"
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\\n') == '6\\n'\nassert solution('9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\\n') == '9\\n'"
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\\n\") == 6\nassert solution(\"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\\n\") == 9"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0010100\") == \"3\\n3 1 3 4\\n3 2 5 6\\n1 7\"\nassert solution(\"111\") == \"-1\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0010100\") == \"3\\n3 1 3 4\\n3 2 5 6\\n1 7\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0010100\") == \"3\\n1\\n3\\n4\\n3\\n2\\n5\\n6\\n1\\n7\"\nassert solution(\"111\") == \"-1\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0010100\") == \"3\\n3 1 3 4\\n3 2 5 6\\n1 7\"\nassert solution(\"111\") == \"-1\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('0010100') == '3\\n3 1 3 4\\n3 2 5 6\\n1 7'\nassert solution('111') == '-1'\n"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(b\"0010100\") == \"3\\n3 1 3 4\\n3 2 5 6\\n1 7\"\nassert solution(b\"111\") == \"-1\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0010100\") == \"3\\n3 1 3 4\\n3 2 5 6\\n1 7\"\nassert solution(\"111\") == \"-1\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('0010100') == 3\nassert solution('111') == -1\nprint('All tests passed.')"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == -1"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0010100\") == \"3\\n1 3 4\\n2 5 6\\n1 7\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n2 1 2\\n2 2 3\") == \"1\"\nassert solution(\"1 3\\n3 1 2 3\\n\") == \"6\"\nassert solution(\"2 4\\n2 1 2\\n3 2 3 4\") == \"2\"\nassert solution(\"2 2\\n3 2 2 1\\n2 1 2\") == \"1\"\nassert solution(\"3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\") == \"24\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1', \"Output should be 1\"\nassert solution(stdin) == '6', \"Output should be 6\"\nassert solution(stdin) == '2', \"Output should be 2\"\nassert solution(stdin) == '1', \"Output should be 1\"\nassert solution(stdin) == '24', \"Output should be 24\"\n"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == output"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3\\n2 1 2\\n2 2 3') == '1'\nassert solution('1 3\\n3 1 2 3\\n') == '6'\nassert solution('2 4\\n2 1 2\\n3 2 3 4\\n') == '2'\nassert solution('2 2\\n3 2 2 1\\n2 1 2\\n') == '1'\nassert solution('3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n') == '24'"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 3\\n2 1 2\\n2 2 3') == '1\\n'\nassert solution('1 3\\n3 1 2 3\\n') == '6\\n'\nassert solution('2 4\\n2 1 2\\n3 2 3 4\\n') == '2\\n'\nassert solution('2 2\\n3 2 2 1\\n2 1 2\\n') == '1\\n'\nassert solution('3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n') == '24\\n'"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3\\n2 1 2\\n2 2 3') == '1'\nassert solution('1 3\\n3 1 2 3\\n2 2 1\\n2 1 2\\n3 2 3 4\\n2 3 2 1\\n2 1 2') == '6'\nassert solution('2 4\\n2 1 2\\n3 2 3 4\\n2 3 2 1\\n2 1 2\\n3 2 3 4') == '2'\nassert solution('2 2\\n3 2 2 1\\n2 1 2\\n1 2 2\\n2 2 2\\n1 2 2') == '1'\nassert solution('3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n2 3 2 1\\n2 1 2\\n3 2 3 4') == '24'"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '1\\n', \"Test case 1 failed\"\nassert solution(stdin) == '6\\n', \"Test case 2 failed\"\nassert solution(stdin) == '2\\n', \"Test case 3 failed\"\nassert solution(stdin) == '1\\n', \"Test case 4 failed\"\nassert solution(stdin) == '24\\n', \"Test case 5 failed\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n2 1 2\\n2 2 3\\n\") == \"1\\n\"\nassert solution(\"1 3\\n3 1 2 3\\n\") == \"6\\n\"\nassert solution(\"2 4\\n2 1 2\\n3 2 3 4\\n\") == \"2\\n\"\nassert solution(\"2 2\\n3 2 2 1\\n2 1 2\\n\") == \"1\\n\"\nassert solution(\"3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n\") == \"24\\n\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n2 1 2\\n2 2 3\") == \"1\\n\"\nassert solution(\"1 3\\n3 1 2 3\\n\") == \"6\\n\"\nassert solution(\"2 4\\n2 1 2\\n3 2 3 4\\n\") == \"2\\n\"\nassert solution(\"2 2\\n3 2 2 1\\n2 1 2\\n\") == \"1\\n\"\nassert solution(\"3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n\") == \"24\\n\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n2 1 2\\n2 2 3\") == \"1\\n\"\nassert solution(\"1 3\\n3 1 2 3\\n\") == \"6\\n\"\nassert solution(\"2 4\\n2 1 2\\n3 2 3 4\\n\") == \"2\\n\"\nassert solution(\"2 2\\n3 2 2 1\\n2 1 2\\n\") == \"1\\n\"\nassert solution(\"3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n\") == \"24\\n\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '3', \"Expected output: 3, got: {}\".format(solution(stdin))\nassert solution(stdin) == '6', \"Expected output: 6, got: {}\".format(solution(stdin))"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '3\\n'\nassert solution(open('sample_input.txt', 'r')) == '3\\n'\nassert solution(open('second_sample_input.txt', 'r')) == '6\\n'"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 4 2 3 1\\n4\\n1 5 4 7\\n\") == \"3\\n\"\nassert solution(\"4\\n1 5 4 7\\n\") == \"6\\n\"\n"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 4 2 3 1\\n4\\n1 5 4 7\") == \"3\\n\"\nassert solution(\"4\\n1 5 4 7\") == \"6\\n\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Input\\n5\\n1 4 2 3 1\\n\\nOutput\\n3\\nInput\\n4\\n1 5 4 7\\n\\nOutput\\n6\") == \"3\\n6\\n\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n1 4 2 3 1\\n') == '3\\n'\nassert solution('4\\n1 5 4 7\\n') == '6\\n'"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 4 2 3 1\\n4\\n1 5 4 7\") == \"3\"\nassert solution(\"4\\n1 5 4 7\") == \"6\"\n"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 4 2 3 1\\n\") == \"3\\n\"\nassert solution(\"4\\n1 5 4 7\\n\") == \"6\\n\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == str(3)\nassert solution(stdin=input()) == str(6)\nassert solution(stdin=input()) == str(3)\nassert solution(stdin=input()) == str(6)\nassert solution(stdin=input()) == str(3)"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3\", \"Expected output: 3, received: {}\".format(solution())"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n1 2') == '4'\nassert solution('4\\n1 1 2 3') == '20'\nassert solution('5\\n1 1 1 1 1') == '62'"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"4\\n\"\nassert solution(\"4\\n1 1 2 3\\n\") == \"20\\n\"\nassert solution(\"5\\n1 1 1 1 1\\n\") == \"62\\n\"\n"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"4\\n\"\nassert solution(\"4\\n1 1 2 3\\n\") == \"20\\n\"\nassert solution(\"5\\n1 1 1 1 1\\n\") == \"62\\n\""
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'Output', 'The output is not as expected.'\n"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(4) == 20\nassert solution(5) == 62\n"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 4\nassert solution(4) == 20\nassert solution(5) == 62"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 4\nassert solution(2) == 20\nassert solution(4) == 62"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 2\\n\") == 4\nassert solution(\"4\\n1 1 2 3\\n\") == 20\nassert solution(\"5\\n1 1 1 1 1\\n\") == 62\n"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output() for input, output in [\n    (1, 2),\n    (4, 1, 2, 3),\n    (5, 1, 1, 1, 1),\n]"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Input\\n2\\n1 2\\n\\nOutput\\n4\\n\\nInput\\n4\\n1 1 2 3\\n\\nOutput\\n20\\n\\nInput\\n5\\n1 1 1 1 1\\n\\nOutput\\n62\") == \"Output\\n20\\n\\nInput\\n5\\n1 1 1 1 1\\n\\nOutput\\n62\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n1 1\\n1 1\\n1 1\\n') == '6'\nassert solution('4\\n1 2\\n2 1\\n3 5\\n5 3\\n') == '15'\nassert solution('1\\n5 6\\n') == '7'"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Error: {input()}!= {output}\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"3\\n1 1\\n1 1\\n1 1\") == \"6\"\nassert solution(stdin=\"4\\n1 2\\n2 1\\n3 5\\n5 3\\n\") == \"15\"\nassert solution(stdin=\"1\\n5 6\\n\") == \"7\"\n"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n1 1\\n1 1\\n1 1') == '6'\nassert solution('4\\n1 2\\n2 1\\n3 5\\n5 3') == '15'\nassert solution('1\\n5 6') == '7'"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"6\", \"The output is incorrect.\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1 1\\n1 1\\n1 1') == '6'\nassert solution('4\\n1 2\\n2 1\\n3 5\\n5 3') == '15'\nassert solution('1\\n5 6') == '7'"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 1\\n1 1\\n1 1') == '6'\nassert solution('4\\n1 2\\n2 1\\n3 5\\n5 3') == '15'\nassert solution('1\\n5 6') == '7'"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1 1\\n1 1\\n\") == \"6\"\nassert solution(\"4\\n1 2\\n2 1\\n3 5\\n5 3\\n\") == \"15\"\nassert solution(\"1\\n5 6\\n\") == \"7\"\n"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    3\n    1 1\n    1 1\n    1 1\n    \"\"\"\n) == \"6\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    1 2\n    2 1\n    3 5\n    5 3\n    \"\"\"\n) == \"15\\n\"\n\nassert solution(\n    \"\"\"\n    1\n    5 6\n    \"\"\"\n) == \"7\\n\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1\\n1 1\\n1 1\") == \"6\\n\"\nassert solution(\"4\\n1 2\\n2 1\\n3 5\\n5 3\\n\") == \"15\\n\"\nassert solution(\"1\\n5 6\\n\") == \"7\\n\"\nassert solution(\"5\\n1 1\\n1 1\\n1 1\") == \"6\\n\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\", \"The solution is not correct. Please provide the correct code.\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test failed.\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Solution failed. Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test failed. Input: {input()}, Output: {output}\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n4\\n2\\n\") == \"1\\n\"\nassert solution(\"2\\n1\\n4 4\\n2\\n\") == \"3\\n\"\nassert solution(\"3\\n3 3\\n10 10 10\\n17\\n\") == \"6\\n\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n4\\n2\\n\\nOutput\\n1\\n\\nInput\\n2\\n1\\n4 4\\n2\\n\\nOutput\\n3\\n\\nInput\\n3\\n3 3\\n10 10 10\\n17\\n\\nOutput\\n6\") == \"1\\n\\n\"\nassert solution(\"2\\n1\\n4 4\\n2\\n\\nOutput\\n3\\n\\nInput\\n3\\n3 3\\n10 10 10\\n17\\n\\nOutput\\n6\") == \"3\\n\\n\"\nassert solution(\"3\\n3 3\\n10 10 10\\n17\\n\\nOutput\\n6\") == \"6\\n\\n\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"3\"\n\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"3\"\n\nassert solution(\"7\") == \"1\"\nassert solution(\"8\") == \"2\"\nassert solution(\"9\") == \"3\"\n\nassert solution(\"10\") == \"6\"\nassert solution(\"11\") == \"12\"\nassert solution(\"12\") == \"24\"\n\nassert solution(\"13\") == \"360\"\nassert solution(\"14\") == \"720\"\nassert solution(\"15\") == \"1080\"\n\nassert solution(\"16\") == \"1032\"\nassert solution(\"17\") == \"2048\"\nassert solution(\"18\") == \"3072\"\n\nassert solution(\"19\") == \"16800\"\nassert solution(\"20\") == \"33600\"\nassert solution(\"21\") == \"51200\"\n\nassert solution(\"22\") == \"100864300800\"\nassert solution(\"23\") == \"201728601601\"\nassert solution(\"24\") == \"303457203202\"\n\nassert solution(\"25\") == \"128146306403\"\nassert solution(\"26\") == \"256292612806\"\nassert solution(\"27\") == \"384439025612\"\n\nassert solution(\"28\") == \"326585242246\"\nassert solution(\"29\") == \"653170484492\"\nassert solution(\"30\") == \"980762968984\"\n\nassert solution(\"31\") == \"547281215362\"\nassert solution(\"32\") == \"1094562430724\"\nassert solution(\"33\") == \"1641944861448\"\n\nassert solution(\"34\") == \"1213318599976\"\nassert solution(\"35\") == \"2426637199952\"\nassert solution(\"36\") == \"3641074399904\"\n\nassert solution(\"37\") == \"1562926031888\"\nassert solution(\"38\") == \"2925852063776\"\nassert solution(\"39\") == \"4299780127552\"\n\nassert solution(\"40\") == \"19532796863008\"\nassert solution(\"41\") == \"34359738367072\"\nassert solution(\"42\") == \"50299476734144\"\n\nassert solution(\"43\") == \"31561553076851\"\nassert solution(\"44\") == \"65410726153702\"\nassert solution(\"45\") == \"100340097027404\"\n\nassert solution(\"46\") == \"54750222074037\"\nassert solution(\"47\") == \"109500444148074\"\nassert solution(\"48\") == \"164250688296148\"\n\nassert solution(\"49\") == \"206050521971765\"\nassert solution(\"50\") == \"354101043943530\"\nassert solution(\"51\") == \"512202087887060\"\n\nassert solution(\"52\") == \"408900691159402\"\nassert solution(\"53\") == \"817801382318804\"\nassert solution(\"54\") == \"1"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n4\\n2\\n\") == \"1\\n\"\nassert solution(\"2\\n1\\n4 4\\n2\\n\") == \"3\\n\"\nassert solution(\"3\\n3 3\\n10 10 10\\n17\\n\") == \"6\\n\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\\n\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\\n\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\\n\") == \"0\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3 3 100\\n1 1 1') == '10'\nassert solution('3 6 5 1000000007\\n1 2 3') == '0'\nassert solution('3 5 6 11\\n1 2 1') == '0'"
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''3 3 3 100\n1 1 1''') == '10\\n'\nassert solution('''3 6 5 1000000007\n1 2 3''') == '0\\n'\nassert solution('''3 5 6 11\n1 2 1''') == '0\\n'"
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\") == \"0\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\") == \"0\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\\n\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\\n\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\\n\") == \"0\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\") == \"0\"\n"
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\") == \"0\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\") == \"10\\n\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\") == \"0\\n\"\nassert solution(\"3 5 6 11\\n1 2 1\") == \"0\\n\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\\n\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\\n\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\\n\") == \"0\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3\n2 2 3\nintel\ncode\nch allenge\"\"\") == \"YES\"\nassert solution(\"\"\"4\n1 2 3 1\na\nbcdefghi\njklmnopqrstu\nvwxyz\n\"\"\") == \"NO\"\nassert solution(\"\"\"4\n13 11 15 15\nto be or not to be that is the question\nwhether tis nobler in the mind to suffer\nthe slings and arrows of outrageous fortune\nor to take arms against a sea of troubles\"\"\") == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n2 2 3\\nintel\\ncode\\nch allenge\\n') == 'YES\\n'\nassert solution('4\\n1 2 3 1\\na\\nbcdefghi\\njklmnopeqrstu\\nwxyz\\n') == 'NO\\n'\nassert solution('4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\the slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\\n') == 'YES\\n'"
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n2 2 3\\nintel\\ncode\\nch allenge') == 'YES'\nassert solution('4\\n1 2 3 1\\na\\nbcdefghi\\njklmnopqrstu\\nvwxyz\\n') == 'NO'\nassert solution('4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles') == 'YES'"
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Input\\n3\\n2 2 3\\nintel\\ncode\\nch allenge\") == \"YES\"\nassert solution(\"Input\\n4\\n1 2 3 1\\na\\nbcde\\njhklmnopqrstuvwxyz\\n\") == \"NO\"\nassert solution(\"Input\\n4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\the slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\\n\") == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n2 2 3\\nintel\\ncode\\nch allenge') == 'YES'\nassert solution('4\\n1 2 3 1\\na\\nbcdefghi\\njklmnopqrstu\\nvwxyz') == 'NO'\nassert solution('4\\n13 11 15 15\\nt to be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\the slings and arrows of outrageous fortune\\or to take arms against a sea of troubles') == 'YES'"
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"YES\" # sample test case\nassert solution() == \"NO\" # sample test case"
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghi\\nklmnopqrstu\\nvwxyz\\n\") == \"NO\"\nassert solution(\"4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\\n\") == \"YES\"\nassert solution(\"2\\n2 2\\napple\\nbanana\\n\") == \"YES\"\nassert solution(\"2\\n2 2\\nbanana\\napple\\n\") == \"YES\"\nassert solution(\"3\\n1 2 3\\ncat\\nbear\\nmusketeer\\n\") == \"YES\"\nassert solution(\"3\\n1 2 3\\ncat\\nbear\\nmusketeer\\nwolf\\n\") == \"NO\"\nassert solution(\"3\\n1 2 3\\ncat\\nbear\\nmusketeer\\nzebra\\n\") == \"YES\"\nassert solution(\"2\\n1 2\\napple\\nbanana\\n\") == \"YES\"\nassert solution(\"3\\n1 2 3\\ncat\\nbear\\nmusketeer\\nzebra\\n\") == \"NO\"\nassert solution(\"1\\n1\\napple\\nbanana\\n\") == \"YES\"\nassert solution(\"3\\n1 2 3\\ncat\\nbear\\nmusketeer\\nwolf\\n\") == \"YES\"\nassert solution(\"3\\n1 2 3\\ncat\\nbear\\nmusketeer\\nzebra\\n\") == \"YES\"\nassert solution(\"1\\n1\\napple\\nbanana\\n\") == \"NO\"\nassert solution(\"3\\n1 2 3\\ncat\\nbear\\nmusketeer\\nwolf\\n\") == \"YES\"\nassert solution(\"3\\n1 2 3\\ncat\\nbear\\nmusketeer\\nzebra\\n\") == \"YES\"\nassert solution(\"1\\n1\\napple\\nbanana\\n\") == \"NO\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\") == \"YES\\n\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghijklmnopqrstuvwxyz\") == \"NO\\n\"\nassert solution(\"4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\") == \"YES\\n\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n2 2 3\\nintel\\ncode\\nch allenge') == 'YES'\nassert solution('4\\n1 2 3 1\\na\\nbcdfghij\\nklnmstu\\nuvwxyz\\n') == 'NO'\nassert solution('4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\the slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles') == 'YES'"
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\") == \"YES\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghi\\nklmnopqrstuvwxyz\\n\") == \"NO\"\nassert solution(\"4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\\n\") == \"YES\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '26', \"The maximum possible score is not correct\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 1 5\") == \"26\\n\"\nassert solution(\"1\\n10\") == \"10\\n\"\n"
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '26\\n', \"Test failed\"\nprint(\"Test passed\")"
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 1 5\\n\") == \"26\\n\"\nassert solution(\"1\\n10\\n\") == \"10\\n\"\n"
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 1 5\\n\") == \"26\\n\"\nassert solution(\"1\\n10\\n\") == \"10\\n\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 1 5\") == \"26\"\nassert solution(\"1\\n10\") == \"10\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"26\\n\", \"Input 3\"\nassert solution(1) == \"10\\n\", \"Input 1\"\n"
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '26\\n'\n"
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 26, \"The maximum possible score is not 26.\"\nassert solution(1) == 10, \"The maximum possible score is not 10.\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3,4) == 3\nassert solution(3,40) == 32"
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n1 3 5\\n\") == \"3\\n\"\nassert solution(\"3 40\\n10 30 50\\n\") == \"32\\n\"\n"
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''3 4\n1 3 5''') == '3\\n'\nassert solution('''3 40\n10 30 50''') == '32\\n'"
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n1 3 5\\n\") == \"3\"\nassert solution(\"3 40\\n10 30 50\\n\") == \"32\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\") == \"3\\n\"\nassert solution(\"3 40\") == \"32\\n\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n1 3 5\\n\") == \"3\"\nassert solution(\"3 40\\n10 30 50\\n\") == \"32\"\nassert solution(\"3 50\\n5 10 20\\n\") == \"50\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n1 3 5\\n\") == \"3\\n\"\nassert solution(\"3 40\\n10 30 50\\n\") == \"32\\n\"\n\nSolution:\n\n```python\n"
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\") == \"3\\n\"\nassert solution(\"3 40\") == \"32\\n\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n1 3 5\\n\") == \"3\\n\"\nassert solution(\"3 40\\n10 30 50\\n\") == \"32\\n\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\") == \"3\\n\"\nassert solution(\"3 40\") == \"32\\n\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9 1\\n1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11\\n\") == \"1 4 5 6 7 8 9\"\nassert solution(\"5 1\\n1 1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5\\n\") == \"1 2 4\"\nassert solution(\"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n\") == \"1 2\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    9 1\n    1 1\n    5 10\n    1 3\n    11 14\n    5 5\n    10 10\n    3 6\n    6 12\n    7 7\n    4 11\n    \"\"\"\n) == \"\"\"\n    1 4 5 6 7 8 9\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    5 1\n    1 1\n    3 3\n    2 3\n    1 2\n    3 4\n    4 5\n    \"\"\"\n) == \"\"\"\n    1 2 4\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    5 1\n    1 1\n    3 3\n    3 3\n    4 4\n    4 4\n    5 5\n    \"\"\"\n) == \"\"\"\n    1 2\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    5 1\n    1 1\n    3 3\n    3 3\n    4 4\n    4 4\n    5 5\n    \"\"\"\n) == \"\"\"\n    1 2\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    5 1\n    1 1\n    3 3\n    3 3\n    4 4\n    4 4\n    5 5\n    \"\"\"\n) == \"\"\"\n    1 2\n    \"\"\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9 1\\n1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11\") == [\"1\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"]"
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\\n# Test case 1\\nassert solution(['9 1\\n1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11']) == ['1 4 5 6 7 8 9']\\n\\n# Test case 2\\nassert solution(['5 1\\n1 1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5']) == ['1 2 4']\\n\\n# Test case 3\\nassert solution(['5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5']) == ['1 2']\"\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\\n# Test case 1\\nassert solution(['9 1\\n1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11']) == ['1 4 5 6 7 8 9']\\n\\n# Test case 2\\nassert solution(['5 1\\n1 1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5']) == ['1 2 4']\\n\\n# Test case 3\\nassert solution(['5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5']) == ['1 2']\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9 1\\n1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11\") == [\"1 4 5 6 7 8 9\"]\nassert solution(\"5 1\\n1 1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5\") == [\"1 2 4\"]\nassert solution(\"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\") == [\"1 2\"]\n"
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 1\\n1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11\\n\") == \"1 4 5 6 7 8 9\\n\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9 1\\n1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11\\n\") == \"1 4 5 6 7 8 9\", \"Test failed.\"\nassert solution(\"5 1\\n1 1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5\\n\") == \"1 2 4\", \"Test failed.\"\nassert solution(\"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n\") == \"1 2\", \"Test failed.\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9 1\\n1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11\") == \"1 4 5 6 7 8 9\\n\"\nassert solution(\"5 1\\n1 1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5\\n\") == \"1 2 4\\n\"\nassert solution(\"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n\") == \"1 2\\n\"\n"
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('9 1\\n1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11\\n') == '1 4 5 6 7 8 9\\n'\nassert solution('5 1\\n1 1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5\\n') == '1 2 4\\n'\nassert solution('5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n') == '1 2\\n'\nassert solution('5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n') == '1 2\\n'"
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9 1\\n1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11\\n\") == \"1 4 5 6 7 8 9\\n\"\nassert solution(\"5 1\\n1 1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5\\n\") == \"1 2 4\\n\"\nassert solution(\"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n\") == \"1 2\\n\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 2\\n2 1\\n1 2.0\\n1 3.100\\n') == '1'\nassert solution('3 3\\n1 5.0\\n2 5.5\\n3 6.0\\n') == '0'\nassert solution('6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\\n') == '2'"
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n3 2\n2 1\n1 2.0\n1 3.100\n''') == '1'\n\nassert solution('''\n3 3\n1 5.0\n2 5.5\n3 6.0\n''') == '0'\n\nassert solution('''\n6 3\n1 14.284235\n2 17.921382\n1 20.328172\n3 20.842331\n1 25.790145\n1 27.204125\n''') == '2'"
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n    3 2\n    2 1\n    1 2.0\n    1 3.100\n    \"\"\") == \"1\"\nassert solution(\"\"\"\n    3 3\n    1 5.0\n    2 5.5\n    3 6.0\n    \"\"\") == \"0\"\nassert solution(\"\"\"\n    6 3\n    1 14.284235\n    2 17.921382\n    1 20.328172\n    3 20.842331\n    1 25.790145\n    1 27.204125\n    \"\"\") == \"2\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\\n\") == \"1\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\\n\") == \"0\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\\n\") == \"2\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 2\\n2 1\\n1 2.0\\n1 3.100\\n') == '1'\nassert solution('3 3\\n1 5.0\\n2 5.5\\n3 6.0\\n') == '0'\nassert solution('6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\\n') == '2'"
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\\n\") == \"1\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\\n\") == \"0\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\\n\") == \"2\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1\", \"Output: 1\"\nassert solution(stdin) == \"0\", \"Output: 0\"\nassert solution(stdin) == \"2\", \"Output: 2\"\n"
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\") == 1\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\") == 0\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\") == 2"
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Solution is incorrect. Expected: {expected_output}, Received: {solution(input())}\"\n"
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '1', \"The correct output is 1.\"\nassert solution() == '0', \"The correct output is 0.\"\nassert solution() == '2', \"The correct output is 2.\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3\\n\"\n"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\"\nassert solution(\"6 4\\n2 3 6 5 4 10\") == \"5\"\nassert solution(\"6 5\\n2 3 6 5 4 10\") == \"4\"\nassert solution(\"6 3\\n2 3 6 5 4 10\") == \"2\"\nassert solution(\"6 1\\n2 3 6 5 4 10\") == \"1\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\\n\"\n"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\"\nassert solution(\"6 3\\n2 3 6 5 4 10\") == \"6\"\nassert solution(\"6 4\\n2 3 6 5 4 10\") == \"12\"\nassert solution(\"6 5\\n2 3 6 5 4 10\") == \"21\"\nassert solution(\"6 6\\n2 3 6 5 4 10\") == \"25\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"3\\n\"  # expected output: 3"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"1\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\"\nassert solution(\"6 2\\n10 5 2 1 3 7\") == \"2\"\nassert solution(\"6 2\\n10 5 2 1 3 7\") == \"3\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6 2\\n2 3 6 5 4 10') == '3'\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3 6 5 4 10\") == \"3\"\nassert solution(\"6 2\") == \"2\"\nassert solution(\"6\") == \"6\"\nassert solution(\"10\") == \"10\"\nassert solution(\"5 10\") == \"5\"\nassert solution(\"5\") == \"1\"\nassert solution(\"3 5\") == \"2\"\nassert solution(\"5 6 8 10 12 14\") == \"3\"\nassert solution(\"1 2 3 4 5\") == \"1\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"2\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"3\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14\") == \"4\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\") == \"5\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\") == \"6\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\") == \"7\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\") == \"8\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\") == \"9\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"10\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24\") == \"11\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\") == \"12\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26\") == \"13\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27\") == \"14\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28\") == \"15\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29\") == \"16\"\nassert solution(\"1 2 3 4 5"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\"\nassert solution(\"10 2\\n2 3 6 5 4 10\") == \"2\"\nassert solution(\"3 3\\n2 3 6 5 4 10\") == \"1\"\nassert solution(\"3 4\\n2 3 6 5 4 10\") == \"0\"\nassert solution(\"3 5\\n2 3 6 5 4 10\") == \"0\"\n"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"4\\n\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\\n\") == \"10\\n\"\n\nprint(solution(stdin))"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"4\\n\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\\n\") == \"10\\n\"\n\nfor test in [(\"2\", \"2\"), (\"3\", \"4\"), (\"9\", \"10\")]:\n    assert solution(*test) == test[1] + \"\\n\"\n\nassert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"4\\n\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\\n\") == \"10\\n\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"4\"\nassert solution(\"9\") == \"10\"\n"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n2 2\\n3 3\\n9 1 2 1 3 2 2 2 2 3\\n\") == \"10\\n\"\nassert solution(\"1 2\\n3 3\\n\") == \"2\\n\"\nassert solution(\"1 2\\n\") == \"2\\n\"\nassert solution(\"1 2\\n2 2\\n\") == \"2\\n\"\nassert solution(\"1 2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"1 2\\n\") == \"2\\n\"\nassert solution(\"1 2\\n2 2\\n3 3\\n\") == \"4\\n\"\nassert solution(\"1 2\\n1 2\\n3 3\\n\") == \"4\\n\"\nassert solution(\"1 2\\n1 2\\n3 3\\n1 2\\n3 3\\n\") == \"4\\n\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\"\nassert solution(\"3\\n1 2 3\\n\") == \"4\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\\n\") == \"10\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output() # check if the solution matches the expected output"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 2\\n\\n3\\n1 2 3\\n\\n9\\n1 2 1 3 2 2 2 2 3\\n\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\\n\\n9\\n1 2 1 3 2 2 2 2 3\\n\\n\") == \"4\\n\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 2 3\\n\\n\") == \"10\\n\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test case not passed.\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '4'\n\nassert solution(stdin) == '10'"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"4\\n\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\\n\") == \"10\\n\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '4', \"Incorrect output.\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\\n\", \"Incorrect output.\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '4', \"The correct number of sequences is not provided.\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == '4\\n'\nassert solution(open('test_case.txt', 'r')) == '4\\n'"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n\") == \"4\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n\") == \"4\\n\", \"Incorrect output\"\nassert solution(\"4\\n\") == \"1\\n\", \"Incorrect output\"\nassert solution(\"5\\n\") == \"2\\n\", \"Incorrect output\"\nassert solution(\"6\\n\") == \"0\\n\", \"Incorrect output\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\\n\", \"Output mismatch\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"4\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n\") == \"4\\n\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '4\\n', 'The correctness of the solution is not verified.'"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 6\\n1 5 1 4\") == \"5\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 6\\n1 5 1 4\") == 5"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == 5"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"5\\n\", \"Output does not match\"\n"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == \"5\"\nassert solution(\"4 6\\n1 5 2 4\\n\") == \"8\"\nassert solution(\"4 6\\n1 5 3 4\\n\") == \"7\"\nassert solution(\"4 6\\n1 5 4 4\\n\") == \"5\"\nassert solution(\"4 6\\n1 5 5 4\\n\") == \"6\"\nassert solution(\"4 6\\n1 5 6 4\\n\") == \"9\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 6\\n1 5 1 4') == '5'\nassert solution('5 7\\n2 3 4 5 6') == '6'\nassert solution('10 11\\n1 2 3 4 5') == '7'\nassert solution('11 12\\n6 5 4 3 2') == '9'"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == \"5\"\n"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == \"5\"\nassert solution(\"3 2\\n1 2 1 2\\n\") == \"2\"\nassert solution(\"5 5\\n1 2 1 2\\n\") == \"5\"\nassert solution(\"4 7\\n1 2 1 2\\n\") == \"3\"\nassert solution(\"1 3\\n2 3 2 3\\n\") == \"3\"\nassert solution(\"5 6\\n1 2 1 2\\n\") == \"6\"\nassert solution(\"5 7\\n1 2 1 2\\n\") == \"7\"\nassert solution(\"4 5\\n1 2 1 2\\n\") == \"6\"\nassert solution(\"6 7\\n1 2 1 2\\n\") == \"8\"\nassert solution(\"1 5\\n2 3 2 3\\n\") == \"4\"\n"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == \"5\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"+-+-+\") == \"1\", \"Polycarpus just has been out of luck lately! As soon as he found a job in the \\\"Binary Cat\\\" cafe, the club got burgled. All ice-cream was stolen.\"\nassert solution(\"---\") == \"3\", \"The police wonders what minimum number of distinct people Polycarpus could have seen. Assume that he sees anybody coming in or out of the club. Each person could have come in or out an arbitrary number of times.\"\n\nfrom typing import List"
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\") == 1"
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"+-+-+\") == 1\n\nassert solution(\"---\") == 3"
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"+-+-+\"), \"Test case 1: Polycarpus just has been out of luck lately! As soon as he found a job in the \\\"Binary Cat\\\" cafe, the club got burgled. All ice-cream was stolen.\"\nassert solution(\"---\"), \"Test case 2: On the burglary night Polycarpus kept a careful record of all club visitors. Each time a visitor entered the club, Polycarpus put down character \\\"+\\\" in his notes. Similarly, each time a visitor left the club, Polycarpus put character \\\"-\\\" in his notes. We know that all cases of going in and out happened consecutively, that is, no two events happened at the same time. Polycarpus doesn't remember whether there was somebody in the club at the moment when his shift begun and at the moment when it ended.\"\nassert solution
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"+-+-+\") == 1\nassert solution(\"---\") == 3"
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1\"\n\nprint(1)"
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"---\") == \"3\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"+-+-+\"), \"Test case 1 failed\"\nassert solution(\"---\"), \"Test case 2 failed\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"+-+-+\") == \"1\"\n\nassert solution(\"---\") == \"3\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '1'"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n\") == \"10110\", \"Test Case 1 Failed\"\nassert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n\") == \"10110\", \"Test Case 2 Failed\"\nassert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n\") == \"10110\", \"Test Case 3 Failed\"\nassert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n\") == \"10110\", \"Test Case 4 Failed\"\nassert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n\") == \"10110\", \"Test Case 5 Failed\""
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test case not passing\""
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\") == \"10110\", \"Your solution is not correct.\""
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"10110\""
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"11101\", \"The function should return '11101' for the given input.\""
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n\") == \"10110\\n\""
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n\") == \"10110\"\n"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == '110'\nassert solution(5) == '1101'\nassert solution(6) == '1110'\nassert solution(7) == '1111'\nassert solution(8) == '1010'\nassert solution(9) == '1011'"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8') == '10110'"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8') == '10110'"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\\n6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == \"2\\n1 3\\n\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\\n1 3\\n1 2\\n\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == 2\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == 2"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\\n1 3\"\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == \"2\\n1 2\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\"\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == \"2\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\"\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == \"2\"\n"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\\n\") == \"2\\n1 3\\n\"\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\\n\") == \"2\\n1 2\\n\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 3 1\\n1 2 3 2 1\\n1 2 3') == '2\\n1 3\\n'\nassert solution('6 3 2\\n1 3 2 2 3 1\\n1 2 3') == '2\\n1 2\\n'"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\"\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == \"2\"\n\nsolution = '''\n"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 3 1\\n1 2 3 2 1\\n1 2 3') == 2\nassert solution('6 3 2\\n1 3 2 2 3 1\\n1 2 3') == 2"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n4 1 2\n1 3\n1 2\n''') == '2'\n\nassert solution('''\n3 3 1\n2\n1 2\n1 3\n2 3\n''') == '0'"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 1 2\\n1 3\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\") == \"0\\n\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Input\") == \"Output\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 1 2\\n1 3\\n1 2\\n') == '2'\nassert solution('3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n') == '0'"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == expected, f\"Testcase {i} failed: {solution(input)}!= {expected}\" for i, (input, expected) in enumerate([\n    ([4, 1, 2], 2),\n    ([3, 3, 1], 0),\n    ([2], 1),\n    ([1, 3], 1),\n])"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 1 2\\n1 3\\n1 2\\n\") == \"2\"\nassert solution(\"3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\") == \"0\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 1 2\\n1 3\\n1 2\\n') == '2\\n'\n\nassert solution('3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n') == '0\\n'"
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\\n\") == \"3\\n\"\nassert solution(\"4\\n100 100 100 100\\n\") == \"1\\n\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\\n\") == \"4\\n\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\\n\\n4\\n100 100 100 100\\n\\n8\\n7 6 5 4 3 2 2 3\\n\\n3\") == \"3\\n\"\nassert solution(\"4\\n100 100 100 100\\n\\n3\") == \"1\\n\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\\n\\n3\") == \"4\\n\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\") == \"3\\n\"\nassert solution(\"4\\n100 100 100 100\") == \"1\\n\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\") == \"4\\n\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"The function should return {expected}, but it returned {solution(input())}\"\n"
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3\", \"Test case 1 failed\"\nassert solution() == \"1\", \"Test case 2 failed\"\nassert solution() == \"4\", \"Test case 3 failed\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6\\n10 2 3 5 4 2') == '3', \"Input 1 failed\"\nassert solution('4\\n100 100 100 100') == '1', \"Input 2 failed\"\nassert solution('8\\n7 6 5 4 3 2 2 3') == '4', \"Input 3 failed\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\") == \"3\"\nassert solution(\"4\\n100 100 100 100\") == \"1\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\") == \"4\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\") == \"3\\n\"\nassert solution(\"4\\n100 100 100 100\") == \"1\\n\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\") == \"4\\n\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Test failed: {solution(input())}!= {output()}\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\\n\") == \"Yes\\n2\\n2 3 \"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\\n\") == \"No\\n0\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\\n\") == \"No\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\\n2 3 \"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"Yes\\n0\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\") == \"No\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1') == 'Yes\\n2\\n2 3\\n'\nassert solution('6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4') == 'Yes\\n0\\n'"
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    4 3\n    1 2\n    1 1\n    3 1 3 2\n    2 1 1\n    \"\"\"\n) == \"Yes\\n2\\n2 3\"\n\nassert solution(\n    \"\"\"\n    6 5\n    2 1 2\n    2 1 2\n    3 1 2 3\n    2 1 5\n    2 4 4\n    2 4 4\n    \"\"\"\n) == \"Yes\\n0\"\n\nassert solution(\n    \"\"\"\n    4 3\n    4 3 2 2 1\n    3 1 1 3\n    3 2 3 3\n    2 3 1\n    \"\"\"\n) == \"No\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\\n2 3 \"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"Yes\\n0\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\") == \"No\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\\n2 3 \"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"No\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\") == \"No\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\\n2 3 \"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"Yes\\n0\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\\n2 3\"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"Yes\\n0\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\") == \"No\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 'No\\n'"
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"Yes\\n0\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\") == \"No\"\n"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n\") == \"20\\n0 2 1 4 3\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4) == \"20\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4) == 20\nassert solution(10) == 417\nassert solution(25) == 10986\nassert solution(30) == 21975940\nassert solution(35) == 22991722\nassert solution(40) == 23983762"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4) == \"20\\n0 2 1 4 3\"\n\nsolution(4)"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"20\"\nassert solution(7) == \"0 2 1 4 3\"\nassert solution(10) == \"0 1 2 3 4 5 6 7 8 9\"\nassert solution(11) == \"0 1 2 3 4 5 6 7 8 9\"\nassert solution(15) == \"0 1 2 3 4 5 6 7 8 9\"\n"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"20\\n0 2 1 4 3\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(4) == \"20\\n0 2 1 4 3\"\nassert solution(5) == \"20\\n0 2 1 4 3\"\nassert solution(6) == \"20\\n0 2 1 4 3\"\nassert solution(7) == \"20\\n0 2 1 4 3\"\nassert solution(8) == \"20\\n0 2 1 4 3\"\nassert solution(9) == \"20\\n0 2 1 4 3\"\nassert solution(10) == \"20\\n0 2 1 4 3\"\nassert solution(11) == \"20\\n0 2 1 4 3\"\nassert solution(12) == \"20\\n0 2 1 4 3\"\nassert solution(13) == \"20\\n0 2 1 4 3\"\nassert solution(14) == \"20\\n0 2 1 4 3\"\nassert solution(15) == \"20\\n0 2 1 4 3\"\nassert solution(16) == \"20\\n0 2 1 4 3\"\nassert solution(17) == \"20\\n0 2 1 4 3\"\nassert solution(18) == \"20\\n0 2 1 4 3\"\nassert solution(19) == \"20\\n0 2 1 4 3\"\nassert solution(20) == \"20\\n0 2 1 4 3\"\nassert solution(21) == \"20\\n0 2 1 4 3\"\nassert solution(22) == \"20\\n0 2 1 4 3\"\nassert solution(23) == \"20\\n0 2 1 4 3\"\nassert solution(24) == \"20\\n0 2 1 4 3\"\nassert solution(25) == \"20\\n0 2 1 4 3\"\nassert solution(26) == \"20\\n0 2 1 4 3\"\nassert solution(27) == \"20\\n0 2 1 4 3\"\nassert solution(28) == \"20\\n0 2 1 4 3\"\nassert solution(29) == \"20\\n0 2 1 4 3\"\nassert solution(30) == \"20\\n0 2 1 4 3\"\nassert solution(31) == \"20\\n0 2 1 4 3\"\nassert solution(32) == \"20\\n0 2 1 4 3\"\nassert solution(33) == \"20\\n0 2 1 4 3\"\nassert solution(34) == \"20\\n0 2 1 4 3\"\nassert solution(35) == \"20\\n0 2 1 4 3\"\nassert solution(36) == \"20\\n0 2 1 4 3\"\nassert solution(37) == \"20\\n0 2 1 4 3\"\nassert solution(38) == \"20\\n0 2 1 4 3\"\nassert solution(39) == \"20\\n0 2 1 4 3\"\nassert solution(40) == \"20\\n0 2 1 4 3\"\nassert solution(41) == \"20\\n0 2 1 4 3\"\nassert solution(42) == \"20\\n0 2 1 4 3\"\nassert solution(43) == \"20\\n0 2 1 4 3\"\nassert solution(44) == \"20\\n0 2 1 4 3\"\nassert solution(45) == \"20\\n0 2 1 4 3\"\nassert solution(46) == \"20\\n0 2 1 4 3\"\nassert solution(47) == \"20\\n0 2 1 4 3\"\nassert solution(48) == \"20\\n0 2 1 4 "
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4) == \"20\\n0 2 1 4 3\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"20\\n0 2 1 4 3\"\nassert solution(4) == \"20\\n0 2 1 4 3\"\nassert solution(6) == \"12\\n0 2 3 4 5 6\"\nassert solution(10) == \"24\\n0 2 4 6 8 10 12 14 16\"\nassert solution(12) == \"16\\n0 2 4 6 8 10 12 14 16\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4) == 20\nassert solution(10) == \"0 2 1 4 3\"\nassert solution(20) == \"2 1 0 4 3\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n1 1') == 'YES\\n'\nassert solution('3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0') == 'NO\\n'\n"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0\n\"\"\") == \"YES\"\nassert solution(\"\"\"3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n1 1''') == 'YES'\n\nassert solution('''3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0''') == 'NO'"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    3 4\n    0 0\n    0 2\n    2 0\n    0 2\n    2 2\n    2 0\n    0 0\n    1 1\n    ''') == 'YES'"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0''') == 'YES'\n\nassert solution('''3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0''') == 'NO'\n\nassert solution('''3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0''') == 'YES'\n\nassert solution('''3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0''') == 'YES'\n\nassert solution('''3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0''') == 'NO'\n\nassert solution('''3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0''') == 'NO'"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n1 1\\n\") == \"YES\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n\") == \"NO\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n\") == \"YES\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n\") == \"NO\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n1 1\") == \"YES\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\") == \"NO\"\n"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n1 1\\n\") == \"YES\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n\") == \"NO\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == output_data, f\"Test failed for input {input_data} and output {output_data}\" for input_data, output_data in [\n    ([3, 4], [\"YES\"]),\n    ([3, 4], [\"NO\"]),\n]"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1\\n1\\n\") == \"1\\n3\\n7\"\nassert solution(\"5\\n1\\n0\\n1\\n0\\n1\\n\") == \"1\\n4\\n10\\n22\\n43\\n\"\nassert solution(\"9\\n1\\n1\\n0\\n0\\n0\\n1\\n1\\n0\\n1\\n\") == \"1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\"\n\nfrom typing import List"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1\\n1\\n1\") == \"1\\n3\\n7\"\nassert solution(\"5\\n1\\n0\\n1\\n0\\n1\\n\") == \"1\\n4\\n10\\n22\\n43\"\nassert solution(\"9\\n1\\n1\\n0\\n0\\n0\\n1\\n1\\n0\\n1\\n\") == \"1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 1, \"The correct answer is not 1.\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n1\\n1\\n1') == '1\\n3\\n7\\n'\nassert solution('5\\n1\\n0\\n1\\n0\\n1') == '1\\n4\\n10\\n22\\n43\\n'\nassert solution('9\\n1\\n1\\n0\\n0\\n0\\n1\\n1\\n0\\n1\\n') == '1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\\n'"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1\\n1\\n\") == \"1\\n3\\n7\"\nassert solution(\"1\\n1\\n0\\n1\\n\") == \"1\\n4\\n10\"\nassert solution(\"1\\n1\\n1\\n\") == \"1\\n3\\n7\"\nassert solution(\"1\\n1\\n1\\n\") == \"1\\n3\\n7\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1\\n1\\n1\\n\") == \"1\\n3\\n7\\n\"\nassert solution(\"5\\n1\\n0\\n1\\n0\\n1\\n\") == \"1\\n4\\n10\\n22\\n43\\n\"\nassert solution(\"9\\n1\\n1\\n0\\n0\\n0\\n1\\n1\\n0\\n1\\n\") == \"1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\\n\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"The output is {solution(input())}, but expected output is {expected_output}.\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1\\n1\\n1\") == \"1\\n3\\n7\"\nassert solution(\"5\\n1\\n0\\n1\\n0\") == \"1\\n4\\n10\"\nassert solution(\"9\\n1\\n1\\n0\\n0\\n0\\n1\\n1\\n0\\n1\\n1\") == \"1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"11\") == \"11\"\nassert solution(\"111\") == \"111\"\nassert solution(\"110\") == \"0111\"\nassert solution(\"011\") == \"1110\"\nassert solution(\"1111\") == \"1111\"\nassert solution(\"1010\") == \"11010\"\nassert solution(\"1011\") == \"11011\"\nassert solution(\"1101\") == \"00111\"\nassert solution(\"1110\") == \"01010\"\nassert solution(\"11110\") == \"010110\"\nassert solution(\"11111\") == \"010111\"\n\nfrom functools import reduce"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\") == 1\nassert solution(\"11\") == 3\nassert solution(\"111\") == 7"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n\") == \"First\\nSecond\\nFirst\\n\"\n\nfrom itertools import combinations"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == 'First\\nSecond\\nFirst'\nprint('First')\nprint('Second')"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 'First\\nSecond\\nFirst'\n"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\") == \"First\\nSecond\"\nassert solution(\"1\\n1 1\\n1 1\") == \"First\"\nassert solution(\"2\\n3 2\\n5 4\") == \"First\"\nassert solution(\"3\\n2 3\\n4 5\\n6 7\\n8 9\\n10 11\\n12 13\\n14 15\\n16 17\\n18 19\\n20 21\\n22 23\\n24 25\\n26 27\\n28 29\\n30 31\\n32 33\\n34 35\\n36 37\\n38 39\\n40 41\\n42 43\\n44 45\\n46 47\\n48 49\\n50 51\\n52 53\\n54 55\\n56 57\\n58 59\\n60 61\\n62 63\\n64 65\\n66 67\\n68 69\\n70 71\\n72 73\\n74 75\\n76 77\\n78 79\\n80 81\\n82 83\\n84 85\\n86 87\\n88 89\\n90 91\\n92 93\\n94 95\\n96 97\\n98 99\\n100 101\\n102 103\\n104 105\\n106 107\\n108 109\\n110 111\\n112 113\\n114 115\\n116 117\\n118 119\\n120 121\\n122 123\\n124 125\\n126 127\\n128 129\\n130 131\\n132 133\\n134 135\\n136 137\\n138 139\\n140 141\\n142 143\\n144 145\\n146 147\\n148 149\\n150 151\\n152 153\\n154 155\\n156 157\\n158 159\\n160 161\\n162 163\\n164 165\\n166 167\\n168 169\\n170 171\\n172 173\\n174 175\\n176 177\\n178 179\\n180 181\\n182 183\\n184 185\\n186 187\\n188 189\\n190 191\\n192 193\\n194 195\\n196 197\\n198 199\\n200 201\\n202 203\\n204 205\\n206 207\\n208 209\\n210 211\\n212 213\\n214 215\\n216 217\\n218 219\\n220 221\\n"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\") == \"First\\nSecond\\nFirst\\n\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\") == \"First\\nSecond\\nFirst\\n\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=open(\"input.txt\", \"r\")) == \"First\\nSecond\"\nassert solution(stdin=open(\"input.txt\", \"r\")) == \"First\\nSecond\"\nassert solution(stdin=open(\"input.txt\", \"r\")) == \"First\\nSecond\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_str) == output_str, f\"Test case {i + 1} failed.\\nExpected output: {output_str}\\nActual output: {solution(input_str)}\" for i, (input_str, output_str) in enumerate(test_cases)"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n3 0\n6 2\n1 2\n2 3\n15 10\n12 14\n8 3\n10 1\n14 6\n12 6\n1 9\n13 1\n2 5\n3 9\n7 2\n''') == 'First\\nSecond\\nFirst\\n'"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n\") == \"First\\nSecond\\nFirst\"\n"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('abba') == ['Mike', 'Ann']\nassert solution('cba') == ['Mike', 'Mike', 'Mike', 'def']"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('abba') == 'Mike'\nassert solution('cba') == 'Mike'"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abba\") == \"Mike\\nAnn\\nAnn\"\nassert solution(\"cba\") == \"Mike\\nMike\\nMike\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Mike\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Mike\"\nassert solution(\"abbb\") == \"Mike\"\nassert solution(\"cdcd\") == \"Ann\"\nassert solution(\"abcdefghi\") == \"Mike\"\nassert solution(\"jklmnop\") == \"Mike\"\nassert solution(\"qrstuvwxyz\") == \"Ann\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Mike\"\nassert solution(\"xy\") == \"Mike\"\nassert solution(\"aaa\") == \"Mike\"\nassert solution(\"zzz\") == \"Ann\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('abba') == ['Mike']\nassert solution('cba') == ['Mike', 'Mike', 'Mike', 'def']"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Mike\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Mike\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abba\") == \"Mike\\nAnn\\nAnn\\nMike\"\nassert solution(\"cba\") == \"Mike\\nMike\\nMike\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\") == \"0\\n\"\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\") == \"2\\n\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"0\\n\", \"Test failed.\"\n"
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n    3 2\n    8 3 8\n    1 2\n    2 3''') == '0'\n\nassert solution('''\n    3 2\n    8 12 8\n    1 2\n    2 3''') == '2'"
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\") == \"0\\n\"\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\") == \"2\\n\"\n"
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '0'"
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0\\n\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\\n\") == \"0\\n\"\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\\n\") == \"2\\n\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\") == \"0\\n\"\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\") == \"2\\n\"\n"
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\") == \"0\\n\"\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\") == \"2\\n\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"0\", \"The output is incorrect.\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(3)) == 'abcd'\nassert solution(str(4)) == 'abcd'\nassert solution(str(5)) == 'abcd'\nassert solution(str(6)) == 'abcd'\nassert solution(str(7)) == 'abcd'\nassert solution(str(8)) == 'abcd'\nassert solution(str(9)) == 'abcd'\nassert solution(str(10)) == 'abcd'\nassert solution(str(11)) == 'abcd'\nassert solution(str(12)) == 'abcd'\nassert solution(str(13)) == 'abcd'\nassert solution(str(14)) == 'abcd'\nassert solution(str(15)) == 'abcd'\nassert solution(str(16)) == 'abcd'\nassert solution(str(17)) == 'abcd'\nassert solution(str(18)) == 'abcd'\nassert solution(str(19)) == 'abcd'\nassert solution(str(20)) == 'abcd'\nassert solution(str(21)) == 'abcd'\nassert solution(str(22)) == 'abcd'\nassert solution(str(23)) == 'abcd'\nassert solution(str(24)) == 'abcd'\nassert solution(str(25)) == 'abcd'\nassert solution(str(26)) == 'abcd'\nassert solution(str(27)) == 'abcd'\nassert solution(str(28)) == 'abcd'\nassert solution(str(29)) == 'abcd'\nassert solution(str(30)) == 'abcd'\nassert solution(str(31)) == 'abcd'\nassert solution(str(32)) == 'abcd'\nassert solution(str(33)) == 'abcd'\nassert solution(str(34)) == 'abcd'\nassert solution(str(35)) == 'abcd'\nassert solution(str(36)) == 'abcd'\nassert solution(str(37)) == 'abcd'\nassert solution(str(38)) == 'abcd'\nassert solution(str(39)) == 'abcd'\nassert solution(str(40)) == 'abcd'\nassert solution(str(41)) == 'abcd'\nassert solution(str(42)) == 'abcd'\nassert solution(str(43)) == 'abcd'\nassert solution(str(44)) == 'abcd'\nassert solution(str(45)) == 'abcd'\nassert solution(str(46)) == 'abcd'\nassert solution(str(47)) == 'abcd'\nassert solution(str(48)) == 'abcd'\nassert solution(str(49)) == 'abcd'\nassert solution(str(50)) == 'abcd'\nassert solution(str(51)) == 'abcd'\nassert solution(str(52)) == 'abcd'\nassert solution(str(53)) == 'abcd'\nassert solution(str(54)) == 'abcd'\nassert solution(str(55)) == 'abcd'\nassert solution(str(56)) == 'abcd'\nassert solution(str(57)) == 'abcd'\nassert solution(str(58)) == 'abcd'\nassert solution(str(59)) == 'abcd'\nassert solution(str(60)) == 'abcd'\nassert solution(str(61)) == 'abcd'\nassert solution(str(62)) == 'abcd'\nassert solution(str(63)) == 'abcd'\nassert solution(str(64)) == 'abcd'\nassert solution(str(65)) == 'abcd'\nassert solution(str(66)) == 'abcd'\nassert solution(str(67)) == 'abcd'\nassert solution(str(68)) == 'abcd'\nassert solution(str(69)) == 'abcd'\nassert solution(str(70)) == 'abcd'\nassert solution(str(71)) == 'abcd'\nassert solution(str(72)) == 'abcd'\nassert solution(str(73)) == 'abcd'\nassert solution(str(74)) == 'abcd'\nassert solution(str(75)) == 'abcd'\nassert solution(str(76)) == 'abcd'\nassert solution(str(77)) == 'abcd'\nassert solution(str(78)) == 'abcd'\nassert solution(str(79)) == 'abcd'\nassert solution(str(80)) == 'abcd'\nassert solution(str(81)) == 'abcd'\nassert solution(str(8"
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"ababacd\"\nassert solution(stdin) == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('7 4') == 'ababacd'\nassert solution('4 7') == '-1'"
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(input())) == \"aba\"\nassert solution(str(input())) == \"c\"\nassert solution(str(input())) == \"def\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('7 4') == 'ababacd'\nassert solution('4 7') == '-1'"
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"ababacd\"\nassert solution(input()) == \"-1\"\n"
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-1\"\n"
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == \"-1\"\nassert solution(\"\") == \"-1\"\nassert solution(\"4 7\") == \"def\"\nassert solution(\"7 4\") == \"ababacd\"\n\nprint(\"All test cases pass\")"
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'ababacd'\nassert solution(input()) == '-1'\n"
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"4\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\") == \"9\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2 1 2\\n\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"9\\n\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2 1 2\") == 4\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\") == 9"
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n1 2 1 2') == '4\\n'\nassert solution('10\\n1 1 2 2 2 1 1 2 2 1') == '9\\n'"
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\") == \"9\\n\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 1 2\\n10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"9\\n\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\") == \"9\\n\"\n"
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2 1 2\\n\") == \"4\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"9\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 1 2\\n\") == \"4\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"9\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n2 2 1\n1 1 2\n2 2 1\n''') == '''\n2\n-\n2\n+\n'''\n\nassert solution('''\n6 6 3\n2 2 6\n1 4 5\n2 3 4\n1 4 1\n1 3 1\n2 2 3\n''') == '''\n6\n++-\n2\n+-+\n'''"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 2 1\\n1 1 2\\n2 2 1') == '2\\n-\\n2\\n+'\nassert solution('6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3') == '6\\n++-\\n2\\n+-+def solution(stdin: str) -> str:\\n\\tpass\\n'"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2 1\\n1 1 2\\n2 2 1') == '2\\n-\\n2\\n+'\n\nassert solution('6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3') == '6\\n++-\\n2\\n+-+'"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\\n-2\\n2\\n+-\"\n"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 1\\n1 1 2\\n2 2 1\\n\") == \"2\\n-\\n2\\n+\"\nassert solution(\"6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\\n\") == \"6\\n++-\\n2\\n+-+def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 1\\n1 1 2\\n2 2 1\") == \"2\\n-\\n2\\n+\"\nassert solution(\"6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\") == \"6\\n++-\\n2\\n+-+def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 1\\n1 1 2\\n2 2 1\") == \"2\\n-\\n2\\n+\"\n\nassert solution(\"6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\") == \"6\\n++-\\n2\\n+-+def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 2 1\\n1 1 2\\n2 2 1') == '2\\n-\\n2\\n+'\n\nassert solution('6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3') == '6\\n++-\\n2\\n+-+'"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 1\\n1 1 2\\n2 2 1\") == \"2\\n-\\n2\\n+\"\nassert solution(\"6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\") == \"6\\n++-\\n2\\n+-+def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution"
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1689\") == \"1869\", \"The first input is incorrect.\"\nassert solution(\"18906\") == \"18690\", \"The second input is incorrect.\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1689\") == \"1869\", \"Solution should return 1869\"\nassert solution(\"18906\") == \"18690\", \"Solution should return 18690\"\nassert solution(\"1\") == \"0\", \"Solution should return 0\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\"\nassert solution(\"12345\") == 0"
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1689\") == \"1869\", \"The correct result is: 1869\"\nassert solution(\"18906\") == \"18690\", \"The correct result is: 18690\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1689\") == \"1869\", \"1689\"\nassert solution(\"18906\") == \"18690\", \"18906\"\nassert solution(\"12345\") == 0, \"12345\"\nassert solution(\"9876543210\") == 0, \"9876543210\"\nassert solution(\"12345678901234567890\") == 0, \"12345678901234567890\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1689\") == \"1869\", \"Test 1 failed\"\nassert solution(\"18906\") == \"18690\", \"Test 2 failed\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1689\") == \"1869\", \"Test case 1 failed\"\nassert solution(\"18906\") == \"18690\", \"Test case 2 failed\"\nassert solution(\"18909\") == \"0\", \"Test case 3 failed\"\nassert solution(\"0\") == \"0\", \"Test case 4 failed\"\nassert solution(\"1\") == \"1\", \"Test case 5 failed\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n1 3\\n3 4\\n\") == \"2\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\") == \"-1\"\nassert solution(\"5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\") == \"3\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 2"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == expected_output, f\"Expected output: {expected_output}, but got: {solution(sample_input)}\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n1 3\\n3 4\\n\\n4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 1\\n1 2\\n\") == \"2\"\nassert solution(\"5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\") == \"-1\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n1 3\\n3 4\\n\") == \"2\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 1\\n1 2\\n\") == \"-1\"\nassert solution(\"5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\") == \"3\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n1 3\\n3 4\\n\") == \"2\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\") == \"-1\"\nassert solution(\"5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\") == \"3\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n4 2\n1 3\n3 4\n''') == '2\\n'\n\nassert solution('''\n4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n''') == '-1\\n'\n\nassert solution('''\n5 5\n4 2\n3 5\n4 5\n5 1\n1 2\n''') == '3\\n'"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test case failed\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input1) == output1, f\"Expected output: {output1}, Received output: {solution(input1)}\"\nassert solution(input2) == output2, f\"Expected output: {output2}, Received output: {solution(input2)}\"\nassert solution(input3) == output3, f\"Expected output: {output3}, Received output: {solution(input3)}\"\nassert solution(input4) == output4, f\"Expected output: {output4}, Received output: {solution(input4)}\"\nassert solution(input5) == output5, f\"Expected output: {output5}, Received output: {solution(input5)}\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == # Your code here"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n4 7\") == \"3\\n\"\nassert solution(\"3\\n4 3 1\") == \"9\\n\"\n"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n4 7\\n\") == \"3\\n\"\nassert solution(\"3\\n4 3 1\\n\") == \"9\\n\"\nassert solution(\"2\\n4 7\\n\") == \"3\\n\"\nassert solution(\"3\\n4 3 1\\n\") == \"9\\n\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n4 7\\n\\n3\\n4 3 1\\n\\n5\\n1 2\\n\\n6\\n1 3\\n\\n\\n7\\n1 2\\n\\n8\\n1 4\\n\\n\\n9\\n1 5\\n\\n\\n10\\n1 6') == '3\\n'\nassert solution('3\\n4 3 1\\n\\n5\\n1 2\\n\\n6\\n1 3\\n\\n\\n7\\n1 2\\n\\n8\\n1 4\\n\\n\\n9\\n1 5\\n\\n\\n10\\n1 6') == '9\\n'\nassert solution('1\\n1 1\\n\\n2\\n1 2\\n\\n3\\n1 3\\n\\n4\\n1 4\\n\\n5\\n1 5\\n\\n6\\n1 6\\n\\n7\\n1 7\\n\\n8\\n1 8\\n\\n9\\n1 9\\n\\n10\\n1 10\\n\\n11\\n1 11\\n\\n12\\n1 12\\n\\n13\\n1 13\\n\\n14\\n1 14\\n\\n15\\n1 15\\n\\n16\\n1 16\\n\\n17\\n1 17\\n\\n18\\n1 18\\n\\n19\\n1 19\\n\\n20\\n1 20\\n\\n21\\n1 21\\n\\n22\\n1 22\\n\\n23\\n1 23\\n\\n24\\n1 24\\n\\n25\\n1 25\\n\\n26\\n1 26\\n\\n27\\n1 27\\n\\n28\\n1 28\\n\\n29\\n1 29\\n\\n30\\n1 30\\n\\n31\\n1 31\\n\\n32\\n1 32\\n\\n33\\n1 33\\n\\n34\\n1 34\\n\\n35\\n1 35\\n\\n36\\n1 36\\n\\n37\\n1 37\\n\\n38\\n1 38\\n\\n39\\n1 39\\n\\n40\\n1 40\\n\\n41\\n1 41\\n\\n42\\n1 42\\n\\n43\\n1 43\\n\\n44\\n1 44\\n\\n45\\n1 45\\n\\n46\\n1 46\\n\\n47\\n1 47\\n\\n48\\n1 48\\n\\n49\\n1 49\\n\\n50\\n1 50\\n\\n51\\n1 51\\n\\n52\\n1 52\\n\\n53\\n1 53\\n\\n54\\n1 54\\n\\n55\\n1 55\\n\\n56\\n1 56\\n\\n57\\n1 57\\n\\n58\\n1 58\\n\\n59\\n1 59\\n\\n60\\n1 60\\n\\n61\\n1 61\\n\\n62\\n1 62\\n\\n63\\n1 63\\n\\n64\\n1 64\\n\\n65\\n1 65\\n\\n66\\n1 66\\n\\n67\\n1 67\\n\\n68\\n1 68\\n\\n69\\n1 69\\n\\n70\\n1 70\\n\\n71\\n1 71\\n\\n72\\n1 7"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n4 7') == '3\\n'\nassert solution('3\\n4 3 1') == '9\\n'\n\nsolution = '''\n"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n4 7\\n\") == \"3\\n\", \"Example 1\"\nassert solution(\"3\\n4 3 1\\n\") == \"9\\n\", \"Example 2\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == expected_output, f\"The output {solution(stdin=input())} is not equal to the expected output {expected_output}.\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n4 7\\n') == '3\\n'\nassert solution('3\\n4 3 1\\n') == '9\\n'"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n4 7\\n\") == \"3\\n\", \"Testcase 1\"\nassert solution(\"3\\n4 3 1\\n\") == \"9\\n\", \"Testcase 2\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"220\\n\", \"Testcase 3\"\nassert solution(\"6\\n1 2 3 4 5 6\\n\") == \"393\\n\", \"Testcase 4\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\\n\") == \"1853\\n\", \"Testcase 5\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_string) == output_string, f\"Test failed. Expected: {output_string}, Received: {solution(input_string)}\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n4 7\\n\") == \"3\\n\"\nassert solution(\"3\\n4 3 1\\n\") == \"9\\n\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n4 8 5\\n5\\n4\\n0 5 15 10\\n1\\n1\\n\") == \"9\"\nassert solution(\"5\\n3 10 2 1 5\\n4\\n0 5 15 10\\n1\\n1\\n\") == \"2\"\nassert solution(\"4\\n0 5 15 10\\n1\\n1\\n\") == \"0\"\nassert solution(\"1\\n1\\n\") == \"-1\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n4 8 5\\n\\n5\\n3 10 2 1 5\\n\\n4\\n0 5 15 10\\n\\n1\\n1\\n\\n-1\\n\\n3\\n2 7 4 6 1\\n\\n2\\n1 1 7 5\\n\\n3\\n3 8 6 9\\n\\n2\\n0 6 5 4\\n\\n3\\n2 6 7 8') == '9'\nassert solution('5\\n3 10 2 1 5\\n\\n4\\n0 5 15 10\\n\\n1\\n1\\n\\n-1\\n\\n3\\n2 7 4 6 1\\n\\n2\\n1 1 7 5\\n\\n3\\n3 8 6 9\\n\\n2\\n0 6 5 4\\n\\n3\\n2 6 7 8') == '2'\nassert solution('4\\n0 5 15 10\\n\\n1\\n1\\n\\n-1\\n\\n3\\n2 7 4 6 1\\n\\n2\\n1 1 7 5\\n\\n3\\n3 8 6 9\\n\\n2\\n0 6 5 4\\n\\n3\\n2 6 7 8') == '0'\nassert solution('1\\n1\\n\\n-1\\n\\n3\\n2 7 4 6 1\\n\\n2\\n1 1 7 5\\n\\n3\\n3 8 6 9\\n\\n2\\n0 6 5 4\\n\\n3\\n2 6 7 8') == '-1'"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n4 8 5\\n\") == \"9\\n\"\nassert solution(\"5\\n3 10 2 1 5\\n\") == \"2\\n\"\nassert solution(\"4\\n0 5 15 10\\n\") == \"0\\n\"\nassert solution(\"1\\n1\\n\") == \"-1\\n\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n4 8 5\") == \"9\"\nassert solution(\"5\\n3 10 2 1 5\") == \"2\"\nassert solution(\"4\\n0 5 15 10\") == \"0\"\nassert solution(\"1\\n1\") == \"-1\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected\n"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n4 8 5\\n\") == \"9\\n\"\nassert solution(\"5\\n3 10 2 1 5\\n\") == \"2\\n\"\nassert solution(\"4\\n0 5 15 10\\n\") == \"0\\n\"\nassert solution(\"1\\n1\\n\") == \"-1\\n\"\n"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n4 8 5\\n5\\n4\\n0 5 15 10\\n1\\n1') == '9\\n2\\n0\\n-1'\nassert solution('5\\n3 10 2 1 5\\n4\\n0 5 15 10\\n1\\n1') == '2\\n9\\n0\\n-1'\nassert solution('4\\n0 5 15 10\\n1\\n1') == '0\\n-1'\nassert solution('1\\n1') == '-1'"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == '9'\nassert solution(5) == '2'\nassert solution(4) == '0'\nassert solution(1) == '-1'"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == output, f\"Error: {stdin} should be equal to {output}, but got {solution(stdin=input())}\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"9\", \"Test case 1 should return 9\"\nassert solution() == \"2\", \"Test case 2 should return 2\"\nassert solution() == \"0\", \"Test case 3 should return 0\"\nassert solution() == \"-1\", \"Test case 4 should return -1\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected, f\"Your solution is wrong! \\nExpected: {expected}\\nActual: {solution}\"\n"
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10 4 5\\n3 5 7 10') == '3'\nassert solution('13 4 5\\n7 8 9 10') == '1'"
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\\n\") == \"3\\n\"\nassert solution(\"13 4 5\\n7 8 9 10\\n\") == \"1\\n\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\\n\") == \"3\\n\"\nassert solution(\"13 4 5\\n7 8 9 10\\n\") == \"1\\n\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\") == \"3\\n\"\nassert solution(\"13 4 5\\n7 8 9 10\") == \"1\\n\"\n"
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\") == \"3\\n\"\nassert solution(\"13 4 5\\n7 8 9 10\") == \"1\\n\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10 4 5\\n3 5 7 10\\n') == '3'\nassert solution('13 4 5\\n7 8 9 10\\n') == '1'"
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\\n\") == \"3\\n\"\nassert solution(\"13 4 5\\n7 8 9 10\\n\") == \"1\\n\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '3'"
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\") == \"3\\n\"\nassert solution(\"13 4 5\\n7 8 9 10\") == \"1\\n\"\n"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case_number} failed. Got: {solution(input())}, expected: {expected_output}\"\n"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n101\\n3 3\\n3 2\\n3 1') == '2'\nassert solution('4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\\n1 5') == '4'\nassert solution('6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5') == '6'"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n101\\n3 3\\n3 2\\n3 1\") == \"2\"\nassert solution(\"4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\\n1 5\") == \"4\"\nassert solution(\"6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\") == \"6\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 2, \"Solution should return 2.\""
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n3\n101\n3 3\n3 2\n3 1\n''') == '2'\nassert solution('''\n4\n1111\n3 4\n5 2\n3 1\n3 2\n''') == '4'\nassert solution('''\n6\n011100\n5 3\n5 5\n2 4\n3 5\n4 2\n1 5\n''') == '6'"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n101\\n3 3\\n3 2\\n3 1') == '2'\nassert solution('4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2') == '4'\nassert solution('6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5') == '6'"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"01111\") == \"4\"\nassert solution(\"00111100101111100\") == \"6\""
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n101\\n3 3\\n3 2\\n3 1\\n\") == \"2\"\nassert solution(\"4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\\n\") == \"4\"\nassert solution(\"6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n\") == \"6\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(r'Input\\n4 4\\n') == '1111\\n'\nassert solution(r'Input\\n5 3\\n') == '01010\\n'\nassert solution(r'Input\\n7 3\\n') == '1011011\\n'"
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1111\"\nassert solution(input()) == \"01010\"\nassert solution(input()) == \"1011011\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 4') == '1111', \"Expected 1111 but got {}\".format(solution('4 4'))\nassert solution('5 3') == '01010', \"Expected 01010 but got {}\".format(solution('5 3'))\nassert solution('7 3') == '1011011', \"Expected 1011011 but got {}\".format(solution('7 3'))"
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1111\", \"Expected output: 1111\"\nassert solution(input()) == \"01010\", \"Expected output: 01010\"\nassert solution(input()) == \"1011011\", \"Expected output: 1011011\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '1111'\nassert solution(input()) == '01010'\nassert solution(input()) == '1011011'\n"
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\") == \"1111\"\nassert solution(\"5 3\") == \"01010\"\nassert solution(\"7 3\") == \"1011011\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\") == \"1111\\n\"\nassert solution(\"5 3\") == \"01010\\n\"\nassert solution(\"7 3\") == \"1011011\\n\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\") == \"1111\"\nassert solution(\"5 3\") == \"01010\"\nassert solution(\"7 3\") == \"1011011\"\n"
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Test failed: {solution(input())}!= {expected}\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n\") == \"1/2\\n\"\nassert solution(\"3\\n1 1 1\\n\") == \"0/1\\n\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n3\\n1 1 1\") == \"1/2\\n0/1\"\n"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n\") == \"1/2\\n\"\nassert solution(\"3\\n1 1 1\\n\") == \"0/1\\n\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n\\n\\n') == '1/2\\n'\nassert solution('3\\n1 1 1\\n\\n\\n') == '0/1\\n'\n"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n\") == \"1/2\\n\"\nassert solution(\"3\\n1 1 1\\n\") == \"0/1\\n\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n\") == \"1/2\\n\"\nassert solution(\"3\\n1 1 1\\n\") == \"0/1\\n\"\n"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1/2\", \"Expected output: 1/2, actual output: {}\".format(solution())"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == '1/2'\nassert solution(3) == '0/1'\n"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1') == '1/2'\nassert solution('3') == '0/1'\n"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '1/2', \"Incorrect output\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n\") == \"1 0 1 0 0\\n\"\nassert solution(\"5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\\n\") == \"4 3 2 1 0\\n\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n\") == \"1 0 1 0 0\\n\"\nassert solution(\"5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\\n\") == \"4 3 2 1 0\\n\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n\") == \"1 0 1 0 0\\n\"\nassert solution(\"5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\\n\") == \"4 3 2 1 0\\n\"\n"
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n\") == \"1 0 1 0 0\\n\"\nassert solution(\"5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\\n\") == \"4 3 2 1 0\\n\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n\") == \"1 0 1 0 0\\n\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n') == '1 0 1 0 0'\nassert solution('9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\\n') == '4 3 2 1 0'"
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n') == '1 0 1 0 0\\n'"
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\") == \"1 0 1 0 0\\n\"\nassert solution(\"5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\") == \"4 3 2 1 0\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6') == '1 0 1 0 0\\n'\nassert solution('5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1') == '4 3 2 1 0\\n'\n\nfrom collections import defaultdict\n"
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\") == \"1 0 1 0 0\\n\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Actual: {solution(input())}\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n4 5 1 7 4\\n\") == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n4 5 1 7 4\\n\") == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\\n\"\nassert solution(\"2\\n1 2\\n\") == \"0\\n2\\n11\\n11\\n\"\nassert solution(\"3\\n1 1 1\\n\") == \"1\\n0\\n11\\n11\\n\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\"\nassert solution(input()) == \"0\\n2\\n11\\n11\"\nassert solution(input()) == \"1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"\"\"\n1\n8\n01010\n00011\n01010\n10010\n00011\n11000\n00011\n11000\n\"\"\"\n\nimport string"
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n4 5 1 7 4\\n\") == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\"\nassert solution(\"2\\n1 2\\n\") == \"0\\n2\\n11\\n11\"\nassert solution(\"3\\n1 1 1\\n\") == \"1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n4 5 1 7 4\\n\") == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\"\nassert solution(\"2\\n1 2\\n\") == \"0\\n2\\n11\\n11\"\nassert solution(\"3\\n1 1 1\\n\") == \"1\\n0\\n\"\nassert solution(\"1\\n0\\n\") == \"0\"\nassert solution(\"1\\n0\\n\") == \"0\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n\") == \"1\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\"\nassert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\"\nassert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\"\nassert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\"\nassert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '1\\n', \"The cube below can be constructed.\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n\") == \"1\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\"\n"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1\\n\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5') == '1'"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5') == '1'\nassert solution('6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n8 0 0 0') == '2'\n"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\"\n"
    }
]